
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.140
 Yosys 0.18+10 (git sha1 92b23013e, gcc 11.2.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Sep22_SW_Release, released at Fri Sep 30 20:01:32 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k ex9.v

yosys> verific -vlog2k ex9.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Sep22_SW_Release, released at Fri Sep 30 20:01:32 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'ex9.v'

yosys> synth_rs -top top -tech genesis2 -goal area -de -verilog synthesized.v

3. Executing synth_rs pass: v0.4.116

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis2/cells_sim.v +/rapidsilicon/genesis2/dsp_sim.v +/rapidsilicon/genesis2/brams_sim.v

3.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/cells_sim.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dff'.
Generating RTLIL representation for module `\dffn'.
Generating RTLIL representation for module `\sdff'.
Generating RTLIL representation for module `\sdffn'.
Generating RTLIL representation for module `\dffr'.
Generating RTLIL representation for module `\dffnr'.
Generating RTLIL representation for module `\dffe'.
Generating RTLIL representation for module `\dffne'.
Generating RTLIL representation for module `\sdffre'.
Generating RTLIL representation for module `\sdffnre'.
Generating RTLIL representation for module `\dffre'.
Generating RTLIL representation for module `\dffnre'.
Generating RTLIL representation for module `\latch'.
Generating RTLIL representation for module `\latchn'.
Generating RTLIL representation for module `\latchr'.
Generating RTLIL representation for module `\latchnr'.
Generating RTLIL representation for module `\fa_1bit'.
Successfully finished Verilog frontend.

3.3. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/dsp_sim.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/dsp_sim.v' to AST representation.
Generating RTLIL representation for module `\RS_DSP'.
Generating RTLIL representation for module `\RS_DSP_MULT'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTADD'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTACC'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_ports'.
Successfully finished Verilog frontend.

3.4. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/brams_sim.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/brams_sim.v' to AST representation.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\RS_TDP36K'.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top top

3.5. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] ex9.v:7: compiling module 'top'
Importing module top.

3.5.1. Analyzing design hierarchy..
Top module:  \top

3.5.2. Analyzing design hierarchy..
Top module:  \top
Removed 0 unused modules.

yosys> proc

3.6. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.6.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.6.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.6.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.6.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.6.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.6.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.6.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.6.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.6.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.6.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.6.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.6.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> demuxmap

3.7. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> flatten

3.8. Executing FLATTEN pass (flatten design).

yosys> demuxmap

3.9. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> tribuf -logic -formal

3.10. Executing TRIBUF pass.

yosys> deminout

3.11. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_clean

3.13. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 665 unused wires.
<suppressed ~667 debug messages>

yosys> check

3.14. Executing CHECK pass (checking for obvious problems).
Checking module top...
Found and reported 0 problems.

yosys> opt_expr

3.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~131 debug messages>

yosys> opt_merge -nomux

3.16. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $verific$i1059$ex9.v:868$1723.
    dead port 2/2 on $mux $verific$i1059$ex9.v:868$1723.
    dead port 1/2 on $mux $verific$i125$ex9.v:401$789.
    dead port 2/2 on $mux $verific$i125$ex9.v:401$789.
    dead port 1/2 on $mux $verific$i1251$ex9.v:964$1915.
    dead port 2/2 on $mux $verific$i1251$ex9.v:964$1915.
    dead port 1/2 on $mux $verific$i1253$ex9.v:965$1917.
    dead port 2/2 on $mux $verific$i1253$ex9.v:965$1917.
    dead port 1/2 on $mux $verific$i1269$ex9.v:973$1933.
    dead port 2/2 on $mux $verific$i1269$ex9.v:973$1933.
    dead port 1/2 on $mux $verific$i1277$ex9.v:977$1941.
    dead port 2/2 on $mux $verific$i1277$ex9.v:977$1941.
    dead port 1/2 on $mux $verific$i1305$ex9.v:991$1969.
    dead port 2/2 on $mux $verific$i1305$ex9.v:991$1969.
    dead port 1/2 on $mux $verific$i1321$ex9.v:999$1985.
    dead port 2/2 on $mux $verific$i1321$ex9.v:999$1985.
    dead port 1/2 on $mux $verific$i147$ex9.v:412$811.
    dead port 2/2 on $mux $verific$i147$ex9.v:412$811.
    dead port 1/2 on $mux $verific$i149$ex9.v:413$813.
    dead port 2/2 on $mux $verific$i149$ex9.v:413$813.
    dead port 1/2 on $mux $verific$i153$ex9.v:415$817.
    dead port 2/2 on $mux $verific$i153$ex9.v:415$817.
    dead port 1/2 on $mux $verific$i155$ex9.v:416$819.
    dead port 2/2 on $mux $verific$i155$ex9.v:416$819.
    dead port 1/2 on $mux $verific$i161$ex9.v:419$825.
    dead port 2/2 on $mux $verific$i161$ex9.v:419$825.
    dead port 1/2 on $mux $verific$i163$ex9.v:420$827.
    dead port 2/2 on $mux $verific$i163$ex9.v:420$827.
    dead port 1/2 on $mux $verific$i169$ex9.v:423$833.
    dead port 2/2 on $mux $verific$i169$ex9.v:423$833.
    dead port 1/2 on $mux $verific$i1071$ex9.v:874$1735.
    dead port 2/2 on $mux $verific$i1071$ex9.v:874$1735.
    dead port 1/2 on $mux $verific$i237$ex9.v:457$901.
    dead port 2/2 on $mux $verific$i237$ex9.v:457$901.
    dead port 1/2 on $mux $verific$i1011$ex9.v:844$1675.
    dead port 2/2 on $mux $verific$i1011$ex9.v:844$1675.
    dead port 1/2 on $mux $verific$i269$ex9.v:473$933.
    dead port 2/2 on $mux $verific$i269$ex9.v:473$933.
    dead port 1/2 on $mux $verific$i271$ex9.v:474$935.
    dead port 2/2 on $mux $verific$i271$ex9.v:474$935.
    dead port 1/2 on $mux $verific$i277$ex9.v:477$941.
    dead port 2/2 on $mux $verific$i277$ex9.v:477$941.
    dead port 1/2 on $mux $verific$i279$ex9.v:478$943.
    dead port 2/2 on $mux $verific$i279$ex9.v:478$943.
    dead port 1/2 on $mux $verific$i283$ex9.v:480$947.
    dead port 2/2 on $mux $verific$i283$ex9.v:480$947.
    dead port 1/2 on $mux $verific$i285$ex9.v:481$949.
    dead port 1/2 on $mux $verific$i1153$ex9.v:915$1817.
    dead port 2/2 on $mux $verific$i1153$ex9.v:915$1817.
    dead port 1/2 on $mux $verific$i1063$ex9.v:870$1727.
    dead port 2/2 on $mux $verific$i1063$ex9.v:870$1727.
    dead port 1/2 on $mux $verific$i1065$ex9.v:871$1729.
    dead port 2/2 on $mux $verific$i1065$ex9.v:871$1729.
    dead port 1/2 on $mux $verific$i1067$ex9.v:872$1731.
    dead port 2/2 on $mux $verific$i1067$ex9.v:872$1731.
    dead port 1/2 on $mux $verific$i1013$ex9.v:845$1677.
    dead port 2/2 on $mux $verific$i1013$ex9.v:845$1677.
    dead port 1/2 on $mux $verific$i393$ex9.v:535$1057.
    dead port 2/2 on $mux $verific$i393$ex9.v:535$1057.
    dead port 1/2 on $mux $verific$i397$ex9.v:537$1061.
    dead port 2/2 on $mux $verific$i397$ex9.v:537$1061.
    dead port 1/2 on $mux $verific$i469$ex9.v:573$1133.
    dead port 2/2 on $mux $verific$i469$ex9.v:573$1133.
    dead port 1/2 on $mux $verific$i479$ex9.v:578$1143.
    dead port 2/2 on $mux $verific$i479$ex9.v:578$1143.
    dead port 1/2 on $mux $verific$i485$ex9.v:581$1149.
    dead port 2/2 on $mux $verific$i485$ex9.v:581$1149.
    dead port 1/2 on $mux $verific$i603$ex9.v:640$1267.
    dead port 2/2 on $mux $verific$i603$ex9.v:640$1267.
    dead port 1/2 on $mux $verific$i605$ex9.v:641$1269.
    dead port 2/2 on $mux $verific$i605$ex9.v:641$1269.
    dead port 1/2 on $mux $verific$i607$ex9.v:642$1271.
    dead port 2/2 on $mux $verific$i607$ex9.v:642$1271.
    dead port 1/2 on $mux $verific$i613$ex9.v:645$1277.
    dead port 2/2 on $mux $verific$i613$ex9.v:645$1277.
    dead port 1/2 on $mux $verific$i617$ex9.v:647$1281.
    dead port 2/2 on $mux $verific$i617$ex9.v:647$1281.
    dead port 1/2 on $mux $verific$i619$ex9.v:648$1283.
    dead port 2/2 on $mux $verific$i619$ex9.v:648$1283.
    dead port 1/2 on $mux $verific$i621$ex9.v:649$1285.
    dead port 2/2 on $mux $verific$i621$ex9.v:649$1285.
    dead port 1/2 on $mux $verific$i1057$ex9.v:867$1721.
    dead port 2/2 on $mux $verific$i1057$ex9.v:867$1721.
    dead port 1/2 on $mux $verific$i649$ex9.v:663$1313.
    dead port 2/2 on $mux $verific$i649$ex9.v:663$1313.
    dead port 1/2 on $mux $verific$i651$ex9.v:664$1315.
    dead port 2/2 on $mux $verific$i651$ex9.v:664$1315.
    dead port 1/2 on $mux $verific$i653$ex9.v:665$1317.
    dead port 2/2 on $mux $verific$i653$ex9.v:665$1317.
    dead port 1/2 on $mux $verific$i657$ex9.v:667$1321.
    dead port 2/2 on $mux $verific$i657$ex9.v:667$1321.
    dead port 1/2 on $mux $verific$i659$ex9.v:668$1323.
    dead port 2/2 on $mux $verific$i659$ex9.v:668$1323.
    dead port 1/2 on $mux $verific$i669$ex9.v:673$1333.
    dead port 2/2 on $mux $verific$i669$ex9.v:673$1333.
    dead port 1/2 on $mux $verific$i1069$ex9.v:873$1733.
    dead port 2/2 on $mux $verific$i1069$ex9.v:873$1733.
    dead port 1/2 on $mux $verific$i1061$ex9.v:869$1725.
    dead port 2/2 on $mux $verific$i1061$ex9.v:869$1725.
    dead port 1/2 on $mux $verific$i745$ex9.v:711$1409.
    dead port 2/2 on $mux $verific$i745$ex9.v:711$1409.
    dead port 1/2 on $mux $verific$i775$ex9.v:726$1439.
    dead port 2/2 on $mux $verific$i775$ex9.v:726$1439.
    dead port 1/2 on $mux $verific$i779$ex9.v:728$1443.
    dead port 2/2 on $mux $verific$i779$ex9.v:728$1443.
    dead port 1/2 on $mux $verific$i783$ex9.v:730$1447.
    dead port 2/2 on $mux $verific$i783$ex9.v:730$1447.
    dead port 1/2 on $mux $verific$i1053$ex9.v:865$1717.
    dead port 2/2 on $mux $verific$i1053$ex9.v:865$1717.
    dead port 1/2 on $mux $verific$i1149$ex9.v:913$1813.
    dead port 2/2 on $mux $verific$i1149$ex9.v:913$1813.
    dead port 1/2 on $mux $verific$i1151$ex9.v:914$1815.
    dead port 2/2 on $mux $verific$i1151$ex9.v:914$1815.
    dead port 1/2 on $mux $verific$i1047$ex9.v:862$1711.
    dead port 2/2 on $mux $verific$i1047$ex9.v:862$1711.
    dead port 1/2 on $mux $verific$i1049$ex9.v:863$1713.
    dead port 2/2 on $mux $verific$i1049$ex9.v:863$1713.
    dead port 1/2 on $mux $verific$i1051$ex9.v:864$1715.
    dead port 2/2 on $mux $verific$i1051$ex9.v:864$1715.
    dead port 1/2 on $mux $verific$i1055$ex9.v:866$1719.
    dead port 2/2 on $mux $verific$i1055$ex9.v:866$1719.
    dead port 1/2 on $mux $verific$i1197$ex9.v:937$1861.
    dead port 2/2 on $mux $verific$i1197$ex9.v:937$1861.
    dead port 1/2 on $mux $verific$i949$ex9.v:813$1613.
    dead port 2/2 on $mux $verific$i949$ex9.v:813$1613.
    dead port 1/2 on $mux $verific$i985$ex9.v:831$1649.
    dead port 2/2 on $mux $verific$i985$ex9.v:831$1649.
    dead port 1/2 on $mux $verific$i987$ex9.v:832$1651.
    dead port 2/2 on $mux $verific$i987$ex9.v:832$1651.
    dead port 1/2 on $mux $verific$i989$ex9.v:833$1653.
    dead port 2/2 on $mux $verific$i989$ex9.v:833$1653.
    dead port 1/2 on $mux $verific$i1203$ex9.v:940$1867.
    dead port 2/2 on $mux $verific$i1203$ex9.v:940$1867.
    dead port 1/2 on $mux $verific$i993$ex9.v:835$1657.
    dead port 2/2 on $mux $verific$i993$ex9.v:835$1657.
Removed 135 multiplexer ports.
<suppressed ~128 debug messages>

yosys> opt_reduce

3.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~15 debug messages>
Removed a total of 5 cells.

yosys> opt_share

3.20. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.21. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.22. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 19 unused cells and 87 unused wires.
<suppressed ~106 debug messages>

yosys> opt_expr

3.23. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~2 debug messages>

yosys> opt_muxtree

3.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $verific$i1291$ex9.v:984$1955.
    dead port 2/2 on $mux $verific$i1291$ex9.v:984$1955.
    dead port 2/2 on $mux $verific$i1295$ex9.v:986$1959.
    dead port 2/2 on $mux $verific$i1297$ex9.v:987$1961.
    dead port 1/2 on $mux $verific$i1299$ex9.v:988$1963.
Removed 5 multiplexer ports.
<suppressed ~118 debug messages>

yosys> opt_reduce

3.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
  Optimizing cells in module \top.
Performed a total of 2 changes.

yosys> opt_merge

3.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_share

3.27. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.28. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.29. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.30. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_muxtree

3.31. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~117 debug messages>

yosys> opt_reduce

3.32. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_share

3.34. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.35. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.36. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr

3.37. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
MAX OPT ITERATION = 3

yosys> fsm -encoding binary

3.38. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.38.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.38.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.38.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.38.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> fsm_opt

3.38.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.38.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.38.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.38.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt_expr

3.39. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge -nomux

3.40. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.41. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~117 debug messages>

yosys> opt_reduce

3.42. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.43. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_share

3.44. Executing OPT_SHARE pass.

yosys> opt_dff -sat

3.45. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.46. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr

3.47. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
MAX OPT ITERATION = 1

yosys> wreduce -keepdc

3.48. Executing WREDUCE pass (reducing word size of cells).

yosys> peepopt

3.49. Executing PEEPOPT pass (run peephole optimizers).

yosys> opt_clean

3.50. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> demuxmap

3.51. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> stat

3.52. Printing statistics.

=== top ===

   Number of wires:                587
   Number of wire bits:            587
   Number of public wires:         587
   Number of public wire bits:     587
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                434
     $mux                          398
     $not                           36


yosys> wreduce t:$mul

3.53. Executing WREDUCE pass (reducing word size of cells).

yosys> rs_dsp_macc -genesis2 -max_dsp 154

3.54. Executing RS_DSP_MACC pass.

yosys> techmap -map +/mul2dsp_check_maxwidth.v -D DSP_A_MAXWIDTH=20 -D DSP_B_MAXWIDTH=18 -D DSP_A_MINWIDTH=11 -D DSP_B_MINWIDTH=10 -D DSP_NAME=$__RS_MUL20X18 a:valid_map

3.55. Executing TECHMAP pass (map to technology primitives).

3.55.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/mul2dsp_check_maxwidth.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/mul2dsp_check_maxwidth.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

3.55.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

yosys> stat

3.56. Printing statistics.

=== top ===

   Number of wires:                587
   Number of wire bits:            587
   Number of public wires:         587
   Number of public wire bits:     587
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                434
     $mux                          398
     $not                           36


yosys> chtype -set $mul t:$__soft_mul

yosys> techmap -map +/rapidsilicon/genesis2/dsp_map.v -D USE_DSP_CFG_PARAMS=0

3.57. Executing TECHMAP pass (map to technology primitives).

3.57.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/dsp_map.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/dsp_map.v' to AST representation.
Generating RTLIL representation for module `\$__RS_MUL20X18'.
Successfully finished Verilog frontend.

3.57.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

yosys> techmap -map +/rapidsilicon/genesis2/dsp_final_map.v

3.58. Executing TECHMAP pass (map to technology primitives).

3.58.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/dsp_final_map.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/dsp_final_map.v' to AST representation.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Successfully finished Verilog frontend.

3.58.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

yosys> rs-pack-dsp-regs

3.59. Executing rs_pack_dsp_regs pass.

yosys> rs_dsp_io_regs

3.60. Executing RS_DSP_IO_REGS pass.

yosys> alumacc

3.61. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module top:
  created 0 $alu and 0 $macc cells.

yosys> opt_expr

3.62. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge -nomux

3.63. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.64. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~117 debug messages>

yosys> opt_reduce

3.65. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.66. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_share

3.67. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe

3.68. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.69. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr

3.70. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
MAX OPT ITERATION = 1

yosys> stat

3.71. Printing statistics.

=== top ===

   Number of wires:                587
   Number of wire bits:            587
   Number of public wires:         587
   Number of public wire bits:     587
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                434
     $mux                          398
     $not                           36


yosys> memory -nomap

3.72. Executing MEMORY pass.

yosys> opt_mem

3.72.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.72.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.72.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.72.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.72.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.72.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> memory_share

3.72.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.72.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.72.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> memory_collect

3.72.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.73. Printing statistics.

=== top ===

   Number of wires:                587
   Number of wire bits:            587
   Number of public wires:         587
   Number of public wire bits:     587
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                434
     $mux                          398
     $not                           36


yosys> muxpack

3.74. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~300 debug messages>

yosys> opt_clean

3.75. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> memory_libmap -lib +/rapidsilicon/genesis2/brams_new_swap.txt -limit 150 a:read_swapped

3.76. Executing MEMORY_LIBMAP pass (mapping memories to cells).

yosys> memory_libmap -lib +/rapidsilicon/genesis2/brams_new.txt -limit 150

3.77. Executing MEMORY_LIBMAP pass (mapping memories to cells).

yosys> rs_bram_split -new_mapping

3.78. Executing Rs_BRAM_Split pass.

yosys> techmap -autoproc -map +/rapidsilicon/genesis2/brams_map_new.v

3.79. Executing TECHMAP pass (map to technology primitives).

3.79.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/brams_map_new.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/brams_map_new.v' to AST representation.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_TDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM18_TDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM18_SDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_SDP'.
Successfully finished Verilog frontend.

3.79.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~6 debug messages>

yosys> techmap -map +/rapidsilicon/genesis2/brams_final_map_new.v

3.80. Executing TECHMAP pass (map to technology primitives).

3.80.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/brams_final_map_new.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/brams_final_map_new.v' to AST representation.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Successfully finished Verilog frontend.

3.80.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

yosys> pmuxtree

3.81. Executing PMUXTREE pass.

yosys> muxpack

3.82. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~300 debug messages>

yosys> memory_map

3.83. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> stat

3.84. Printing statistics.

=== top ===

   Number of wires:                587
   Number of wire bits:            587
   Number of public wires:         587
   Number of public wire bits:     587
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                434
     $mux                          398
     $not                           36


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis2/arith_map.v

3.85. Executing TECHMAP pass (map to technology primitives).

3.85.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.85.2. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/arith_map.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.85.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $not.
No more expansions possible.
<suppressed ~505 debug messages>

yosys> stat

3.86. Printing statistics.

=== top ===

   Number of wires:                587
   Number of wire bits:            587
   Number of public wires:         587
   Number of public wire bits:     587
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                434
     $_MUX_                        398
     $_NOT_                         36


yosys> opt_expr

3.87. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~7 debug messages>

yosys> opt_merge -nomux

3.88. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~30 debug messages>
Removed a total of 10 cells.

yosys> opt_muxtree

3.89. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.90. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.91. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_share

3.92. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe

3.93. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.94. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr

3.95. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1 debug messages>

yosys> opt_muxtree

3.96. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.97. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.98. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_share

3.99. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe

3.100. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.101. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr

3.102. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
MAX OPT ITERATION = 2

yosys> opt_expr -full

3.103. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~166 debug messages>

yosys> techmap -map +/techmap.v

3.104. Executing TECHMAP pass (map to technology primitives).

3.104.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.104.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> stat

3.105. Printing statistics.

=== top ===

   Number of wires:                587
   Number of wire bits:            587
   Number of public wires:         587
   Number of public wire bits:     587
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                416
     $_AND_                         92
     $_MUX_                        214
     $_NOT_                         36
     $_OR_                          74


yosys> dfflegalize -cell $_SDFF_???_ 0 -cell $_SDFFE_????_ 0 t:$_SDFFCE_*

3.106. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.107. Printing statistics.

=== top ===

   Number of wires:                587
   Number of wire bits:            587
   Number of public wires:         587
   Number of public wire bits:     587
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                416
     $_AND_                         92
     $_MUX_                        214
     $_NOT_                         36
     $_OR_                          74


yosys> opt_expr

3.108. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge -nomux

3.109. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_muxtree

3.110. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.111. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.112. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -sat

3.113. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.114. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr

3.115. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
MAX OPT ITERATION = 1

yosys> abc -dff -keepff

3.116. Executing ABC pass (technology mapping using ABC).

3.116.1. Summary of detected clock domains:
  415 cells in clk={ }, en={ }, arst={ }, srst={ }

3.116.2. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
No matching clock domain found. Not extracting any FF cells.
Extracted 415 gates and 426 wires to a netlist network with 9 inputs and 1 outputs.

3.116.2.1. Executing ABC.

yosys> abc -dff -keepff

3.117. Executing ABC pass (technology mapping using ABC).

3.117.1. Summary of detected clock domains:
  295 cells in clk={ }, en={ }, arst={ }, srst={ }

3.117.2. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
No matching clock domain found. Not extracting any FF cells.
Extracted 295 gates and 304 wires to a netlist network with 9 inputs and 1 outputs.

3.117.2.1. Executing ABC.

yosys> abc -dff -keepff

3.118. Executing ABC pass (technology mapping using ABC).

3.118.1. Summary of detected clock domains:
  280 cells in clk={ }, en={ }, arst={ }, srst={ }

3.118.2. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
No matching clock domain found. Not extracting any FF cells.
Extracted 280 gates and 289 wires to a netlist network with 9 inputs and 1 outputs.

3.118.2.1. Executing ABC.

yosys> abc -dff -keepff

3.119. Executing ABC pass (technology mapping using ABC).

3.119.1. Summary of detected clock domains:
  255 cells in clk={ }, en={ }, arst={ }, srst={ }

3.119.2. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
No matching clock domain found. Not extracting any FF cells.
Extracted 255 gates and 264 wires to a netlist network with 9 inputs and 1 outputs.

3.119.2.1. Executing ABC.

yosys> opt_ffinv

3.120. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt_expr

3.121. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge -nomux

3.122. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.123. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.124. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.125. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_share

3.126. Executing OPT_SHARE pass.

yosys> opt_dff -sat

3.127. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.128. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 1338 unused wires.
<suppressed ~472 debug messages>

yosys> opt_expr

3.129. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
MAX OPT ITERATION = 1

yosys> bmuxmap

3.130. Executing BMUXMAP pass.

yosys> demuxmap

3.131. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> abc -script /tmp/yosys_hyzxdc/abc_tmp_1.scr

3.132. Executing ABC pass (technology mapping using ABC).

3.132.1. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Extracted 249 gates and 258 wires to a netlist network with 9 inputs and 1 outputs.

3.132.1.1. Executing ABC.
DE:   #PIs =   9  #Luts =    71  Max Lvl =   4  Avg Lvl =   4.00  [   0.41 sec. at Pass 0]{firstMap}[1]
DE:   #PIs =   9  #Luts =    11  Max Lvl =   3  Avg Lvl =   3.00  [   0.84 sec. at Pass 1]{initMapFlow}[3]
DE:   #PIs =   9  #Luts =    11  Max Lvl =   3  Avg Lvl =   3.00  [   0.24 sec. at Pass 2]{map}[2]
DE:   #PIs =   9  #Luts =    11  Max Lvl =   3  Avg Lvl =   3.00  [   0.34 sec. at Pass 3]{postMap}[6]
DE:   #PIs =   9  #Luts =    11  Max Lvl =   3  Avg Lvl =   3.00  [   0.26 sec. at Pass 4]{map}[12]
DE:   #PIs =   9  #Luts =    11  Max Lvl =   3  Avg Lvl =   3.00  [   0.41 sec. at Pass 5]{postMap}[36]
DE:   #PIs =   9  #Luts =    11  Max Lvl =   3  Avg Lvl =   3.00  [   1.72 sec. at Pass 6]{pushMap}[100]
DE:   #PIs =   9  #Luts =    11  Max Lvl =   3  Avg Lvl =   3.00  [   0.63 sec. at Pass 7]{finalMap}[100]

yosys> opt_expr

3.133. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge -nomux

3.134. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.135. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.136. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.137. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_share

3.138. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe

3.139. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.140. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 258 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.141. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
MAX OPT ITERATION = 1

yosys> opt_ffinv

3.142. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> stat

3.143. Printing statistics.

=== top ===

   Number of wires:                126
   Number of wire bits:            126
   Number of public wires:         116
   Number of public wire bits:     116
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 11
     $lut                           11


yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFFE_??_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_SDFF_???_ 0 -cell $_SDFFE_????_ 0 -cell $_DLATCH_?_ 0 -cell $_DLATCH_???_ 0

3.144. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.145. Printing statistics.

=== top ===

   Number of wires:                126
   Number of wire bits:            126
   Number of public wires:         116
   Number of public wire bits:     116
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 11
     $lut                           11


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis2/ffs_map.v

3.146. Executing TECHMAP pass (map to technology primitives).

3.146.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.146.2. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/ffs_map.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_PP0N_'.
Generating RTLIL representation for module `\$_SDFFE_PN0P_'.
Generating RTLIL representation for module `\$_SDFFE_PN0N_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFFE_PP1N_'.
Generating RTLIL representation for module `\$_SDFFE_PN1P_'.
Generating RTLIL representation for module `\$_SDFFE_PN1N_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP0N_'.
Generating RTLIL representation for module `\$_SDFFE_NN0P_'.
Generating RTLIL representation for module `\$_SDFFE_NN0N_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1N_'.
Generating RTLIL representation for module `\$_SDFFE_NN1P_'.
Generating RTLIL representation for module `\$_SDFFE_NN1N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_PP0_'.
Generating RTLIL representation for module `\$_DLATCH_NP0_'.
Generating RTLIL representation for module `\$_DLATCH_PN0_'.
Generating RTLIL representation for module `\$_DLATCH_NN0_'.
Generating RTLIL representation for module `\$_DLATCH_PP1_'.
Generating RTLIL representation for module `\$_DLATCH_NP1_'.
Generating RTLIL representation for module `\$_DLATCH_PN1_'.
Generating RTLIL representation for module `\$_DLATCH_NN1_'.
Successfully finished Verilog frontend.

3.146.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
No more expansions possible.
<suppressed ~146 debug messages>

yosys> opt_expr -mux_undef

3.147. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~425 debug messages>

yosys> simplemap

3.148. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.149. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge

3.150. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~201 debug messages>
Removed a total of 67 cells.

yosys> opt_dff -nodffe -nosdff

3.151. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.152. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 22 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.153. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~9 debug messages>

yosys> opt_merge -nomux

3.154. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.155. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.156. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.157. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_share

3.158. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.159. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.160. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.161. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
MAX OPT ITERATION = 1

yosys> abc -script /tmp/yosys_hyzxdc/abc_tmp_2.scr

3.162. Executing ABC pass (technology mapping using ABC).

3.162.1. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Extracted 136 gates and 147 wires to a netlist network with 9 inputs and 1 outputs.

3.162.1.1. Executing ABC.
DE:   #PIs =   9  #Luts =    11  Max Lvl =   3  Avg Lvl =   3.00  [   0.59 sec. at Pass 0]{firstMap}[1]
DE:   #PIs =   9  #Luts =    11  Max Lvl =   3  Avg Lvl =   3.00  [   1.63 sec. at Pass 1]{initMapFlow}[3]
DE:   #PIs =   9  #Luts =    11  Max Lvl =   3  Avg Lvl =   3.00  [   1.21 sec. at Pass 2]{map}[2]
DE:   #PIs =   9  #Luts =    11  Max Lvl =   3  Avg Lvl =   3.00  [   0.53 sec. at Pass 3]{postMap}[6]
DE:   #PIs =   9  #Luts =    11  Max Lvl =   3  Avg Lvl =   3.00  [   0.19 sec. at Pass 4]{map}[12]
DE:   #PIs =   9  #Luts =    11  Max Lvl =   3  Avg Lvl =   3.00  [   0.65 sec. at Pass 5]{postMap}[36]
DE:   #PIs =   9  #Luts =    10  Max Lvl =   3  Avg Lvl =   3.00  [   2.34 sec. at Pass 6]{pushMap}[100]
DE:   #PIs =   9  #Luts =    10  Max Lvl =   3  Avg Lvl =   3.00  [   1.03 sec. at Pass 7]{map}[100]
DE:   #PIs =   9  #Luts =    10  Max Lvl =   3  Avg Lvl =   3.00  [   1.39 sec. at Pass 8]{postMap}[100]
DE:   #PIs =   9  #Luts =    10  Max Lvl =   3  Avg Lvl =   3.00  [   1.48 sec. at Pass 9]{map}[100]
DE:   #PIs =   9  #Luts =    10  Max Lvl =   3  Avg Lvl =   3.00  [   4.69 sec. at Pass 10]{pushMap}[100]
DE:   #PIs =   9  #Luts =    10  Max Lvl =   3  Avg Lvl =   3.00  [   1.05 sec. at Pass 11]{finalMap}[100]

yosys> opt_expr

3.163. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge -nomux

3.164. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.165. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.166. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.167. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_share

3.168. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe

3.169. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.170. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 60 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.171. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
MAX OPT ITERATION = 1

yosys> hierarchy -check

3.172. Executing HIERARCHY pass (managing design hierarchy).

3.172.1. Analyzing design hierarchy..
Top module:  \top

3.172.2. Analyzing design hierarchy..
Top module:  \top
Removed 0 unused modules.

yosys> stat

3.173. Printing statistics.

=== top ===

   Number of wires:                125
   Number of wire bits:            125
   Number of public wires:         116
   Number of public wire bits:     116
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 10
     $lut                           10


yosys> opt_clean -purge

3.174. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 106 unused wires.
<suppressed ~106 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.175. Executing Verilog backend.
Dumping module `\top'.

End of script. Logfile hash: 5792a80f99, CPU: user 1.00s system 0.04s, MEM: 25.80 MB peak
Yosys 0.18+10 (git sha1 92b23013e, gcc 11.2.0 -fPIC -Os)
Time spent: 99% 6x abc (230 sec), 0% 26x opt_expr (0 sec), ...
real 29.25
user 170.93
sys 60.82
