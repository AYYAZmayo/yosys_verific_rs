
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.140
 Yosys 0.18+10 (git sha1 92b23013e, gcc 11.2.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Sep22_SW_Release, released at Fri Sep 30 20:01:32 2022.

yosys> verilog_defaults -add -I.

yosys> read -vhdl xtea.vhd round_f.vhd key_schedule.vhd

yosys> verific -vhdl xtea.vhd round_f.vhd key_schedule.vhd

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Sep22_SW_Release, released at Fri Sep 30 20:01:32 2022.
VERIFIC-INFO [VHDL-1504] default VHDL library search path is now "/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008"
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'xtea.vhd'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_1164' from file '/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_1164.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.standard' from file '/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/standard.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.textio' from file '/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/textio.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.numeric_std' from file '/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/numeric_std.vdb'
VERIFIC-INFO [VHDL-1012] xtea.vhd:20: analyzing entity 'xtea'
VERIFIC-INFO [VHDL-1010] xtea.vhd:30: analyzing architecture 'behavioral'
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'round_f.vhd'
VERIFIC-INFO [VHDL-1012] round_f.vhd:21: analyzing entity 'round_f'
VERIFIC-INFO [VHDL-1010] round_f.vhd:27: analyzing architecture 'behavioral'
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'key_schedule.vhd'
VERIFIC-INFO [VHDL-1012] key_schedule.vhd:22: analyzing entity 'key_schedule'
VERIFIC-INFO [VHDL-1010] key_schedule.vhd:31: analyzing architecture 'behavioral'

yosys> synth_rs -top xtea -tech genesis2 -goal area -de -verilog synthesized.v

3. Executing synth_rs pass: v0.4.116

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis2/cells_sim.v +/rapidsilicon/genesis2/dsp_sim.v +/rapidsilicon/genesis2/brams_sim.v

3.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/cells_sim.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dff'.
Generating RTLIL representation for module `\dffn'.
Generating RTLIL representation for module `\sdff'.
Generating RTLIL representation for module `\sdffn'.
Generating RTLIL representation for module `\dffr'.
Generating RTLIL representation for module `\dffnr'.
Generating RTLIL representation for module `\dffe'.
Generating RTLIL representation for module `\dffne'.
Generating RTLIL representation for module `\sdffre'.
Generating RTLIL representation for module `\sdffnre'.
Generating RTLIL representation for module `\dffre'.
Generating RTLIL representation for module `\dffnre'.
Generating RTLIL representation for module `\latch'.
Generating RTLIL representation for module `\latchn'.
Generating RTLIL representation for module `\latchr'.
Generating RTLIL representation for module `\latchnr'.
Generating RTLIL representation for module `\fa_1bit'.
Successfully finished Verilog frontend.

3.3. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/dsp_sim.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/dsp_sim.v' to AST representation.
Generating RTLIL representation for module `\RS_DSP'.
Generating RTLIL representation for module `\RS_DSP_MULT'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTADD'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTACC'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_ports'.
Successfully finished Verilog frontend.

3.4. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/brams_sim.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/brams_sim.v' to AST representation.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\RS_TDP36K'.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top xtea

3.5. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VHDL-1067] xtea.vhd:20: processing 'xtea(Behavioral)'
VERIFIC-INFO [VHDL-1067] key_schedule.vhd:22: processing 'key_schedule(Behavioral)'
VERIFIC-WARNING [VHDL-1851] key_schedule.vhd:66: actual of size 32 will overflow return type 'natural' in feedthrough function 'to_integer'
VERIFIC-WARNING [VHDL-1851] key_schedule.vhd:69: actual of size 32 will overflow return type 'natural' in feedthrough function 'to_integer'
VERIFIC-WARNING [VHDL-1851] key_schedule.vhd:74: actual of size 32 will overflow return type 'natural' in feedthrough function 'to_integer'
VERIFIC-WARNING [VHDL-1851] key_schedule.vhd:76: actual of size 32 will overflow return type 'natural' in feedthrough function 'to_integer'
VERIFIC-INFO [VHDL-1067] round_f.vhd:21: processing 'round_f(Behavioral)'
Importing module xtea.
Importing module key_schedule(Behavioral).
Importing module round_f(Behavioral).

3.5.1. Analyzing design hierarchy..
Top module:  \xtea
Used module:     \round_f(Behavioral)
Used module:     \key_schedule(Behavioral)

3.5.2. Analyzing design hierarchy..
Top module:  \xtea
Used module:     \round_f(Behavioral)
Used module:     \key_schedule(Behavioral)
Removed 0 unused modules.

yosys> proc

3.6. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.6.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.6.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.6.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.6.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.6.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.6.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.6.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.6.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.6.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.6.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.6.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.6.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module round_f(Behavioral).
Optimizing module key_schedule(Behavioral).
<suppressed ~4 debug messages>
Optimizing module xtea.
<suppressed ~3 debug messages>

yosys> demuxmap

3.7. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> flatten

3.8. Executing FLATTEN pass (flatten design).
Deleting now unused module key_schedule(Behavioral).
Deleting now unused module round_f(Behavioral).
<suppressed ~2 debug messages>

yosys> demuxmap

3.9. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> tribuf -logic -formal

3.10. Executing TRIBUF pass.

yosys> deminout

3.11. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

yosys> opt_clean

3.13. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 1 unused cells and 47 unused wires.
<suppressed ~29 debug messages>

yosys> check

3.14. Executing CHECK pass (checking for obvious problems).
Checking module xtea...
Found and reported 0 problems.

yosys> opt_expr

3.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

yosys> opt_merge -nomux

3.16. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_muxtree

3.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~6 debug messages>

yosys> opt_reduce

3.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_share

3.20. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.21. Executing OPT_DFF pass (perform DFF optimizations).
Removing never-active async load on $verific$v_1_s_reg$xtea.vhd:102$87 ($aldff) from module xtea.
Removing never-active async load on $verific$v_0_s_reg$xtea.vhd:102$88 ($aldff) from module xtea.
Removing never-active async load on $verific$input_a_s_reg$xtea.vhd:102$89 ($aldff) from module xtea.
Removing never-active async load on $verific$cnt_s_reg$xtea.vhd:67$53 ($aldff) from module xtea.
Removing never-active async load on $flatten\KEY_SCHEDULE_0.$verific$sum_s_reg$key_schedule.vhd:80$162 ($aldff) from module xtea.
Removing never-active async load on $flatten\KEY_SCHEDULE_0.$verific$subkey_reg$key_schedule.vhd:80$163 ($aldff) from module xtea.

yosys> opt_clean

3.22. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.23. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
MAX OPT ITERATION = 1

yosys> fsm -encoding binary

3.24. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.24.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.24.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.24.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.24.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..

yosys> fsm_opt

3.24.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.24.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.24.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.24.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt_expr

3.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

yosys> opt_merge -nomux

3.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.27. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~6 debug messages>

yosys> opt_reduce

3.28. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.29. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_share

3.30. Executing OPT_SHARE pass.

yosys> opt_dff -sat

3.31. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $verific$v_1_s_reg$xtea.vhd:102$87 ($dff) from module xtea (D = $verific$n1151$38, Q = \v_1_s).
Adding EN signal on $verific$v_0_s_reg$xtea.vhd:102$88 ($dff) from module xtea (D = $verific$n1184$39, Q = \v_0_s).
Adding EN signal on $verific$input_a_s_reg$xtea.vhd:102$89 ($dff) from module xtea (D = $verific$n953$32, Q = \input_a_s).
Adding SRST signal on $verific$cnt_s_reg$xtea.vhd:67$53 ($dff) from module xtea (D = $verific$n174$9, Q = \cnt_s, rval = 2'00).
Adding EN signal on $flatten\KEY_SCHEDULE_0.$verific$sum_s_reg$key_schedule.vhd:80$162 ($dff) from module xtea (D = $flatten\KEY_SCHEDULE_0.$verific$n1300$124, Q = \KEY_SCHEDULE_0.sum_s).
Adding SRST signal on $flatten\KEY_SCHEDULE_0.$verific$subkey_reg$key_schedule.vhd:80$163 ($dff) from module xtea (D = $flatten\KEY_SCHEDULE_0.$verific$n1234$122, Q = \KEY_SCHEDULE_0.subkey, rval = 0).
Adding EN signal on $auto$ff.cc:262:slice$207 ($sdff) from module xtea (D = $flatten\KEY_SCHEDULE_0.$verific$n1234$122, Q = \KEY_SCHEDULE_0.subkey).

yosys> opt_clean

3.32. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 3 unused cells and 3 unused wires.
<suppressed ~4 debug messages>

yosys> opt_expr

3.33. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
<suppressed ~4 debug messages>

yosys> opt_muxtree

3.34. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~5 debug messages>

yosys> opt_reduce

3.35. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.36. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_share

3.37. Executing OPT_SHARE pass.

yosys> opt_dff -sat

3.38. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.39. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.40. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

yosys> opt_muxtree

3.41. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~5 debug messages>

yosys> opt_reduce

3.42. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.43. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_share

3.44. Executing OPT_SHARE pass.

yosys> opt_dff -sat

3.45. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.46. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..

yosys> opt_expr

3.47. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
MAX OPT ITERATION = 3

yosys> wreduce -keepdc

3.48. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 2) from port B of cell xtea.$verific$add_5$../vhdl_packages/vhdl_2008/src/numeric_std-body.vhdl:482$50 ($add).
Removed top 1 bits (of 2) from port B of cell xtea.$verific$equal_19$xtea.vhd:86$63 ($eq).
Removed top 1 bits (of 33) from port A of cell xtea.$verific$sub_23$xtea.vhd:90$65 ($sub).
Removed top 1 bits (of 33) from port B of cell xtea.$verific$sub_23$xtea.vhd:90$65 ($sub).
Removed top 1 bits (of 33) from port Y of cell xtea.$verific$sub_23$xtea.vhd:90$65 ($sub).
Removed top 1 bits (of 33) from port A of cell xtea.$verific$sub_31$xtea.vhd:98$72 ($sub).
Removed top 1 bits (of 33) from port B of cell xtea.$verific$sub_31$xtea.vhd:98$72 ($sub).
Removed top 1 bits (of 33) from port Y of cell xtea.$verific$sub_31$xtea.vhd:98$72 ($sub).
Removed top 1 bits (of 2) from port B of cell xtea.$auto$opt_dff.cc:195:make_patterns_logic$198 ($ne).
Removed top 1 bits (of 4) from port B of cell xtea.$auto$opt_dff.cc:195:make_patterns_logic$180 ($ne).
Removed top 5 bits (of 32) from port B of cell xtea.$flatten\ROUND_F_0.$verific$xor_5$round_f.vhd:38$172 ($xor).
Removed top 1 bits (of 3) from port B of cell xtea.$auto$opt_dff.cc:195:make_patterns_logic$182 ($ne).
Removed top 30 bits (of 32) from port B of cell xtea.$flatten\KEY_SCHEDULE_0.$verific$and_21$../vhdl_packages/vhdl_2008/src/numeric_std-body.vhdl:3512$144 ($and).
Removed top 30 bits (of 32) from port Y of cell xtea.$flatten\KEY_SCHEDULE_0.$verific$and_21$../vhdl_packages/vhdl_2008/src/numeric_std-body.vhdl:3512$144 ($and).
Removed top 30 bits (of 32) from port A of cell xtea.$flatten\KEY_SCHEDULE_0.$verific$and_21$../vhdl_packages/vhdl_2008/src/numeric_std-body.vhdl:3512$144 ($and).
Removed top 1 bits (of 22) from port A of cell xtea.$flatten\KEY_SCHEDULE_0.$verific$and_53$../vhdl_packages/vhdl_2008/src/numeric_std-body.vhdl:3512$134 ($and).
Removed top 20 bits (of 22) from port B of cell xtea.$flatten\KEY_SCHEDULE_0.$verific$and_53$../vhdl_packages/vhdl_2008/src/numeric_std-body.vhdl:3512$134 ($and).
Removed top 20 bits (of 22) from port Y of cell xtea.$flatten\KEY_SCHEDULE_0.$verific$and_53$../vhdl_packages/vhdl_2008/src/numeric_std-body.vhdl:3512$134 ($and).
Removed top 19 bits (of 21) from port A of cell xtea.$flatten\KEY_SCHEDULE_0.$verific$and_53$../vhdl_packages/vhdl_2008/src/numeric_std-body.vhdl:3512$134 ($and).
Removed top 1 bits (of 33) from port A of cell xtea.$flatten\KEY_SCHEDULE_0.$verific$sub_19$key_schedule.vhd:67$142 ($sub).
Removed top 1 bits (of 33) from port B of cell xtea.$flatten\KEY_SCHEDULE_0.$verific$sub_19$key_schedule.vhd:67$142 ($sub).
Removed top 1 bits (of 33) from port Y of cell xtea.$flatten\KEY_SCHEDULE_0.$verific$sub_19$key_schedule.vhd:67$142 ($sub).
Removed top 30 bits (of 32) from wire xtea.$flatten\KEY_SCHEDULE_0.$verific$n303$102.
Removed top 1 bits (of 33) from wire xtea.$flatten\KEY_SCHEDULE_0.$verific$n469$107.
Removed top 1 bits (of 33) from wire xtea.$verific$n585$21.
Removed top 1 bits (of 33) from wire xtea.$verific$n787$27.

yosys> peepopt

3.49. Executing PEEPOPT pass (run peephole optimizers).

yosys> opt_clean

3.50. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 0 unused cells and 9 unused wires.
<suppressed ~1 debug messages>

yosys> demuxmap

3.51. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> stat

3.52. Printing statistics.

=== xtea ===

   Number of wires:                 83
   Number of wire bits:           2111
   Number of public wires:          32
   Number of public wire bits:    1002
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 60
     $add                            7
     $and                            2
     $bmux                           2
     $dffe                           4
     $eq                             3
     $logic_not                      1
     $mux                           22
     $ne                             4
     $not                            1
     $reduce_and                     3
     $reduce_bool                    4
     $sdff                           1
     $sdffe                          1
     $sub                            3
     $xor                            2


yosys> wreduce t:$mul

3.53. Executing WREDUCE pass (reducing word size of cells).

yosys> rs_dsp_macc -genesis2 -max_dsp 154

3.54. Executing RS_DSP_MACC pass.

yosys> techmap -map +/mul2dsp_check_maxwidth.v -D DSP_A_MAXWIDTH=20 -D DSP_B_MAXWIDTH=18 -D DSP_A_MINWIDTH=11 -D DSP_B_MINWIDTH=10 -D DSP_NAME=$__RS_MUL20X18 a:valid_map

3.55. Executing TECHMAP pass (map to technology primitives).

3.55.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/mul2dsp_check_maxwidth.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/mul2dsp_check_maxwidth.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

3.55.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

yosys> stat

3.56. Printing statistics.

=== xtea ===

   Number of wires:                 83
   Number of wire bits:           2111
   Number of public wires:          32
   Number of public wire bits:    1002
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 60
     $add                            7
     $and                            2
     $bmux                           2
     $dffe                           4
     $eq                             3
     $logic_not                      1
     $mux                           22
     $ne                             4
     $not                            1
     $reduce_and                     3
     $reduce_bool                    4
     $sdff                           1
     $sdffe                          1
     $sub                            3
     $xor                            2


yosys> chtype -set $mul t:$__soft_mul

yosys> techmap -map +/rapidsilicon/genesis2/dsp_map.v -D USE_DSP_CFG_PARAMS=0

3.57. Executing TECHMAP pass (map to technology primitives).

3.57.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/dsp_map.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/dsp_map.v' to AST representation.
Generating RTLIL representation for module `\$__RS_MUL20X18'.
Successfully finished Verilog frontend.

3.57.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

yosys> techmap -map +/rapidsilicon/genesis2/dsp_final_map.v

3.58. Executing TECHMAP pass (map to technology primitives).

3.58.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/dsp_final_map.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/dsp_final_map.v' to AST representation.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Successfully finished Verilog frontend.

3.58.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

yosys> rs-pack-dsp-regs

3.59. Executing rs_pack_dsp_regs pass.

yosys> rs_dsp_io_regs

3.60. Executing RS_DSP_IO_REGS pass.

yosys> alumacc

3.61. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module xtea:
  creating $macc model for $flatten\KEY_SCHEDULE_0.$verific$add_17$key_schedule.vhd:66$141 ($add).
  creating $macc model for $flatten\KEY_SCHEDULE_0.$verific$add_24$key_schedule.vhd:69$148 ($add).
  creating $macc model for $flatten\KEY_SCHEDULE_0.$verific$add_26$key_schedule.vhd:70$150 ($add).
  creating $macc model for $flatten\KEY_SCHEDULE_0.$verific$sub_19$key_schedule.vhd:67$142 ($sub).
  creating $macc model for $flatten\ROUND_F_0.$verific$add_7$round_f.vhd:39$174 ($add).
  creating $macc model for $verific$add_21$xtea.vhd:88$64 ($add).
  creating $macc model for $verific$add_29$xtea.vhd:96$71 ($add).
  creating $macc model for $verific$add_5$../vhdl_packages/vhdl_2008/src/numeric_std-body.vhdl:482$50 ($add).
  creating $macc model for $verific$sub_23$xtea.vhd:90$65 ($sub).
  creating $macc model for $verific$sub_31$xtea.vhd:98$72 ($sub).
  creating $alu model for $macc $verific$sub_31$xtea.vhd:98$72.
  creating $alu model for $macc $verific$sub_23$xtea.vhd:90$65.
  creating $alu model for $macc $verific$add_5$../vhdl_packages/vhdl_2008/src/numeric_std-body.vhdl:482$50.
  creating $alu model for $macc $verific$add_29$xtea.vhd:96$71.
  creating $alu model for $macc $verific$add_21$xtea.vhd:88$64.
  creating $alu model for $macc $flatten\ROUND_F_0.$verific$add_7$round_f.vhd:39$174.
  creating $alu model for $macc $flatten\KEY_SCHEDULE_0.$verific$sub_19$key_schedule.vhd:67$142.
  creating $alu model for $macc $flatten\KEY_SCHEDULE_0.$verific$add_26$key_schedule.vhd:70$150.
  creating $alu model for $macc $flatten\KEY_SCHEDULE_0.$verific$add_24$key_schedule.vhd:69$148.
  creating $alu model for $macc $flatten\KEY_SCHEDULE_0.$verific$add_17$key_schedule.vhd:66$141.
  creating $alu cell for $flatten\KEY_SCHEDULE_0.$verific$add_17$key_schedule.vhd:66$141: $auto$alumacc.cc:485:replace_alu$215
  creating $alu cell for $flatten\KEY_SCHEDULE_0.$verific$add_24$key_schedule.vhd:69$148: $auto$alumacc.cc:485:replace_alu$218
  creating $alu cell for $flatten\KEY_SCHEDULE_0.$verific$add_26$key_schedule.vhd:70$150: $auto$alumacc.cc:485:replace_alu$221
  creating $alu cell for $flatten\KEY_SCHEDULE_0.$verific$sub_19$key_schedule.vhd:67$142: $auto$alumacc.cc:485:replace_alu$224
  creating $alu cell for $flatten\ROUND_F_0.$verific$add_7$round_f.vhd:39$174: $auto$alumacc.cc:485:replace_alu$227
  creating $alu cell for $verific$add_5$../vhdl_packages/vhdl_2008/src/numeric_std-body.vhdl:482$50: $auto$alumacc.cc:485:replace_alu$230
  creating $alu cell for $verific$add_21$xtea.vhd:88$64: $auto$alumacc.cc:485:replace_alu$233
  creating $alu cell for $verific$sub_23$xtea.vhd:90$65: $auto$alumacc.cc:485:replace_alu$236
  creating $alu cell for $verific$add_29$xtea.vhd:96$71: $auto$alumacc.cc:485:replace_alu$239
  creating $alu cell for $verific$sub_31$xtea.vhd:98$72: $auto$alumacc.cc:485:replace_alu$242
  created 10 $alu and 0 $macc cells.

yosys> opt_expr

3.62. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

yosys> opt_merge -nomux

3.63. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.64. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~5 debug messages>

yosys> opt_reduce

3.65. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.66. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_share

3.67. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $mux $flatten\KEY_SCHEDULE_0.$verific$mux_29$key_schedule.vhd:71$153 in front of them:
        $auto$alumacc.cc:485:replace_alu$224
        $auto$alumacc.cc:485:replace_alu$221

    Found cells that share an operand and can be merged by moving the $mux $verific$mux_25$xtea.vhd:91$68 in front of them:
        $auto$alumacc.cc:485:replace_alu$236
        $auto$alumacc.cc:485:replace_alu$233

    Found cells that share an operand and can be merged by moving the $mux $verific$mux_33$xtea.vhd:99$75 in front of them:
        $auto$alumacc.cc:485:replace_alu$242
        $auto$alumacc.cc:485:replace_alu$239


yosys> opt_dff -nodffe

3.68. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.69. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 0 unused cells and 18 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.70. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
<suppressed ~4 debug messages>

yosys> opt_muxtree

3.71. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~8 debug messages>

yosys> opt_reduce

3.72. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.73. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

yosys> opt_share

3.74. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe

3.75. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.76. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 0 unused cells and 6 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.77. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

yosys> opt_muxtree

3.78. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

yosys> opt_reduce

3.79. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.80. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_share

3.81. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe

3.82. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.83. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..

yosys> opt_expr

3.84. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
MAX OPT ITERATION = 3

yosys> stat

3.85. Printing statistics.

=== xtea ===

   Number of wires:                 94
   Number of wire bits:           2400
   Number of public wires:          32
   Number of public wire bits:    1002
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 57
     $alu                            7
     $and                            2
     $bmux                           2
     $dffe                           4
     $eq                             3
     $logic_not                      1
     $mux                           21
     $ne                             4
     $neg                            1
     $not                            1
     $reduce_and                     3
     $reduce_bool                    4
     $sdff                           1
     $sdffe                          1
     $xor                            2


yosys> memory -nomap

3.86. Executing MEMORY pass.

yosys> opt_mem

3.86.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.86.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.86.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.86.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.86.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.86.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..

yosys> memory_share

3.86.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.86.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.86.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..

yosys> memory_collect

3.86.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.87. Printing statistics.

=== xtea ===

   Number of wires:                 94
   Number of wire bits:           2400
   Number of public wires:          32
   Number of public wire bits:    1002
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 57
     $alu                            7
     $and                            2
     $bmux                           2
     $dffe                           4
     $eq                             3
     $logic_not                      1
     $mux                           21
     $ne                             4
     $neg                            1
     $not                            1
     $reduce_and                     3
     $reduce_bool                    4
     $sdff                           1
     $sdffe                          1
     $xor                            2


yosys> muxpack

3.88. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converting xtea.$verific$mux_34$xtea.vhd:100$76 ... xtea.$verific$mux_36$xtea.vhd:100$78 to a pmux with 3 cases.
Converting xtea.$verific$mux_37$xtea.vhd:100$79 ... xtea.$verific$mux_38$xtea.vhd:100$80 to a pmux with 2 cases.
Converting xtea.$verific$mux_39$xtea.vhd:100$81 ... xtea.$verific$mux_41$xtea.vhd:100$83 to a pmux with 3 cases.
Converted 8 (p)mux cells into 3 pmux cells.
<suppressed ~19 debug messages>

yosys> opt_clean

3.89. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 0 unused cells and 5 unused wires.
<suppressed ~1 debug messages>

yosys> memory_libmap -lib +/rapidsilicon/genesis2/brams_new_swap.txt -limit 150 a:read_swapped

3.90. Executing MEMORY_LIBMAP pass (mapping memories to cells).

yosys> memory_libmap -lib +/rapidsilicon/genesis2/brams_new.txt -limit 150

3.91. Executing MEMORY_LIBMAP pass (mapping memories to cells).

yosys> rs_bram_split -new_mapping

3.92. Executing Rs_BRAM_Split pass.

yosys> techmap -autoproc -map +/rapidsilicon/genesis2/brams_map_new.v

3.93. Executing TECHMAP pass (map to technology primitives).

3.93.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/brams_map_new.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/brams_map_new.v' to AST representation.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_TDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM18_TDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM18_SDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_SDP'.
Successfully finished Verilog frontend.

3.93.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~6 debug messages>

yosys> techmap -map +/rapidsilicon/genesis2/brams_final_map_new.v

3.94. Executing TECHMAP pass (map to technology primitives).

3.94.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/brams_final_map_new.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/brams_final_map_new.v' to AST representation.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Successfully finished Verilog frontend.

3.94.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

yosys> pmuxtree

3.95. Executing PMUXTREE pass.

yosys> muxpack

3.96. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converting xtea.$auto$pmuxtree.cc:65:recursive_mux_generator$282 ... xtea.$auto$pmuxtree.cc:65:recursive_mux_generator$284 to a pmux with 2 cases.
Converted 2 (p)mux cells into 1 pmux cells.
<suppressed ~16 debug messages>

yosys> memory_map

3.97. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> stat

3.98. Printing statistics.

=== xtea ===

   Number of wires:                 98
   Number of wire bits:           2435
   Number of public wires:          32
   Number of public wire bits:    1002
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 57
     $alu                            7
     $and                            2
     $bmux                           2
     $dffe                           4
     $eq                             3
     $logic_not                      1
     $mux                           17
     $ne                             4
     $neg                            1
     $not                            2
     $or                             1
     $pmux                           1
     $reduce_and                     3
     $reduce_bool                    4
     $reduce_or                      1
     $sdff                           1
     $sdffe                          1
     $xor                            2


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis2/arith_map.v

3.99. Executing TECHMAP pass (map to technology primitives).

3.99.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.99.2. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/arith_map.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.99.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $dffe.
Running "alumacc" on wrapper $extern:wrap:$neg:A_SIGNED=0:A_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$neg:A_SIGNED=0:A_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$neg:A_SIGNED=0:A_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $eq.
Using template $paramod$79fc87901d7fd8aaad689b5406671422f5fa25b9\_80_rs_alu for cells of type $alu.
Using template $paramod$be80489e44a49c29884f59fd81c31ed03229cfc1\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $sdff.
Using extmapper simplemap for cells of type $ne.
Using template $paramod$8fabc56b80a569262acfc42757a02ca0b8e91278\_90_pmux for cells of type $pmux.
Using template $paramod$175e67c02b86e96b1288b9dc100122520d7240d8\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $bmux.
Using extmapper simplemap for cells of type $sdffe.
Using template $paramod$63a3f1ffa662be02d3403b533885c56d18ebe02a\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
No more expansions possible.
<suppressed ~574 debug messages>

yosys> stat

3.100. Printing statistics.

=== xtea ===

   Number of wires:                427
   Number of wire bits:           7549
   Number of public wires:          32
   Number of public wire bits:    1002
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2082
     $_AND_                         77
     $_DFFE_PP_                    128
     $_MUX_                       1008
     $_NOT_                        232
     $_OR_                          55
     $_SDFFE_PP0P_                  32
     $_SDFF_PP0_                     2
     $_XOR_                        324
     fa_1bit                       224


yosys> opt_expr

3.101. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
<suppressed ~657 debug messages>

yosys> opt_merge -nomux

3.102. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
<suppressed ~219 debug messages>
Removed a total of 73 cells.

yosys> opt_muxtree

3.103. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.104. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.105. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_share

3.106. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe

3.107. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:262:slice$523 ($_DFFE_PP_) from module xtea (D = $flatten\KEY_SCHEDULE_0.$verific$n1267$123 [0], Q = \KEY_SCHEDULE_0.sum_s [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$524 ($_DFFE_PP_) from module xtea (D = $flatten\KEY_SCHEDULE_0.$verific$n1267$123 [1], Q = \KEY_SCHEDULE_0.sum_s [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$525 ($_DFFE_PP_) from module xtea (D = $flatten\KEY_SCHEDULE_0.$verific$n1267$123 [2], Q = \KEY_SCHEDULE_0.sum_s [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$526 ($_DFFE_PP_) from module xtea (D = $flatten\KEY_SCHEDULE_0.$verific$n1267$123 [3], Q = \KEY_SCHEDULE_0.sum_s [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$527 ($_DFFE_PP_) from module xtea (D = $flatten\KEY_SCHEDULE_0.$verific$n1267$123 [4], Q = \KEY_SCHEDULE_0.sum_s [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$528 ($_DFFE_PP_) from module xtea (D = $flatten\KEY_SCHEDULE_0.$verific$n1267$123 [5], Q = \KEY_SCHEDULE_0.sum_s [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$530 ($_DFFE_PP_) from module xtea (D = $flatten\KEY_SCHEDULE_0.$verific$n1267$123 [7], Q = \KEY_SCHEDULE_0.sum_s [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$531 ($_DFFE_PP_) from module xtea (D = $flatten\KEY_SCHEDULE_0.$verific$n1267$123 [8], Q = \KEY_SCHEDULE_0.sum_s [8], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$535 ($_DFFE_PP_) from module xtea (D = $flatten\KEY_SCHEDULE_0.$verific$n1267$123 [12], Q = \KEY_SCHEDULE_0.sum_s [12], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$538 ($_DFFE_PP_) from module xtea (D = $flatten\KEY_SCHEDULE_0.$verific$n1267$123 [15], Q = \KEY_SCHEDULE_0.sum_s [15], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$539 ($_DFFE_PP_) from module xtea (D = $flatten\KEY_SCHEDULE_0.$verific$n1267$123 [16], Q = \KEY_SCHEDULE_0.sum_s [16], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$544 ($_DFFE_PP_) from module xtea (D = $flatten\KEY_SCHEDULE_0.$verific$n1267$123 [21], Q = \KEY_SCHEDULE_0.sum_s [21], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$548 ($_DFFE_PP_) from module xtea (D = $flatten\KEY_SCHEDULE_0.$verific$n1267$123 [25], Q = \KEY_SCHEDULE_0.sum_s [25], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$551 ($_DFFE_PP_) from module xtea (D = $flatten\KEY_SCHEDULE_0.$verific$n1267$123 [28], Q = \KEY_SCHEDULE_0.sum_s [28], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$552 ($_DFFE_PP_) from module xtea (D = $flatten\KEY_SCHEDULE_0.$verific$n1267$123 [29], Q = \KEY_SCHEDULE_0.sum_s [29], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$553 ($_DFFE_PP_) from module xtea (D = $flatten\KEY_SCHEDULE_0.$verific$n1267$123 [30], Q = \KEY_SCHEDULE_0.sum_s [30], rval = 1'0).

yosys> opt_clean

3.108. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 121 unused cells and 328 unused wires.
<suppressed ~122 debug messages>

yosys> opt_expr

3.109. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

yosys> opt_muxtree

3.110. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.111. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.112. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_share

3.113. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe

3.114. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.115. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..

yosys> opt_expr

3.116. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
MAX OPT ITERATION = 2

yosys> opt_expr -full

3.117. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
<suppressed ~160 debug messages>

yosys> techmap -map +/techmap.v

3.118. Executing TECHMAP pass (map to technology primitives).

3.118.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.118.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> stat

3.119. Printing statistics.

=== xtea ===

   Number of wires:                107
   Number of wire bits:           2488
   Number of public wires:          32
   Number of public wire bits:    1002
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1273
     $_AND_                         37
     $_DFFE_PP_                    112
     $_MUX_                        503
     $_NOT_                         71
     $_OR_                          15
     $_SDFFCE_PP0P_                 16
     $_SDFFE_PP0P_                  32
     $_SDFF_PP0_                     2
     $_XOR_                        261
     fa_1bit                       224


yosys> dfflegalize -cell $_SDFF_???_ 0 -cell $_SDFFE_????_ 0 t:$_SDFFCE_*

3.120. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.121. Printing statistics.

=== xtea ===

   Number of wires:                123
   Number of wire bits:           2504
   Number of public wires:          32
   Number of public wire bits:    1002
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1289
     $_AND_                         53
     $_DFFE_PP_                    112
     $_MUX_                        503
     $_NOT_                         71
     $_OR_                          15
     $_SDFFE_PP0P_                  48
     $_SDFF_PP0_                     2
     $_XOR_                        261
     fa_1bit                       224


yosys> opt_expr

3.122. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

yosys> opt_merge -nomux

3.123. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
<suppressed ~45 debug messages>
Removed a total of 15 cells.

yosys> opt_muxtree

3.124. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.125. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.126. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -sat

3.127. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.128. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 0 unused cells and 20 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.129. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
MAX OPT ITERATION = 1

yosys> abc -dff -keepff

3.130. Executing ABC pass (technology mapping using ABC).

3.130.1. Summary of detected clock domains:
  8 cells in clk=\clk, en={ }, arst={ }, srst=\rst
  136 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$201, arst={ }, srst={ }
  198 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$192, arst={ }, srst={ }
  191 cells in clk=\clk, en=$auto$opt_dff.cc:194:make_patterns_logic$205, arst={ }, srst={ }
  301 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$185, arst={ }, srst={ }
  248 cells in clk=\clk, en=$auto$opt_dff.cc:194:make_patterns_logic$205, arst={ }, srst=$auto$rtlil.cc:2550:AndGate$2517
  192 cells in clk=\clk, en=$auto$opt_dff.cc:194:make_patterns_logic$209, arst={ }, srst=\rst

3.130.2. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by \rst
Extracted 8 gates and 8 wires to a netlist network with 0 inputs and 5 outputs.

3.130.2.1. Executing ABC.

3.130.3. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$201
Extracted 127 gates and 196 wires to a netlist network with 69 inputs and 90 outputs.

3.130.3.1. Executing ABC.

3.130.4. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$192
Extracted 166 gates and 299 wires to a netlist network with 133 inputs and 96 outputs.

3.130.4.1. Executing ABC.

3.130.5. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:194:make_patterns_logic$205
Extracted 146 gates and 326 wires to a netlist network with 180 inputs and 128 outputs.

3.130.5.1. Executing ABC.

3.130.6. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$185
Extracted 237 gates and 403 wires to a netlist network with 165 inputs and 126 outputs.

3.130.6.1. Executing ABC.

3.130.7. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$2854$auto$opt_dff.cc:194:make_patterns_logic$205, synchronously reset by $auto$rtlil.cc:2550:AndGate$2517
Extracted 197 gates and 410 wires to a netlist network with 213 inputs and 99 outputs.

3.130.7.1. Executing ABC.

3.130.8. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:194:make_patterns_logic$209, synchronously reset by \rst
Extracted 169 gates and 274 wires to a netlist network with 105 inputs and 67 outputs.

3.130.8.1. Executing ABC.

yosys> abc -dff -keepff

3.131. Executing ABC pass (technology mapping using ABC).

3.131.1. Summary of detected clock domains:
  247 cells in clk=\clk, en=$abc$2854$auto$opt_dff.cc:194:make_patterns_logic$205, arst={ }, srst=$abc$3238$auto$rtlil.cc:2550:AndGate$2517
  7 cells in clk=\clk, en={ }, arst={ }, srst=\rst
  105 cells in clk=\clk, en=$abc$2556$auto$opt_dff.cc:219:make_patterns_logic$201, arst={ }, srst={ }
  243 cells in clk=\clk, en=$abc$2685$auto$opt_dff.cc:219:make_patterns_logic$192, arst={ }, srst={ }
  193 cells in clk=\clk, en=$abc$2854$auto$opt_dff.cc:194:make_patterns_logic$205, arst={ }, srst={ }
  289 cells in clk=\clk, en=$abc$3001$auto$opt_dff.cc:219:make_patterns_logic$185, arst={ }, srst={ }
  136 cells in clk=\clk, en=$abc$3459$auto$opt_dff.cc:194:make_patterns_logic$209, arst={ }, srst=\rst

3.131.2. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$2854$auto$opt_dff.cc:194:make_patterns_logic$205, synchronously reset by $abc$3238$auto$rtlil.cc:2550:AndGate$2517
Extracted 198 gates and 409 wires to a netlist network with 211 inputs and 101 outputs.

3.131.2.1. Executing ABC.

3.131.3. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by \rst
Extracted 7 gates and 7 wires to a netlist network with 0 inputs and 5 outputs.

3.131.3.1. Executing ABC.

3.131.4. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$2556$auto$opt_dff.cc:219:make_patterns_logic$201
Extracted 97 gates and 138 wires to a netlist network with 41 inputs and 90 outputs.

3.131.4.1. Executing ABC.

3.131.5. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$2685$auto$opt_dff.cc:219:make_patterns_logic$192
Extracted 210 gates and 347 wires to a netlist network with 137 inputs and 99 outputs.

3.131.5.1. Executing ABC.

3.131.6. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$3566$abc$2854$auto$opt_dff.cc:194:make_patterns_logic$205
Extracted 148 gates and 328 wires to a netlist network with 180 inputs and 127 outputs.

3.131.6.1. Executing ABC.

3.131.7. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$3001$auto$opt_dff.cc:219:make_patterns_logic$185
Extracted 226 gates and 418 wires to a netlist network with 192 inputs and 151 outputs.

3.131.7.1. Executing ABC.

3.131.8. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$3459$auto$opt_dff.cc:194:make_patterns_logic$209, synchronously reset by \rst
Extracted 110 gates and 214 wires to a netlist network with 104 inputs and 65 outputs.

3.131.8.1. Executing ABC.

yosys> abc -dff -keepff

3.132. Executing ABC pass (technology mapping using ABC).

3.132.1. Summary of detected clock domains:
  7 cells in clk=\clk, en={ }, arst={ }, srst=\rst
  122 cells in clk=\clk, en=$abc$3788$abc$2556$auto$opt_dff.cc:219:make_patterns_logic$201, arst={ }, srst={ }
  237 cells in clk=\clk, en=$abc$3913$abc$2685$auto$opt_dff.cc:219:make_patterns_logic$192, arst={ }, srst={ }
  246 cells in clk=\clk, en=$abc$4241$abc$3001$auto$opt_dff.cc:219:make_patterns_logic$185, arst={ }, srst={ }
  194 cells in clk=\clk, en=$abc$3566$abc$2854$auto$opt_dff.cc:194:make_patterns_logic$205, arst={ }, srst={ }
  245 cells in clk=\clk, en=$abc$3566$abc$2854$auto$opt_dff.cc:194:make_patterns_logic$205, arst={ }, srst=\rst
  136 cells in clk=\clk, en=$abc$4468$abc$3459$auto$opt_dff.cc:194:make_patterns_logic$209, arst={ }, srst=\rst

3.132.2. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by \rst
Extracted 7 gates and 7 wires to a netlist network with 0 inputs and 5 outputs.

3.132.2.1. Executing ABC.

3.132.3. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$3788$abc$2556$auto$opt_dff.cc:219:make_patterns_logic$201
Extracted 114 gates and 171 wires to a netlist network with 57 inputs and 90 outputs.

3.132.3.1. Executing ABC.

3.132.4. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$3913$abc$2685$auto$opt_dff.cc:219:make_patterns_logic$192
Extracted 193 gates and 338 wires to a netlist network with 145 inputs and 121 outputs.

3.132.4.1. Executing ABC.

3.132.5. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4241$abc$3001$auto$opt_dff.cc:219:make_patterns_logic$185
Extracted 194 gates and 362 wires to a netlist network with 168 inputs and 113 outputs.

3.132.5.1. Executing ABC.

3.132.6. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$3566$abc$2854$auto$opt_dff.cc:194:make_patterns_logic$205
Extracted 149 gates and 329 wires to a netlist network with 180 inputs and 127 outputs.

3.132.6.1. Executing ABC.

3.132.7. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$3566$abc$2854$auto$opt_dff.cc:194:make_patterns_logic$205, synchronously reset by \rst
Extracted 196 gates and 407 wires to a netlist network with 211 inputs and 99 outputs.

3.132.7.1. Executing ABC.

3.132.8. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4468$abc$3459$auto$opt_dff.cc:194:make_patterns_logic$209, synchronously reset by \rst
Extracted 110 gates and 214 wires to a netlist network with 104 inputs and 65 outputs.

3.132.8.1. Executing ABC.

yosys> abc -dff -keepff

3.133. Executing ABC pass (technology mapping using ABC).

3.133.1. Summary of detected clock domains:
  245 cells in clk=\clk, en=$abc$5251$abc$3566$abc$2854$auto$opt_dff.cc:194:make_patterns_logic$205, arst={ }, srst=\rst
  7 cells in clk=\clk, en={ }, arst={ }, srst=\rst
  113 cells in clk=\clk, en=$abc$4587$abc$3788$abc$2556$auto$opt_dff.cc:219:make_patterns_logic$201, arst={ }, srst={ }
  256 cells in clk=\clk, en=$abc$4712$abc$3913$abc$2685$auto$opt_dff.cc:219:make_patterns_logic$192, arst={ }, srst={ }
  235 cells in clk=\clk, en=$abc$4906$abc$4241$abc$3001$auto$opt_dff.cc:219:make_patterns_logic$185, arst={ }, srst={ }
  194 cells in clk=\clk, en=$abc$5251$abc$3566$abc$2854$auto$opt_dff.cc:194:make_patterns_logic$205, arst={ }, srst={ }
  136 cells in clk=\clk, en=$abc$5463$abc$4468$abc$3459$auto$opt_dff.cc:194:make_patterns_logic$209, arst={ }, srst=\rst

3.133.2. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5251$abc$3566$abc$2854$auto$opt_dff.cc:194:make_patterns_logic$205, synchronously reset by \rst
Extracted 196 gates and 407 wires to a netlist network with 211 inputs and 99 outputs.

3.133.2.1. Executing ABC.

3.133.3. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by \rst
Extracted 7 gates and 7 wires to a netlist network with 0 inputs and 5 outputs.

3.133.3.1. Executing ABC.

3.133.4. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4587$abc$3788$abc$2556$auto$opt_dff.cc:219:make_patterns_logic$201
Extracted 105 gates and 155 wires to a netlist network with 50 inputs and 90 outputs.

3.133.4.1. Executing ABC.

3.133.5. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4712$abc$3913$abc$2685$auto$opt_dff.cc:219:make_patterns_logic$192
Extracted 206 gates and 359 wires to a netlist network with 153 inputs and 131 outputs.

3.133.5.1. Executing ABC.

3.133.6. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4906$abc$4241$abc$3001$auto$opt_dff.cc:219:make_patterns_logic$185
Extracted 189 gates and 358 wires to a netlist network with 169 inputs and 113 outputs.

3.133.6.1. Executing ABC.

3.133.7. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5574$abc$5251$abc$3566$abc$2854$auto$opt_dff.cc:194:make_patterns_logic$205
Extracted 149 gates and 329 wires to a netlist network with 180 inputs and 127 outputs.

3.133.7.1. Executing ABC.

3.133.8. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5463$abc$4468$abc$3459$auto$opt_dff.cc:194:make_patterns_logic$209, synchronously reset by \rst
Extracted 110 gates and 214 wires to a netlist network with 104 inputs and 65 outputs.

3.133.8.1. Executing ABC.

yosys> opt_ffinv

3.134. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt_expr

3.135. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
<suppressed ~13 debug messages>

yosys> opt_merge -nomux

3.136. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.137. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.138. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.139. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_share

3.140. Executing OPT_SHARE pass.

yosys> opt_dff -sat

3.141. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.142. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 1 unused cells and 6553 unused wires.
<suppressed ~2 debug messages>

yosys> opt_expr

3.143. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

yosys> opt_muxtree

3.144. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.145. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.146. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_share

3.147. Executing OPT_SHARE pass.

yosys> opt_dff -sat

3.148. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.149. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..

yosys> opt_expr

3.150. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
MAX OPT ITERATION = 2

yosys> bmuxmap

3.151. Executing BMUXMAP pass.

yosys> demuxmap

3.152. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> abc -script /tmp/yosys_RebB9K/abc_tmp_1.scr

3.153. Executing ABC pass (technology mapping using ABC).

3.153.1. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Extracted 800 gates and 1358 wires to a netlist network with 558 inputs and 384 outputs.

3.153.1.1. Executing ABC.
DE:   #PIs = 558  #Luts =   454  Max Lvl =   3  Avg Lvl =   1.17  [   0.28 sec. at Pass 0]{firstMap}[1]
DE:   #PIs = 558  #Luts =   454  Max Lvl =   3  Avg Lvl =   1.17  [   3.50 sec. at Pass 1]{initMapFlow}[2]
DE:   #PIs = 558  #Luts =   454  Max Lvl =   3  Avg Lvl =   1.17  [   0.85 sec. at Pass 2]{map}[2]
DE:   #PIs = 558  #Luts =   454  Max Lvl =   3  Avg Lvl =   1.17  [   1.98 sec. at Pass 3]{postMap}[6]
DE:   #PIs = 558  #Luts =   454  Max Lvl =   3  Avg Lvl =   1.17  [   0.75 sec. at Pass 4]{map}[12]
DE:   #PIs = 558  #Luts =   454  Max Lvl =   3  Avg Lvl =   1.17  [   1.15 sec. at Pass 5]{postMap}[16]
DE:   #PIs = 558  #Luts =   453  Max Lvl =   4  Avg Lvl =   1.46  [   1.29 sec. at Pass 6]{pushMap}[16]
DE:   #PIs = 558  #Luts =   453  Max Lvl =   4  Avg Lvl =   1.46  [   0.87 sec. at Pass 7]{map}[16]
DE:   #PIs = 558  #Luts =   453  Max Lvl =   4  Avg Lvl =   1.46  [   1.39 sec. at Pass 8]{postMap}[16]
DE:   #PIs = 558  #Luts =   453  Max Lvl =   4  Avg Lvl =   1.46  [   0.50 sec. at Pass 9]{map}[16]
DE:   #PIs = 558  #Luts =   453  Max Lvl =   4  Avg Lvl =   1.46  [   2.04 sec. at Pass 10]{pushMap}[16]
DE:   #PIs = 558  #Luts =   453  Max Lvl =   4  Avg Lvl =   1.46  [   0.70 sec. at Pass 11]{finalMap}[16]

yosys> opt_expr

3.154. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

yosys> opt_merge -nomux

3.155. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.156. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.157. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.158. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_share

3.159. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe

3.160. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.161. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 0 unused cells and 1266 unused wires.
<suppressed ~3 debug messages>

yosys> opt_expr

3.162. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
MAX OPT ITERATION = 1

yosys> opt_ffinv

3.163. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> stat

3.164. Printing statistics.

=== xtea ===

   Number of wires:                763
   Number of wire bits:           2298
   Number of public wires:          30
   Number of public wire bits:     938
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                838
     $_DFFE_PP_                    112
     $_SDFFE_PP0P_                  48
     $_SDFF_PP0_                     2
     $lut                          452
     fa_1bit                       224


yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFFE_??_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_SDFF_???_ 0 -cell $_SDFFE_????_ 0 -cell $_DLATCH_?_ 0 -cell $_DLATCH_???_ 0

3.165. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.166. Printing statistics.

=== xtea ===

   Number of wires:                763
   Number of wire bits:           2298
   Number of public wires:          30
   Number of public wire bits:     938
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                838
     $_DFFE_PP_                    112
     $_SDFFE_PP0P_                  48
     $_SDFF_PP0_                     2
     $lut                          452
     fa_1bit                       224


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis2/ffs_map.v

3.167. Executing TECHMAP pass (map to technology primitives).

3.167.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.167.2. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/ffs_map.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_PP0N_'.
Generating RTLIL representation for module `\$_SDFFE_PN0P_'.
Generating RTLIL representation for module `\$_SDFFE_PN0N_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFFE_PP1N_'.
Generating RTLIL representation for module `\$_SDFFE_PN1P_'.
Generating RTLIL representation for module `\$_SDFFE_PN1N_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP0N_'.
Generating RTLIL representation for module `\$_SDFFE_NN0P_'.
Generating RTLIL representation for module `\$_SDFFE_NN0N_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1N_'.
Generating RTLIL representation for module `\$_SDFFE_NN1P_'.
Generating RTLIL representation for module `\$_SDFFE_NN1N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_PP0_'.
Generating RTLIL representation for module `\$_DLATCH_NP0_'.
Generating RTLIL representation for module `\$_DLATCH_PN0_'.
Generating RTLIL representation for module `\$_DLATCH_NN0_'.
Generating RTLIL representation for module `\$_DLATCH_PP1_'.
Generating RTLIL representation for module `\$_DLATCH_NP1_'.
Generating RTLIL representation for module `\$_DLATCH_PN1_'.
Generating RTLIL representation for module `\$_DLATCH_NN1_'.
Successfully finished Verilog frontend.

3.167.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_SDFF_PP0_ for cells of type $_SDFF_PP0_.
Using template \$_SDFFE_PP0P_ for cells of type $_SDFFE_PP0P_.
No more expansions possible.
<suppressed ~749 debug messages>

yosys> opt_expr -mux_undef

3.168. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
<suppressed ~6298 debug messages>

yosys> simplemap

3.169. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.170. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

yosys> opt_merge

3.171. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
<suppressed ~2967 debug messages>
Removed a total of 989 cells.

yosys> opt_dff -nodffe -nosdff

3.172. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.173. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 0 unused cells and 1770 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.174. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
<suppressed ~246 debug messages>

yosys> opt_merge -nomux

3.175. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.176. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.177. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.178. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_share

3.179. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.180. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.181. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 0 unused cells and 55 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.182. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
MAX OPT ITERATION = 1

yosys> abc -script /tmp/yosys_RebB9K/abc_tmp_2.scr

3.183. Executing ABC pass (technology mapping using ABC).

3.183.1. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Extracted 1129 gates and 1689 wires to a netlist network with 558 inputs and 383 outputs.

3.183.1.1. Executing ABC.
DE:   #PIs = 558  #Luts =   452  Max Lvl =   3  Avg Lvl =   1.17  [   0.21 sec. at Pass 0]{firstMap}[1]
DE:   #PIs = 558  #Luts =   452  Max Lvl =   3  Avg Lvl =   1.17  [   2.00 sec. at Pass 1]{initMapFlow}[2]
DE:   #PIs = 558  #Luts =   452  Max Lvl =   3  Avg Lvl =   1.17  [   0.48 sec. at Pass 2]{map}[2]
DE:   #PIs = 558  #Luts =   452  Max Lvl =   3  Avg Lvl =   1.17  [   0.56 sec. at Pass 3]{postMap}[6]
DE:   #PIs = 558  #Luts =   452  Max Lvl =   3  Avg Lvl =   1.17  [   0.76 sec. at Pass 4]{map}[12]
DE:   #PIs = 558  #Luts =   452  Max Lvl =   3  Avg Lvl =   1.17  [   1.03 sec. at Pass 5]{postMap}[16]
DE:   #PIs = 558  #Luts =   452  Max Lvl =   3  Avg Lvl =   1.17  [   1.53 sec. at Pass 6]{pushMap}[16]
DE:   #PIs = 558  #Luts =   452  Max Lvl =   3  Avg Lvl =   1.17  [   0.99 sec. at Pass 7]{finalMap}[16]

yosys> opt_expr

3.184. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

yosys> opt_merge -nomux

3.185. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.186. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.187. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.188. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_share

3.189. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe

3.190. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.191. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 0 unused cells and 1498 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.192. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
MAX OPT ITERATION = 1

yosys> hierarchy -check

3.193. Executing HIERARCHY pass (managing design hierarchy).

3.193.1. Analyzing design hierarchy..
Top module:  \xtea

3.193.2. Analyzing design hierarchy..
Top module:  \xtea
Removed 0 unused modules.

yosys> stat

3.194. Printing statistics.

=== xtea ===

   Number of wires:                763
   Number of wire bits:           2298
   Number of public wires:          30
   Number of public wire bits:     938
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                838
     $lut                          452
     dffe                          112
     fa_1bit                       224
     sdffre                         50


yosys> opt_clean -purge

3.195. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 0 unused cells and 12 unused wires.
<suppressed ~12 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.196. Executing Verilog backend.
Dumping module `\xtea'.

Warnings: 4 unique messages, 4 total
End of script. Logfile hash: 9645576137, CPU: user 3.79s system 0.13s, MEM: 43.24 MB peak
Yosys 0.18+10 (git sha1 92b23013e, gcc 11.2.0 -fPIC -Os)
Time spent: 96% 6x abc (80 sec), 1% 31x opt_expr (0 sec), ...
real 42.71
user 68.71
sys 14.88
