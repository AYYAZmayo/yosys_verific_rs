
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.140
 Yosys 0.18+10 (git sha1 92b23013e, gcc 11.2.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Sep22_SW_Release, released at Fri Sep 30 20:01:32 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k ripple_adder_8bit.v ripple_adder_4bit.v vedic2x2.v ripple_adder_12bit.v vedic8x8.v full_adder.v vedic4x4.v half_adder.v ripple_adder_6bit.v

yosys> verific -vlog2k ripple_adder_8bit.v ripple_adder_4bit.v vedic2x2.v ripple_adder_12bit.v vedic8x8.v full_adder.v vedic4x4.v half_adder.v ripple_adder_6bit.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Sep22_SW_Release, released at Fri Sep 30 20:01:32 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'ripple_adder_8bit.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'ripple_adder_4bit.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'vedic2x2.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'ripple_adder_12bit.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'vedic8x8.v'
VERIFIC-INFO [VERI-2561] vedic8x8.v:14: undeclared symbol 'carry1', assumed default net type 'wire'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'full_adder.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'vedic4x4.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'half_adder.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'ripple_adder_6bit.v'

yosys> synth_rs -top vedic8x8 -tech genesis2 -goal area -de -verilog synthesized.v

3. Executing synth_rs pass: v0.4.116

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis2/cells_sim.v +/rapidsilicon/genesis2/dsp_sim.v +/rapidsilicon/genesis2/brams_sim.v

3.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/cells_sim.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dff'.
Generating RTLIL representation for module `\dffn'.
Generating RTLIL representation for module `\sdff'.
Generating RTLIL representation for module `\sdffn'.
Generating RTLIL representation for module `\dffr'.
Generating RTLIL representation for module `\dffnr'.
Generating RTLIL representation for module `\dffe'.
Generating RTLIL representation for module `\dffne'.
Generating RTLIL representation for module `\sdffre'.
Generating RTLIL representation for module `\sdffnre'.
Generating RTLIL representation for module `\dffre'.
Generating RTLIL representation for module `\dffnre'.
Generating RTLIL representation for module `\latch'.
Generating RTLIL representation for module `\latchn'.
Generating RTLIL representation for module `\latchr'.
Generating RTLIL representation for module `\latchnr'.
Generating RTLIL representation for module `\fa_1bit'.
Successfully finished Verilog frontend.

3.3. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/dsp_sim.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/dsp_sim.v' to AST representation.
Generating RTLIL representation for module `\RS_DSP'.
Generating RTLIL representation for module `\RS_DSP_MULT'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTADD'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTACC'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_ports'.
Successfully finished Verilog frontend.

3.4. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/brams_sim.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/brams_sim.v' to AST representation.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\RS_TDP36K'.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top vedic8x8

3.5. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] vedic8x8.v:1: compiling module 'vedic8x8'
VERIFIC-INFO [VERI-1018] vedic4x4.v:1: compiling module 'vedic4x4'
VERIFIC-INFO [VERI-1018] vedic2x2.v:1: compiling module 'vedic2x2'
VERIFIC-INFO [VERI-1018] half_adder.v:1: compiling module 'half_adder'
VERIFIC-INFO [VERI-1018] ripple_adder_4bit.v:1: compiling module 'ripple_adder_4bit'
VERIFIC-INFO [VERI-1018] full_adder.v:1: compiling module 'full_adder'
VERIFIC-INFO [VERI-1018] ripple_adder_6bit.v:1: compiling module 'ripple_adder_6bit'
VERIFIC-INFO [VERI-1018] ripple_adder_8bit.v:1: compiling module 'ripple_adder_8bit'
VERIFIC-INFO [VERI-1018] ripple_adder_12bit.v:1: compiling module 'ripple_adder_12bit'
Importing module vedic8x8.
Importing module ripple_adder_12bit.
Importing module ripple_adder_6bit.
Importing module full_adder.
Importing module half_adder.
Importing module ripple_adder_8bit.
Importing module ripple_adder_4bit.
Importing module vedic4x4.
Importing module vedic2x2.

3.5.1. Analyzing design hierarchy..
Top module:  \vedic8x8
Used module:     \ripple_adder_12bit
Used module:         \ripple_adder_6bit
Used module:             \full_adder
Used module:                 \half_adder
Used module:     \ripple_adder_8bit
Used module:         \ripple_adder_4bit
Used module:     \vedic4x4
Used module:         \vedic2x2

3.5.2. Analyzing design hierarchy..
Top module:  \vedic8x8
Used module:     \ripple_adder_12bit
Used module:         \ripple_adder_6bit
Used module:             \full_adder
Used module:                 \half_adder
Used module:     \ripple_adder_8bit
Used module:         \ripple_adder_4bit
Used module:     \vedic4x4
Used module:         \vedic2x2
Removed 0 unused modules.

yosys> proc

3.6. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.6.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.6.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.6.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.6.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.6.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.6.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.6.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.6.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.6.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.6.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.6.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.6.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module vedic2x2.
Optimizing module vedic4x4.
Optimizing module ripple_adder_4bit.
Optimizing module ripple_adder_8bit.
Optimizing module half_adder.
Optimizing module full_adder.
Optimizing module ripple_adder_6bit.
Optimizing module ripple_adder_12bit.
Optimizing module vedic8x8.

yosys> demuxmap

3.7. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> flatten

3.8. Executing FLATTEN pass (flatten design).
Deleting now unused module full_adder.
Deleting now unused module half_adder.
Deleting now unused module ripple_adder_12bit.
Deleting now unused module ripple_adder_4bit.
Deleting now unused module ripple_adder_6bit.
Deleting now unused module ripple_adder_8bit.
Deleting now unused module vedic2x2.
Deleting now unused module vedic4x4.
<suppressed ~32 debug messages>

yosys> demuxmap

3.9. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> tribuf -logic -formal

3.10. Executing TRIBUF pass.

yosys> deminout

3.11. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module vedic8x8.
<suppressed ~126 debug messages>

yosys> opt_clean

3.13. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \vedic8x8..
Removed 30 unused cells and 2686 unused wires.
<suppressed ~739 debug messages>

yosys> check

3.14. Executing CHECK pass (checking for obvious problems).
Checking module vedic8x8...
Found and reported 0 problems.

yosys> opt_expr

3.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module vedic8x8.
<suppressed ~72 debug messages>

yosys> opt_merge -nomux

3.16. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\vedic8x8'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \vedic8x8..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \vedic8x8.
Performed a total of 0 changes.

yosys> opt_merge

3.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\vedic8x8'.
Removed a total of 0 cells.

yosys> opt_share

3.20. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.21. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.22. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \vedic8x8..

yosys> opt_expr

3.23. Executing OPT_EXPR pass (perform const folding).
Optimizing module vedic8x8.
MAX OPT ITERATION = 1

yosys> fsm -encoding binary

3.24. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.24.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.24.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.24.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.24.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \vedic8x8..

yosys> fsm_opt

3.24.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.24.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.24.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.24.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt_expr

3.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module vedic8x8.

yosys> opt_merge -nomux

3.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\vedic8x8'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.27. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \vedic8x8..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.28. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \vedic8x8.
Performed a total of 0 changes.

yosys> opt_merge

3.29. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\vedic8x8'.
Removed a total of 0 cells.

yosys> opt_share

3.30. Executing OPT_SHARE pass.

yosys> opt_dff -sat

3.31. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.32. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \vedic8x8..

yosys> opt_expr

3.33. Executing OPT_EXPR pass (perform const folding).
Optimizing module vedic8x8.
MAX OPT ITERATION = 1

yosys> wreduce -keepdc

3.34. Executing WREDUCE pass (reducing word size of cells).

yosys> peepopt

3.35. Executing PEEPOPT pass (run peephole optimizers).

yosys> opt_clean

3.36. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \vedic8x8..

yosys> demuxmap

3.37. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> stat

3.38. Printing statistics.

=== vedic8x8 ===

   Number of wires:               1965
   Number of wire bits:           2604
   Number of public wires:        1965
   Number of public wire bits:    2604
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                380
     $and                          198
     $or                            33
     $xor                          149


yosys> wreduce t:$mul

3.39. Executing WREDUCE pass (reducing word size of cells).

yosys> rs_dsp_macc -genesis2 -max_dsp 154

3.40. Executing RS_DSP_MACC pass.

yosys> techmap -map +/mul2dsp_check_maxwidth.v -D DSP_A_MAXWIDTH=20 -D DSP_B_MAXWIDTH=18 -D DSP_A_MINWIDTH=11 -D DSP_B_MINWIDTH=10 -D DSP_NAME=$__RS_MUL20X18 a:valid_map

3.41. Executing TECHMAP pass (map to technology primitives).

3.41.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/mul2dsp_check_maxwidth.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/mul2dsp_check_maxwidth.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

3.41.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

yosys> stat

3.42. Printing statistics.

=== vedic8x8 ===

   Number of wires:               1965
   Number of wire bits:           2604
   Number of public wires:        1965
   Number of public wire bits:    2604
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                380
     $and                          198
     $or                            33
     $xor                          149


yosys> chtype -set $mul t:$__soft_mul

yosys> techmap -map +/rapidsilicon/genesis2/dsp_map.v -D USE_DSP_CFG_PARAMS=0

3.43. Executing TECHMAP pass (map to technology primitives).

3.43.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/dsp_map.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/dsp_map.v' to AST representation.
Generating RTLIL representation for module `\$__RS_MUL20X18'.
Successfully finished Verilog frontend.

3.43.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

yosys> techmap -map +/rapidsilicon/genesis2/dsp_final_map.v

3.44. Executing TECHMAP pass (map to technology primitives).

3.44.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/dsp_final_map.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/dsp_final_map.v' to AST representation.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Successfully finished Verilog frontend.

3.44.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

yosys> rs-pack-dsp-regs

3.45. Executing rs_pack_dsp_regs pass.

yosys> rs_dsp_io_regs

3.46. Executing RS_DSP_IO_REGS pass.

yosys> alumacc

3.47. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module vedic8x8:
  created 0 $alu and 0 $macc cells.

yosys> opt_expr

3.48. Executing OPT_EXPR pass (perform const folding).
Optimizing module vedic8x8.

yosys> opt_merge -nomux

3.49. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\vedic8x8'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.50. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \vedic8x8..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.51. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \vedic8x8.
Performed a total of 0 changes.

yosys> opt_merge

3.52. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\vedic8x8'.
Removed a total of 0 cells.

yosys> opt_share

3.53. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe

3.54. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.55. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \vedic8x8..

yosys> opt_expr

3.56. Executing OPT_EXPR pass (perform const folding).
Optimizing module vedic8x8.
MAX OPT ITERATION = 1

yosys> stat

3.57. Printing statistics.

=== vedic8x8 ===

   Number of wires:               1965
   Number of wire bits:           2604
   Number of public wires:        1965
   Number of public wire bits:    2604
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                380
     $and                          198
     $or                            33
     $xor                          149


yosys> memory -nomap

3.58. Executing MEMORY pass.

yosys> opt_mem

3.58.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.58.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.58.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.58.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.58.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.58.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \vedic8x8..

yosys> memory_share

3.58.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.58.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.58.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \vedic8x8..

yosys> memory_collect

3.58.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.59. Printing statistics.

=== vedic8x8 ===

   Number of wires:               1965
   Number of wire bits:           2604
   Number of public wires:        1965
   Number of public wire bits:    2604
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                380
     $and                          198
     $or                            33
     $xor                          149


yosys> muxpack

3.60. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.

yosys> opt_clean

3.61. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \vedic8x8..

yosys> memory_libmap -lib +/rapidsilicon/genesis2/brams_new_swap.txt -limit 150 a:read_swapped

3.62. Executing MEMORY_LIBMAP pass (mapping memories to cells).

yosys> memory_libmap -lib +/rapidsilicon/genesis2/brams_new.txt -limit 150

3.63. Executing MEMORY_LIBMAP pass (mapping memories to cells).

yosys> rs_bram_split -new_mapping

3.64. Executing Rs_BRAM_Split pass.

yosys> techmap -autoproc -map +/rapidsilicon/genesis2/brams_map_new.v

3.65. Executing TECHMAP pass (map to technology primitives).

3.65.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/brams_map_new.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/brams_map_new.v' to AST representation.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_TDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM18_TDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM18_SDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_SDP'.
Successfully finished Verilog frontend.

3.65.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~6 debug messages>

yosys> techmap -map +/rapidsilicon/genesis2/brams_final_map_new.v

3.66. Executing TECHMAP pass (map to technology primitives).

3.66.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/brams_final_map_new.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/brams_final_map_new.v' to AST representation.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Successfully finished Verilog frontend.

3.66.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

yosys> pmuxtree

3.67. Executing PMUXTREE pass.

yosys> muxpack

3.68. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.

yosys> memory_map

3.69. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> stat

3.70. Printing statistics.

=== vedic8x8 ===

   Number of wires:               1965
   Number of wire bits:           2604
   Number of public wires:        1965
   Number of public wire bits:    2604
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                380
     $and                          198
     $or                            33
     $xor                          149


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis2/arith_map.v

3.71. Executing TECHMAP pass (map to technology primitives).

3.71.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.71.2. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/arith_map.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.71.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $or.
No more expansions possible.
<suppressed ~451 debug messages>

yosys> stat

3.72. Printing statistics.

=== vedic8x8 ===

   Number of wires:               1965
   Number of wire bits:           2604
   Number of public wires:        1965
   Number of public wire bits:    2604
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                380
     $_AND_                        198
     $_OR_                          33
     $_XOR_                        149


yosys> opt_expr

3.73. Executing OPT_EXPR pass (perform const folding).
Optimizing module vedic8x8.

yosys> opt_merge -nomux

3.74. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\vedic8x8'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.75. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \vedic8x8..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.76. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \vedic8x8.
Performed a total of 0 changes.

yosys> opt_merge

3.77. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\vedic8x8'.
Removed a total of 0 cells.

yosys> opt_share

3.78. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe

3.79. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.80. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \vedic8x8..

yosys> opt_expr

3.81. Executing OPT_EXPR pass (perform const folding).
Optimizing module vedic8x8.
MAX OPT ITERATION = 1

yosys> opt_expr -full

3.82. Executing OPT_EXPR pass (perform const folding).
Optimizing module vedic8x8.

yosys> techmap -map +/techmap.v

3.83. Executing TECHMAP pass (map to technology primitives).

3.83.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.83.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> stat

3.84. Printing statistics.

=== vedic8x8 ===

   Number of wires:               1965
   Number of wire bits:           2604
   Number of public wires:        1965
   Number of public wire bits:    2604
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                380
     $_AND_                        198
     $_OR_                          33
     $_XOR_                        149


yosys> dfflegalize -cell $_SDFF_???_ 0 -cell $_SDFFE_????_ 0 t:$_SDFFCE_*

3.85. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.86. Printing statistics.

=== vedic8x8 ===

   Number of wires:               1965
   Number of wire bits:           2604
   Number of public wires:        1965
   Number of public wire bits:    2604
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                380
     $_AND_                        198
     $_OR_                          33
     $_XOR_                        149


yosys> opt_expr

3.87. Executing OPT_EXPR pass (perform const folding).
Optimizing module vedic8x8.

yosys> opt_merge -nomux

3.88. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\vedic8x8'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.89. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \vedic8x8..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.90. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \vedic8x8.
Performed a total of 0 changes.

yosys> opt_merge

3.91. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\vedic8x8'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -sat

3.92. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.93. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \vedic8x8..

yosys> opt_expr

3.94. Executing OPT_EXPR pass (perform const folding).
Optimizing module vedic8x8.
MAX OPT ITERATION = 1

yosys> abc -dff -keepff

3.95. Executing ABC pass (technology mapping using ABC).

3.95.1. Summary of detected clock domains:
  380 cells in clk={ }, en={ }, arst={ }, srst={ }

3.95.2. Extracting gate netlist of module `\vedic8x8' to `<abc-temp-dir>/input.blif'..
No matching clock domain found. Not extracting any FF cells.
Extracted 380 gates and 396 wires to a netlist network with 16 inputs and 16 outputs.

3.95.2.1. Executing ABC.

yosys> abc -dff -keepff

3.96. Executing ABC pass (technology mapping using ABC).

3.96.1. Summary of detected clock domains:
  357 cells in clk={ }, en={ }, arst={ }, srst={ }

3.96.2. Extracting gate netlist of module `\vedic8x8' to `<abc-temp-dir>/input.blif'..
No matching clock domain found. Not extracting any FF cells.
Extracted 357 gates and 373 wires to a netlist network with 16 inputs and 16 outputs.

3.96.2.1. Executing ABC.

yosys> abc -dff -keepff

3.97. Executing ABC pass (technology mapping using ABC).

3.97.1. Summary of detected clock domains:
  352 cells in clk={ }, en={ }, arst={ }, srst={ }

3.97.2. Extracting gate netlist of module `\vedic8x8' to `<abc-temp-dir>/input.blif'..
No matching clock domain found. Not extracting any FF cells.
Extracted 352 gates and 368 wires to a netlist network with 16 inputs and 16 outputs.

3.97.2.1. Executing ABC.

yosys> abc -dff -keepff

3.98. Executing ABC pass (technology mapping using ABC).

3.98.1. Summary of detected clock domains:
  352 cells in clk={ }, en={ }, arst={ }, srst={ }

3.98.2. Extracting gate netlist of module `\vedic8x8' to `<abc-temp-dir>/input.blif'..
No matching clock domain found. Not extracting any FF cells.
Extracted 352 gates and 368 wires to a netlist network with 16 inputs and 16 outputs.

3.98.2.1. Executing ABC.

yosys> opt_ffinv

3.99. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt_expr

3.100. Executing OPT_EXPR pass (perform const folding).
Optimizing module vedic8x8.

yosys> opt_merge -nomux

3.101. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\vedic8x8'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.102. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \vedic8x8..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.103. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \vedic8x8.
Performed a total of 0 changes.

yosys> opt_merge

3.104. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\vedic8x8'.
Removed a total of 0 cells.

yosys> opt_share

3.105. Executing OPT_SHARE pass.

yosys> opt_dff -sat

3.106. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.107. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \vedic8x8..
Removed 0 unused cells and 2651 unused wires.
<suppressed ~1511 debug messages>

yosys> opt_expr

3.108. Executing OPT_EXPR pass (perform const folding).
Optimizing module vedic8x8.
MAX OPT ITERATION = 1

yosys> bmuxmap

3.109. Executing BMUXMAP pass.

yosys> demuxmap

3.110. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> abc -script /tmp/yosys_hwbnxe/abc_tmp_1.scr

3.111. Executing ABC pass (technology mapping using ABC).

3.111.1. Extracting gate netlist of module `\vedic8x8' to `<abc-temp-dir>/input.blif'..
Extracted 352 gates and 368 wires to a netlist network with 16 inputs and 16 outputs.

3.111.1.1. Executing ABC.
DE:   #PIs =  16  #Luts =    98  Max Lvl =   8  Avg Lvl =   4.75  [   0.13 sec. at Pass 0]{firstMap}[1]
DE:   #PIs =  16  #Luts =    97  Max Lvl =  14  Avg Lvl =   7.75  [   1.45 sec. at Pass 1]{initMapFlow}[2]
DE:   #PIs =  16  #Luts =    93  Max Lvl =  12  Avg Lvl =   6.94  [   0.38 sec. at Pass 2]{map}[2]
DE:   #PIs =  16  #Luts =    92  Max Lvl =  13  Avg Lvl =   7.50  [   1.35 sec. at Pass 3]{postMap}[6]
DE:   #PIs =  16  #Luts =    90  Max Lvl =  12  Avg Lvl =   6.94  [   0.36 sec. at Pass 4]{map}[12]
DE:   #PIs =  16  #Luts =    88  Max Lvl =  13  Avg Lvl =   7.56  [   1.11 sec. at Pass 5]{postMap}[36]
DE:   #PIs =  16  #Luts =    88  Max Lvl =  13  Avg Lvl =   7.56  [   0.68 sec. at Pass 6]{map}[50]
DE:   #PIs =  16  #Luts =    88  Max Lvl =  13  Avg Lvl =   7.56  [   1.66 sec. at Pass 7]{postMap}[50]
DE:   #PIs =  16  #Luts =    88  Max Lvl =  12  Avg Lvl =   7.00  [   1.23 sec. at Pass 8]{map}[50]
DE:   #PIs =  16  #Luts =    88  Max Lvl =  12  Avg Lvl =   7.00  [   1.71 sec. at Pass 9]{postMap}[50]
DE:   #PIs =  16  #Luts =    88  Max Lvl =  12  Avg Lvl =   7.00  [   0.69 sec. at Pass 10]{map}[50]
DE:   #PIs =  16  #Luts =    88  Max Lvl =  12  Avg Lvl =   7.00  [   2.02 sec. at Pass 11]{postMap}[50]
DE:   #PIs =  16  #Luts =    86  Max Lvl =  16  Avg Lvl =   8.88  [   9.35 sec. at Pass 12]{pushMap}[50]
DE:   #PIs =  16  #Luts =    85  Max Lvl =  15  Avg Lvl =   8.38  [   0.78 sec. at Pass 13]{map}[50]
DE:   #PIs =  16  #Luts =    85  Max Lvl =  15  Avg Lvl =   8.38  [   2.20 sec. at Pass 14]{postMap}[50]
DE:   #PIs =  16  #Luts =    85  Max Lvl =  15  Avg Lvl =   8.38  [   1.22 sec. at Pass 15]{map}[50]
DE:   #PIs =  16  #Luts =    85  Max Lvl =  15  Avg Lvl =   8.38  [   1.60 sec. at Pass 16]{postMap}[50]
DE:   #PIs =  16  #Luts =    84  Max Lvl =  14  Avg Lvl =   7.69  [  10.11 sec. at Pass 17]{pushMap}[50]
DE:   #PIs =  16  #Luts =    83  Max Lvl =  15  Avg Lvl =   8.50  [   1.17 sec. at Pass 18]{map}[50]
DE:   #PIs =  16  #Luts =    83  Max Lvl =  15  Avg Lvl =   8.50  [   2.41 sec. at Pass 19]{postMap}[50]
DE:   #PIs =  16  #Luts =    83  Max Lvl =  15  Avg Lvl =   8.50  [   1.06 sec. at Pass 20]{map}[50]
DE:   #PIs =  16  #Luts =    83  Max Lvl =  15  Avg Lvl =   8.50  [   1.96 sec. at Pass 21]{postMap}[50]
DE:   #PIs =  16  #Luts =    83  Max Lvl =  14  Avg Lvl =   7.69  [   9.91 sec. at Pass 22]{pushMap}[50]
DE:   #PIs =  16  #Luts =    83  Max Lvl =  14  Avg Lvl =   7.69  [   0.78 sec. at Pass 23]{map}[50]
DE:   #PIs =  16  #Luts =    83  Max Lvl =  14  Avg Lvl =   7.69  [   2.03 sec. at Pass 24]{postMap}[50]
DE:   #PIs =  16  #Luts =    83  Max Lvl =  14  Avg Lvl =   7.69  [   1.20 sec. at Pass 25]{map}[50]
DE:   #PIs =  16  #Luts =    83  Max Lvl =  14  Avg Lvl =   7.69  [  11.06 sec. at Pass 26]{pushMap}[50]
DE:   #PIs =  16  #Luts =    83  Max Lvl =  14  Avg Lvl =   7.69  [   0.86 sec. at Pass 27]{finalMap}[50]

yosys> opt_expr

3.112. Executing OPT_EXPR pass (perform const folding).
Optimizing module vedic8x8.

yosys> opt_merge -nomux

3.113. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\vedic8x8'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.114. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \vedic8x8..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.115. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \vedic8x8.
Performed a total of 0 changes.

yosys> opt_merge

3.116. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\vedic8x8'.
Removed a total of 0 cells.

yosys> opt_share

3.117. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe

3.118. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.119. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \vedic8x8..
Removed 0 unused cells and 368 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.120. Executing OPT_EXPR pass (perform const folding).
Optimizing module vedic8x8.
MAX OPT ITERATION = 1

yosys> opt_ffinv

3.121. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> stat

3.122. Printing statistics.

=== vedic8x8 ===

   Number of wires:                522
   Number of wire bits:            799
   Number of public wires:         455
   Number of public wire bits:     732
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 83
     $lut                           83


yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFFE_??_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_SDFF_???_ 0 -cell $_SDFFE_????_ 0 -cell $_DLATCH_?_ 0 -cell $_DLATCH_???_ 0

3.123. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.124. Printing statistics.

=== vedic8x8 ===

   Number of wires:                522
   Number of wire bits:            799
   Number of public wires:         455
   Number of public wire bits:     732
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 83
     $lut                           83


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis2/ffs_map.v

3.125. Executing TECHMAP pass (map to technology primitives).

3.125.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.125.2. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/ffs_map.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_PP0N_'.
Generating RTLIL representation for module `\$_SDFFE_PN0P_'.
Generating RTLIL representation for module `\$_SDFFE_PN0N_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFFE_PP1N_'.
Generating RTLIL representation for module `\$_SDFFE_PN1P_'.
Generating RTLIL representation for module `\$_SDFFE_PN1N_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP0N_'.
Generating RTLIL representation for module `\$_SDFFE_NN0P_'.
Generating RTLIL representation for module `\$_SDFFE_NN0N_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1N_'.
Generating RTLIL representation for module `\$_SDFFE_NN1P_'.
Generating RTLIL representation for module `\$_SDFFE_NN1N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_PP0_'.
Generating RTLIL representation for module `\$_DLATCH_NP0_'.
Generating RTLIL representation for module `\$_DLATCH_PN0_'.
Generating RTLIL representation for module `\$_DLATCH_NN0_'.
Generating RTLIL representation for module `\$_DLATCH_PP1_'.
Generating RTLIL representation for module `\$_DLATCH_NP1_'.
Generating RTLIL representation for module `\$_DLATCH_PN1_'.
Generating RTLIL representation for module `\$_DLATCH_NN1_'.
Successfully finished Verilog frontend.

3.125.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
No more expansions possible.
<suppressed ~218 debug messages>

yosys> opt_expr -mux_undef

3.126. Executing OPT_EXPR pass (perform const folding).
Optimizing module vedic8x8.
<suppressed ~2244 debug messages>

yosys> simplemap

3.127. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.128. Executing OPT_EXPR pass (perform const folding).
Optimizing module vedic8x8.

yosys> opt_merge

3.129. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\vedic8x8'.
<suppressed ~1884 debug messages>
Removed a total of 628 cells.

yosys> opt_dff -nodffe -nosdff

3.130. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.131. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \vedic8x8..
Removed 0 unused cells and 145 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.132. Executing OPT_EXPR pass (perform const folding).
Optimizing module vedic8x8.
<suppressed ~51 debug messages>

yosys> opt_merge -nomux

3.133. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\vedic8x8'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

yosys> opt_muxtree

3.134. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \vedic8x8..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.135. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \vedic8x8.
Performed a total of 0 changes.

yosys> opt_merge

3.136. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\vedic8x8'.
Removed a total of 0 cells.

yosys> opt_share

3.137. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.138. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.139. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \vedic8x8..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.140. Executing OPT_EXPR pass (perform const folding).
Optimizing module vedic8x8.
MAX OPT ITERATION = 1

yosys> abc -script /tmp/yosys_hwbnxe/abc_tmp_2.scr

3.141. Executing ABC pass (technology mapping using ABC).

3.141.1. Extracting gate netlist of module `\vedic8x8' to `<abc-temp-dir>/input.blif'..
Extracted 744 gates and 762 wires to a netlist network with 16 inputs and 16 outputs.

3.141.1.1. Executing ABC.
DE:   #PIs =  16  #Luts =    93  Max Lvl =  12  Avg Lvl =   6.81  [   0.19 sec. at Pass 0]{firstMap}[1]
DE:   #PIs =  16  #Luts =    90  Max Lvl =  14  Avg Lvl =   7.75  [   1.75 sec. at Pass 1]{initMapFlow}[2]
DE:   #PIs =  16  #Luts =    88  Max Lvl =  13  Avg Lvl =   7.19  [   0.76 sec. at Pass 2]{map}[2]
DE:   #PIs =  16  #Luts =    86  Max Lvl =  13  Avg Lvl =   7.19  [   1.21 sec. at Pass 3]{postMap}[6]
DE:   #PIs =  16  #Luts =    86  Max Lvl =  13  Avg Lvl =   7.19  [   0.48 sec. at Pass 4]{map}[12]
DE:   #PIs =  16  #Luts =    86  Max Lvl =  13  Avg Lvl =   7.19  [   2.18 sec. at Pass 5]{postMap}[36]
DE:   #PIs =  16  #Luts =    85  Max Lvl =  14  Avg Lvl =   7.31  [   1.08 sec. at Pass 6]{map}[50]
DE:   #PIs =  16  #Luts =    85  Max Lvl =  14  Avg Lvl =   7.31  [   2.64 sec. at Pass 7]{postMap}[50]
DE:   #PIs =  16  #Luts =    85  Max Lvl =  14  Avg Lvl =   7.31  [   0.99 sec. at Pass 8]{map}[50]
DE:   #PIs =  16  #Luts =    84  Max Lvl =  14  Avg Lvl =   7.31  [   2.41 sec. at Pass 9]{postMap}[50]
DE:   #PIs =  16  #Luts =    84  Max Lvl =  14  Avg Lvl =   7.31  [   1.12 sec. at Pass 10]{map}[50]
DE:   #PIs =  16  #Luts =    84  Max Lvl =  14  Avg Lvl =   7.31  [   2.28 sec. at Pass 11]{postMap}[50]
DE:   #PIs =  16  #Luts =    84  Max Lvl =  14  Avg Lvl =   7.31  [   1.08 sec. at Pass 12]{map}[50]
DE:   #PIs =  16  #Luts =    84  Max Lvl =  14  Avg Lvl =   7.31  [  10.50 sec. at Pass 13]{pushMap}[50]
DE:   #PIs =  16  #Luts =    84  Max Lvl =  14  Avg Lvl =   7.31  [   1.56 sec. at Pass 14]{finalMap}[50]

yosys> opt_expr

3.142. Executing OPT_EXPR pass (perform const folding).
Optimizing module vedic8x8.

yosys> opt_merge -nomux

3.143. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\vedic8x8'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.144. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \vedic8x8..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.145. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \vedic8x8.
Performed a total of 0 changes.

yosys> opt_merge

3.146. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\vedic8x8'.
Removed a total of 0 cells.

yosys> opt_share

3.147. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe

3.148. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.149. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \vedic8x8..
Removed 0 unused cells and 376 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.150. Executing OPT_EXPR pass (perform const folding).
Optimizing module vedic8x8.
MAX OPT ITERATION = 1

yosys> hierarchy -check

3.151. Executing HIERARCHY pass (managing design hierarchy).

3.151.1. Analyzing design hierarchy..
Top module:  \vedic8x8

3.151.2. Analyzing design hierarchy..
Top module:  \vedic8x8
Removed 0 unused modules.

yosys> stat

3.152. Printing statistics.

=== vedic8x8 ===

   Number of wires:                523
   Number of wire bits:            800
   Number of public wires:         455
   Number of public wire bits:     732
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 84
     $lut                           84


yosys> opt_clean -purge

3.153. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \vedic8x8..
Removed 0 unused cells and 436 unused wires.
<suppressed ~436 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.154. Executing Verilog backend.
Dumping module `\vedic8x8'.

End of script. Logfile hash: b0b2f565d8, CPU: user 1.75s system 0.06s, MEM: 30.92 MB peak
Yosys 0.18+10 (git sha1 92b23013e, gcc 11.2.0 -fPIC -Os)
Time spent: 99% 6x abc (1720 sec), 0% 23x opt_expr (0 sec), ...
real 109.46
user 1605.79
sys 115.99
