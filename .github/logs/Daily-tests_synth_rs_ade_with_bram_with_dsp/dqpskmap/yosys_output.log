
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.64
 Yosys 0.18+10 (git sha1 c98b0e94e, gcc 9.4.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 00:39:28 2022.

yosys> verilog_defaults -add -I.

yosys> read -vhdl dataConverter.vhd diffPhaseEncoder.vhd diffPhaseDecoder.vhd d_encoder_d_decoder.vhd TETRA_phy.vhd

yosys> verific -vhdl dataConverter.vhd diffPhaseEncoder.vhd diffPhaseDecoder.vhd d_encoder_d_decoder.vhd TETRA_phy.vhd

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 00:39:28 2022.
VERIFIC-INFO [VHDL-1504] default VHDL library search path is now "/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008"
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'dataConverter.vhd'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_1164' from file '/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_1164.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.standard' from file '/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/standard.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.textio' from file '/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/textio.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_arith' from file '/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_arith.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_unsigned' from file '/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_unsigned.vdb'
VERIFIC-INFO [VHDL-1012] dataConverter.vhd:22: analyzing entity 'dataconverter'
VERIFIC-INFO [VHDL-1010] dataConverter.vhd:31: analyzing architecture 'behavioral'
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'diffPhaseEncoder.vhd'
VERIFIC-INFO [VHDL-1012] diffPhaseEncoder.vhd:22: analyzing entity 'diffphaseencoder'
VERIFIC-INFO [VHDL-1010] diffPhaseEncoder.vhd:32: analyzing architecture 'behavioral'
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'diffPhaseDecoder.vhd'
VERIFIC-INFO [VHDL-1012] diffPhaseDecoder.vhd:22: analyzing entity 'diffphasedecoder'
VERIFIC-INFO [VHDL-1010] diffPhaseDecoder.vhd:32: analyzing architecture 'behavioral'
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'd_encoder_d_decoder.vhd'
VERIFIC-INFO [VHDL-1012] d_encoder_d_decoder.vhd:22: analyzing entity 'd_encoder_d_decoder'
VERIFIC-INFO [VHDL-1010] d_encoder_d_decoder.vhd:41: analyzing architecture 'behavioral'
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'TETRA_phy.vhd'
VERIFIC-INFO [VHDL-1012] TETRA_phy.vhd:22: analyzing entity 'tetra_phy'
VERIFIC-INFO [VHDL-1010] TETRA_phy.vhd:36: analyzing architecture 'behavioral'

yosys> synth_rs -top d_encoder_d_decoder -tech genesis -goal area -de -verilog synthesized.v

3. Executing synth_rs pass: v0.4.65

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v +/rapidsilicon/genesis/dsp_sim.v

3.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Successfully finished Verilog frontend.

3.3. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_sim.v' to AST representation.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\RS_DSP2_MULT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_ports'.
Generating RTLIL representation for module `\RS_DSP3'.
Generating RTLIL representation for module `\RS_DSP3_MULT'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_params'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top d_encoder_d_decoder

3.4. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VHDL-1067] d_encoder_d_decoder.vhd:22: processing 'd_encoder_d_decoder(Behavioral)'
VERIFIC-INFO [VHDL-1067] TETRA_phy.vhd:22: processing 'TETRA_phy(Behavioral)'
VERIFIC-INFO [VHDL-1067] dataConverter.vhd:22: processing 'dataConverter(Behavioral)'
VERIFIC-WARNING [VHDL-1251] dataConverter.vhd:40: 'valid_input' should be on the sensitivity list of the process
VERIFIC-WARNING [VHDL-1613] dataConverter.vhd:46: incomplete sensitivity list specified; assuming completeness
VERIFIC-INFO [VHDL-1067] diffPhaseEncoder.vhd:22: processing 'diffPhaseEncoder(Behavioral)'
VERIFIC-WARNING [VHDL-1251] TETRA_phy.vhd:93: 'tetra_clk_36_khz' should be on the sensitivity list of the process
VERIFIC-WARNING [VHDL-1613] TETRA_phy.vhd:98: incomplete sensitivity list specified; assuming completeness
VERIFIC-WARNING [VHDL-1251] TETRA_phy.vhd:103: 'tetra_clk_36_khz' should be on the sensitivity list of the process
VERIFIC-WARNING [VHDL-1613] TETRA_phy.vhd:108: incomplete sensitivity list specified; assuming completeness
VERIFIC-INFO [VHDL-1067] diffPhaseDecoder.vhd:22: processing 'diffPhaseDecoder(Behavioral)'
Importing module d_encoder_d_decoder.
Importing module TETRA_phy(Behavioral).
Importing module dataConverter(Behavioral).
Importing module diffPhaseDecoder(Behavioral).
Importing module diffPhaseEncoder(Behavioral).

3.4.1. Analyzing design hierarchy..
Top module:  \d_encoder_d_decoder
Used module:     \diffPhaseDecoder(Behavioral)
Used module:     \TETRA_phy(Behavioral)
Used module:         \diffPhaseEncoder(Behavioral)
Used module:         \dataConverter(Behavioral)

3.4.2. Analyzing design hierarchy..
Top module:  \d_encoder_d_decoder
Used module:     \diffPhaseDecoder(Behavioral)
Used module:     \TETRA_phy(Behavioral)
Used module:         \diffPhaseEncoder(Behavioral)
Used module:         \dataConverter(Behavioral)
Removed 0 unused modules.

yosys> proc

3.5. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.5.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.5.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.5.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.5.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.5.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.5.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.5.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.5.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.5.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.5.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.5.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.5.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module diffPhaseEncoder(Behavioral).
<suppressed ~5 debug messages>
Optimizing module diffPhaseDecoder(Behavioral).
Optimizing module dataConverter(Behavioral).
Optimizing module TETRA_phy(Behavioral).
Optimizing module d_encoder_d_decoder.

yosys> demuxmap

3.6. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> flatten

3.7. Executing FLATTEN pass (flatten design).
Deleting now unused module TETRA_phy(Behavioral).
Deleting now unused module dataConverter(Behavioral).
Deleting now unused module diffPhaseDecoder(Behavioral).
Deleting now unused module diffPhaseEncoder(Behavioral).
<suppressed ~4 debug messages>

yosys> demuxmap

3.8. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> tribuf -logic -formal

3.9. Executing TRIBUF pass.

yosys> deminout

3.10. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module d_encoder_d_decoder.

yosys> opt_clean

3.12. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \d_encoder_d_decoder..
Removed 4 unused cells and 97 unused wires.
<suppressed ~22 debug messages>

yosys> check

3.13. Executing CHECK pass (checking for obvious problems).
Checking module d_encoder_d_decoder...
Found and reported 0 problems.

yosys> opt_expr

3.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module d_encoder_d_decoder.

yosys> opt_merge -nomux

3.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\d_encoder_d_decoder'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.16. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \d_encoder_d_decoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

yosys> opt_reduce

3.17. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \d_encoder_d_decoder.
Performed a total of 0 changes.

yosys> opt_merge

3.18. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\d_encoder_d_decoder'.
Removed a total of 0 cells.

yosys> opt_share

3.19. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.20. Executing OPT_DFF pass (perform DFF optimizations).
Removing never-active async load on $flatten\TETRA_TX.\PHENC.$verific$pr_state_reg$diffPhaseEncoder.vhd:65$205 ($aldff) from module d_encoder_d_decoder.
Changing const-value async load to async reset on $flatten\TETRA_TX.\DCONV.$verific$shift_reg.s_reg_v_reg$dataConverter.vhd:43$52 ($aldff) from module d_encoder_d_decoder.
Removing never-active async load on $flatten\TETRA_RX.$verific$phase_decoder.q_k_old_reg$diffPhaseDecoder.vhd:53$100 ($aldff) from module d_encoder_d_decoder.
Removing never-active async load on $flatten\TETRA_RX.$verific$phase_decoder.i_k_old_reg$diffPhaseDecoder.vhd:53$98 ($aldff) from module d_encoder_d_decoder.
Removing never-active async load on $flatten\TETRA_RX.$verific$phase_decoder.b_k_tmp_reg$diffPhaseDecoder.vhd:53$104 ($aldff) from module d_encoder_d_decoder.
Removing never-active async load on $flatten\TETRA_RX.$verific$phase_decoder.a_k_tmp_reg$diffPhaseDecoder.vhd:53$102 ($aldff) from module d_encoder_d_decoder.

yosys> opt_clean

3.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \d_encoder_d_decoder..

yosys> opt_expr

3.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module d_encoder_d_decoder.
MAX OPT ITERATION = 1

yosys> fsm -encoding binary

3.23. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.23.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.23.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.23.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.23.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \d_encoder_d_decoder..

yosys> fsm_opt

3.23.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.23.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.23.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.23.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt_expr

3.24. Executing OPT_EXPR pass (perform const folding).
Optimizing module d_encoder_d_decoder.

yosys> opt_merge -nomux

3.25. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\d_encoder_d_decoder'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.26. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \d_encoder_d_decoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

yosys> opt_reduce

3.27. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \d_encoder_d_decoder.
Performed a total of 0 changes.

yosys> opt_merge

3.28. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\d_encoder_d_decoder'.
Removed a total of 0 cells.

yosys> opt_share

3.29. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.30. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\TETRA_TX.\DCONV.$verific$shift_reg.s_reg_v_reg$dataConverter.vhd:43$52 ($adff) from module d_encoder_d_decoder (D = { \TETRA_TX.DCONV.shift_reg.s_reg_v [0] \tx_tetra_bit_stream_input }, Q = \TETRA_TX.DCONV.shift_reg.s_reg_v).
Adding EN signal on $flatten\TETRA_RX.$verific$phase_decoder.q_k_old_reg$diffPhaseDecoder.vhd:53$100 ($dff) from module d_encoder_d_decoder (D = $flatten\TETRA_RX.$verific$n173$71, Q = \TETRA_RX.phase_decoder.q_k_old).
Adding EN signal on $flatten\TETRA_RX.$verific$phase_decoder.i_k_old_reg$diffPhaseDecoder.vhd:53$98 ($dff) from module d_encoder_d_decoder (D = $flatten\TETRA_RX.$verific$n164$70, Q = \TETRA_RX.phase_decoder.i_k_old).
Adding EN signal on $flatten\TETRA_RX.$verific$phase_decoder.b_k_tmp_reg$diffPhaseDecoder.vhd:53$104 ($dff) from module d_encoder_d_decoder (D = $flatten\TETRA_RX.$verific$n111$66 [15:0], Q = \TETRA_RX.phase_decoder.b_k_tmp).
Adding EN signal on $flatten\TETRA_RX.$verific$phase_decoder.a_k_tmp_reg$diffPhaseDecoder.vhd:53$102 ($dff) from module d_encoder_d_decoder (D = $flatten\TETRA_RX.$verific$n43$62, Q = \TETRA_RX.phase_decoder.a_k_tmp).

yosys> opt_clean

3.31. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \d_encoder_d_decoder..
Removed 7 unused cells and 7 unused wires.
<suppressed ~8 debug messages>

yosys> opt_expr

3.32. Executing OPT_EXPR pass (perform const folding).
Optimizing module d_encoder_d_decoder.

yosys> opt_muxtree

3.33. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \d_encoder_d_decoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

yosys> opt_reduce

3.34. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \d_encoder_d_decoder.
Performed a total of 0 changes.

yosys> opt_merge

3.35. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\d_encoder_d_decoder'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

yosys> opt_share

3.36. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.37. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.38. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \d_encoder_d_decoder..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.39. Executing OPT_EXPR pass (perform const folding).
Optimizing module d_encoder_d_decoder.

yosys> opt_muxtree

3.40. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \d_encoder_d_decoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

yosys> opt_reduce

3.41. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \d_encoder_d_decoder.
Performed a total of 0 changes.

yosys> opt_merge

3.42. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\d_encoder_d_decoder'.
Removed a total of 0 cells.

yosys> opt_share

3.43. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.44. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.45. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \d_encoder_d_decoder..

yosys> opt_expr

3.46. Executing OPT_EXPR pass (perform const folding).
Optimizing module d_encoder_d_decoder.
MAX OPT ITERATION = 3

yosys> wreduce -keepdc

3.47. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 24) from mux cell d_encoder_d_decoder.$flatten\TETRA_TX.\PHENC.$verific$mux_171$diffPhaseEncoder.vhd:211$215 ($mux).
Removed top 8 bits (of 16) from FF cell d_encoder_d_decoder.$auto$ff.cc:262:slice$231 ($dffe).
Removed top 8 bits (of 16) from FF cell d_encoder_d_decoder.$auto$ff.cc:262:slice$226 ($dffe).
Removed top 9 bits (of 17) from port Y of cell d_encoder_d_decoder.$flatten\TETRA_RX.$verific$sub_13$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:974$88 ($sub).
Removed top 9 bits (of 17) from port A of cell d_encoder_d_decoder.$flatten\TETRA_RX.$verific$sub_13$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:974$88 ($sub).
Removed top 9 bits (of 17) from port B of cell d_encoder_d_decoder.$flatten\TETRA_RX.$verific$sub_13$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:974$88 ($sub).
Removed top 8 bits (of 16) from port Y of cell d_encoder_d_decoder.$flatten\TETRA_RX.$verific$add_9$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:720$84 ($add).
Removed top 8 bits (of 16) from port A of cell d_encoder_d_decoder.$flatten\TETRA_RX.$verific$add_9$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:720$84 ($add).
Removed top 8 bits (of 16) from port B of cell d_encoder_d_decoder.$flatten\TETRA_RX.$verific$add_9$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:720$84 ($add).
Removed top 8 bits (of 16) from port Y of cell d_encoder_d_decoder.$flatten\TETRA_RX.$verific$mult_11$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:653$86 ($mul).
Removed top 8 bits (of 16) from port Y of cell d_encoder_d_decoder.$flatten\TETRA_RX.$verific$mult_12$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:653$87 ($mul).
Removed top 8 bits (of 16) from port Y of cell d_encoder_d_decoder.$flatten\TETRA_RX.$verific$mult_5$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:653$82 ($mul).
Removed top 8 bits (of 16) from port Y of cell d_encoder_d_decoder.$flatten\TETRA_RX.$verific$mult_6$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:653$83 ($mul).
Removed top 9 bits (of 17) from wire d_encoder_d_decoder.$flatten\TETRA_RX.$verific$n111$66.
Removed top 8 bits (of 16) from wire d_encoder_d_decoder.$flatten\TETRA_RX.$verific$n77$64.
Removed top 8 bits (of 16) from wire d_encoder_d_decoder.$flatten\TETRA_RX.$verific$n94$65.
Removed top 1 bits (of 3) from wire d_encoder_d_decoder.$flatten\TETRA_TX.\PHENC.$verific$n490$194.

yosys> peepopt

3.48. Executing PEEPOPT pass (run peephole optimizers).

yosys> opt_clean

3.49. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \d_encoder_d_decoder..
Removed 0 unused cells and 5 unused wires.
<suppressed ~1 debug messages>

yosys> demuxmap

3.50. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> stat

3.51. Printing statistics.

=== d_encoder_d_decoder ===

   Number of wires:                105
   Number of wire bits:            442
   Number of public wires:          57
   Number of public wire bits:     223
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 31
     $add                            1
     $adffe                          1
     $and                            3
     $bmux                           3
     $dff                            3
     $dffe                           4
     $mul                            4
     $mux                            7
     $not                            3
     $reduce_and                     1
     $sub                            1


yosys> wreduce t:$mul

3.52. Executing WREDUCE pass (reducing word size of cells).

yosys> rs_dsp_macc

3.53. Executing RS_DSP_MACC pass.

yosys> techmap -map +/mul2dsp.v -D DSP_A_MAXWIDTH=20 -D DSP_B_MAXWIDTH=18 -D DSP_A_MINWIDTH=11 -D DSP_B_MINWIDTH=10 -D DSP_NAME=$__RS_MUL20X18

3.54. Executing TECHMAP pass (map to technology primitives).

3.54.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/mul2dsp.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

3.54.2. Continuing TECHMAP pass.
Using template $paramod$08c2d337fba0d8fba53e35b89be96dd105931d9e\_90_soft_mul for cells of type $mul.
No more expansions possible.
<suppressed ~45 debug messages>

yosys> chtype -set $mul t:$__soft_mul

yosys> techmap -map +/mul2dsp.v -D DSP_A_MAXWIDTH=10 -D DSP_B_MAXWIDTH=9 -D DSP_A_MINWIDTH=4 -D DSP_B_MINWIDTH=4 -D DSP_NAME=$__RS_MUL10X9

3.55. Executing TECHMAP pass (map to technology primitives).

3.55.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/mul2dsp.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

3.55.2. Continuing TECHMAP pass.
Using template $paramod$8c4ff8bd81efbaca1fe17fdd943cd27203b6cf6d\_80_mul for cells of type $mul.
No more expansions possible.
<suppressed ~131 debug messages>

yosys> chtype -set $mul t:$__soft_mul

yosys> techmap -map +/rapidsilicon/genesis/dsp_map.v -D USE_DSP_CFG_PARAMS=0

3.56. Executing TECHMAP pass (map to technology primitives).

3.56.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_map.v' to AST representation.
Generating RTLIL representation for module `\$__RS_MUL20X18'.
Generating RTLIL representation for module `\$__RS_MUL10X9'.
Successfully finished Verilog frontend.

3.56.2. Continuing TECHMAP pass.
Using template $paramod$555da02a8e5e2e31ac61a83c85063aad481b8476\$__RS_MUL10X9 for cells of type $__RS_MUL10X9.
No more expansions possible.
<suppressed ~27 debug messages>

yosys> rs_dsp_simd

3.57. Executing RS_DSP_SIMD pass.
 SIMD: $flatten\TETRA_RX.$verific$mult_6$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:653$83 (dsp_t1_10x9x32_cfg_ports) + $flatten\TETRA_RX.$verific$mult_12$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:653$87 (dsp_t1_10x9x32_cfg_ports) => simd_$flatten\TETRA_RX.$verific$mult_6$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:653$83_$flatten\TETRA_RX.$verific$mult_12$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:653$87 (RS_DSP2)
 SIMD: $flatten\TETRA_RX.$verific$mult_5$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:653$82 (dsp_t1_10x9x32_cfg_ports) + $flatten\TETRA_RX.$verific$mult_11$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:653$86 (dsp_t1_10x9x32_cfg_ports) => simd_$flatten\TETRA_RX.$verific$mult_5$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:653$82_$flatten\TETRA_RX.$verific$mult_11$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:653$86 (RS_DSP2)

yosys> techmap -map +/rapidsilicon/genesis/dsp_final_map.v

3.58. Executing TECHMAP pass (map to technology primitives).

3.58.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_final_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_final_map.v' to AST representation.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_params'.
Successfully finished Verilog frontend.

3.58.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~6 debug messages>

yosys> rs_dsp_io_regs

3.59. Executing RS_DSP_IO_REGS pass.

yosys> alumacc

3.60. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module d_encoder_d_decoder:
  creating $macc model for $flatten\TETRA_RX.$verific$add_9$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:720$84 ($add).
  creating $macc model for $flatten\TETRA_RX.$verific$sub_13$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:974$88 ($sub).
  creating $alu model for $macc $flatten\TETRA_RX.$verific$sub_13$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:974$88.
  creating $alu model for $macc $flatten\TETRA_RX.$verific$add_9$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:720$84.
  creating $alu cell for $flatten\TETRA_RX.$verific$add_9$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:720$84: $auto$alumacc.cc:485:replace_alu$252
  creating $alu cell for $flatten\TETRA_RX.$verific$sub_13$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:974$88: $auto$alumacc.cc:485:replace_alu$255
  created 2 $alu and 0 $macc cells.

yosys> opt_expr

3.61. Executing OPT_EXPR pass (perform const folding).
Optimizing module d_encoder_d_decoder.

yosys> opt_merge -nomux

3.62. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\d_encoder_d_decoder'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.63. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \d_encoder_d_decoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

yosys> opt_reduce

3.64. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \d_encoder_d_decoder.
Performed a total of 0 changes.

yosys> opt_merge

3.65. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\d_encoder_d_decoder'.
Removed a total of 0 cells.

yosys> opt_share

3.66. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.67. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.68. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \d_encoder_d_decoder..
Removed 0 unused cells and 56 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.69. Executing OPT_EXPR pass (perform const folding).
Optimizing module d_encoder_d_decoder.
MAX OPT ITERATION = 1

yosys> stat

3.70. Printing statistics.

=== d_encoder_d_decoder ===

   Number of wires:                113
   Number of wire bits:            518
   Number of public wires:          57
   Number of public wire bits:     223
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 29
     $adffe                          1
     $alu                            2
     $and                            3
     $bmux                           3
     $dff                            3
     $dffe                           4
     $mux                            7
     $not                            3
     $reduce_and                     1
     RS_DSP2_MULT                    2


yosys> memory -nomap

3.71. Executing MEMORY pass.

yosys> opt_mem

3.71.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.71.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.71.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.71.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.71.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `$auto$memory_bmux2rom.cc:63:execute$261'[0] in module `\d_encoder_d_decoder': no output FF found.
Checking read port `$auto$memory_bmux2rom.cc:63:execute$258'[0] in module `\d_encoder_d_decoder': no output FF found.
Checking read port address `$auto$memory_bmux2rom.cc:63:execute$261'[0] in module `\d_encoder_d_decoder': merged address FF to cell.
Checking read port address `$auto$memory_bmux2rom.cc:63:execute$258'[0] in module `\d_encoder_d_decoder': merged address FF to cell.

yosys> opt_clean

3.71.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \d_encoder_d_decoder..

yosys> memory_share

3.71.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.71.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.71.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \d_encoder_d_decoder..

yosys> memory_collect

3.71.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.72. Printing statistics.

=== d_encoder_d_decoder ===

   Number of wires:                113
   Number of wire bits:            518
   Number of public wires:          57
   Number of public wire bits:     223
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 29
     $adffe                          1
     $alu                            2
     $and                            3
     $bmux                           1
     $dff                            3
     $dffe                           4
     $mem_v2                         2
     $mux                            7
     $not                            3
     $reduce_and                     1
     RS_DSP2_MULT                    2


yosys> muxpack

3.73. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~7 debug messages>

yosys> opt_clean

3.74. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \d_encoder_d_decoder..

yosys> memory_bram -rules +/rapidsilicon/genesis/brams.txt

3.75. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).
Processing d_encoder_d_decoder.$auto$memory_bmux2rom.cc:63:execute$258:
  Properties: ports=1 bits=64 rports=1 wports=0 dbits=8 abits=3 words=8
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 1):
    Bram geometry: abits=10 dbits=36 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=1016 dwaste=28 bwaste=36800 waste=36800 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 1) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 2):
    Bram geometry: abits=11 dbits=18 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=2040 dwaste=10 bwaste=36800 waste=36800 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 2) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 3):
    Bram geometry: abits=12 dbits=9 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=4088 dwaste=1 bwaste=36800 waste=36800 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 3) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 4):
    Bram geometry: abits=13 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=8184 dwaste=0 bwaste=32736 waste=32736 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 4) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 5):
    Bram geometry: abits=14 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=16376 dwaste=0 bwaste=32752 waste=32752 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 5) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 6):
    Bram geometry: abits=15 dbits=1 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=32760 dwaste=0 bwaste=32760 waste=32760 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 6) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 1):
    Bram geometry: abits=10 dbits=36 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=1016 dwaste=28 bwaste=36800 waste=36800 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 1) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 2):
    Bram geometry: abits=11 dbits=18 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=2040 dwaste=10 bwaste=36800 waste=36800 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 2) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 3):
    Bram geometry: abits=12 dbits=9 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=4088 dwaste=1 bwaste=36800 waste=36800 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 3) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 4):
    Bram geometry: abits=13 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=8184 dwaste=0 bwaste=32736 waste=32736 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 4) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 5):
    Bram geometry: abits=14 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=16376 dwaste=0 bwaste=32752 waste=32752 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 5) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 6):
    Bram geometry: abits=15 dbits=1 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=32760 dwaste=0 bwaste=32760 waste=32760 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 6) rejected: requirement 'min bits 128' not met.
  No acceptable bram resources found.
Processing d_encoder_d_decoder.$auto$memory_bmux2rom.cc:63:execute$261:
  Properties: ports=1 bits=64 rports=1 wports=0 dbits=8 abits=3 words=8
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 1):
    Bram geometry: abits=10 dbits=36 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=1016 dwaste=28 bwaste=36800 waste=36800 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 1) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 2):
    Bram geometry: abits=11 dbits=18 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=2040 dwaste=10 bwaste=36800 waste=36800 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 2) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 3):
    Bram geometry: abits=12 dbits=9 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=4088 dwaste=1 bwaste=36800 waste=36800 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 3) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 4):
    Bram geometry: abits=13 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=8184 dwaste=0 bwaste=32736 waste=32736 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 4) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 5):
    Bram geometry: abits=14 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=16376 dwaste=0 bwaste=32752 waste=32752 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 5) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 6):
    Bram geometry: abits=15 dbits=1 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=32760 dwaste=0 bwaste=32760 waste=32760 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 6) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 1):
    Bram geometry: abits=10 dbits=36 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=1016 dwaste=28 bwaste=36800 waste=36800 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 1) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 2):
    Bram geometry: abits=11 dbits=18 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=2040 dwaste=10 bwaste=36800 waste=36800 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 2) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 3):
    Bram geometry: abits=12 dbits=9 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=4088 dwaste=1 bwaste=36800 waste=36800 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 3) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 4):
    Bram geometry: abits=13 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=8184 dwaste=0 bwaste=32736 waste=32736 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 4) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 5):
    Bram geometry: abits=14 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=16376 dwaste=0 bwaste=32752 waste=32752 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 5) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 6):
    Bram geometry: abits=15 dbits=1 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=32760 dwaste=0 bwaste=32760 waste=32760 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 6) rejected: requirement 'min bits 128' not met.
  No acceptable bram resources found.

yosys> techmap -map +/rapidsilicon/genesis/brams_map.v

3.76. Executing TECHMAP pass (map to technology primitives).

3.76.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/brams_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_TDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM18_TDP'.
/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/brams_map.v:236: Warning: Range [2:0] select out of bounds on signal `\DOP': Setting 1 MSB bits to undef.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_SDP'.
Successfully finished Verilog frontend.

3.76.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~5 debug messages>

yosys> pmuxtree

3.77. Executing PMUXTREE pass.

yosys> muxpack

3.78. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~7 debug messages>

yosys> memory_map

3.79. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory $auto$memory_bmux2rom.cc:63:execute$258 in module \d_encoder_d_decoder:
  created 8 $dff cells and 0 static cells of width 8.
Extracted data FF from read port 0 of d_encoder_d_decoder.$auto$memory_bmux2rom.cc:63:execute$258: $$auto$memory_bmux2rom.cc:63:execute$258$rdreg[0]
  read interface: 1 $dff and 7 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $auto$memory_bmux2rom.cc:63:execute$261 in module \d_encoder_d_decoder:
  created 8 $dff cells and 0 static cells of width 8.
Extracted data FF from read port 0 of d_encoder_d_decoder.$auto$memory_bmux2rom.cc:63:execute$261: $$auto$memory_bmux2rom.cc:63:execute$261$rdreg[0]
  read interface: 1 $dff and 7 $mux cells.
  write interface: 0 write mux blocks.

yosys> stat

3.80. Printing statistics.

=== d_encoder_d_decoder ===

   Number of wires:                175
   Number of wire bits:           1014
   Number of public wires:          57
   Number of public wire bits:     223
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 59
     $adffe                          1
     $alu                            2
     $and                            3
     $bmux                           1
     $dff                           21
     $dffe                           4
     $mux                           21
     $not                            3
     $reduce_and                     1
     RS_DSP2_MULT                    2


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.81. Executing TECHMAP pass (map to technology primitives).

3.81.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.81.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.81.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $dff.
Using template $paramod$a1bc51c02ce12ac21eb18988e83292af48ed7d72\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $bmux.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001000 for cells of type $lcu.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $or.
No more expansions possible.
<suppressed ~448 debug messages>

yosys> stat

3.82. Printing statistics.

=== d_encoder_d_decoder ===

   Number of wires:                269
   Number of wire bits:           3564
   Number of public wires:          57
   Number of public wire bits:     223
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                577
     $_AND_                         52
     $_DFFE_NP0P_                    2
     $_DFFE_NP_                     32
     $_DFF_N_                       21
     $_DFF_P_                      128
     $_MUX_                        263
     $_NOT_                         19
     $_OR_                          24
     $_XOR_                         34
     RS_DSP2_MULT                    2


yosys> opt_expr

3.83. Executing OPT_EXPR pass (perform const folding).
Optimizing module d_encoder_d_decoder.
<suppressed ~62 debug messages>

yosys> opt_merge -nomux

3.84. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\d_encoder_d_decoder'.
<suppressed ~120 debug messages>
Removed a total of 40 cells.

yosys> opt_muxtree

3.85. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \d_encoder_d_decoder..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.86. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \d_encoder_d_decoder.
Performed a total of 0 changes.

yosys> opt_merge

3.87. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\d_encoder_d_decoder'.
Removed a total of 0 cells.

yosys> opt_share

3.88. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.89. Executing OPT_DFF pass (perform DFF optimizations).
Handling const CLK on $auto$ff.cc:262:slice$485 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$897 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$810 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$857 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$617 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$633 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$593 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$585 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$794 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$865 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$625 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$818 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$601 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$517 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$533 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$802 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$478 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$479 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$480 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$481 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$482 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$483 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$484 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$510 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$511 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$512 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$513 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$514 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$515 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$516 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$526 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$527 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$528 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$529 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$530 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$531 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$532 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$578 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$579 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$580 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$581 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$582 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$583 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$584 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$586 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$587 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$588 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$589 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$590 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$591 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$592 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$594 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$595 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$596 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$597 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$598 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$599 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$600 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$610 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$611 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$612 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$613 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$614 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$615 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$616 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$618 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$619 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$620 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$621 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$622 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$623 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$624 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$626 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$627 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$628 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$629 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$630 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$631 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$632 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$787 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$788 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$789 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$790 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$791 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$792 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$793 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$795 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$796 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$797 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$798 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$799 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$800 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$801 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$803 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$804 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$805 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$806 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$807 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$808 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$809 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$811 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$812 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$813 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$814 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$815 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$816 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$817 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$850 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$851 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$852 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$853 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$854 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$855 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$856 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$858 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$859 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$860 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$861 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$862 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$863 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$864 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$890 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$891 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$892 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$893 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$894 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$895 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$896 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).

yosys> opt_clean

3.90. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \d_encoder_d_decoder..
Removed 26 unused cells and 131 unused wires.
<suppressed ~27 debug messages>

yosys> opt_expr

3.91. Executing OPT_EXPR pass (perform const folding).
Optimizing module d_encoder_d_decoder.
<suppressed ~72 debug messages>

yosys> opt_muxtree

3.92. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \d_encoder_d_decoder..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.93. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \d_encoder_d_decoder.
Performed a total of 0 changes.

yosys> opt_merge

3.94. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\d_encoder_d_decoder'.
<suppressed ~105 debug messages>
Removed a total of 35 cells.

yosys> opt_share

3.95. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.96. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.97. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \d_encoder_d_decoder..
Removed 0 unused cells and 8 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.98. Executing OPT_EXPR pass (perform const folding).
Optimizing module d_encoder_d_decoder.

yosys> opt_muxtree

3.99. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \d_encoder_d_decoder..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.100. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \d_encoder_d_decoder.
Performed a total of 0 changes.

yosys> opt_merge

3.101. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\d_encoder_d_decoder'.
Removed a total of 0 cells.

yosys> opt_share

3.102. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.103. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.104. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \d_encoder_d_decoder..

yosys> opt_expr

3.105. Executing OPT_EXPR pass (perform const folding).
Optimizing module d_encoder_d_decoder.
MAX OPT ITERATION = 3

yosys> opt_expr -full

3.106. Executing OPT_EXPR pass (perform const folding).
Optimizing module d_encoder_d_decoder.
<suppressed ~22 debug messages>

yosys> techmap -map +/techmap.v

3.107. Executing TECHMAP pass (map to technology primitives).

3.107.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.107.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> opt_expr

3.108. Executing OPT_EXPR pass (perform const folding).
Optimizing module d_encoder_d_decoder.

yosys> opt_merge -nomux

3.109. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\d_encoder_d_decoder'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.110. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \d_encoder_d_decoder..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.111. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \d_encoder_d_decoder.
Performed a total of 0 changes.

yosys> opt_merge

3.112. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\d_encoder_d_decoder'.
Removed a total of 0 cells.

yosys> opt_dff -nosdff -nodffe -sat

3.113. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.114. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \d_encoder_d_decoder..

yosys> opt_expr

3.115. Executing OPT_EXPR pass (perform const folding).
Optimizing module d_encoder_d_decoder.
MAX OPT ITERATION = 1

yosys> abc -dff

3.116. Executing ABC pass (technology mapping using ABC).

3.116.1. Summary of detected clock domains:
  108 cells in clk=!\rx_clk_18_KHz, en=$auto$opt_dff.cc:219:make_patterns_logic$229, arst={ }, srst={ }
  34 cells in clk=!\rx_clk_18_KHz, en=\rx_en, arst={ }, srst={ }
  26 cells in clk=!\tx_tetra_clk_36_KHz, en={ }, arst={ }, srst={ }
  6 cells in clk=!\tx_tetra_clk_36_KHz, en=\tx_tetra_valid_input, arst=\tx_tetra_rst, srst={ }
  41 cells in clk=!\tx_tetra_clk_18_KHz, en={ }, arst={ }, srst={ }

3.116.2. Extracting gate netlist of module `\d_encoder_d_decoder' to `<abc-temp-dir>/input.blif'..
Found matching negedge clock domain: \rx_clk_18_KHz, enabled by $auto$opt_dff.cc:219:make_patterns_logic$229
Extracted 108 gates and 142 wires to a netlist network with 34 inputs and 17 outputs.

3.116.2.1. Executing ABC.

3.116.3. Extracting gate netlist of module `\d_encoder_d_decoder' to `<abc-temp-dir>/input.blif'..
Found matching negedge clock domain: \rx_clk_18_KHz, enabled by \rx_en
Extracted 32 gates and 50 wires to a netlist network with 17 inputs and 16 outputs.

3.116.3.1. Executing ABC.

3.116.4. Extracting gate netlist of module `\d_encoder_d_decoder' to `<abc-temp-dir>/input.blif'..
Found matching negedge clock domain: \tx_tetra_clk_36_KHz
Extracted 26 gates and 33 wires to a netlist network with 5 inputs and 12 outputs.

3.116.4.1. Executing ABC.

3.116.5. Extracting gate netlist of module `\d_encoder_d_decoder' to `<abc-temp-dir>/input.blif'..
Found matching negedge clock domain: \tx_tetra_clk_36_KHz, enabled by \tx_tetra_valid_input, asynchronously reset by \tx_tetra_rst
Extracted 6 gates and 7 wires to a netlist network with 1 inputs and 6 outputs.

3.116.5.1. Executing ABC.

3.116.6. Extracting gate netlist of module `\d_encoder_d_decoder' to `<abc-temp-dir>/input.blif'..
Found matching negedge clock domain: \tx_tetra_clk_18_KHz
Extracted 41 gates and 56 wires to a netlist network with 13 inputs and 8 outputs.

3.116.6.1. Executing ABC.

yosys> abc -dff

3.117. Executing ABC pass (technology mapping using ABC).

3.117.1. Summary of detected clock domains:
  6 cells in clk=!\tx_tetra_clk_36_KHz, en=\tx_tetra_valid_input, arst=\tx_tetra_rst, srst={ }
  14 cells in clk=!\tx_tetra_clk_36_KHz, en={ }, arst={ }, srst={ }
  85 cells in clk=!\rx_clk_18_KHz, en=$abc$1151$auto$opt_dff.cc:219:make_patterns_logic$229, arst={ }, srst={ }
  34 cells in clk=!\rx_clk_18_KHz, en=\rx_en, arst={ }, srst={ }
  57 cells in clk=!\tx_tetra_clk_18_KHz, en={ }, arst={ }, srst={ }

3.117.2. Extracting gate netlist of module `\d_encoder_d_decoder' to `<abc-temp-dir>/input.blif'..
Found matching negedge clock domain: \tx_tetra_clk_36_KHz, enabled by \tx_tetra_valid_input, asynchronously reset by \tx_tetra_rst
Extracted 6 gates and 7 wires to a netlist network with 1 inputs and 6 outputs.

3.117.2.1. Executing ABC.

3.117.3. Extracting gate netlist of module `\d_encoder_d_decoder' to `<abc-temp-dir>/input.blif'..
Found matching negedge clock domain: \tx_tetra_clk_36_KHz
Extracted 14 gates and 20 wires to a netlist network with 6 inputs and 9 outputs.

3.117.3.1. Executing ABC.

3.117.4. Extracting gate netlist of module `\d_encoder_d_decoder' to `<abc-temp-dir>/input.blif'..
Found matching negedge clock domain: \rx_clk_18_KHz, enabled by $abc$1151$auto$opt_dff.cc:219:make_patterns_logic$229
Extracted 85 gates and 119 wires to a netlist network with 34 inputs and 17 outputs.

3.117.4.1. Executing ABC.

3.117.5. Extracting gate netlist of module `\d_encoder_d_decoder' to `<abc-temp-dir>/input.blif'..
Found matching negedge clock domain: \rx_clk_18_KHz, enabled by \rx_en
Extracted 32 gates and 49 wires to a netlist network with 17 inputs and 16 outputs.

3.117.5.1. Executing ABC.

3.117.6. Extracting gate netlist of module `\d_encoder_d_decoder' to `<abc-temp-dir>/input.blif'..
Found matching negedge clock domain: \tx_tetra_clk_18_KHz
Extracted 57 gates and 69 wires to a netlist network with 12 inputs and 9 outputs.

3.117.6.1. Executing ABC.

yosys> abc -dff

3.118. Executing ABC pass (technology mapping using ABC).

3.118.1. Summary of detected clock domains:
  6 cells in clk=!\tx_tetra_clk_36_KHz, en=\tx_tetra_valid_input, arst=\tx_tetra_rst, srst={ }
  14 cells in clk=!\tx_tetra_clk_36_KHz, en={ }, arst={ }, srst={ }
  85 cells in clk=!\rx_clk_18_KHz, en=$abc$1419$abc$1151$auto$opt_dff.cc:219:make_patterns_logic$229, arst={ }, srst={ }
  34 cells in clk=!\rx_clk_18_KHz, en=\rx_en, arst={ }, srst={ }
  55 cells in clk=!\tx_tetra_clk_18_KHz, en={ }, arst={ }, srst={ }

3.118.2. Extracting gate netlist of module `\d_encoder_d_decoder' to `<abc-temp-dir>/input.blif'..
Found matching negedge clock domain: \tx_tetra_clk_36_KHz, enabled by \tx_tetra_valid_input, asynchronously reset by \tx_tetra_rst
Extracted 6 gates and 7 wires to a netlist network with 1 inputs and 6 outputs.

3.118.2.1. Executing ABC.

3.118.3. Extracting gate netlist of module `\d_encoder_d_decoder' to `<abc-temp-dir>/input.blif'..
Found matching negedge clock domain: \tx_tetra_clk_36_KHz
Extracted 14 gates and 20 wires to a netlist network with 6 inputs and 9 outputs.

3.118.3.1. Executing ABC.

3.118.4. Extracting gate netlist of module `\d_encoder_d_decoder' to `<abc-temp-dir>/input.blif'..
Found matching negedge clock domain: \rx_clk_18_KHz, enabled by $abc$1419$abc$1151$auto$opt_dff.cc:219:make_patterns_logic$229
Extracted 85 gates and 119 wires to a netlist network with 34 inputs and 17 outputs.

3.118.4.1. Executing ABC.

3.118.5. Extracting gate netlist of module `\d_encoder_d_decoder' to `<abc-temp-dir>/input.blif'..
Found matching negedge clock domain: \rx_clk_18_KHz, enabled by \rx_en
Extracted 32 gates and 49 wires to a netlist network with 17 inputs and 16 outputs.

3.118.5.1. Executing ABC.

3.118.6. Extracting gate netlist of module `\d_encoder_d_decoder' to `<abc-temp-dir>/input.blif'..
Found matching negedge clock domain: \tx_tetra_clk_18_KHz
Extracted 55 gates and 67 wires to a netlist network with 12 inputs and 9 outputs.

3.118.6.1. Executing ABC.

yosys> abc -dff

3.119. Executing ABC pass (technology mapping using ABC).

3.119.1. Summary of detected clock domains:
  6 cells in clk=!\tx_tetra_clk_36_KHz, en=\tx_tetra_valid_input, arst=\tx_tetra_rst, srst={ }
  34 cells in clk=!\rx_clk_18_KHz, en=\rx_en, arst={ }, srst={ }
  14 cells in clk=!\tx_tetra_clk_36_KHz, en={ }, arst={ }, srst={ }
  85 cells in clk=!\rx_clk_18_KHz, en=$abc$1657$abc$1419$abc$1151$auto$opt_dff.cc:219:make_patterns_logic$229, arst={ }, srst={ }
  55 cells in clk=!\tx_tetra_clk_18_KHz, en={ }, arst={ }, srst={ }

3.119.2. Extracting gate netlist of module `\d_encoder_d_decoder' to `<abc-temp-dir>/input.blif'..
Found matching negedge clock domain: \tx_tetra_clk_36_KHz, enabled by \tx_tetra_valid_input, asynchronously reset by \tx_tetra_rst
Extracted 6 gates and 7 wires to a netlist network with 1 inputs and 6 outputs.

3.119.2.1. Executing ABC.

3.119.3. Extracting gate netlist of module `\d_encoder_d_decoder' to `<abc-temp-dir>/input.blif'..
Found matching negedge clock domain: \rx_clk_18_KHz, enabled by \rx_en
Extracted 32 gates and 49 wires to a netlist network with 17 inputs and 16 outputs.

3.119.3.1. Executing ABC.

3.119.4. Extracting gate netlist of module `\d_encoder_d_decoder' to `<abc-temp-dir>/input.blif'..
Found matching negedge clock domain: \tx_tetra_clk_36_KHz
Extracted 14 gates and 20 wires to a netlist network with 6 inputs and 9 outputs.

3.119.4.1. Executing ABC.

3.119.5. Extracting gate netlist of module `\d_encoder_d_decoder' to `<abc-temp-dir>/input.blif'..
Found matching negedge clock domain: \rx_clk_18_KHz, enabled by $abc$1657$abc$1419$abc$1151$auto$opt_dff.cc:219:make_patterns_logic$229
Extracted 85 gates and 119 wires to a netlist network with 34 inputs and 17 outputs.

3.119.5.1. Executing ABC.

3.119.6. Extracting gate netlist of module `\d_encoder_d_decoder' to `<abc-temp-dir>/input.blif'..
Found matching negedge clock domain: \tx_tetra_clk_18_KHz
Extracted 55 gates and 67 wires to a netlist network with 12 inputs and 9 outputs.

3.119.6.1. Executing ABC.

yosys> opt_ffinv

3.120. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt_expr

3.121. Executing OPT_EXPR pass (perform const folding).
Optimizing module d_encoder_d_decoder.

yosys> opt_merge -nomux

3.122. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\d_encoder_d_decoder'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.123. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \d_encoder_d_decoder..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.124. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \d_encoder_d_decoder.
Performed a total of 0 changes.

yosys> opt_merge

3.125. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\d_encoder_d_decoder'.
Removed a total of 0 cells.

yosys> opt_share

3.126. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.127. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.128. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \d_encoder_d_decoder..
Removed 0 unused cells and 1137 unused wires.
<suppressed ~8 debug messages>

yosys> opt_expr

3.129. Executing OPT_EXPR pass (perform const folding).
Optimizing module d_encoder_d_decoder.
MAX OPT ITERATION = 1

yosys> bmuxmap

3.130. Executing BMUXMAP pass.

yosys> demuxmap

3.131. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> abc -script /tmp/yosys_5NyYAS/abc_tmp_1.scr

3.132. Executing ABC pass (technology mapping using ABC).

3.132.1. Extracting gate netlist of module `\d_encoder_d_decoder' to `<abc-temp-dir>/input.blif'..
Extracted 147 gates and 209 wires to a netlist network with 62 inputs and 48 outputs.

3.132.1.1. Executing ABC.
DE:   #PIs =  62  #Luts =    57  Max Lvl =   4  Avg Lvl =   1.71  [   0.08 sec. at Pass 0]
DE:   #PIs =  62  #Luts =    57  Max Lvl =   3  Avg Lvl =   1.62  [   0.46 sec. at Pass 1]
DE:   #PIs =  62  #Luts =    57  Max Lvl =   3  Avg Lvl =   1.62  [   0.21 sec. at Pass 2]
DE:   #PIs =  62  #Luts =    57  Max Lvl =   3  Avg Lvl =   1.62  [   0.25 sec. at Pass 3]
DE:   #PIs =  62  #Luts =    57  Max Lvl =   3  Avg Lvl =   1.62  [   0.09 sec. at Pass 4]
DE:   #PIs =  62  #Luts =    57  Max Lvl =   3  Avg Lvl =   1.62  [   0.36 sec. at Pass 5]
DE:   #PIs =  62  #Luts =    57  Max Lvl =   3  Avg Lvl =   1.62  [   0.66 sec. at Pass 6]
DE:   #PIs =  62  #Luts =    57  Max Lvl =   3  Avg Lvl =   1.62  [   0.40 sec. at Pass 7]

yosys> opt_expr

3.133. Executing OPT_EXPR pass (perform const folding).
Optimizing module d_encoder_d_decoder.

yosys> opt_merge -nomux

3.134. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\d_encoder_d_decoder'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.135. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \d_encoder_d_decoder..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.136. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \d_encoder_d_decoder.
Performed a total of 0 changes.

yosys> opt_merge

3.137. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\d_encoder_d_decoder'.
Removed a total of 0 cells.

yosys> opt_share

3.138. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.139. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.140. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \d_encoder_d_decoder..
Removed 0 unused cells and 209 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.141. Executing OPT_EXPR pass (perform const folding).
Optimizing module d_encoder_d_decoder.
MAX OPT ITERATION = 1

yosys> opt_ffinv

3.142. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> stat

3.143. Printing statistics.

=== d_encoder_d_decoder ===

   Number of wires:                118
   Number of wire bits:            380
   Number of public wires:          50
   Number of public wire bits:     212
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                104
     $_DFFE_NP0P_                    2
     $_DFFE_NP_                     32
     $_DFF_N_                       11
     $lut                           57
     RS_DSP2_MULT                    2


yosys> shregmap -minlen 8 -maxlen 20

3.144. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.145. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.146. Printing statistics.

=== d_encoder_d_decoder ===

   Number of wires:                118
   Number of wire bits:            380
   Number of public wires:          50
   Number of public wire bits:     212
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                104
     $_DFFE_NP0P_                   34
     $_DFF_N_                       11
     $lut                           57
     RS_DSP2_MULT                    2


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.147. Executing TECHMAP pass (map to technology primitives).

3.147.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.147.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.147.3. Continuing TECHMAP pass.
Using template $paramod\$_DFF_N_\_TECHMAP_WIREINIT_Q_=1'x for cells of type $_DFF_N_.
Using template $paramod\$_DFFE_NP0P_\_TECHMAP_WIREINIT_Q_=1'0 for cells of type $_DFFE_NP0P_.
Using extmapper simplemap for cells of type $lut.
Using template $paramod\$_DFF_N_\_TECHMAP_WIREINIT_Q_=1'0 for cells of type $_DFF_N_.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~305 debug messages>

yosys> opt_expr -mux_undef

3.148. Executing OPT_EXPR pass (perform const folding).
Optimizing module d_encoder_d_decoder.
<suppressed ~500 debug messages>

yosys> simplemap

3.149. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.150. Executing OPT_EXPR pass (perform const folding).
Optimizing module d_encoder_d_decoder.

yosys> opt_merge

3.151. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\d_encoder_d_decoder'.
<suppressed ~645 debug messages>
Removed a total of 215 cells.

yosys> opt_dff -nodffe -nosdff

3.152. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.153. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \d_encoder_d_decoder..
Removed 0 unused cells and 330 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.154. Executing OPT_EXPR pass (perform const folding).
Optimizing module d_encoder_d_decoder.
<suppressed ~8 debug messages>

yosys> opt_merge -nomux

3.155. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\d_encoder_d_decoder'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.156. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \d_encoder_d_decoder..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.157. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \d_encoder_d_decoder.
Performed a total of 0 changes.

yosys> opt_merge

3.158. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\d_encoder_d_decoder'.
Removed a total of 0 cells.

yosys> opt_share

3.159. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.160. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.161. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \d_encoder_d_decoder..

yosys> opt_expr

3.162. Executing OPT_EXPR pass (perform const folding).
Optimizing module d_encoder_d_decoder.
MAX OPT ITERATION = 1

yosys> abc -script /tmp/yosys_5NyYAS/abc_tmp_2.scr

3.163. Executing ABC pass (technology mapping using ABC).

3.163.1. Extracting gate netlist of module `\d_encoder_d_decoder' to `<abc-temp-dir>/input.blif'..
Extracted 254 gates and 318 wires to a netlist network with 62 inputs and 49 outputs.

3.163.1.1. Executing ABC.
DE:   #PIs =  62  #Luts =    58  Max Lvl =   4  Avg Lvl =   1.65  [   0.03 sec. at Pass 0]
DE:   #PIs =  62  #Luts =    58  Max Lvl =   3  Avg Lvl =   1.59  [   0.22 sec. at Pass 1]
DE:   #PIs =  62  #Luts =    58  Max Lvl =   3  Avg Lvl =   1.59  [   0.05 sec. at Pass 2]
DE:   #PIs =  62  #Luts =    58  Max Lvl =   3  Avg Lvl =   1.59  [   0.16 sec. at Pass 3]
DE:   #PIs =  62  #Luts =    58  Max Lvl =   3  Avg Lvl =   1.59  [   0.06 sec. at Pass 4]
DE:   #PIs =  62  #Luts =    58  Max Lvl =   3  Avg Lvl =   1.59  [   0.20 sec. at Pass 5]
DE:   #PIs =  62  #Luts =    58  Max Lvl =   3  Avg Lvl =   1.59  [   0.60 sec. at Pass 6]
DE:   #PIs =  62  #Luts =    58  Max Lvl =   3  Avg Lvl =   1.59  [   0.11 sec. at Pass 7]

yosys> opt_expr

3.164. Executing OPT_EXPR pass (perform const folding).
Optimizing module d_encoder_d_decoder.

yosys> opt_merge -nomux

3.165. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\d_encoder_d_decoder'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.166. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \d_encoder_d_decoder..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.167. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \d_encoder_d_decoder.
Performed a total of 0 changes.

yosys> opt_merge

3.168. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\d_encoder_d_decoder'.
Removed a total of 0 cells.

yosys> opt_share

3.169. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.170. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.171. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \d_encoder_d_decoder..
Removed 0 unused cells and 210 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.172. Executing OPT_EXPR pass (perform const folding).
Optimizing module d_encoder_d_decoder.
MAX OPT ITERATION = 1

yosys> hierarchy -check

3.173. Executing HIERARCHY pass (managing design hierarchy).

3.173.1. Analyzing design hierarchy..
Top module:  \d_encoder_d_decoder

3.173.2. Analyzing design hierarchy..
Top module:  \d_encoder_d_decoder
Removed 0 unused modules.

yosys> stat

3.174. Printing statistics.

=== d_encoder_d_decoder ===

   Number of wires:                119
   Number of wire bits:            381
   Number of public wires:          50
   Number of public wire bits:     212
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                105
     $lut                           58
     RS_DSP2_MULT                    2
     dffnsre                        45


yosys> opt_clean -purge

3.175. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \d_encoder_d_decoder..
Removed 0 unused cells and 31 unused wires.
<suppressed ~31 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.176. Executing Verilog backend.
Dumping module `\d_encoder_d_decoder'.

Warnings: 7 unique messages, 7 total
End of script. Logfile hash: cc017148af, CPU: user 0.78s system 0.04s, MEM: 33.54 MB peak
Yosys 0.18+10 (git sha1 c98b0e94e, gcc 9.4.0 -fPIC -Os)
Time spent: 97% 6x abc (30 sec), 0% 30x opt_expr (0 sec), ...
real 10.91
user 25.40
sys 5.61
