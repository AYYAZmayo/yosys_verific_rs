
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.140
 Yosys 0.18+10 (git sha1 92b23013e, gcc 11.2.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Sep22_SW_Release, released at Fri Sep 30 20:01:32 2022.

yosys> verilog_defaults -add -I.

yosys> read -vhdl diffPhaseEncoder.vhd dataConverter.vhd TETRA_phy.vhd d_encoder_d_decoder.vhd diffPhaseDecoder.vhd

yosys> verific -vhdl diffPhaseEncoder.vhd dataConverter.vhd TETRA_phy.vhd d_encoder_d_decoder.vhd diffPhaseDecoder.vhd

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Sep22_SW_Release, released at Fri Sep 30 20:01:32 2022.
VERIFIC-INFO [VHDL-1504] default VHDL library search path is now "/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008"
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'diffPhaseEncoder.vhd'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_1164' from file '/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_1164.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.standard' from file '/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/standard.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.textio' from file '/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/textio.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_arith' from file '/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_arith.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_unsigned' from file '/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_unsigned.vdb'
VERIFIC-INFO [VHDL-1012] diffPhaseEncoder.vhd:22: analyzing entity 'diffphaseencoder'
VERIFIC-INFO [VHDL-1010] diffPhaseEncoder.vhd:32: analyzing architecture 'behavioral'
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'dataConverter.vhd'
VERIFIC-INFO [VHDL-1012] dataConverter.vhd:22: analyzing entity 'dataconverter'
VERIFIC-INFO [VHDL-1010] dataConverter.vhd:31: analyzing architecture 'behavioral'
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'TETRA_phy.vhd'
VERIFIC-INFO [VHDL-1012] TETRA_phy.vhd:22: analyzing entity 'tetra_phy'
VERIFIC-INFO [VHDL-1010] TETRA_phy.vhd:36: analyzing architecture 'behavioral'
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'd_encoder_d_decoder.vhd'
VERIFIC-INFO [VHDL-1012] d_encoder_d_decoder.vhd:22: analyzing entity 'd_encoder_d_decoder'
VERIFIC-INFO [VHDL-1010] d_encoder_d_decoder.vhd:41: analyzing architecture 'behavioral'
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'diffPhaseDecoder.vhd'
VERIFIC-INFO [VHDL-1012] diffPhaseDecoder.vhd:22: analyzing entity 'diffphasedecoder'
VERIFIC-INFO [VHDL-1010] diffPhaseDecoder.vhd:32: analyzing architecture 'behavioral'

yosys> synth_rs -top d_encoder_d_decoder -tech genesis2 -goal area -de -verilog synthesized.v

3. Executing synth_rs pass: v0.4.116

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis2/cells_sim.v +/rapidsilicon/genesis2/dsp_sim.v +/rapidsilicon/genesis2/brams_sim.v

3.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/cells_sim.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dff'.
Generating RTLIL representation for module `\dffn'.
Generating RTLIL representation for module `\sdff'.
Generating RTLIL representation for module `\sdffn'.
Generating RTLIL representation for module `\dffr'.
Generating RTLIL representation for module `\dffnr'.
Generating RTLIL representation for module `\dffe'.
Generating RTLIL representation for module `\dffne'.
Generating RTLIL representation for module `\sdffre'.
Generating RTLIL representation for module `\sdffnre'.
Generating RTLIL representation for module `\dffre'.
Generating RTLIL representation for module `\dffnre'.
Generating RTLIL representation for module `\latch'.
Generating RTLIL representation for module `\latchn'.
Generating RTLIL representation for module `\latchr'.
Generating RTLIL representation for module `\latchnr'.
Generating RTLIL representation for module `\fa_1bit'.
Successfully finished Verilog frontend.

3.3. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/dsp_sim.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/dsp_sim.v' to AST representation.
Generating RTLIL representation for module `\RS_DSP'.
Generating RTLIL representation for module `\RS_DSP_MULT'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTADD'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTACC'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_ports'.
Successfully finished Verilog frontend.

3.4. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/brams_sim.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/brams_sim.v' to AST representation.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\RS_TDP36K'.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top d_encoder_d_decoder

3.5. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VHDL-1067] d_encoder_d_decoder.vhd:22: processing 'd_encoder_d_decoder(Behavioral)'
VERIFIC-INFO [VHDL-1067] TETRA_phy.vhd:22: processing 'TETRA_phy(Behavioral)'
VERIFIC-INFO [VHDL-1067] dataConverter.vhd:22: processing 'dataConverter(Behavioral)'
VERIFIC-WARNING [VHDL-1251] dataConverter.vhd:40: 'valid_input' should be on the sensitivity list of the process
VERIFIC-WARNING [VHDL-1613] dataConverter.vhd:46: incomplete sensitivity list specified; assuming completeness
VERIFIC-INFO [VHDL-1067] diffPhaseEncoder.vhd:22: processing 'diffPhaseEncoder(Behavioral)'
VERIFIC-WARNING [VHDL-1251] TETRA_phy.vhd:93: 'tetra_clk_36_khz' should be on the sensitivity list of the process
VERIFIC-WARNING [VHDL-1613] TETRA_phy.vhd:98: incomplete sensitivity list specified; assuming completeness
VERIFIC-WARNING [VHDL-1251] TETRA_phy.vhd:103: 'tetra_clk_36_khz' should be on the sensitivity list of the process
VERIFIC-WARNING [VHDL-1613] TETRA_phy.vhd:108: incomplete sensitivity list specified; assuming completeness
VERIFIC-INFO [VHDL-1067] diffPhaseDecoder.vhd:22: processing 'diffPhaseDecoder(Behavioral)'
Importing module d_encoder_d_decoder.
Importing module TETRA_phy(Behavioral).
Importing module dataConverter(Behavioral).
Importing module diffPhaseDecoder(Behavioral).
Importing module diffPhaseEncoder(Behavioral).

3.5.1. Analyzing design hierarchy..
Top module:  \d_encoder_d_decoder
Used module:     \diffPhaseDecoder(Behavioral)
Used module:     \TETRA_phy(Behavioral)
Used module:         \diffPhaseEncoder(Behavioral)
Used module:         \dataConverter(Behavioral)

3.5.2. Analyzing design hierarchy..
Top module:  \d_encoder_d_decoder
Used module:     \diffPhaseDecoder(Behavioral)
Used module:     \TETRA_phy(Behavioral)
Used module:         \diffPhaseEncoder(Behavioral)
Used module:         \dataConverter(Behavioral)
Removed 0 unused modules.

yosys> proc

3.6. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.6.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.6.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.6.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.6.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.6.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.6.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.6.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.6.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.6.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.6.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.6.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.6.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module diffPhaseEncoder(Behavioral).
<suppressed ~5 debug messages>
Optimizing module diffPhaseDecoder(Behavioral).
Optimizing module dataConverter(Behavioral).
Optimizing module TETRA_phy(Behavioral).
Optimizing module d_encoder_d_decoder.

yosys> demuxmap

3.7. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> flatten

3.8. Executing FLATTEN pass (flatten design).
Deleting now unused module TETRA_phy(Behavioral).
Deleting now unused module dataConverter(Behavioral).
Deleting now unused module diffPhaseDecoder(Behavioral).
Deleting now unused module diffPhaseEncoder(Behavioral).
<suppressed ~4 debug messages>

yosys> demuxmap

3.9. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> tribuf -logic -formal

3.10. Executing TRIBUF pass.

yosys> deminout

3.11. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module d_encoder_d_decoder.

yosys> opt_clean

3.13. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \d_encoder_d_decoder..
Removed 4 unused cells and 97 unused wires.
<suppressed ~22 debug messages>

yosys> check

3.14. Executing CHECK pass (checking for obvious problems).
Checking module d_encoder_d_decoder...
Found and reported 0 problems.

yosys> opt_expr

3.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module d_encoder_d_decoder.

yosys> opt_merge -nomux

3.16. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\d_encoder_d_decoder'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \d_encoder_d_decoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

yosys> opt_reduce

3.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \d_encoder_d_decoder.
Performed a total of 0 changes.

yosys> opt_merge

3.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\d_encoder_d_decoder'.
Removed a total of 0 cells.

yosys> opt_share

3.20. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.21. Executing OPT_DFF pass (perform DFF optimizations).
Removing never-active async load on $flatten\TETRA_TX.\PHENC.$verific$pr_state_reg$diffPhaseEncoder.vhd:65$205 ($aldff) from module d_encoder_d_decoder.
Changing const-value async load to async reset on $flatten\TETRA_TX.\DCONV.$verific$shift_reg.s_reg_v_reg$dataConverter.vhd:43$52 ($aldff) from module d_encoder_d_decoder.
Removing never-active async load on $flatten\TETRA_RX.$verific$phase_decoder.q_k_old_reg$diffPhaseDecoder.vhd:53$100 ($aldff) from module d_encoder_d_decoder.
Removing never-active async load on $flatten\TETRA_RX.$verific$phase_decoder.i_k_old_reg$diffPhaseDecoder.vhd:53$98 ($aldff) from module d_encoder_d_decoder.
Removing never-active async load on $flatten\TETRA_RX.$verific$phase_decoder.b_k_tmp_reg$diffPhaseDecoder.vhd:53$104 ($aldff) from module d_encoder_d_decoder.
Removing never-active async load on $flatten\TETRA_RX.$verific$phase_decoder.a_k_tmp_reg$diffPhaseDecoder.vhd:53$102 ($aldff) from module d_encoder_d_decoder.

yosys> opt_clean

3.22. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \d_encoder_d_decoder..

yosys> opt_expr

3.23. Executing OPT_EXPR pass (perform const folding).
Optimizing module d_encoder_d_decoder.
MAX OPT ITERATION = 1

yosys> fsm -encoding binary

3.24. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.24.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.24.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.24.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.24.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \d_encoder_d_decoder..

yosys> fsm_opt

3.24.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.24.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.24.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.24.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt_expr

3.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module d_encoder_d_decoder.

yosys> opt_merge -nomux

3.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\d_encoder_d_decoder'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.27. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \d_encoder_d_decoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

yosys> opt_reduce

3.28. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \d_encoder_d_decoder.
Performed a total of 0 changes.

yosys> opt_merge

3.29. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\d_encoder_d_decoder'.
Removed a total of 0 cells.

yosys> opt_share

3.30. Executing OPT_SHARE pass.

yosys> opt_dff -sat

3.31. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $flatten\TETRA_TX.\PHENC.$verific$pr_state_reg$diffPhaseEncoder.vhd:65$205 ($dff) from module d_encoder_d_decoder (D = \TETRA_TX.PHENC.nx_state, Q = \TETRA_TX.PHENC.pr_state, rval = 3'010).
Adding EN signal on $flatten\TETRA_TX.\DCONV.$verific$shift_reg.s_reg_v_reg$dataConverter.vhd:43$52 ($adff) from module d_encoder_d_decoder (D = { \TETRA_TX.DCONV.shift_reg.s_reg_v [0] \tx_tetra_bit_stream_input }, Q = \TETRA_TX.DCONV.shift_reg.s_reg_v).
Adding EN signal on $flatten\TETRA_RX.$verific$phase_decoder.q_k_old_reg$diffPhaseDecoder.vhd:53$100 ($dff) from module d_encoder_d_decoder (D = $flatten\TETRA_RX.$verific$n173$71, Q = \TETRA_RX.phase_decoder.q_k_old).
Adding SRST signal on $auto$ff.cc:262:slice$225 ($dffe) from module d_encoder_d_decoder (D = \rx_q_k, Q = \TETRA_RX.phase_decoder.q_k_old, rval = 8'00000000).
Adding EN signal on $flatten\TETRA_RX.$verific$phase_decoder.i_k_old_reg$diffPhaseDecoder.vhd:53$98 ($dff) from module d_encoder_d_decoder (D = $flatten\TETRA_RX.$verific$n164$70, Q = \TETRA_RX.phase_decoder.i_k_old).
Adding SRST signal on $auto$ff.cc:262:slice$227 ($dffe) from module d_encoder_d_decoder (D = \rx_i_k, Q = \TETRA_RX.phase_decoder.i_k_old, rval = 8'00000001).
Adding EN signal on $flatten\TETRA_RX.$verific$phase_decoder.b_k_tmp_reg$diffPhaseDecoder.vhd:53$104 ($dff) from module d_encoder_d_decoder (D = $flatten\TETRA_RX.$verific$n111$66 [15:0], Q = \TETRA_RX.phase_decoder.b_k_tmp).
Adding EN signal on $flatten\TETRA_RX.$verific$phase_decoder.a_k_tmp_reg$diffPhaseDecoder.vhd:53$102 ($dff) from module d_encoder_d_decoder (D = $flatten\TETRA_RX.$verific$n43$62, Q = \TETRA_RX.phase_decoder.a_k_tmp).

yosys> opt_clean

3.32. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \d_encoder_d_decoder..
Removed 10 unused cells and 10 unused wires.
<suppressed ~11 debug messages>

yosys> opt_expr

3.33. Executing OPT_EXPR pass (perform const folding).
Optimizing module d_encoder_d_decoder.

yosys> opt_muxtree

3.34. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \d_encoder_d_decoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

yosys> opt_reduce

3.35. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \d_encoder_d_decoder.
Performed a total of 0 changes.

yosys> opt_merge

3.36. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\d_encoder_d_decoder'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

yosys> opt_share

3.37. Executing OPT_SHARE pass.

yosys> opt_dff -sat

3.38. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.39. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \d_encoder_d_decoder..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.40. Executing OPT_EXPR pass (perform const folding).
Optimizing module d_encoder_d_decoder.

yosys> opt_muxtree

3.41. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \d_encoder_d_decoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

yosys> opt_reduce

3.42. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \d_encoder_d_decoder.
Performed a total of 0 changes.

yosys> opt_merge

3.43. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\d_encoder_d_decoder'.
Removed a total of 0 cells.

yosys> opt_share

3.44. Executing OPT_SHARE pass.

yosys> opt_dff -sat

3.45. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.46. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \d_encoder_d_decoder..

yosys> opt_expr

3.47. Executing OPT_EXPR pass (perform const folding).
Optimizing module d_encoder_d_decoder.
MAX OPT ITERATION = 3

yosys> wreduce -keepdc

3.48. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 24) from mux cell d_encoder_d_decoder.$flatten\TETRA_TX.\PHENC.$verific$mux_171$diffPhaseEncoder.vhd:211$215 ($mux).
Removed top 8 bits (of 16) from FF cell d_encoder_d_decoder.$auto$ff.cc:262:slice$229 ($dffe).
Removed top 8 bits (of 16) from FF cell d_encoder_d_decoder.$auto$ff.cc:262:slice$234 ($dffe).
Removed top 9 bits (of 17) from port Y of cell d_encoder_d_decoder.$flatten\TETRA_RX.$verific$sub_13$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:974$88 ($sub).
Removed top 9 bits (of 17) from port A of cell d_encoder_d_decoder.$flatten\TETRA_RX.$verific$sub_13$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:974$88 ($sub).
Removed top 9 bits (of 17) from port B of cell d_encoder_d_decoder.$flatten\TETRA_RX.$verific$sub_13$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:974$88 ($sub).
Removed top 8 bits (of 16) from port Y of cell d_encoder_d_decoder.$flatten\TETRA_RX.$verific$add_9$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:720$84 ($add).
Removed top 8 bits (of 16) from port A of cell d_encoder_d_decoder.$flatten\TETRA_RX.$verific$add_9$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:720$84 ($add).
Removed top 8 bits (of 16) from port B of cell d_encoder_d_decoder.$flatten\TETRA_RX.$verific$add_9$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:720$84 ($add).
Removed top 8 bits (of 16) from port Y of cell d_encoder_d_decoder.$flatten\TETRA_RX.$verific$mult_11$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:653$86 ($mul).
Removed top 8 bits (of 16) from port Y of cell d_encoder_d_decoder.$flatten\TETRA_RX.$verific$mult_12$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:653$87 ($mul).
Removed top 8 bits (of 16) from port Y of cell d_encoder_d_decoder.$flatten\TETRA_RX.$verific$mult_5$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:653$82 ($mul).
Removed top 8 bits (of 16) from port Y of cell d_encoder_d_decoder.$flatten\TETRA_RX.$verific$mult_6$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:653$83 ($mul).
Removed top 9 bits (of 17) from wire d_encoder_d_decoder.$flatten\TETRA_RX.$verific$n111$66.
Removed top 8 bits (of 16) from wire d_encoder_d_decoder.$flatten\TETRA_RX.$verific$n6$60.
Removed top 8 bits (of 16) from wire d_encoder_d_decoder.$flatten\TETRA_RX.$verific$n77$64.
Removed top 8 bits (of 16) from wire d_encoder_d_decoder.$flatten\TETRA_RX.$verific$n94$65.
Removed top 1 bits (of 3) from wire d_encoder_d_decoder.$flatten\TETRA_TX.\PHENC.$verific$n490$194.

yosys> peepopt

3.49. Executing PEEPOPT pass (run peephole optimizers).

yosys> opt_clean

3.50. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \d_encoder_d_decoder..
Removed 0 unused cells and 6 unused wires.
<suppressed ~1 debug messages>

yosys> demuxmap

3.51. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> stat

3.52. Printing statistics.

=== d_encoder_d_decoder ===

   Number of wires:                102
   Number of wire bits:            423
   Number of public wires:          57
   Number of public wire bits:     223
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 28
     $add                            1
     $adffe                          1
     $and                            3
     $bmux                           3
     $dff                            2
     $dffe                           2
     $mul                            4
     $mux                            4
     $not                            3
     $reduce_and                     1
     $sdff                           1
     $sdffce                         2
     $sub                            1


yosys> wreduce t:$mul

3.53. Executing WREDUCE pass (reducing word size of cells).

yosys> rs_dsp_macc -genesis2 -max_dsp 154

3.54. Executing RS_DSP_MACC pass.

yosys> techmap -map +/mul2dsp_check_maxwidth.v -D DSP_A_MAXWIDTH=20 -D DSP_B_MAXWIDTH=18 -D DSP_A_MINWIDTH=11 -D DSP_B_MINWIDTH=10 -D DSP_NAME=$__RS_MUL20X18 a:valid_map

3.55. Executing TECHMAP pass (map to technology primitives).

3.55.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/mul2dsp_check_maxwidth.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/mul2dsp_check_maxwidth.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

3.55.2. Continuing TECHMAP pass.
Using template $paramod$8c4ff8bd81efbaca1fe17fdd943cd27203b6cf6d\_80_mul for cells of type $mul.
No more expansions possible.
<suppressed ~131 debug messages>

yosys> stat

3.56. Printing statistics.

=== d_encoder_d_decoder ===

   Number of wires:                126
   Number of wire bits:           4767
   Number of public wires:          57
   Number of public wire bits:     223
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 28
     $__RS_MUL20X18                  4
     $add                            1
     $adffe                          1
     $and                            3
     $bmux                           3
     $dff                            2
     $dffe                           2
     $mux                            4
     $not                            3
     $reduce_and                     1
     $sdff                           1
     $sdffce                         2
     $sub                            1


yosys> chtype -set $mul t:$__soft_mul

yosys> techmap -map +/rapidsilicon/genesis2/dsp_map.v -D USE_DSP_CFG_PARAMS=0

3.57. Executing TECHMAP pass (map to technology primitives).

3.57.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/dsp_map.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/dsp_map.v' to AST representation.
Generating RTLIL representation for module `\$__RS_MUL20X18'.
Successfully finished Verilog frontend.

3.57.2. Continuing TECHMAP pass.
Using template $paramod$1f3d311fc8ca682c2eacb55a5c15d86bf1c22426\$__RS_MUL20X18 for cells of type $__RS_MUL20X18.
No more expansions possible.
<suppressed ~26 debug messages>

yosys> techmap -map +/rapidsilicon/genesis2/dsp_final_map.v

3.58. Executing TECHMAP pass (map to technology primitives).

3.58.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/dsp_final_map.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/dsp_final_map.v' to AST representation.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Successfully finished Verilog frontend.

3.58.2. Continuing TECHMAP pass.
Using template dsp_t1_20x18x64_cfg_ports for cells of type dsp_t1_20x18x64_cfg_ports.
No more expansions possible.
<suppressed ~7 debug messages>

yosys> rs-pack-dsp-regs

3.59. Executing rs_pack_dsp_regs pass.
<suppressed ~18 debug messages>

yosys> rs_dsp_io_regs

3.60. Executing RS_DSP_IO_REGS pass.

yosys> alumacc

3.61. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module d_encoder_d_decoder:
  creating $macc model for $flatten\TETRA_RX.$verific$add_9$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:720$84 ($add).
  creating $macc model for $flatten\TETRA_RX.$verific$sub_13$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:974$88 ($sub).
  creating $alu model for $macc $flatten\TETRA_RX.$verific$sub_13$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:974$88.
  creating $alu model for $macc $flatten\TETRA_RX.$verific$add_9$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:720$84.
  creating $alu cell for $flatten\TETRA_RX.$verific$add_9$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:720$84: $auto$alumacc.cc:485:replace_alu$256
  creating $alu cell for $flatten\TETRA_RX.$verific$sub_13$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:974$88: $auto$alumacc.cc:485:replace_alu$259
  created 2 $alu and 0 $macc cells.

yosys> opt_expr

3.62. Executing OPT_EXPR pass (perform const folding).
Optimizing module d_encoder_d_decoder.

yosys> opt_merge -nomux

3.63. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\d_encoder_d_decoder'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.64. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \d_encoder_d_decoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

yosys> opt_reduce

3.65. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \d_encoder_d_decoder.
Performed a total of 0 changes.

yosys> opt_merge

3.66. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\d_encoder_d_decoder'.
Removed a total of 0 cells.

yosys> opt_share

3.67. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe

3.68. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.69. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \d_encoder_d_decoder..
Removed 0 unused cells and 104 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.70. Executing OPT_EXPR pass (perform const folding).
Optimizing module d_encoder_d_decoder.
MAX OPT ITERATION = 1

yosys> stat

3.71. Printing statistics.

=== d_encoder_d_decoder ===

   Number of wires:                110
   Number of wire bits:            575
   Number of public wires:          57
   Number of public wire bits:     223
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 28
     $adffe                          1
     $alu                            2
     $and                            3
     $bmux                           3
     $dff                            2
     $dffe                           2
     $mux                            4
     $not                            3
     $reduce_and                     1
     $sdff                           1
     $sdffce                         2
     RS_DSP_MULT                     4


yosys> memory -nomap

3.72. Executing MEMORY pass.

yosys> opt_mem

3.72.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.72.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.72.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.72.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.72.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `$auto$memory_bmux2rom.cc:63:execute$265'[0] in module `\d_encoder_d_decoder': no output FF found.
Checking read port `$auto$memory_bmux2rom.cc:63:execute$262'[0] in module `\d_encoder_d_decoder': no output FF found.
Checking read port address `$auto$memory_bmux2rom.cc:63:execute$265'[0] in module `\d_encoder_d_decoder': address FF clock is not compatible with write clock.
Checking read port address `$auto$memory_bmux2rom.cc:63:execute$262'[0] in module `\d_encoder_d_decoder': address FF clock is not compatible with write clock.

yosys> opt_clean

3.72.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \d_encoder_d_decoder..

yosys> memory_share

3.72.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.72.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.72.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \d_encoder_d_decoder..

yosys> memory_collect

3.72.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.73. Printing statistics.

=== d_encoder_d_decoder ===

   Number of wires:                110
   Number of wire bits:            575
   Number of public wires:          57
   Number of public wire bits:     223
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 28
     $adffe                          1
     $alu                            2
     $and                            3
     $bmux                           1
     $dff                            2
     $dffe                           2
     $mem_v2                         2
     $mux                            4
     $not                            3
     $reduce_and                     1
     $sdff                           1
     $sdffce                         2
     RS_DSP_MULT                     4


yosys> muxpack

3.74. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~4 debug messages>

yosys> opt_clean

3.75. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \d_encoder_d_decoder..

yosys> memory_libmap -lib +/rapidsilicon/genesis2/brams_new_swap.txt -limit 150 a:read_swapped

3.76. Executing MEMORY_LIBMAP pass (mapping memories to cells).

yosys> memory_libmap -lib +/rapidsilicon/genesis2/brams_new.txt -limit 150

3.77. Executing MEMORY_LIBMAP pass (mapping memories to cells).
using FF mapping for memory d_encoder_d_decoder.$auto$memory_bmux2rom.cc:63:execute$262
using FF mapping for memory d_encoder_d_decoder.$auto$memory_bmux2rom.cc:63:execute$265
<suppressed ~12 debug messages>

yosys> rs_bram_split -new_mapping

3.78. Executing Rs_BRAM_Split pass.

yosys> techmap -autoproc -map +/rapidsilicon/genesis2/brams_map_new.v

3.79. Executing TECHMAP pass (map to technology primitives).

3.79.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/brams_map_new.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/brams_map_new.v' to AST representation.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_TDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM18_TDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM18_SDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_SDP'.
Successfully finished Verilog frontend.

3.79.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~6 debug messages>

yosys> techmap -map +/rapidsilicon/genesis2/brams_final_map_new.v

3.80. Executing TECHMAP pass (map to technology primitives).

3.80.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/brams_final_map_new.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/brams_final_map_new.v' to AST representation.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Successfully finished Verilog frontend.

3.80.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

yosys> pmuxtree

3.81. Executing PMUXTREE pass.

yosys> muxpack

3.82. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~4 debug messages>

yosys> memory_map

3.83. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory $auto$memory_bmux2rom.cc:63:execute$262 in module \d_encoder_d_decoder:
  created 8 $dff cells and 0 static cells of width 8.
  read interface: 0 $dff and 7 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $auto$memory_bmux2rom.cc:63:execute$265 in module \d_encoder_d_decoder:
  created 8 $dff cells and 0 static cells of width 8.
  read interface: 0 $dff and 7 $mux cells.
  write interface: 0 write mux blocks.

yosys> stat

3.84. Printing statistics.

=== d_encoder_d_decoder ===

   Number of wires:                170
   Number of wire bits:           1055
   Number of public wires:          57
   Number of public wire bits:     223
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 56
     $adffe                          1
     $alu                            2
     $and                            3
     $bmux                           1
     $dff                           18
     $dffe                           2
     $mux                           18
     $not                            3
     $reduce_and                     1
     $sdff                           1
     $sdffce                         2
     RS_DSP_MULT                     4


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis2/arith_map.v

3.85. Executing TECHMAP pass (map to technology primitives).

3.85.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.85.2. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/arith_map.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.85.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $sdff.
Using extmapper simplemap for cells of type $bmux.
Using extmapper simplemap for cells of type $and.
Using template $paramod$a1bc51c02ce12ac21eb18988e83292af48ed7d72\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $sdffce.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001000 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $or.
No more expansions possible.
<suppressed ~443 debug messages>

yosys> stat

3.86. Printing statistics.

=== d_encoder_d_decoder ===

   Number of wires:                264
   Number of wire bits:           3605
   Number of public wires:          57
   Number of public wire bits:     223
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                544
     $_AND_                         52
     $_DFFE_NP0P_                    2
     $_DFFE_NP_                     16
     $_DFF_N_                        2
     $_DFF_P_                      128
     $_MUX_                        244
     $_NOT_                         19
     $_OR_                          24
     $_SDFFCE_NP0P_                 15
     $_SDFFCE_NP1P_                  1
     $_SDFF_NP0_                     2
     $_SDFF_NP1_                     1
     $_XOR_                         34
     RS_DSP_MULT                     4


yosys> opt_expr

3.87. Executing OPT_EXPR pass (perform const folding).
Optimizing module d_encoder_d_decoder.
<suppressed ~62 debug messages>

yosys> opt_merge -nomux

3.88. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\d_encoder_d_decoder'.
<suppressed ~120 debug messages>
Removed a total of 40 cells.

yosys> opt_muxtree

3.89. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \d_encoder_d_decoder..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.90. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \d_encoder_d_decoder.
Performed a total of 0 changes.

yosys> opt_merge

3.91. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\d_encoder_d_decoder'.
Removed a total of 0 cells.

yosys> opt_share

3.92. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe

3.93. Executing OPT_DFF pass (perform DFF optimizations).
Handling const CLK on $auto$ff.cc:262:slice$815 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$581 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$557 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$493 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$453 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$633 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$760 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$485 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$589 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$525 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$541 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$787 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$846 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$573 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$533 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$509 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$446 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$447 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$448 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$449 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$450 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$451 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$452 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$478 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$479 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$480 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$481 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$482 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$483 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$484 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$486 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$487 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$488 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$489 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$490 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$491 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$492 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$502 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$503 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$504 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$505 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$506 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$507 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$508 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$518 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$519 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$520 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$521 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$522 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$523 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$524 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$526 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$527 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$528 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$529 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$530 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$531 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$532 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$534 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$535 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$536 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$537 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$538 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$539 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$540 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$550 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$551 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$552 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$553 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$554 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$555 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$556 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$566 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$567 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$568 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$569 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$570 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$571 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$572 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$574 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$575 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$576 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$577 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$578 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$579 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$580 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$582 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$583 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$584 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$585 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$586 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$587 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$588 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$626 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$627 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$628 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$629 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$630 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$631 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$632 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$753 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$754 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$755 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$756 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$757 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$758 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$759 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$780 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$781 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$782 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$783 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$784 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$785 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$786 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$808 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$809 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$810 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$811 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$812 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$813 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$814 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$839 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$840 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$841 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$842 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$843 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$844 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$845 ($_DFF_P_) from module d_encoder_d_decoder (removing D path).

yosys> opt_clean

3.94. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \d_encoder_d_decoder..
Removed 26 unused cells and 131 unused wires.
<suppressed ~27 debug messages>

yosys> opt_expr

3.95. Executing OPT_EXPR pass (perform const folding).
Optimizing module d_encoder_d_decoder.
<suppressed ~72 debug messages>

yosys> opt_muxtree

3.96. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \d_encoder_d_decoder..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.97. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \d_encoder_d_decoder.
Performed a total of 0 changes.

yosys> opt_merge

3.98. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\d_encoder_d_decoder'.
<suppressed ~81 debug messages>
Removed a total of 27 cells.

yosys> opt_share

3.99. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe

3.100. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.101. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \d_encoder_d_decoder..
Removed 0 unused cells and 8 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.102. Executing OPT_EXPR pass (perform const folding).
Optimizing module d_encoder_d_decoder.

yosys> opt_muxtree

3.103. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \d_encoder_d_decoder..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.104. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \d_encoder_d_decoder.
Performed a total of 0 changes.

yosys> opt_merge

3.105. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\d_encoder_d_decoder'.
Removed a total of 0 cells.

yosys> opt_share

3.106. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe

3.107. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.108. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \d_encoder_d_decoder..

yosys> opt_expr

3.109. Executing OPT_EXPR pass (perform const folding).
Optimizing module d_encoder_d_decoder.
MAX OPT ITERATION = 3

yosys> opt_expr -full

3.110. Executing OPT_EXPR pass (perform const folding).
Optimizing module d_encoder_d_decoder.
<suppressed ~19 debug messages>

yosys> techmap -map +/techmap.v

3.111. Executing TECHMAP pass (map to technology primitives).

3.111.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.111.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> stat

3.112. Printing statistics.

=== d_encoder_d_decoder ===

   Number of wires:                126
   Number of wire bits:            607
   Number of public wires:          57
   Number of public wire bits:     223
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                190
     $_AND_                         46
     $_DFFE_NP0P_                    2
     $_DFFE_NP_                     16
     $_DFF_N_                        2
     $_MUX_                         31
     $_NOT_                         17
     $_OR_                          23
     $_SDFFCE_NP0P_                 15
     $_SDFFCE_NP1P_                  1
     $_SDFF_NP0_                     2
     $_SDFF_NP1_                     1
     $_XOR_                         30
     RS_DSP_MULT                     4


yosys> dfflegalize -cell $_SDFF_???_ 0 -cell $_SDFFE_????_ 0 t:$_SDFFCE_*

3.113. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.114. Printing statistics.

=== d_encoder_d_decoder ===

   Number of wires:                142
   Number of wire bits:            623
   Number of public wires:          57
   Number of public wire bits:     223
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                206
     $_AND_                         62
     $_DFFE_NP0P_                    2
     $_DFFE_NP_                     16
     $_DFF_N_                        2
     $_MUX_                         31
     $_NOT_                         17
     $_OR_                          23
     $_SDFFE_NP0P_                  15
     $_SDFFE_NP1P_                   1
     $_SDFF_NP0_                     2
     $_SDFF_NP1_                     1
     $_XOR_                         30
     RS_DSP_MULT                     4


yosys> opt_expr

3.115. Executing OPT_EXPR pass (perform const folding).
Optimizing module d_encoder_d_decoder.

yosys> opt_merge -nomux

3.116. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\d_encoder_d_decoder'.
<suppressed ~45 debug messages>
Removed a total of 15 cells.

yosys> opt_muxtree

3.117. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \d_encoder_d_decoder..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.118. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \d_encoder_d_decoder.
Performed a total of 0 changes.

yosys> opt_merge

3.119. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\d_encoder_d_decoder'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -sat

3.120. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.121. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \d_encoder_d_decoder..
Removed 0 unused cells and 15 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.122. Executing OPT_EXPR pass (perform const folding).
Optimizing module d_encoder_d_decoder.
MAX OPT ITERATION = 1

yosys> abc -dff -keepff

3.123. Executing ABC pass (technology mapping using ABC).

3.123.1. Summary of detected clock domains:
  21 cells in clk=!\rx_clk_18_KHz, en=\rx_en, arst={ }, srst=$auto$rtlil.cc:2550:AndGate$1125
  6 cells in clk=!\tx_tetra_clk_36_KHz, en=\tx_tetra_valid_input, arst=\tx_tetra_rst, srst={ }
  108 cells in clk=!\rx_clk_18_KHz, en=$auto$opt_dff.cc:219:make_patterns_logic$232, arst={ }, srst={ }
  27 cells in clk=!\tx_tetra_clk_36_KHz, en={ }, arst={ }, srst={ }
  29 cells in clk=!\tx_tetra_clk_18_KHz, en={ }, arst={ }, srst=\tx_tetra_rst

3.123.2. Extracting gate netlist of module `\d_encoder_d_decoder' to `<abc-temp-dir>/input.blif'..
Found matching negedge clock domain: \rx_clk_18_KHz, enabled by \rx_en, synchronously reset by $auto$rtlil.cc:2550:AndGate$1125
Extracted 16 gates and 33 wires to a netlist network with 17 inputs and 16 outputs.

3.123.2.1. Executing ABC.

3.123.3. Extracting gate netlist of module `\d_encoder_d_decoder' to `<abc-temp-dir>/input.blif'..
Found matching negedge clock domain: \tx_tetra_clk_36_KHz, enabled by \tx_tetra_valid_input, asynchronously reset by \tx_tetra_rst
Extracted 6 gates and 7 wires to a netlist network with 1 inputs and 6 outputs.

3.123.3.1. Executing ABC.

3.123.4. Extracting gate netlist of module `\d_encoder_d_decoder' to `<abc-temp-dir>/input.blif'..
Found matching negedge clock domain: \rx_clk_18_KHz, enabled by $auto$opt_dff.cc:219:make_patterns_logic$232
Extracted 108 gates and 142 wires to a netlist network with 34 inputs and 17 outputs.

3.123.4.1. Executing ABC.

3.123.5. Extracting gate netlist of module `\d_encoder_d_decoder' to `<abc-temp-dir>/input.blif'..
Found matching negedge clock domain: \tx_tetra_clk_36_KHz
Extracted 27 gates and 35 wires to a netlist network with 6 inputs and 13 outputs.

3.123.5.1. Executing ABC.

3.123.6. Extracting gate netlist of module `\d_encoder_d_decoder' to `<abc-temp-dir>/input.blif'..
Found matching negedge clock domain: \tx_tetra_clk_18_KHz, synchronously reset by \tx_tetra_rst
Extracted 29 gates and 42 wires to a netlist network with 11 inputs and 11 outputs.

3.123.6.1. Executing ABC.

yosys> abc -dff -keepff

3.124. Executing ABC pass (technology mapping using ABC).

3.124.1. Summary of detected clock domains:
  6 cells in clk=!\tx_tetra_clk_36_KHz, en=\tx_tetra_valid_input, arst=\tx_tetra_rst, srst={ }
  13 cells in clk=!\tx_tetra_clk_36_KHz, en={ }, arst={ }, srst={ }
  21 cells in clk=!\rx_clk_18_KHz, en=\rx_en, arst={ }, srst=$abc$1156$auto$rtlil.cc:2550:AndGate$1125
  85 cells in clk=!\rx_clk_18_KHz, en=$abc$1197$auto$opt_dff.cc:219:make_patterns_logic$232, arst={ }, srst={ }
  44 cells in clk=!\tx_tetra_clk_18_KHz, en={ }, arst={ }, srst=\tx_tetra_rst

3.124.2. Extracting gate netlist of module `\d_encoder_d_decoder' to `<abc-temp-dir>/input.blif'..
Found matching negedge clock domain: \tx_tetra_clk_36_KHz, enabled by \tx_tetra_valid_input, asynchronously reset by \tx_tetra_rst
Extracted 6 gates and 7 wires to a netlist network with 1 inputs and 6 outputs.

3.124.2.1. Executing ABC.

3.124.3. Extracting gate netlist of module `\d_encoder_d_decoder' to `<abc-temp-dir>/input.blif'..
Found matching negedge clock domain: \tx_tetra_clk_36_KHz
Extracted 13 gates and 19 wires to a netlist network with 6 inputs and 10 outputs.

3.124.3.1. Executing ABC.

3.124.4. Extracting gate netlist of module `\d_encoder_d_decoder' to `<abc-temp-dir>/input.blif'..
Found matching negedge clock domain: \rx_clk_18_KHz, enabled by \rx_en, synchronously reset by $abc$1156$auto$rtlil.cc:2550:AndGate$1125
Extracted 16 gates and 33 wires to a netlist network with 17 inputs and 16 outputs.

3.124.4.1. Executing ABC.

3.124.5. Extracting gate netlist of module `\d_encoder_d_decoder' to `<abc-temp-dir>/input.blif'..
Found matching negedge clock domain: \rx_clk_18_KHz, enabled by $abc$1197$auto$opt_dff.cc:219:make_patterns_logic$232
Extracted 85 gates and 119 wires to a netlist network with 34 inputs and 17 outputs.

3.124.5.1. Executing ABC.

3.124.6. Extracting gate netlist of module `\d_encoder_d_decoder' to `<abc-temp-dir>/input.blif'..
Found matching negedge clock domain: \tx_tetra_clk_18_KHz, synchronously reset by \tx_tetra_rst
Extracted 44 gates and 54 wires to a netlist network with 10 inputs and 11 outputs.

3.124.6.1. Executing ABC.

yosys> abc -dff -keepff

3.125. Executing ABC pass (technology mapping using ABC).

3.125.1. Summary of detected clock domains:
  6 cells in clk=!\tx_tetra_clk_36_KHz, en=\tx_tetra_valid_input, arst=\tx_tetra_rst, srst={ }
  13 cells in clk=!\tx_tetra_clk_36_KHz, en={ }, arst={ }, srst={ }
  21 cells in clk=!\rx_clk_18_KHz, en=\rx_en, arst={ }, srst=$abc$1370$abc$1156$auto$rtlil.cc:2550:AndGate$1125
  85 cells in clk=!\rx_clk_18_KHz, en=$abc$1402$abc$1197$auto$opt_dff.cc:219:make_patterns_logic$232, arst={ }, srst={ }
  39 cells in clk=!\tx_tetra_clk_18_KHz, en={ }, arst={ }, srst=\tx_tetra_rst

3.125.2. Extracting gate netlist of module `\d_encoder_d_decoder' to `<abc-temp-dir>/input.blif'..
Found matching negedge clock domain: \tx_tetra_clk_36_KHz, enabled by \tx_tetra_valid_input, asynchronously reset by \tx_tetra_rst
Extracted 6 gates and 7 wires to a netlist network with 1 inputs and 6 outputs.

3.125.2.1. Executing ABC.

3.125.3. Extracting gate netlist of module `\d_encoder_d_decoder' to `<abc-temp-dir>/input.blif'..
Found matching negedge clock domain: \tx_tetra_clk_36_KHz
Extracted 13 gates and 19 wires to a netlist network with 6 inputs and 10 outputs.

3.125.3.1. Executing ABC.

3.125.4. Extracting gate netlist of module `\d_encoder_d_decoder' to `<abc-temp-dir>/input.blif'..
Found matching negedge clock domain: \rx_clk_18_KHz, enabled by \rx_en, synchronously reset by $abc$1370$abc$1156$auto$rtlil.cc:2550:AndGate$1125
Extracted 16 gates and 33 wires to a netlist network with 17 inputs and 16 outputs.

3.125.4.1. Executing ABC.

3.125.5. Extracting gate netlist of module `\d_encoder_d_decoder' to `<abc-temp-dir>/input.blif'..
Found matching negedge clock domain: \rx_clk_18_KHz, enabled by $abc$1402$abc$1197$auto$opt_dff.cc:219:make_patterns_logic$232
Extracted 85 gates and 119 wires to a netlist network with 34 inputs and 17 outputs.

3.125.5.1. Executing ABC.

3.125.6. Extracting gate netlist of module `\d_encoder_d_decoder' to `<abc-temp-dir>/input.blif'..
Found matching negedge clock domain: \tx_tetra_clk_18_KHz, synchronously reset by \tx_tetra_rst
Extracted 39 gates and 49 wires to a netlist network with 10 inputs and 11 outputs.

3.125.6.1. Executing ABC.

yosys> abc -dff -keepff

3.126. Executing ABC pass (technology mapping using ABC).

3.126.1. Summary of detected clock domains:
  13 cells in clk=!\tx_tetra_clk_36_KHz, en={ }, arst={ }, srst={ }
  6 cells in clk=!\tx_tetra_clk_36_KHz, en=\tx_tetra_valid_input, arst=\tx_tetra_rst, srst={ }
  85 cells in clk=!\rx_clk_18_KHz, en=$abc$1586$abc$1402$abc$1197$auto$opt_dff.cc:219:make_patterns_logic$232, arst={ }, srst={ }
  21 cells in clk=!\rx_clk_18_KHz, en=\rx_en, arst={ }, srst=$abc$1554$abc$1370$abc$1156$auto$rtlil.cc:2550:AndGate$1125
  39 cells in clk=!\tx_tetra_clk_18_KHz, en={ }, arst={ }, srst=\tx_tetra_rst

3.126.2. Extracting gate netlist of module `\d_encoder_d_decoder' to `<abc-temp-dir>/input.blif'..
Found matching negedge clock domain: \tx_tetra_clk_36_KHz
Extracted 13 gates and 19 wires to a netlist network with 6 inputs and 10 outputs.

3.126.2.1. Executing ABC.

3.126.3. Extracting gate netlist of module `\d_encoder_d_decoder' to `<abc-temp-dir>/input.blif'..
Found matching negedge clock domain: \tx_tetra_clk_36_KHz, enabled by \tx_tetra_valid_input, asynchronously reset by \tx_tetra_rst
Extracted 6 gates and 7 wires to a netlist network with 1 inputs and 6 outputs.

3.126.3.1. Executing ABC.

3.126.4. Extracting gate netlist of module `\d_encoder_d_decoder' to `<abc-temp-dir>/input.blif'..
Found matching negedge clock domain: \rx_clk_18_KHz, enabled by $abc$1586$abc$1402$abc$1197$auto$opt_dff.cc:219:make_patterns_logic$232
Extracted 85 gates and 119 wires to a netlist network with 34 inputs and 17 outputs.

3.126.4.1. Executing ABC.

3.126.5. Extracting gate netlist of module `\d_encoder_d_decoder' to `<abc-temp-dir>/input.blif'..
Found matching negedge clock domain: \rx_clk_18_KHz, enabled by \rx_en, synchronously reset by $abc$1554$abc$1370$abc$1156$auto$rtlil.cc:2550:AndGate$1125
Extracted 16 gates and 33 wires to a netlist network with 17 inputs and 16 outputs.

3.126.5.1. Executing ABC.

3.126.6. Extracting gate netlist of module `\d_encoder_d_decoder' to `<abc-temp-dir>/input.blif'..
Found matching negedge clock domain: \tx_tetra_clk_18_KHz, synchronously reset by \tx_tetra_rst
Extracted 39 gates and 49 wires to a netlist network with 10 inputs and 11 outputs.

3.126.6.1. Executing ABC.

yosys> opt_ffinv

3.127. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt_expr

3.128. Executing OPT_EXPR pass (perform const folding).
Optimizing module d_encoder_d_decoder.

yosys> opt_merge -nomux

3.129. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\d_encoder_d_decoder'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.130. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \d_encoder_d_decoder..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.131. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \d_encoder_d_decoder.
Performed a total of 0 changes.

yosys> opt_merge

3.132. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\d_encoder_d_decoder'.
Removed a total of 0 cells.

yosys> opt_share

3.133. Executing OPT_SHARE pass.

yosys> opt_dff -sat

3.134. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.135. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \d_encoder_d_decoder..
Removed 0 unused cells and 830 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.136. Executing OPT_EXPR pass (perform const folding).
Optimizing module d_encoder_d_decoder.
MAX OPT ITERATION = 1

yosys> bmuxmap

3.137. Executing BMUXMAP pass.

yosys> demuxmap

3.138. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> abc -script /tmp/yosys_lQaM9s/abc_tmp_1.scr

3.139. Executing ABC pass (technology mapping using ABC).

3.139.1. Extracting gate netlist of module `\d_encoder_d_decoder' to `<abc-temp-dir>/input.blif'..
Extracted 121 gates and 161 wires to a netlist network with 40 inputs and 29 outputs.

3.139.1.1. Executing ABC.
DE:   #PIs =  40  #Luts =    35  Max Lvl =   3  Avg Lvl =   1.55  [   0.08 sec. at Pass 0]{firstMap}[1]
DE:   #PIs =  40  #Luts =    35  Max Lvl =   3  Avg Lvl =   1.55  [   0.43 sec. at Pass 1]{initMapFlow}[2]
DE:   #PIs =  40  #Luts =    35  Max Lvl =   3  Avg Lvl =   1.55  [   0.13 sec. at Pass 2]{map}[2]
DE:   #PIs =  40  #Luts =    35  Max Lvl =   3  Avg Lvl =   1.55  [   0.48 sec. at Pass 3]{postMap}[6]
DE:   #PIs =  40  #Luts =    35  Max Lvl =   3  Avg Lvl =   1.55  [   0.70 sec. at Pass 4]{map}[12]
DE:   #PIs =  40  #Luts =    35  Max Lvl =   3  Avg Lvl =   1.55  [   0.55 sec. at Pass 5]{postMap}[36]
DE:   #PIs =  40  #Luts =    34  Max Lvl =   5  Avg Lvl =   1.93  [   0.78 sec. at Pass 6]{pushMap}[100]
DE:   #PIs =  40  #Luts =    34  Max Lvl =   4  Avg Lvl =   1.69  [   0.45 sec. at Pass 7]{map}[100]
DE:   #PIs =  40  #Luts =    34  Max Lvl =   4  Avg Lvl =   1.69  [   0.66 sec. at Pass 8]{postMap}[100]
DE:   #PIs =  40  #Luts =    34  Max Lvl =   4  Avg Lvl =   1.69  [   0.44 sec. at Pass 9]{map}[100]
DE:   #PIs =  40  #Luts =    33  Max Lvl =   4  Avg Lvl =   1.79  [   0.65 sec. at Pass 10]{postMap}[100]
DE:   #PIs =  40  #Luts =    33  Max Lvl =   4  Avg Lvl =   1.79  [   0.46 sec. at Pass 11]{map}[100]
DE:   #PIs =  40  #Luts =    33  Max Lvl =   4  Avg Lvl =   1.79  [   0.63 sec. at Pass 12]{postMap}[100]
DE:   #PIs =  40  #Luts =    33  Max Lvl =   4  Avg Lvl =   1.79  [   0.46 sec. at Pass 13]{map}[100]
DE:   #PIs =  40  #Luts =    33  Max Lvl =   4  Avg Lvl =   1.79  [   0.61 sec. at Pass 14]{pushMap}[100]
DE:   #PIs =  40  #Luts =    33  Max Lvl =   4  Avg Lvl =   1.79  [   0.41 sec. at Pass 15]{finalMap}[100]

yosys> opt_expr

3.140. Executing OPT_EXPR pass (perform const folding).
Optimizing module d_encoder_d_decoder.

yosys> opt_merge -nomux

3.141. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\d_encoder_d_decoder'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.142. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \d_encoder_d_decoder..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.143. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \d_encoder_d_decoder.
Performed a total of 0 changes.

yosys> opt_merge

3.144. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\d_encoder_d_decoder'.
Removed a total of 0 cells.

yosys> opt_share

3.145. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe

3.146. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.147. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \d_encoder_d_decoder..
Removed 0 unused cells and 161 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.148. Executing OPT_EXPR pass (perform const folding).
Optimizing module d_encoder_d_decoder.
MAX OPT ITERATION = 1

yosys> opt_ffinv

3.149. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> stat

3.150. Printing statistics.

=== d_encoder_d_decoder ===

   Number of wires:                203
   Number of wire bits:            545
   Number of public wires:          57
   Number of public wire bits:     223
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 76
     $_DFFE_NP0P_                    2
     $_DFFE_NP_                     16
     $_DFF_N_                        2
     $_SDFFE_NP0P_                  15
     $_SDFFE_NP1P_                   1
     $_SDFF_NP0_                     3
     $lut                           33
     RS_DSP_MULT                     4


yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFFE_??_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_SDFF_???_ 0 -cell $_SDFFE_????_ 0 -cell $_DLATCH_?_ 0 -cell $_DLATCH_???_ 0

3.151. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.152. Printing statistics.

=== d_encoder_d_decoder ===

   Number of wires:                203
   Number of wire bits:            545
   Number of public wires:          57
   Number of public wire bits:     223
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 76
     $_DFFE_NP0P_                    2
     $_DFFE_NP_                     16
     $_DFF_N_                        2
     $_SDFFE_NP0P_                  15
     $_SDFFE_NP1P_                   1
     $_SDFF_NP0_                     3
     $lut                           33
     RS_DSP_MULT                     4


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis2/ffs_map.v

3.153. Executing TECHMAP pass (map to technology primitives).

3.153.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.153.2. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/ffs_map.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_PP0N_'.
Generating RTLIL representation for module `\$_SDFFE_PN0P_'.
Generating RTLIL representation for module `\$_SDFFE_PN0N_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFFE_PP1N_'.
Generating RTLIL representation for module `\$_SDFFE_PN1P_'.
Generating RTLIL representation for module `\$_SDFFE_PN1N_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP0N_'.
Generating RTLIL representation for module `\$_SDFFE_NN0P_'.
Generating RTLIL representation for module `\$_SDFFE_NN0N_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1N_'.
Generating RTLIL representation for module `\$_SDFFE_NN1P_'.
Generating RTLIL representation for module `\$_SDFFE_NN1N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_PP0_'.
Generating RTLIL representation for module `\$_DLATCH_NP0_'.
Generating RTLIL representation for module `\$_DLATCH_PN0_'.
Generating RTLIL representation for module `\$_DLATCH_NN0_'.
Generating RTLIL representation for module `\$_DLATCH_PP1_'.
Generating RTLIL representation for module `\$_DLATCH_NP1_'.
Generating RTLIL representation for module `\$_DLATCH_PN1_'.
Generating RTLIL representation for module `\$_DLATCH_NN1_'.
Successfully finished Verilog frontend.

3.153.3. Continuing TECHMAP pass.
Using template \$_DFFE_NP0P_ for cells of type $_DFFE_NP0P_.
Using template \$_SDFFE_NP0P_ for cells of type $_SDFFE_NP0P_.
Using template \$_SDFF_NP0_ for cells of type $_SDFF_NP0_.
Using template \$_DFF_N_ for cells of type $_DFF_N_.
Using template \$_SDFFE_NP1P_ for cells of type $_SDFFE_NP1P_.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFFE_NP_ for cells of type $_DFFE_NP_.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~209 debug messages>

yosys> opt_expr -mux_undef

3.154. Executing OPT_EXPR pass (perform const folding).
Optimizing module d_encoder_d_decoder.
<suppressed ~317 debug messages>

yosys> simplemap

3.155. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.156. Executing OPT_EXPR pass (perform const folding).
Optimizing module d_encoder_d_decoder.

yosys> opt_merge

3.157. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\d_encoder_d_decoder'.
<suppressed ~519 debug messages>
Removed a total of 173 cells.

yosys> opt_dff -nodffe -nosdff

3.158. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.159. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \d_encoder_d_decoder..
Removed 0 unused cells and 228 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.160. Executing OPT_EXPR pass (perform const folding).
Optimizing module d_encoder_d_decoder.
<suppressed ~3 debug messages>

yosys> opt_merge -nomux

3.161. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\d_encoder_d_decoder'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.162. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \d_encoder_d_decoder..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.163. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \d_encoder_d_decoder.
Performed a total of 0 changes.

yosys> opt_merge

3.164. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\d_encoder_d_decoder'.
Removed a total of 0 cells.

yosys> opt_share

3.165. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.166. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.167. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \d_encoder_d_decoder..

yosys> opt_expr

3.168. Executing OPT_EXPR pass (perform const folding).
Optimizing module d_encoder_d_decoder.
MAX OPT ITERATION = 1

yosys> abc -script /tmp/yosys_lQaM9s/abc_tmp_2.scr

3.169. Executing ABC pass (technology mapping using ABC).

3.169.1. Extracting gate netlist of module `\d_encoder_d_decoder' to `<abc-temp-dir>/input.blif'..
Extracted 192 gates and 236 wires to a netlist network with 42 inputs and 31 outputs.

3.169.1.1. Executing ABC.
DE:   #PIs =  42  #Luts =    35  Max Lvl =   4  Avg Lvl =   1.61  [   0.07 sec. at Pass 0]{firstMap}[1]
DE:   #PIs =  42  #Luts =    35  Max Lvl =   4  Avg Lvl =   1.61  [   0.23 sec. at Pass 1]{initMapFlow}[2]
DE:   #PIs =  42  #Luts =    35  Max Lvl =   4  Avg Lvl =   1.61  [   0.09 sec. at Pass 2]{map}[2]
DE:   #PIs =  42  #Luts =    35  Max Lvl =   4  Avg Lvl =   1.61  [   0.15 sec. at Pass 3]{postMap}[6]
DE:   #PIs =  42  #Luts =    35  Max Lvl =   4  Avg Lvl =   1.61  [   0.14 sec. at Pass 4]{map}[12]
DE:   #PIs =  42  #Luts =    35  Max Lvl =   4  Avg Lvl =   1.61  [   0.24 sec. at Pass 5]{postMap}[36]
DE:   #PIs =  42  #Luts =    35  Max Lvl =   4  Avg Lvl =   1.61  [   0.60 sec. at Pass 6]{pushMap}[100]
DE:   #PIs =  42  #Luts =    35  Max Lvl =   4  Avg Lvl =   1.61  [   0.41 sec. at Pass 7]{finalMap}[100]

yosys> opt_expr

3.170. Executing OPT_EXPR pass (perform const folding).
Optimizing module d_encoder_d_decoder.

yosys> opt_merge -nomux

3.171. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\d_encoder_d_decoder'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.172. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \d_encoder_d_decoder..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.173. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \d_encoder_d_decoder.
Performed a total of 0 changes.

yosys> opt_merge

3.174. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\d_encoder_d_decoder'.
Removed a total of 0 cells.

yosys> opt_share

3.175. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe

3.176. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.177. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \d_encoder_d_decoder..
Removed 0 unused cells and 148 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.178. Executing OPT_EXPR pass (perform const folding).
Optimizing module d_encoder_d_decoder.
MAX OPT ITERATION = 1

yosys> hierarchy -check

3.179. Executing HIERARCHY pass (managing design hierarchy).

3.179.1. Analyzing design hierarchy..
Top module:  \d_encoder_d_decoder

3.179.2. Analyzing design hierarchy..
Top module:  \d_encoder_d_decoder
Removed 0 unused modules.

yosys> stat

3.180. Printing statistics.

=== d_encoder_d_decoder ===

   Number of wires:                205
   Number of wire bits:            547
   Number of public wires:          57
   Number of public wire bits:     223
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 78
     $lut                           35
     RS_DSP_MULT                     4
     dffn                            2
     dffne                          16
     dffnre                          2
     sdffnre                        19


yosys> opt_clean -purge

3.181. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \d_encoder_d_decoder..
Removed 0 unused cells and 31 unused wires.
<suppressed ~31 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.182. Executing Verilog backend.
Dumping module `\d_encoder_d_decoder'.

Warnings: 6 unique messages, 6 total
End of script. Logfile hash: c87833e549, CPU: user 0.99s system 0.11s, MEM: 27.47 MB peak
Yosys 0.18+10 (git sha1 92b23013e, gcc 11.2.0 -fPIC -Os)
Time spent: 99% 6x abc (226 sec), 0% 15x read_verilog (0 sec), ...
real 19.61
user 119.64
sys 107.82
