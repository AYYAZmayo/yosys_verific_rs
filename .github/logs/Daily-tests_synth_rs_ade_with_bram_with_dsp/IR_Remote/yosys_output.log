
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.64
 Yosys 0.18+10 (git sha1 c98b0e94e, gcc 9.4.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 00:39:28 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k IR_Emitter_Modulator.v r1024x9_1024x9.v i2cSlaveTop.v i2cSlaveSerialInterface.v IR_Emitter_Interface.v IR_Emitter_Registers.v IR_Remote.v i2cSlave.v IR_Emitter_Carrier_Generator.v

yosys> verific -vlog2k IR_Emitter_Modulator.v r1024x9_1024x9.v i2cSlaveTop.v i2cSlaveSerialInterface.v IR_Emitter_Interface.v IR_Emitter_Registers.v IR_Remote.v i2cSlave.v IR_Emitter_Carrier_Generator.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 00:39:28 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'IR_Emitter_Modulator.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'r1024x9_1024x9.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'i2cSlaveTop.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'i2cSlaveSerialInterface.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'IR_Emitter_Interface.v'
VERIFIC-INFO [VERI-2561] IR_Emitter_Interface.v:263: undeclared symbol 'IR_Emitter_MemRd_Stb', assumed default net type 'wire'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'IR_Emitter_Registers.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'IR_Remote.v'
VERIFIC-WARNING [VERI-1407] IR_Remote.v:125: attribute target identifier 'hierarchy' not found in this scope
VERIFIC-WARNING [VERI-1407] IR_Remote.v:124: attribute target identifier 'ql_pack' not found in this scope
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'i2cSlave.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'IR_Emitter_Carrier_Generator.v'

yosys> synth_rs -top top -tech genesis -goal area -de -verilog synthesized.v

3. Executing synth_rs pass: v0.4.65

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v +/rapidsilicon/genesis/dsp_sim.v

3.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Successfully finished Verilog frontend.

3.3. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_sim.v' to AST representation.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\RS_DSP2_MULT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_ports'.
Generating RTLIL representation for module `\RS_DSP3'.
Generating RTLIL representation for module `\RS_DSP3_MULT'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_params'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top top

3.4. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] IR_Remote.v:29: compiling module 'top'
VERIFIC-INFO [VERI-1018] i2cSlaveTop.v:47: compiling module 'i2cSlaveTop(I2C_ADDRESS=7'b0101010)'
VERIFIC-INFO [VERI-1018] i2cSlave.v:48: compiling module 'i2cSlave(I2C_ADDRESS=7'b0101010)'
VERIFIC-INFO [VERI-1018] i2cSlaveSerialInterface.v:58: compiling module 'i2cSlaveSerialInterface(I2C_ADDRESS=7'b0101010)'
VERIFIC-INFO [VERI-1018] IR_Emitter_Interface.v:29: compiling module 'IR_Emitter_Interface'
VERIFIC-INFO [VERI-1018] IR_Emitter_Carrier_Generator.v:32: compiling module 'IR_Emitter_Carrier_Generator'
VERIFIC-WARNING [VERI-1209] IR_Emitter_Carrier_Generator.v:236: expression size 32 truncated to fit in target size 8
VERIFIC-WARNING [VERI-1209] IR_Emitter_Carrier_Generator.v:264: expression size 32 truncated to fit in target size 8
VERIFIC-WARNING [VERI-1209] IR_Emitter_Carrier_Generator.v:438: expression size 32 truncated to fit in target size 8
VERIFIC-WARNING [VERI-1209] IR_Emitter_Carrier_Generator.v:466: expression size 32 truncated to fit in target size 8
VERIFIC-INFO [VERI-1018] IR_Emitter_Modulator.v:32: compiling module 'IR_Emitter_Modulator'
VERIFIC-WARNING [VERI-1209] IR_Emitter_Modulator.v:478: expression size 14 truncated to fit in target size 13
VERIFIC-WARNING [VERI-1209] IR_Emitter_Modulator.v:508: expression size 32 truncated to fit in target size 16
VERIFIC-INFO [VERI-1018] IR_Emitter_Registers.v:31: compiling module 'IR_Emitter_Registers'
VERIFIC-INFO [VERI-1018] r1024x9_1024x9.v:17: compiling module 'r1024x9_1024x9'
VERIFIC-WARNING [VERI-1209] r1024x9_1024x9.v:40: expression size 22 truncated to fit in target size 9
Importing module top.
Importing module IR_Emitter_Interface.
Importing module IR_Emitter_Carrier_Generator.
Importing module IR_Emitter_Modulator.
Importing module IR_Emitter_Registers.
Importing module i2cSlaveTop(I2C_ADDRESS=7'b0101010).
Importing module i2cSlave(I2C_ADDRESS=7'b0101010).
Importing module i2cSlaveSerialInterface(I2C_ADDRESS=7'b0101010).
Importing module r1024x9_1024x9.

3.4.1. Analyzing design hierarchy..
Top module:  \top
Used module:     \IR_Emitter_Interface
Used module:         \r1024x9_1024x9
Used module:         \IR_Emitter_Registers
Used module:         \IR_Emitter_Modulator
Used module:         \IR_Emitter_Carrier_Generator
Used module:     \i2cSlaveTop(I2C_ADDRESS=7'b0101010)
Used module:         \i2cSlave(I2C_ADDRESS=7'b0101010)
Used module:             \i2cSlaveSerialInterface(I2C_ADDRESS=7'b0101010)

3.4.2. Analyzing design hierarchy..
Top module:  \top
Used module:     \IR_Emitter_Interface
Used module:         \r1024x9_1024x9
Used module:         \IR_Emitter_Registers
Used module:         \IR_Emitter_Modulator
Used module:         \IR_Emitter_Carrier_Generator
Used module:     \i2cSlaveTop(I2C_ADDRESS=7'b0101010)
Used module:         \i2cSlave(I2C_ADDRESS=7'b0101010)
Used module:             \i2cSlaveSerialInterface(I2C_ADDRESS=7'b0101010)
Removed 0 unused modules.

yosys> proc

3.5. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.5.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.5.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.5.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.5.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.5.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.5.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.5.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.5.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.5.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.5.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.5.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.5.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module r1024x9_1024x9.
Optimizing module i2cSlaveSerialInterface(I2C_ADDRESS=7'b0101010).
<suppressed ~20 debug messages>
Optimizing module i2cSlave(I2C_ADDRESS=7'b0101010).
<suppressed ~3 debug messages>
Optimizing module i2cSlaveTop(I2C_ADDRESS=7'b0101010).
Optimizing module IR_Emitter_Registers.
<suppressed ~7 debug messages>
Optimizing module IR_Emitter_Modulator.
<suppressed ~8 debug messages>
Optimizing module IR_Emitter_Carrier_Generator.
<suppressed ~11 debug messages>
Optimizing module IR_Emitter_Interface.
<suppressed ~3 debug messages>
Optimizing module top.

yosys> demuxmap

3.6. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> flatten

3.7. Executing FLATTEN pass (flatten design).
Deleting now unused module IR_Emitter_Carrier_Generator.
Deleting now unused module IR_Emitter_Interface.
Deleting now unused module IR_Emitter_Modulator.
Deleting now unused module IR_Emitter_Registers.
Deleting now unused module i2cSlave(I2C_ADDRESS=7'b0101010).
Deleting now unused module i2cSlaveSerialInterface(I2C_ADDRESS=7'b0101010).
Deleting now unused module i2cSlaveTop(I2C_ADDRESS=7'b0101010).
Deleting now unused module r1024x9_1024x9.
<suppressed ~15 debug messages>

yosys> demuxmap

3.8. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> tribuf -logic -formal

3.9. Executing TRIBUF pass.

yosys> deminout

3.10. Executing DEMINOUT pass (demote inout ports to input or output).
Demoting inout port top.CpuScl to input.
Demoting inout port top.CpuSda to output.
Demoting inout port top.IR_Emitter_Gpio_Port_io to output.

yosys> opt_expr

3.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~32 debug messages>

yosys> opt_clean

3.12. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 1061 unused wires.
<suppressed ~181 debug messages>

yosys> check

3.13. Executing CHECK pass (checking for obvious problems).
Checking module top...
Found and reported 0 problems.

yosys> opt_expr

3.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~57 debug messages>

yosys> opt_merge -nomux

3.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

yosys> opt_muxtree

3.16. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~126 debug messages>

yosys> opt_reduce

3.17. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New ctrl vector for $pmux cell $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$Select_125$IR_Emitter_Carrier_Generator.v:383$955: { $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$n318$807 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$n326$812 }
    New ctrl vector for $pmux cell $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$select_122$IR_Emitter_Carrier_Generator.v:383$952: { $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$n319$808 $auto$opt_reduce.cc:134:opt_pmux$1885 }
    New ctrl vector for $pmux cell $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$select_140$IR_Emitter_Carrier_Generator.v:409$962: { $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$n203$787 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$n347$816 }
    New ctrl vector for $pmux cell $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$Select_153$IR_Emitter_Modulator.v:442$1140: { $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$n296$1022 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$n298$1024 }
    New ctrl vector for $pmux cell $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$select_143$IR_Emitter_Modulator.v:442$1136: { $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$n296$1022 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$n298$1024 }
    New ctrl vector for $pmux cell $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$select_80$IR_Emitter_Registers.v:312$1323: { $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n207$1210 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n208$1211 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n209$1212 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n6$1184 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n9$1186 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n12$1188 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n15$1190 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n18$1192 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n21$1194 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n24$1196 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n27$1198 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n30$1200 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n33$1202 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n36$1204 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n39$1206 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n42$1208 }
    New ctrl vector for $pmux cell $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$Select_235$i2cSlaveSerialInterface.v:474$1852: { $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n956$1585 $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n957$1586 }
    New ctrl vector for $pmux cell $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$select_79$i2cSlaveSerialInterface.v:309$1757: { $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n323$1564 $auto$opt_reduce.cc:134:opt_pmux$1887 }
    New ctrl vector for $pmux cell $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$select_81$i2cSlaveSerialInterface.v:309$1758: $auto$opt_reduce.cc:134:opt_pmux$1889
    New ctrl vector for $pmux cell $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$select_94$i2cSlaveSerialInterface.v:322$1759: $auto$opt_reduce.cc:134:opt_pmux$1891
  Optimizing cells in module \top.
Performed a total of 12 changes.

yosys> opt_merge

3.18. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_share

3.19. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.20. Executing OPT_DFF pass (perform DFF optimizations).
Removing never-active async load on $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$txData_reg$i2cSlaveSerialInterface.v:449$1839 ($aldff) from module top.
Removing never-active async load on $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$streamSt_reg$i2cSlaveSerialInterface.v:449$1838 ($aldff) from module top.
Removing never-active async load on $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$rxData_reg$i2cSlaveSerialInterface.v:449$1840 ($aldff) from module top.
Removing never-active async load on $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$regAddr_reg$i2cSlaveSerialInterface.v:449$1842 ($aldff) from module top.
Removing never-active async load on $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$dataOut_reg$i2cSlaveSerialInterface.v:449$1836 ($aldff) from module top.
Removing never-active async load on $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$bitCnt_reg$i2cSlaveSerialInterface.v:449$1841 ($aldff) from module top.
Removing never-active async load on $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$CurrState_SISt_reg$i2cSlaveSerialInterface.v:424$1815 ($aldff) from module top.
Removing never-active async load on $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$startStopDetState_reg$i2cSlave.v:245$1508 ($aldff) from module top.
Removing never-active async load on $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$sdaPipe_reg$i2cSlave.v:191$1482 ($aldff) from module top.
Removing never-active async load on $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$sdaDelayed_reg$i2cSlave.v:214$1491 ($aldff) from module top.
Removing never-active async load on $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$sclPipe_reg$i2cSlave.v:191$1484 ($aldff) from module top.
Removing never-active async load on $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$sclDelayed_reg$i2cSlave.v:214$1490 ($aldff) from module top.
Removing never-active async load on $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$rstPipe_reg$i2cSlave.v:158$1464 ($aldff) from module top.
Removing never-active async load on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_7.$verific$RAM9bit_reg$r1024x9_1024x9.v:41$1883 ($aldff) from module top.
Removing never-active async load on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_6.$verific$RAM9bit_reg$r1024x9_1024x9.v:41$1883 ($aldff) from module top.
Removing never-active async load on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_5.$verific$RAM9bit_reg$r1024x9_1024x9.v:41$1883 ($aldff) from module top.
Removing never-active async load on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_4.$verific$RAM9bit_reg$r1024x9_1024x9.v:41$1883 ($aldff) from module top.
Removing never-active async load on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_3.$verific$RAM9bit_reg$r1024x9_1024x9.v:41$1883 ($aldff) from module top.
Removing never-active async load on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_2.$verific$RAM9bit_reg$r1024x9_1024x9.v:41$1883 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.$verific$RegRd_En_i_1ff_reg$IR_Emitter_Interface.v:324$185 ($aldff) from module top.
Removing never-active async load on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_1.$verific$RAM9bit_reg$r1024x9_1024x9.v:41$1883 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.$verific$RegAddr_i_1ff_reg$IR_Emitter_Interface.v:324$186 ($aldff) from module top.
Removing never-active async load on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_0.$verific$RAM9bit_reg$r1024x9_1024x9.v:41$1883 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$RegData_o_reg$IR_Emitter_Registers.v:408$1365 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$RegAddr_i_1ff_reg$IR_Emitter_Registers.v:408$1364 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_LED_Gpio_o_reg$IR_Emitter_Registers.v:408$1374 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_LED_Gpio_Polarity_o_reg$IR_Emitter_Registers.v:408$1373 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Run_Modulator_o_reg$IR_Emitter_Registers.v:408$1366 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Mode_Modulator_o_reg$IR_Emitter_Registers.v:408$1367 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_MemRd_Stop_o_reg$IR_Emitter_Registers.v:408$1371 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_MemRd_Start_o_reg$IR_Emitter_Registers.v:408$1370 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_MemAddr_Reg_o_reg$IR_Emitter_Registers.v:408$1372 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Interrupt_reg$IR_Emitter_Registers.v:408$1378 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Interrupt_Enable_reg$IR_Emitter_Registers.v:408$1379 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Gpio_Port_o_reg$IR_Emitter_Registers.v:408$1375 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Gpio_Dir_o_reg$IR_Emitter_Registers.v:408$1376 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Carrier_Duty_Len_o_reg$IR_Emitter_Registers.v:408$1369 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Carrier_Cycle_Len_o_reg$IR_Emitter_Registers.v:408$1368 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Busy_Modulator_i_1ff_reg$IR_Emitter_Registers.v:408$1377 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_LED_En_o_reg$IR_Emitter_Modulator.v:260$1113 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_Pulse_Modulator_o_tc_reg$IR_Emitter_Modulator.v:260$1109 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_Pulse_Modulator_o_reg$IR_Emitter_Modulator.v:260$1106 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_Pulse_Modulator_o_ld_upr_reg$IR_Emitter_Modulator.v:260$1108 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_Pulse_Modulator_o_ld_lwr_reg$IR_Emitter_Modulator.v:260$1107 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_Pulse_Modulator_Signal_reg$IR_Emitter_Modulator.v:260$1112 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_Modulator_State_reg$IR_Emitter_Modulator.v:260$1114 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_MemData_lwr_reg$IR_Emitter_Modulator.v:260$1110 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_MemAddr_Modulator_o_tc_upr_reg$IR_Emitter_Modulator.v:260$1105 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_MemAddr_Modulator_o_tc_lwr_reg$IR_Emitter_Modulator.v:260$1104 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_MemAddr_Modulator_o_reg$IR_Emitter_Modulator.v:260$1101 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_MemAddr_Modulator_o_ld_reg$IR_Emitter_Modulator.v:260$1103 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_MemAddr_Modulator_o_ce_reg$IR_Emitter_Modulator.v:260$1102 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_Carrier_Enable_o_reg$IR_Emitter_Modulator.v:260$1099 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_Busy_Modulator_o_reg$IR_Emitter_Modulator.v:260$1100 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Signal_o_reg$IR_Emitter_Carrier_Generator.v:216$910 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Duty_ld_tc_reg$IR_Emitter_Carrier_Generator.v:216$908 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Duty_cntr_tc_reg$IR_Emitter_Carrier_Generator.v:216$907 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Duty_cntr_ld_reg$IR_Emitter_Carrier_Generator.v:216$906 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Duty_State_reg$IR_Emitter_Carrier_Generator.v:216$909 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Duty_1_cntr_tc_reg$IR_Emitter_Carrier_Generator.v:216$905 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Duty_1_cntr_reg$IR_Emitter_Carrier_Generator.v:216$904 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Duty_0_cntr_tc_reg$IR_Emitter_Carrier_Generator.v:216$903 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Duty_0_cntr_reg$IR_Emitter_Carrier_Generator.v:216$902 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Cycle_Enable_o_reg$IR_Emitter_Carrier_Generator.v:216$901 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Cycle_1_cntr_tc_reg$IR_Emitter_Carrier_Generator.v:216$900 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Cycle_1_cntr_reg$IR_Emitter_Carrier_Generator.v:216$899 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Cycle_0_cntr_tc_reg$IR_Emitter_Carrier_Generator.v:216$898 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Cycle_0_cntr_reg$IR_Emitter_Carrier_Generator.v:216$897 ($aldff) from module top.

yosys> opt_clean

3.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 9 unused cells and 17 unused wires.
<suppressed ~10 debug messages>

yosys> opt_expr

3.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_muxtree

3.23. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~128 debug messages>

yosys> opt_reduce

3.24. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.25. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_share

3.26. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.27. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr

3.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
MAX OPT ITERATION = 2

yosys> fsm -encoding binary

3.30. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.30.1. Executing FSM_DETECT pass (finding FSMs in design).
Found FSM state register top.u_i2cSlaveTop.u_i2cSlave.startStopDetState.

yosys> fsm_extract

3.30.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\u_i2cSlaveTop.u_i2cSlave.startStopDetState' from module `\top'.
  found $dff cell for state register: $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$startStopDetState_reg$i2cSlave.v:245$1508
  root of input selection tree: $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$n176$1457
  found reset state: 2'00 (guessed from mux tree)
  found ctrl input: \u_i2cSlaveTop.u_i2cSlave.rstPipe [1]
  found ctrl input: \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.clearStartStopDet
  found ctrl input: \u_i2cSlaveTop.u_i2cSlave.sclDeb
  found ctrl input: $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$n154$1431
  found ctrl input: $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$n160$1432
  found state code: 2'01
  found state code: 2'10
  found state code: 2'00
  found ctrl output: $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n291$1559
  found ctrl output: $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n323$1564
  found ctrl output: $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n324$1565
  ctrl inputs: { \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.clearStartStopDet $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$n154$1431 $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$n160$1432 \u_i2cSlaveTop.u_i2cSlave.rstPipe [1] \u_i2cSlaveTop.u_i2cSlave.sclDeb }
  ctrl outputs: { $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n324$1565 $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n323$1564 $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n291$1559 $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$n176$1457 }
  transition:       2'00 5'0--00 ->       2'00 5'01000
  transition:       2'00 5'00001 ->       2'00 5'01000
  transition:       2'00 5'00101 ->       2'01 5'01001
  transition:       2'00 5'01-01 ->       2'10 5'01010
  transition:       2'00 5'1--0- ->       2'00 5'01000
  transition:       2'00 5'---1- ->       2'00 5'01000
  transition:       2'10 5'0--00 ->       2'10 5'00110
  transition:       2'10 5'00001 ->       2'10 5'00110
  transition:       2'10 5'00101 ->       2'01 5'00101
  transition:       2'10 5'01-01 ->       2'10 5'00110
  transition:       2'10 5'1--0- ->       2'00 5'00100
  transition:       2'10 5'---1- ->       2'00 5'00100
  transition:       2'01 5'0--00 ->       2'01 5'10001
  transition:       2'01 5'00001 ->       2'01 5'10001
  transition:       2'01 5'00101 ->       2'01 5'10001
  transition:       2'01 5'01-01 ->       2'10 5'10010
  transition:       2'01 5'1--0- ->       2'00 5'10000
  transition:       2'01 5'---1- ->       2'00 5'10000

yosys> fsm_opt

3.30.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\u_i2cSlaveTop.u_i2cSlave.startStopDetState$1892' from module `\top'.
  Merging pattern 5'00001 and 5'00101 from group (2 2 5'10001).
  Merging pattern 5'00101 and 5'00001 from group (2 2 5'10001).

yosys> opt_clean

3.30.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 9 unused cells and 10 unused wires.
<suppressed ~11 debug messages>

yosys> fsm_opt

3.30.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\u_i2cSlaveTop.u_i2cSlave.startStopDetState$1892' from module `\top'.
  Removing unused output signal $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$n176$1457 [0].
  Removing unused output signal $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$n176$1457 [1].

yosys> fsm_recode -encoding binary

3.30.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\u_i2cSlaveTop.u_i2cSlave.startStopDetState$1892' from module `\top' using `auto' encoding:
  mapping auto encoding to `binary` for this FSM.
  existing encoding is already a packed binary encoding.

yosys> fsm_info

3.30.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\u_i2cSlaveTop.u_i2cSlave.startStopDetState$1892' from module `top':
-------------------------------------

  Information on FSM $fsm$\u_i2cSlaveTop.u_i2cSlave.startStopDetState$1892 (\u_i2cSlaveTop.u_i2cSlave.startStopDetState):

  Number of input signals:    5
  Number of output signals:   3
  Number of state bits:       2

  Input signals:
    0: \u_i2cSlaveTop.u_i2cSlave.sclDeb
    1: \u_i2cSlaveTop.u_i2cSlave.rstPipe [1]
    2: $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$n160$1432
    3: $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$n154$1431
    4: \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.clearStartStopDet

  Output signals:
    0: $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n291$1559
    1: $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n323$1564
    2: $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n324$1565

  State encoding:
    0:       2'00  <RESET STATE>
    1:       2'10
    2:       2'01

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 5'0--00   ->     0 3'010
      1:     0 5'00001   ->     0 3'010
      2:     0 5'1--0-   ->     0 3'010
      3:     0 5'---1-   ->     0 3'010
      4:     0 5'01-01   ->     1 3'010
      5:     0 5'00101   ->     2 3'010
      6:     1 5'1--0-   ->     0 3'001
      7:     1 5'---1-   ->     0 3'001
      8:     1 5'0--00   ->     1 3'001
      9:     1 5'00001   ->     1 3'001
     10:     1 5'01-01   ->     1 3'001
     11:     1 5'00101   ->     2 3'001
     12:     2 5'1--0-   ->     0 3'100
     13:     2 5'---1-   ->     0 3'100
     14:     2 5'01-01   ->     1 3'100
     15:     2 5'0--00   ->     2 3'100
     16:     2 5'00-01   ->     2 3'100

-------------------------------------

yosys> fsm_map

3.30.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\u_i2cSlaveTop.u_i2cSlave.startStopDetState$1892' from module `\top'.

yosys> opt_expr

3.31. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~5 debug messages>

yosys> opt_merge -nomux

3.32. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

yosys> opt_muxtree

3.33. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~128 debug messages>

yosys> opt_reduce

3.34. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.35. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_share

3.36. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.37. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$regAddr_reg$i2cSlaveSerialInterface.v:449$1842 ($dff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_regAddr, Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.regAddr).
Adding EN signal on $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$I2CReadDataLatchedOut_reg$i2cSlaveSerialInterface.v:476$1854 ($dff) from module top (D = $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n960$1589, Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.I2CReadDataLatchedOut).
Adding EN signal on $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$sdaDeb_reg$i2cSlave.v:191$1483 ($dff) from module top (D = $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$n73$1424, Q = \u_i2cSlaveTop.u_i2cSlave.sdaDeb).
Adding EN signal on $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$sclDeb_reg$i2cSlave.v:191$1485 ($dff) from module top (D = $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$n80$1425, Q = \u_i2cSlaveTop.u_i2cSlave.sclDeb).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_7.$verific$RAM9bit_reg$r1024x9_1024x9.v:41$1883 ($dff) from module top (D = $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_7.$verific$n37$1865 [8:0], Q = \u_IR_Emitter_Interface.u_IR_Emitter_SRAM_7.RAM9bit).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_6.$verific$RAM9bit_reg$r1024x9_1024x9.v:41$1883 ($dff) from module top (D = $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_6.$verific$n37$1865 [8:0], Q = \u_IR_Emitter_Interface.u_IR_Emitter_SRAM_6.RAM9bit).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_5.$verific$RAM9bit_reg$r1024x9_1024x9.v:41$1883 ($dff) from module top (D = $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_5.$verific$n37$1865 [8:0], Q = \u_IR_Emitter_Interface.u_IR_Emitter_SRAM_5.RAM9bit).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_4.$verific$RAM9bit_reg$r1024x9_1024x9.v:41$1883 ($dff) from module top (D = $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_4.$verific$n37$1865 [8:0], Q = \u_IR_Emitter_Interface.u_IR_Emitter_SRAM_4.RAM9bit).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_3.$verific$RAM9bit_reg$r1024x9_1024x9.v:41$1883 ($dff) from module top (D = $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_3.$verific$n37$1865 [8:0], Q = \u_IR_Emitter_Interface.u_IR_Emitter_SRAM_3.RAM9bit).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_2.$verific$RAM9bit_reg$r1024x9_1024x9.v:41$1883 ($dff) from module top (D = $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_2.$verific$n37$1865 [8:0], Q = \u_IR_Emitter_Interface.u_IR_Emitter_SRAM_2.RAM9bit).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_1.$verific$RAM9bit_reg$r1024x9_1024x9.v:41$1883 ($dff) from module top (D = $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_1.$verific$n37$1865 [8:0], Q = \u_IR_Emitter_Interface.u_IR_Emitter_SRAM_1.RAM9bit).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_0.$verific$RAM9bit_reg$r1024x9_1024x9.v:41$1883 ($dff) from module top (D = $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_0.$verific$n37$1865 [8:0], Q = \u_IR_Emitter_Interface.u_IR_Emitter_SRAM_0.RAM9bit).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_LED_Gpio_o_reg$IR_Emitter_Registers.v:408$1374 ($adff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut [2], Q = \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_LED_Gpio_o).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_LED_Gpio_Polarity_o_reg$IR_Emitter_Registers.v:408$1373 ($adff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut [3], Q = \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_LED_Gpio_Polarity_o).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Mode_Modulator_o_reg$IR_Emitter_Registers.v:408$1367 ($adff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut [1:0], Q = \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Mode_Modulator_o).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_MemRd_Stop_o_reg$IR_Emitter_Registers.v:408$1371 ($adff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Stop_o [7:0]).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_MemRd_Stop_o_reg$IR_Emitter_Registers.v:408$1371 ($adff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut [4:0], Q = \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Stop_o [12:8]).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_MemRd_Start_o_reg$IR_Emitter_Registers.v:408$1370 ($adff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Start_o [7:0]).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_MemRd_Start_o_reg$IR_Emitter_Registers.v:408$1370 ($adff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut [4:0], Q = \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Start_o [12:8]).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_MemAddr_Reg_o_reg$IR_Emitter_Registers.v:408$1372 ($adff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut [5:0], Q = \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemAddr_Reg_o).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Interrupt_reg$IR_Emitter_Registers.v:408$1378 ($adff) from module top (D = $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n386$1229, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Interrupt).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Interrupt_Enable_reg$IR_Emitter_Registers.v:408$1379 ($adff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut [5], Q = \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Interrupt_Enable).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Gpio_Port_o_reg$IR_Emitter_Registers.v:408$1375 ($adff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Gpio_Port_o).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Gpio_Dir_o_reg$IR_Emitter_Registers.v:408$1376 ($adff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Gpio_Dir_o).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Carrier_Duty_Len_o_reg$IR_Emitter_Registers.v:408$1369 ($adff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Duty_Len_o [7:0]).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Carrier_Duty_Len_o_reg$IR_Emitter_Registers.v:408$1369 ($adff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Duty_Len_o [15:8]).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Carrier_Cycle_Len_o_reg$IR_Emitter_Registers.v:408$1368 ($adff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Cycle_Len_o [7:0]).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Carrier_Cycle_Len_o_reg$IR_Emitter_Registers.v:408$1368 ($adff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Cycle_Len_o [15:8]).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_Pulse_Modulator_o_tc_reg$IR_Emitter_Modulator.v:260$1109 ($adff) from module top (D = \u_IR_Emitter_Interface.u_IR_Emitter_Modulator.IR_Emitter_Pulse_Modulator_o_tc_nxt, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Modulator.IR_Emitter_Pulse_Modulator_o_tc).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_Pulse_Modulator_o_reg$IR_Emitter_Modulator.v:260$1106 ($adff) from module top (D = \u_IR_Emitter_Interface.u_IR_Emitter_Modulator.IR_Emitter_Pulse_Modulator_o_nxt, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Modulator.IR_Emitter_Pulse_Modulator_o).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_MemData_lwr_reg$IR_Emitter_Modulator.v:260$1110 ($adff) from module top (D = \u_IR_Emitter_Interface.IR_Emitter_MemData_o, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Modulator.IR_Emitter_MemData_lwr).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_MemAddr_Modulator_o_tc_upr_reg$IR_Emitter_Modulator.v:260$1105 ($adff) from module top (D = \u_IR_Emitter_Interface.u_IR_Emitter_Modulator.IR_Emitter_MemAddr_Modulator_o_tc_lwr, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Modulator.IR_Emitter_MemAddr_Modulator_o_tc_upr).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_MemAddr_Modulator_o_tc_lwr_reg$IR_Emitter_Modulator.v:260$1104 ($adff) from module top (D = \u_IR_Emitter_Interface.u_IR_Emitter_Modulator.IR_Emitter_MemAddr_Modulator_o_tc_nxt, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Modulator.IR_Emitter_MemAddr_Modulator_o_tc_lwr).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_MemAddr_Modulator_o_reg$IR_Emitter_Modulator.v:260$1101 ($adff) from module top (D = \u_IR_Emitter_Interface.u_IR_Emitter_Modulator.IR_Emitter_MemAddr_Modulator_o_nxt, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Modulator.IR_Emitter_MemAddr_Modulator_o).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Duty_1_cntr_tc_reg$IR_Emitter_Carrier_Generator.v:216$905 ($adff) from module top (D = \u_IR_Emitter_Interface.u_IR_Emitter_Carrier_Generator.IR_Emitter_Carrier_Duty_1_cntr_tc_nxt, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Carrier_Generator.IR_Emitter_Carrier_Duty_1_cntr_tc).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Duty_1_cntr_reg$IR_Emitter_Carrier_Generator.v:216$904 ($adff) from module top (D = \u_IR_Emitter_Interface.u_IR_Emitter_Carrier_Generator.IR_Emitter_Carrier_Duty_1_cntr_nxt, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Carrier_Generator.IR_Emitter_Carrier_Duty_1_cntr).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Cycle_1_cntr_tc_reg$IR_Emitter_Carrier_Generator.v:216$900 ($adff) from module top (D = \u_IR_Emitter_Interface.u_IR_Emitter_Carrier_Generator.IR_Emitter_Carrier_Cycle_1_cntr_tc_nxt, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Carrier_Generator.IR_Emitter_Carrier_Cycle_1_cntr_tc).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Cycle_1_cntr_reg$IR_Emitter_Carrier_Generator.v:216$899 ($adff) from module top (D = \u_IR_Emitter_Interface.u_IR_Emitter_Carrier_Generator.IR_Emitter_Carrier_Cycle_1_cntr_nxt, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Carrier_Generator.IR_Emitter_Carrier_Cycle_1_cntr).

yosys> opt_clean

3.38. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 35 unused cells and 42 unused wires.
<suppressed ~36 debug messages>

yosys> opt_expr

3.39. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~7 debug messages>

yosys> opt_muxtree

3.40. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~101 debug messages>

yosys> opt_reduce

3.41. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.42. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_share

3.43. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.44. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.45. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.46. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
MAX OPT ITERATION = 2

yosys> wreduce -keepdc

3.47. Executing WREDUCE pass (reducing word size of cells).
Removed top 3 bits (of 4) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$1935 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$auto$fsm_map.cc:215:map_fsm$1902 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$1926 ($eq).
Removed top 7 bits (of 8) from port B of cell top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$add_25$i2cSlaveSerialInterface.v:245$1721 ($add).
Removed top 2 bits (of 3) from port B of cell top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$add_48$i2cSlaveSerialInterface.v:280$1737 ($add).
Removed top 1 bits (of 7) from port B of cell top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$equal_115$i2cSlaveSerialInterface.v:342$1772 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$equal_22$i2cSlaveSerialInterface.v:241$1719 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$equal_232$i2cSlaveSerialInterface.v:462$1847 ($eq).
Removed top 1 bits (of 4) from mux cell top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$mux_138$i2cSlaveSerialInterface.v:366$1786 ($mux).
Removed top 1 bits (of 4) from mux cell top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$mux_50$i2cSlaveSerialInterface.v:282$1739 ($mux).
Removed top 2 bits (of 5) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$1933 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$1943 ($ne).
Removed top 4 bits (of 5) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$1922 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$1950 ($ne).
Removed top 1 bits (of 3) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$1953 ($ne).
Removed top 1 bits (of 9) from port A of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_56$IR_Emitter_Carrier_Generator.v:236$911 ($sub).
Removed top 8 bits (of 9) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_56$IR_Emitter_Carrier_Generator.v:236$911 ($sub).
Removed top 1 bits (of 9) from port Y of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_56$IR_Emitter_Carrier_Generator.v:236$911 ($sub).
Removed top 1 bits (of 9) from port A of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_164$IR_Emitter_Carrier_Generator.v:466$981 ($sub).
Removed top 8 bits (of 9) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_164$IR_Emitter_Carrier_Generator.v:466$981 ($sub).
Removed top 1 bits (of 9) from port Y of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_164$IR_Emitter_Carrier_Generator.v:466$981 ($sub).
Removed top 1 bits (of 9) from port A of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_149$IR_Emitter_Carrier_Generator.v:438$968 ($sub).
Removed top 8 bits (of 9) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_149$IR_Emitter_Carrier_Generator.v:438$968 ($sub).
Removed top 1 bits (of 9) from port Y of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_149$IR_Emitter_Carrier_Generator.v:438$968 ($sub).
Removed top 1 bits (of 2) from mux cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$mux_99$IR_Emitter_Carrier_Generator.v:338$941 ($mux).
Removed top 15 bits (of 16) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$equal_89$IR_Emitter_Carrier_Generator.v:302$937 ($eq).
Removed top 7 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$equal_77$IR_Emitter_Carrier_Generator.v:272$928 ($eq).
Removed top 7 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$equal_65$IR_Emitter_Carrier_Generator.v:245$920 ($eq).
Removed top 6 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$equal_62$IR_Emitter_Carrier_Generator.v:243$917 ($eq).
Removed top 7 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$equal_170$IR_Emitter_Carrier_Generator.v:474$987 ($eq).
Removed top 7 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$equal_158$IR_Emitter_Carrier_Generator.v:447$977 ($eq).
Removed top 6 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$equal_155$IR_Emitter_Carrier_Generator.v:445$974 ($eq).
Removed top 2 bits (of 3) from mux cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$mux_79$IR_Emitter_Modulator.v:339$1124 ($mux).
Removed top 14 bits (of 16) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$equal_196$IR_Emitter_Modulator.v:529$1176 ($eq).
Removed top 15 bits (of 16) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$equal_193$IR_Emitter_Modulator.v:528$1173 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$equal_188$IR_Emitter_Modulator.v:507$1166 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$equal_176$IR_Emitter_Modulator.v:477$1153 ($eq).
Removed top 12 bits (of 13) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$add_173$IR_Emitter_Modulator.v:478$1152 ($add).
Removed top 5 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_8$IR_Emitter_Registers.v:240$1280 ($eq).
Removed top 6 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_64$IR_Emitter_Registers.v:285$1318 ($eq).
Removed top 7 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_63$IR_Emitter_Registers.v:283$1317 ($eq).
Removed top 5 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_5$IR_Emitter_Registers.v:239$1277 ($eq).
Removed top 3 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_41$IR_Emitter_Registers.v:257$1313 ($eq).
Removed top 3 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_38$IR_Emitter_Registers.v:256$1310 ($eq).
Removed top 4 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_35$IR_Emitter_Registers.v:254$1307 ($eq).
Removed top 4 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_32$IR_Emitter_Registers.v:252$1304 ($eq).
Removed top 4 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_29$IR_Emitter_Registers.v:251$1301 ($eq).
Removed top 4 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_26$IR_Emitter_Registers.v:249$1298 ($eq).
Removed top 4 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_23$IR_Emitter_Registers.v:248$1295 ($eq).
Removed top 4 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_20$IR_Emitter_Registers.v:246$1292 ($eq).
Removed top 4 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_17$IR_Emitter_Registers.v:245$1289 ($eq).
Removed top 5 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_14$IR_Emitter_Registers.v:243$1286 ($eq).
Removed top 5 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_11$IR_Emitter_Registers.v:242$1283 ($eq).
Removed top 2 bits (of 3) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$1945 ($ne).
Removed top 2 bits (of 3) from port B of cell top.$flatten\u_IR_Emitter_Interface.$verific$equal_45$IR_Emitter_Interface.v:280$155 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\u_IR_Emitter_Interface.$verific$equal_48$IR_Emitter_Interface.v:281$156 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\u_IR_Emitter_Interface.$verific$equal_51$IR_Emitter_Interface.v:282$157 ($eq).
Removed top 2 bits (of 3) from port B of cell top.$flatten\u_IR_Emitter_Interface.$verific$equal_69$IR_Emitter_Interface.v:294$164 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\u_IR_Emitter_Interface.$verific$equal_72$IR_Emitter_Interface.v:295$165 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\u_IR_Emitter_Interface.$verific$equal_75$IR_Emitter_Interface.v:296$166 ($eq).
Removed top 1 bits (of 9) from port A of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_71$IR_Emitter_Carrier_Generator.v:264$924 ($sub).
Removed top 8 bits (of 9) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_71$IR_Emitter_Carrier_Generator.v:264$924 ($sub).
Removed top 1 bits (of 9) from port Y of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_71$IR_Emitter_Carrier_Generator.v:264$924 ($sub).
Removed top 1 bits (of 17) from port A of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$sub_185$IR_Emitter_Modulator.v:508$1164 ($sub).
Removed top 16 bits (of 17) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$sub_185$IR_Emitter_Modulator.v:508$1164 ($sub).
Removed top 1 bits (of 17) from port Y of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$sub_185$IR_Emitter_Modulator.v:508$1164 ($sub).
Removed top 1 bits (of 9) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_0.$verific$xor_22$r1024x9_1024x9.v:40$1879 ($xor).
Removed top 1 bits (of 9) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_1.$verific$xor_22$r1024x9_1024x9.v:40$1879 ($xor).
Removed top 1 bits (of 9) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_2.$verific$xor_22$r1024x9_1024x9.v:40$1879 ($xor).
Removed top 1 bits (of 9) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_3.$verific$xor_22$r1024x9_1024x9.v:40$1879 ($xor).
Removed top 1 bits (of 9) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_4.$verific$xor_22$r1024x9_1024x9.v:40$1879 ($xor).
Removed top 1 bits (of 9) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_5.$verific$xor_22$r1024x9_1024x9.v:40$1879 ($xor).
Removed top 1 bits (of 9) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_6.$verific$xor_22$r1024x9_1024x9.v:40$1879 ($xor).
Removed top 1 bits (of 9) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_7.$verific$xor_22$r1024x9_1024x9.v:40$1879 ($xor).
Removed top 1 bits (of 9) from wire top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$n175$843.
Removed top 1 bits (of 9) from wire top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$n223$846.
Removed top 1 bits (of 2) from wire top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$n288$851.
Removed top 1 bits (of 9) from wire top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$n364$862.
Removed top 1 bits (of 9) from wire top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$n412$865.
Removed top 2 bits (of 3) from wire top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$n214$1056.
Removed top 1 bits (of 17) from wire top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$n432$1070.
Removed top 13 bits (of 22) from wire top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_0.$verific$n37$1865.
Removed top 13 bits (of 22) from wire top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_1.$verific$n37$1865.
Removed top 13 bits (of 22) from wire top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_2.$verific$n37$1865.
Removed top 13 bits (of 22) from wire top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_3.$verific$n37$1865.
Removed top 13 bits (of 22) from wire top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_4.$verific$n37$1865.
Removed top 13 bits (of 22) from wire top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_5.$verific$n37$1865.
Removed top 13 bits (of 22) from wire top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_6.$verific$n37$1865.
Removed top 13 bits (of 22) from wire top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_7.$verific$n37$1865.
Removed top 1 bits (of 4) from wire top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n247$1624.
Removed top 1 bits (of 4) from wire top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n559$1665.

yosys> peepopt

3.48. Executing PEEPOPT pass (run peephole optimizers).

yosys> opt_clean

3.49. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 22 unused wires.
<suppressed ~1 debug messages>

yosys> demuxmap

3.50. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> stat

3.51. Printing statistics.

=== top ===

   Number of wires:                601
   Number of wire bits:           2095
   Number of public wires:         343
   Number of public wire bits:    1384
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                410
     $add                            3
     $adff                          25
     $adffe                         26
     $and                           44
     $bmux                          28
     $dff                           16
     $dffe                          12
     $eq                            64
     $logic_not                     14
     $mux                          102
     $ne                             4
     $not                           16
     $or                            11
     $pmux                          16
     $reduce_and                     3
     $reduce_bool                    1
     $reduce_or                     12
     $sub                            5
     $xor                            8


yosys> wreduce t:$mul

3.52. Executing WREDUCE pass (reducing word size of cells).

yosys> rs_dsp_macc

3.53. Executing RS_DSP_MACC pass.

yosys> techmap -map +/mul2dsp.v -D DSP_A_MAXWIDTH=20 -D DSP_B_MAXWIDTH=18 -D DSP_A_MINWIDTH=11 -D DSP_B_MINWIDTH=10 -D DSP_NAME=$__RS_MUL20X18

3.54. Executing TECHMAP pass (map to technology primitives).

3.54.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/mul2dsp.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

3.54.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

yosys> chtype -set $mul t:$__soft_mul

yosys> techmap -map +/mul2dsp.v -D DSP_A_MAXWIDTH=10 -D DSP_B_MAXWIDTH=9 -D DSP_A_MINWIDTH=4 -D DSP_B_MINWIDTH=4 -D DSP_NAME=$__RS_MUL10X9

3.55. Executing TECHMAP pass (map to technology primitives).

3.55.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/mul2dsp.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

3.55.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

yosys> chtype -set $mul t:$__soft_mul

yosys> techmap -map +/rapidsilicon/genesis/dsp_map.v -D USE_DSP_CFG_PARAMS=0

3.56. Executing TECHMAP pass (map to technology primitives).

3.56.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_map.v' to AST representation.
Generating RTLIL representation for module `\$__RS_MUL20X18'.
Generating RTLIL representation for module `\$__RS_MUL10X9'.
Successfully finished Verilog frontend.

3.56.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

yosys> rs_dsp_simd

3.57. Executing RS_DSP_SIMD pass.

yosys> techmap -map +/rapidsilicon/genesis/dsp_final_map.v

3.58. Executing TECHMAP pass (map to technology primitives).

3.58.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_final_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_final_map.v' to AST representation.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_params'.
Successfully finished Verilog frontend.

3.58.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~6 debug messages>

yosys> rs_dsp_io_regs

3.59. Executing RS_DSP_IO_REGS pass.

yosys> alumacc

3.60. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module top:
  creating $macc model for $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_149$IR_Emitter_Carrier_Generator.v:438$968 ($sub).
  creating $macc model for $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_164$IR_Emitter_Carrier_Generator.v:466$981 ($sub).
  creating $macc model for $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_56$IR_Emitter_Carrier_Generator.v:236$911 ($sub).
  creating $macc model for $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_71$IR_Emitter_Carrier_Generator.v:264$924 ($sub).
  creating $macc model for $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$add_173$IR_Emitter_Modulator.v:478$1152 ($add).
  creating $macc model for $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$sub_185$IR_Emitter_Modulator.v:508$1164 ($sub).
  creating $macc model for $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$add_25$i2cSlaveSerialInterface.v:245$1721 ($add).
  creating $macc model for $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$add_48$i2cSlaveSerialInterface.v:280$1737 ($add).
  creating $alu model for $macc $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$add_48$i2cSlaveSerialInterface.v:280$1737.
  creating $alu model for $macc $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$add_25$i2cSlaveSerialInterface.v:245$1721.
  creating $alu model for $macc $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$sub_185$IR_Emitter_Modulator.v:508$1164.
  creating $alu model for $macc $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$add_173$IR_Emitter_Modulator.v:478$1152.
  creating $alu model for $macc $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_71$IR_Emitter_Carrier_Generator.v:264$924.
  creating $alu model for $macc $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_56$IR_Emitter_Carrier_Generator.v:236$911.
  creating $alu model for $macc $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_164$IR_Emitter_Carrier_Generator.v:466$981.
  creating $alu model for $macc $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_149$IR_Emitter_Carrier_Generator.v:438$968.
  creating $alu cell for $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_149$IR_Emitter_Carrier_Generator.v:438$968: $auto$alumacc.cc:485:replace_alu$2013
  creating $alu cell for $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_164$IR_Emitter_Carrier_Generator.v:466$981: $auto$alumacc.cc:485:replace_alu$2016
  creating $alu cell for $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_56$IR_Emitter_Carrier_Generator.v:236$911: $auto$alumacc.cc:485:replace_alu$2019
  creating $alu cell for $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_71$IR_Emitter_Carrier_Generator.v:264$924: $auto$alumacc.cc:485:replace_alu$2022
  creating $alu cell for $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$add_173$IR_Emitter_Modulator.v:478$1152: $auto$alumacc.cc:485:replace_alu$2025
  creating $alu cell for $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$sub_185$IR_Emitter_Modulator.v:508$1164: $auto$alumacc.cc:485:replace_alu$2028
  creating $alu cell for $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$add_25$i2cSlaveSerialInterface.v:245$1721: $auto$alumacc.cc:485:replace_alu$2031
  creating $alu cell for $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$add_48$i2cSlaveSerialInterface.v:280$1737: $auto$alumacc.cc:485:replace_alu$2034
  created 8 $alu and 0 $macc cells.

yosys> opt_expr

3.61. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge -nomux

3.62. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.63. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~101 debug messages>

yosys> opt_reduce

3.64. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.65. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

yosys> opt_share

3.66. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.67. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.68. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.69. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_muxtree

3.70. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~99 debug messages>

yosys> opt_reduce

3.71. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.72. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_share

3.73. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.74. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.75. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr

3.76. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
MAX OPT ITERATION = 2

yosys> stat

3.77. Printing statistics.

=== top ===

   Number of wires:                615
   Number of wire bits:           2237
   Number of public wires:         343
   Number of public wire bits:    1384
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                408
     $adff                          25
     $adffe                         26
     $alu                            8
     $and                           44
     $bmux                          28
     $dff                           16
     $dffe                          12
     $eq                            64
     $logic_not                     14
     $mux                          100
     $ne                             4
     $not                           16
     $or                            11
     $pmux                          16
     $reduce_and                     3
     $reduce_bool                    1
     $reduce_or                     12
     $xor                            8


yosys> memory -nomap

3.78. Executing MEMORY pass.

yosys> opt_mem

3.78.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.78.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.78.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.78.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.78.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `$auto$memory_bmux2rom.cc:63:execute$2037'[0] in module `\top': merging output FF to cell.

yosys> opt_clean

3.78.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1 unused cells and 2 unused wires.
<suppressed ~3 debug messages>

yosys> memory_share

3.78.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.78.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.78.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> memory_collect

3.78.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.79. Printing statistics.

=== top ===

   Number of wires:                615
   Number of wire bits:           2237
   Number of public wires:         342
   Number of public wire bits:    1383
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                408
     $adff                          24
     $adffe                         26
     $alu                            8
     $and                           44
     $bmux                          27
     $dff                           16
     $dffe                          12
     $eq                            64
     $logic_not                     15
     $mem_v2                         1
     $mux                          100
     $ne                             4
     $not                           16
     $or                            11
     $pmux                          16
     $reduce_and                     3
     $reduce_bool                    1
     $reduce_or                     12
     $xor                            8


yosys> muxpack

3.80. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~82 debug messages>

yosys> opt_clean

3.81. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> memory_bram -rules +/rapidsilicon/genesis/brams.txt

3.82. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).
Processing top.$auto$memory_bmux2rom.cc:63:execute$2037:
  Properties: ports=1 bits=8 rports=1 wports=0 dbits=1 abits=3 words=8
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 1):
    Bram geometry: abits=10 dbits=36 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=1016 dwaste=35 bwaste=36856 waste=36856 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 1) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 2):
    Bram geometry: abits=11 dbits=18 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=2040 dwaste=17 bwaste=36856 waste=36856 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 2) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 3):
    Bram geometry: abits=12 dbits=9 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=4088 dwaste=8 bwaste=36856 waste=36856 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 3) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 4):
    Bram geometry: abits=13 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=8184 dwaste=3 bwaste=32760 waste=32760 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 4) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 5):
    Bram geometry: abits=14 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=16376 dwaste=1 bwaste=32760 waste=32760 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 5) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 6):
    Bram geometry: abits=15 dbits=1 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=32760 dwaste=0 bwaste=32760 waste=32760 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 6) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 1):
    Bram geometry: abits=10 dbits=36 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=1016 dwaste=35 bwaste=36856 waste=36856 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 1) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 2):
    Bram geometry: abits=11 dbits=18 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=2040 dwaste=17 bwaste=36856 waste=36856 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 2) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 3):
    Bram geometry: abits=12 dbits=9 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=4088 dwaste=8 bwaste=36856 waste=36856 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 3) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 4):
    Bram geometry: abits=13 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=8184 dwaste=3 bwaste=32760 waste=32760 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 4) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 5):
    Bram geometry: abits=14 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=16376 dwaste=1 bwaste=32760 waste=32760 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 5) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 6):
    Bram geometry: abits=15 dbits=1 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=32760 dwaste=0 bwaste=32760 waste=32760 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 6) rejected: requirement 'min bits 128' not met.
  No acceptable bram resources found.

yosys> techmap -map +/rapidsilicon/genesis/brams_map.v

3.83. Executing TECHMAP pass (map to technology primitives).

3.83.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/brams_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_TDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM18_TDP'.
/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/brams_map.v:236: Warning: Range [2:0] select out of bounds on signal `\DOP': Setting 1 MSB bits to undef.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_SDP'.
Successfully finished Verilog frontend.

3.83.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~5 debug messages>

yosys> pmuxtree

3.84. Executing PMUXTREE pass.

yosys> muxpack

3.85. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converting top.$auto$pmuxtree.cc:65:recursive_mux_generator$2206 ... top.$auto$pmuxtree.cc:65:recursive_mux_generator$2208 to a pmux with 2 cases.
Converting top.$auto$pmuxtree.cc:65:recursive_mux_generator$2084 ... top.$auto$pmuxtree.cc:65:recursive_mux_generator$2086 to a pmux with 2 cases.
Converted 4 (p)mux cells into 2 pmux cells.
<suppressed ~121 debug messages>

yosys> memory_map

3.86. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory $auto$memory_bmux2rom.cc:63:execute$2037 in module \top:
  created 8 $dff cells and 0 static cells of width 1.
Extracted data FF from read port 0 of top.$auto$memory_bmux2rom.cc:63:execute$2037: $$auto$memory_bmux2rom.cc:63:execute$2037$rdreg[0]
  read interface: 1 $dff and 7 $mux cells.
  write interface: 0 write mux blocks.

yosys> stat

3.87. Printing statistics.

=== top ===

   Number of wires:                737
   Number of wire bits:           2622
   Number of public wires:         342
   Number of public wire bits:    1383
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                496
     $adff                          25
     $adffe                         26
     $alu                            8
     $and                           44
     $bmux                          27
     $dff                           24
     $dffe                          12
     $eq                            64
     $logic_not                     15
     $mux                          152
     $ne                             4
     $not                           32
     $or                            18
     $pmux                           2
     $reduce_and                     3
     $reduce_bool                    1
     $reduce_or                     31
     $xor                            8


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.88. Executing TECHMAP pass (map to technology primitives).

3.88.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.88.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.88.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $bmux.
Using template $paramod$3ef7d3dd227da7627a99c5e5a6a4deb817573e39\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$403a3c2fa431a154c52a6a5429d7a6260b5d144f\_90_alu for cells of type $alu.
Using template $paramod$521ce43182eecb9f60c72393a788160d2c356bf5\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod$fc16b9f758000d363d24f130038bd99b46b4fa1b\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $adff.
Using template $paramod$a1665ef28c749ebcdbe9aecd466e644647b56463\_90_alu for cells of type $alu.
Using template $paramod$215440792383f7884e57d9c95f84e9552d0bf4ac\_90_alu for cells of type $alu.
Using template $paramod$c3cd1564c35d873179656addd6052d7ea8b6d991\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001101 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000011 for cells of type $lcu.
No more expansions possible.
<suppressed ~1890 debug messages>

yosys> stat

3.89. Printing statistics.

=== top ===

   Number of wires:               1633
   Number of wire bits:          14727
   Number of public wires:         342
   Number of public wire bits:    1383
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3624
     $_AND_                        305
     $_DFFE_PN0P_                  135
     $_DFFE_PN1P_                    9
     $_DFFE_PN_                      8
     $_DFFE_PP_                     75
     $_DFF_PN0_                     61
     $_DFF_PP0_                      1
     $_DFF_P_                       66
     $_MUX_                       1611
     $_NOT_                        183
     $_OR_                         578
     $_XOR_                        592


yosys> opt_expr

3.90. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1335 debug messages>

yosys> opt_merge -nomux

3.91. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~1053 debug messages>
Removed a total of 351 cells.

yosys> opt_muxtree

3.92. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.93. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.94. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_share

3.95. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.96. Executing OPT_DFF pass (perform DFF optimizations).
Handling const CLK on $auto$ff.cc:262:slice$4028 ($_DFF_P_) from module top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4073 ($_DFF_P_) from module top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4074 ($_DFF_P_) from module top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4075 ($_DFF_P_) from module top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4076 ($_DFF_P_) from module top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4077 ($_DFF_P_) from module top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4078 ($_DFF_P_) from module top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4079 ($_DFF_P_) from module top (removing D path).

yosys> opt_clean

3.97. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 85 unused cells and 802 unused wires.
<suppressed ~86 debug messages>

yosys> opt_expr

3.98. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~6 debug messages>

yosys> opt_muxtree

3.99. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.100. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.101. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_share

3.102. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.103. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.104. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 6 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.105. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
MAX OPT ITERATION = 2

yosys> opt_expr -full

3.106. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~225 debug messages>

yosys> techmap -map +/techmap.v

3.107. Executing TECHMAP pass (map to technology primitives).

3.107.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.107.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> opt_expr

3.108. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge -nomux

3.109. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_muxtree

3.110. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.111. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.112. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff -nosdff -nodffe -sat

3.113. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.114. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 11 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.115. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
MAX OPT ITERATION = 1

yosys> abc -dff

3.116. Executing ABC pass (technology mapping using ABC).

3.116.1. Summary of detected clock domains:
  35 cells in clk=\Clock_i, en=\u_IR_Emitter_Interface.u_IR_Emitter_SRAM_6.WD_SEL, arst={ }, srst={ }
  26 cells in clk=\Clock_i, en=\u_IR_Emitter_Interface.u_IR_Emitter_SRAM_5.WD_SEL, arst={ }, srst={ }
  26 cells in clk=\Clock_i, en=\u_IR_Emitter_Interface.u_IR_Emitter_SRAM_4.WD_SEL, arst={ }, srst={ }
  27 cells in clk=\Clock_i, en=\u_IR_Emitter_Interface.u_IR_Emitter_SRAM_3.WD_SEL, arst={ }, srst={ }
  24 cells in clk=\Clock_i, en=\u_IR_Emitter_Interface.u_IR_Emitter_SRAM_2.WD_SEL, arst={ }, srst={ }
  24 cells in clk=\Clock_i, en=\u_IR_Emitter_Interface.u_IR_Emitter_SRAM_1.WD_SEL, arst={ }, srst={ }
  24 cells in clk=\Clock_i, en=\u_IR_Emitter_Interface.u_IR_Emitter_SRAM_0.WD_SEL, arst={ }, srst={ }
  48 cells in clk=\Clock_i, en=\u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Cycle_Len_L_we_dcd, arst=!\Reset_i_N, srst={ }
  48 cells in clk=\Clock_i, en=\u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Duty_Len_L_we_dcd, arst=!\Reset_i_N, srst={ }
  36 cells in clk=\Clock_i, en=\u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Gpio_Dir_Reg_L_we_dcd, arst=!\Reset_i_N, srst={ }
  12 cells in clk=\Clock_i, en=\u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Gpio_Port_Reg_L_we_dcd, arst=!\Reset_i_N, srst={ }
  3 cells in clk=\Clock_i, en=$auto$opt_dff.cc:194:make_patterns_logic$1971, arst=!\Reset_i_N, srst={ }
  30 cells in clk=\Clock_i, en=\u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemAddr_Reg_L_we_dcd, arst=!\Reset_i_N, srst={ }
  28 cells in clk=\Clock_i, en=\u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Start_L_we_dcd, arst=!\Reset_i_N, srst={ }
  29 cells in clk=\Clock_i, en=\u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Stop_L_we_dcd, arst=!\Reset_i_N, srst={ }
  16 cells in clk=\Clock_i, en=\u_IR_Emitter_Interface.u_IR_Emitter_Registers.control_reg_we_dcd, arst=!\Reset_i_N, srst={ }
  80 cells in clk=\Clock_i, en=$auto$opt_dff.cc:194:make_patterns_logic$1990, arst=!\Reset_i_N, srst={ }
  4 cells in clk=\Clock_i, en=\u_IR_Emitter_Interface.u_IR_Emitter_Modulator.IR_Emitter_Pulse_Modulator_o_ld_upr, arst=!\Reset_i_N, srst={ }
  105 cells in clk=\Clock_i, en=\u_IR_Emitter_Interface.u_IR_Emitter_Modulator.IR_Emitter_Pulse_Modulator_o_ld_lwr, arst=!\Reset_i_N, srst={ }
  165 cells in clk=\Clock_i, en=$auto$opt_dff.cc:194:make_patterns_logic$1981, arst=!\Reset_i_N, srst={ }
  71 cells in clk=\Clock_i, en=$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$n63$771, arst=!\Reset_i_N, srst={ }
  73 cells in clk=\Clock_i, en=$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$n99$780, arst=!\Reset_i_N, srst={ }
  365 cells in clk=\Clock_i, en={ }, arst=!\Reset_i_N, srst={ }
  17 cells in clk=\Clock_i, en=\u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Cycle_Len_H_we_dcd, arst=!\Reset_i_N, srst={ }
  16 cells in clk=\Clock_i, en=\u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Duty_Len_H_we_dcd, arst=!\Reset_i_N, srst={ }
  14 cells in clk=\Clock_i, en=\u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Start_H_we_dcd, arst=!\Reset_i_N, srst={ }
  9 cells in clk=\Clock_i, en=\u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Stop_H_we_dcd, arst=!\Reset_i_N, srst={ }
  13 cells in clk=\Clock_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1946, arst={ }, srst={ }
  5 cells in clk=\Clock_i, en=$auto$opt_dff.cc:194:make_patterns_logic$1949, arst={ }, srst={ }
  24 cells in clk=\Clock_i, en=\u_IR_Emitter_Interface.u_IR_Emitter_SRAM_7.WD_SEL, arst={ }, srst={ }
  5 cells in clk=\Clock_i, en=$auto$opt_dff.cc:194:make_patterns_logic$1952, arst={ }, srst={ }
  770 cells in clk=\Clock_i, en={ }, arst={ }, srst={ }
  42 cells in clk=\Clock_i, en=!\u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.ResetIn, arst={ }, srst={ }

3.116.2. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by \u_IR_Emitter_Interface.u_IR_Emitter_SRAM_6.WD_SEL
Extracted 35 gates and 59 wires to a netlist network with 24 inputs and 20 outputs.

3.116.2.1. Executing ABC.

3.116.3. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by \u_IR_Emitter_Interface.u_IR_Emitter_SRAM_5.WD_SEL
Extracted 26 gates and 42 wires to a netlist network with 16 inputs and 11 outputs.

3.116.3.1. Executing ABC.

3.116.4. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by \u_IR_Emitter_Interface.u_IR_Emitter_SRAM_4.WD_SEL
Extracted 26 gates and 42 wires to a netlist network with 16 inputs and 11 outputs.

3.116.4.1. Executing ABC.

3.116.5. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by \u_IR_Emitter_Interface.u_IR_Emitter_SRAM_3.WD_SEL
Extracted 27 gates and 42 wires to a netlist network with 15 inputs and 13 outputs.

3.116.5.1. Executing ABC.

3.116.6. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by \u_IR_Emitter_Interface.u_IR_Emitter_SRAM_2.WD_SEL
Extracted 24 gates and 38 wires to a netlist network with 14 inputs and 10 outputs.

3.116.6.1. Executing ABC.

3.116.7. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by \u_IR_Emitter_Interface.u_IR_Emitter_SRAM_1.WD_SEL
Extracted 24 gates and 38 wires to a netlist network with 14 inputs and 10 outputs.

3.116.7.1. Executing ABC.

3.116.8. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by \u_IR_Emitter_Interface.u_IR_Emitter_SRAM_0.WD_SEL
Extracted 24 gates and 38 wires to a netlist network with 14 inputs and 10 outputs.

3.116.8.1. Executing ABC.

3.116.9. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Cycle_Len_L_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 48 gates and 82 wires to a netlist network with 33 inputs and 25 outputs.

3.116.9.1. Executing ABC.

3.116.10. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Duty_Len_L_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 48 gates and 84 wires to a netlist network with 35 inputs and 23 outputs.

3.116.10.1. Executing ABC.

3.116.11. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Gpio_Dir_Reg_L_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 36 gates and 66 wires to a netlist network with 29 inputs and 20 outputs.

3.116.11.1. Executing ABC.

3.116.12. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Gpio_Port_Reg_L_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 12 gates and 24 wires to a netlist network with 12 inputs and 11 outputs.

3.116.12.1. Executing ABC.

3.116.13. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$1971, asynchronously reset by !\Reset_i_N
Extracted 3 gates and 7 wires to a netlist network with 3 inputs and 2 outputs.

3.116.13.1. Executing ABC.

3.116.14. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemAddr_Reg_L_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 30 gates and 50 wires to a netlist network with 19 inputs and 20 outputs.

3.116.14.1. Executing ABC.

3.116.15. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Start_L_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 28 gates and 50 wires to a netlist network with 21 inputs and 18 outputs.

3.116.15.1. Executing ABC.

3.116.16. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Stop_L_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 29 gates and 56 wires to a netlist network with 26 inputs and 19 outputs.

3.116.16.1. Executing ABC.

3.116.17. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by \u_IR_Emitter_Interface.u_IR_Emitter_Registers.control_reg_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 16 gates and 30 wires to a netlist network with 14 inputs and 9 outputs.

3.116.17.1. Executing ABC.

3.116.18. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$1990, asynchronously reset by !\Reset_i_N
Extracted 80 gates and 100 wires to a netlist network with 20 inputs and 29 outputs.

3.116.18.1. Executing ABC.

3.116.19. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by \u_IR_Emitter_Interface.u_IR_Emitter_Modulator.IR_Emitter_Pulse_Modulator_o_ld_upr, asynchronously reset by !\Reset_i_N
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 3 outputs.

3.116.19.1. Executing ABC.

3.116.20. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by \u_IR_Emitter_Interface.u_IR_Emitter_Modulator.IR_Emitter_Pulse_Modulator_o_ld_lwr, asynchronously reset by !\Reset_i_N
Extracted 105 gates and 199 wires to a netlist network with 93 inputs and 22 outputs.

3.116.20.1. Executing ABC.

3.116.21. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$1981, asynchronously reset by !\Reset_i_N
Extracted 165 gates and 190 wires to a netlist network with 24 inputs and 2 outputs.

3.116.21.1. Executing ABC.

3.116.22. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$n63$771, asynchronously reset by !\Reset_i_N
Extracted 71 gates and 85 wires to a netlist network with 13 inputs and 1 outputs.

3.116.22.1. Executing ABC.

3.116.23. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$n99$780, asynchronously reset by !\Reset_i_N
Extracted 73 gates and 90 wires to a netlist network with 16 inputs and 3 outputs.

3.116.23.1. Executing ABC.

3.116.24. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, asynchronously reset by !\Reset_i_N
Extracted 365 gates and 488 wires to a netlist network with 121 inputs and 76 outputs.

3.116.24.1. Executing ABC.

3.116.25. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Cycle_Len_H_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 17 gates and 30 wires to a netlist network with 13 inputs and 15 outputs.

3.116.25.1. Executing ABC.

3.116.26. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Duty_Len_H_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 16 gates and 28 wires to a netlist network with 12 inputs and 14 outputs.

3.116.26.1. Executing ABC.

3.116.27. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Start_H_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 14 gates and 25 wires to a netlist network with 10 inputs and 12 outputs.

3.116.27.1. Executing ABC.

3.116.28. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Stop_H_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 9 gates and 18 wires to a netlist network with 9 inputs and 7 outputs.

3.116.28.1. Executing ABC.

3.116.29. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1946
Extracted 13 gates and 24 wires to a netlist network with 9 inputs and 3 outputs.

3.116.29.1. Executing ABC.

3.116.30. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$1949
Extracted 5 gates and 9 wires to a netlist network with 4 inputs and 3 outputs.

3.116.30.1. Executing ABC.

3.116.31. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by \u_IR_Emitter_Interface.u_IR_Emitter_SRAM_7.WD_SEL
Extracted 24 gates and 39 wires to a netlist network with 15 inputs and 11 outputs.

3.116.31.1. Executing ABC.

3.116.32. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$1952
Extracted 5 gates and 10 wires to a netlist network with 5 inputs and 5 outputs.

3.116.32.1. Executing ABC.

3.116.33. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i
Extracted 770 gates and 823 wires to a netlist network with 51 inputs and 51 outputs.

3.116.33.1. Executing ABC.

3.116.34. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by !$abc$8785$u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.ResetIn
Extracted 42 gates and 62 wires to a netlist network with 20 inputs and 33 outputs.

3.116.34.1. Executing ABC.

yosys> abc -dff

3.117. Executing ABC pass (technology mapping using ABC).

3.117.1. Summary of detected clock domains:
  3 cells in clk=\Clock_i, en=$abc$8290$lo26, arst=!\Reset_i_N, srst={ }
  40 cells in clk=\Clock_i, en=$abc$7581$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Cycle_Len_L_we_dcd, arst=!\Reset_i_N, srst={ }
  21 cells in clk=\Clock_i, en=$abc$7550$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_0.WD_SEL, arst={ }, srst={ }
  102 cells in clk=\Clock_i, en=$abc$8290$lo00, arst=!\Reset_i_N, srst={ }
  27 cells in clk=\Clock_i, en=$abc$8617$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Cycle_Len_H_we_dcd, arst=!\Reset_i_N, srst={ }
  31 cells in clk=\Clock_i, en=$abc$7346$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_6.WD_SEL, arst={ }, srst={ }
  12 cells in clk=\Clock_i, en=$abc$7870$u_IR_Emitter_Interface.u_IR_Emitter_Registers.control_reg_we_dcd, arst=!\Reset_i_N, srst={ }
  41 cells in clk=\Clock_i, en=$abc$8290$lo16, arst=!\Reset_i_N, srst={ }
  41 cells in clk=\Clock_i, en=$abc$8242$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$n99$780, arst=!\Reset_i_N, srst={ }
  5 cells in clk=\Clock_i, en=$abc$8738$auto$opt_dff.cc:194:make_patterns_logic$1949, arst={ }, srst={ }
  21 cells in clk=\Clock_i, en=$abc$7519$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_1.WD_SEL, arst={ }, srst={ }
  12 cells in clk=\Clock_i, en=$abc$8725$auto$opt_dff.cc:219:make_patterns_logic$1946, arst={ }, srst={ }
  5 cells in clk=\Clock_i, en=$abc$8777$auto$opt_dff.cc:194:make_patterns_logic$1952, arst={ }, srst={ }
  25 cells in clk=\Clock_i, en=$abc$7421$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_4.WD_SEL, arst={ }, srst={ }
  17 cells in clk=\Clock_i, en=$abc$8706$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Stop_H_we_dcd, arst=!\Reset_i_N, srst={ }
  17 cells in clk=\Clock_i, en=$abc$7763$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemAddr_Reg_L_we_dcd, arst=!\Reset_i_N, srst={ }
  2 cells in clk=\Clock_i, en=$abc$7758$auto$opt_dff.cc:194:make_patterns_logic$1971, arst=!\Reset_i_N, srst={ }
  25 cells in clk=\Clock_i, en=$abc$7730$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Gpio_Port_Reg_L_we_dcd, arst=!\Reset_i_N, srst={ }
  21 cells in clk=\Clock_i, en=$abc$7797$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Start_L_we_dcd, arst=!\Reset_i_N, srst={ }
  24 cells in clk=\Clock_i, en=$abc$7488$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_2.WD_SEL, arst={ }, srst={ }
  23 cells in clk=\Clock_i, en=$abc$7677$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Gpio_Dir_Reg_L_we_dcd, arst=!\Reset_i_N, srst={ }
  25 cells in clk=\Clock_i, en=$abc$7454$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_3.WD_SEL, arst={ }, srst={ }
  28 cells in clk=\Clock_i, en=$abc$7630$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Duty_Len_L_we_dcd, arst=!\Reset_i_N, srst={ }
  15 cells in clk=\Clock_i, en=$abc$7833$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Stop_L_we_dcd, arst=!\Reset_i_N, srst={ }
  107 cells in clk=\Clock_i, en=$abc$8093$auto$opt_dff.cc:194:make_patterns_logic$1981, arst=!\Reset_i_N, srst={ }
  79 cells in clk=\Clock_i, en=$abc$7894$auto$opt_dff.cc:194:make_patterns_logic$1990, arst=!\Reset_i_N, srst={ }
  19 cells in clk=\Clock_i, en=$abc$8682$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Start_H_we_dcd, arst=!\Reset_i_N, srst={ }
  25 cells in clk=\Clock_i, en=$abc$8650$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Duty_Len_H_we_dcd, arst=!\Reset_i_N, srst={ }
  304 cells in clk=\Clock_i, en={ }, arst=!\Reset_i_N, srst={ }
  24 cells in clk=\Clock_i, en=$abc$8745$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_7.WD_SEL, arst={ }, srst={ }
  26 cells in clk=\Clock_i, en=$abc$7388$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_5.WD_SEL, arst={ }, srst={ }
  484 cells in clk=\Clock_i, en={ }, arst={ }, srst={ }
  91 cells in clk=\Clock_i, en=!$abc$8785$u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.ResetIn, arst={ }, srst={ }

3.117.2. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$8290$lo26, asynchronously reset by !\Reset_i_N
Extracted 3 gates and 5 wires to a netlist network with 2 inputs and 2 outputs.

3.117.2.1. Executing ABC.

3.117.3. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$7581$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Cycle_Len_L_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 40 gates and 74 wires to a netlist network with 34 inputs and 24 outputs.

3.117.3.1. Executing ABC.

3.117.4. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$7550$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_0.WD_SEL
Extracted 21 gates and 35 wires to a netlist network with 14 inputs and 11 outputs.

3.117.4.1. Executing ABC.

3.117.5. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$8290$lo00, asynchronously reset by !\Reset_i_N
Extracted 102 gates and 195 wires to a netlist network with 93 inputs and 30 outputs.

3.117.5.1. Executing ABC.

3.117.6. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$8617$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Cycle_Len_H_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 27 gates and 53 wires to a netlist network with 26 inputs and 21 outputs.

3.117.6.1. Executing ABC.

3.117.7. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$7346$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_6.WD_SEL
Extracted 31 gates and 54 wires to a netlist network with 23 inputs and 12 outputs.

3.117.7.1. Executing ABC.

3.117.8. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$7870$u_IR_Emitter_Interface.u_IR_Emitter_Registers.control_reg_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 12 gates and 24 wires to a netlist network with 12 inputs and 9 outputs.

3.117.8.1. Executing ABC.

3.117.9. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$8290$lo16, asynchronously reset by !\Reset_i_N
Extracted 41 gates and 54 wires to a netlist network with 13 inputs and 7 outputs.

3.117.9.1. Executing ABC.

3.117.10. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$8242$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$n99$780, asynchronously reset by !\Reset_i_N
Extracted 41 gates and 55 wires to a netlist network with 14 inputs and 7 outputs.

3.117.10.1. Executing ABC.

3.117.11. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$8738$auto$opt_dff.cc:194:make_patterns_logic$1949
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 5 outputs.

3.117.11.1. Executing ABC.

3.117.12. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$7519$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_1.WD_SEL
Extracted 21 gates and 35 wires to a netlist network with 14 inputs and 11 outputs.

3.117.12.1. Executing ABC.

3.117.13. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$8725$auto$opt_dff.cc:219:make_patterns_logic$1946
Extracted 12 gates and 21 wires to a netlist network with 9 inputs and 3 outputs.

3.117.13.1. Executing ABC.

3.117.14. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$8777$auto$opt_dff.cc:194:make_patterns_logic$1952
Extracted 5 gates and 10 wires to a netlist network with 5 inputs and 5 outputs.

3.117.14.1. Executing ABC.

3.117.15. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$7421$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_4.WD_SEL
Extracted 25 gates and 42 wires to a netlist network with 17 inputs and 12 outputs.

3.117.15.1. Executing ABC.

3.117.16. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$8706$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Stop_H_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 17 gates and 34 wires to a netlist network with 17 inputs and 14 outputs.

3.117.16.1. Executing ABC.

3.117.17. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$7763$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemAddr_Reg_L_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 17 gates and 25 wires to a netlist network with 8 inputs and 17 outputs.

3.117.17.1. Executing ABC.

3.117.18. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$7758$auto$opt_dff.cc:194:make_patterns_logic$1971, asynchronously reset by !\Reset_i_N
Extracted 2 gates and 5 wires to a netlist network with 3 inputs and 2 outputs.

3.117.18.1. Executing ABC.

3.117.19. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$7730$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Gpio_Port_Reg_L_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 25 gates and 52 wires to a netlist network with 27 inputs and 12 outputs.

3.117.19.1. Executing ABC.

3.117.20. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$7797$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Start_L_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 21 gates and 36 wires to a netlist network with 15 inputs and 18 outputs.

3.117.20.1. Executing ABC.

3.117.21. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$7488$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_2.WD_SEL
Extracted 24 gates and 40 wires to a netlist network with 16 inputs and 14 outputs.

3.117.21.1. Executing ABC.

3.117.22. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$7677$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Gpio_Dir_Reg_L_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 23 gates and 37 wires to a netlist network with 14 inputs and 18 outputs.

3.117.22.1. Executing ABC.

3.117.23. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$7454$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_3.WD_SEL
Extracted 25 gates and 43 wires to a netlist network with 18 inputs and 13 outputs.

3.117.23.1. Executing ABC.

3.117.24. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$7630$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Duty_Len_L_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 28 gates and 53 wires to a netlist network with 25 inputs and 20 outputs.

3.117.24.1. Executing ABC.

3.117.25. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$7833$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Stop_L_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 15 gates and 28 wires to a netlist network with 13 inputs and 15 outputs.

3.117.25.1. Executing ABC.

3.117.26. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$8093$auto$opt_dff.cc:194:make_patterns_logic$1981, asynchronously reset by !\Reset_i_N
Extracted 107 gates and 138 wires to a netlist network with 31 inputs and 8 outputs.

3.117.26.1. Executing ABC.

3.117.27. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$7894$auto$opt_dff.cc:194:make_patterns_logic$1990, asynchronously reset by !\Reset_i_N
Extracted 79 gates and 110 wires to a netlist network with 31 inputs and 34 outputs.

3.117.27.1. Executing ABC.

3.117.28. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$8682$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Start_H_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 19 gates and 35 wires to a netlist network with 16 inputs and 13 outputs.

3.117.28.1. Executing ABC.

3.117.29. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$8650$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Duty_Len_H_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 25 gates and 49 wires to a netlist network with 24 inputs and 20 outputs.

3.117.29.1. Executing ABC.

3.117.30. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, asynchronously reset by !\Reset_i_N
Extracted 304 gates and 441 wires to a netlist network with 137 inputs and 76 outputs.

3.117.30.1. Executing ABC.

3.117.31. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$8745$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_7.WD_SEL
Extracted 24 gates and 40 wires to a netlist network with 16 inputs and 13 outputs.

3.117.31.1. Executing ABC.

3.117.32. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$7388$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_5.WD_SEL
Extracted 26 gates and 44 wires to a netlist network with 18 inputs and 14 outputs.

3.117.32.1. Executing ABC.

3.117.33. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i
Extracted 484 gates and 540 wires to a netlist network with 56 inputs and 77 outputs.

3.117.33.1. Executing ABC.

3.117.34. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by !$abc$8785$u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.ResetIn
Extracted 91 gates and 124 wires to a netlist network with 33 inputs and 28 outputs.

3.117.34.1. Executing ABC.

yosys> abc -dff

3.118. Executing ABC pass (technology mapping using ABC).

3.118.1. Summary of detected clock domains:
  3 cells in clk=\Clock_i, en=$abc$10417$lo17, arst=!\Reset_i_N, srst={ }
  35 cells in clk=\Clock_i, en=$abc$9381$abc$7581$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Cycle_Len_L_we_dcd, arst=!\Reset_i_N, srst={ }
  26 cells in clk=\Clock_i, en=$abc$9429$abc$7550$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_0.WD_SEL, arst={ }, srst={ }
  28 cells in clk=\Clock_i, en=$abc$9564$abc$8617$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Cycle_Len_H_we_dcd, arst=!\Reset_i_N, srst={ }
  14 cells in clk=\Clock_i, en=$abc$9636$abc$7870$u_IR_Emitter_Interface.u_IR_Emitter_Registers.control_reg_we_dcd, arst=!\Reset_i_N, srst={ }
  38 cells in clk=\Clock_i, en=$abc$10417$lo27, arst=!\Reset_i_N, srst={ }
  102 cells in clk=\Clock_i, en=$abc$10417$lo37, arst=!\Reset_i_N, srst={ }
  7 cells in clk=\Clock_i, en=$abc$9751$abc$8738$auto$opt_dff.cc:194:make_patterns_logic$1949, arst={ }, srst={ }
  11 cells in clk=\Clock_i, en=$abc$9790$abc$8725$auto$opt_dff.cc:219:make_patterns_logic$1946, arst={ }, srst={ }
  6 cells in clk=\Clock_i, en=$abc$9803$abc$8777$auto$opt_dff.cc:194:make_patterns_logic$1952, arst={ }, srst={ }
  14 cells in clk=\Clock_i, en=$abc$9845$abc$8706$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Stop_H_we_dcd, arst=!\Reset_i_N, srst={ }
  21 cells in clk=\Clock_i, en=$abc$9874$abc$7763$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemAddr_Reg_L_we_dcd, arst=!\Reset_i_N, srst={ }
  23 cells in clk=\Clock_i, en=$abc$9759$abc$7519$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_1.WD_SEL, arst={ }, srst={ }
  3 cells in clk=\Clock_i, en=$abc$9904$abc$7758$auto$opt_dff.cc:194:make_patterns_logic$1971, arst=!\Reset_i_N, srst={ }
  21 cells in clk=\Clock_i, en=$abc$9909$abc$7730$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Gpio_Port_Reg_L_we_dcd, arst=!\Reset_i_N, srst={ }
  25 cells in clk=\Clock_i, en=$abc$9945$abc$7797$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Start_L_we_dcd, arst=!\Reset_i_N, srst={ }
  26 cells in clk=\Clock_i, en=$abc$9981$abc$7488$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_2.WD_SEL, arst={ }, srst={ }
  32 cells in clk=\Clock_i, en=$abc$10015$abc$7677$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Gpio_Dir_Reg_L_we_dcd, arst=!\Reset_i_N, srst={ }
  26 cells in clk=\Clock_i, en=$abc$10084$abc$7630$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Duty_Len_L_we_dcd, arst=!\Reset_i_N, srst={ }
  24 cells in clk=\Clock_i, en=$abc$10050$abc$7454$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_3.WD_SEL, arst={ }, srst={ }
  19 cells in clk=\Clock_i, en=$abc$10127$abc$7833$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Stop_L_we_dcd, arst=!\Reset_i_N, srst={ }
  107 cells in clk=\Clock_i, en=$abc$10159$abc$8093$auto$opt_dff.cc:194:make_patterns_logic$1981, arst=!\Reset_i_N, srst={ }
  27 cells in clk=\Clock_i, en=$abc$9603$abc$7346$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_6.WD_SEL, arst={ }, srst={ }
  78 cells in clk=\Clock_i, en=$abc$10266$abc$7894$auto$opt_dff.cc:194:make_patterns_logic$1990, arst=!\Reset_i_N, srst={ }
  16 cells in clk=\Clock_i, en=$abc$10352$abc$8682$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Start_H_we_dcd, arst=!\Reset_i_N, srst={ }
  24 cells in clk=\Clock_i, en=$abc$9811$abc$7421$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_4.WD_SEL, arst={ }, srst={ }
  27 cells in clk=\Clock_i, en=$abc$10805$abc$7388$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_5.WD_SEL, arst={ }, srst={ }
  17 cells in clk=\Clock_i, en=$abc$10379$abc$8650$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Duty_Len_H_we_dcd, arst=!\Reset_i_N, srst={ }
  453 cells in clk=\Clock_i, en={ }, arst={ }, srst={ }
  327 cells in clk=\Clock_i, en={ }, arst=!\Reset_i_N, srst={ }
  27 cells in clk=\Clock_i, en=$abc$10771$abc$8745$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_7.WD_SEL, arst={ }, srst={ }
  42 cells in clk=\Clock_i, en=$abc$9705$abc$8242$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$n99$780, arst=!\Reset_i_N, srst={ }
  74 cells in clk=\Clock_i, en=!$abc$11310$abc$8785$u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.ResetIn, arst={ }, srst={ }

3.118.2. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$10417$lo17, asynchronously reset by !\Reset_i_N
Extracted 3 gates and 5 wires to a netlist network with 2 inputs and 2 outputs.

3.118.2.1. Executing ABC.

3.118.3. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$9381$abc$7581$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Cycle_Len_L_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 35 gates and 64 wires to a netlist network with 29 inputs and 25 outputs.

3.118.3.1. Executing ABC.

3.118.4. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$9429$abc$7550$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_0.WD_SEL
Extracted 26 gates and 45 wires to a netlist network with 19 inputs and 14 outputs.

3.118.4.1. Executing ABC.

3.118.5. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$9564$abc$8617$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Cycle_Len_H_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 28 gates and 56 wires to a netlist network with 28 inputs and 21 outputs.

3.118.5.1. Executing ABC.

3.118.6. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$9636$abc$7870$u_IR_Emitter_Interface.u_IR_Emitter_Registers.control_reg_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 14 gates and 26 wires to a netlist network with 12 inputs and 9 outputs.

3.118.6.1. Executing ABC.

3.118.7. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$10417$lo27, asynchronously reset by !\Reset_i_N
Extracted 38 gates and 52 wires to a netlist network with 14 inputs and 8 outputs.

3.118.7.1. Executing ABC.

3.118.8. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$10417$lo37, asynchronously reset by !\Reset_i_N
Extracted 102 gates and 195 wires to a netlist network with 93 inputs and 30 outputs.

3.118.8.1. Executing ABC.

3.118.9. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$9751$abc$8738$auto$opt_dff.cc:194:make_patterns_logic$1949
Extracted 7 gates and 14 wires to a netlist network with 7 inputs and 5 outputs.

3.118.9.1. Executing ABC.

3.118.10. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$9790$abc$8725$auto$opt_dff.cc:219:make_patterns_logic$1946
Extracted 11 gates and 20 wires to a netlist network with 9 inputs and 3 outputs.

3.118.10.1. Executing ABC.

3.118.11. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$9803$abc$8777$auto$opt_dff.cc:194:make_patterns_logic$1952
Extracted 6 gates and 11 wires to a netlist network with 5 inputs and 4 outputs.

3.118.11.1. Executing ABC.

3.118.12. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$9845$abc$8706$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Stop_H_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 14 gates and 28 wires to a netlist network with 14 inputs and 12 outputs.

3.118.12.1. Executing ABC.

3.118.13. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$9874$abc$7763$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemAddr_Reg_L_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 21 gates and 32 wires to a netlist network with 11 inputs and 19 outputs.

3.118.13.1. Executing ABC.

3.118.14. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$9759$abc$7519$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_1.WD_SEL
Extracted 23 gates and 38 wires to a netlist network with 15 inputs and 11 outputs.

3.118.14.1. Executing ABC.

3.118.15. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$9904$abc$7758$auto$opt_dff.cc:194:make_patterns_logic$1971, asynchronously reset by !\Reset_i_N
Extracted 3 gates and 6 wires to a netlist network with 3 inputs and 2 outputs.

3.118.15.1. Executing ABC.

3.118.16. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$9909$abc$7730$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Gpio_Port_Reg_L_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 21 gates and 44 wires to a netlist network with 23 inputs and 11 outputs.

3.118.16.1. Executing ABC.

3.118.17. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$9945$abc$7797$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Start_L_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 25 gates and 44 wires to a netlist network with 19 inputs and 18 outputs.

3.118.17.1. Executing ABC.

3.118.18. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$9981$abc$7488$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_2.WD_SEL
Extracted 26 gates and 43 wires to a netlist network with 17 inputs and 12 outputs.

3.118.18.1. Executing ABC.

3.118.19. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$10015$abc$7677$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Gpio_Dir_Reg_L_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 32 gates and 50 wires to a netlist network with 18 inputs and 19 outputs.

3.118.19.1. Executing ABC.

3.118.20. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$10084$abc$7630$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Duty_Len_L_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 26 gates and 48 wires to a netlist network with 22 inputs and 21 outputs.

3.118.20.1. Executing ABC.

3.118.21. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$10050$abc$7454$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_3.WD_SEL
Extracted 24 gates and 40 wires to a netlist network with 16 inputs and 11 outputs.

3.118.21.1. Executing ABC.

3.118.22. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$10127$abc$7833$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Stop_L_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 19 gates and 34 wires to a netlist network with 15 inputs and 17 outputs.

3.118.22.1. Executing ABC.

3.118.23. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$10159$abc$8093$auto$opt_dff.cc:194:make_patterns_logic$1981, asynchronously reset by !\Reset_i_N
Extracted 107 gates and 139 wires to a netlist network with 32 inputs and 9 outputs.

3.118.23.1. Executing ABC.

3.118.24. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$9603$abc$7346$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_6.WD_SEL
Extracted 27 gates and 45 wires to a netlist network with 18 inputs and 10 outputs.

3.118.24.1. Executing ABC.

3.118.25. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$10266$abc$7894$auto$opt_dff.cc:194:make_patterns_logic$1990, asynchronously reset by !\Reset_i_N
Extracted 78 gates and 108 wires to a netlist network with 30 inputs and 34 outputs.

3.118.25.1. Executing ABC.

3.118.26. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$10352$abc$8682$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Start_H_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 16 gates and 30 wires to a netlist network with 14 inputs and 12 outputs.

3.118.26.1. Executing ABC.

3.118.27. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$9811$abc$7421$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_4.WD_SEL
Extracted 24 gates and 40 wires to a netlist network with 16 inputs and 10 outputs.

3.118.27.1. Executing ABC.

3.118.28. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$10805$abc$7388$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_5.WD_SEL
Extracted 27 gates and 44 wires to a netlist network with 17 inputs and 13 outputs.

3.118.28.1. Executing ABC.

3.118.29. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$10379$abc$8650$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Duty_Len_H_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 17 gates and 31 wires to a netlist network with 14 inputs and 17 outputs.

3.118.29.1. Executing ABC.

3.118.30. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i
Extracted 453 gates and 502 wires to a netlist network with 49 inputs and 66 outputs.

3.118.30.1. Executing ABC.

3.118.31. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, asynchronously reset by !\Reset_i_N
Extracted 327 gates and 465 wires to a netlist network with 138 inputs and 68 outputs.

3.118.31.1. Executing ABC.

3.118.32. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$10771$abc$8745$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_7.WD_SEL
Extracted 27 gates and 46 wires to a netlist network with 19 inputs and 13 outputs.

3.118.32.1. Executing ABC.

3.118.33. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$9705$abc$8242$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$n99$780, asynchronously reset by !\Reset_i_N
Extracted 42 gates and 57 wires to a netlist network with 15 inputs and 4 outputs.

3.118.33.1. Executing ABC.

3.118.34. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by !$abc$11310$abc$8785$u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.ResetIn
Extracted 74 gates and 105 wires to a netlist network with 31 inputs and 25 outputs.

3.118.34.1. Executing ABC.

yosys> abc -dff

3.119. Executing ABC pass (technology mapping using ABC).

3.119.1. Summary of detected clock domains:
  3 cells in clk=\Clock_i, en=$abc$12869$lo08, arst=!\Reset_i_N, srst={ }
  32 cells in clk=\Clock_i, en=$abc$11402$abc$9381$abc$7581$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Cycle_Len_L_we_dcd, arst=!\Reset_i_N, srst={ }
  30 cells in clk=\Clock_i, en=$abc$11449$abc$9429$abc$7550$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_0.WD_SEL, arst={ }, srst={ }
  15 cells in clk=\Clock_i, en=$abc$11524$abc$9636$abc$7870$u_IR_Emitter_Interface.u_IR_Emitter_Registers.control_reg_we_dcd, arst=!\Reset_i_N, srst={ }
  43 cells in clk=\Clock_i, en=$abc$12869$lo16, arst=!\Reset_i_N, srst={ }
  24 cells in clk=\Clock_i, en=$abc$11484$abc$9564$abc$8617$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Cycle_Len_H_we_dcd, arst=!\Reset_i_N, srst={ }
  102 cells in clk=\Clock_i, en=$abc$12869$lo30, arst=!\Reset_i_N, srst={ }
  7 cells in clk=\Clock_i, en=$abc$11696$abc$9751$abc$8738$auto$opt_dff.cc:194:make_patterns_logic$1949, arst={ }, srst={ }
  11 cells in clk=\Clock_i, en=$abc$11705$abc$9790$abc$8725$auto$opt_dff.cc:219:make_patterns_logic$1946, arst={ }, srst={ }
  6 cells in clk=\Clock_i, en=$abc$11718$abc$9803$abc$8777$auto$opt_dff.cc:194:make_patterns_logic$1952, arst={ }, srst={ }
  11 cells in clk=\Clock_i, en=$abc$11726$abc$9845$abc$8706$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Stop_H_we_dcd, arst=!\Reset_i_N, srst={ }
  19 cells in clk=\Clock_i, en=$abc$11751$abc$9874$abc$7763$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemAddr_Reg_L_we_dcd, arst=!\Reset_i_N, srst={ }
  2 cells in clk=\Clock_i, en=$abc$11815$abc$9904$abc$7758$auto$opt_dff.cc:194:make_patterns_logic$1971, arst=!\Reset_i_N, srst={ }
  45 cells in clk=\Clock_i, en=$abc$13265$abc$9705$abc$8242$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$n99$780, arst=!\Reset_i_N, srst={ }
  25 cells in clk=\Clock_i, en=$abc$11820$abc$9909$abc$7730$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Gpio_Port_Reg_L_we_dcd, arst=!\Reset_i_N, srst={ }
  27 cells in clk=\Clock_i, en=$abc$11855$abc$9945$abc$7797$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Start_L_we_dcd, arst=!\Reset_i_N, srst={ }
  26 cells in clk=\Clock_i, en=$abc$11891$abc$9981$abc$7488$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_2.WD_SEL, arst={ }, srst={ }
  26 cells in clk=\Clock_i, en=$abc$11924$abc$10015$abc$7677$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Gpio_Dir_Reg_L_we_dcd, arst=!\Reset_i_N, srst={ }
  23 cells in clk=\Clock_i, en=$abc$11783$abc$9759$abc$7519$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_1.WD_SEL, arst={ }, srst={ }
  22 cells in clk=\Clock_i, en=$abc$11960$abc$10084$abc$7630$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Duty_Len_L_we_dcd, arst=!\Reset_i_N, srst={ }
  24 cells in clk=\Clock_i, en=$abc$12002$abc$10050$abc$7454$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_3.WD_SEL, arst={ }, srst={ }
  19 cells in clk=\Clock_i, en=$abc$12034$abc$10127$abc$7833$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Stop_L_we_dcd, arst=!\Reset_i_N, srst={ }
  26 cells in clk=\Clock_i, en=$abc$12173$abc$9603$abc$7346$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_6.WD_SEL, arst={ }, srst={ }
  75 cells in clk=\Clock_i, en=$abc$12205$abc$10266$abc$7894$auto$opt_dff.cc:194:make_patterns_logic$1990, arst=!\Reset_i_N, srst={ }
  13 cells in clk=\Clock_i, en=$abc$12291$abc$10352$abc$8682$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Start_H_we_dcd, arst=!\Reset_i_N, srst={ }
  98 cells in clk=\Clock_i, en=$abc$12069$abc$10159$abc$8093$auto$opt_dff.cc:194:make_patterns_logic$1981, arst=!\Reset_i_N, srst={ }
  26 cells in clk=\Clock_i, en=$abc$12315$abc$9811$abc$7421$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_4.WD_SEL, arst={ }, srst={ }
  22 cells in clk=\Clock_i, en=$abc$12347$abc$10805$abc$7388$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_5.WD_SEL, arst={ }, srst={ }
  14 cells in clk=\Clock_i, en=$abc$12416$abc$10379$abc$8650$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Duty_Len_H_we_dcd, arst=!\Reset_i_N, srst={ }
  453 cells in clk=\Clock_i, en={ }, arst={ }, srst={ }
  346 cells in clk=\Clock_i, en={ }, arst=!\Reset_i_N, srst={ }
  26 cells in clk=\Clock_i, en=$abc$13230$abc$10771$abc$8745$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_7.WD_SEL, arst={ }, srst={ }
  94 cells in clk=\Clock_i, en=!$abc$13312$abc$11310$abc$8785$u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.ResetIn, arst={ }, srst={ }

3.119.2. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$12869$lo08, asynchronously reset by !\Reset_i_N
Extracted 3 gates and 5 wires to a netlist network with 2 inputs and 2 outputs.

3.119.2.1. Executing ABC.

3.119.3. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$11402$abc$9381$abc$7581$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Cycle_Len_L_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 32 gates and 60 wires to a netlist network with 28 inputs and 23 outputs.

3.119.3.1. Executing ABC.

3.119.4. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$11449$abc$9429$abc$7550$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_0.WD_SEL
Extracted 30 gates and 51 wires to a netlist network with 21 inputs and 16 outputs.

3.119.4.1. Executing ABC.

3.119.5. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$11524$abc$9636$abc$7870$u_IR_Emitter_Interface.u_IR_Emitter_Registers.control_reg_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 15 gates and 28 wires to a netlist network with 13 inputs and 10 outputs.

3.119.5.1. Executing ABC.

3.119.6. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$12869$lo16, asynchronously reset by !\Reset_i_N
Extracted 43 gates and 56 wires to a netlist network with 13 inputs and 4 outputs.

3.119.6.1. Executing ABC.

3.119.7. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$11484$abc$9564$abc$8617$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Cycle_Len_H_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 24 gates and 47 wires to a netlist network with 23 inputs and 21 outputs.

3.119.7.1. Executing ABC.

3.119.8. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$12869$lo30, asynchronously reset by !\Reset_i_N
Extracted 102 gates and 195 wires to a netlist network with 93 inputs and 30 outputs.

3.119.8.1. Executing ABC.

3.119.9. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$11696$abc$9751$abc$8738$auto$opt_dff.cc:194:make_patterns_logic$1949
Extracted 7 gates and 14 wires to a netlist network with 7 inputs and 5 outputs.

3.119.9.1. Executing ABC.

3.119.10. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$11705$abc$9790$abc$8725$auto$opt_dff.cc:219:make_patterns_logic$1946
Extracted 11 gates and 20 wires to a netlist network with 9 inputs and 3 outputs.

3.119.10.1. Executing ABC.

3.119.11. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$11718$abc$9803$abc$8777$auto$opt_dff.cc:194:make_patterns_logic$1952
Extracted 6 gates and 11 wires to a netlist network with 5 inputs and 4 outputs.

3.119.11.1. Executing ABC.

3.119.12. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$11726$abc$9845$abc$8706$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Stop_H_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 11 gates and 23 wires to a netlist network with 12 inputs and 10 outputs.

3.119.12.1. Executing ABC.

3.119.13. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$11751$abc$9874$abc$7763$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemAddr_Reg_L_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 19 gates and 29 wires to a netlist network with 10 inputs and 18 outputs.

3.119.13.1. Executing ABC.

3.119.14. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$11815$abc$9904$abc$7758$auto$opt_dff.cc:194:make_patterns_logic$1971, asynchronously reset by !\Reset_i_N
Extracted 2 gates and 5 wires to a netlist network with 3 inputs and 2 outputs.

3.119.14.1. Executing ABC.

3.119.15. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$13265$abc$9705$abc$8242$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$n99$780, asynchronously reset by !\Reset_i_N
Extracted 45 gates and 60 wires to a netlist network with 15 inputs and 2 outputs.

3.119.15.1. Executing ABC.

3.119.16. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$11820$abc$9909$abc$7730$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Gpio_Port_Reg_L_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 25 gates and 52 wires to a netlist network with 27 inputs and 12 outputs.

3.119.16.1. Executing ABC.

3.119.17. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$11855$abc$9945$abc$7797$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Start_L_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 27 gates and 48 wires to a netlist network with 21 inputs and 18 outputs.

3.119.17.1. Executing ABC.

3.119.18. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$11891$abc$9981$abc$7488$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_2.WD_SEL
Extracted 26 gates and 43 wires to a netlist network with 17 inputs and 11 outputs.

3.119.18.1. Executing ABC.

3.119.19. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$11924$abc$10015$abc$7677$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Gpio_Dir_Reg_L_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 26 gates and 40 wires to a netlist network with 14 inputs and 18 outputs.

3.119.19.1. Executing ABC.

3.119.20. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$11783$abc$9759$abc$7519$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_1.WD_SEL
Extracted 23 gates and 39 wires to a netlist network with 16 inputs and 13 outputs.

3.119.20.1. Executing ABC.

3.119.21. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$11960$abc$10084$abc$7630$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Duty_Len_L_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 22 gates and 40 wires to a netlist network with 18 inputs and 19 outputs.

3.119.21.1. Executing ABC.

3.119.22. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$12002$abc$10050$abc$7454$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_3.WD_SEL
Extracted 24 gates and 40 wires to a netlist network with 16 inputs and 11 outputs.

3.119.22.1. Executing ABC.

3.119.23. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$12034$abc$10127$abc$7833$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Stop_L_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 19 gates and 35 wires to a netlist network with 16 inputs and 17 outputs.

3.119.23.1. Executing ABC.

3.119.24. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$12173$abc$9603$abc$7346$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_6.WD_SEL
Extracted 26 gates and 44 wires to a netlist network with 18 inputs and 10 outputs.

3.119.24.1. Executing ABC.

3.119.25. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$12205$abc$10266$abc$7894$auto$opt_dff.cc:194:make_patterns_logic$1990, asynchronously reset by !\Reset_i_N
Extracted 75 gates and 102 wires to a netlist network with 27 inputs and 33 outputs.

3.119.25.1. Executing ABC.

3.119.26. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$12291$abc$10352$abc$8682$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Start_H_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 13 gates and 23 wires to a netlist network with 10 inputs and 11 outputs.

3.119.26.1. Executing ABC.

3.119.27. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$12069$abc$10159$abc$8093$auto$opt_dff.cc:194:make_patterns_logic$1981, asynchronously reset by !\Reset_i_N
Extracted 98 gates and 125 wires to a netlist network with 27 inputs and 4 outputs.

3.119.27.1. Executing ABC.

3.119.28. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$12315$abc$9811$abc$7421$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_4.WD_SEL
Extracted 26 gates and 44 wires to a netlist network with 18 inputs and 13 outputs.

3.119.28.1. Executing ABC.

3.119.29. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$12347$abc$10805$abc$7388$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_5.WD_SEL
Extracted 22 gates and 37 wires to a netlist network with 15 inputs and 11 outputs.

3.119.29.1. Executing ABC.

3.119.30. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$12416$abc$10379$abc$8650$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Duty_Len_H_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 14 gates and 23 wires to a netlist network with 9 inputs and 14 outputs.

3.119.30.1. Executing ABC.

3.119.31. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i
Extracted 453 gates and 511 wires to a netlist network with 58 inputs and 79 outputs.

3.119.31.1. Executing ABC.

3.119.32. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, asynchronously reset by !\Reset_i_N
Extracted 346 gates and 492 wires to a netlist network with 146 inputs and 72 outputs.

3.119.32.1. Executing ABC.

3.119.33. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$13230$abc$10771$abc$8745$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_7.WD_SEL
Extracted 26 gates and 44 wires to a netlist network with 18 inputs and 10 outputs.

3.119.33.1. Executing ABC.

3.119.34. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by !$abc$13312$abc$11310$abc$8785$u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.ResetIn
Extracted 94 gates and 125 wires to a netlist network with 31 inputs and 26 outputs.

3.119.34.1. Executing ABC.

yosys> opt_ffinv

3.120. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 2 inverters.

yosys> opt_expr

3.121. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~23 debug messages>

yosys> opt_merge -nomux

3.122. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~159 debug messages>
Removed a total of 53 cells.

yosys> opt_muxtree

3.123. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.124. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.125. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_share

3.126. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.127. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.128. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1 unused cells and 10338 unused wires.
<suppressed ~125 debug messages>

yosys> opt_expr

3.129. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_muxtree

3.130. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.131. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.132. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_share

3.133. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.134. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.135. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr

3.136. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
MAX OPT ITERATION = 2

yosys> bmuxmap

3.137. Executing BMUXMAP pass.

yosys> demuxmap

3.138. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> abc -script /tmp/yosys_OyXzYI/abc_tmp_1.scr

3.139. Executing ABC pass (technology mapping using ABC).

3.139.1. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Extracted 1331 gates and 1669 wires to a netlist network with 338 inputs and 229 outputs.

3.139.1.1. Executing ABC.
DE:   #PIs = 338  #Luts =   470  Max Lvl =   9  Avg Lvl =   2.91  [   0.05 sec. at Pass 0]
DE:   #PIs = 338  #Luts =   432  Max Lvl =   6  Avg Lvl =   2.76  [   1.29 sec. at Pass 1]
DE:   #PIs = 338  #Luts =   432  Max Lvl =   6  Avg Lvl =   2.76  [   0.52 sec. at Pass 2]
DE:   #PIs = 338  #Luts =   421  Max Lvl =   8  Avg Lvl =   2.69  [   0.43 sec. at Pass 3]
DE:   #PIs = 338  #Luts =   415  Max Lvl =   7  Avg Lvl =   2.60  [   0.32 sec. at Pass 4]
DE:   #PIs = 338  #Luts =   409  Max Lvl =   7  Avg Lvl =   2.65  [   0.87 sec. at Pass 5]
DE:   #PIs = 338  #Luts =   409  Max Lvl =   6  Avg Lvl =   2.58  [   0.91 sec. at Pass 6]
DE:   #PIs = 338  #Luts =   401  Max Lvl =   7  Avg Lvl =   2.64  [   0.61 sec. at Pass 7]
DE:   #PIs = 338  #Luts =   401  Max Lvl =   7  Avg Lvl =   2.64  [   0.57 sec. at Pass 8]
DE:   #PIs = 338  #Luts =   399  Max Lvl =   7  Avg Lvl =   2.59  [   1.00 sec. at Pass 9]
DE:   #PIs = 338  #Luts =   399  Max Lvl =   7  Avg Lvl =   2.59  [   0.53 sec. at Pass 10]
DE:   #PIs = 338  #Luts =   398  Max Lvl =   7  Avg Lvl =   2.59  [   0.83 sec. at Pass 11]
DE:   #PIs = 338  #Luts =   396  Max Lvl =   8  Avg Lvl =   2.58  [   0.63 sec. at Pass 12]
DE:   #PIs = 338  #Luts =   394  Max Lvl =   7  Avg Lvl =   2.62  [   0.67 sec. at Pass 13]
DE:   #PIs = 338  #Luts =   394  Max Lvl =   6  Avg Lvl =   2.59  [   0.53 sec. at Pass 14]
DE:   #PIs = 338  #Luts =   394  Max Lvl =   6  Avg Lvl =   2.59  [   1.04 sec. at Pass 15]
DE:   #PIs = 338  #Luts =   394  Max Lvl =   6  Avg Lvl =   2.59  [   0.55 sec. at Pass 16]
DE:   #PIs = 338  #Luts =   393  Max Lvl =   8  Avg Lvl =   2.62  [   0.98 sec. at Pass 17]
DE:   #PIs = 338  #Luts =   393  Max Lvl =   8  Avg Lvl =   2.62  [   0.80 sec. at Pass 18]
DE:   #PIs = 338  #Luts =   393  Max Lvl =   8  Avg Lvl =   2.62  [   1.22 sec. at Pass 19]
DE:   #PIs = 338  #Luts =   393  Max Lvl =   8  Avg Lvl =   2.62  [   0.85 sec. at Pass 20]
DE:   #PIs = 338  #Luts =   393  Max Lvl =   8  Avg Lvl =   2.62  [   4.19 sec. at Pass 21]
DE:   #PIs = 338  #Luts =   393  Max Lvl =   8  Avg Lvl =   2.62  [   0.61 sec. at Pass 22]

yosys> opt_expr

3.140. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge -nomux

3.141. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.142. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.143. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.144. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_share

3.145. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.146. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.147. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 9 unused cells and 1595 unused wires.
<suppressed ~31 debug messages>

yosys> opt_expr

3.148. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_muxtree

3.149. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.150. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.151. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_share

3.152. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.153. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.154. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr

3.155. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
MAX OPT ITERATION = 2

yosys> opt_ffinv

3.156. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 8 inverters.

yosys> stat

3.157. Printing statistics.

=== top ===

   Number of wires:                828
   Number of wire bits:           1355
   Number of public wires:         198
   Number of public wire bits:     725
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                723
     $_DFFE_PN0P_                  136
     $_DFFE_PN1P_                    8
     $_DFFE_PP_                     75
     $_DFF_PN0_                     53
     $_DFF_PN1_                      1
     $_DFF_P_                       58
     $lut                          392


yosys> shregmap -minlen 8 -maxlen 20

3.158. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.159. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.160. Printing statistics.

=== top ===

   Number of wires:                828
   Number of wire bits:           1355
   Number of public wires:         198
   Number of public wire bits:     725
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                723
     $_DFFE_PN0P_                  136
     $_DFFE_PN1P_                    8
     $_DFFE_PP0P_                   75
     $_DFF_PN0_                     53
     $_DFF_PN1_                      1
     $_DFF_P_                       58
     $lut                          392


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.161. Executing TECHMAP pass (map to technology primitives).

3.161.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.161.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.161.3. Continuing TECHMAP pass.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_DFFE_PN0P_ for cells of type $_DFFE_PN0P_.
Using template \$_DFFE_PN1P_ for cells of type $_DFFE_PN1P_.
Using template \$_DFF_PN0_ for cells of type $_DFF_PN0_.
Using template \$_DFF_PN1_ for cells of type $_DFF_PN1_.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~934 debug messages>

yosys> opt_expr -mux_undef

3.162. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~10226 debug messages>

yosys> simplemap

3.163. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.164. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge

3.165. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~2427 debug messages>
Removed a total of 809 cells.

yosys> opt_dff -nodffe -nosdff

3.166. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.167. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 8 unused cells and 2324 unused wires.
<suppressed ~9 debug messages>

yosys> opt_expr

3.168. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~179 debug messages>

yosys> opt_merge -nomux

3.169. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.170. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.171. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.172. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_share

3.173. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.174. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.175. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 45 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.176. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
MAX OPT ITERATION = 1

yosys> abc -script /tmp/yosys_OyXzYI/abc_tmp_2.scr

3.177. Executing ABC pass (technology mapping using ABC).

3.177.1. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Extracted 1651 gates and 1983 wires to a netlist network with 330 inputs and 220 outputs.

3.177.1.1. Executing ABC.
DE:   #PIs = 330  #Luts =   384  Max Lvl =   8  Avg Lvl =   2.70  [   0.05 sec. at Pass 0]
DE:   #PIs = 330  #Luts =   384  Max Lvl =   8  Avg Lvl =   2.70  [   1.19 sec. at Pass 1]
DE:   #PIs = 330  #Luts =   383  Max Lvl =   6  Avg Lvl =   2.71  [   0.45 sec. at Pass 2]
DE:   #PIs = 330  #Luts =   383  Max Lvl =   6  Avg Lvl =   2.71  [   0.59 sec. at Pass 3]
DE:   #PIs = 330  #Luts =   383  Max Lvl =   6  Avg Lvl =   2.71  [   0.57 sec. at Pass 4]
DE:   #PIs = 330  #Luts =   383  Max Lvl =   6  Avg Lvl =   2.71  [   0.99 sec. at Pass 5]
DE:   #PIs = 330  #Luts =   382  Max Lvl =   6  Avg Lvl =   2.68  [   2.77 sec. at Pass 6]
DE:   #PIs = 330  #Luts =   382  Max Lvl =   6  Avg Lvl =   2.68  [   0.80 sec. at Pass 7]
DE:   #PIs = 330  #Luts =   382  Max Lvl =   6  Avg Lvl =   2.68  [   1.53 sec. at Pass 8]
DE:   #PIs = 330  #Luts =   382  Max Lvl =   6  Avg Lvl =   2.68  [   0.92 sec. at Pass 9]
DE:   #PIs = 330  #Luts =   382  Max Lvl =   6  Avg Lvl =   2.68  [   5.26 sec. at Pass 10]
DE:   #PIs = 330  #Luts =   382  Max Lvl =   6  Avg Lvl =   2.68  [   0.50 sec. at Pass 11]

yosys> opt_expr

3.178. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge -nomux

3.179. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.180. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.181. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.182. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_share

3.183. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.184. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.185. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 1693 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.186. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
MAX OPT ITERATION = 1

yosys> hierarchy -check

3.187. Executing HIERARCHY pass (managing design hierarchy).

3.187.1. Analyzing design hierarchy..
Top module:  \top

3.187.2. Analyzing design hierarchy..
Top module:  \top
Removed 0 unused modules.

yosys> stat

3.188. Printing statistics.

=== top ===

   Number of wires:                818
   Number of wire bits:           1345
   Number of public wires:         198
   Number of public wire bits:     725
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                713
     $lut                          382
     dffsre                        331


yosys> opt_clean -purge

3.189. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 147 unused wires.
<suppressed ~147 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.190. Executing Verilog backend.
Dumping module `\top'.

Warnings: 10 unique messages, 10 total
End of script. Logfile hash: 62e0e4d5f2, CPU: user 4.93s system 0.29s, MEM: 57.64 MB peak
Yosys 0.18+10 (git sha1 c98b0e94e, gcc 9.4.0 -fPIC -Os)
Time spent: 98% 6x abc (205 sec), 0% 37x opt_expr (1 sec), ...
real 51.67
user 192.74
sys 17.18
