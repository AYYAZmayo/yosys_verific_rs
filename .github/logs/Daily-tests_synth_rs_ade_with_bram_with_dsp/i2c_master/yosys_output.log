
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.140
 Yosys 0.18+10 (git sha1 92b23013e, gcc 11.2.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Sep22_SW_Release, released at Fri Sep 30 20:01:32 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k i2c_master_defines.vh i2c_master_byte_ctrl.v i2c_master.v i2c_master_bit_ctrl.v StateMachine.v

yosys> verific -vlog2k i2c_master_defines.vh i2c_master_byte_ctrl.v i2c_master.v i2c_master_bit_ctrl.v StateMachine.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Sep22_SW_Release, released at Fri Sep 30 20:01:32 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'i2c_master_defines.vh'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'i2c_master_byte_ctrl.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'i2c_master.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'i2c_master_bit_ctrl.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'StateMachine.v'

yosys> read -sv i2c_master_defines.svh i2c_master.sv StateMachine.sv i2c_master_byte_ctrl.sv i2c_master_bit_ctrl.sv

yosys> verific -sv i2c_master_defines.svh i2c_master.sv StateMachine.sv i2c_master_byte_ctrl.sv i2c_master_bit_ctrl.sv

3. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Sep22_SW_Release, released at Fri Sep 30 20:01:32 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'i2c_master_defines.svh'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'i2c_master.sv'
VERIFIC-WARNING [VERI-1206] i2c_master.sv:322: overwriting previous definition of module 'i2c_master'
VERIFIC-INFO [VERI-2142] i2c_master.v:322: previous definition of design element 'i2c_master' is here
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'StateMachine.sv'
VERIFIC-WARNING [VERI-1206] StateMachine.sv:588: overwriting previous definition of module 'StateMachine'
VERIFIC-INFO [VERI-2142] StateMachine.v:588: previous definition of design element 'StateMachine' is here
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'i2c_master_byte_ctrl.sv'
VERIFIC-WARNING [VERI-1206] i2c_master_byte_ctrl.sv:389: overwriting previous definition of module 'i2c_master_byte_ctrl'
VERIFIC-INFO [VERI-2142] i2c_master_byte_ctrl.v:385: previous definition of design element 'i2c_master_byte_ctrl' is here
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'i2c_master_bit_ctrl.sv'
VERIFIC-WARNING [VERI-1206] i2c_master_bit_ctrl.sv:604: overwriting previous definition of module 'i2c_master_bit_ctrl'
VERIFIC-INFO [VERI-2142] i2c_master_bit_ctrl.v:597: previous definition of design element 'i2c_master_bit_ctrl' is here

yosys> synth_rs -top i2c_master -tech genesis2 -goal area -de -verilog synthesized.v

4. Executing synth_rs pass: v0.4.116

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis2/cells_sim.v +/rapidsilicon/genesis2/dsp_sim.v +/rapidsilicon/genesis2/brams_sim.v

4.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

4.2. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/cells_sim.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dff'.
Generating RTLIL representation for module `\dffn'.
Generating RTLIL representation for module `\sdff'.
Generating RTLIL representation for module `\sdffn'.
Generating RTLIL representation for module `\dffr'.
Generating RTLIL representation for module `\dffnr'.
Generating RTLIL representation for module `\dffe'.
Generating RTLIL representation for module `\dffne'.
Generating RTLIL representation for module `\sdffre'.
Generating RTLIL representation for module `\sdffnre'.
Generating RTLIL representation for module `\dffre'.
Generating RTLIL representation for module `\dffnre'.
Generating RTLIL representation for module `\latch'.
Generating RTLIL representation for module `\latchn'.
Generating RTLIL representation for module `\latchr'.
Generating RTLIL representation for module `\latchnr'.
Generating RTLIL representation for module `\fa_1bit'.
Successfully finished Verilog frontend.

4.3. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/dsp_sim.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/dsp_sim.v' to AST representation.
Generating RTLIL representation for module `\RS_DSP'.
Generating RTLIL representation for module `\RS_DSP_MULT'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTADD'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTACC'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_ports'.
Successfully finished Verilog frontend.

4.4. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/brams_sim.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/brams_sim.v' to AST representation.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\RS_TDP36K'.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top i2c_master

4.5. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] i2c_master.sv:81: compiling module 'i2c_master'
VERIFIC-WARNING [VERI-2371] i2c_master.sv:174: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:180: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:181: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:182: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:183: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:184: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:185: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:186: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:187: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:197: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:198: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:199: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:205: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:206: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:207: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:215: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:222: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:224: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:228: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:233: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:235: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:236: delay control is not supported for synthesis
VERIFIC-INFO [VERI-1018] i2c_master_byte_ctrl.sv:83: compiling module 'i2c_master_byte_ctrl'
VERIFIC-INFO [VERI-1018] i2c_master_bit_ctrl.sv:152: compiling module 'i2c_master_bit_ctrl'
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:207: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:224: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:225: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:229: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:230: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:234: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:235: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:239: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:240: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:251: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:252: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:256: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:257: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-1209] i2c_master_bit_ctrl.sv:271: expression size 32 truncated to fit in target size 14
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:296: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:297: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:299: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:300: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:304: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:305: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:307: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:308: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:312: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:313: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:315: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:316: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:326: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:327: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:331: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:332: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:336: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:337: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:343: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:344: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:345: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:355: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:357: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:359: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:363: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:365: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:373: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:401: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:402: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:403: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:404: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:405: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:409: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:410: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:411: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:412: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:413: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:417: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:425: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:426: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:427: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:428: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:429: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:432: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:433: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:434: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:440: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:441: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:442: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:443: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:448: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:449: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:450: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:451: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:456: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:457: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:458: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:459: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:464: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:465: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:466: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:467: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:468: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:473: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:474: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:475: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:476: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:477: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:478: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:484: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:485: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:486: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:487: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:492: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:493: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:494: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:495: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:500: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:501: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:502: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:503: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:504: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:509: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:510: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:511: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:512: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:513: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:519: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:520: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:521: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:522: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:527: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:528: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:529: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:530: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:535: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:536: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:537: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:538: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:539: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:544: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:545: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:546: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:547: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:548: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:549: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:555: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:556: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:557: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:558: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:563: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:564: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:565: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:566: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:572: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:573: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:574: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:575: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:576: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:581: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:582: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:583: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:584: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:585: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:586: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:590: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:591: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:592: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:593: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:214: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:216: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:218: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:220: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:227: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:228: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:229: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:230: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:231: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:232: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:233: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:234: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:238: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:239: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:240: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:241: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:242: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:243: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:244: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:245: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:250: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:252: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:254: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:256: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:257: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:258: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:259: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:267: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:268: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:272: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:273: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:277: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:278: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:282: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:283: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:286: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:294: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:295: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:299: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:300: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:303: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:308: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:309: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:316: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:317: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:321: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:322: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:323: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:324: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:332: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:333: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:337: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:338: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:341: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:343: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:351: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:352: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:356: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:357: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:360: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:364: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:366: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:368: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:371: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:376: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:377: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:380: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:384: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:285: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:286: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:287: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:288: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:292: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:293: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:294: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:295: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:299: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:300: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:301: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:302: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:308: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:310: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:312: delay control is not supported for synthesis
Importing module i2c_master.
Importing module i2c_master_byte_ctrl.
Importing module i2c_master_bit_ctrl.

4.5.1. Analyzing design hierarchy..
Top module:  \i2c_master
Used module:     \i2c_master_byte_ctrl
Used module:         \i2c_master_bit_ctrl

4.5.2. Analyzing design hierarchy..
Top module:  \i2c_master
Used module:     \i2c_master_byte_ctrl
Used module:         \i2c_master_bit_ctrl
Removed 0 unused modules.

yosys> proc

4.6. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

4.6.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

4.6.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

4.6.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

4.6.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

4.6.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

4.6.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

4.6.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

4.6.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

4.6.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

4.6.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

4.6.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

4.6.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master_bit_ctrl.
<suppressed ~12 debug messages>
Optimizing module i2c_master_byte_ctrl.
<suppressed ~22 debug messages>
Optimizing module i2c_master.
<suppressed ~5 debug messages>

yosys> demuxmap

4.7. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> flatten

4.8. Executing FLATTEN pass (flatten design).
Deleting now unused module i2c_master_bit_ctrl.
Deleting now unused module i2c_master_byte_ctrl.
<suppressed ~2 debug messages>

yosys> demuxmap

4.9. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> tribuf -logic -formal

4.10. Executing TRIBUF pass.

yosys> deminout

4.11. Executing DEMINOUT pass (demote inout ports to input or output).
Demoting inout port i2c_master.wb_ack_o to output.

yosys> opt_expr

4.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.

yosys> opt_clean

4.13. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..
Removed 8 unused cells and 227 unused wires.
<suppressed ~71 debug messages>

yosys> check

4.14. Executing CHECK pass (checking for obvious problems).
Checking module i2c_master...
Found and reported 0 problems.

yosys> opt_expr

4.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.
<suppressed ~4 debug messages>

yosys> opt_merge -nomux

4.16. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

yosys> opt_muxtree

4.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \i2c_master..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~39 debug messages>

yosys> opt_reduce

4.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \i2c_master.
    New ctrl vector for $pmux cell $flatten\byte_controller.$verific$Select_159$i2c_master_byte_ctrl.sv:387$455: { $flatten\byte_controller.$verific$n584$221 $flatten\byte_controller.$verific$n585$222 }
    New ctrl vector for $pmux cell $flatten\byte_controller.$verific$select_149$i2c_master_byte_ctrl.sv:387$445: { $flatten\byte_controller.$verific$n579$216 $flatten\byte_controller.$verific$n580$217 $flatten\byte_controller.$verific$n581$218 $flatten\byte_controller.$verific$n582$219 $flatten\byte_controller.$verific$n583$220 $flatten\byte_controller.$verific$n584$221 $flatten\byte_controller.$verific$n585$222 }
    New ctrl vector for $pmux cell $flatten\byte_controller.$verific$select_155$i2c_master_byte_ctrl.sv:387$451: { $flatten\byte_controller.$verific$n582$219 $auto$opt_reduce.cc:134:opt_pmux$822 }
    New ctrl vector for $pmux cell $flatten\byte_controller.\bit_controller.$verific$Select_303$i2c_master_bit_ctrl.sv:596$794: { $flatten\byte_controller.\bit_controller.$verific$n1084$566 $flatten\byte_controller.\bit_controller.$verific$n1085$567 }
    New ctrl vector for $pmux cell $flatten\byte_controller.\bit_controller.$verific$Select_308$i2c_master_bit_ctrl.sv:596$799: { $flatten\byte_controller.\bit_controller.$verific$n1088$570 $flatten\byte_controller.\bit_controller.$verific$n1089$571 $flatten\byte_controller.\bit_controller.$verific$n1091$573 }
    New ctrl vector for $pmux cell $flatten\byte_controller.\bit_controller.$verific$Select_311$i2c_master_bit_ctrl.sv:596$802: { $flatten\byte_controller.\bit_controller.$verific$n1054$555 $auto$opt_reduce.cc:134:opt_pmux$826 $auto$opt_reduce.cc:134:opt_pmux$824 }
    New ctrl vector for $pmux cell $flatten\byte_controller.$verific$Select_152$i2c_master_byte_ctrl.sv:387$448: { $flatten\byte_controller.$verific$n579$216 $flatten\byte_controller.$verific$n580$217 }
    New ctrl vector for $pmux cell $flatten\byte_controller.$verific$Select_154$i2c_master_byte_ctrl.sv:387$450: { $flatten\byte_controller.$verific$n582$219 $flatten\byte_controller.$verific$n583$220 $flatten\byte_controller.$verific$n584$221 }
    New ctrl vector for $pmux cell $flatten\byte_controller.\bit_controller.$verific$select_181$i2c_master_bit_ctrl.sv:430$763: { $flatten\byte_controller.\bit_controller.$verific$n600$538 $flatten\byte_controller.\bit_controller.$verific$n439$530 $flatten\byte_controller.\bit_controller.$verific$n602$539 $flatten\byte_controller.\bit_controller.$verific$n603$540 }
    New ctrl vector for $pmux cell $flatten\byte_controller.\bit_controller.$verific$select_299$i2c_master_bit_ctrl.sv:596$790: { $flatten\byte_controller.\bit_controller.$verific$n1046$547 $flatten\byte_controller.\bit_controller.$verific$n1047$548 $flatten\byte_controller.\bit_controller.$verific$n1048$549 $flatten\byte_controller.\bit_controller.$verific$n1049$550 $flatten\byte_controller.\bit_controller.$verific$n1050$551 $flatten\byte_controller.\bit_controller.$verific$n1052$553 $flatten\byte_controller.\bit_controller.$verific$n1053$554 $flatten\byte_controller.\bit_controller.$verific$n1054$555 $flatten\byte_controller.\bit_controller.$verific$n1056$557 $flatten\byte_controller.\bit_controller.$verific$n1057$558 $flatten\byte_controller.\bit_controller.$verific$n1058$559 $flatten\byte_controller.\bit_controller.$verific$n1060$561 $flatten\byte_controller.\bit_controller.$verific$n1061$562 $flatten\byte_controller.\bit_controller.$verific$n1062$563 }
  Optimizing cells in module \i2c_master.
Performed a total of 10 changes.

yosys> opt_merge

4.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_share

4.20. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

4.21. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $verific$wb_inta_o_reg$i2c_master.sv:312$183 ($aldff) from module i2c_master.
Removing never-active async load on $verific$wb_dat_o_reg$i2c_master.sv:189$73 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $verific$txr_reg$i2c_master.sv:217$87 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $verific$tip_reg$i2c_master.sv:303$178 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $verific$rxack_reg$i2c_master.sv:303$177 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $verific$prer_reg$i2c_master.sv:217$85 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $verific$irq_flag_reg$i2c_master.sv:303$179 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $verific$ctr_reg$i2c_master.sv:217$86 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $verific$cr_reg$i2c_master.sv:237$97 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $verific$al_reg$i2c_master.sv:303$176 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $flatten\byte_controller.\bit_controller.$verific$sto_condition_reg$i2c_master_bit_ctrl.sv:338$737 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $flatten\byte_controller.\bit_controller.$verific$sta_condition_reg$i2c_master_bit_ctrl.sv:338$736 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $flatten\byte_controller.\bit_controller.$verific$slave_wait_reg$i2c_master_bit_ctrl.sv:213$656 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $flatten\byte_controller.\bit_controller.$verific$sda_oen_reg$i2c_master_bit_ctrl.sv:597$816 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $flatten\byte_controller.\bit_controller.$verific$scl_oen_reg$i2c_master_bit_ctrl.sv:597$815 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $flatten\byte_controller.\bit_controller.$verific$sSDA_reg$i2c_master_bit_ctrl.sv:317$723 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $flatten\byte_controller.\bit_controller.$verific$sSCL_reg$i2c_master_bit_ctrl.sv:317$722 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $flatten\byte_controller.\bit_controller.$verific$filter_cnt_reg$i2c_master_bit_ctrl.sv:271$694 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $flatten\byte_controller.\bit_controller.$verific$fSDA_reg$i2c_master_bit_ctrl.sv:289$703 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $flatten\byte_controller.\bit_controller.$verific$fSCL_reg$i2c_master_bit_ctrl.sv:289$702 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $flatten\byte_controller.\bit_controller.$verific$dSDA_reg$i2c_master_bit_ctrl.sv:317$725 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $flatten\byte_controller.\bit_controller.$verific$dSCL_reg$i2c_master_bit_ctrl.sv:317$724 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $flatten\byte_controller.\bit_controller.$verific$cnt_reg$i2c_master_bit_ctrl.sv:241$675 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $flatten\byte_controller.\bit_controller.$verific$cmd_ack_reg$i2c_master_bit_ctrl.sv:597$814 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $flatten\byte_controller.\bit_controller.$verific$clk_en_reg$i2c_master_bit_ctrl.sv:241$676 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $flatten\byte_controller.\bit_controller.$verific$c_state_reg$i2c_master_bit_ctrl.sv:597$813 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $flatten\byte_controller.\bit_controller.$verific$cSDA_reg$i2c_master_bit_ctrl.sv:263$683 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $flatten\byte_controller.\bit_controller.$verific$cSCL_reg$i2c_master_bit_ctrl.sv:263$682 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $flatten\byte_controller.\bit_controller.$verific$busy_reg$i2c_master_bit_ctrl.sv:345$743 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $flatten\byte_controller.\bit_controller.$verific$al_reg$i2c_master_bit_ctrl.sv:367$749 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $flatten\byte_controller.$verific$sr_reg$i2c_master_byte_ctrl.sv:388$465 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $flatten\byte_controller.$verific$shift_reg$i2c_master_byte_ctrl.sv:388$468 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $flatten\byte_controller.$verific$ld_reg$i2c_master_byte_ctrl.sv:388$469 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $flatten\byte_controller.$verific$dcnt_reg$i2c_master_byte_ctrl.sv:220$369 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $flatten\byte_controller.$verific$core_txd_reg$i2c_master_byte_ctrl.sv:388$467 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $flatten\byte_controller.$verific$core_cmd_reg$i2c_master_byte_ctrl.sv:388$466 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $flatten\byte_controller.$verific$cmd_ack_reg$i2c_master_byte_ctrl.sv:388$470 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $flatten\byte_controller.$verific$c_state_reg$i2c_master_byte_ctrl.sv:388$471 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $flatten\byte_controller.$verific$ack_out_reg$i2c_master_byte_ctrl.sv:388$472 ($aldff) from module i2c_master.
Setting constant 0-bit at position 0 on $flatten\byte_controller.\bit_controller.$verific$al_reg$i2c_master_bit_ctrl.sv:367$749 ($adff) from module i2c_master.

yosys> opt_clean

4.22. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..
Removed 9 unused cells and 13 unused wires.
<suppressed ~11 debug messages>

yosys> opt_expr

4.23. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.
<suppressed ~3 debug messages>

yosys> opt_muxtree

4.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \i2c_master..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~40 debug messages>

yosys> opt_reduce

4.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \i2c_master.
Performed a total of 0 changes.

yosys> opt_merge

4.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
Removed a total of 0 cells.

yosys> opt_share

4.27. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

4.28. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

4.29. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

4.30. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.
MAX OPT ITERATION = 2

yosys> fsm -encoding binary

4.31. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

4.31.1. Executing FSM_DETECT pass (finding FSMs in design).
Found FSM state register i2c_master.byte_controller.bit_controller.c_state.
Not marking i2c_master.ctr as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking i2c_master.prer as FSM state register:
    Users of register don't seem to benefit from recoding.

yosys> fsm_extract

4.31.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\byte_controller.bit_controller.c_state' from module `\i2c_master'.
  found $adff cell for state register: $flatten\byte_controller.\bit_controller.$verific$c_state_reg$i2c_master_bit_ctrl.sv:597$813
  root of input selection tree: $flatten\byte_controller.\bit_controller.$verific$n1119$640
  found reset state: 18'000000000000000000 (from async reset)
  found ctrl input: \wb_rst_i
  found ctrl input: \byte_controller.bit_controller.clk_en
  found ctrl input: $flatten\byte_controller.\bit_controller.$verific$n1062$563
  found ctrl input: $flatten\byte_controller.\bit_controller.$verific$n1061$562
  found ctrl input: $flatten\byte_controller.\bit_controller.$verific$n1060$561
  found ctrl input: $flatten\byte_controller.\bit_controller.$verific$n1058$559
  found ctrl input: $flatten\byte_controller.\bit_controller.$verific$n1057$558
  found ctrl input: $flatten\byte_controller.\bit_controller.$verific$n1056$557
  found ctrl input: $flatten\byte_controller.\bit_controller.$verific$n1054$555
  found ctrl input: $flatten\byte_controller.\bit_controller.$verific$n1053$554
  found ctrl input: $flatten\byte_controller.\bit_controller.$verific$n1052$553
  found ctrl input: $flatten\byte_controller.\bit_controller.$verific$n1050$551
  found ctrl input: $flatten\byte_controller.\bit_controller.$verific$n1049$550
  found ctrl input: $flatten\byte_controller.\bit_controller.$verific$n1048$549
  found ctrl input: $flatten\byte_controller.\bit_controller.$verific$n1047$548
  found ctrl input: $flatten\byte_controller.\bit_controller.$verific$n1046$547
  found state code: 18'010000000000000000
  found state code: 18'001000000000000000
  found state code: 18'000100000000000000
  found state code: 18'000001000000000000
  found state code: 18'000000100000000000
  found state code: 18'000000010000000000
  found state code: 18'000000000100000000
  found state code: 18'000000000010000000
  found state code: 18'000000000001000000
  found state code: 18'000000000000010000
  found state code: 18'000000000000001000
  found state code: 18'000000000000000100
  found state code: 18'000000000000000010
  found ctrl input: $flatten\byte_controller.\bit_controller.$verific$n603$540
  found ctrl input: $flatten\byte_controller.\bit_controller.$verific$n602$539
  found ctrl input: $flatten\byte_controller.\bit_controller.$verific$n439$530
  found ctrl input: $flatten\byte_controller.\bit_controller.$verific$n600$538
  found state code: 18'000000001000000000
  found state code: 18'000010000000000000
  found state code: 18'000000000000100000
  found state code: 18'000000000000000001
  found ctrl output: $flatten\byte_controller.\bit_controller.$verific$n1063$564
  found ctrl output: $flatten\byte_controller.\bit_controller.$verific$n1062$563
  found ctrl output: $flatten\byte_controller.\bit_controller.$verific$n1061$562
  found ctrl output: $flatten\byte_controller.\bit_controller.$verific$n1060$561
  found ctrl output: $flatten\byte_controller.\bit_controller.$verific$n1059$560
  found ctrl output: $flatten\byte_controller.\bit_controller.$verific$n1058$559
  found ctrl output: $flatten\byte_controller.\bit_controller.$verific$n1057$558
  found ctrl output: $flatten\byte_controller.\bit_controller.$verific$n1056$557
  found ctrl output: $flatten\byte_controller.\bit_controller.$verific$n1055$556
  found ctrl output: $flatten\byte_controller.\bit_controller.$verific$n1054$555
  found ctrl output: $flatten\byte_controller.\bit_controller.$verific$n1053$554
  found ctrl output: $flatten\byte_controller.\bit_controller.$verific$n1052$553
  found ctrl output: $flatten\byte_controller.\bit_controller.$verific$n1051$552
  found ctrl output: $flatten\byte_controller.\bit_controller.$verific$n1050$551
  found ctrl output: $flatten\byte_controller.\bit_controller.$verific$n1049$550
  found ctrl output: $flatten\byte_controller.\bit_controller.$verific$n1048$549
  found ctrl output: $flatten\byte_controller.\bit_controller.$verific$n1047$548
  found ctrl output: $flatten\byte_controller.\bit_controller.$verific$n1046$547
  ctrl inputs: { $flatten\byte_controller.\bit_controller.$verific$n439$530 $flatten\byte_controller.\bit_controller.$verific$n600$538 $flatten\byte_controller.\bit_controller.$verific$n602$539 $flatten\byte_controller.\bit_controller.$verific$n603$540 \byte_controller.bit_controller.clk_en \wb_rst_i }
  ctrl outputs: { $flatten\byte_controller.\bit_controller.$verific$n1046$547 $flatten\byte_controller.\bit_controller.$verific$n1047$548 $flatten\byte_controller.\bit_controller.$verific$n1048$549 $flatten\byte_controller.\bit_controller.$verific$n1049$550 $flatten\byte_controller.\bit_controller.$verific$n1050$551 $flatten\byte_controller.\bit_controller.$verific$n1051$552 $flatten\byte_controller.\bit_controller.$verific$n1052$553 $flatten\byte_controller.\bit_controller.$verific$n1053$554 $flatten\byte_controller.\bit_controller.$verific$n1054$555 $flatten\byte_controller.\bit_controller.$verific$n1055$556 $flatten\byte_controller.\bit_controller.$verific$n1056$557 $flatten\byte_controller.\bit_controller.$verific$n1057$558 $flatten\byte_controller.\bit_controller.$verific$n1058$559 $flatten\byte_controller.\bit_controller.$verific$n1059$560 $flatten\byte_controller.\bit_controller.$verific$n1060$561 $flatten\byte_controller.\bit_controller.$verific$n1061$562 $flatten\byte_controller.\bit_controller.$verific$n1062$563 $flatten\byte_controller.\bit_controller.$verific$n1063$564 $flatten\byte_controller.\bit_controller.$verific$n1119$640 }
  transition: 18'000000000000000000 6'----00 -> 18'000000000000000000 36'100000000000000000000000000000000000
  transition: 18'000000000000000000 6'000010 -> 18'000000000000000000 36'100000000000000000000000000000000000
  transition: 18'000000000000000000 6'-1--10 -> 18'000000000000000001 36'100000000000000000000000000000000001
  transition: 18'000000000000000000 6'1---10 -> 18'000000000000100000 36'100000000000000000000000000000100000
  transition: 18'000000000000000000 6'--1-10 -> 18'000010000000000000 36'100000000000000000000010000000000000
  transition: 18'000000000000000000 6'---110 -> 18'000000001000000000 36'100000000000000000000000001000000000
  transition: 18'000000000000000000 6'-----1 -> 18'000000000000000000 36'100000000000000000000000000000000000
  transition: 18'010000000000000000 6'----00 -> 18'010000000000000000 36'000000000000000001010000000000000000
  transition: 18'010000000000000000 6'----10 -> 18'000000000000000000 36'000000000000000001000000000000000000
  transition: 18'010000000000000000 6'-----1 -> 18'000000000000000000 36'000000000000000001000000000000000000
  transition: 18'001000000000000000 6'----00 -> 18'001000000000000000 36'000000000000000010001000000000000000
  transition: 18'001000000000000000 6'----10 -> 18'010000000000000000 36'000000000000000010010000000000000000
  transition: 18'001000000000000000 6'-----1 -> 18'000000000000000000 36'000000000000000010000000000000000000
  transition: 18'000100000000000000 6'----00 -> 18'000100000000000000 36'000000000000000100000100000000000000
  transition: 18'000100000000000000 6'----10 -> 18'001000000000000000 36'000000000000000100001000000000000000
  transition: 18'000100000000000000 6'-----1 -> 18'000000000000000000 36'000000000000000100000000000000000000
  transition: 18'000010000000000000 6'----00 -> 18'000010000000000000 36'000000000000001000000010000000000000
  transition: 18'000010000000000000 6'----10 -> 18'000100000000000000 36'000000000000001000000100000000000000
  transition: 18'000010000000000000 6'-----1 -> 18'000000000000000000 36'000000000000001000000000000000000000
  transition: 18'000001000000000000 6'----00 -> 18'000001000000000000 36'000000000000010000000001000000000000
  transition: 18'000001000000000000 6'----10 -> 18'000000000000000000 36'000000000000010000000000000000000000
  transition: 18'000001000000000000 6'-----1 -> 18'000000000000000000 36'000000000000010000000000000000000000
  transition: 18'000000100000000000 6'----00 -> 18'000000100000000000 36'000000000000100000000000100000000000
  transition: 18'000000100000000000 6'----10 -> 18'000001000000000000 36'000000000000100000000001000000000000
  transition: 18'000000100000000000 6'-----1 -> 18'000000000000000000 36'000000000000100000000000000000000000
  transition: 18'000000010000000000 6'----00 -> 18'000000010000000000 36'000000000001000000000000010000000000
  transition: 18'000000010000000000 6'----10 -> 18'000000100000000000 36'000000000001000000000000100000000000
  transition: 18'000000010000000000 6'-----1 -> 18'000000000000000000 36'000000000001000000000000000000000000
  transition: 18'000000001000000000 6'----00 -> 18'000000001000000000 36'000000000010000000000000001000000000
  transition: 18'000000001000000000 6'----10 -> 18'000000010000000000 36'000000000010000000000000010000000000
  transition: 18'000000001000000000 6'-----1 -> 18'000000000000000000 36'000000000010000000000000000000000000
  transition: 18'000000000100000000 6'----00 -> 18'000000000100000000 36'000000000100000000000000000100000000
  transition: 18'000000000100000000 6'----10 -> 18'000000000000000000 36'000000000100000000000000000000000000
  transition: 18'000000000100000000 6'-----1 -> 18'000000000000000000 36'000000000100000000000000000000000000
  transition: 18'000000000010000000 6'----00 -> 18'000000000010000000 36'000000001000000000000000000010000000
  transition: 18'000000000010000000 6'----10 -> 18'000000000100000000 36'000000001000000000000000000100000000
  transition: 18'000000000010000000 6'-----1 -> 18'000000000000000000 36'000000001000000000000000000000000000
  transition: 18'000000000001000000 6'----00 -> 18'000000000001000000 36'000000010000000000000000000001000000
  transition: 18'000000000001000000 6'----10 -> 18'000000000010000000 36'000000010000000000000000000010000000
  transition: 18'000000000001000000 6'-----1 -> 18'000000000000000000 36'000000010000000000000000000000000000
  transition: 18'000000000000100000 6'----00 -> 18'000000000000100000 36'000000100000000000000000000000100000
  transition: 18'000000000000100000 6'----10 -> 18'000000000001000000 36'000000100000000000000000000001000000
  transition: 18'000000000000100000 6'-----1 -> 18'000000000000000000 36'000000100000000000000000000000000000
  transition: 18'000000000000010000 6'----00 -> 18'000000000000010000 36'000001000000000000000000000000010000
  transition: 18'000000000000010000 6'----10 -> 18'000000000000000000 36'000001000000000000000000000000000000
  transition: 18'000000000000010000 6'-----1 -> 18'000000000000000000 36'000001000000000000000000000000000000
  transition: 18'000000000000001000 6'----00 -> 18'000000000000001000 36'000010000000000000000000000000001000
  transition: 18'000000000000001000 6'----10 -> 18'000000000000010000 36'000010000000000000000000000000010000
  transition: 18'000000000000001000 6'-----1 -> 18'000000000000000000 36'000010000000000000000000000000000000
  transition: 18'000000000000000100 6'----00 -> 18'000000000000000100 36'000100000000000000000000000000000100
  transition: 18'000000000000000100 6'----10 -> 18'000000000000001000 36'000100000000000000000000000000001000
  transition: 18'000000000000000100 6'-----1 -> 18'000000000000000000 36'000100000000000000000000000000000000
  transition: 18'000000000000000010 6'----00 -> 18'000000000000000010 36'001000000000000000000000000000000010
  transition: 18'000000000000000010 6'----10 -> 18'000000000000000100 36'001000000000000000000000000000000100
  transition: 18'000000000000000010 6'-----1 -> 18'000000000000000000 36'001000000000000000000000000000000000
  transition: 18'000000000000000001 6'----00 -> 18'000000000000000001 36'010000000000000000000000000000000001
  transition: 18'000000000000000001 6'----10 -> 18'000000000000000010 36'010000000000000000000000000000000010
  transition: 18'000000000000000001 6'-----1 -> 18'000000000000000000 36'010000000000000000000000000000000000

yosys> fsm_opt

4.31.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\byte_controller.bit_controller.c_state$827' from module `\i2c_master'.

yosys> opt_clean

4.31.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..
Removed 23 unused cells and 23 unused wires.
<suppressed ~24 debug messages>

yosys> fsm_opt

4.31.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\byte_controller.bit_controller.c_state$827' from module `\i2c_master'.
  Removing unused output signal $flatten\byte_controller.\bit_controller.$verific$n1119$640 [0].
  Removing unused output signal $flatten\byte_controller.\bit_controller.$verific$n1119$640 [1].
  Removing unused output signal $flatten\byte_controller.\bit_controller.$verific$n1119$640 [2].
  Removing unused output signal $flatten\byte_controller.\bit_controller.$verific$n1119$640 [3].
  Removing unused output signal $flatten\byte_controller.\bit_controller.$verific$n1119$640 [4].
  Removing unused output signal $flatten\byte_controller.\bit_controller.$verific$n1119$640 [5].
  Removing unused output signal $flatten\byte_controller.\bit_controller.$verific$n1119$640 [6].
  Removing unused output signal $flatten\byte_controller.\bit_controller.$verific$n1119$640 [7].
  Removing unused output signal $flatten\byte_controller.\bit_controller.$verific$n1119$640 [8].
  Removing unused output signal $flatten\byte_controller.\bit_controller.$verific$n1119$640 [9].
  Removing unused output signal $flatten\byte_controller.\bit_controller.$verific$n1119$640 [10].
  Removing unused output signal $flatten\byte_controller.\bit_controller.$verific$n1119$640 [11].
  Removing unused output signal $flatten\byte_controller.\bit_controller.$verific$n1119$640 [12].
  Removing unused output signal $flatten\byte_controller.\bit_controller.$verific$n1119$640 [13].
  Removing unused output signal $flatten\byte_controller.\bit_controller.$verific$n1119$640 [14].
  Removing unused output signal $flatten\byte_controller.\bit_controller.$verific$n1119$640 [15].
  Removing unused output signal $flatten\byte_controller.\bit_controller.$verific$n1119$640 [16].
  Removing unused output signal $flatten\byte_controller.\bit_controller.$verific$n1119$640 [17].

yosys> fsm_recode -encoding binary

4.31.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\byte_controller.bit_controller.c_state$827' from module `\i2c_master' using `auto' encoding:
  mapping auto encoding to `binary` for this FSM.
  000000000000000000 -> 00000
  010000000000000000 -> 00001
  001000000000000000 -> 00010
  000100000000000000 -> 00011
  000010000000000000 -> 00100
  000001000000000000 -> 00101
  000000100000000000 -> 00110
  000000010000000000 -> 00111
  000000001000000000 -> 01000
  000000000100000000 -> 01001
  000000000010000000 -> 01010
  000000000001000000 -> 01011
  000000000000100000 -> 01100
  000000000000010000 -> 01101
  000000000000001000 -> 01110
  000000000000000100 -> 01111
  000000000000000010 -> 10000
  000000000000000001 -> 10001

yosys> fsm_info

4.31.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\byte_controller.bit_controller.c_state$827' from module `i2c_master':
-------------------------------------

  Information on FSM $fsm$\byte_controller.bit_controller.c_state$827 (\byte_controller.bit_controller.c_state):

  Number of input signals:    6
  Number of output signals:  18
  Number of state bits:       5

  Input signals:
    0: \wb_rst_i
    1: \byte_controller.bit_controller.clk_en
    2: $flatten\byte_controller.\bit_controller.$verific$n603$540
    3: $flatten\byte_controller.\bit_controller.$verific$n602$539
    4: $flatten\byte_controller.\bit_controller.$verific$n600$538
    5: $flatten\byte_controller.\bit_controller.$verific$n439$530

  Output signals:
    0: $flatten\byte_controller.\bit_controller.$verific$n1063$564
    1: $flatten\byte_controller.\bit_controller.$verific$n1062$563
    2: $flatten\byte_controller.\bit_controller.$verific$n1061$562
    3: $flatten\byte_controller.\bit_controller.$verific$n1060$561
    4: $flatten\byte_controller.\bit_controller.$verific$n1059$560
    5: $flatten\byte_controller.\bit_controller.$verific$n1058$559
    6: $flatten\byte_controller.\bit_controller.$verific$n1057$558
    7: $flatten\byte_controller.\bit_controller.$verific$n1056$557
    8: $flatten\byte_controller.\bit_controller.$verific$n1055$556
    9: $flatten\byte_controller.\bit_controller.$verific$n1054$555
   10: $flatten\byte_controller.\bit_controller.$verific$n1053$554
   11: $flatten\byte_controller.\bit_controller.$verific$n1052$553
   12: $flatten\byte_controller.\bit_controller.$verific$n1051$552
   13: $flatten\byte_controller.\bit_controller.$verific$n1050$551
   14: $flatten\byte_controller.\bit_controller.$verific$n1049$550
   15: $flatten\byte_controller.\bit_controller.$verific$n1048$549
   16: $flatten\byte_controller.\bit_controller.$verific$n1047$548
   17: $flatten\byte_controller.\bit_controller.$verific$n1046$547

  State encoding:
    0:    5'00000  <RESET STATE>
    1:    5'00001
    2:    5'00010
    3:    5'00011
    4:    5'00100
    5:    5'00101
    6:    5'00110
    7:    5'00111
    8:    5'01000
    9:    5'01001
   10:    5'01010
   11:    5'01011
   12:    5'01100
   13:    5'01101
   14:    5'01110
   15:    5'01111
   16:    5'10000
   17:    5'10001

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 6'----00   ->     0 18'100000000000000000
      1:     0 6'000010   ->     0 18'100000000000000000
      2:     0 6'-----1   ->     0 18'100000000000000000
      3:     0 6'--1-10   ->     4 18'100000000000000000
      4:     0 6'---110   ->     8 18'100000000000000000
      5:     0 6'1---10   ->    12 18'100000000000000000
      6:     0 6'-1--10   ->    17 18'100000000000000000
      7:     1 6'----10   ->     0 18'000000000000000001
      8:     1 6'-----1   ->     0 18'000000000000000001
      9:     1 6'----00   ->     1 18'000000000000000001
     10:     2 6'-----1   ->     0 18'000000000000000010
     11:     2 6'----10   ->     1 18'000000000000000010
     12:     2 6'----00   ->     2 18'000000000000000010
     13:     3 6'-----1   ->     0 18'000000000000000100
     14:     3 6'----10   ->     2 18'000000000000000100
     15:     3 6'----00   ->     3 18'000000000000000100
     16:     4 6'-----1   ->     0 18'000000000000001000
     17:     4 6'----10   ->     3 18'000000000000001000
     18:     4 6'----00   ->     4 18'000000000000001000
     19:     5 6'----10   ->     0 18'000000000000010000
     20:     5 6'-----1   ->     0 18'000000000000010000
     21:     5 6'----00   ->     5 18'000000000000010000
     22:     6 6'-----1   ->     0 18'000000000000100000
     23:     6 6'----10   ->     5 18'000000000000100000
     24:     6 6'----00   ->     6 18'000000000000100000
     25:     7 6'-----1   ->     0 18'000000000001000000
     26:     7 6'----10   ->     6 18'000000000001000000
     27:     7 6'----00   ->     7 18'000000000001000000
     28:     8 6'-----1   ->     0 18'000000000010000000
     29:     8 6'----10   ->     7 18'000000000010000000
     30:     8 6'----00   ->     8 18'000000000010000000
     31:     9 6'----10   ->     0 18'000000000100000000
     32:     9 6'-----1   ->     0 18'000000000100000000
     33:     9 6'----00   ->     9 18'000000000100000000
     34:    10 6'-----1   ->     0 18'000000001000000000
     35:    10 6'----10   ->     9 18'000000001000000000
     36:    10 6'----00   ->    10 18'000000001000000000
     37:    11 6'-----1   ->     0 18'000000010000000000
     38:    11 6'----10   ->    10 18'000000010000000000
     39:    11 6'----00   ->    11 18'000000010000000000
     40:    12 6'-----1   ->     0 18'000000100000000000
     41:    12 6'----10   ->    11 18'000000100000000000
     42:    12 6'----00   ->    12 18'000000100000000000
     43:    13 6'----10   ->     0 18'000001000000000000
     44:    13 6'-----1   ->     0 18'000001000000000000
     45:    13 6'----00   ->    13 18'000001000000000000
     46:    14 6'-----1   ->     0 18'000010000000000000
     47:    14 6'----10   ->    13 18'000010000000000000
     48:    14 6'----00   ->    14 18'000010000000000000
     49:    15 6'-----1   ->     0 18'000100000000000000
     50:    15 6'----10   ->    14 18'000100000000000000
     51:    15 6'----00   ->    15 18'000100000000000000
     52:    16 6'-----1   ->     0 18'001000000000000000
     53:    16 6'----10   ->    15 18'001000000000000000
     54:    16 6'----00   ->    16 18'001000000000000000
     55:    17 6'-----1   ->     0 18'010000000000000000
     56:    17 6'----10   ->    16 18'010000000000000000
     57:    17 6'----00   ->    17 18'010000000000000000

-------------------------------------

yosys> fsm_map

4.31.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\byte_controller.bit_controller.c_state$827' from module `\i2c_master'.

yosys> opt_expr

4.32. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.
<suppressed ~20 debug messages>

yosys> opt_merge -nomux

4.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
<suppressed ~90 debug messages>
Removed a total of 30 cells.

yosys> opt_muxtree

4.34. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \i2c_master..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~40 debug messages>

yosys> opt_reduce

4.35. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \i2c_master.
Performed a total of 0 changes.

yosys> opt_merge

4.36. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
Removed a total of 0 cells.

yosys> opt_share

4.37. Executing OPT_SHARE pass.

yosys> opt_dff -sat

4.38. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $verific$txr_reg$i2c_master.sv:217$87 ($adff) from module i2c_master (D = $verific$n232$51, Q = \txr).
Adding EN signal on $verific$prer_reg$i2c_master.sv:217$85 ($adff) from module i2c_master (D = 16'0000000000000000, Q = \prer).
Adding EN signal on $verific$ctr_reg$i2c_master.sv:217$86 ($adff) from module i2c_master (D = 8'10000000, Q = \ctr).
Adding EN signal on $verific$cr_reg$i2c_master.sv:237$97 ($adff) from module i2c_master (D = $verific$n338$56 [3], Q = \cr [3]).
Adding EN signal on $verific$cr_reg$i2c_master.sv:237$97 ($adff) from module i2c_master (D = $verific$n338$56 [7:4], Q = \cr [7:4]).
Adding EN signal on $verific$cr_reg$i2c_master.sv:237$97 ($adff) from module i2c_master (D = $verific$n338$56 [2:0], Q = \cr [2:0]).
Adding EN signal on $flatten\byte_controller.\bit_controller.$verific$sda_oen_reg$i2c_master_bit_ctrl.sv:597$816 ($adff) from module i2c_master (D = $flatten\byte_controller.\bit_controller.$verific$n1140$584, Q = \byte_controller.bit_controller.sda_oen).
Adding EN signal on $flatten\byte_controller.\bit_controller.$verific$scl_oen_reg$i2c_master_bit_ctrl.sv:597$815 ($adff) from module i2c_master (D = $flatten\byte_controller.\bit_controller.$verific$n1139$583, Q = \byte_controller.bit_controller.scl_oen).
Adding EN signal on $flatten\byte_controller.\bit_controller.$verific$fSDA_reg$i2c_master_bit_ctrl.sv:289$703 ($adff) from module i2c_master (D = $flatten\byte_controller.\bit_controller.$verific$n367$612, Q = \byte_controller.bit_controller.fSDA).
Adding EN signal on $flatten\byte_controller.\bit_controller.$verific$fSCL_reg$i2c_master_bit_ctrl.sv:289$702 ($adff) from module i2c_master (D = $flatten\byte_controller.\bit_controller.$verific$n363$611, Q = \byte_controller.bit_controller.fSCL).
Adding EN signal on $flatten\byte_controller.\bit_controller.$verific$dout_reg$i2c_master_bit_ctrl.sv:373$753 ($dff) from module i2c_master (D = \byte_controller.bit_controller.sSDA, Q = \byte_controller.bit_controller.dout).
Adding EN signal on $flatten\byte_controller.\bit_controller.$verific$cnt_reg$i2c_master_bit_ctrl.sv:241$675 ($adff) from module i2c_master (D = $flatten\byte_controller.\bit_controller.$verific$n137$592, Q = \byte_controller.bit_controller.cnt).
Adding EN signal on $flatten\byte_controller.$verific$dcnt_reg$i2c_master_byte_ctrl.sv:220$369 ($adff) from module i2c_master (D = $flatten\byte_controller.$verific$n59$244, Q = \byte_controller.dcnt).
Adding EN signal on $flatten\byte_controller.$verific$core_cmd_reg$i2c_master_byte_ctrl.sv:388$466 ($adff) from module i2c_master (D = $flatten\byte_controller.$verific$n626$313, Q = \byte_controller.core_cmd).
Adding EN signal on $flatten\byte_controller.$verific$c_state_reg$i2c_master_byte_ctrl.sv:388$471 ($adff) from module i2c_master (D = $flatten\byte_controller.$verific$n635$314, Q = \byte_controller.c_state).
Adding EN signal on $flatten\byte_controller.$verific$ack_out_reg$i2c_master_byte_ctrl.sv:388$472 ($adff) from module i2c_master (D = $flatten\byte_controller.$verific$n642$237, Q = \byte_controller.ack_out).
Setting constant 0-bit at position 0 on $verific$al_reg$i2c_master.sv:303$176 ($adff) from module i2c_master.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$1048 ($adffe) from module i2c_master.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$1048 ($adffe) from module i2c_master.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$1048 ($adffe) from module i2c_master.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$1048 ($adffe) from module i2c_master.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$1048 ($adffe) from module i2c_master.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$1048 ($adffe) from module i2c_master.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$1048 ($adffe) from module i2c_master.
Setting constant 1-bit at position 7 on $auto$ff.cc:262:slice$1048 ($adffe) from module i2c_master.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$1047 ($adffe) from module i2c_master.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$1047 ($adffe) from module i2c_master.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$1047 ($adffe) from module i2c_master.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$1047 ($adffe) from module i2c_master.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$1047 ($adffe) from module i2c_master.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$1047 ($adffe) from module i2c_master.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$1047 ($adffe) from module i2c_master.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$1047 ($adffe) from module i2c_master.
Setting constant 0-bit at position 8 on $auto$ff.cc:262:slice$1047 ($adffe) from module i2c_master.
Setting constant 0-bit at position 9 on $auto$ff.cc:262:slice$1047 ($adffe) from module i2c_master.
Setting constant 0-bit at position 10 on $auto$ff.cc:262:slice$1047 ($adffe) from module i2c_master.
Setting constant 0-bit at position 11 on $auto$ff.cc:262:slice$1047 ($adffe) from module i2c_master.
Setting constant 0-bit at position 12 on $auto$ff.cc:262:slice$1047 ($adffe) from module i2c_master.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$1047 ($adffe) from module i2c_master.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$1047 ($adffe) from module i2c_master.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$1047 ($adffe) from module i2c_master.

yosys> opt_clean

4.39. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..
Removed 12 unused cells and 61 unused wires.
<suppressed ~13 debug messages>

yosys> opt_expr

4.40. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.
<suppressed ~20 debug messages>

yosys> opt_muxtree

4.41. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \i2c_master..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~34 debug messages>

yosys> opt_reduce

4.42. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \i2c_master.
    New ctrl vector for $pmux cell $flatten\byte_controller.\bit_controller.$verific$Select_311$i2c_master_bit_ctrl.sv:596$802: $auto$opt_reduce.cc:134:opt_pmux$1133
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$1132: { $auto$fsm_map.cc:194:map_fsm$849 [14] $auto$fsm_map.cc:194:map_fsm$849 [10] $auto$fsm_map.cc:194:map_fsm$849 [6] $auto$fsm_map.cc:194:map_fsm$849 [2] }
  Optimizing cells in module \i2c_master.
Performed a total of 2 changes.

yosys> opt_merge

4.43. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
<suppressed ~39 debug messages>
Removed a total of 13 cells.

yosys> opt_share

4.44. Executing OPT_SHARE pass.

yosys> opt_dff -sat

4.45. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$1087 ($adffe) from module i2c_master.
Setting constant 0-bit at position 13 on $flatten\byte_controller.\bit_controller.$verific$filter_cnt_reg$i2c_master_bit_ctrl.sv:271$694 ($adff) from module i2c_master.
Setting constant 0-bit at position 0 on $verific$wb_inta_o_reg$i2c_master.sv:312$183 ($adff) from module i2c_master.

yosys> opt_clean

4.46. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..
Removed 2 unused cells and 28 unused wires.
<suppressed ~3 debug messages>

yosys> opt_expr

4.47. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.

yosys> opt_muxtree

4.48. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \i2c_master..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~34 debug messages>

yosys> opt_reduce

4.49. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \i2c_master.
    New input vector for $reduce_or cell $flatten\byte_controller.\bit_controller.$verific$reduce_nor_60$i2c_master_bit_ctrl.sv:270$687: \byte_controller.bit_controller.filter_cnt [12:0]
    New input vector for $reduce_or cell $flatten\byte_controller.\bit_controller.$verific$reduce_nor_26$i2c_master_bit_ctrl.sv:227$663: \byte_controller.bit_controller.cnt [14:0]
    New ctrl vector for $pmux cell $flatten\byte_controller.$verific$Select_154$i2c_master_byte_ctrl.sv:387$450: { $flatten\byte_controller.$verific$n582$219 $auto$opt_reduce.cc:134:opt_pmux$1137 }
  Optimizing cells in module \i2c_master.
Performed a total of 3 changes.

yosys> opt_merge

4.50. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
Removed a total of 0 cells.

yosys> opt_share

4.51. Executing OPT_SHARE pass.

yosys> opt_dff -sat

4.52. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$1134 ($adffe) from module i2c_master.
Setting constant 0-bit at position 12 on $auto$ff.cc:262:slice$1135 ($adff) from module i2c_master.

yosys> opt_clean

4.53. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..

yosys> opt_expr

4.54. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.

yosys> opt_muxtree

4.55. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \i2c_master..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~34 debug messages>

yosys> opt_reduce

4.56. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \i2c_master.
    New input vector for $reduce_or cell $flatten\byte_controller.\bit_controller.$verific$reduce_nor_60$i2c_master_bit_ctrl.sv:270$687: \byte_controller.bit_controller.filter_cnt [11:0]
    New input vector for $reduce_or cell $flatten\byte_controller.\bit_controller.$verific$reduce_nor_26$i2c_master_bit_ctrl.sv:227$663: \byte_controller.bit_controller.cnt [13:0]
  Optimizing cells in module \i2c_master.
Performed a total of 2 changes.

yosys> opt_merge

4.57. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
Removed a total of 0 cells.

yosys> opt_share

4.58. Executing OPT_SHARE pass.

yosys> opt_dff -sat

4.59. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$1138 ($adffe) from module i2c_master.
Setting constant 0-bit at position 11 on $auto$ff.cc:262:slice$1139 ($adff) from module i2c_master.

yosys> opt_clean

4.60. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..

yosys> opt_expr

4.61. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.
MAX OPT ITERATION = 4

yosys> wreduce -keepdc

4.62. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 5) from port B of cell i2c_master.$auto$fsm_map.cc:215:map_fsm$865 ($eq).
Removed top 1 bits (of 5) from port B of cell i2c_master.$auto$fsm_map.cc:215:map_fsm$863 ($eq).
Removed top 1 bits (of 3) from port B of cell i2c_master.$verific$equal_33$i2c_master.sv:215$78 ($eq).
Removed top 1 bits (of 5) from port B of cell i2c_master.$auto$fsm_map.cc:215:map_fsm$860 ($eq).
Removed top 1 bits (of 2) from port B of cell i2c_master.$auto$opt_dff.cc:195:make_patterns_logic$1089 ($ne).
Removed top 1 bits (of 3) from port B of cell i2c_master.$auto$opt_dff.cc:195:make_patterns_logic$1105 ($ne).
Removed top 1 bits (of 5) from port B of cell i2c_master.$auto$fsm_map.cc:215:map_fsm$861 ($eq).
Removed top 1 bits (of 5) from port B of cell i2c_master.$auto$fsm_map.cc:215:map_fsm$864 ($eq).
Removed top 4 bits (of 5) from port B of cell i2c_master.$auto$fsm_map.cc:215:map_fsm$851 ($eq).
Removed top 3 bits (of 5) from port B of cell i2c_master.$auto$fsm_map.cc:215:map_fsm$852 ($eq).
Removed top 3 bits (of 5) from port B of cell i2c_master.$auto$fsm_map.cc:215:map_fsm$853 ($eq).
Removed top 2 bits (of 5) from port B of cell i2c_master.$auto$fsm_map.cc:215:map_fsm$854 ($eq).
Removed top 2 bits (of 5) from port B of cell i2c_master.$auto$fsm_map.cc:215:map_fsm$855 ($eq).
Removed top 2 bits (of 5) from port B of cell i2c_master.$auto$fsm_map.cc:215:map_fsm$856 ($eq).
Removed top 1 bits (of 3) from port B of cell i2c_master.$auto$opt_dff.cc:195:make_patterns_logic$1053 ($ne).
Removed top 1 bits (of 5) from port B of cell i2c_master.$auto$fsm_map.cc:215:map_fsm$859 ($eq).
Removed top 1 bits (of 5) from port B of cell i2c_master.$auto$fsm_map.cc:215:map_fsm$858 ($eq).
Removed top 2 bits (of 5) from port B of cell i2c_master.$auto$fsm_map.cc:215:map_fsm$857 ($eq).
Removed top 3 bits (of 16) from port A of cell i2c_master.$flatten\byte_controller.\bit_controller.$verific$sub_35$i2c_master_bit_ctrl.sv:239$670 ($sub).
Removed top 15 bits (of 16) from port B of cell i2c_master.$flatten\byte_controller.\bit_controller.$verific$sub_35$i2c_master_bit_ctrl.sv:239$670 ($sub).
Removed top 2 bits (of 16) from port Y of cell i2c_master.$flatten\byte_controller.\bit_controller.$verific$sub_35$i2c_master_bit_ctrl.sv:239$670 ($sub).
Removed top 3 bits (of 14) from mux cell i2c_master.$flatten\byte_controller.\bit_controller.$verific$mux_65$i2c_master_bit_ctrl.sv:271$693 ($mux).
Removed top 3 bits (of 14) from mux cell i2c_master.$flatten\byte_controller.\bit_controller.$verific$mux_64$i2c_master_bit_ctrl.sv:271$692 ($mux).
Removed top 3 bits (of 16) from mux cell i2c_master.$flatten\byte_controller.\bit_controller.$verific$mux_40$i2c_master_bit_ctrl.sv:241$673 ($mux).
Removed top 3 bits (of 16) from mux cell i2c_master.$flatten\byte_controller.\bit_controller.$verific$mux_38$i2c_master_bit_ctrl.sv:241$672 ($mux).
Removed top 1 bits (of 4) from port B of cell i2c_master.$flatten\byte_controller.\bit_controller.$verific$equal_178$i2c_master_bit_ctrl.sv:427$758 ($eq).
Removed top 3 bits (of 4) from port B of cell i2c_master.$flatten\byte_controller.\bit_controller.$verific$equal_176$i2c_master_bit_ctrl.sv:425$757 ($eq).
Removed top 2 bits (of 4) from port B of cell i2c_master.$flatten\byte_controller.\bit_controller.$verific$equal_141$i2c_master_bit_ctrl.sv:359$744 ($eq).
Removed top 5 bits (of 6) from port B of cell i2c_master.$flatten\byte_controller.$verific$equal_142$i2c_master_byte_ctrl.sv:289$436 ($eq).
Removed top 3 bits (of 6) from port B of cell i2c_master.$flatten\byte_controller.$verific$equal_144$i2c_master_byte_ctrl.sv:312$438 ($eq).
Removed top 4 bits (of 6) from port B of cell i2c_master.$flatten\byte_controller.$verific$equal_145$i2c_master_byte_ctrl.sv:327$439 ($eq).
Removed top 2 bits (of 6) from port B of cell i2c_master.$flatten\byte_controller.$verific$equal_146$i2c_master_byte_ctrl.sv:346$440 ($eq).
Removed top 1 bits (of 6) from port B of cell i2c_master.$flatten\byte_controller.$verific$equal_147$i2c_master_byte_ctrl.sv:373$441 ($eq).
Removed top 1 bits (of 5) from port B of cell i2c_master.$auto$fsm_map.cc:215:map_fsm$862 ($eq).
Removed top 1 bits (of 6) from mux cell i2c_master.$flatten\byte_controller.$verific$mux_119$i2c_master_byte_ctrl.sv:361$426 ($mux).
Removed top 2 bits (of 4) from mux cell i2c_master.$flatten\byte_controller.$verific$mux_120$i2c_master_byte_ctrl.sv:361$427 ($mux).
Removed top 2 bits (of 12) from mux cell i2c_master.$flatten\byte_controller.$verific$mux_186$i2c_master_byte_ctrl.sv:325$404 ($mux).
Removed top 2 bits (of 4) from mux cell i2c_master.$flatten\byte_controller.$verific$mux_65$i2c_master_byte_ctrl.sv:284$395 ($mux).
Removed top 3 bits (of 6) from mux cell i2c_master.$flatten\byte_controller.$verific$mux_78$i2c_master_byte_ctrl.sv:301$406 ($mux).
Removed top 3 bits (of 6) from port B of cell i2c_master.$flatten\byte_controller.$verific$not_equal_46$i2c_master_byte_ctrl.sv:253$382 ($ne).
Removed top 2 bits (of 3) from port B of cell i2c_master.$flatten\byte_controller.$verific$sub_15$i2c_master_byte_ctrl.sv:220$364 ($sub).
Removed top 4 bits (of 15) from port A of cell i2c_master.$flatten\byte_controller.\bit_controller.$verific$sub_62$i2c_master_bit_ctrl.sv:271$689 ($sub).
Removed top 14 bits (of 15) from port B of cell i2c_master.$flatten\byte_controller.\bit_controller.$verific$sub_62$i2c_master_bit_ctrl.sv:271$689 ($sub).
Removed top 4 bits (of 15) from port Y of cell i2c_master.$flatten\byte_controller.\bit_controller.$verific$sub_62$i2c_master_bit_ctrl.sv:271$689 ($sub).
Removed top 1 bits (of 14) from port Y of cell i2c_master.$flatten\byte_controller.\bit_controller.$verific$sub_35$i2c_master_bit_ctrl.sv:239$670 ($sub).
Removed top 2 bits (of 4) from wire i2c_master.$flatten\byte_controller.$verific$n241$262.
Removed top 3 bits (of 6) from wire i2c_master.$flatten\byte_controller.$verific$n308$273.
Removed top 2 bits (of 6) from wire i2c_master.$flatten\byte_controller.$verific$n390$284.
Removed top 1 bits (of 6) from wire i2c_master.$flatten\byte_controller.$verific$n511$302.
Removed top 2 bits (of 4) from wire i2c_master.$flatten\byte_controller.$verific$n518$303.
Removed top 3 bits (of 16) from wire i2c_master.$flatten\byte_controller.\bit_controller.$verific$n101$590.
Removed top 3 bits (of 16) from wire i2c_master.$flatten\byte_controller.\bit_controller.$verific$n119$591.
Removed top 7 bits (of 16) from wire i2c_master.$flatten\byte_controller.\bit_controller.$verific$n137$592.
Removed top 4 bits (of 15) from wire i2c_master.$flatten\byte_controller.\bit_controller.$verific$n253$602.
Removed top 8 bits (of 14) from wire i2c_master.$flatten\byte_controller.\bit_controller.$verific$n284$604.
Removed top 5 bits (of 14) from wire i2c_master.$flatten\byte_controller.\bit_controller.$verific$n299$605.

yosys> peepopt

4.63. Executing PEEPOPT pass (run peephole optimizers).

yosys> opt_clean

4.64. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..
Removed 0 unused cells and 12 unused wires.
<suppressed ~1 debug messages>

yosys> demuxmap

4.65. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> stat

4.66. Printing statistics.

=== i2c_master ===

   Number of wires:                357
   Number of wire bits:            880
   Number of public wires:         117
   Number of public wire bits:     285
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                306
     $adff                          22
     $adffe                         13
     $and                           53
     $bmux                           1
     $dff                            3
     $dffe                           1
     $eq                            34
     $logic_not                      3
     $mux                           75
     $ne                            15
     $not                           13
     $or                            12
     $pmux                          11
     $reduce_and                    12
     $reduce_bool                    5
     $reduce_or                     30
     $sub                            3


yosys> wreduce t:$mul

4.67. Executing WREDUCE pass (reducing word size of cells).

yosys> rs_dsp_macc -genesis2 -max_dsp 154

4.68. Executing RS_DSP_MACC pass.

yosys> techmap -map +/mul2dsp_check_maxwidth.v -D DSP_A_MAXWIDTH=20 -D DSP_B_MAXWIDTH=18 -D DSP_A_MINWIDTH=11 -D DSP_B_MINWIDTH=10 -D DSP_NAME=$__RS_MUL20X18 a:valid_map

4.69. Executing TECHMAP pass (map to technology primitives).

4.69.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/mul2dsp_check_maxwidth.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/mul2dsp_check_maxwidth.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

4.69.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

yosys> stat

4.70. Printing statistics.

=== i2c_master ===

   Number of wires:                357
   Number of wire bits:            880
   Number of public wires:         117
   Number of public wire bits:     285
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                306
     $adff                          22
     $adffe                         13
     $and                           53
     $bmux                           1
     $dff                            3
     $dffe                           1
     $eq                            34
     $logic_not                      3
     $mux                           75
     $ne                            15
     $not                           13
     $or                            12
     $pmux                          11
     $reduce_and                    12
     $reduce_bool                    5
     $reduce_or                     30
     $sub                            3


yosys> chtype -set $mul t:$__soft_mul

yosys> techmap -map +/rapidsilicon/genesis2/dsp_map.v -D USE_DSP_CFG_PARAMS=0

4.71. Executing TECHMAP pass (map to technology primitives).

4.71.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/dsp_map.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/dsp_map.v' to AST representation.
Generating RTLIL representation for module `\$__RS_MUL20X18'.
Successfully finished Verilog frontend.

4.71.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

yosys> techmap -map +/rapidsilicon/genesis2/dsp_final_map.v

4.72. Executing TECHMAP pass (map to technology primitives).

4.72.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/dsp_final_map.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/dsp_final_map.v' to AST representation.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Successfully finished Verilog frontend.

4.72.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

yosys> rs-pack-dsp-regs

4.73. Executing rs_pack_dsp_regs pass.

yosys> rs_dsp_io_regs

4.74. Executing RS_DSP_IO_REGS pass.

yosys> alumacc

4.75. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module i2c_master:
  creating $macc model for $flatten\byte_controller.$verific$sub_15$i2c_master_byte_ctrl.sv:220$364 ($sub).
  creating $macc model for $flatten\byte_controller.\bit_controller.$verific$sub_35$i2c_master_bit_ctrl.sv:239$670 ($sub).
  creating $macc model for $flatten\byte_controller.\bit_controller.$verific$sub_62$i2c_master_bit_ctrl.sv:271$689 ($sub).
  creating $alu model for $macc $flatten\byte_controller.\bit_controller.$verific$sub_62$i2c_master_bit_ctrl.sv:271$689.
  creating $alu model for $macc $flatten\byte_controller.\bit_controller.$verific$sub_35$i2c_master_bit_ctrl.sv:239$670.
  creating $alu model for $macc $flatten\byte_controller.$verific$sub_15$i2c_master_byte_ctrl.sv:220$364.
  creating $alu cell for $flatten\byte_controller.$verific$sub_15$i2c_master_byte_ctrl.sv:220$364: $auto$alumacc.cc:485:replace_alu$1153
  creating $alu cell for $flatten\byte_controller.\bit_controller.$verific$sub_35$i2c_master_bit_ctrl.sv:239$670: $auto$alumacc.cc:485:replace_alu$1156
  creating $alu cell for $flatten\byte_controller.\bit_controller.$verific$sub_62$i2c_master_bit_ctrl.sv:271$689: $auto$alumacc.cc:485:replace_alu$1159
  created 3 $alu and 0 $macc cells.

yosys> opt_expr

4.76. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.

yosys> opt_merge -nomux

4.77. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
Removed a total of 0 cells.

yosys> opt_muxtree

4.78. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \i2c_master..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~34 debug messages>

yosys> opt_reduce

4.79. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \i2c_master.
    New input vector for $reduce_or cell $flatten\byte_controller.\bit_controller.$verific$reduce_nor_60$i2c_master_bit_ctrl.sv:270$687: \byte_controller.bit_controller.filter_cnt [10:0]
    New input vector for $reduce_or cell $flatten\byte_controller.\bit_controller.$verific$reduce_nor_26$i2c_master_bit_ctrl.sv:227$663: \byte_controller.bit_controller.cnt [12:0]
  Optimizing cells in module \i2c_master.
Performed a total of 2 changes.

yosys> opt_merge

4.80. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
Removed a total of 0 cells.

yosys> opt_share

4.81. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe

4.82. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

4.83. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..

yosys> opt_expr

4.84. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.
MAX OPT ITERATION = 1

yosys> stat

4.85. Printing statistics.

=== i2c_master ===

   Number of wires:                363
   Number of wire bits:            934
   Number of public wires:         117
   Number of public wire bits:     285
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                306
     $adff                          22
     $adffe                         13
     $alu                            3
     $and                           53
     $bmux                           1
     $dff                            3
     $dffe                           1
     $eq                            34
     $logic_not                      3
     $mux                           75
     $ne                            15
     $not                           13
     $or                            12
     $pmux                          11
     $reduce_and                    12
     $reduce_bool                    5
     $reduce_or                     30


yosys> memory -nomap

4.86. Executing MEMORY pass.

yosys> opt_mem

4.86.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

4.86.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

4.86.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

4.86.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

4.86.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

4.86.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..

yosys> memory_share

4.86.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

4.86.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

4.86.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..

yosys> memory_collect

4.86.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

4.87. Printing statistics.

=== i2c_master ===

   Number of wires:                363
   Number of wire bits:            934
   Number of public wires:         117
   Number of public wire bits:     285
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                306
     $adff                          22
     $adffe                         13
     $alu                            3
     $and                           53
     $bmux                           1
     $dff                            3
     $dffe                           1
     $eq                            34
     $logic_not                      3
     $mux                           75
     $ne                            15
     $not                           13
     $or                            12
     $pmux                          11
     $reduce_and                    12
     $reduce_bool                    5
     $reduce_or                     30


yosys> muxpack

4.88. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~68 debug messages>

yosys> opt_clean

4.89. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..

yosys> memory_libmap -lib +/rapidsilicon/genesis2/brams_new_swap.txt -limit 150 a:read_swapped

4.90. Executing MEMORY_LIBMAP pass (mapping memories to cells).

yosys> memory_libmap -lib +/rapidsilicon/genesis2/brams_new.txt -limit 150

4.91. Executing MEMORY_LIBMAP pass (mapping memories to cells).

yosys> rs_bram_split -new_mapping

4.92. Executing Rs_BRAM_Split pass.

yosys> techmap -autoproc -map +/rapidsilicon/genesis2/brams_map_new.v

4.93. Executing TECHMAP pass (map to technology primitives).

4.93.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/brams_map_new.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/brams_map_new.v' to AST representation.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_TDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM18_TDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM18_SDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_SDP'.
Successfully finished Verilog frontend.

4.93.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~6 debug messages>

yosys> techmap -map +/rapidsilicon/genesis2/brams_final_map_new.v

4.94. Executing TECHMAP pass (map to technology primitives).

4.94.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/brams_final_map_new.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/brams_final_map_new.v' to AST representation.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Successfully finished Verilog frontend.

4.94.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

yosys> pmuxtree

4.95. Executing PMUXTREE pass.

yosys> muxpack

4.96. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converting i2c_master.$auto$pmuxtree.cc:65:recursive_mux_generator$1304 ... i2c_master.$auto$pmuxtree.cc:65:recursive_mux_generator$1306 to a pmux with 2 cases.
Converted 2 (p)mux cells into 1 pmux cells.
<suppressed ~111 debug messages>

yosys> memory_map

4.97. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> stat

4.98. Printing statistics.

=== i2c_master ===

   Number of wires:                450
   Number of wire bits:           1176
   Number of public wires:         117
   Number of public wire bits:     285
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                381
     $adff                          22
     $adffe                         13
     $alu                            3
     $and                           53
     $bmux                           1
     $dff                            3
     $dffe                           1
     $eq                            34
     $logic_not                      3
     $mux                          123
     $ne                            15
     $not                           24
     $or                            22
     $pmux                           1
     $reduce_and                    12
     $reduce_bool                    5
     $reduce_or                     46


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis2/arith_map.v

4.99. Executing TECHMAP pass (map to technology primitives).

4.99.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.99.2. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/arith_map.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

4.99.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $bmux.
Using template $paramod$bf2533632d512eac76dd186c0da49367e29b8e98\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$b8c0a997bce700f23568a5ada79cc6781d1f5ca0\_90_alu for cells of type $alu.
Using template $paramod$d4fbf181fbf74ad2c33c84c81168c20bdbe88f93\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $dffe.
Using template $paramod$c15aee48e26a714a5f3d013cd387ce60c26c192c\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000011 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001101 for cells of type $lcu.
No more expansions possible.
<suppressed ~1259 debug messages>

yosys> stat

4.100. Printing statistics.

=== i2c_master ===

   Number of wires:                932
   Number of wire bits:           5699
   Number of public wires:         117
   Number of public wire bits:     285
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1606
     $_AND_                        160
     $_DFFE_PP0P_                   43
     $_DFFE_PP1P_                    8
     $_DFFE_PP_                      1
     $_DFF_PP0_                     40
     $_DFF_PP1_                      5
     $_DFF_P_                       10
     $_MUX_                        604
     $_NOT_                         88
     $_OR_                         387
     $_XOR_                        260


yosys> opt_expr

4.101. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.
<suppressed ~510 debug messages>

yosys> opt_merge -nomux

4.102. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
<suppressed ~654 debug messages>
Removed a total of 218 cells.

yosys> opt_muxtree

4.103. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \i2c_master..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

4.104. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \i2c_master.
Performed a total of 0 changes.

yosys> opt_merge

4.105. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
Removed a total of 0 cells.

yosys> opt_share

4.106. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe

4.107. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

4.108. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..
Removed 40 unused cells and 458 unused wires.
<suppressed ~41 debug messages>

yosys> opt_expr

4.109. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.
<suppressed ~5 debug messages>

yosys> opt_muxtree

4.110. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \i2c_master..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

4.111. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \i2c_master.
Performed a total of 0 changes.

yosys> opt_merge

4.112. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
Removed a total of 0 cells.

yosys> opt_share

4.113. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe

4.114. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

4.115. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..

yosys> opt_expr

4.116. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.
MAX OPT ITERATION = 2

yosys> opt_expr -full

4.117. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.
<suppressed ~140 debug messages>

yosys> techmap -map +/techmap.v

4.118. Executing TECHMAP pass (map to technology primitives).

4.118.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.118.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> stat

4.119. Printing statistics.

=== i2c_master ===

   Number of wires:                576
   Number of wire bits:           1335
   Number of public wires:         117
   Number of public wire bits:     285
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                925
     $_AND_                        162
     $_DFFE_PP0P_                   43
     $_DFFE_PP1P_                    8
     $_DFFE_PP_                      1
     $_DFF_PP0_                     40
     $_DFF_PP1_                      5
     $_DFF_P_                       10
     $_MUX_                        243
     $_NOT_                        109
     $_OR_                         280
     $_XOR_                         24


yosys> dfflegalize -cell $_SDFF_???_ 0 -cell $_SDFFE_????_ 0 t:$_SDFFCE_*

4.120. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

4.121. Printing statistics.

=== i2c_master ===

   Number of wires:                576
   Number of wire bits:           1335
   Number of public wires:         117
   Number of public wire bits:     285
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                925
     $_AND_                        162
     $_DFFE_PP0P_                   43
     $_DFFE_PP1P_                    8
     $_DFFE_PP_                      1
     $_DFF_PP0_                     40
     $_DFF_PP1_                      5
     $_DFF_P_                       10
     $_MUX_                        243
     $_NOT_                        109
     $_OR_                         280
     $_XOR_                         24


yosys> opt_expr

4.122. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.

yosys> opt_merge -nomux

4.123. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_muxtree

4.124. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \i2c_master..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

4.125. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \i2c_master.
Performed a total of 0 changes.

yosys> opt_merge

4.126. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -sat

4.127. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$2203 ($_DFF_PP0_) from module i2c_master.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$2783 ($_DFFE_PP0P_) from module i2c_master.

yosys> opt_clean

4.128. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..
Removed 20 unused cells and 31 unused wires.
<suppressed ~21 debug messages>

yosys> opt_expr

4.129. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.
<suppressed ~2 debug messages>

yosys> opt_muxtree

4.130. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \i2c_master..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

4.131. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \i2c_master.
Performed a total of 0 changes.

yosys> opt_merge

4.132. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -sat

4.133. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$2202 ($_DFF_PP0_) from module i2c_master.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$2782 ($_DFFE_PP0P_) from module i2c_master.

yosys> opt_clean

4.134. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..
Removed 11 unused cells and 2 unused wires.
<suppressed ~12 debug messages>

yosys> opt_expr

4.135. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.
<suppressed ~2 debug messages>

yosys> opt_muxtree

4.136. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \i2c_master..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

4.137. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \i2c_master.
Performed a total of 0 changes.

yosys> opt_merge

4.138. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -sat

4.139. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$2201 ($_DFF_PP0_) from module i2c_master.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$2781 ($_DFFE_PP0P_) from module i2c_master.

yosys> opt_clean

4.140. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..
Removed 20 unused cells and 11 unused wires.
<suppressed ~21 debug messages>

yosys> opt_expr

4.141. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.
<suppressed ~2 debug messages>

yosys> opt_muxtree

4.142. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \i2c_master..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

4.143. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \i2c_master.
Performed a total of 0 changes.

yosys> opt_merge

4.144. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -sat

4.145. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$2200 ($_DFF_PP0_) from module i2c_master.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$2780 ($_DFFE_PP0P_) from module i2c_master.

yosys> opt_clean

4.146. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..
Removed 11 unused cells and 3 unused wires.
<suppressed ~12 debug messages>

yosys> opt_expr

4.147. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.
<suppressed ~2 debug messages>

yosys> opt_muxtree

4.148. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \i2c_master..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

4.149. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \i2c_master.
Performed a total of 0 changes.

yosys> opt_merge

4.150. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -sat

4.151. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$2199 ($_DFF_PP0_) from module i2c_master.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$2779 ($_DFFE_PP0P_) from module i2c_master.

yosys> opt_clean

4.152. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..
Removed 20 unused cells and 11 unused wires.
<suppressed ~21 debug messages>

yosys> opt_expr

4.153. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.
<suppressed ~2 debug messages>

yosys> opt_muxtree

4.154. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \i2c_master..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

4.155. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \i2c_master.
Performed a total of 0 changes.

yosys> opt_merge

4.156. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -sat

4.157. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$2198 ($_DFF_PP0_) from module i2c_master.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$2778 ($_DFFE_PP0P_) from module i2c_master.

yosys> opt_clean

4.158. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..
Removed 11 unused cells and 3 unused wires.
<suppressed ~12 debug messages>

yosys> opt_expr

4.159. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.
<suppressed ~2 debug messages>

yosys> opt_muxtree

4.160. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \i2c_master..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

4.161. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \i2c_master.
Performed a total of 0 changes.

yosys> opt_merge

4.162. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -sat

4.163. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$2197 ($_DFF_PP0_) from module i2c_master.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$2777 ($_DFFE_PP0P_) from module i2c_master.

yosys> opt_clean

4.164. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..
Removed 17 unused cells and 8 unused wires.
<suppressed ~18 debug messages>

yosys> opt_expr

4.165. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.
<suppressed ~2 debug messages>

yosys> opt_muxtree

4.166. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \i2c_master..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

4.167. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \i2c_master.
Performed a total of 0 changes.

yosys> opt_merge

4.168. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -sat

4.169. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$2196 ($_DFF_PP0_) from module i2c_master.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$2776 ($_DFFE_PP0P_) from module i2c_master.

yosys> opt_clean

4.170. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..
Removed 11 unused cells and 3 unused wires.
<suppressed ~12 debug messages>

yosys> opt_expr

4.171. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.
<suppressed ~2 debug messages>

yosys> opt_muxtree

4.172. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \i2c_master..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

4.173. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \i2c_master.
Performed a total of 0 changes.

yosys> opt_merge

4.174. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -sat

4.175. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$2195 ($_DFF_PP0_) from module i2c_master.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$2775 ($_DFFE_PP0P_) from module i2c_master.

yosys> opt_clean

4.176. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..
Removed 14 unused cells and 6 unused wires.
<suppressed ~15 debug messages>

yosys> opt_expr

4.177. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.
<suppressed ~2 debug messages>

yosys> opt_muxtree

4.178. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \i2c_master..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

4.179. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \i2c_master.
Performed a total of 0 changes.

yosys> opt_merge

4.180. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -sat

4.181. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$2194 ($_DFF_PP0_) from module i2c_master.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$2774 ($_DFFE_PP0P_) from module i2c_master.

yosys> opt_clean

4.182. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..
Removed 9 unused cells and 4 unused wires.
<suppressed ~10 debug messages>

yosys> opt_expr

4.183. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.
<suppressed ~4 debug messages>
MAX OPT ITERATION = 10

yosys> abc -dff -keepff

4.184. Executing ABC pass (technology mapping using ABC).

4.184.1. Summary of detected clock domains:
  50 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1108, arst=\arst_i, srst={ }
  64 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1123, arst=\arst_i, srst={ }
  7 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1130, arst=\arst_i, srst={ }
  14 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$1091, arst=\arst_i, srst={ }
  16 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$1088, arst=\arst_i, srst={ }
  38 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1045, arst=\arst_i, srst={ }
  3 cells in clk=\wb_clk_i, en=$flatten\byte_controller.\bit_controller.$verific$n452$535, arst={ }, srst={ }
  17 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$1081, arst=\arst_i, srst={ }
  39 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1078, arst=\arst_i, srst={ }
  20 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$1052, arst=\arst_i, srst={ }
  41 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1061, arst=\arst_i, srst={ }
  17 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1071, arst=\arst_i, srst={ }
  5 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1054, arst=\arst_i, srst={ }
  39 cells in clk=\wb_clk_i, en={ }, arst={ }, srst={ }
  368 cells in clk=\wb_clk_i, en={ }, arst=\arst_i, srst={ }

4.184.2. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1108, asynchronously reset by \arst_i
Extracted 50 gates and 72 wires to a netlist network with 21 inputs and 15 outputs.

4.184.2.1. Executing ABC.

4.184.3. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1123, asynchronously reset by \arst_i
Extracted 64 gates and 90 wires to a netlist network with 24 inputs and 20 outputs.

4.184.3.1. Executing ABC.

4.184.4. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1130, asynchronously reset by \arst_i
Extracted 7 gates and 12 wires to a netlist network with 4 inputs and 5 outputs.

4.184.4.1. Executing ABC.

4.184.5. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$1091, asynchronously reset by \arst_i
Extracted 14 gates and 19 wires to a netlist network with 4 inputs and 8 outputs.

4.184.5.1. Executing ABC.

4.184.6. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$1088, asynchronously reset by \arst_i
Extracted 16 gates and 19 wires to a netlist network with 2 inputs and 5 outputs.

4.184.6.1. Executing ABC.

4.184.7. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1045, asynchronously reset by \arst_i
Extracted 38 gates and 56 wires to a netlist network with 17 inputs and 16 outputs.

4.184.7.1. Executing ABC.

4.184.8. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $flatten\byte_controller.\bit_controller.$verific$n452$535
Extracted 3 gates and 8 wires to a netlist network with 5 inputs and 3 outputs.

4.184.8.1. Executing ABC.

4.184.9. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$1081, asynchronously reset by \arst_i
Extracted 17 gates and 21 wires to a netlist network with 4 inputs and 13 outputs.

4.184.9.1. Executing ABC.

4.184.10. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1078, asynchronously reset by \arst_i
Extracted 39 gates and 63 wires to a netlist network with 24 inputs and 9 outputs.

4.184.10.1. Executing ABC.

4.184.11. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$1052, asynchronously reset by \arst_i
Extracted 20 gates and 29 wires to a netlist network with 8 inputs and 9 outputs.

4.184.11.1. Executing ABC.

4.184.12. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1061, asynchronously reset by \arst_i
Extracted 41 gates and 58 wires to a netlist network with 16 inputs and 28 outputs.

4.184.12.1. Executing ABC.

4.184.13. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1071, asynchronously reset by \arst_i
Extracted 17 gates and 33 wires to a netlist network with 15 inputs and 4 outputs.

4.184.13.1. Executing ABC.

4.184.14. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1054, asynchronously reset by \arst_i
Extracted 5 gates and 11 wires to a netlist network with 5 inputs and 4 outputs.

4.184.14.1. Executing ABC.

4.184.15. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i
Extracted 39 gates and 69 wires to a netlist network with 30 inputs and 12 outputs.

4.184.15.1. Executing ABC.

4.184.16. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, asynchronously reset by \arst_i
Extracted 368 gates and 433 wires to a netlist network with 63 inputs and 92 outputs.

4.184.16.1. Executing ABC.

yosys> abc -dff -keepff

4.185. Executing ABC pass (technology mapping using ABC).

4.185.1. Summary of detected clock domains:
  5 cells in clk=\wb_clk_i, en=$abc$4245$auto$opt_dff.cc:219:make_patterns_logic$1054, arst=\arst_i, srst={ }
  15 cells in clk=\wb_clk_i, en=$abc$4229$auto$opt_dff.cc:219:make_patterns_logic$1071, arst=\arst_i, srst={ }
  36 cells in clk=\wb_clk_i, en=$abc$4146$auto$opt_dff.cc:219:make_patterns_logic$1078, arst=\arst_i, srst={ }
  12 cells in clk=\wb_clk_i, en=$abc$4073$auto$opt_dff.cc:194:make_patterns_logic$1088, arst=\arst_i, srst={ }
  4 cells in clk=\wb_clk_i, en=$abc$4054$auto$opt_dff.cc:219:make_patterns_logic$1130, arst=\arst_i, srst={ }
  12 cells in clk=\wb_clk_i, en=$abc$4316$auto$opt_dff.cc:194:make_patterns_logic$1091, arst=\arst_i, srst={ }
  32 cells in clk=\wb_clk_i, en=$abc$4192$auto$opt_dff.cc:219:make_patterns_logic$1061, arst=\arst_i, srst={ }
  19 cells in clk=\wb_clk_i, en=$abc$4126$auto$opt_dff.cc:194:make_patterns_logic$1081, arst=\arst_i, srst={ }
  14 cells in clk=\wb_clk_i, en=$abc$4176$auto$opt_dff.cc:194:make_patterns_logic$1052, arst=\arst_i, srst={ }
  63 cells in clk=\wb_clk_i, en={ }, arst={ }, srst={ }
  5 cells in clk=\wb_clk_i, en=$abc$4121$flatten\byte_controller.\bit_controller.$verific$n452$535, arst={ }, srst={ }
  45 cells in clk=\wb_clk_i, en=$abc$4085$auto$opt_dff.cc:219:make_patterns_logic$1045, arst=\arst_i, srst={ }
  53 cells in clk=\wb_clk_i, en=$abc$3942$auto$opt_dff.cc:219:make_patterns_logic$1108, arst=\arst_i, srst={ }
  64 cells in clk=\wb_clk_i, en=$abc$3994$auto$opt_dff.cc:219:make_patterns_logic$1123, arst=\arst_i, srst={ }
  275 cells in clk=\wb_clk_i, en={ }, arst=\arst_i, srst={ }

4.185.2. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$4245$auto$opt_dff.cc:219:make_patterns_logic$1054, asynchronously reset by \arst_i
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 4 outputs.

4.185.2.1. Executing ABC.

4.185.3. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$4229$auto$opt_dff.cc:219:make_patterns_logic$1071, asynchronously reset by \arst_i
Extracted 15 gates and 31 wires to a netlist network with 16 inputs and 4 outputs.

4.185.3.1. Executing ABC.

4.185.4. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$4146$auto$opt_dff.cc:219:make_patterns_logic$1078, asynchronously reset by \arst_i
Extracted 36 gates and 59 wires to a netlist network with 23 inputs and 16 outputs.

4.185.4.1. Executing ABC.

4.185.5. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$4073$auto$opt_dff.cc:194:make_patterns_logic$1088, asynchronously reset by \arst_i
Extracted 12 gates and 14 wires to a netlist network with 2 inputs and 5 outputs.

4.185.5.1. Executing ABC.

4.185.6. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$4054$auto$opt_dff.cc:219:make_patterns_logic$1130, asynchronously reset by \arst_i
Extracted 4 gates and 8 wires to a netlist network with 4 inputs and 3 outputs.

4.185.6.1. Executing ABC.

4.185.7. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$4316$auto$opt_dff.cc:194:make_patterns_logic$1091, asynchronously reset by \arst_i
Extracted 12 gates and 18 wires to a netlist network with 6 inputs and 9 outputs.

4.185.7.1. Executing ABC.

4.185.8. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$4192$auto$opt_dff.cc:219:make_patterns_logic$1061, asynchronously reset by \arst_i
Extracted 32 gates and 48 wires to a netlist network with 16 inputs and 25 outputs.

4.185.8.1. Executing ABC.

4.185.9. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$4126$auto$opt_dff.cc:194:make_patterns_logic$1081, asynchronously reset by \arst_i
Extracted 19 gates and 23 wires to a netlist network with 3 inputs and 13 outputs.

4.185.9.1. Executing ABC.

4.185.10. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$4176$auto$opt_dff.cc:194:make_patterns_logic$1052, asynchronously reset by \arst_i
Extracted 14 gates and 22 wires to a netlist network with 8 inputs and 9 outputs.

4.185.10.1. Executing ABC.

4.185.11. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i
Extracted 63 gates and 93 wires to a netlist network with 30 inputs and 12 outputs.

4.185.11.1. Executing ABC.

4.185.12. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$4121$flatten\byte_controller.\bit_controller.$verific$n452$535
Extracted 5 gates and 12 wires to a netlist network with 7 inputs and 5 outputs.

4.185.12.1. Executing ABC.

4.185.13. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$4085$auto$opt_dff.cc:219:make_patterns_logic$1045, asynchronously reset by \arst_i
Extracted 45 gates and 72 wires to a netlist network with 27 inputs and 25 outputs.

4.185.13.1. Executing ABC.

4.185.14. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$3942$auto$opt_dff.cc:219:make_patterns_logic$1108, asynchronously reset by \arst_i
Extracted 53 gates and 71 wires to a netlist network with 18 inputs and 15 outputs.

4.185.14.1. Executing ABC.

4.185.15. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$3994$auto$opt_dff.cc:219:make_patterns_logic$1123, asynchronously reset by \arst_i
Extracted 64 gates and 83 wires to a netlist network with 19 inputs and 22 outputs.

4.185.15.1. Executing ABC.

4.185.16. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, asynchronously reset by \arst_i
Extracted 275 gates and 342 wires to a netlist network with 67 inputs and 91 outputs.

4.185.16.1. Executing ABC.

yosys> abc -dff -keepff

4.186. Executing ABC pass (technology mapping using ABC).

4.186.1. Summary of detected clock domains:
  5 cells in clk=\wb_clk_i, en=$abc$4647$abc$4245$auto$opt_dff.cc:219:make_patterns_logic$1054, arst=\arst_i, srst={ }
  16 cells in clk=\wb_clk_i, en=$abc$4653$abc$4229$auto$opt_dff.cc:219:make_patterns_logic$1071, arst=\arst_i, srst={ }
  36 cells in clk=\wb_clk_i, en=$abc$4669$abc$4146$auto$opt_dff.cc:219:make_patterns_logic$1078, arst=\arst_i, srst={ }
  12 cells in clk=\wb_clk_i, en=$abc$4706$abc$4073$auto$opt_dff.cc:194:make_patterns_logic$1088, arst=\arst_i, srst={ }
  5 cells in clk=\wb_clk_i, en=$abc$4718$abc$4054$auto$opt_dff.cc:219:make_patterns_logic$1130, arst=\arst_i, srst={ }
  12 cells in clk=\wb_clk_i, en=$abc$4723$abc$4316$auto$opt_dff.cc:194:make_patterns_logic$1091, arst=\arst_i, srst={ }
  32 cells in clk=\wb_clk_i, en=$abc$4736$abc$4192$auto$opt_dff.cc:219:make_patterns_logic$1061, arst=\arst_i, srst={ }
  18 cells in clk=\wb_clk_i, en=1'1, arst=\arst_i, srst={ }
  14 cells in clk=\wb_clk_i, en=$abc$4789$abc$4176$auto$opt_dff.cc:194:make_patterns_logic$1052, arst=\arst_i, srst={ }
  63 cells in clk=\wb_clk_i, en={ }, arst={ }, srst={ }
  5 cells in clk=\wb_clk_i, en=$abc$4869$abc$4121$flatten\byte_controller.\bit_controller.$verific$n452$535, arst={ }, srst={ }
  57 cells in clk=\wb_clk_i, en=$abc$4971$abc$3994$auto$opt_dff.cc:219:make_patterns_logic$1123, arst=\arst_i, srst={ }
  44 cells in clk=\wb_clk_i, en=$abc$4876$abc$4085$auto$opt_dff.cc:219:make_patterns_logic$1045, arst=\arst_i, srst={ }
  49 cells in clk=\wb_clk_i, en=$abc$4921$abc$3942$auto$opt_dff.cc:219:make_patterns_logic$1108, arst=\arst_i, srst={ }
  276 cells in clk=\wb_clk_i, en={ }, arst=\arst_i, srst={ }

4.186.2. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$4647$abc$4245$auto$opt_dff.cc:219:make_patterns_logic$1054, asynchronously reset by \arst_i
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 4 outputs.

4.186.2.1. Executing ABC.

4.186.3. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$4653$abc$4229$auto$opt_dff.cc:219:make_patterns_logic$1071, asynchronously reset by \arst_i
Extracted 16 gates and 32 wires to a netlist network with 16 inputs and 5 outputs.

4.186.3.1. Executing ABC.

4.186.4. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$4669$abc$4146$auto$opt_dff.cc:219:make_patterns_logic$1078, asynchronously reset by \arst_i
Extracted 36 gates and 58 wires to a netlist network with 22 inputs and 16 outputs.

4.186.4.1. Executing ABC.

4.186.5. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$4706$abc$4073$auto$opt_dff.cc:194:make_patterns_logic$1088, asynchronously reset by \arst_i
Extracted 12 gates and 15 wires to a netlist network with 3 inputs and 5 outputs.

4.186.5.1. Executing ABC.

4.186.6. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$4718$abc$4054$auto$opt_dff.cc:219:make_patterns_logic$1130, asynchronously reset by \arst_i
Extracted 5 gates and 9 wires to a netlist network with 4 inputs and 4 outputs.

4.186.6.1. Executing ABC.

4.186.7. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$4723$abc$4316$auto$opt_dff.cc:194:make_patterns_logic$1091, asynchronously reset by \arst_i
Extracted 12 gates and 18 wires to a netlist network with 6 inputs and 9 outputs.

4.186.7.1. Executing ABC.

4.186.8. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$4736$abc$4192$auto$opt_dff.cc:219:make_patterns_logic$1061, asynchronously reset by \arst_i
Extracted 32 gates and 48 wires to a netlist network with 16 inputs and 25 outputs.

4.186.8.1. Executing ABC.

4.186.9. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by 1'1, asynchronously reset by \arst_i
Extracted 18 gates and 21 wires to a netlist network with 3 inputs and 12 outputs.

4.186.9.1. Executing ABC.

4.186.10. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$4789$abc$4176$auto$opt_dff.cc:194:make_patterns_logic$1052, asynchronously reset by \arst_i
Extracted 14 gates and 22 wires to a netlist network with 8 inputs and 9 outputs.

4.186.10.1. Executing ABC.

4.186.11. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i
Extracted 63 gates and 93 wires to a netlist network with 30 inputs and 12 outputs.

4.186.11.1. Executing ABC.

4.186.12. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$4869$abc$4121$flatten\byte_controller.\bit_controller.$verific$n452$535
Extracted 5 gates and 12 wires to a netlist network with 7 inputs and 4 outputs.

4.186.12.1. Executing ABC.

4.186.13. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$4971$abc$3994$auto$opt_dff.cc:219:make_patterns_logic$1123, asynchronously reset by \arst_i
Extracted 57 gates and 76 wires to a netlist network with 19 inputs and 19 outputs.

4.186.13.1. Executing ABC.

4.186.14. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$4876$abc$4085$auto$opt_dff.cc:219:make_patterns_logic$1045, asynchronously reset by \arst_i
Extracted 44 gates and 71 wires to a netlist network with 27 inputs and 25 outputs.

4.186.14.1. Executing ABC.

4.186.15. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$4921$abc$3942$auto$opt_dff.cc:219:make_patterns_logic$1108, asynchronously reset by \arst_i
Extracted 49 gates and 68 wires to a netlist network with 19 inputs and 14 outputs.

4.186.15.1. Executing ABC.

4.186.16. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, asynchronously reset by \arst_i
Extracted 276 gates and 343 wires to a netlist network with 67 inputs and 91 outputs.

4.186.16.1. Executing ABC.

yosys> abc -dff -keepff

4.187. Executing ABC pass (technology mapping using ABC).

4.187.1. Summary of detected clock domains:
  44 cells in clk=\wb_clk_i, en=$abc$5641$abc$4921$abc$3942$auto$opt_dff.cc:219:make_patterns_logic$1108, arst=\arst_i, srst={ }
  5 cells in clk=\wb_clk_i, en=$abc$5309$abc$4647$abc$4245$auto$opt_dff.cc:219:make_patterns_logic$1054, arst=\arst_i, srst={ }
  15 cells in clk=\wb_clk_i, en=$abc$5315$abc$4653$abc$4229$auto$opt_dff.cc:219:make_patterns_logic$1071, arst=\arst_i, srst={ }
  37 cells in clk=\wb_clk_i, en=$abc$5332$abc$4669$abc$4146$auto$opt_dff.cc:219:make_patterns_logic$1078, arst=\arst_i, srst={ }
  12 cells in clk=\wb_clk_i, en=$abc$5370$abc$4706$abc$4073$auto$opt_dff.cc:194:make_patterns_logic$1088, arst=\arst_i, srst={ }
  4 cells in clk=\wb_clk_i, en=$abc$5383$abc$4718$abc$4054$auto$opt_dff.cc:219:make_patterns_logic$1130, arst=\arst_i, srst={ }
  12 cells in clk=\wb_clk_i, en=$abc$5389$abc$4723$abc$4316$auto$opt_dff.cc:194:make_patterns_logic$1091, arst=\arst_i, srst={ }
  33 cells in clk=\wb_clk_i, en=$abc$5402$abc$4736$abc$4192$auto$opt_dff.cc:219:make_patterns_logic$1061, arst=\arst_i, srst={ }
  18 cells in clk=\wb_clk_i, en=1'1, arst=\arst_i, srst={ }
  14 cells in clk=\wb_clk_i, en=$abc$5454$abc$4789$abc$4176$auto$opt_dff.cc:194:make_patterns_logic$1052, arst=\arst_i, srst={ }
  5 cells in clk=\wb_clk_i, en=$abc$5534$abc$4869$abc$4121$flatten\byte_controller.\bit_controller.$verific$n452$535, arst={ }, srst={ }
  55 cells in clk=\wb_clk_i, en=$abc$5540$abc$4971$abc$3994$auto$opt_dff.cc:219:make_patterns_logic$1123, arst=\arst_i, srst={ }
  63 cells in clk=\wb_clk_i, en={ }, arst={ }, srst={ }
  44 cells in clk=\wb_clk_i, en=$abc$5596$abc$4876$abc$4085$auto$opt_dff.cc:219:make_patterns_logic$1045, arst=\arst_i, srst={ }
  273 cells in clk=\wb_clk_i, en={ }, arst=\arst_i, srst={ }

4.187.2. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$5641$abc$4921$abc$3942$auto$opt_dff.cc:219:make_patterns_logic$1108, asynchronously reset by \arst_i
Extracted 44 gates and 63 wires to a netlist network with 19 inputs and 13 outputs.

4.187.2.1. Executing ABC.

4.187.3. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$5309$abc$4647$abc$4245$auto$opt_dff.cc:219:make_patterns_logic$1054, asynchronously reset by \arst_i
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 4 outputs.

4.187.3.1. Executing ABC.

4.187.4. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$5315$abc$4653$abc$4229$auto$opt_dff.cc:219:make_patterns_logic$1071, asynchronously reset by \arst_i
Extracted 15 gates and 31 wires to a netlist network with 16 inputs and 4 outputs.

4.187.4.1. Executing ABC.

4.187.5. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$5332$abc$4669$abc$4146$auto$opt_dff.cc:219:make_patterns_logic$1078, asynchronously reset by \arst_i
Extracted 37 gates and 59 wires to a netlist network with 22 inputs and 16 outputs.

4.187.5.1. Executing ABC.

4.187.6. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$5370$abc$4706$abc$4073$auto$opt_dff.cc:194:make_patterns_logic$1088, asynchronously reset by \arst_i
Extracted 12 gates and 15 wires to a netlist network with 3 inputs and 5 outputs.

4.187.6.1. Executing ABC.

4.187.7. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$5383$abc$4718$abc$4054$auto$opt_dff.cc:219:make_patterns_logic$1130, asynchronously reset by \arst_i
Extracted 4 gates and 8 wires to a netlist network with 4 inputs and 3 outputs.

4.187.7.1. Executing ABC.

4.187.8. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$5389$abc$4723$abc$4316$auto$opt_dff.cc:194:make_patterns_logic$1091, asynchronously reset by \arst_i
Extracted 12 gates and 18 wires to a netlist network with 6 inputs and 9 outputs.

4.187.8.1. Executing ABC.

4.187.9. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$5402$abc$4736$abc$4192$auto$opt_dff.cc:219:make_patterns_logic$1061, asynchronously reset by \arst_i
Extracted 33 gates and 49 wires to a netlist network with 16 inputs and 26 outputs.

4.187.9.1. Executing ABC.

4.187.10. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by 1'1, asynchronously reset by \arst_i
Extracted 18 gates and 21 wires to a netlist network with 3 inputs and 12 outputs.

4.187.10.1. Executing ABC.

4.187.11. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$5454$abc$4789$abc$4176$auto$opt_dff.cc:194:make_patterns_logic$1052, asynchronously reset by \arst_i
Extracted 14 gates and 22 wires to a netlist network with 8 inputs and 9 outputs.

4.187.11.1. Executing ABC.

4.187.12. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$5534$abc$4869$abc$4121$flatten\byte_controller.\bit_controller.$verific$n452$535
Extracted 5 gates and 12 wires to a netlist network with 7 inputs and 4 outputs.

4.187.12.1. Executing ABC.

4.187.13. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$5540$abc$4971$abc$3994$auto$opt_dff.cc:219:make_patterns_logic$1123, asynchronously reset by \arst_i
Extracted 55 gates and 74 wires to a netlist network with 19 inputs and 19 outputs.

4.187.13.1. Executing ABC.

4.187.14. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i
Extracted 63 gates and 93 wires to a netlist network with 30 inputs and 12 outputs.

4.187.14.1. Executing ABC.

4.187.15. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$5596$abc$4876$abc$4085$auto$opt_dff.cc:219:make_patterns_logic$1045, asynchronously reset by \arst_i
Extracted 44 gates and 71 wires to a netlist network with 27 inputs and 25 outputs.

4.187.15.1. Executing ABC.

4.187.16. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, asynchronously reset by \arst_i
Extracted 273 gates and 339 wires to a netlist network with 66 inputs and 93 outputs.

4.187.16.1. Executing ABC.

yosys> opt_ffinv

4.188. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt_expr

4.189. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.

yosys> opt_merge -nomux

4.190. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
<suppressed ~27 debug messages>
Removed a total of 9 cells.

yosys> opt_muxtree

4.191. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \i2c_master..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

4.192. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \i2c_master.
Performed a total of 0 changes.

yosys> opt_merge

4.193. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
Removed a total of 0 cells.

yosys> opt_share

4.194. Executing OPT_SHARE pass.

yosys> opt_dff -sat

4.195. Executing OPT_DFF pass (perform DFF optimizations).
Removing always-active EN on $abc$6129$auto$blifparse.cc:362:parse_blif$6135 ($_DFFE_PP0P_) from module i2c_master.
Removing always-active EN on $abc$6129$auto$blifparse.cc:362:parse_blif$6133 ($_DFFE_PP0P_) from module i2c_master.
Removing always-active EN on $abc$6129$auto$blifparse.cc:362:parse_blif$6132 ($_DFFE_PP0P_) from module i2c_master.
Removing always-active EN on $abc$6129$auto$blifparse.cc:362:parse_blif$6134 ($_DFFE_PP0P_) from module i2c_master.
Removing always-active EN on $abc$6129$auto$blifparse.cc:362:parse_blif$6131 ($_DFFE_PP0P_) from module i2c_master.
Removing always-active EN on $abc$6129$auto$blifparse.cc:362:parse_blif$6130 ($_DFFE_PP0P_) from module i2c_master.
Setting constant 0-bit at position 0 on $abc$6064$auto$blifparse.cc:362:parse_blif$6065 ($_DFFE_PP0P_) from module i2c_master.

yosys> opt_clean

4.196. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..
Removed 2 unused cells and 3203 unused wires.
<suppressed ~3 debug messages>

yosys> opt_expr

4.197. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.
<suppressed ~1 debug messages>

yosys> opt_muxtree

4.198. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \i2c_master..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

4.199. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \i2c_master.
Performed a total of 0 changes.

yosys> opt_merge

4.200. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
Removed a total of 0 cells.

yosys> opt_share

4.201. Executing OPT_SHARE pass.

yosys> opt_dff -sat

4.202. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $abc$6064$auto$blifparse.cc:362:parse_blif$6066 ($_DFFE_PP0P_) from module i2c_master.

yosys> opt_clean

4.203. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..
Removed 2 unused cells and 3 unused wires.
<suppressed ~3 debug messages>

yosys> opt_expr

4.204. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.
<suppressed ~1 debug messages>

yosys> opt_muxtree

4.205. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \i2c_master..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

4.206. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \i2c_master.
Performed a total of 0 changes.

yosys> opt_merge

4.207. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
Removed a total of 0 cells.

yosys> opt_share

4.208. Executing OPT_SHARE pass.

yosys> opt_dff -sat

4.209. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $abc$6064$auto$blifparse.cc:362:parse_blif$6067 ($_DFFE_PP0P_) from module i2c_master.

yosys> opt_clean

4.210. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..
Removed 3 unused cells and 4 unused wires.
<suppressed ~4 debug messages>

yosys> opt_expr

4.211. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.

yosys> opt_muxtree

4.212. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \i2c_master..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

4.213. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \i2c_master.
Performed a total of 0 changes.

yosys> opt_merge

4.214. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
Removed a total of 0 cells.

yosys> opt_share

4.215. Executing OPT_SHARE pass.

yosys> opt_dff -sat

4.216. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $abc$6335$auto$blifparse.cc:362:parse_blif$6352 ($_DFF_PP0_) from module i2c_master.

yosys> opt_clean

4.217. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..
Removed 4 unused cells and 4 unused wires.
<suppressed ~6 debug messages>

yosys> opt_expr

4.218. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.
<suppressed ~1 debug messages>
MAX OPT ITERATION = 4

yosys> bmuxmap

4.219. Executing BMUXMAP pass.

yosys> demuxmap

4.220. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> abc -script /tmp/yosys_qnF8xW/abc_tmp_1.scr

4.221. Executing ABC pass (technology mapping using ABC).

4.221.1. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Extracted 524 gates and 615 wires to a netlist network with 90 inputs and 96 outputs.

4.221.1.1. Executing ABC.
DE:   #PIs =  90  #Luts =   162  Max Lvl =   4  Avg Lvl =   1.62  [   0.09 sec. at Pass 0]{firstMap}[1]
DE:   #PIs =  90  #Luts =   123  Max Lvl =   4  Avg Lvl =   1.75  [   0.77 sec. at Pass 1]{initMapFlow}[2]
DE:   #PIs =  90  #Luts =   120  Max Lvl =   4  Avg Lvl =   1.72  [   0.39 sec. at Pass 2]{map}[2]
DE:   #PIs =  90  #Luts =   119  Max Lvl =   4  Avg Lvl =   1.69  [   0.24 sec. at Pass 3]{postMap}[6]
DE:   #PIs =  90  #Luts =   119  Max Lvl =   4  Avg Lvl =   1.69  [   0.31 sec. at Pass 4]{map}[12]
DE:   #PIs =  90  #Luts =   118  Max Lvl =   4  Avg Lvl =   1.71  [   0.27 sec. at Pass 5]{postMap}[16]
DE:   #PIs =  90  #Luts =   118  Max Lvl =   4  Avg Lvl =   1.71  [   0.50 sec. at Pass 6]{map}[16]
DE:   #PIs =  90  #Luts =   118  Max Lvl =   4  Avg Lvl =   1.71  [   1.22 sec. at Pass 7]{postMap}[16]
DE:   #PIs =  90  #Luts =   118  Max Lvl =   4  Avg Lvl =   1.71  [   0.58 sec. at Pass 8]{map}[16]
DE:   #PIs =  90  #Luts =   117  Max Lvl =   4  Avg Lvl =   1.55  [   1.17 sec. at Pass 9]{pushMap}[16]
DE:   #PIs =  90  #Luts =   116  Max Lvl =   5  Avg Lvl =   1.68  [   1.26 sec. at Pass 10]{postMap}[16]
DE:   #PIs =  90  #Luts =   116  Max Lvl =   5  Avg Lvl =   1.68  [   1.13 sec. at Pass 11]{map}[16]
DE:   #PIs =  90  #Luts =   116  Max Lvl =   4  Avg Lvl =   1.64  [   0.64 sec. at Pass 12]{postMap}[16]
DE:   #PIs =  90  #Luts =   116  Max Lvl =   4  Avg Lvl =   1.64  [   0.83 sec. at Pass 13]{map}[16]
DE:   #PIs =  90  #Luts =   116  Max Lvl =   4  Avg Lvl =   1.64  [   0.76 sec. at Pass 14]{postMap}[16]
DE:   #PIs =  90  #Luts =   116  Max Lvl =   4  Avg Lvl =   1.64  [   0.19 sec. at Pass 15]{map}[16]
DE:   #PIs =  90  #Luts =   116  Max Lvl =   4  Avg Lvl =   1.64  [   0.37 sec. at Pass 16]{pushMap}[16]
DE:   #PIs =  90  #Luts =   116  Max Lvl =   4  Avg Lvl =   1.64  [   0.15 sec. at Pass 17]{finalMap}[16]

yosys> opt_expr

4.222. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.

yosys> opt_merge -nomux

4.223. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
Removed a total of 0 cells.

yosys> opt_muxtree

4.224. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \i2c_master..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

4.225. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \i2c_master.
Performed a total of 0 changes.

yosys> opt_merge

4.226. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
Removed a total of 0 cells.

yosys> opt_share

4.227. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe

4.228. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

4.229. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..
Removed 0 unused cells and 612 unused wires.
<suppressed ~3 debug messages>

yosys> opt_expr

4.230. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.
MAX OPT ITERATION = 1

yosys> opt_ffinv

4.231. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 1 inverters.

yosys> stat

4.232. Printing statistics.

=== i2c_master ===

   Number of wires:                481
   Number of wire bits:            649
   Number of public wires:         114
   Number of public wire bits:     282
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                196
     $_DFFE_PP0P_                   32
     $_DFFE_PP_                      1
     $_DFF_PP0_                     39
     $_DFF_P_                       10
     $lut                          114


yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFFE_??_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_SDFF_???_ 0 -cell $_SDFFE_????_ 0 -cell $_DLATCH_?_ 0 -cell $_DLATCH_???_ 0

4.233. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

4.234. Printing statistics.

=== i2c_master ===

   Number of wires:                481
   Number of wire bits:            649
   Number of public wires:         114
   Number of public wire bits:     282
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                196
     $_DFFE_PP0P_                   32
     $_DFFE_PP_                      1
     $_DFF_PP0_                     39
     $_DFF_P_                       10
     $lut                          114


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis2/ffs_map.v

4.235. Executing TECHMAP pass (map to technology primitives).

4.235.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.235.2. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/ffs_map.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_PP0N_'.
Generating RTLIL representation for module `\$_SDFFE_PN0P_'.
Generating RTLIL representation for module `\$_SDFFE_PN0N_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFFE_PP1N_'.
Generating RTLIL representation for module `\$_SDFFE_PN1P_'.
Generating RTLIL representation for module `\$_SDFFE_PN1N_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP0N_'.
Generating RTLIL representation for module `\$_SDFFE_NN0P_'.
Generating RTLIL representation for module `\$_SDFFE_NN0N_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1N_'.
Generating RTLIL representation for module `\$_SDFFE_NN1P_'.
Generating RTLIL representation for module `\$_SDFFE_NN1N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_PP0_'.
Generating RTLIL representation for module `\$_DLATCH_NP0_'.
Generating RTLIL representation for module `\$_DLATCH_PN0_'.
Generating RTLIL representation for module `\$_DLATCH_NN0_'.
Generating RTLIL representation for module `\$_DLATCH_PP1_'.
Generating RTLIL representation for module `\$_DLATCH_NP1_'.
Generating RTLIL representation for module `\$_DLATCH_PN1_'.
Generating RTLIL representation for module `\$_DLATCH_NN1_'.
Successfully finished Verilog frontend.

4.235.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
No more expansions possible.
<suppressed ~331 debug messages>

yosys> opt_expr -mux_undef

4.236. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.
<suppressed ~2722 debug messages>

yosys> simplemap

4.237. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

4.238. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.

yosys> opt_merge

4.239. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
<suppressed ~381 debug messages>
Removed a total of 127 cells.

yosys> opt_dff -nodffe -nosdff

4.240. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

4.241. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..
Removed 0 unused cells and 609 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

4.242. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.
<suppressed ~9 debug messages>

yosys> opt_merge -nomux

4.243. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
Removed a total of 0 cells.

yosys> opt_muxtree

4.244. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \i2c_master..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

4.245. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \i2c_master.
Performed a total of 0 changes.

yosys> opt_merge

4.246. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
Removed a total of 0 cells.

yosys> opt_share

4.247. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

4.248. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

4.249. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..

yosys> opt_expr

4.250. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.
MAX OPT ITERATION = 1

yosys> abc -script /tmp/yosys_qnF8xW/abc_tmp_2.scr

4.251. Executing ABC pass (technology mapping using ABC).

4.251.1. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Extracted 396 gates and 488 wires to a netlist network with 90 inputs and 94 outputs.

4.251.1.1. Executing ABC.
DE:   #PIs =  90  #Luts =   116  Max Lvl =   3  Avg Lvl =   1.45  [   0.11 sec. at Pass 0]{firstMap}[1]
DE:   #PIs =  90  #Luts =   114  Max Lvl =   4  Avg Lvl =   1.62  [   0.36 sec. at Pass 1]{initMapFlow}[2]
DE:   #PIs =  90  #Luts =   114  Max Lvl =   4  Avg Lvl =   1.62  [   0.21 sec. at Pass 2]{map}[2]
DE:   #PIs =  90  #Luts =   114  Max Lvl =   4  Avg Lvl =   1.62  [   0.44 sec. at Pass 3]{postMap}[6]
DE:   #PIs =  90  #Luts =   114  Max Lvl =   4  Avg Lvl =   1.62  [   0.76 sec. at Pass 4]{map}[12]
DE:   #PIs =  90  #Luts =   114  Max Lvl =   4  Avg Lvl =   1.62  [   0.60 sec. at Pass 5]{postMap}[16]
DE:   #PIs =  90  #Luts =   114  Max Lvl =   4  Avg Lvl =   1.62  [   1.59 sec. at Pass 6]{pushMap}[16]
DE:   #PIs =  90  #Luts =   114  Max Lvl =   4  Avg Lvl =   1.62  [   1.33 sec. at Pass 7]{finalMap}[16]

yosys> opt_expr

4.252. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.

yosys> opt_merge -nomux

4.253. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
Removed a total of 0 cells.

yosys> opt_muxtree

4.254. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \i2c_master..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

4.255. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \i2c_master.
Performed a total of 0 changes.

yosys> opt_merge

4.256. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
Removed a total of 0 cells.

yosys> opt_share

4.257. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe

4.258. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

4.259. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..
Removed 0 unused cells and 426 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

4.260. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.
MAX OPT ITERATION = 1

yosys> hierarchy -check

4.261. Executing HIERARCHY pass (managing design hierarchy).

4.261.1. Analyzing design hierarchy..
Top module:  \i2c_master

4.261.2. Analyzing design hierarchy..
Top module:  \i2c_master
Removed 0 unused modules.

yosys> stat

4.262. Printing statistics.

=== i2c_master ===

   Number of wires:                481
   Number of wire bits:            649
   Number of public wires:         114
   Number of public wire bits:     282
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                196
     $lut                          114
     dff                            10
     dffe                            1
     dffr                           39
     dffre                          32


yosys> opt_clean -purge

4.263. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..
Removed 0 unused cells and 50 unused wires.
<suppressed ~50 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

4.264. Executing Verilog backend.
Dumping module `\i2c_master'.

Warnings: 252 unique messages, 252 total
End of script. Logfile hash: 78cc0c4623, CPU: user 4.00s system 0.17s, MEM: 32.70 MB peak
Yosys 0.18+10 (git sha1 92b23013e, gcc 11.2.0 -fPIC -Os)
Time spent: 93% 6x abc (57 sec), 1% 46x opt_expr (0 sec), ...
real 49.26
user 45.10
sys 15.73
