
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.64
 Yosys 0.18+10 (git sha1 c98b0e94e, gcc 9.4.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 00:39:28 2022.

yosys> verilog_defaults -add -I.

yosys> read -vhdl b10.vhd

yosys> verific -vhdl b10.vhd

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 00:39:28 2022.
VERIFIC-INFO [VHDL-1504] default VHDL library search path is now "/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008"
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'b10.vhd'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.standard' from file '/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/standard.vdb'
VERIFIC-INFO [VHDL-1012] b10.vhd:1: analyzing entity 'b10'
VERIFIC-INFO [VHDL-1010] b10.vhd:19: analyzing architecture 'behav'

yosys> synth_rs -top b10 -tech genesis -goal area -de -verilog synthesized.v

3. Executing synth_rs pass: v0.4.65

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v +/rapidsilicon/genesis/dsp_sim.v

3.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Successfully finished Verilog frontend.

3.3. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_sim.v' to AST representation.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\RS_DSP2_MULT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_ports'.
Generating RTLIL representation for module `\RS_DSP3'.
Generating RTLIL representation for module `\RS_DSP3_MULT'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_params'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top b10

3.4. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VHDL-1067] b10.vhd:1: processing 'b10(BEHAV)'
Importing module b10.

3.4.1. Analyzing design hierarchy..
Top module:  \b10

3.4.2. Analyzing design hierarchy..
Top module:  \b10
Removed 0 unused modules.

yosys> proc

3.5. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.5.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.5.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.5.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.5.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.5.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.5.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.5.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.5.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.5.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.5.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.5.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.5.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module b10.
<suppressed ~13 debug messages>

yosys> demuxmap

3.6. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> flatten

3.7. Executing FLATTEN pass (flatten design).

yosys> demuxmap

3.8. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> tribuf -logic -formal

3.9. Executing TRIBUF pass.

yosys> deminout

3.10. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module b10.

yosys> opt_clean

3.12. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b10..
Removed 3 unused cells and 21 unused wires.
<suppressed ~18 debug messages>

yosys> check

3.13. Executing CHECK pass (checking for obvious problems).
Checking module b10...
Found and reported 0 problems.

yosys> opt_expr

3.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module b10.

yosys> opt_merge -nomux

3.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b10'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.16. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b10..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port B of cell $verific$i37$b10.vhd:111$120: \key -> 1'1
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~28 debug messages>

yosys> opt_reduce

3.17. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b10.
Performed a total of 0 changes.

yosys> opt_merge

3.18. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b10'.
Removed a total of 0 cells.

yosys> opt_share

3.19. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.20. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $verific$voto3_reg$b10.vhd:165$179 ($aldff) from module b10.
Changing const-value async load to async reset on $verific$voto2_reg$b10.vhd:165$178 ($aldff) from module b10.
Changing const-value async load to async reset on $verific$voto1_reg$b10.vhd:165$177 ($aldff) from module b10.
Changing const-value async load to async reset on $verific$voto0_reg$b10.vhd:165$176 ($aldff) from module b10.
Changing const-value async load to async reset on $verific$v_out_reg$b10.vhd:165$185 ($aldff) from module b10.
Changing const-value async load to async reset on $verific$stato_reg$b10.vhd:165$175 ($aldff) from module b10.
Changing const-value async load to async reset on $verific$sign_reg$b10.vhd:165$180 ($aldff) from module b10.
Changing const-value async load to async reset on $verific$last_r_reg$b10.vhd:165$182 ($aldff) from module b10.
Changing const-value async load to async reset on $verific$last_g_reg$b10.vhd:165$181 ($aldff) from module b10.
Changing const-value async load to async reset on $verific$cts_reg$b10.vhd:165$183 ($aldff) from module b10.
Changing const-value async load to async reset on $verific$ctr_reg$b10.vhd:165$184 ($aldff) from module b10.

yosys> opt_clean

3.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b10..

yosys> opt_expr

3.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module b10.
MAX OPT ITERATION = 1

yosys> fsm -encoding binary

3.23. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.23.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.23.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.23.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.23.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b10..

yosys> fsm_opt

3.23.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.23.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.23.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.23.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt_expr

3.24. Executing OPT_EXPR pass (perform const folding).
Optimizing module b10.

yosys> opt_merge -nomux

3.25. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b10'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.26. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b10..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~28 debug messages>

yosys> opt_reduce

3.27. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b10.
Performed a total of 0 changes.

yosys> opt_merge

3.28. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b10'.
Removed a total of 0 cells.

yosys> opt_share

3.29. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.30. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $verific$sign_reg$b10.vhd:165$180 ($adff) from module b10.
Setting constant 0-bit at position 1 on $verific$sign_reg$b10.vhd:165$180 ($adff) from module b10.
Setting constant 0-bit at position 2 on $verific$sign_reg$b10.vhd:165$180 ($adff) from module b10.

yosys> opt_clean

3.31. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b10..

yosys> opt_expr

3.32. Executing OPT_EXPR pass (perform const folding).
Optimizing module b10.
MAX OPT ITERATION = 1

yosys> wreduce -keepdc

3.33. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 4) from wire b10.$verific$n82$77.

yosys> peepopt

3.34. Executing PEEPOPT pass (run peephole optimizers).

yosys> opt_clean

3.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b10..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> demuxmap

3.36. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> stat

3.37. Printing statistics.

=== b10 ===

   Number of wires:                 88
   Number of wire bits:            142
   Number of public wires:          21
   Number of public wire bits:      33
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 77
     $adff                          11
     $and                            8
     $bmux                          11
     $mux                           36
     $not                            7
     $xor                            4


yosys> wreduce t:$mul

3.38. Executing WREDUCE pass (reducing word size of cells).

yosys> rs_dsp_macc

3.39. Executing RS_DSP_MACC pass.

yosys> techmap -map +/mul2dsp.v -D DSP_A_MAXWIDTH=20 -D DSP_B_MAXWIDTH=18 -D DSP_A_MINWIDTH=11 -D DSP_B_MINWIDTH=10 -D DSP_NAME=$__RS_MUL20X18

3.40. Executing TECHMAP pass (map to technology primitives).

3.40.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/mul2dsp.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

3.40.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

yosys> chtype -set $mul t:$__soft_mul

yosys> techmap -map +/mul2dsp.v -D DSP_A_MAXWIDTH=10 -D DSP_B_MAXWIDTH=9 -D DSP_A_MINWIDTH=4 -D DSP_B_MINWIDTH=4 -D DSP_NAME=$__RS_MUL10X9

3.41. Executing TECHMAP pass (map to technology primitives).

3.41.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/mul2dsp.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

3.41.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

yosys> chtype -set $mul t:$__soft_mul

yosys> techmap -map +/rapidsilicon/genesis/dsp_map.v -D USE_DSP_CFG_PARAMS=0

3.42. Executing TECHMAP pass (map to technology primitives).

3.42.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_map.v' to AST representation.
Generating RTLIL representation for module `\$__RS_MUL20X18'.
Generating RTLIL representation for module `\$__RS_MUL10X9'.
Successfully finished Verilog frontend.

3.42.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

yosys> rs_dsp_simd

3.43. Executing RS_DSP_SIMD pass.

yosys> techmap -map +/rapidsilicon/genesis/dsp_final_map.v

3.44. Executing TECHMAP pass (map to technology primitives).

3.44.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_final_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_final_map.v' to AST representation.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_params'.
Successfully finished Verilog frontend.

3.44.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~6 debug messages>

yosys> rs_dsp_io_regs

3.45. Executing RS_DSP_IO_REGS pass.

yosys> alumacc

3.46. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module b10:
  created 0 $alu and 0 $macc cells.

yosys> opt_expr

3.47. Executing OPT_EXPR pass (perform const folding).
Optimizing module b10.

yosys> opt_merge -nomux

3.48. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b10'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.49. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b10..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~28 debug messages>

yosys> opt_reduce

3.50. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b10.
Performed a total of 0 changes.

yosys> opt_merge

3.51. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b10'.
Removed a total of 0 cells.

yosys> opt_share

3.52. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.53. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.54. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b10..

yosys> opt_expr

3.55. Executing OPT_EXPR pass (perform const folding).
Optimizing module b10.
MAX OPT ITERATION = 1

yosys> stat

3.56. Printing statistics.

=== b10 ===

   Number of wires:                 88
   Number of wire bits:            142
   Number of public wires:          21
   Number of public wire bits:      33
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 77
     $adff                          11
     $and                            8
     $bmux                          11
     $mux                           36
     $not                            7
     $xor                            4


yosys> memory -nomap

3.57. Executing MEMORY pass.

yosys> opt_mem

3.57.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.57.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.57.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.57.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.57.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.57.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b10..

yosys> memory_share

3.57.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.57.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.57.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b10..

yosys> memory_collect

3.57.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.58. Printing statistics.

=== b10 ===

   Number of wires:                 88
   Number of wire bits:            142
   Number of public wires:          21
   Number of public wire bits:      33
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 77
     $adff                          11
     $and                            8
     $bmux                          11
     $mux                           36
     $not                            7
     $xor                            4


yosys> muxpack

3.59. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~32 debug messages>

yosys> opt_clean

3.60. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b10..

yosys> memory_bram -rules +/rapidsilicon/genesis/brams.txt

3.61. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).

yosys> techmap -map +/rapidsilicon/genesis/brams_map.v

3.62. Executing TECHMAP pass (map to technology primitives).

3.62.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/brams_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_TDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM18_TDP'.
/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/brams_map.v:236: Warning: Range [2:0] select out of bounds on signal `\DOP': Setting 1 MSB bits to undef.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_SDP'.
Successfully finished Verilog frontend.

3.62.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~5 debug messages>

yosys> pmuxtree

3.63. Executing PMUXTREE pass.

yosys> muxpack

3.64. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~32 debug messages>

yosys> memory_map

3.65. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> stat

3.66. Printing statistics.

=== b10 ===

   Number of wires:                 88
   Number of wire bits:            142
   Number of public wires:          21
   Number of public wire bits:      33
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 77
     $adff                          11
     $and                            8
     $bmux                          11
     $mux                           36
     $not                            7
     $xor                            4


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.67. Executing TECHMAP pass (map to technology primitives).

3.67.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.67.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.67.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $bmux.
No more expansions possible.
<suppressed ~148 debug messages>

yosys> stat

3.68. Printing statistics.

=== b10 ===

   Number of wires:                132
   Number of wire bits:            442
   Number of public wires:          21
   Number of public wire bits:      33
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                403
     $_AND_                          8
     $_DFF_PP0_                     17
     $_MUX_                        367
     $_NOT_                          7
     $_XOR_                          4


yosys> opt_expr

3.69. Executing OPT_EXPR pass (perform const folding).
Optimizing module b10.
<suppressed ~129 debug messages>

yosys> opt_merge -nomux

3.70. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b10'.
<suppressed ~39 debug messages>
Removed a total of 13 cells.

yosys> opt_muxtree

3.71. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b10..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.72. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b10.
Performed a total of 0 changes.

yosys> opt_merge

3.73. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b10'.
Removed a total of 0 cells.

yosys> opt_share

3.74. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.75. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.76. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b10..
Removed 3 unused cells and 12 unused wires.
<suppressed ~4 debug messages>

yosys> opt_expr

3.77. Executing OPT_EXPR pass (perform const folding).
Optimizing module b10.

yosys> opt_muxtree

3.78. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b10..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.79. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b10.
Performed a total of 0 changes.

yosys> opt_merge

3.80. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b10'.
Removed a total of 0 cells.

yosys> opt_share

3.81. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.82. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.83. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b10..

yosys> opt_expr

3.84. Executing OPT_EXPR pass (perform const folding).
Optimizing module b10.
MAX OPT ITERATION = 2

yosys> opt_expr -full

3.85. Executing OPT_EXPR pass (perform const folding).
Optimizing module b10.
<suppressed ~70 debug messages>

yosys> techmap -map +/techmap.v

3.86. Executing TECHMAP pass (map to technology primitives).

3.86.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.86.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> opt_expr

3.87. Executing OPT_EXPR pass (perform const folding).
Optimizing module b10.

yosys> opt_merge -nomux

3.88. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b10'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.89. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b10..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.90. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b10.
Performed a total of 0 changes.

yosys> opt_merge

3.91. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b10'.
Removed a total of 0 cells.

yosys> opt_dff -nosdff -nodffe -sat

3.92. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.93. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b10..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.94. Executing OPT_EXPR pass (perform const folding).
Optimizing module b10.
MAX OPT ITERATION = 1

yosys> abc -dff

3.95. Executing ABC pass (technology mapping using ABC).

3.95.1. Summary of detected clock domains:
  219 cells in clk=\clock, en={ }, arst=\reset, srst={ }

3.95.2. Extracting gate netlist of module `\b10' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 219 gates and 232 wires to a netlist network with 11 inputs and 6 outputs.

3.95.2.1. Executing ABC.

yosys> abc -dff

3.96. Executing ABC pass (technology mapping using ABC).

3.96.1. Summary of detected clock domains:
  168 cells in clk=\clock, en={ }, arst=\reset, srst={ }

3.96.2. Extracting gate netlist of module `\b10' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 168 gates and 179 wires to a netlist network with 11 inputs and 6 outputs.

3.96.2.1. Executing ABC.

yosys> abc -dff

3.97. Executing ABC pass (technology mapping using ABC).

3.97.1. Summary of detected clock domains:
  152 cells in clk=\clock, en={ }, arst=\reset, srst={ }

3.97.2. Extracting gate netlist of module `\b10' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 152 gates and 163 wires to a netlist network with 11 inputs and 6 outputs.

3.97.2.1. Executing ABC.

yosys> abc -dff

3.98. Executing ABC pass (technology mapping using ABC).

3.98.1. Summary of detected clock domains:
  145 cells in clk=\clock, en={ }, arst=\reset, srst={ }

3.98.2. Extracting gate netlist of module `\b10' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 145 gates and 156 wires to a netlist network with 11 inputs and 6 outputs.

3.98.2.1. Executing ABC.

yosys> opt_ffinv

3.99. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt_expr

3.100. Executing OPT_EXPR pass (perform const folding).
Optimizing module b10.

yosys> opt_merge -nomux

3.101. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b10'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.102. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b10..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.103. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b10.
Performed a total of 0 changes.

yosys> opt_merge

3.104. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b10'.
Removed a total of 0 cells.

yosys> opt_share

3.105. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.106. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $abc$1295$auto$blifparse.cc:362:parse_blif$1311 ($_DFF_PP0_) from module b10 (D = $abc$1295$lo07, Q = $abc$1295$lo15).
Adding EN signal on $abc$1295$auto$blifparse.cc:362:parse_blif$1310 ($_DFF_PP0_) from module b10 (D = $abc$1295$lo06, Q = $abc$1295$lo14).
Adding EN signal on $abc$1295$auto$blifparse.cc:362:parse_blif$1309 ($_DFF_PP0_) from module b10 (D = $abc$1295$lo05, Q = $abc$1295$lo13).
Adding EN signal on $abc$1295$auto$blifparse.cc:362:parse_blif$1308 ($_DFF_PP0_) from module b10 (D = $abc$1295$lo04, Q = $abc$1295$lo12).
Adding EN signal on $abc$1295$auto$blifparse.cc:362:parse_blif$1305 ($_DFF_PP0_) from module b10 (D = $abc$1295$r_button, Q = $abc$1295$lo09).
Adding EN signal on $abc$1295$auto$blifparse.cc:362:parse_blif$1304 ($_DFF_PP0_) from module b10 (D = $abc$1295$g_button, Q = $abc$1295$lo08).

yosys> opt_clean

3.107. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b10..
Removed 6 unused cells and 650 unused wires.
<suppressed ~14 debug messages>

yosys> opt_expr

3.108. Executing OPT_EXPR pass (perform const folding).
Optimizing module b10.

yosys> opt_muxtree

3.109. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b10..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.110. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b10.
Performed a total of 0 changes.

yosys> opt_merge

3.111. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b10'.
Removed a total of 0 cells.

yosys> opt_share

3.112. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.113. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.114. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b10..

yosys> opt_expr

3.115. Executing OPT_EXPR pass (perform const folding).
Optimizing module b10.
MAX OPT ITERATION = 2

yosys> bmuxmap

3.116. Executing BMUXMAP pass.

yosys> demuxmap

3.117. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> abc -script /tmp/yosys_xg6CgU/abc_tmp_1.scr

3.118. Executing ABC pass (technology mapping using ABC).

3.118.1. Extracting gate netlist of module `\b10' to `<abc-temp-dir>/input.blif'..
Extracted 123 gates and 146 wires to a netlist network with 23 inputs and 13 outputs.

3.118.1.1. Executing ABC.
DE:   #PIs =  23  #Luts =    31  Max Lvl =   3  Avg Lvl =   1.85  [   0.26 sec. at Pass 0]
DE:   #PIs =  23  #Luts =    27  Max Lvl =   3  Avg Lvl =   1.92  [   0.54 sec. at Pass 1]
DE:   #PIs =  23  #Luts =    27  Max Lvl =   3  Avg Lvl =   1.92  [   0.67 sec. at Pass 2]
DE:   #PIs =  23  #Luts =    27  Max Lvl =   3  Avg Lvl =   1.92  [   0.79 sec. at Pass 3]
DE:   #PIs =  23  #Luts =    27  Max Lvl =   3  Avg Lvl =   1.92  [   0.35 sec. at Pass 4]
DE:   #PIs =  23  #Luts =    26  Max Lvl =   3  Avg Lvl =   1.77  [   1.33 sec. at Pass 5]
DE:   #PIs =  23  #Luts =    26  Max Lvl =   3  Avg Lvl =   1.77  [   0.61 sec. at Pass 6]
DE:   #PIs =  23  #Luts =    26  Max Lvl =   3  Avg Lvl =   1.77  [   1.39 sec. at Pass 7]
DE:   #PIs =  23  #Luts =    26  Max Lvl =   3  Avg Lvl =   1.77  [   0.80 sec. at Pass 8]
DE:   #PIs =  23  #Luts =    25  Max Lvl =   3  Avg Lvl =   1.85  [   5.91 sec. at Pass 9]
DE:   #PIs =  23  #Luts =    25  Max Lvl =   3  Avg Lvl =   1.85  [   2.13 sec. at Pass 10]
DE:   #PIs =  23  #Luts =    24  Max Lvl =   3  Avg Lvl =   2.00  [   0.80 sec. at Pass 11]
DE:   #PIs =  23  #Luts =    24  Max Lvl =   3  Avg Lvl =   2.00  [   0.92 sec. at Pass 12]
DE:   #PIs =  23  #Luts =    24  Max Lvl =   3  Avg Lvl =   2.00  [   0.78 sec. at Pass 13]
DE:   #PIs =  23  #Luts =    24  Max Lvl =   3  Avg Lvl =   2.00  [   0.89 sec. at Pass 14]
DE:   #PIs =  23  #Luts =    23  Max Lvl =   3  Avg Lvl =   1.92  [   3.51 sec. at Pass 15]
DE:   #PIs =  23  #Luts =    23  Max Lvl =   3  Avg Lvl =   1.92  [   1.04 sec. at Pass 16]
DE:   #PIs =  23  #Luts =    23  Max Lvl =   3  Avg Lvl =   1.92  [   1.45 sec. at Pass 17]
DE:   #PIs =  23  #Luts =    23  Max Lvl =   3  Avg Lvl =   1.92  [   1.09 sec. at Pass 18]
DE:   #PIs =  23  #Luts =    23  Max Lvl =   3  Avg Lvl =   1.92  [   4.58 sec. at Pass 19]
DE:   #PIs =  23  #Luts =    23  Max Lvl =   3  Avg Lvl =   1.92  [   0.91 sec. at Pass 20]

yosys> opt_expr

3.119. Executing OPT_EXPR pass (perform const folding).
Optimizing module b10.

yosys> opt_merge -nomux

3.120. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b10'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.121. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b10..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.122. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b10.
Performed a total of 0 changes.

yosys> opt_merge

3.123. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b10'.
Removed a total of 0 cells.

yosys> opt_share

3.124. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.125. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.126. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b10..
Removed 0 unused cells and 146 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.127. Executing OPT_EXPR pass (perform const folding).
Optimizing module b10.
MAX OPT ITERATION = 1

yosys> opt_ffinv

3.128. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> stat

3.129. Printing statistics.

=== b10 ===

   Number of wires:                 47
   Number of wire bits:             56
   Number of public wires:          14
   Number of public wire bits:      23
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 39
     $_DFFE_PP0N_                    5
     $_DFFE_PP0P_                    1
     $_DFF_PP0_                     10
     $lut                           23


yosys> shregmap -minlen 8 -maxlen 20

3.130. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.131. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.132. Printing statistics.

=== b10 ===

   Number of wires:                 47
   Number of wire bits:             56
   Number of public wires:          14
   Number of public wire bits:      23
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 39
     $_DFFE_PP0N_                    5
     $_DFFE_PP0P_                    1
     $_DFF_PP0_                     10
     $lut                           23


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.133. Executing TECHMAP pass (map to technology primitives).

3.133.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.133.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.133.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using template \$_DFFE_PP0N_ for cells of type $_DFFE_PP0N_.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~196 debug messages>

yosys> opt_expr -mux_undef

3.134. Executing OPT_EXPR pass (perform const folding).
Optimizing module b10.
<suppressed ~888 debug messages>

yosys> simplemap

3.135. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.136. Executing OPT_EXPR pass (perform const folding).
Optimizing module b10.

yosys> opt_merge

3.137. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b10'.
<suppressed ~216 debug messages>
Removed a total of 72 cells.

yosys> opt_dff -nodffe -nosdff

3.138. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.139. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b10..
Removed 0 unused cells and 125 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.140. Executing OPT_EXPR pass (perform const folding).
Optimizing module b10.
<suppressed ~17 debug messages>

yosys> opt_merge -nomux

3.141. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b10'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.142. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b10..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.143. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b10.
Performed a total of 0 changes.

yosys> opt_merge

3.144. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b10'.
Removed a total of 0 cells.

yosys> opt_share

3.145. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.146. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.147. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b10..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.148. Executing OPT_EXPR pass (perform const folding).
Optimizing module b10.
MAX OPT ITERATION = 1

yosys> abc -script /tmp/yosys_xg6CgU/abc_tmp_2.scr

3.149. Executing ABC pass (technology mapping using ABC).

3.149.1. Extracting gate netlist of module `\b10' to `<abc-temp-dir>/input.blif'..
Extracted 165 gates and 191 wires to a netlist network with 24 inputs and 14 outputs.

3.149.1.1. Executing ABC.
DE:   #PIs =  24  #Luts =    24  Max Lvl =   3  Avg Lvl =   1.79  [   0.22 sec. at Pass 0]
DE:   #PIs =  24  #Luts =    24  Max Lvl =   3  Avg Lvl =   1.79  [   0.51 sec. at Pass 1]
DE:   #PIs =  24  #Luts =    24  Max Lvl =   3  Avg Lvl =   1.79  [   0.19 sec. at Pass 2]
DE:   #PIs =  24  #Luts =    24  Max Lvl =   3  Avg Lvl =   1.79  [   0.47 sec. at Pass 3]
DE:   #PIs =  24  #Luts =    24  Max Lvl =   3  Avg Lvl =   1.79  [   0.15 sec. at Pass 4]
DE:   #PIs =  24  #Luts =    24  Max Lvl =   3  Avg Lvl =   1.79  [   0.84 sec. at Pass 5]
DE:   #PIs =  24  #Luts =    24  Max Lvl =   3  Avg Lvl =   1.79  [   2.40 sec. at Pass 6]
DE:   #PIs =  24  #Luts =    24  Max Lvl =   3  Avg Lvl =   1.79  [   0.27 sec. at Pass 7]

yosys> opt_expr

3.150. Executing OPT_EXPR pass (perform const folding).
Optimizing module b10.

yosys> opt_merge -nomux

3.151. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b10'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.152. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b10..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.153. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b10.
Performed a total of 0 changes.

yosys> opt_merge

3.154. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b10'.
Removed a total of 0 cells.

yosys> opt_share

3.155. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.156. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.157. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b10..
Removed 0 unused cells and 133 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.158. Executing OPT_EXPR pass (perform const folding).
Optimizing module b10.
MAX OPT ITERATION = 1

yosys> hierarchy -check

3.159. Executing HIERARCHY pass (managing design hierarchy).

3.159.1. Analyzing design hierarchy..
Top module:  \b10

3.159.2. Analyzing design hierarchy..
Top module:  \b10
Removed 0 unused modules.

yosys> stat

3.160. Printing statistics.

=== b10 ===

   Number of wires:                 48
   Number of wire bits:             57
   Number of public wires:          14
   Number of public wire bits:      23
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 40
     $lut                           24
     dffsre                         16


yosys> opt_clean -purge

3.161. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b10..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.162. Executing Verilog backend.
Dumping module `\b10'.

Warnings: 1 unique messages, 1 total
End of script. Logfile hash: 7cca0b45d5, CPU: user 0.55s system 0.01s, MEM: 32.28 MB peak
Yosys 0.18+10 (git sha1 c98b0e94e, gcc 9.4.0 -fPIC -Os)
Time spent: 99% 6x abc (206 sec), 0% 25x opt_expr (0 sec), ...
real 43.22
user 180.08
sys 27.27
