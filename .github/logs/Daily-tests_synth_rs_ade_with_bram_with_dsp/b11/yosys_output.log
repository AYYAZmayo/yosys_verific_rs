
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.64
 Yosys 0.18+10 (git sha1 c98b0e94e, gcc 9.4.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 00:39:28 2022.

yosys> verilog_defaults -add -I.

yosys> read -vhdl b11.vhd

yosys> verific -vhdl b11.vhd

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 00:39:28 2022.
VERIFIC-INFO [VHDL-1504] default VHDL library search path is now "/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008"
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'b11.vhd'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.standard' from file '/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/standard.vdb'
VERIFIC-INFO [VHDL-1012] b11.vhd:1: analyzing entity 'b11'
VERIFIC-INFO [VHDL-1010] b11.vhd:11: analyzing architecture 'behav'

yosys> synth_rs -top b11 -tech genesis -goal area -de -verilog synthesized.v

3. Executing synth_rs pass: v0.4.65

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v +/rapidsilicon/genesis/dsp_sim.v

3.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Successfully finished Verilog frontend.

3.3. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_sim.v' to AST representation.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\RS_DSP2_MULT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_ports'.
Generating RTLIL representation for module `\RS_DSP3'.
Generating RTLIL representation for module `\RS_DSP3_MULT'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_params'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top b11

3.4. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VHDL-1067] b11.vhd:1: processing 'b11(BEHAV)'
Importing module b11.

3.4.1. Analyzing design hierarchy..
Top module:  \b11

3.4.2. Analyzing design hierarchy..
Top module:  \b11
Removed 0 unused modules.

yosys> proc

3.5. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.5.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.5.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.5.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.5.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.5.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.5.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.5.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.5.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.5.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.5.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.5.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.5.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.
<suppressed ~3 debug messages>

yosys> demuxmap

3.6. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> flatten

3.7. Executing FLATTEN pass (flatten design).

yosys> demuxmap

3.8. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> tribuf -logic -formal

3.9. Executing TRIBUF pass.

yosys> deminout

3.10. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.

yosys> opt_clean

3.12. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..
Removed 1 unused cells and 29 unused wires.
<suppressed ~13 debug messages>

yosys> check

3.13. Executing CHECK pass (checking for obvious problems).
Checking module b11...
Found and reported 0 problems.

yosys> opt_expr

3.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.

yosys> opt_merge -nomux

3.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.16. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~9 debug messages>

yosys> opt_reduce

3.17. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.18. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_share

3.19. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.20. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $verific$x_out_reg$b11.vhd:116$137 ($aldff) from module b11.
Changing const-value async load to async reset on $verific$stato_reg$b11.vhd:116$133 ($aldff) from module b11.
Changing const-value async load to async reset on $verific$r_in_reg$b11.vhd:116$134 ($aldff) from module b11.
Changing const-value async load to async reset on $verific$cont_reg$b11.vhd:116$135 ($aldff) from module b11.
Changing const-value async load to async reset on $verific$cont1_reg$b11.vhd:116$136 ($aldff) from module b11.

yosys> opt_clean

3.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..

yosys> opt_expr

3.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.
MAX OPT ITERATION = 1

yosys> fsm -encoding binary

3.23. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.23.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.23.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.23.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.23.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..

yosys> fsm_opt

3.23.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.23.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.23.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.23.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt_expr

3.24. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.

yosys> opt_merge -nomux

3.25. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.26. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~9 debug messages>

yosys> opt_reduce

3.27. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.28. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_share

3.29. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.30. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 5 on $verific$cont_reg$b11.vhd:116$135 ($adff) from module b11.

yosys> opt_clean

3.31. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..

yosys> opt_expr

3.32. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.
MAX OPT ITERATION = 1

yosys> wreduce -keepdc

3.33. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 6) from port A of cell b11.$verific$LessThan_11$b11.vhd:52$82 ($lt).
Removed top 1 bits (of 6) from port B of cell b11.$verific$LessThan_11$b11.vhd:52$82 ($lt).
Removed top 1 bits (of 6) from port A of cell b11.$verific$add_12$b11.vhd:53$83 ($add).
Removed top 5 bits (of 6) from port B of cell b11.$verific$add_12$b11.vhd:53$83 ($add).
Removed top 1 bits (of 7) from port Y of cell b11.$verific$add_12$b11.vhd:53$83 ($add).
Removed top 1 bits (of 6) from port B of cell b11.$verific$LessThan_16$b11.vhd:59$88 ($le).
Removed top 1 bits (of 7) from mux cell b11.$verific$mux_28$b11.vhd:69$92 ($mux).
Removed top 3 bits (of 9) from port A of cell b11.$verific$add_30$b11.vhd:73$93 ($add).
Removed top 4 bits (of 10) from port A of cell b11.$verific$sub_32$b11.vhd:76$94 ($sub).
Removed top 1 bits (of 10) from port Y of cell b11.$verific$sub_32$b11.vhd:76$94 ($sub).
Removed top 1 bits (of 10) from port B of cell b11.$verific$sub_32$b11.vhd:76$94 ($sub).
Removed top 1 bits (of 9) from port B of cell b11.$verific$LessThan_36$b11.vhd:80$97 ($lt).
Removed top 5 bits (of 10) from port B of cell b11.$verific$sub_37$b11.vhd:81$98 ($sub).
Removed top 1 bits (of 10) from port Y of cell b11.$verific$sub_37$b11.vhd:81$98 ($sub).
Removed top 1 bits (of 10) from port A of cell b11.$verific$sub_37$b11.vhd:81$98 ($sub).
Removed top 1 bits (of 9) from port B of cell b11.$verific$LessThan_41$b11.vhd:87$102 ($lt).
Removed top 4 bits (of 8) from port B of cell b11.$verific$add_43$b11.vhd:88$104 ($add).
Removed top 1 bits (of 9) from port Y of cell b11.$verific$add_43$b11.vhd:88$104 ($add).
Removed top 5 bits (of 10) from port B of cell b11.$verific$sub_48$b11.vhd:95$109 ($sub).
Removed top 1 bits (of 10) from port Y of cell b11.$verific$sub_48$b11.vhd:95$109 ($sub).
Removed top 1 bits (of 10) from port A of cell b11.$verific$sub_48$b11.vhd:95$109 ($sub).
Removed top 1 bits (of 2) from port A of cell b11.$verific$equal_50$b11.vhd:96$112 ($eq).
Removed top 4 bits (of 10) from port B of cell b11.$verific$sub_51$b11.vhd:97$113 ($sub).
Removed top 1 bits (of 10) from port Y of cell b11.$verific$sub_51$b11.vhd:97$113 ($sub).
Removed top 1 bits (of 10) from port A of cell b11.$verific$sub_51$b11.vhd:97$113 ($sub).
Removed top 6 bits (of 9) from port B of cell b11.$verific$add_55$b11.vhd:99$117 ($add).
Removed top 4 bits (of 7) from port B of cell b11.$verific$add_58$b11.vhd:101$118 ($add).
Removed top 1 bits (of 9) from port A of cell b11.$verific$LessThan_63$b11.vhd:105$122 ($lt).
Removed top 4 bits (of 10) from port Y of cell b11.$verific$unary_minus_64$b11.vhd:108$123 ($neg).
Removed top 4 bits (of 10) from port A of cell b11.$verific$unary_minus_64$b11.vhd:108$123 ($neg).
Removed top 1 bits (of 7) from wire b11.$verific$n160$36.
Removed top 1 bits (of 10) from wire b11.$verific$n191$39.
Removed top 1 bits (of 3) from wire b11.$verific$n223$42.
Removed top 1 bits (of 10) from wire b11.$verific$n228$43.
Removed top 1 bits (of 3) from wire b11.$verific$n260$46.
Removed top 2 bits (of 3) from wire b11.$verific$n297$50.
Removed top 1 bits (of 10) from wire b11.$verific$n302$51.
Removed top 1 bits (of 10) from wire b11.$verific$n325$53.
Removed top 4 bits (of 10) from wire b11.$verific$n423$62.
Removed top 1 bits (of 6) from wire b11.cont.

yosys> peepopt

3.34. Executing PEEPOPT pass (run peephole optimizers).

yosys> opt_clean

3.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..
Removed 0 unused cells and 17 unused wires.
<suppressed ~1 debug messages>

yosys> demuxmap

3.36. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> stat

3.37. Printing statistics.

=== b11 ===

   Number of wires:                 51
   Number of wire bits:            273
   Number of public wires:           9
   Number of public wire bits:      39
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 44
     $add                            5
     $adff                           5
     $bmux                           5
     $eq                             3
     $le                             1
     $logic_not                      2
     $lt                             4
     $mux                           12
     $neg                            1
     $not                            1
     $or                             1
     $sub                            4


yosys> wreduce t:$mul

3.38. Executing WREDUCE pass (reducing word size of cells).

yosys> rs_dsp_macc

3.39. Executing RS_DSP_MACC pass.

yosys> techmap -map +/mul2dsp.v -D DSP_A_MAXWIDTH=20 -D DSP_B_MAXWIDTH=18 -D DSP_A_MINWIDTH=11 -D DSP_B_MINWIDTH=10 -D DSP_NAME=$__RS_MUL20X18

3.40. Executing TECHMAP pass (map to technology primitives).

3.40.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/mul2dsp.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

3.40.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

yosys> chtype -set $mul t:$__soft_mul

yosys> techmap -map +/mul2dsp.v -D DSP_A_MAXWIDTH=10 -D DSP_B_MAXWIDTH=9 -D DSP_A_MINWIDTH=4 -D DSP_B_MINWIDTH=4 -D DSP_NAME=$__RS_MUL10X9

3.41. Executing TECHMAP pass (map to technology primitives).

3.41.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/mul2dsp.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

3.41.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

yosys> chtype -set $mul t:$__soft_mul

yosys> techmap -map +/rapidsilicon/genesis/dsp_map.v -D USE_DSP_CFG_PARAMS=0

3.42. Executing TECHMAP pass (map to technology primitives).

3.42.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_map.v' to AST representation.
Generating RTLIL representation for module `\$__RS_MUL20X18'.
Generating RTLIL representation for module `\$__RS_MUL10X9'.
Successfully finished Verilog frontend.

3.42.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

yosys> rs_dsp_simd

3.43. Executing RS_DSP_SIMD pass.

yosys> techmap -map +/rapidsilicon/genesis/dsp_final_map.v

3.44. Executing TECHMAP pass (map to technology primitives).

3.44.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_final_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_final_map.v' to AST representation.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_params'.
Successfully finished Verilog frontend.

3.44.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~6 debug messages>

yosys> rs_dsp_io_regs

3.45. Executing RS_DSP_IO_REGS pass.

yosys> alumacc

3.46. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module b11:
  creating $macc model for $verific$add_12$b11.vhd:53$83 ($add).
  creating $macc model for $verific$add_30$b11.vhd:73$93 ($add).
  creating $macc model for $verific$add_43$b11.vhd:88$104 ($add).
  creating $macc model for $verific$add_55$b11.vhd:99$117 ($add).
  creating $macc model for $verific$add_58$b11.vhd:101$118 ($add).
  creating $macc model for $verific$sub_32$b11.vhd:76$94 ($sub).
  creating $macc model for $verific$sub_37$b11.vhd:81$98 ($sub).
  creating $macc model for $verific$sub_48$b11.vhd:95$109 ($sub).
  creating $macc model for $verific$sub_51$b11.vhd:97$113 ($sub).
  creating $macc model for $verific$unary_minus_64$b11.vhd:108$123 ($neg).
  creating $alu model for $macc $verific$unary_minus_64$b11.vhd:108$123.
  creating $alu model for $macc $verific$sub_51$b11.vhd:97$113.
  creating $alu model for $macc $verific$sub_48$b11.vhd:95$109.
  creating $alu model for $macc $verific$sub_37$b11.vhd:81$98.
  creating $alu model for $macc $verific$sub_32$b11.vhd:76$94.
  creating $alu model for $macc $verific$add_58$b11.vhd:101$118.
  creating $alu model for $macc $verific$add_55$b11.vhd:99$117.
  creating $alu model for $macc $verific$add_43$b11.vhd:88$104.
  creating $alu model for $macc $verific$add_30$b11.vhd:73$93.
  creating $alu model for $macc $verific$add_12$b11.vhd:53$83.
  creating $alu model for $verific$LessThan_11$b11.vhd:52$82 ($lt): new $alu
  creating $alu model for $verific$LessThan_16$b11.vhd:59$88 ($le): new $alu
  creating $alu model for $verific$LessThan_36$b11.vhd:80$97 ($lt): new $alu
  creating $alu model for $verific$LessThan_41$b11.vhd:87$102 ($lt): new $alu
  creating $alu model for $verific$LessThan_63$b11.vhd:105$122 ($lt): new $alu
  creating $alu cell for $verific$LessThan_63$b11.vhd:105$122: $auto$alumacc.cc:485:replace_alu$155
  creating $alu cell for $verific$LessThan_41$b11.vhd:87$102: $auto$alumacc.cc:485:replace_alu$160
  creating $alu cell for $verific$LessThan_36$b11.vhd:80$97: $auto$alumacc.cc:485:replace_alu$171
  creating $alu cell for $verific$LessThan_16$b11.vhd:59$88: $auto$alumacc.cc:485:replace_alu$182
  creating $alu cell for $verific$LessThan_11$b11.vhd:52$82: $auto$alumacc.cc:485:replace_alu$195
  creating $alu cell for $verific$add_12$b11.vhd:53$83: $auto$alumacc.cc:485:replace_alu$206
  creating $alu cell for $verific$add_43$b11.vhd:88$104: $auto$alumacc.cc:485:replace_alu$209
  creating $alu cell for $verific$add_55$b11.vhd:99$117: $auto$alumacc.cc:485:replace_alu$212
  creating $alu cell for $verific$add_58$b11.vhd:101$118: $auto$alumacc.cc:485:replace_alu$215
  creating $alu cell for $verific$add_30$b11.vhd:73$93: $auto$alumacc.cc:485:replace_alu$218
  creating $alu cell for $verific$sub_32$b11.vhd:76$94: $auto$alumacc.cc:485:replace_alu$221
  creating $alu cell for $verific$sub_37$b11.vhd:81$98: $auto$alumacc.cc:485:replace_alu$224
  creating $alu cell for $verific$sub_48$b11.vhd:95$109: $auto$alumacc.cc:485:replace_alu$227
  creating $alu cell for $verific$sub_51$b11.vhd:97$113: $auto$alumacc.cc:485:replace_alu$230
  creating $alu cell for $verific$unary_minus_64$b11.vhd:108$123: $auto$alumacc.cc:485:replace_alu$233
  created 15 $alu and 0 $macc cells.

yosys> opt_expr

3.47. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.
<suppressed ~4 debug messages>

yosys> opt_merge -nomux

3.48. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.49. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~9 debug messages>

yosys> opt_reduce

3.50. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.51. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_share

3.52. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $mux $verific$mux_34$b11.vhd:78$96 in front of them:
        $auto$alumacc.cc:485:replace_alu$218
        $auto$alumacc.cc:485:replace_alu$221


yosys> opt_dff -nosdff -nodffe

3.53. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.54. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..
Removed 2 unused cells and 13 unused wires.
<suppressed ~3 debug messages>

yosys> opt_expr

3.55. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.
<suppressed ~1 debug messages>

yosys> opt_muxtree

3.56. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~9 debug messages>

yosys> opt_reduce

3.57. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.58. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_share

3.59. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.60. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.61. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.62. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.
MAX OPT ITERATION = 2

yosys> stat

3.63. Printing statistics.

=== b11 ===

   Number of wires:                 95
   Number of wire bits:            541
   Number of public wires:           9
   Number of public wire bits:      39
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 60
     $adff                           5
     $alu                           14
     $bmux                           5
     $eq                             3
     $logic_not                      2
     $mux                           12
     $neg                            1
     $not                            8
     $or                             5
     $reduce_and                     4
     $reduce_or                      1


yosys> memory -nomap

3.64. Executing MEMORY pass.

yosys> opt_mem

3.64.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.64.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.64.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.64.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.64.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.64.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..

yosys> memory_share

3.64.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.64.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.64.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..

yosys> memory_collect

3.64.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.65. Printing statistics.

=== b11 ===

   Number of wires:                 95
   Number of wire bits:            541
   Number of public wires:           9
   Number of public wire bits:      39
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 60
     $adff                           5
     $alu                           14
     $bmux                           5
     $eq                             3
     $logic_not                      2
     $mux                           12
     $neg                            1
     $not                            8
     $or                             5
     $reduce_and                     4
     $reduce_or                      1


yosys> muxpack

3.66. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converting b11.$verific$mux_60$b11.vhd:102$119 ... b11.$verific$mux_62$b11.vhd:102$121 to a pmux with 3 cases.
Converted 3 (p)mux cells into 1 pmux cells.
<suppressed ~12 debug messages>

yosys> opt_clean

3.67. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

yosys> memory_bram -rules +/rapidsilicon/genesis/brams.txt

3.68. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).

yosys> techmap -map +/rapidsilicon/genesis/brams_map.v

3.69. Executing TECHMAP pass (map to technology primitives).

3.69.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/brams_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_TDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM18_TDP'.
/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/brams_map.v:236: Warning: Range [2:0] select out of bounds on signal `\DOP': Setting 1 MSB bits to undef.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_SDP'.
Successfully finished Verilog frontend.

3.69.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~5 debug messages>

yosys> pmuxtree

3.70. Executing PMUXTREE pass.

yosys> muxpack

3.71. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~12 debug messages>

yosys> memory_map

3.72. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> stat

3.73. Printing statistics.

=== b11 ===

   Number of wires:                 99
   Number of wire bits:            553
   Number of public wires:           9
   Number of public wire bits:      39
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 63
     $adff                           5
     $alu                           14
     $bmux                           5
     $eq                             3
     $logic_not                      2
     $mux                           12
     $neg                            1
     $not                            9
     $or                             6
     $reduce_and                     4
     $reduce_or                      2


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.74. Executing TECHMAP pass (map to technology primitives).

3.74.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.74.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.74.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_and.
Using template $paramod$78464f9f65d57061f7490f3fe5dd257e4a61e2b7\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $eq.
Using template $paramod$5e23d2e0f07f5403e3d2c5b606bab0c16e4174c1\_90_alu for cells of type $alu.
Using template $paramod$b9513f2555ba02118b069422fea717af39120cf7\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $mux.
Using template $paramod$b18e16801adf491a64caa0542270798e5d4ac6b6\_90_alu for cells of type $alu.
Using template $paramod$3fe4bdf8d597404bdd222c1fea42f692fdc77de4\_90_alu for cells of type $alu.
Using template $paramod$e04283ca12514baf3d204c6994bec8f178dd89f8\_90_alu for cells of type $alu.
Using template $paramod$c6b63e723603573fdc33dc74600fd0455fbbc6dc\_90_alu for cells of type $alu.
Using template $paramod$5d7bf89bead63599a0c4fbe7617ae2af1a7c16a5\_90_alu for cells of type $alu.
Using template $paramod$821d2886e47353e724eaca46af4992e9c3e6ac1d\_90_alu for cells of type $alu.
Using template $paramod$08b2a3505d8f2cd2b03f068ccaf5ce95d4eb0556\_90_alu for cells of type $alu.
Using template $paramod$8ffc13f158d9c4b92f6c17114e5b147ae5ead21a\_90_alu for cells of type $alu.
Running "alumacc" on wrapper $extern:wrap:$neg:A_SIGNED=0:A_WIDTH=9:Y_WIDTH=9:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$neg:A_SIGNED=0:A_WIDTH=9:Y_WIDTH=9:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$neg:A_SIGNED=0:A_WIDTH=9:Y_WIDTH=9:394426c56d1a028ba8fdd5469b163e04011def47.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $bmux.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $and.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001001 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000110 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000101 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000111 for cells of type $lcu.
Using template $paramod$8045f2881226ae434b154710c783ad25023f386c\_90_alu for cells of type $alu.
No more expansions possible.
<suppressed ~2229 debug messages>

yosys> stat

3.75. Printing statistics.

=== b11 ===

   Number of wires:                796
   Number of wire bits:          19962
   Number of public wires:           9
   Number of public wire bits:      39
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1655
     $_AND_                        361
     $_DFF_PP0_                     30
     $_MUX_                        675
     $_NOT_                        136
     $_OR_                         190
     $_XOR_                        263


yosys> opt_expr

3.76. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.
<suppressed ~850 debug messages>

yosys> opt_merge -nomux

3.77. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
<suppressed ~636 debug messages>
Removed a total of 212 cells.

yosys> opt_muxtree

3.78. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.79. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.80. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_share

3.81. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$1219 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$1709
        $auto$simplemap.cc:86:simplemap_bitop$1663

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$1208 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$1782
        $auto$simplemap.cc:86:simplemap_bitop$1569


yosys> opt_dff -nosdff -nodffe

3.82. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.83. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..
Removed 68 unused cells and 699 unused wires.
<suppressed ~69 debug messages>

yosys> opt_expr

3.84. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.
<suppressed ~2 debug messages>

yosys> opt_muxtree

3.85. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

yosys> opt_reduce

3.86. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.87. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_share

3.88. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.89. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.90. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..

yosys> opt_expr

3.91. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.
MAX OPT ITERATION = 2

yosys> opt_expr -full

3.92. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.
<suppressed ~97 debug messages>

yosys> techmap -map +/techmap.v

3.93. Executing TECHMAP pass (map to technology primitives).

3.93.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.93.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
No more expansions possible.
<suppressed ~73 debug messages>

yosys> opt_expr

3.94. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.

yosys> opt_merge -nomux

3.95. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.96. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.97. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.98. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_dff -nosdff -nodffe -sat

3.99. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.100. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.101. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.
MAX OPT ITERATION = 1

yosys> abc -dff

3.102. Executing ABC pass (technology mapping using ABC).

3.102.1. Summary of detected clock domains:
  534 cells in clk=\clock, en={ }, arst=\reset, srst={ }

3.102.2. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 534 gates and 543 wires to a netlist network with 7 inputs and 6 outputs.

3.102.2.1. Executing ABC.

yosys> abc -dff

3.103. Executing ABC pass (technology mapping using ABC).

3.103.1. Summary of detected clock domains:
  483 cells in clk=\clock, en={ }, arst=\reset, srst={ }

3.103.2. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 483 gates and 490 wires to a netlist network with 7 inputs and 6 outputs.

3.103.2.1. Executing ABC.

yosys> abc -dff

3.104. Executing ABC pass (technology mapping using ABC).

3.104.1. Summary of detected clock domains:
  479 cells in clk=\clock, en={ }, arst=\reset, srst={ }

3.104.2. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 479 gates and 486 wires to a netlist network with 7 inputs and 6 outputs.

3.104.2.1. Executing ABC.

yosys> abc -dff

3.105. Executing ABC pass (technology mapping using ABC).

3.105.1. Summary of detected clock domains:
  478 cells in clk=\clock, en={ }, arst=\reset, srst={ }

3.105.2. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 478 gates and 485 wires to a netlist network with 7 inputs and 6 outputs.

3.105.2.1. Executing ABC.

yosys> opt_ffinv

3.106. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt_expr

3.107. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.
<suppressed ~1 debug messages>

yosys> opt_merge -nomux

3.108. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.109. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.110. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.111. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_share

3.112. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.113. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $abc$4073$auto$blifparse.cc:362:parse_blif$4087 ($_DFF_PP0_) from module b11 (D = $abc$4073$new_n305_, Q = $abc$4073$lo13).
Adding EN signal on $abc$4073$auto$blifparse.cc:362:parse_blif$4086 ($_DFF_PP0_) from module b11 (D = $abc$4073$new_n266_, Q = $abc$4073$lo12).
Adding EN signal on $abc$4073$auto$blifparse.cc:362:parse_blif$4085 ($_DFF_PP0_) from module b11 (D = $abc$4073$new_n221_, Q = $abc$4073$lo11).
Adding EN signal on $abc$4073$auto$blifparse.cc:362:parse_blif$4084 ($_DFF_PP0_) from module b11 (D = $abc$4073$new_n190_, Q = $abc$4073$lo10).
Adding EN signal on $abc$4073$auto$blifparse.cc:362:parse_blif$4083 ($_DFF_PP0_) from module b11 (D = $abc$4073$x_in[5], Q = $abc$4073$lo09).
Adding EN signal on $abc$4073$auto$blifparse.cc:362:parse_blif$4082 ($_DFF_PP0_) from module b11 (D = $abc$4073$x_in[4], Q = $abc$4073$lo08).
Adding EN signal on $abc$4073$auto$blifparse.cc:362:parse_blif$4081 ($_DFF_PP0_) from module b11 (D = $abc$4073$x_in[3], Q = $abc$4073$lo07).
Adding EN signal on $abc$4073$auto$blifparse.cc:362:parse_blif$4080 ($_DFF_PP0_) from module b11 (D = $abc$4073$x_in[2], Q = $abc$4073$lo06).
Adding EN signal on $abc$4073$auto$blifparse.cc:362:parse_blif$4079 ($_DFF_PP0_) from module b11 (D = $abc$4073$x_in[1], Q = $abc$4073$lo05).
Adding EN signal on $abc$4073$auto$blifparse.cc:362:parse_blif$4078 ($_DFF_PP0_) from module b11 (D = $abc$4073$x_in[0], Q = $abc$4073$lo04).

yosys> opt_clean

3.114. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..
Removed 10 unused cells and 1676 unused wires.
<suppressed ~15 debug messages>

yosys> opt_expr

3.115. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.

yosys> opt_muxtree

3.116. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.117. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.118. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_share

3.119. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.120. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.121. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..

yosys> opt_expr

3.122. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.
MAX OPT ITERATION = 2

yosys> bmuxmap

3.123. Executing BMUXMAP pass.

yosys> demuxmap

3.124. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> abc -script /tmp/yosys_I0aUmz/abc_tmp_1.scr

3.125. Executing ABC pass (technology mapping using ABC).

3.125.1. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Extracted 439 gates and 470 wires to a netlist network with 31 inputs and 25 outputs.

3.125.1.1. Executing ABC.
DE:   #PIs =  31  #Luts =   117  Max Lvl =   8  Avg Lvl =   4.08  [   0.17 sec. at Pass 0]
DE:   #PIs =  31  #Luts =   101  Max Lvl =   7  Avg Lvl =   4.00  [   0.90 sec. at Pass 1]
DE:   #PIs =  31  #Luts =    99  Max Lvl =   8  Avg Lvl =   4.16  [   0.68 sec. at Pass 2]
DE:   #PIs =  31  #Luts =    91  Max Lvl =   7  Avg Lvl =   3.28  [   1.11 sec. at Pass 3]
DE:   #PIs =  31  #Luts =    88  Max Lvl =   7  Avg Lvl =   3.36  [   0.63 sec. at Pass 4]
DE:   #PIs =  31  #Luts =    84  Max Lvl =   8  Avg Lvl =   3.40  [   1.80 sec. at Pass 5]
DE:   #PIs =  31  #Luts =    84  Max Lvl =   6  Avg Lvl =   3.24  [   1.09 sec. at Pass 6]
DE:   #PIs =  31  #Luts =    83  Max Lvl =   6  Avg Lvl =   3.28  [   2.30 sec. at Pass 7]
DE:   #PIs =  31  #Luts =    83  Max Lvl =   6  Avg Lvl =   3.28  [   0.69 sec. at Pass 8]
DE:   #PIs =  31  #Luts =    82  Max Lvl =   6  Avg Lvl =   3.24  [   2.20 sec. at Pass 9]
DE:   #PIs =  31  #Luts =    82  Max Lvl =   6  Avg Lvl =   3.24  [   0.90 sec. at Pass 10]
DE:   #PIs =  31  #Luts =    79  Max Lvl =   6  Avg Lvl =   3.12  [   1.27 sec. at Pass 11]
DE:   #PIs =  31  #Luts =    79  Max Lvl =   6  Avg Lvl =   3.12  [   0.68 sec. at Pass 12]
DE:   #PIs =  31  #Luts =    79  Max Lvl =   6  Avg Lvl =   3.12  [   1.27 sec. at Pass 13]
DE:   #PIs =  31  #Luts =    79  Max Lvl =   6  Avg Lvl =   3.12  [   0.50 sec. at Pass 14]
DE:   #PIs =  31  #Luts =    76  Max Lvl =   6  Avg Lvl =   3.08  [  16.07 sec. at Pass 15]
DE:   #PIs =  31  #Luts =    76  Max Lvl =   6  Avg Lvl =   3.08  [   2.02 sec. at Pass 16]
DE:   #PIs =  31  #Luts =    76  Max Lvl =   6  Avg Lvl =   3.08  [   0.76 sec. at Pass 17]
DE:   #PIs =  31  #Luts =    76  Max Lvl =   6  Avg Lvl =   3.08  [   2.10 sec. at Pass 18]
DE:   #PIs =  31  #Luts =    76  Max Lvl =   6  Avg Lvl =   3.08  [  13.43 sec. at Pass 19]
DE:   #PIs =  31  #Luts =    76  Max Lvl =   6  Avg Lvl =   3.08  [   0.48 sec. at Pass 20]

yosys> opt_expr

3.126. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.

yosys> opt_merge -nomux

3.127. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.128. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.129. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.130. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_share

3.131. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.132. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.133. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..
Removed 0 unused cells and 470 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.134. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.
MAX OPT ITERATION = 1

yosys> opt_ffinv

3.135. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> stat

3.136. Printing statistics.

=== b11 ===

   Number of wires:                105
   Number of wire bits:            115
   Number of public wires:           5
   Number of public wire bits:      15
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                106
     $_DFFE_PP0N_                   10
     $_DFF_PP0_                     20
     $lut                           76


yosys> shregmap -minlen 8 -maxlen 20

3.137. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.138. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.139. Printing statistics.

=== b11 ===

   Number of wires:                105
   Number of wire bits:            115
   Number of public wires:           5
   Number of public wire bits:      15
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                106
     $_DFFE_PP0N_                   10
     $_DFF_PP0_                     20
     $lut                           76


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.140. Executing TECHMAP pass (map to technology primitives).

3.140.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.140.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.140.3. Continuing TECHMAP pass.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using template \$_DFFE_PP0N_ for cells of type $_DFFE_PP0N_.
Using extmapper simplemap for cells of type $lut.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~282 debug messages>

yosys> opt_expr -mux_undef

3.141. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.
<suppressed ~2373 debug messages>

yosys> simplemap

3.142. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.143. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.

yosys> opt_merge

3.144. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
<suppressed ~1614 debug messages>
Removed a total of 538 cells.

yosys> opt_dff -nodffe -nosdff

3.145. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.146. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..
Removed 0 unused cells and 295 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.147. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.
<suppressed ~94 debug messages>

yosys> opt_merge -nomux

3.148. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.149. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.150. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.151. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_share

3.152. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.153. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.154. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..
Removed 0 unused cells and 10 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.155. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.
MAX OPT ITERATION = 1

yosys> abc -script /tmp/yosys_I0aUmz/abc_tmp_2.scr

3.156. Executing ABC pass (technology mapping using ABC).

3.156.1. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Extracted 519 gates and 553 wires to a netlist network with 32 inputs and 27 outputs.

3.156.1.1. Executing ABC.
DE:   #PIs =  32  #Luts =    78  Max Lvl =   7  Avg Lvl =   3.19  [   0.19 sec. at Pass 0]
DE:   #PIs =  32  #Luts =    78  Max Lvl =   6  Avg Lvl =   2.89  [   0.79 sec. at Pass 1]
DE:   #PIs =  32  #Luts =    78  Max Lvl =   6  Avg Lvl =   2.89  [   0.55 sec. at Pass 2]
DE:   #PIs =  32  #Luts =    78  Max Lvl =   6  Avg Lvl =   2.89  [   0.63 sec. at Pass 3]
DE:   #PIs =  32  #Luts =    78  Max Lvl =   6  Avg Lvl =   2.89  [   0.42 sec. at Pass 4]
DE:   #PIs =  32  #Luts =    78  Max Lvl =   6  Avg Lvl =   2.89  [   2.14 sec. at Pass 5]
DE:   #PIs =  32  #Luts =    76  Max Lvl =   6  Avg Lvl =   2.93  [  16.00 sec. at Pass 6]
DE:   #PIs =  32  #Luts =    76  Max Lvl =   6  Avg Lvl =   2.93  [   0.70 sec. at Pass 7]
DE:   #PIs =  32  #Luts =    76  Max Lvl =   6  Avg Lvl =   2.93  [   2.82 sec. at Pass 8]
DE:   #PIs =  32  #Luts =    76  Max Lvl =   6  Avg Lvl =   2.93  [   0.73 sec. at Pass 9]
DE:   #PIs =  32  #Luts =    75  Max Lvl =   6  Avg Lvl =   3.00  [  20.42 sec. at Pass 10]
DE:   #PIs =  32  #Luts =    75  Max Lvl =   6  Avg Lvl =   3.00  [   4.53 sec. at Pass 11]
DE:   #PIs =  32  #Luts =    75  Max Lvl =   6  Avg Lvl =   3.00  [   1.23 sec. at Pass 12]
DE:   #PIs =  32  #Luts =    75  Max Lvl =   6  Avg Lvl =   3.00  [   4.84 sec. at Pass 13]
DE:   #PIs =  32  #Luts =    75  Max Lvl =   6  Avg Lvl =   3.00  [  25.66 sec. at Pass 14]
DE:   #PIs =  32  #Luts =    75  Max Lvl =   6  Avg Lvl =   3.00  [   0.73 sec. at Pass 15]

yosys> opt_expr

3.157. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.

yosys> opt_merge -nomux

3.158. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.159. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.160. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.161. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_share

3.162. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.163. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.164. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..
Removed 0 unused cells and 369 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.165. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.
MAX OPT ITERATION = 1

yosys> hierarchy -check

3.166. Executing HIERARCHY pass (managing design hierarchy).

3.166.1. Analyzing design hierarchy..
Top module:  \b11

3.166.2. Analyzing design hierarchy..
Top module:  \b11
Removed 0 unused modules.

yosys> stat

3.167. Printing statistics.

=== b11 ===

   Number of wires:                104
   Number of wire bits:            114
   Number of public wires:           5
   Number of public wire bits:      15
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                105
     $lut                           75
     dffsre                         30


yosys> opt_clean -purge

3.168. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..

yosys> write_verilog -noattr -nohex synthesized.v

3.169. Executing Verilog backend.
Dumping module `\b11'.

Warnings: 1 unique messages, 1 total
End of script. Logfile hash: d20f5ae76d, CPU: user 1.38s system 0.04s, MEM: 42.96 MB peak
Yosys 0.18+10 (git sha1 c98b0e94e, gcc 9.4.0 -fPIC -Os)
Time spent: 99% 6x abc (865 sec), 0% 36x opt_expr (0 sec), ...
real 144.25
user 835.57
sys 31.08
