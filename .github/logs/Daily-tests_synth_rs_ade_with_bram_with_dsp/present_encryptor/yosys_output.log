
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.64
 Yosys 0.18+10 (git sha1 c98b0e94e, gcc 9.4.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 00:39:28 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k substitution.v sbox.v key_update.v sub_per.v present_encryptor_top.v permutation.v

yosys> verific -vlog2k substitution.v sbox.v key_update.v sub_per.v present_encryptor_top.v permutation.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 00:39:28 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'substitution.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'sbox.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'key_update.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'sub_per.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'present_encryptor_top.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'permutation.v'

yosys> synth_rs -top present_encryptor_top -tech genesis -goal area -de -verilog synthesized.v

3. Executing synth_rs pass: v0.4.65

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v +/rapidsilicon/genesis/dsp_sim.v

3.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Successfully finished Verilog frontend.

3.3. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_sim.v' to AST representation.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\RS_DSP2_MULT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_ports'.
Generating RTLIL representation for module `\RS_DSP3'.
Generating RTLIL representation for module `\RS_DSP3_MULT'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_params'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top present_encryptor_top

3.4. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] present_encryptor_top.v:31: compiling module 'present_encryptor_top'
VERIFIC-INFO [VERI-1018] sub_per.v:31: compiling module 'sub_per'
VERIFIC-INFO [VERI-1018] substitution.v:31: compiling module 'substitution'
VERIFIC-INFO [VERI-1018] sbox.v:31: compiling module 'sbox'
VERIFIC-INFO [VERI-1018] permutation.v:31: compiling module 'permutation'
VERIFIC-INFO [VERI-1018] key_update.v:31: compiling module 'key_update'
Importing module present_encryptor_top.
Importing module key_update.
Importing module sbox.
Importing module sub_per.
Importing module permutation.
Importing module substitution.

3.4.1. Analyzing design hierarchy..
Top module:  \present_encryptor_top
Used module:     \key_update
Used module:         \sbox
Used module:     \sub_per
Used module:         \permutation
Used module:         \substitution

3.4.2. Analyzing design hierarchy..
Top module:  \present_encryptor_top
Used module:     \key_update
Used module:         \sbox
Used module:     \sub_per
Used module:         \permutation
Used module:         \substitution
Removed 0 unused modules.

yosys> proc

3.5. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.5.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.5.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.5.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.5.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.5.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.5.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.5.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.5.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.5.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.5.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.5.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.5.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module substitution.
Optimizing module permutation.
Optimizing module sub_per.
Optimizing module sbox.
Optimizing module key_update.
Optimizing module present_encryptor_top.
<suppressed ~7 debug messages>

yosys> demuxmap

3.6. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> flatten

3.7. Executing FLATTEN pass (flatten design).
Deleting now unused module key_update.
Deleting now unused module permutation.
Deleting now unused module sbox.
Deleting now unused module sub_per.
Deleting now unused module substitution.
<suppressed ~21 debug messages>

yosys> demuxmap

3.8. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> tribuf -logic -formal

3.9. Executing TRIBUF pass.

yosys> deminout

3.10. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module present_encryptor_top.

yosys> opt_clean

3.12. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \present_encryptor_top..
Removed 2 unused cells and 732 unused wires.
<suppressed ~16 debug messages>

yosys> check

3.13. Executing CHECK pass (checking for obvious problems).
Checking module present_encryptor_top...
Found and reported 0 problems.

yosys> opt_expr

3.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module present_encryptor_top.

yosys> opt_merge -nomux

3.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\present_encryptor_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.16. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \present_encryptor_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $verific$mux_17$present_encryptor_top.v:90$335.
    dead port 1/2 on $mux $verific$mux_18$present_encryptor_top.v:90$336.
    dead port 1/2 on $mux $verific$mux_19$present_encryptor_top.v:90$337.
    dead port 1/2 on $mux $verific$mux_23$present_encryptor_top.v:91$341.
    dead port 1/2 on $mux $verific$mux_24$present_encryptor_top.v:91$342.
    dead port 1/2 on $mux $verific$mux_25$present_encryptor_top.v:91$343.
Removed 6 multiplexer ports.
<suppressed ~3 debug messages>

yosys> opt_reduce

3.17. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \present_encryptor_top.
Performed a total of 0 changes.

yosys> opt_merge

3.18. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\present_encryptor_top'.
Removed a total of 0 cells.

yosys> opt_share

3.19. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.20. Executing OPT_DFF pass (perform DFF optimizations).
Removing never-active async load on $verific$state_reg$present_encryptor_top.v:92$348 ($aldff) from module present_encryptor_top.
Removing never-active async load on $verific$round_counter_reg$present_encryptor_top.v:92$349 ($aldff) from module present_encryptor_top.
Removing never-active async load on $verific$key_reg$present_encryptor_top.v:92$347 ($aldff) from module present_encryptor_top.

yosys> opt_clean

3.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \present_encryptor_top..
Removed 0 unused cells and 6 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module present_encryptor_top.

yosys> opt_muxtree

3.23. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \present_encryptor_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~3 debug messages>

yosys> opt_reduce

3.24. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \present_encryptor_top.
Performed a total of 0 changes.

yosys> opt_merge

3.25. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\present_encryptor_top'.
Removed a total of 0 cells.

yosys> opt_share

3.26. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.27. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \present_encryptor_top..

yosys> opt_expr

3.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module present_encryptor_top.
MAX OPT ITERATION = 2

yosys> fsm -encoding binary

3.30. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.30.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.30.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.30.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.30.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \present_encryptor_top..

yosys> fsm_opt

3.30.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.30.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.30.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.30.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt_expr

3.31. Executing OPT_EXPR pass (perform const folding).
Optimizing module present_encryptor_top.

yosys> opt_merge -nomux

3.32. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\present_encryptor_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.33. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \present_encryptor_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~3 debug messages>

yosys> opt_reduce

3.34. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \present_encryptor_top.
Performed a total of 0 changes.

yosys> opt_merge

3.35. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\present_encryptor_top'.
Removed a total of 0 cells.

yosys> opt_share

3.36. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.37. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $verific$state_reg$present_encryptor_top.v:92$348 ($dff) from module present_encryptor_top (D = $verific$n1026$20, Q = \state).
Adding EN signal on $verific$round_counter_reg$present_encryptor_top.v:92$349 ($dff) from module present_encryptor_top (D = $verific$n1091$21, Q = \round_counter).
Adding EN signal on $verific$key_reg$present_encryptor_top.v:92$347 ($dff) from module present_encryptor_top (D = $verific$n1178$23, Q = \key).

yosys> opt_clean

3.38. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \present_encryptor_top..
Removed 2 unused cells and 2 unused wires.
<suppressed ~3 debug messages>

yosys> opt_expr

3.39. Executing OPT_EXPR pass (perform const folding).
Optimizing module present_encryptor_top.

yosys> opt_muxtree

3.40. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \present_encryptor_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~3 debug messages>

yosys> opt_reduce

3.41. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \present_encryptor_top.
Performed a total of 0 changes.

yosys> opt_merge

3.42. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\present_encryptor_top'.
Removed a total of 0 cells.

yosys> opt_share

3.43. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.44. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.45. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \present_encryptor_top..

yosys> opt_expr

3.46. Executing OPT_EXPR pass (perform const folding).
Optimizing module present_encryptor_top.
MAX OPT ITERATION = 2

yosys> wreduce -keepdc

3.47. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 2) from port B of cell present_encryptor_top.$auto$opt_dff.cc:195:make_patterns_logic$758 ($ne).
Removed top 4 bits (of 5) from port B of cell present_encryptor_top.$verific$add_13$present_encryptor_top.v:87$331 ($add).

yosys> peepopt

3.48. Executing PEEPOPT pass (run peephole optimizers).

yosys> opt_clean

3.49. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \present_encryptor_top..

yosys> demuxmap

3.50. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> stat

3.51. Printing statistics.

=== present_encryptor_top ===

   Number of wires:                 65
   Number of wire bits:           1792
   Number of public wires:          59
   Number of public wire bits:    1557
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 28
     $add                            1
     $bmux                          17
     $dffe                           3
     $mux                            4
     $ne                             1
     $xor                            2


yosys> wreduce t:$mul

3.52. Executing WREDUCE pass (reducing word size of cells).

yosys> rs_dsp_macc

3.53. Executing RS_DSP_MACC pass.

yosys> techmap -map +/mul2dsp.v -D DSP_A_MAXWIDTH=20 -D DSP_B_MAXWIDTH=18 -D DSP_A_MINWIDTH=11 -D DSP_B_MINWIDTH=10 -D DSP_NAME=$__RS_MUL20X18

3.54. Executing TECHMAP pass (map to technology primitives).

3.54.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/mul2dsp.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

3.54.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

yosys> chtype -set $mul t:$__soft_mul

yosys> techmap -map +/mul2dsp.v -D DSP_A_MAXWIDTH=10 -D DSP_B_MAXWIDTH=9 -D DSP_A_MINWIDTH=4 -D DSP_B_MINWIDTH=4 -D DSP_NAME=$__RS_MUL10X9

3.55. Executing TECHMAP pass (map to technology primitives).

3.55.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/mul2dsp.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

3.55.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

yosys> chtype -set $mul t:$__soft_mul

yosys> techmap -map +/rapidsilicon/genesis/dsp_map.v -D USE_DSP_CFG_PARAMS=0

3.56. Executing TECHMAP pass (map to technology primitives).

3.56.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_map.v' to AST representation.
Generating RTLIL representation for module `\$__RS_MUL20X18'.
Generating RTLIL representation for module `\$__RS_MUL10X9'.
Successfully finished Verilog frontend.

3.56.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

yosys> rs_dsp_simd

3.57. Executing RS_DSP_SIMD pass.

yosys> techmap -map +/rapidsilicon/genesis/dsp_final_map.v

3.58. Executing TECHMAP pass (map to technology primitives).

3.58.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_final_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_final_map.v' to AST representation.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_params'.
Successfully finished Verilog frontend.

3.58.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~6 debug messages>

yosys> rs_dsp_io_regs

3.59. Executing RS_DSP_IO_REGS pass.

yosys> alumacc

3.60. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module present_encryptor_top:
  creating $macc model for $verific$add_13$present_encryptor_top.v:87$331 ($add).
  creating $alu model for $macc $verific$add_13$present_encryptor_top.v:87$331.
  creating $alu cell for $verific$add_13$present_encryptor_top.v:87$331: $auto$alumacc.cc:485:replace_alu$759
  created 1 $alu and 0 $macc cells.

yosys> opt_expr

3.61. Executing OPT_EXPR pass (perform const folding).
Optimizing module present_encryptor_top.

yosys> opt_merge -nomux

3.62. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\present_encryptor_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.63. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \present_encryptor_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~3 debug messages>

yosys> opt_reduce

3.64. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \present_encryptor_top.
Performed a total of 0 changes.

yosys> opt_merge

3.65. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\present_encryptor_top'.
Removed a total of 0 cells.

yosys> opt_share

3.66. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.67. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.68. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \present_encryptor_top..

yosys> opt_expr

3.69. Executing OPT_EXPR pass (perform const folding).
Optimizing module present_encryptor_top.
MAX OPT ITERATION = 1

yosys> stat

3.70. Printing statistics.

=== present_encryptor_top ===

   Number of wires:                 67
   Number of wire bits:           1802
   Number of public wires:          59
   Number of public wire bits:    1557
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 28
     $alu                            1
     $bmux                          17
     $dffe                           3
     $mux                            4
     $ne                             1
     $xor                            2


yosys> memory -nomap

3.71. Executing MEMORY pass.

yosys> opt_mem

3.71.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.71.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.71.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.71.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.71.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `$auto$memory_bmux2rom.cc:63:execute$810'[0] in module `\present_encryptor_top': FF found, but with a mux select that doesn't seem to correspond to transparency logic.
Checking read port `$auto$memory_bmux2rom.cc:63:execute$807'[0] in module `\present_encryptor_top': FF found, but with a mux select that doesn't seem to correspond to transparency logic.
Checking read port `$auto$memory_bmux2rom.cc:63:execute$804'[0] in module `\present_encryptor_top': FF found, but with a mux select that doesn't seem to correspond to transparency logic.
Checking read port `$auto$memory_bmux2rom.cc:63:execute$801'[0] in module `\present_encryptor_top': FF found, but with a mux select that doesn't seem to correspond to transparency logic.
Checking read port `$auto$memory_bmux2rom.cc:63:execute$798'[0] in module `\present_encryptor_top': FF found, but with a mux select that doesn't seem to correspond to transparency logic.
Checking read port `$auto$memory_bmux2rom.cc:63:execute$795'[0] in module `\present_encryptor_top': FF found, but with a mux select that doesn't seem to correspond to transparency logic.
Checking read port `$auto$memory_bmux2rom.cc:63:execute$792'[0] in module `\present_encryptor_top': FF found, but with a mux select that doesn't seem to correspond to transparency logic.
Checking read port `$auto$memory_bmux2rom.cc:63:execute$789'[0] in module `\present_encryptor_top': FF found, but with a mux select that doesn't seem to correspond to transparency logic.
Checking read port `$auto$memory_bmux2rom.cc:63:execute$786'[0] in module `\present_encryptor_top': FF found, but with a mux select that doesn't seem to correspond to transparency logic.
Checking read port `$auto$memory_bmux2rom.cc:63:execute$783'[0] in module `\present_encryptor_top': FF found, but with a mux select that doesn't seem to correspond to transparency logic.
Checking read port `$auto$memory_bmux2rom.cc:63:execute$780'[0] in module `\present_encryptor_top': FF found, but with a mux select that doesn't seem to correspond to transparency logic.
Checking read port `$auto$memory_bmux2rom.cc:63:execute$777'[0] in module `\present_encryptor_top': FF found, but with a mux select that doesn't seem to correspond to transparency logic.
Checking read port `$auto$memory_bmux2rom.cc:63:execute$774'[0] in module `\present_encryptor_top': FF found, but with a mux select that doesn't seem to correspond to transparency logic.
Checking read port `$auto$memory_bmux2rom.cc:63:execute$771'[0] in module `\present_encryptor_top': FF found, but with a mux select that doesn't seem to correspond to transparency logic.
Checking read port `$auto$memory_bmux2rom.cc:63:execute$768'[0] in module `\present_encryptor_top': FF found, but with a mux select that doesn't seem to correspond to transparency logic.
Checking read port `$auto$memory_bmux2rom.cc:63:execute$765'[0] in module `\present_encryptor_top': FF found, but with a mux select that doesn't seem to correspond to transparency logic.
Checking read port `$auto$memory_bmux2rom.cc:63:execute$762'[0] in module `\present_encryptor_top': FF found, but with a mux select that doesn't seem to correspond to transparency logic.
Checking read port address `$auto$memory_bmux2rom.cc:63:execute$810'[0] in module `\present_encryptor_top': no address FF found.
Checking read port address `$auto$memory_bmux2rom.cc:63:execute$807'[0] in module `\present_encryptor_top': no address FF found.
Checking read port address `$auto$memory_bmux2rom.cc:63:execute$804'[0] in module `\present_encryptor_top': no address FF found.
Checking read port address `$auto$memory_bmux2rom.cc:63:execute$801'[0] in module `\present_encryptor_top': no address FF found.
Checking read port address `$auto$memory_bmux2rom.cc:63:execute$798'[0] in module `\present_encryptor_top': no address FF found.
Checking read port address `$auto$memory_bmux2rom.cc:63:execute$795'[0] in module `\present_encryptor_top': no address FF found.
Checking read port address `$auto$memory_bmux2rom.cc:63:execute$792'[0] in module `\present_encryptor_top': no address FF found.
Checking read port address `$auto$memory_bmux2rom.cc:63:execute$789'[0] in module `\present_encryptor_top': no address FF found.
Checking read port address `$auto$memory_bmux2rom.cc:63:execute$786'[0] in module `\present_encryptor_top': no address FF found.
Checking read port address `$auto$memory_bmux2rom.cc:63:execute$783'[0] in module `\present_encryptor_top': no address FF found.
Checking read port address `$auto$memory_bmux2rom.cc:63:execute$780'[0] in module `\present_encryptor_top': no address FF found.
Checking read port address `$auto$memory_bmux2rom.cc:63:execute$777'[0] in module `\present_encryptor_top': no address FF found.
Checking read port address `$auto$memory_bmux2rom.cc:63:execute$774'[0] in module `\present_encryptor_top': no address FF found.
Checking read port address `$auto$memory_bmux2rom.cc:63:execute$771'[0] in module `\present_encryptor_top': no address FF found.
Checking read port address `$auto$memory_bmux2rom.cc:63:execute$768'[0] in module `\present_encryptor_top': no address FF found.
Checking read port address `$auto$memory_bmux2rom.cc:63:execute$765'[0] in module `\present_encryptor_top': no address FF found.
Checking read port address `$auto$memory_bmux2rom.cc:63:execute$762'[0] in module `\present_encryptor_top': merged address FF to cell.

yosys> opt_clean

3.71.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \present_encryptor_top..

yosys> memory_share

3.71.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.71.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.71.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \present_encryptor_top..

yosys> memory_collect

3.71.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.72. Printing statistics.

=== present_encryptor_top ===

   Number of wires:                 68
   Number of wire bits:           1806
   Number of public wires:          59
   Number of public wire bits:    1557
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 29
     $alu                            1
     $dffe                           3
     $mem_v2                        17
     $mux                            5
     $ne                             1
     $xor                            2


yosys> muxpack

3.73. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~5 debug messages>

yosys> opt_clean

3.74. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \present_encryptor_top..

yosys> memory_bram -rules +/rapidsilicon/genesis/brams.txt

3.75. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).
Processing present_encryptor_top.$auto$memory_bmux2rom.cc:63:execute$762:
  Properties: ports=1 bits=64 rports=1 wports=0 dbits=4 abits=4 words=16
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 1):
    Bram geometry: abits=10 dbits=36 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=1008 dwaste=32 bwaste=36800 waste=36800 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 1) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 2):
    Bram geometry: abits=11 dbits=18 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=2032 dwaste=14 bwaste=36800 waste=36800 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 2) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 3):
    Bram geometry: abits=12 dbits=9 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=4080 dwaste=5 bwaste=36800 waste=36800 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 3) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 4):
    Bram geometry: abits=13 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=8176 dwaste=0 bwaste=32704 waste=32704 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 4) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 5):
    Bram geometry: abits=14 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=16368 dwaste=0 bwaste=32736 waste=32736 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 5) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 6):
    Bram geometry: abits=15 dbits=1 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=32752 dwaste=0 bwaste=32752 waste=32752 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 6) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 1):
    Bram geometry: abits=10 dbits=36 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=1008 dwaste=32 bwaste=36800 waste=36800 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 1) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 2):
    Bram geometry: abits=11 dbits=18 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=2032 dwaste=14 bwaste=36800 waste=36800 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 2) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 3):
    Bram geometry: abits=12 dbits=9 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=4080 dwaste=5 bwaste=36800 waste=36800 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 3) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 4):
    Bram geometry: abits=13 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=8176 dwaste=0 bwaste=32704 waste=32704 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 4) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 5):
    Bram geometry: abits=14 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=16368 dwaste=0 bwaste=32736 waste=32736 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 5) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 6):
    Bram geometry: abits=15 dbits=1 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=32752 dwaste=0 bwaste=32752 waste=32752 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 6) rejected: requirement 'min bits 128' not met.
  No acceptable bram resources found.
Processing present_encryptor_top.$auto$memory_bmux2rom.cc:63:execute$765:
  Properties: ports=1 bits=64 rports=1 wports=0 dbits=4 abits=4 words=16
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 1):
    Bram geometry: abits=10 dbits=36 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=1008 dwaste=32 bwaste=36800 waste=36800 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 1) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 2):
    Bram geometry: abits=11 dbits=18 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=2032 dwaste=14 bwaste=36800 waste=36800 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 2) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 3):
    Bram geometry: abits=12 dbits=9 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=4080 dwaste=5 bwaste=36800 waste=36800 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 3) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 4):
    Bram geometry: abits=13 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=8176 dwaste=0 bwaste=32704 waste=32704 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 4) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 5):
    Bram geometry: abits=14 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=16368 dwaste=0 bwaste=32736 waste=32736 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 5) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 6):
    Bram geometry: abits=15 dbits=1 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=32752 dwaste=0 bwaste=32752 waste=32752 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 6) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 1):
    Bram geometry: abits=10 dbits=36 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=1008 dwaste=32 bwaste=36800 waste=36800 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 1) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 2):
    Bram geometry: abits=11 dbits=18 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=2032 dwaste=14 bwaste=36800 waste=36800 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 2) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 3):
    Bram geometry: abits=12 dbits=9 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=4080 dwaste=5 bwaste=36800 waste=36800 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 3) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 4):
    Bram geometry: abits=13 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=8176 dwaste=0 bwaste=32704 waste=32704 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 4) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 5):
    Bram geometry: abits=14 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=16368 dwaste=0 bwaste=32736 waste=32736 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 5) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 6):
    Bram geometry: abits=15 dbits=1 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=32752 dwaste=0 bwaste=32752 waste=32752 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 6) rejected: requirement 'min bits 128' not met.
  No acceptable bram resources found.
Processing present_encryptor_top.$auto$memory_bmux2rom.cc:63:execute$768:
  Properties: ports=1 bits=64 rports=1 wports=0 dbits=4 abits=4 words=16
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 1):
    Bram geometry: abits=10 dbits=36 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=1008 dwaste=32 bwaste=36800 waste=36800 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 1) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 2):
    Bram geometry: abits=11 dbits=18 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=2032 dwaste=14 bwaste=36800 waste=36800 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 2) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 3):
    Bram geometry: abits=12 dbits=9 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=4080 dwaste=5 bwaste=36800 waste=36800 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 3) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 4):
    Bram geometry: abits=13 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=8176 dwaste=0 bwaste=32704 waste=32704 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 4) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 5):
    Bram geometry: abits=14 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=16368 dwaste=0 bwaste=32736 waste=32736 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 5) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 6):
    Bram geometry: abits=15 dbits=1 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=32752 dwaste=0 bwaste=32752 waste=32752 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 6) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 1):
    Bram geometry: abits=10 dbits=36 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=1008 dwaste=32 bwaste=36800 waste=36800 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 1) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 2):
    Bram geometry: abits=11 dbits=18 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=2032 dwaste=14 bwaste=36800 waste=36800 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 2) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 3):
    Bram geometry: abits=12 dbits=9 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=4080 dwaste=5 bwaste=36800 waste=36800 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 3) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 4):
    Bram geometry: abits=13 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=8176 dwaste=0 bwaste=32704 waste=32704 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 4) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 5):
    Bram geometry: abits=14 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=16368 dwaste=0 bwaste=32736 waste=32736 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 5) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 6):
    Bram geometry: abits=15 dbits=1 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=32752 dwaste=0 bwaste=32752 waste=32752 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 6) rejected: requirement 'min bits 128' not met.
  No acceptable bram resources found.
Processing present_encryptor_top.$auto$memory_bmux2rom.cc:63:execute$771:
  Properties: ports=1 bits=64 rports=1 wports=0 dbits=4 abits=4 words=16
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 1):
    Bram geometry: abits=10 dbits=36 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=1008 dwaste=32 bwaste=36800 waste=36800 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 1) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 2):
    Bram geometry: abits=11 dbits=18 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=2032 dwaste=14 bwaste=36800 waste=36800 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 2) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 3):
    Bram geometry: abits=12 dbits=9 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=4080 dwaste=5 bwaste=36800 waste=36800 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 3) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 4):
    Bram geometry: abits=13 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=8176 dwaste=0 bwaste=32704 waste=32704 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 4) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 5):
    Bram geometry: abits=14 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=16368 dwaste=0 bwaste=32736 waste=32736 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 5) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 6):
    Bram geometry: abits=15 dbits=1 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=32752 dwaste=0 bwaste=32752 waste=32752 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 6) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 1):
    Bram geometry: abits=10 dbits=36 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=1008 dwaste=32 bwaste=36800 waste=36800 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 1) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 2):
    Bram geometry: abits=11 dbits=18 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=2032 dwaste=14 bwaste=36800 waste=36800 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 2) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 3):
    Bram geometry: abits=12 dbits=9 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=4080 dwaste=5 bwaste=36800 waste=36800 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 3) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 4):
    Bram geometry: abits=13 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=8176 dwaste=0 bwaste=32704 waste=32704 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 4) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 5):
    Bram geometry: abits=14 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=16368 dwaste=0 bwaste=32736 waste=32736 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 5) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 6):
    Bram geometry: abits=15 dbits=1 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=32752 dwaste=0 bwaste=32752 waste=32752 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 6) rejected: requirement 'min bits 128' not met.
  No acceptable bram resources found.
Processing present_encryptor_top.$auto$memory_bmux2rom.cc:63:execute$774:
  Properties: ports=1 bits=64 rports=1 wports=0 dbits=4 abits=4 words=16
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 1):
    Bram geometry: abits=10 dbits=36 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=1008 dwaste=32 bwaste=36800 waste=36800 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 1) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 2):
    Bram geometry: abits=11 dbits=18 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=2032 dwaste=14 bwaste=36800 waste=36800 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 2) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 3):
    Bram geometry: abits=12 dbits=9 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=4080 dwaste=5 bwaste=36800 waste=36800 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 3) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 4):
    Bram geometry: abits=13 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=8176 dwaste=0 bwaste=32704 waste=32704 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 4) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 5):
    Bram geometry: abits=14 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=16368 dwaste=0 bwaste=32736 waste=32736 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 5) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 6):
    Bram geometry: abits=15 dbits=1 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=32752 dwaste=0 bwaste=32752 waste=32752 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 6) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 1):
    Bram geometry: abits=10 dbits=36 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=1008 dwaste=32 bwaste=36800 waste=36800 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 1) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 2):
    Bram geometry: abits=11 dbits=18 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=2032 dwaste=14 bwaste=36800 waste=36800 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 2) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 3):
    Bram geometry: abits=12 dbits=9 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=4080 dwaste=5 bwaste=36800 waste=36800 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 3) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 4):
    Bram geometry: abits=13 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=8176 dwaste=0 bwaste=32704 waste=32704 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 4) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 5):
    Bram geometry: abits=14 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=16368 dwaste=0 bwaste=32736 waste=32736 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 5) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 6):
    Bram geometry: abits=15 dbits=1 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=32752 dwaste=0 bwaste=32752 waste=32752 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 6) rejected: requirement 'min bits 128' not met.
  No acceptable bram resources found.
Processing present_encryptor_top.$auto$memory_bmux2rom.cc:63:execute$777:
  Properties: ports=1 bits=64 rports=1 wports=0 dbits=4 abits=4 words=16
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 1):
    Bram geometry: abits=10 dbits=36 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=1008 dwaste=32 bwaste=36800 waste=36800 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 1) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 2):
    Bram geometry: abits=11 dbits=18 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=2032 dwaste=14 bwaste=36800 waste=36800 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 2) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 3):
    Bram geometry: abits=12 dbits=9 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=4080 dwaste=5 bwaste=36800 waste=36800 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 3) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 4):
    Bram geometry: abits=13 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=8176 dwaste=0 bwaste=32704 waste=32704 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 4) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 5):
    Bram geometry: abits=14 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=16368 dwaste=0 bwaste=32736 waste=32736 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 5) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 6):
    Bram geometry: abits=15 dbits=1 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=32752 dwaste=0 bwaste=32752 waste=32752 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 6) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 1):
    Bram geometry: abits=10 dbits=36 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=1008 dwaste=32 bwaste=36800 waste=36800 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 1) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 2):
    Bram geometry: abits=11 dbits=18 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=2032 dwaste=14 bwaste=36800 waste=36800 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 2) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 3):
    Bram geometry: abits=12 dbits=9 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=4080 dwaste=5 bwaste=36800 waste=36800 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 3) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 4):
    Bram geometry: abits=13 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=8176 dwaste=0 bwaste=32704 waste=32704 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 4) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 5):
    Bram geometry: abits=14 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=16368 dwaste=0 bwaste=32736 waste=32736 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 5) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 6):
    Bram geometry: abits=15 dbits=1 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=32752 dwaste=0 bwaste=32752 waste=32752 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 6) rejected: requirement 'min bits 128' not met.
  No acceptable bram resources found.
Processing present_encryptor_top.$auto$memory_bmux2rom.cc:63:execute$780:
  Properties: ports=1 bits=64 rports=1 wports=0 dbits=4 abits=4 words=16
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 1):
    Bram geometry: abits=10 dbits=36 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=1008 dwaste=32 bwaste=36800 waste=36800 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 1) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 2):
    Bram geometry: abits=11 dbits=18 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=2032 dwaste=14 bwaste=36800 waste=36800 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 2) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 3):
    Bram geometry: abits=12 dbits=9 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=4080 dwaste=5 bwaste=36800 waste=36800 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 3) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 4):
    Bram geometry: abits=13 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=8176 dwaste=0 bwaste=32704 waste=32704 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 4) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 5):
    Bram geometry: abits=14 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=16368 dwaste=0 bwaste=32736 waste=32736 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 5) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 6):
    Bram geometry: abits=15 dbits=1 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=32752 dwaste=0 bwaste=32752 waste=32752 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 6) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 1):
    Bram geometry: abits=10 dbits=36 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=1008 dwaste=32 bwaste=36800 waste=36800 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 1) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 2):
    Bram geometry: abits=11 dbits=18 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=2032 dwaste=14 bwaste=36800 waste=36800 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 2) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 3):
    Bram geometry: abits=12 dbits=9 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=4080 dwaste=5 bwaste=36800 waste=36800 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 3) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 4):
    Bram geometry: abits=13 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=8176 dwaste=0 bwaste=32704 waste=32704 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 4) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 5):
    Bram geometry: abits=14 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=16368 dwaste=0 bwaste=32736 waste=32736 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 5) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 6):
    Bram geometry: abits=15 dbits=1 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=32752 dwaste=0 bwaste=32752 waste=32752 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 6) rejected: requirement 'min bits 128' not met.
  No acceptable bram resources found.
Processing present_encryptor_top.$auto$memory_bmux2rom.cc:63:execute$783:
  Properties: ports=1 bits=64 rports=1 wports=0 dbits=4 abits=4 words=16
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 1):
    Bram geometry: abits=10 dbits=36 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=1008 dwaste=32 bwaste=36800 waste=36800 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 1) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 2):
    Bram geometry: abits=11 dbits=18 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=2032 dwaste=14 bwaste=36800 waste=36800 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 2) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 3):
    Bram geometry: abits=12 dbits=9 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=4080 dwaste=5 bwaste=36800 waste=36800 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 3) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 4):
    Bram geometry: abits=13 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=8176 dwaste=0 bwaste=32704 waste=32704 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 4) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 5):
    Bram geometry: abits=14 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=16368 dwaste=0 bwaste=32736 waste=32736 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 5) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 6):
    Bram geometry: abits=15 dbits=1 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=32752 dwaste=0 bwaste=32752 waste=32752 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 6) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 1):
    Bram geometry: abits=10 dbits=36 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=1008 dwaste=32 bwaste=36800 waste=36800 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 1) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 2):
    Bram geometry: abits=11 dbits=18 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=2032 dwaste=14 bwaste=36800 waste=36800 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 2) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 3):
    Bram geometry: abits=12 dbits=9 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=4080 dwaste=5 bwaste=36800 waste=36800 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 3) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 4):
    Bram geometry: abits=13 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=8176 dwaste=0 bwaste=32704 waste=32704 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 4) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 5):
    Bram geometry: abits=14 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=16368 dwaste=0 bwaste=32736 waste=32736 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 5) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 6):
    Bram geometry: abits=15 dbits=1 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=32752 dwaste=0 bwaste=32752 waste=32752 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 6) rejected: requirement 'min bits 128' not met.
  No acceptable bram resources found.
Processing present_encryptor_top.$auto$memory_bmux2rom.cc:63:execute$786:
  Properties: ports=1 bits=64 rports=1 wports=0 dbits=4 abits=4 words=16
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 1):
    Bram geometry: abits=10 dbits=36 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=1008 dwaste=32 bwaste=36800 waste=36800 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 1) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 2):
    Bram geometry: abits=11 dbits=18 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=2032 dwaste=14 bwaste=36800 waste=36800 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 2) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 3):
    Bram geometry: abits=12 dbits=9 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=4080 dwaste=5 bwaste=36800 waste=36800 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 3) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 4):
    Bram geometry: abits=13 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=8176 dwaste=0 bwaste=32704 waste=32704 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 4) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 5):
    Bram geometry: abits=14 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=16368 dwaste=0 bwaste=32736 waste=32736 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 5) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 6):
    Bram geometry: abits=15 dbits=1 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=32752 dwaste=0 bwaste=32752 waste=32752 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 6) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 1):
    Bram geometry: abits=10 dbits=36 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=1008 dwaste=32 bwaste=36800 waste=36800 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 1) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 2):
    Bram geometry: abits=11 dbits=18 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=2032 dwaste=14 bwaste=36800 waste=36800 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 2) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 3):
    Bram geometry: abits=12 dbits=9 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=4080 dwaste=5 bwaste=36800 waste=36800 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 3) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 4):
    Bram geometry: abits=13 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=8176 dwaste=0 bwaste=32704 waste=32704 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 4) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 5):
    Bram geometry: abits=14 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=16368 dwaste=0 bwaste=32736 waste=32736 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 5) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 6):
    Bram geometry: abits=15 dbits=1 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=32752 dwaste=0 bwaste=32752 waste=32752 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 6) rejected: requirement 'min bits 128' not met.
  No acceptable bram resources found.
Processing present_encryptor_top.$auto$memory_bmux2rom.cc:63:execute$789:
  Properties: ports=1 bits=64 rports=1 wports=0 dbits=4 abits=4 words=16
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 1):
    Bram geometry: abits=10 dbits=36 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=1008 dwaste=32 bwaste=36800 waste=36800 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 1) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 2):
    Bram geometry: abits=11 dbits=18 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=2032 dwaste=14 bwaste=36800 waste=36800 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 2) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 3):
    Bram geometry: abits=12 dbits=9 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=4080 dwaste=5 bwaste=36800 waste=36800 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 3) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 4):
    Bram geometry: abits=13 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=8176 dwaste=0 bwaste=32704 waste=32704 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 4) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 5):
    Bram geometry: abits=14 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=16368 dwaste=0 bwaste=32736 waste=32736 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 5) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 6):
    Bram geometry: abits=15 dbits=1 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=32752 dwaste=0 bwaste=32752 waste=32752 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 6) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 1):
    Bram geometry: abits=10 dbits=36 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=1008 dwaste=32 bwaste=36800 waste=36800 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 1) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 2):
    Bram geometry: abits=11 dbits=18 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=2032 dwaste=14 bwaste=36800 waste=36800 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 2) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 3):
    Bram geometry: abits=12 dbits=9 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=4080 dwaste=5 bwaste=36800 waste=36800 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 3) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 4):
    Bram geometry: abits=13 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=8176 dwaste=0 bwaste=32704 waste=32704 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 4) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 5):
    Bram geometry: abits=14 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=16368 dwaste=0 bwaste=32736 waste=32736 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 5) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 6):
    Bram geometry: abits=15 dbits=1 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=32752 dwaste=0 bwaste=32752 waste=32752 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 6) rejected: requirement 'min bits 128' not met.
  No acceptable bram resources found.
Processing present_encryptor_top.$auto$memory_bmux2rom.cc:63:execute$792:
  Properties: ports=1 bits=64 rports=1 wports=0 dbits=4 abits=4 words=16
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 1):
    Bram geometry: abits=10 dbits=36 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=1008 dwaste=32 bwaste=36800 waste=36800 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 1) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 2):
    Bram geometry: abits=11 dbits=18 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=2032 dwaste=14 bwaste=36800 waste=36800 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 2) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 3):
    Bram geometry: abits=12 dbits=9 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=4080 dwaste=5 bwaste=36800 waste=36800 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 3) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 4):
    Bram geometry: abits=13 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=8176 dwaste=0 bwaste=32704 waste=32704 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 4) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 5):
    Bram geometry: abits=14 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=16368 dwaste=0 bwaste=32736 waste=32736 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 5) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 6):
    Bram geometry: abits=15 dbits=1 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=32752 dwaste=0 bwaste=32752 waste=32752 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 6) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 1):
    Bram geometry: abits=10 dbits=36 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=1008 dwaste=32 bwaste=36800 waste=36800 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 1) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 2):
    Bram geometry: abits=11 dbits=18 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=2032 dwaste=14 bwaste=36800 waste=36800 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 2) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 3):
    Bram geometry: abits=12 dbits=9 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=4080 dwaste=5 bwaste=36800 waste=36800 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 3) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 4):
    Bram geometry: abits=13 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=8176 dwaste=0 bwaste=32704 waste=32704 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 4) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 5):
    Bram geometry: abits=14 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=16368 dwaste=0 bwaste=32736 waste=32736 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 5) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 6):
    Bram geometry: abits=15 dbits=1 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=32752 dwaste=0 bwaste=32752 waste=32752 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 6) rejected: requirement 'min bits 128' not met.
  No acceptable bram resources found.
Processing present_encryptor_top.$auto$memory_bmux2rom.cc:63:execute$795:
  Properties: ports=1 bits=64 rports=1 wports=0 dbits=4 abits=4 words=16
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 1):
    Bram geometry: abits=10 dbits=36 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=1008 dwaste=32 bwaste=36800 waste=36800 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 1) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 2):
    Bram geometry: abits=11 dbits=18 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=2032 dwaste=14 bwaste=36800 waste=36800 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 2) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 3):
    Bram geometry: abits=12 dbits=9 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=4080 dwaste=5 bwaste=36800 waste=36800 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 3) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 4):
    Bram geometry: abits=13 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=8176 dwaste=0 bwaste=32704 waste=32704 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 4) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 5):
    Bram geometry: abits=14 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=16368 dwaste=0 bwaste=32736 waste=32736 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 5) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 6):
    Bram geometry: abits=15 dbits=1 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=32752 dwaste=0 bwaste=32752 waste=32752 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 6) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 1):
    Bram geometry: abits=10 dbits=36 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=1008 dwaste=32 bwaste=36800 waste=36800 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 1) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 2):
    Bram geometry: abits=11 dbits=18 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=2032 dwaste=14 bwaste=36800 waste=36800 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 2) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 3):
    Bram geometry: abits=12 dbits=9 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=4080 dwaste=5 bwaste=36800 waste=36800 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 3) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 4):
    Bram geometry: abits=13 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=8176 dwaste=0 bwaste=32704 waste=32704 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 4) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 5):
    Bram geometry: abits=14 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=16368 dwaste=0 bwaste=32736 waste=32736 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 5) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 6):
    Bram geometry: abits=15 dbits=1 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=32752 dwaste=0 bwaste=32752 waste=32752 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 6) rejected: requirement 'min bits 128' not met.
  No acceptable bram resources found.
Processing present_encryptor_top.$auto$memory_bmux2rom.cc:63:execute$798:
  Properties: ports=1 bits=64 rports=1 wports=0 dbits=4 abits=4 words=16
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 1):
    Bram geometry: abits=10 dbits=36 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=1008 dwaste=32 bwaste=36800 waste=36800 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 1) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 2):
    Bram geometry: abits=11 dbits=18 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=2032 dwaste=14 bwaste=36800 waste=36800 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 2) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 3):
    Bram geometry: abits=12 dbits=9 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=4080 dwaste=5 bwaste=36800 waste=36800 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 3) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 4):
    Bram geometry: abits=13 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=8176 dwaste=0 bwaste=32704 waste=32704 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 4) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 5):
    Bram geometry: abits=14 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=16368 dwaste=0 bwaste=32736 waste=32736 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 5) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 6):
    Bram geometry: abits=15 dbits=1 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=32752 dwaste=0 bwaste=32752 waste=32752 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 6) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 1):
    Bram geometry: abits=10 dbits=36 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=1008 dwaste=32 bwaste=36800 waste=36800 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 1) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 2):
    Bram geometry: abits=11 dbits=18 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=2032 dwaste=14 bwaste=36800 waste=36800 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 2) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 3):
    Bram geometry: abits=12 dbits=9 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=4080 dwaste=5 bwaste=36800 waste=36800 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 3) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 4):
    Bram geometry: abits=13 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=8176 dwaste=0 bwaste=32704 waste=32704 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 4) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 5):
    Bram geometry: abits=14 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=16368 dwaste=0 bwaste=32736 waste=32736 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 5) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 6):
    Bram geometry: abits=15 dbits=1 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=32752 dwaste=0 bwaste=32752 waste=32752 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 6) rejected: requirement 'min bits 128' not met.
  No acceptable bram resources found.
Processing present_encryptor_top.$auto$memory_bmux2rom.cc:63:execute$801:
  Properties: ports=1 bits=64 rports=1 wports=0 dbits=4 abits=4 words=16
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 1):
    Bram geometry: abits=10 dbits=36 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=1008 dwaste=32 bwaste=36800 waste=36800 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 1) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 2):
    Bram geometry: abits=11 dbits=18 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=2032 dwaste=14 bwaste=36800 waste=36800 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 2) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 3):
    Bram geometry: abits=12 dbits=9 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=4080 dwaste=5 bwaste=36800 waste=36800 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 3) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 4):
    Bram geometry: abits=13 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=8176 dwaste=0 bwaste=32704 waste=32704 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 4) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 5):
    Bram geometry: abits=14 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=16368 dwaste=0 bwaste=32736 waste=32736 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 5) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 6):
    Bram geometry: abits=15 dbits=1 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=32752 dwaste=0 bwaste=32752 waste=32752 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 6) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 1):
    Bram geometry: abits=10 dbits=36 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=1008 dwaste=32 bwaste=36800 waste=36800 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 1) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 2):
    Bram geometry: abits=11 dbits=18 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=2032 dwaste=14 bwaste=36800 waste=36800 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 2) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 3):
    Bram geometry: abits=12 dbits=9 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=4080 dwaste=5 bwaste=36800 waste=36800 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 3) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 4):
    Bram geometry: abits=13 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=8176 dwaste=0 bwaste=32704 waste=32704 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 4) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 5):
    Bram geometry: abits=14 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=16368 dwaste=0 bwaste=32736 waste=32736 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 5) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 6):
    Bram geometry: abits=15 dbits=1 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=32752 dwaste=0 bwaste=32752 waste=32752 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 6) rejected: requirement 'min bits 128' not met.
  No acceptable bram resources found.
Processing present_encryptor_top.$auto$memory_bmux2rom.cc:63:execute$804:
  Properties: ports=1 bits=64 rports=1 wports=0 dbits=4 abits=4 words=16
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 1):
    Bram geometry: abits=10 dbits=36 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=1008 dwaste=32 bwaste=36800 waste=36800 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 1) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 2):
    Bram geometry: abits=11 dbits=18 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=2032 dwaste=14 bwaste=36800 waste=36800 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 2) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 3):
    Bram geometry: abits=12 dbits=9 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=4080 dwaste=5 bwaste=36800 waste=36800 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 3) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 4):
    Bram geometry: abits=13 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=8176 dwaste=0 bwaste=32704 waste=32704 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 4) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 5):
    Bram geometry: abits=14 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=16368 dwaste=0 bwaste=32736 waste=32736 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 5) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 6):
    Bram geometry: abits=15 dbits=1 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=32752 dwaste=0 bwaste=32752 waste=32752 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 6) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 1):
    Bram geometry: abits=10 dbits=36 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=1008 dwaste=32 bwaste=36800 waste=36800 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 1) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 2):
    Bram geometry: abits=11 dbits=18 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=2032 dwaste=14 bwaste=36800 waste=36800 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 2) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 3):
    Bram geometry: abits=12 dbits=9 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=4080 dwaste=5 bwaste=36800 waste=36800 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 3) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 4):
    Bram geometry: abits=13 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=8176 dwaste=0 bwaste=32704 waste=32704 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 4) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 5):
    Bram geometry: abits=14 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=16368 dwaste=0 bwaste=32736 waste=32736 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 5) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 6):
    Bram geometry: abits=15 dbits=1 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=32752 dwaste=0 bwaste=32752 waste=32752 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 6) rejected: requirement 'min bits 128' not met.
  No acceptable bram resources found.
Processing present_encryptor_top.$auto$memory_bmux2rom.cc:63:execute$807:
  Properties: ports=1 bits=64 rports=1 wports=0 dbits=4 abits=4 words=16
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 1):
    Bram geometry: abits=10 dbits=36 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=1008 dwaste=32 bwaste=36800 waste=36800 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 1) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 2):
    Bram geometry: abits=11 dbits=18 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=2032 dwaste=14 bwaste=36800 waste=36800 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 2) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 3):
    Bram geometry: abits=12 dbits=9 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=4080 dwaste=5 bwaste=36800 waste=36800 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 3) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 4):
    Bram geometry: abits=13 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=8176 dwaste=0 bwaste=32704 waste=32704 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 4) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 5):
    Bram geometry: abits=14 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=16368 dwaste=0 bwaste=32736 waste=32736 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 5) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 6):
    Bram geometry: abits=15 dbits=1 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=32752 dwaste=0 bwaste=32752 waste=32752 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 6) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 1):
    Bram geometry: abits=10 dbits=36 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=1008 dwaste=32 bwaste=36800 waste=36800 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 1) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 2):
    Bram geometry: abits=11 dbits=18 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=2032 dwaste=14 bwaste=36800 waste=36800 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 2) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 3):
    Bram geometry: abits=12 dbits=9 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=4080 dwaste=5 bwaste=36800 waste=36800 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 3) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 4):
    Bram geometry: abits=13 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=8176 dwaste=0 bwaste=32704 waste=32704 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 4) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 5):
    Bram geometry: abits=14 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=16368 dwaste=0 bwaste=32736 waste=32736 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 5) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 6):
    Bram geometry: abits=15 dbits=1 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=32752 dwaste=0 bwaste=32752 waste=32752 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 6) rejected: requirement 'min bits 128' not met.
  No acceptable bram resources found.
Processing present_encryptor_top.$auto$memory_bmux2rom.cc:63:execute$810:
  Properties: ports=1 bits=64 rports=1 wports=0 dbits=4 abits=4 words=16
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 1):
    Bram geometry: abits=10 dbits=36 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=1008 dwaste=32 bwaste=36800 waste=36800 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 1) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 2):
    Bram geometry: abits=11 dbits=18 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=2032 dwaste=14 bwaste=36800 waste=36800 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 2) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 3):
    Bram geometry: abits=12 dbits=9 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=4080 dwaste=5 bwaste=36800 waste=36800 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 3) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 4):
    Bram geometry: abits=13 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=8176 dwaste=0 bwaste=32704 waste=32704 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 4) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 5):
    Bram geometry: abits=14 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=16368 dwaste=0 bwaste=32736 waste=32736 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 5) rejected: requirement 'min bits 128' not met.
  Checking rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 6):
    Bram geometry: abits=15 dbits=1 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_TDP: awaste=32752 dwaste=0 bwaste=32752 waste=32752 efficiency=0
    Rule #1 for bram type $__RS_FACTOR_BRAM36_TDP (variant 6) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 1):
    Bram geometry: abits=10 dbits=36 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=1008 dwaste=32 bwaste=36800 waste=36800 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 1) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 2):
    Bram geometry: abits=11 dbits=18 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=2032 dwaste=14 bwaste=36800 waste=36800 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 2) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 3):
    Bram geometry: abits=12 dbits=9 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=4080 dwaste=5 bwaste=36800 waste=36800 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 3) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 4):
    Bram geometry: abits=13 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=8176 dwaste=0 bwaste=32704 waste=32704 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 4) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 5):
    Bram geometry: abits=14 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=16368 dwaste=0 bwaste=32736 waste=32736 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 5) rejected: requirement 'min bits 128' not met.
  Checking rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 6):
    Bram geometry: abits=15 dbits=1 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__RS_FACTOR_BRAM36_SDP: awaste=32752 dwaste=0 bwaste=32752 waste=32752 efficiency=0
    Rule #2 for bram type $__RS_FACTOR_BRAM36_SDP (variant 6) rejected: requirement 'min bits 128' not met.
  No acceptable bram resources found.

yosys> techmap -map +/rapidsilicon/genesis/brams_map.v

3.76. Executing TECHMAP pass (map to technology primitives).

3.76.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/brams_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_TDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM18_TDP'.
/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/brams_map.v:236: Warning: Range [2:0] select out of bounds on signal `\DOP': Setting 1 MSB bits to undef.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_SDP'.
Successfully finished Verilog frontend.

3.76.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~5 debug messages>

yosys> pmuxtree

3.77. Executing PMUXTREE pass.

yosys> muxpack

3.78. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~5 debug messages>

yosys> memory_map

3.79. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory $auto$memory_bmux2rom.cc:63:execute$762 in module \present_encryptor_top:
  created 16 $dff cells and 0 static cells of width 4.
Extracted data FF from read port 0 of present_encryptor_top.$auto$memory_bmux2rom.cc:63:execute$762: $$auto$memory_bmux2rom.cc:63:execute$762$rdreg[0]
  read interface: 1 $dff and 15 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $auto$memory_bmux2rom.cc:63:execute$765 in module \present_encryptor_top:
  created 16 $dff cells and 0 static cells of width 4.
  read interface: 0 $dff and 15 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $auto$memory_bmux2rom.cc:63:execute$768 in module \present_encryptor_top:
  created 16 $dff cells and 0 static cells of width 4.
  read interface: 0 $dff and 15 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $auto$memory_bmux2rom.cc:63:execute$771 in module \present_encryptor_top:
  created 16 $dff cells and 0 static cells of width 4.
  read interface: 0 $dff and 15 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $auto$memory_bmux2rom.cc:63:execute$774 in module \present_encryptor_top:
  created 16 $dff cells and 0 static cells of width 4.
  read interface: 0 $dff and 15 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $auto$memory_bmux2rom.cc:63:execute$777 in module \present_encryptor_top:
  created 16 $dff cells and 0 static cells of width 4.
  read interface: 0 $dff and 15 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $auto$memory_bmux2rom.cc:63:execute$780 in module \present_encryptor_top:
  created 16 $dff cells and 0 static cells of width 4.
  read interface: 0 $dff and 15 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $auto$memory_bmux2rom.cc:63:execute$783 in module \present_encryptor_top:
  created 16 $dff cells and 0 static cells of width 4.
  read interface: 0 $dff and 15 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $auto$memory_bmux2rom.cc:63:execute$786 in module \present_encryptor_top:
  created 16 $dff cells and 0 static cells of width 4.
  read interface: 0 $dff and 15 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $auto$memory_bmux2rom.cc:63:execute$789 in module \present_encryptor_top:
  created 16 $dff cells and 0 static cells of width 4.
  read interface: 0 $dff and 15 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $auto$memory_bmux2rom.cc:63:execute$792 in module \present_encryptor_top:
  created 16 $dff cells and 0 static cells of width 4.
  read interface: 0 $dff and 15 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $auto$memory_bmux2rom.cc:63:execute$795 in module \present_encryptor_top:
  created 16 $dff cells and 0 static cells of width 4.
  read interface: 0 $dff and 15 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $auto$memory_bmux2rom.cc:63:execute$798 in module \present_encryptor_top:
  created 16 $dff cells and 0 static cells of width 4.
  read interface: 0 $dff and 15 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $auto$memory_bmux2rom.cc:63:execute$801 in module \present_encryptor_top:
  created 16 $dff cells and 0 static cells of width 4.
  read interface: 0 $dff and 15 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $auto$memory_bmux2rom.cc:63:execute$804 in module \present_encryptor_top:
  created 16 $dff cells and 0 static cells of width 4.
  read interface: 0 $dff and 15 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $auto$memory_bmux2rom.cc:63:execute$807 in module \present_encryptor_top:
  created 16 $dff cells and 0 static cells of width 4.
  read interface: 0 $dff and 15 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $auto$memory_bmux2rom.cc:63:execute$810 in module \present_encryptor_top:
  created 16 $dff cells and 0 static cells of width 4.
  read interface: 0 $dff and 15 $mux cells.
  write interface: 0 write mux blocks.

yosys> stat

3.80. Printing statistics.

=== present_encryptor_top ===

   Number of wires:               1123
   Number of wire bits:           6026
   Number of public wires:          59
   Number of public wire bits:    1557
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                540
     $alu                            1
     $dff                          273
     $dffe                           3
     $mux                          260
     $ne                             1
     $xor                            2


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.81. Executing TECHMAP pass (map to technology primitives).

3.81.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.81.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.81.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $ne.
Using template $paramod$672a140277c71df8314410f22acc08d55222c3c7\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $and.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000101 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $or.
No more expansions possible.
<suppressed ~848 debug messages>

yosys> stat

3.82. Printing statistics.

=== present_encryptor_top ===

   Number of wires:               1158
   Number of wire bits:           7220
   Number of public wires:          59
   Number of public wire bits:    1557
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2605
     $_AND_                         12
     $_DFFE_PN_                     69
     $_DFFE_PP_                     80
     $_DFF_P_                     1092
     $_MUX_                       1258
     $_NOT_                          5
     $_OR_                           7
     $_XOR_                         82


yosys> opt_expr

3.83. Executing OPT_EXPR pass (perform const folding).
Optimizing module present_encryptor_top.
<suppressed ~27 debug messages>

yosys> opt_merge -nomux

3.84. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\present_encryptor_top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_muxtree

3.85. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \present_encryptor_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.86. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \present_encryptor_top.
Performed a total of 0 changes.

yosys> opt_merge

3.87. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\present_encryptor_top'.
Removed a total of 0 cells.

yosys> opt_share

3.88. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.89. Executing OPT_DFF pass (perform DFF optimizations).
Handling const CLK on $auto$ff.cc:262:slice$4394 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4366 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4362 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4354 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4346 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4338 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2356 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2985 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2832 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4662 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4666 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4670 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4314 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4318 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4322 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4326 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4418 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4422 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4426 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4430 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4434 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4438 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4442 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4446 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4450 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4454 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4458 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4462 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4466 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4470 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4474 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4478 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4542 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4546 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4550 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4554 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4558 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4562 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4566 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4570 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4574 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4578 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4582 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4586 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4590 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4594 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4598 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4602 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4266 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4262 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4258 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4254 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4250 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4246 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4242 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4238 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4234 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4230 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4226 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4222 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4218 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4214 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4210 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4206 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4142 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4138 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4134 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4130 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4126 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4122 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4118 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4114 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4110 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4106 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4102 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4310 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4306 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4302 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4298 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4294 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2556 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2560 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2564 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2568 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2572 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2576 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2580 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2584 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2588 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2592 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2596 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2600 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2604 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2608 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2612 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2616 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2680 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2684 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2688 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2692 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2696 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2700 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2704 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2708 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2712 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2716 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2720 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2724 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2728 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2732 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2736 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2740 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2508 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2512 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2516 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2520 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2524 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2528 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2360 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2364 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2368 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2372 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2376 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2380 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2384 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2388 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2392 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2396 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2756 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2752 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2828 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4682 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4678 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3658 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3802 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3794 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3790 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3694 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3786 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3778 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3774 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3550 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3770 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3762 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3662 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3666 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3670 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3674 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3678 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3682 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3686 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3690 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3698 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3702 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3706 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3710 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3714 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3718 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3542 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3546 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3618 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3626 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3630 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3634 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3638 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3642 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3646 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3798 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3782 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3766 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3750 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3734 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4086 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4062 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4058 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4054 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3990 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3986 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3982 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3978 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3974 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3970 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3966 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3962 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3958 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3954 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3950 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3946 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3942 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3938 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3934 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3930 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3866 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3862 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3858 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3854 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3850 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3846 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3842 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3838 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3834 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3830 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3826 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3822 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3818 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3814 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3810 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3806 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3422 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3426 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3430 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3434 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3438 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3442 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3446 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3450 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3454 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3458 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3462 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3466 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3470 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3474 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3478 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3482 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3206 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3210 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3214 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3218 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3222 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3226 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3230 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3234 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3238 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3242 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3246 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3250 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3254 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3258 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3262 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3266 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3330 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3334 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3338 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3342 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3346 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3350 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3354 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3358 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4082 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4078 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4074 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4070 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4066 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4090 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3182 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3166 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4715 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4719 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4723 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4727 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4731 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4735 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4739 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4743 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4747 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4751 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4755 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4759 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4763 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4767 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4771 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4775 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2353 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2354 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2355 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2357 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2358 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2359 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2361 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2362 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2363 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2365 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2366 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2367 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2369 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2370 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2371 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2373 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2374 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2375 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2377 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2378 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2379 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2381 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2382 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2383 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2385 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2386 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2387 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2389 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2390 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2391 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2393 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2394 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2395 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2505 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2506 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2507 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2509 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2510 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2511 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2513 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2514 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2515 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2517 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2518 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2519 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2521 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2522 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2523 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2525 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2526 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2527 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2553 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2554 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2555 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2557 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2558 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2559 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2561 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2562 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2563 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2565 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2566 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2567 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2569 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2570 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2571 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2573 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2574 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2575 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2577 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2578 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2579 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2581 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2582 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2583 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2585 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2586 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2587 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2589 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2590 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2591 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2593 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2594 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2595 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2597 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2598 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2599 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2601 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2602 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2603 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2605 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2606 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2607 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2609 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2610 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2611 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2613 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2614 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2615 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2677 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2678 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2679 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2681 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2682 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2683 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2685 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2686 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2687 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2689 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2690 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2691 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2693 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2694 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2695 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2697 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2698 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2699 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2701 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2702 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2703 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2705 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2706 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2707 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2709 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2710 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2711 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2713 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2714 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2715 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2717 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2718 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2719 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2721 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2722 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2723 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2725 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2726 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2727 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2729 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2730 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2731 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2733 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2734 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2735 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2737 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2738 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2739 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2749 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2750 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2751 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2753 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2754 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2755 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2825 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2826 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2827 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2829 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2830 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2831 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2982 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2983 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$2984 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3163 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3164 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3165 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3179 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3180 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3181 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3203 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3204 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3205 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3207 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3208 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3209 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3211 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3212 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3213 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3215 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3216 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3217 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3219 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3220 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3221 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3223 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3224 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3225 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3227 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3228 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3229 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3231 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3232 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3233 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3235 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3236 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3237 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3239 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3240 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3241 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3243 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3244 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3245 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3247 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3248 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3249 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3251 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3252 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3253 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3255 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3256 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3257 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3259 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3260 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3261 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3263 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3264 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3265 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3327 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3328 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3329 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3331 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3332 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3333 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3335 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3336 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3337 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3339 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3340 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3341 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3343 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3344 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3345 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3347 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3348 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3349 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3351 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3352 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3353 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3355 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3356 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3357 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3419 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3420 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3421 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3423 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3424 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3425 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3427 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3428 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3429 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3431 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3432 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3433 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3435 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3436 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3437 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3439 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3440 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3441 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3443 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3444 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3445 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3447 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3448 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3449 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3451 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3452 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3453 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3455 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3456 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3457 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3459 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3460 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3461 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3463 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3464 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3465 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3467 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3468 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3469 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3471 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3472 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3473 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3475 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3476 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3477 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3479 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3480 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3481 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3539 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3540 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3541 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3543 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3544 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3545 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3547 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3548 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3549 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3615 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3616 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3617 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3623 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3624 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3625 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3627 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3628 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3629 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3631 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3632 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3633 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3635 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3636 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3637 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3639 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3640 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3641 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3643 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3644 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3645 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3655 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3656 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3657 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3659 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3660 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3661 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3663 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3664 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3665 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3667 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3668 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3669 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3671 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3672 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3673 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3675 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3676 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3677 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3679 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3680 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3681 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3683 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3684 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3685 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3687 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3688 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3689 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3691 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3692 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3693 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3695 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3696 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3697 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3699 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3700 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3701 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3703 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3704 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3705 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3707 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3708 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3709 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3711 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3712 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3713 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3715 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3716 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3717 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3731 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3732 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3733 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3747 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3748 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3749 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3759 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3760 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3761 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3763 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3764 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3765 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3767 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3768 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3769 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3771 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3772 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3773 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3775 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3776 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3777 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3779 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3780 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3781 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3783 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3784 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3785 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3787 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3788 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3789 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3791 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3792 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3793 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3795 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3796 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3797 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3799 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3800 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3801 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3803 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3804 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3805 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3807 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3808 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3809 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3811 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3812 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3813 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3815 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3816 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3817 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3819 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3820 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3821 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3823 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3824 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3825 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3827 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3828 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3829 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3831 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3832 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3833 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3835 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3836 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3837 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3839 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3840 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3841 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3843 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3844 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3845 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3847 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3848 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3849 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3851 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3852 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3853 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3855 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3856 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3857 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3859 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3860 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3861 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3863 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3864 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3865 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3927 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3928 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3929 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3931 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3932 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3933 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3935 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3936 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3937 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3939 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3940 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3941 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3943 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3944 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3945 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3947 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3948 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3949 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3951 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3952 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3953 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3955 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3956 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3957 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3959 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3960 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3961 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3963 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3964 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3965 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3967 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3968 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3969 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3971 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3972 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3973 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3975 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3976 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3977 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3979 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3980 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3981 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3983 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3984 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3985 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3987 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3988 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$3989 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4051 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4052 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4053 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4055 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4056 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4057 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4059 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4060 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4061 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4063 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4064 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4065 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4067 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4068 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4069 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4071 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4072 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4073 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4075 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4076 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4077 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4079 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4080 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4081 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4083 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4084 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4085 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4087 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4088 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4089 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4099 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4100 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4101 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4103 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4104 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4105 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4107 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4108 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4109 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4111 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4112 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4113 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4115 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4116 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4117 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4119 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4120 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4121 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4123 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4124 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4125 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4127 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4128 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4129 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4131 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4132 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4133 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4135 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4136 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4137 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4139 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4140 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4141 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4203 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4204 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4205 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4207 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4208 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4209 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4211 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4212 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4213 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4215 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4216 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4217 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4219 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4220 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4221 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4223 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4224 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4225 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4227 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4228 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4229 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4231 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4232 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4233 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4235 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4236 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4237 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4239 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4240 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4241 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4243 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4244 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4245 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4247 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4248 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4249 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4251 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4252 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4253 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4255 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4256 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4257 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4259 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4260 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4261 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4263 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4264 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4265 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4291 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4292 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4293 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4295 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4296 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4297 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4299 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4300 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4301 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4303 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4304 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4305 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4307 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4308 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4309 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4311 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4312 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4313 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4315 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4316 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4317 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4319 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4320 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4321 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4323 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4324 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4325 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4335 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4336 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4337 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4343 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4344 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4345 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4351 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4352 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4353 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4359 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4360 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4361 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4363 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4364 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4365 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4391 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4392 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4393 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4415 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4416 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4417 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4419 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4420 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4421 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4423 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4424 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4425 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4427 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4428 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4429 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4431 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4432 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4433 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4435 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4436 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4437 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4439 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4440 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4441 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4443 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4444 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4445 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4447 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4448 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4449 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4451 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4452 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4453 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4455 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4456 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4457 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4459 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4460 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4461 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4463 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4464 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4465 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4467 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4468 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4469 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4471 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4472 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4473 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4475 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4476 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4477 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4539 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4540 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4541 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4543 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4544 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4545 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4547 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4548 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4549 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4551 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4552 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4553 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4555 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4556 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4557 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4559 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4560 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4561 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4563 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4564 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4565 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4567 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4568 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4569 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4571 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4572 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4573 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4575 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4576 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4577 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4579 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4580 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4581 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4583 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4584 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4585 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4587 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4588 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4589 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4591 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4592 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4593 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4595 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4596 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4597 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4599 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4600 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4601 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4659 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4660 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4661 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4663 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4664 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4665 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4667 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4668 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4669 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4675 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4676 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4677 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4679 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4680 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4681 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4712 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4713 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4714 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4716 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4717 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4718 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4720 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4721 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4722 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4724 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4725 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4726 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4728 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4729 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4730 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4732 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4733 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4734 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4736 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4737 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4738 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4740 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4741 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4742 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4744 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4745 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4746 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4748 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4749 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4750 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4752 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4753 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4754 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4756 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4757 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4758 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4760 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4761 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4762 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4764 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4765 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4766 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4768 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4769 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4770 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4772 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4773 ($_DFF_P_) from module present_encryptor_top (removing D path).
Handling const CLK on $auto$ff.cc:262:slice$4774 ($_DFF_P_) from module present_encryptor_top (removing D path).

yosys> opt_clean

3.90. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \present_encryptor_top..
Removed 5 unused cells and 851 unused wires.
<suppressed ~6 debug messages>

yosys> opt_expr

3.91. Executing OPT_EXPR pass (perform const folding).
Optimizing module present_encryptor_top.
<suppressed ~442 debug messages>

yosys> opt_muxtree

3.92. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \present_encryptor_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.93. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \present_encryptor_top.
Performed a total of 0 changes.

yosys> opt_merge

3.94. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\present_encryptor_top'.
<suppressed ~612 debug messages>
Removed a total of 204 cells.

yosys> opt_share

3.95. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.96. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.97. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \present_encryptor_top..
Removed 0 unused cells and 119 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.98. Executing OPT_EXPR pass (perform const folding).
Optimizing module present_encryptor_top.
<suppressed ~17 debug messages>

yosys> opt_muxtree

3.99. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \present_encryptor_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.100. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \present_encryptor_top.
Performed a total of 0 changes.

yosys> opt_merge

3.101. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\present_encryptor_top'.
Removed a total of 0 cells.

yosys> opt_share

3.102. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.103. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.104. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \present_encryptor_top..
Removed 0 unused cells and 17 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.105. Executing OPT_EXPR pass (perform const folding).
Optimizing module present_encryptor_top.
MAX OPT ITERATION = 3

yosys> opt_expr -full

3.106. Executing OPT_EXPR pass (perform const folding).
Optimizing module present_encryptor_top.
<suppressed ~149 debug messages>

yosys> techmap -map +/techmap.v

3.107. Executing TECHMAP pass (map to technology primitives).

3.107.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.107.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> opt_expr

3.108. Executing OPT_EXPR pass (perform const folding).
Optimizing module present_encryptor_top.

yosys> opt_merge -nomux

3.109. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\present_encryptor_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.110. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \present_encryptor_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.111. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \present_encryptor_top.
Performed a total of 0 changes.

yosys> opt_merge

3.112. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\present_encryptor_top'.
Removed a total of 0 cells.

yosys> opt_dff -nosdff -nodffe -sat

3.113. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.114. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \present_encryptor_top..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.115. Executing OPT_EXPR pass (perform const folding).
Optimizing module present_encryptor_top.
MAX OPT ITERATION = 1

yosys> abc -dff

3.116. Executing ABC pass (technology mapping using ABC).

3.116.1. Summary of detected clock domains:
  29 cells in clk=\clk_i, en={ }, arst={ }, srst={ }
  231 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$757, arst={ }, srst={ }
  483 cells in clk=\clk_i, en=!\key_load, arst={ }, srst={ }

3.116.2. Extracting gate netlist of module `\present_encryptor_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i
Extracted 29 gates and 40 wires to a netlist network with 9 inputs and 4 outputs.

3.116.2.1. Executing ABC.

3.116.3. Extracting gate netlist of module `\present_encryptor_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$757
Extracted 231 gates and 382 wires to a netlist network with 151 inputs and 69 outputs.

3.116.3.1. Executing ABC.

3.116.4. Extracting gate netlist of module `\present_encryptor_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !\key_load
Extracted 483 gates and 614 wires to a netlist network with 129 inputs and 69 outputs.

3.116.4.1. Executing ABC.

yosys> abc -dff

3.117. Executing ABC pass (technology mapping using ABC).

3.117.1. Summary of detected clock domains:
  25 cells in clk=\clk_i, en={ }, arst={ }, srst={ }
  234 cells in clk=\clk_i, en=$abc$5004$auto$opt_dff.cc:194:make_patterns_logic$757, arst={ }, srst={ }
  564 cells in clk=\clk_i, en=!\key_load, arst={ }, srst={ }

3.117.2. Extracting gate netlist of module `\present_encryptor_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i
Extracted 25 gates and 29 wires to a netlist network with 4 inputs and 4 outputs.

3.117.2.1. Executing ABC.

3.117.3. Extracting gate netlist of module `\present_encryptor_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$5004$auto$opt_dff.cc:194:make_patterns_logic$757
Extracted 234 gates and 389 wires to a netlist network with 155 inputs and 69 outputs.

3.117.3.1. Executing ABC.

3.117.4. Extracting gate netlist of module `\present_encryptor_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !\key_load
Extracted 564 gates and 693 wires to a netlist network with 129 inputs and 69 outputs.

3.117.4.1. Executing ABC.

yosys> abc -dff

3.118. Executing ABC pass (technology mapping using ABC).

3.118.1. Summary of detected clock domains:
  234 cells in clk=\clk_i, en=$abc$5903$abc$5004$auto$opt_dff.cc:194:make_patterns_logic$757, arst={ }, srst={ }
  25 cells in clk=\clk_i, en={ }, arst={ }, srst={ }
  484 cells in clk=\clk_i, en=!\key_load, arst={ }, srst={ }

3.118.2. Extracting gate netlist of module `\present_encryptor_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$5903$abc$5004$auto$opt_dff.cc:194:make_patterns_logic$757
Extracted 234 gates and 389 wires to a netlist network with 155 inputs and 69 outputs.

3.118.2.1. Executing ABC.

3.118.3. Extracting gate netlist of module `\present_encryptor_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i
Extracted 25 gates and 29 wires to a netlist network with 4 inputs and 4 outputs.

3.118.3.1. Executing ABC.

3.118.4. Extracting gate netlist of module `\present_encryptor_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !\key_load
Extracted 484 gates and 613 wires to a netlist network with 129 inputs and 69 outputs.

3.118.4.1. Executing ABC.

yosys> abc -dff

3.119. Executing ABC pass (technology mapping using ABC).

3.119.1. Summary of detected clock domains:
  24 cells in clk=\clk_i, en={ }, arst={ }, srst={ }
  234 cells in clk=\clk_i, en=$abc$6692$abc$5903$abc$5004$auto$opt_dff.cc:194:make_patterns_logic$757, arst={ }, srst={ }
  500 cells in clk=\clk_i, en=!\key_load, arst={ }, srst={ }

3.119.2. Extracting gate netlist of module `\present_encryptor_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i
Extracted 24 gates and 28 wires to a netlist network with 4 inputs and 4 outputs.

3.119.2.1. Executing ABC.

3.119.3. Extracting gate netlist of module `\present_encryptor_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$6692$abc$5903$abc$5004$auto$opt_dff.cc:194:make_patterns_logic$757
Extracted 234 gates and 389 wires to a netlist network with 155 inputs and 69 outputs.

3.119.3.1. Executing ABC.

3.119.4. Extracting gate netlist of module `\present_encryptor_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !\key_load
Extracted 500 gates and 629 wires to a netlist network with 129 inputs and 69 outputs.

3.119.4.1. Executing ABC.

yosys> opt_ffinv

3.120. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt_expr

3.121. Executing OPT_EXPR pass (perform const folding).
Optimizing module present_encryptor_top.

yosys> opt_merge -nomux

3.122. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\present_encryptor_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.123. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \present_encryptor_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.124. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \present_encryptor_top.
Performed a total of 0 changes.

yosys> opt_merge

3.125. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\present_encryptor_top'.
Removed a total of 0 cells.

yosys> opt_share

3.126. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.127. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.128. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \present_encryptor_top..
Removed 0 unused cells and 4037 unused wires.
<suppressed ~23 debug messages>

yosys> opt_expr

3.129. Executing OPT_EXPR pass (perform const folding).
Optimizing module present_encryptor_top.
MAX OPT ITERATION = 1

yosys> bmuxmap

3.130. Executing BMUXMAP pass.

yosys> demuxmap

3.131. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> abc -script /tmp/yosys_8NTrvn/abc_tmp_1.scr

3.132. Executing ABC pass (technology mapping using ABC).

3.132.1. Extracting gate netlist of module `\present_encryptor_top' to `<abc-temp-dir>/input.blif'..
Extracted 605 gates and 840 wires to a netlist network with 235 inputs and 218 outputs.

3.132.1.1. Executing ABC.
DE:   #PIs = 235  #Luts =   222  Max Lvl =   3  Avg Lvl =   1.33  [   0.31 sec. at Pass 0]
DE:   #PIs = 235  #Luts =   222  Max Lvl =   2  Avg Lvl =   1.31  [   3.48 sec. at Pass 1]
DE:   #PIs = 235  #Luts =   222  Max Lvl =   2  Avg Lvl =   1.31  [   0.91 sec. at Pass 2]
DE:   #PIs = 235  #Luts =   222  Max Lvl =   2  Avg Lvl =   1.31  [   1.32 sec. at Pass 3]
DE:   #PIs = 235  #Luts =   222  Max Lvl =   2  Avg Lvl =   1.31  [   0.92 sec. at Pass 4]
DE:   #PIs = 235  #Luts =   222  Max Lvl =   2  Avg Lvl =   1.31  [   1.07 sec. at Pass 5]
DE:   #PIs = 235  #Luts =   222  Max Lvl =   2  Avg Lvl =   1.31  [   1.49 sec. at Pass 6]
DE:   #PIs = 235  #Luts =   222  Max Lvl =   2  Avg Lvl =   1.31  [   0.60 sec. at Pass 7]

yosys> opt_expr

3.133. Executing OPT_EXPR pass (perform const folding).
Optimizing module present_encryptor_top.

yosys> opt_merge -nomux

3.134. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\present_encryptor_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.135. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \present_encryptor_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.136. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \present_encryptor_top.
Performed a total of 0 changes.

yosys> opt_merge

3.137. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\present_encryptor_top'.
Removed a total of 0 cells.

yosys> opt_share

3.138. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.139. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.140. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \present_encryptor_top..
Removed 0 unused cells and 840 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.141. Executing OPT_EXPR pass (perform const folding).
Optimizing module present_encryptor_top.
MAX OPT ITERATION = 1

yosys> opt_ffinv

3.142. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> stat

3.143. Printing statistics.

=== present_encryptor_top ===

   Number of wires:                279
   Number of wire bits:           1351
   Number of public wires:          37
   Number of public wire bits:    1109
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                375
     $_DFFE_PN_                     69
     $_DFFE_PP_                     80
     $_DFF_P_                        4
     $lut                          222


yosys> shregmap -minlen 8 -maxlen 20

3.144. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.145. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.146. Printing statistics.

=== present_encryptor_top ===

   Number of wires:                279
   Number of wire bits:           1351
   Number of public wires:          37
   Number of public wire bits:    1109
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                375
     $_DFFE_PP0N_                   69
     $_DFFE_PP0P_                   80
     $_DFF_P_                        4
     $lut                          222


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.147. Executing TECHMAP pass (map to technology primitives).

3.147.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.147.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.147.3. Continuing TECHMAP pass.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFFE_PP0N_ for cells of type $_DFFE_PP0N_.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~729 debug messages>

yosys> opt_expr -mux_undef

3.148. Executing OPT_EXPR pass (perform const folding).
Optimizing module present_encryptor_top.
<suppressed ~4438 debug messages>

yosys> simplemap

3.149. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.150. Executing OPT_EXPR pass (perform const folding).
Optimizing module present_encryptor_top.

yosys> opt_merge

3.151. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\present_encryptor_top'.
<suppressed ~828 debug messages>
Removed a total of 276 cells.

yosys> opt_dff -nodffe -nosdff

3.152. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.153. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \present_encryptor_top..
Removed 0 unused cells and 1463 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.154. Executing OPT_EXPR pass (perform const folding).
Optimizing module present_encryptor_top.
<suppressed ~29 debug messages>

yosys> opt_merge -nomux

3.155. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\present_encryptor_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.156. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \present_encryptor_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.157. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \present_encryptor_top.
Performed a total of 0 changes.

yosys> opt_merge

3.158. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\present_encryptor_top'.
Removed a total of 0 cells.

yosys> opt_share

3.159. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.160. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.161. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \present_encryptor_top..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.162. Executing OPT_EXPR pass (perform const folding).
Optimizing module present_encryptor_top.
MAX OPT ITERATION = 1

yosys> abc -script /tmp/yosys_8NTrvn/abc_tmp_2.scr

3.163. Executing ABC pass (technology mapping using ABC).

3.163.1. Extracting gate netlist of module `\present_encryptor_top' to `<abc-temp-dir>/input.blif'..
Extracted 733 gates and 970 wires to a netlist network with 235 inputs and 219 outputs.

3.163.1.1. Executing ABC.
DE:   #PIs = 235  #Luts =   223  Max Lvl =   2  Avg Lvl =   1.31  [   0.26 sec. at Pass 0]
DE:   #PIs = 235  #Luts =   223  Max Lvl =   2  Avg Lvl =   1.31  [   3.46 sec. at Pass 1]
DE:   #PIs = 235  #Luts =   223  Max Lvl =   2  Avg Lvl =   1.31  [   0.97 sec. at Pass 2]
DE:   #PIs = 235  #Luts =   223  Max Lvl =   2  Avg Lvl =   1.31  [   1.07 sec. at Pass 3]
DE:   #PIs = 235  #Luts =   223  Max Lvl =   2  Avg Lvl =   1.31  [   1.25 sec. at Pass 4]
DE:   #PIs = 235  #Luts =   223  Max Lvl =   2  Avg Lvl =   1.31  [   1.69 sec. at Pass 5]
DE:   #PIs = 235  #Luts =   223  Max Lvl =   2  Avg Lvl =   1.31  [   1.39 sec. at Pass 6]
DE:   #PIs = 235  #Luts =   223  Max Lvl =   2  Avg Lvl =   1.31  [   0.31 sec. at Pass 7]

yosys> opt_expr

3.164. Executing OPT_EXPR pass (perform const folding).
Optimizing module present_encryptor_top.

yosys> opt_merge -nomux

3.165. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\present_encryptor_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.166. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \present_encryptor_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.167. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \present_encryptor_top.
Performed a total of 0 changes.

yosys> opt_merge

3.168. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\present_encryptor_top'.
Removed a total of 0 cells.

yosys> opt_share

3.169. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.170. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.171. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \present_encryptor_top..
Removed 0 unused cells and 787 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.172. Executing OPT_EXPR pass (perform const folding).
Optimizing module present_encryptor_top.
MAX OPT ITERATION = 1

yosys> hierarchy -check

3.173. Executing HIERARCHY pass (managing design hierarchy).

3.173.1. Analyzing design hierarchy..
Top module:  \present_encryptor_top

3.173.2. Analyzing design hierarchy..
Top module:  \present_encryptor_top
Removed 0 unused modules.

yosys> stat

3.174. Printing statistics.

=== present_encryptor_top ===

   Number of wires:                280
   Number of wire bits:           1352
   Number of public wires:          37
   Number of public wire bits:    1109
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                376
     $lut                          223
     dffsre                        153


yosys> opt_clean -purge

3.175. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \present_encryptor_top..
Removed 0 unused cells and 30 unused wires.
<suppressed ~30 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.176. Executing Verilog backend.
Dumping module `\present_encryptor_top'.

Warnings: 1 unique messages, 1 total
End of script. Logfile hash: 78be3e7495, CPU: user 1.83s system 0.06s, MEM: 43.64 MB peak
Yosys 0.18+10 (git sha1 c98b0e94e, gcc 9.4.0 -fPIC -Os)
Time spent: 92% 6x abc (22 sec), 2% 29x opt_expr (0 sec), ...
real 34.63
user 20.68
sys 3.39
