
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.140
 Yosys 0.18+10 (git sha1 92b23013e, gcc 11.2.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Sep22_SW_Release, released at Fri Sep 30 20:01:32 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k testbench.v xtea.v

yosys> verific -vlog2k testbench.v xtea.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Sep22_SW_Release, released at Fri Sep 30 20:01:32 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'testbench.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'xtea.v'

yosys> synth_rs -top xtea -tech genesis2 -goal area -de -verilog synthesized.v

3. Executing synth_rs pass: v0.4.116

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis2/cells_sim.v +/rapidsilicon/genesis2/dsp_sim.v +/rapidsilicon/genesis2/brams_sim.v

3.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/cells_sim.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dff'.
Generating RTLIL representation for module `\dffn'.
Generating RTLIL representation for module `\sdff'.
Generating RTLIL representation for module `\sdffn'.
Generating RTLIL representation for module `\dffr'.
Generating RTLIL representation for module `\dffnr'.
Generating RTLIL representation for module `\dffe'.
Generating RTLIL representation for module `\dffne'.
Generating RTLIL representation for module `\sdffre'.
Generating RTLIL representation for module `\sdffnre'.
Generating RTLIL representation for module `\dffre'.
Generating RTLIL representation for module `\dffnre'.
Generating RTLIL representation for module `\latch'.
Generating RTLIL representation for module `\latchn'.
Generating RTLIL representation for module `\latchr'.
Generating RTLIL representation for module `\latchnr'.
Generating RTLIL representation for module `\fa_1bit'.
Successfully finished Verilog frontend.

3.3. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/dsp_sim.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/dsp_sim.v' to AST representation.
Generating RTLIL representation for module `\RS_DSP'.
Generating RTLIL representation for module `\RS_DSP_MULT'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTADD'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTACC'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_ports'.
Successfully finished Verilog frontend.

3.4. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/brams_sim.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/brams_sim.v' to AST representation.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\RS_TDP36K'.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top xtea

3.5. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] xtea.v:44: compiling module 'xtea'
Importing module xtea.

3.5.1. Analyzing design hierarchy..
Top module:  \xtea

3.5.2. Analyzing design hierarchy..
Top module:  \xtea
Removed 0 unused modules.

yosys> proc

3.6. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.6.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.6.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.6.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.6.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.6.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.6.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.6.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.6.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.6.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.6.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.6.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.6.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
<suppressed ~1 debug messages>

yosys> demuxmap

3.7. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> flatten

3.8. Executing FLATTEN pass (flatten design).

yosys> demuxmap

3.9. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> tribuf -logic -formal

3.10. Executing TRIBUF pass.

yosys> deminout

3.11. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

yosys> opt_clean

3.13. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 129 unused cells and 164 unused wires.
<suppressed ~141 debug messages>

yosys> check

3.14. Executing CHECK pass (checking for obvious problems).
Checking module xtea...
Found and reported 0 problems.

yosys> opt_expr

3.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

yosys> opt_merge -nomux

3.16. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~75 debug messages>

yosys> opt_reduce

3.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
    New ctrl vector for $pmux cell $verific$Select_197$xtea.v:188$464: $auto$opt_reduce.cc:134:opt_pmux$789
    New ctrl vector for $pmux cell $verific$Select_198$xtea.v:188$465: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$791 }
    New ctrl vector for $pmux cell $verific$Select_206$xtea.v:188$471: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$793 }
    New ctrl vector for $pmux cell $verific$Select_214$xtea.v:188$476: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$795 }
    New ctrl vector for $pmux cell $verific$Select_222$xtea.v:188$481: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$797 }
    New ctrl vector for $pmux cell $verific$Select_230$xtea.v:188$486: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$799 }
    New ctrl vector for $pmux cell $verific$Select_238$xtea.v:188$491: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$801 }
    New ctrl vector for $pmux cell $verific$Select_246$xtea.v:188$496: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$803 }
    New ctrl vector for $pmux cell $verific$Select_254$xtea.v:188$501: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$805 }
    New ctrl vector for $pmux cell $verific$Select_262$xtea.v:188$506: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$807 }
    New ctrl vector for $pmux cell $verific$Select_270$xtea.v:188$511: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$809 }
    New ctrl vector for $pmux cell $verific$Select_278$xtea.v:188$516: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$811 }
    New ctrl vector for $pmux cell $verific$Select_286$xtea.v:188$521: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$813 }
    New ctrl vector for $pmux cell $verific$Select_294$xtea.v:188$526: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$815 }
    New ctrl vector for $pmux cell $verific$Select_302$xtea.v:188$531: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$817 }
    New ctrl vector for $pmux cell $verific$Select_310$xtea.v:188$536: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$819 }
    New ctrl vector for $pmux cell $verific$Select_318$xtea.v:188$541: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$821 }
    New ctrl vector for $pmux cell $verific$Select_326$xtea.v:188$546: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$823 }
    New ctrl vector for $pmux cell $verific$Select_334$xtea.v:188$551: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$825 }
    New ctrl vector for $pmux cell $verific$Select_342$xtea.v:188$556: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$827 }
    New ctrl vector for $pmux cell $verific$Select_350$xtea.v:188$561: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$829 }
    New ctrl vector for $pmux cell $verific$Select_358$xtea.v:188$566: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$831 }
    New ctrl vector for $pmux cell $verific$Select_366$xtea.v:188$571: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$833 }
    New ctrl vector for $pmux cell $verific$Select_374$xtea.v:188$576: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$835 }
    New ctrl vector for $pmux cell $verific$Select_382$xtea.v:188$581: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$837 }
    New ctrl vector for $pmux cell $verific$Select_390$xtea.v:188$586: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$839 }
    New ctrl vector for $pmux cell $verific$Select_398$xtea.v:188$591: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$841 }
    New ctrl vector for $pmux cell $verific$Select_406$xtea.v:188$596: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$843 }
    New ctrl vector for $pmux cell $verific$Select_414$xtea.v:188$601: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$845 }
    New ctrl vector for $pmux cell $verific$Select_422$xtea.v:188$606: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$847 }
    New ctrl vector for $pmux cell $verific$Select_430$xtea.v:188$611: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$849 }
    New ctrl vector for $pmux cell $verific$Select_438$xtea.v:188$616: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$851 }
    New ctrl vector for $pmux cell $verific$Select_446$xtea.v:188$621: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$853 }
    New ctrl vector for $pmux cell $verific$Select_454$xtea.v:188$626: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$855 }
    New ctrl vector for $pmux cell $verific$Select_462$xtea.v:188$631: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$857 }
    New ctrl vector for $pmux cell $verific$Select_470$xtea.v:188$636: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$859 }
    New ctrl vector for $pmux cell $verific$Select_478$xtea.v:188$641: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$861 }
    New ctrl vector for $pmux cell $verific$Select_486$xtea.v:188$646: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$863 }
    New ctrl vector for $pmux cell $verific$Select_494$xtea.v:188$651: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$865 }
    New ctrl vector for $pmux cell $verific$Select_502$xtea.v:188$656: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$867 }
    New ctrl vector for $pmux cell $verific$Select_510$xtea.v:188$661: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$869 }
    New ctrl vector for $pmux cell $verific$Select_518$xtea.v:188$666: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$871 }
    New ctrl vector for $pmux cell $verific$Select_526$xtea.v:188$671: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$873 }
    New ctrl vector for $pmux cell $verific$Select_534$xtea.v:188$676: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$875 }
    New ctrl vector for $pmux cell $verific$Select_542$xtea.v:188$681: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$877 }
    New ctrl vector for $pmux cell $verific$Select_550$xtea.v:188$686: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$879 }
    New ctrl vector for $pmux cell $verific$Select_558$xtea.v:188$691: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$881 }
    New ctrl vector for $pmux cell $verific$Select_566$xtea.v:188$696: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$883 }
    New ctrl vector for $pmux cell $verific$Select_574$xtea.v:188$701: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$885 }
    New ctrl vector for $pmux cell $verific$Select_582$xtea.v:188$706: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$887 }
    New ctrl vector for $pmux cell $verific$Select_590$xtea.v:188$711: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$889 }
    New ctrl vector for $pmux cell $verific$Select_598$xtea.v:188$716: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$891 }
    New ctrl vector for $pmux cell $verific$Select_606$xtea.v:188$721: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$893 }
    New ctrl vector for $pmux cell $verific$Select_614$xtea.v:188$726: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$895 }
    New ctrl vector for $pmux cell $verific$Select_622$xtea.v:188$731: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$897 }
    New ctrl vector for $pmux cell $verific$Select_630$xtea.v:188$736: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$899 }
    New ctrl vector for $pmux cell $verific$Select_638$xtea.v:188$741: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$901 }
    New ctrl vector for $pmux cell $verific$Select_646$xtea.v:188$746: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$903 }
    New ctrl vector for $pmux cell $verific$Select_654$xtea.v:188$751: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$905 }
    New ctrl vector for $pmux cell $verific$Select_662$xtea.v:188$756: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$907 }
    New ctrl vector for $pmux cell $verific$Select_670$xtea.v:188$761: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$909 }
    New ctrl vector for $pmux cell $verific$Select_678$xtea.v:188$766: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$911 }
    New ctrl vector for $pmux cell $verific$Select_686$xtea.v:188$771: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$913 }
    New ctrl vector for $pmux cell $verific$Select_694$xtea.v:188$777: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$915 }
    New ctrl vector for $pmux cell $verific$Select_702$xtea.v:188$782: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$917 }
    New ctrl vector for $pmux cell $verific$select_173$xtea.v:188$444: { $verific$n3719$8 $verific$n3727$16 $verific$n3729$18 $auto$opt_reduce.cc:134:opt_pmux$919 }
    New ctrl vector for $pmux cell $verific$select_174$xtea.v:188$445: { $verific$n3719$8 $verific$n3724$13 $verific$n3732$21 $auto$opt_reduce.cc:134:opt_pmux$921 }
    New ctrl vector for $pmux cell $verific$select_175$xtea.v:188$446: { $verific$n3719$8 $auto$opt_reduce.cc:134:opt_pmux$923 }
    New ctrl vector for $pmux cell $verific$select_176$xtea.v:188$447: { $verific$n3719$8 $verific$n3725$14 $verific$n3730$19 $auto$opt_reduce.cc:134:opt_pmux$925 }
    New ctrl vector for $pmux cell $verific$select_180$xtea.v:188$450: { $auto$opt_reduce.cc:134:opt_pmux$931 $auto$opt_reduce.cc:134:opt_pmux$929 $auto$opt_reduce.cc:134:opt_pmux$927 }
    New ctrl vector for $pmux cell $verific$select_181$xtea.v:188$451: { $auto$opt_reduce.cc:134:opt_pmux$935 $auto$opt_reduce.cc:134:opt_pmux$933 }
    New ctrl vector for $pmux cell $verific$select_33$xtea.v:90$392: { $verific$n23$4 $verific$n3720$9 $verific$n3721$10 $verific$n3722$11 $verific$n3723$12 $verific$n3724$13 $verific$n3725$14 $verific$n3726$15 $verific$n3728$17 $verific$n3729$18 $verific$n3730$19 $verific$n3731$20 $auto$opt_reduce.cc:134:opt_pmux$939 $verific$n3733$22 $auto$opt_reduce.cc:134:opt_pmux$937 $verific$n41$5 }
  Optimizing cells in module \xtea.
Performed a total of 72 changes.

yosys> opt_merge

3.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
<suppressed ~189 debug messages>
Removed a total of 63 cells.

yosys> opt_share

3.20. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $pmux $verific$select_176$xtea.v:188$447 in front of them:
        $verific$add_123$xtea.v:162$434
        $verific$sub_67$xtea.v:141$414


yosys> opt_dff -nosdff -nodffe

3.21. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $verific$x_reg$xtea.v:189$455 ($aldff) from module xtea.
Changing const-value async load to async reset on $verific$workunit2_reg$xtea.v:189$459 ($aldff) from module xtea.
Changing const-value async load to async reset on $verific$workunit1_reg$xtea.v:189$458 ($aldff) from module xtea.
Changing const-value async load to async reset on $verific$while_flag_reg$xtea.v:189$457 ($aldff) from module xtea.
Changing const-value async load to async reset on $verific$sum_reg$xtea.v:189$456 ($aldff) from module xtea.
Changing const-value async load to async reset on $verific$state_reg$xtea.v:91$393 ($aldff) from module xtea.
Changing const-value async load to async reset on $verific$selectslice_reg$xtea.v:189$460 ($aldff) from module xtea.
Changing const-value async load to async reset on $verific$modereg_reg$xtea.v:189$463 ($aldff) from module xtea.
Changing const-value async load to async reset on $verific$delta_reg$xtea.v:189$462 ($aldff) from module xtea.
Changing const-value async load to async reset on $verific$data_out2_reg$xtea.v:189$454 ($aldff) from module xtea.
Changing const-value async load to async reset on $verific$data_out1_reg$xtea.v:189$453 ($aldff) from module xtea.
Changing const-value async load to async reset on $verific$all_done_reg$xtea.v:189$461 ($aldff) from module xtea.

yosys> opt_clean

3.22. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 0 unused cells and 65 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.23. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

yosys> opt_muxtree

3.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~76 debug messages>

yosys> opt_reduce

3.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
    New ctrl vector for $pmux cell $verific$select_176$xtea.v:188$447: { $verific$n3719$8 $auto$opt_reduce.cc:134:opt_pmux$946 $auto$opt_reduce.cc:134:opt_pmux$925 }
  Optimizing cells in module \xtea.
Performed a total of 1 changes.

yosys> opt_merge

3.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_share

3.27. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.28. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.29. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..

yosys> opt_expr

3.30. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

yosys> opt_muxtree

3.31. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~76 debug messages>

yosys> opt_reduce

3.32. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_share

3.34. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.35. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.36. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..

yosys> opt_expr

3.37. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
MAX OPT ITERATION = 3

yosys> fsm -encoding binary

3.38. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.38.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking xtea.delta as FSM state register:
    Users of register don't seem to benefit from recoding.

yosys> fsm_extract

3.38.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.38.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.38.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..

yosys> fsm_opt

3.38.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.38.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.38.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.38.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt_expr

3.39. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

yosys> opt_merge -nomux

3.40. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.41. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~76 debug messages>

yosys> opt_reduce

3.42. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.43. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_share

3.44. Executing OPT_SHARE pass.

yosys> opt_dff -sat

3.45. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $verific$x_reg$xtea.v:189$455 ($adff) from module xtea (D = $verific$n3875$362, Q = \x).
Adding EN signal on $verific$workunit2_reg$xtea.v:189$459 ($adff) from module xtea (D = $verific$n3770$358, Q = \workunit2).
Adding EN signal on $verific$workunit1_reg$xtea.v:189$458 ($adff) from module xtea (D = $verific$n3737$357, Q = \workunit1).
Adding EN signal on $verific$while_flag_reg$xtea.v:189$457 ($adff) from module xtea (D = $verific$n129$7, Q = \while_flag).
Adding EN signal on $verific$sum_reg$xtea.v:189$456 ($adff) from module xtea (D = $verific$n3836$360, Q = \sum).
Adding EN signal on $verific$selectslice_reg$xtea.v:189$460 ($adff) from module xtea (D = $verific$n3872$361, Q = \selectslice).
Adding EN signal on $verific$modereg_reg$xtea.v:189$463 ($adff) from module xtea (D = \mode, Q = \modereg).
Adding EN signal on $verific$delta_reg$xtea.v:189$462 ($adff) from module xtea (D = $verific$n3803$359, Q = \delta).
Adding EN signal on $verific$data_out2_reg$xtea.v:189$454 ($adff) from module xtea (D = { $verific$n4422$159 $verific$n4430$163 $verific$n4438$167 $verific$n4446$171 $verific$n4454$175 $verific$n4462$179 $verific$n4470$183 $verific$n4478$187 $verific$n4486$191 $verific$n4494$195 $verific$n4502$199 $verific$n4510$203 $verific$n4518$207 $verific$n4526$211 $verific$n4534$215 $verific$n4542$219 $verific$n4550$223 $verific$n4558$227 $verific$n4566$231 $verific$n4574$235 $verific$n4582$239 $verific$n4590$243 $verific$n4598$247 $verific$n4606$251 $verific$n4614$255 $verific$n4622$259 $verific$n4630$263 $verific$n4638$267 $verific$n4646$271 $verific$n4654$275 $verific$n4662$279 $verific$n4670$283 }, Q = \data_out2).
Adding EN signal on $verific$data_out1_reg$xtea.v:189$453 ($adff) from module xtea (D = { $verific$n4166$30 $verific$n4174$35 $verific$n4182$39 $verific$n4190$43 $verific$n4198$47 $verific$n4206$51 $verific$n4214$55 $verific$n4222$59 $verific$n4230$63 $verific$n4238$67 $verific$n4246$71 $verific$n4254$75 $verific$n4262$79 $verific$n4270$83 $verific$n4278$87 $verific$n4286$91 $verific$n4294$95 $verific$n4302$99 $verific$n4310$103 $verific$n4318$107 $verific$n4326$111 $verific$n4334$115 $verific$n4342$119 $verific$n4350$123 $verific$n4358$127 $verific$n4366$131 $verific$n4374$135 $verific$n4382$139 $verific$n4390$143 $verific$n4398$147 $verific$n4406$151 $verific$n4414$155 }, Q = \data_out1).
Adding EN signal on $verific$all_done_reg$xtea.v:189$461 ($adff) from module xtea (D = 1'1, Q = \all_done).
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$964 ($adffe) from module xtea.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$964 ($adffe) from module xtea.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$964 ($adffe) from module xtea.
Setting constant 0-bit at position 9 on $auto$ff.cc:262:slice$964 ($adffe) from module xtea.
Setting constant 0-bit at position 10 on $auto$ff.cc:262:slice$964 ($adffe) from module xtea.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$964 ($adffe) from module xtea.
Setting constant 0-bit at position 19 on $auto$ff.cc:262:slice$964 ($adffe) from module xtea.
Setting constant 0-bit at position 22 on $auto$ff.cc:262:slice$964 ($adffe) from module xtea.
Setting constant 0-bit at position 23 on $auto$ff.cc:262:slice$964 ($adffe) from module xtea.
Setting constant 0-bit at position 24 on $auto$ff.cc:262:slice$964 ($adffe) from module xtea.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$964 ($adffe) from module xtea.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$964 ($adffe) from module xtea.
Setting constant 0-bit at position 5 on $verific$state_reg$xtea.v:91$393 ($adff) from module xtea.
Setting constant 0-bit at position 6 on $verific$state_reg$xtea.v:91$393 ($adff) from module xtea.
Setting constant 0-bit at position 7 on $verific$state_reg$xtea.v:91$393 ($adff) from module xtea.

yosys> opt_clean

3.46. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 67 unused cells and 67 unused wires.
<suppressed ~68 debug messages>

yosys> opt_expr

3.47. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
<suppressed ~12 debug messages>

yosys> opt_muxtree

3.48. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~73 debug messages>

yosys> opt_reduce

3.49. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.50. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_share

3.51. Executing OPT_SHARE pass.

yosys> opt_dff -sat

3.52. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.53. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 6 unused cells and 6 unused wires.
<suppressed ~7 debug messages>

yosys> opt_expr

3.54. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

yosys> opt_muxtree

3.55. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~73 debug messages>

yosys> opt_reduce

3.56. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.57. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_share

3.58. Executing OPT_SHARE pass.

yosys> opt_dff -sat

3.59. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.60. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..

yosys> opt_expr

3.61. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
MAX OPT ITERATION = 3

yosys> wreduce -keepdc

3.62. Executing WREDUCE pass (reducing word size of cells).
Removed top 4 bits (of 5) from port B of cell xtea.$verific$equal_15$xtea.v:72$372 ($eq).
Removed top 3 bits (of 5) from port B of cell xtea.$verific$equal_16$xtea.v:73$373 ($eq).
Removed top 3 bits (of 5) from port B of cell xtea.$verific$equal_17$xtea.v:74$374 ($eq).
Removed top 2 bits (of 5) from port B of cell xtea.$verific$equal_18$xtea.v:75$375 ($eq).
Removed top 2 bits (of 5) from port B of cell xtea.$verific$equal_19$xtea.v:76$376 ($eq).
Removed top 2 bits (of 5) from port B of cell xtea.$verific$equal_20$xtea.v:77$377 ($eq).
Removed top 2 bits (of 5) from port B of cell xtea.$verific$equal_21$xtea.v:78$378 ($eq).
Removed top 1 bits (of 5) from port B of cell xtea.$verific$equal_22$xtea.v:79$379 ($eq).
Removed top 1 bits (of 5) from port B of cell xtea.$verific$equal_23$xtea.v:80$380 ($eq).
Removed top 1 bits (of 5) from port B of cell xtea.$verific$equal_24$xtea.v:81$381 ($eq).
Removed top 1 bits (of 5) from port B of cell xtea.$verific$equal_25$xtea.v:82$382 ($eq).
Removed top 1 bits (of 5) from port B of cell xtea.$verific$equal_26$xtea.v:83$383 ($eq).
Removed top 1 bits (of 5) from port B of cell xtea.$verific$equal_27$xtea.v:84$384 ($eq).
Removed top 1 bits (of 5) from port B of cell xtea.$verific$equal_28$xtea.v:85$385 ($eq).
Removed top 1 bits (of 5) from port B of cell xtea.$verific$equal_29$xtea.v:86$386 ($eq).
Removed top 3 bits (of 8) from mux cell xtea.$verific$select_33$xtea.v:90$392 ($pmux).
Removed top 2 bits (of 8) from port B of cell xtea.$verific$LessThan_39$xtea.v:120$397 ($lt).
Removed top 5 bits (of 32) from port B of cell xtea.$verific$xor_42$xtea.v:135$399 ($xor).
Removed top 5 bits (of 32) from port B of cell xtea.$verific$xor_70$xtea.v:145$416 ($xor).
Removed top 7 bits (of 8) from port B of cell xtea.$verific$add_95$xtea.v:151$428 ($add).
Removed top 1 bits (of 4) from wire xtea.$verific$n14$288.
Removed top 3 bits (of 8) from wire xtea.$verific$n42$289.
Removed top 5 bits (of 32) from wire xtea.delta.
Removed top 3 bits (of 8) from wire xtea.state.
Removed top 3 bits (of 32) from wire xtea.workunit2.

yosys> peepopt

3.63. Executing PEEPOPT pass (run peephole optimizers).

yosys> opt_clean

3.64. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

yosys> demuxmap

3.65. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> stat

3.66. Printing statistics.

=== xtea ===

   Number of wires:                171
   Number of wire bits:           1977
   Number of public wires:          18
   Number of public wire bits:     397
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                161
     $add                           16
     $adff                           1
     $adffe                         11
     $bmux                           2
     $eq                            17
     $logic_not                      1
     $lt                             1
     $mux                            1
     $neg                            1
     $not                            4
     $pmux                          72
     $reduce_or                     16
     $sub                            8
     $xor                           10


yosys> wreduce t:$mul

3.67. Executing WREDUCE pass (reducing word size of cells).

yosys> rs_dsp_macc -genesis2 -max_dsp 154

3.68. Executing RS_DSP_MACC pass.

yosys> techmap -map +/mul2dsp_check_maxwidth.v -D DSP_A_MAXWIDTH=20 -D DSP_B_MAXWIDTH=18 -D DSP_A_MINWIDTH=11 -D DSP_B_MINWIDTH=10 -D DSP_NAME=$__RS_MUL20X18 a:valid_map

3.69. Executing TECHMAP pass (map to technology primitives).

3.69.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/mul2dsp_check_maxwidth.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/mul2dsp_check_maxwidth.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

3.69.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

yosys> stat

3.70. Printing statistics.

=== xtea ===

   Number of wires:                171
   Number of wire bits:           1977
   Number of public wires:          18
   Number of public wire bits:     397
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                161
     $add                           16
     $adff                           1
     $adffe                         11
     $bmux                           2
     $eq                            17
     $logic_not                      1
     $lt                             1
     $mux                            1
     $neg                            1
     $not                            4
     $pmux                          72
     $reduce_or                     16
     $sub                            8
     $xor                           10


yosys> chtype -set $mul t:$__soft_mul

yosys> techmap -map +/rapidsilicon/genesis2/dsp_map.v -D USE_DSP_CFG_PARAMS=0

3.71. Executing TECHMAP pass (map to technology primitives).

3.71.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/dsp_map.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/dsp_map.v' to AST representation.
Generating RTLIL representation for module `\$__RS_MUL20X18'.
Successfully finished Verilog frontend.

3.71.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

yosys> techmap -map +/rapidsilicon/genesis2/dsp_final_map.v

3.72. Executing TECHMAP pass (map to technology primitives).

3.72.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/dsp_final_map.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/dsp_final_map.v' to AST representation.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Successfully finished Verilog frontend.

3.72.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

yosys> rs-pack-dsp-regs

3.73. Executing rs_pack_dsp_regs pass.

yosys> rs_dsp_io_regs

3.74. Executing RS_DSP_IO_REGS pass.

yosys> alumacc

3.75. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module xtea:
  creating $macc model for $auto$opt_share.cc:196:merge_operators$940 ($neg).
  creating $macc model for $verific$add_102$xtea.v:156$430 ($add).
  creating $macc model for $verific$add_108$xtea.v:157$431 ($add).
  creating $macc model for $verific$add_114$xtea.v:158$432 ($add).
  creating $macc model for $verific$add_120$xtea.v:159$433 ($add).
  creating $macc model for $verific$add_123$xtea.v:162$434 ($add).
  creating $macc model for $verific$add_130$xtea.v:166$435 ($add).
  creating $macc model for $verific$add_136$xtea.v:167$436 ($add).
  creating $macc model for $verific$add_142$xtea.v:168$437 ($add).
  creating $macc model for $verific$add_148$xtea.v:169$438 ($add).
  creating $macc model for $verific$add_43$xtea.v:135$400 ($add).
  creating $macc model for $verific$add_44$xtea.v:135$401 ($add).
  creating $macc model for $verific$add_50$xtea.v:136$404 ($add).
  creating $macc model for $verific$add_56$xtea.v:137$407 ($add).
  creating $macc model for $verific$add_62$xtea.v:138$410 ($add).
  creating $macc model for $verific$add_71$xtea.v:145$417 ($add).
  creating $macc model for $verific$add_95$xtea.v:151$428 ($add).
  creating $macc model for $verific$sub_46$xtea.v:135$403 ($sub).
  creating $macc model for $verific$sub_52$xtea.v:136$406 ($sub).
  creating $macc model for $verific$sub_58$xtea.v:137$409 ($sub).
  creating $macc model for $verific$sub_64$xtea.v:138$412 ($sub).
  creating $macc model for $verific$sub_74$xtea.v:145$419 ($sub).
  creating $macc model for $verific$sub_80$xtea.v:146$421 ($sub).
  creating $macc model for $verific$sub_86$xtea.v:147$423 ($sub).
  creating $macc model for $verific$sub_92$xtea.v:148$425 ($sub).
  creating $alu model for $macc $verific$sub_92$xtea.v:148$425.
  creating $alu model for $macc $verific$sub_86$xtea.v:147$423.
  creating $alu model for $macc $verific$sub_80$xtea.v:146$421.
  creating $alu model for $macc $verific$sub_74$xtea.v:145$419.
  creating $alu model for $macc $verific$sub_64$xtea.v:138$412.
  creating $alu model for $macc $verific$sub_58$xtea.v:137$409.
  creating $alu model for $macc $verific$sub_52$xtea.v:136$406.
  creating $alu model for $macc $verific$sub_46$xtea.v:135$403.
  creating $alu model for $macc $verific$add_95$xtea.v:151$428.
  creating $alu model for $macc $verific$add_71$xtea.v:145$417.
  creating $alu model for $macc $verific$add_62$xtea.v:138$410.
  creating $alu model for $macc $verific$add_56$xtea.v:137$407.
  creating $alu model for $macc $verific$add_50$xtea.v:136$404.
  creating $alu model for $macc $verific$add_44$xtea.v:135$401.
  creating $alu model for $macc $verific$add_43$xtea.v:135$400.
  creating $alu model for $macc $verific$add_148$xtea.v:169$438.
  creating $alu model for $macc $verific$add_142$xtea.v:168$437.
  creating $alu model for $macc $verific$add_136$xtea.v:167$436.
  creating $alu model for $macc $verific$add_130$xtea.v:166$435.
  creating $alu model for $macc $verific$add_123$xtea.v:162$434.
  creating $alu model for $macc $verific$add_120$xtea.v:159$433.
  creating $alu model for $macc $verific$add_114$xtea.v:158$432.
  creating $alu model for $macc $verific$add_108$xtea.v:157$431.
  creating $alu model for $macc $verific$add_102$xtea.v:156$430.
  creating $alu model for $macc $auto$opt_share.cc:196:merge_operators$940.
  creating $alu model for $verific$LessThan_39$xtea.v:120$397 ($lt): new $alu
  creating $alu cell for $verific$LessThan_39$xtea.v:120$397: $auto$alumacc.cc:485:replace_alu$978
  creating $alu cell for $auto$opt_share.cc:196:merge_operators$940: $auto$alumacc.cc:485:replace_alu$989
  creating $alu cell for $verific$add_123$xtea.v:162$434: $auto$alumacc.cc:485:replace_alu$992
  creating $alu cell for $verific$add_130$xtea.v:166$435: $auto$alumacc.cc:485:replace_alu$995
  creating $alu cell for $verific$add_136$xtea.v:167$436: $auto$alumacc.cc:485:replace_alu$998
  creating $alu cell for $verific$add_142$xtea.v:168$437: $auto$alumacc.cc:485:replace_alu$1001
  creating $alu cell for $verific$add_148$xtea.v:169$438: $auto$alumacc.cc:485:replace_alu$1004
  creating $alu cell for $verific$add_43$xtea.v:135$400: $auto$alumacc.cc:485:replace_alu$1007
  creating $alu cell for $verific$add_44$xtea.v:135$401: $auto$alumacc.cc:485:replace_alu$1010
  creating $alu cell for $verific$add_50$xtea.v:136$404: $auto$alumacc.cc:485:replace_alu$1013
  creating $alu cell for $verific$add_56$xtea.v:137$407: $auto$alumacc.cc:485:replace_alu$1016
  creating $alu cell for $verific$add_62$xtea.v:138$410: $auto$alumacc.cc:485:replace_alu$1019
  creating $alu cell for $verific$add_71$xtea.v:145$417: $auto$alumacc.cc:485:replace_alu$1022
  creating $alu cell for $verific$add_95$xtea.v:151$428: $auto$alumacc.cc:485:replace_alu$1025
  creating $alu cell for $verific$sub_46$xtea.v:135$403: $auto$alumacc.cc:485:replace_alu$1028
  creating $alu cell for $verific$sub_52$xtea.v:136$406: $auto$alumacc.cc:485:replace_alu$1031
  creating $alu cell for $verific$sub_58$xtea.v:137$409: $auto$alumacc.cc:485:replace_alu$1034
  creating $alu cell for $verific$sub_64$xtea.v:138$412: $auto$alumacc.cc:485:replace_alu$1037
  creating $alu cell for $verific$add_102$xtea.v:156$430: $auto$alumacc.cc:485:replace_alu$1040
  creating $alu cell for $verific$sub_74$xtea.v:145$419: $auto$alumacc.cc:485:replace_alu$1043
  creating $alu cell for $verific$add_108$xtea.v:157$431: $auto$alumacc.cc:485:replace_alu$1046
  creating $alu cell for $verific$sub_80$xtea.v:146$421: $auto$alumacc.cc:485:replace_alu$1049
  creating $alu cell for $verific$add_114$xtea.v:158$432: $auto$alumacc.cc:485:replace_alu$1052
  creating $alu cell for $verific$sub_86$xtea.v:147$423: $auto$alumacc.cc:485:replace_alu$1055
  creating $alu cell for $verific$add_120$xtea.v:159$433: $auto$alumacc.cc:485:replace_alu$1058
  creating $alu cell for $verific$sub_92$xtea.v:148$425: $auto$alumacc.cc:485:replace_alu$1061
  created 26 $alu and 0 $macc cells.

yosys> opt_expr

3.76. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

yosys> opt_merge -nomux

3.77. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.78. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~73 debug messages>

yosys> opt_reduce

3.79. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.80. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_share

3.81. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe

3.82. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.83. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.84. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
MAX OPT ITERATION = 1

yosys> stat

3.85. Printing statistics.

=== xtea ===

   Number of wires:                227
   Number of wire bits:           3556
   Number of public wires:          18
   Number of public wire bits:     397
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                165
     $adff                           1
     $adffe                         11
     $alu                           26
     $bmux                           2
     $eq                            17
     $logic_not                      1
     $mux                            1
     $not                            6
     $or                             1
     $pmux                          72
     $reduce_and                     1
     $reduce_or                     16
     $xor                           10


yosys> memory -nomap

3.86. Executing MEMORY pass.

yosys> opt_mem

3.86.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.86.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.86.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.86.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.86.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.86.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..

yosys> memory_share

3.86.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.86.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.86.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..

yosys> memory_collect

3.86.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.87. Printing statistics.

=== xtea ===

   Number of wires:                227
   Number of wire bits:           3556
   Number of public wires:          18
   Number of public wire bits:     397
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                165
     $adff                           1
     $adffe                         11
     $alu                           26
     $bmux                           2
     $eq                            17
     $logic_not                      1
     $mux                            1
     $not                            6
     $or                             1
     $pmux                          72
     $reduce_and                     1
     $reduce_or                     16
     $xor                           10


yosys> muxpack

3.88. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~6 debug messages>

yosys> opt_clean

3.89. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..

yosys> memory_libmap -lib +/rapidsilicon/genesis2/brams_new_swap.txt -limit 150 a:read_swapped

3.90. Executing MEMORY_LIBMAP pass (mapping memories to cells).

yosys> memory_libmap -lib +/rapidsilicon/genesis2/brams_new.txt -limit 150

3.91. Executing MEMORY_LIBMAP pass (mapping memories to cells).

yosys> rs_bram_split -new_mapping

3.92. Executing Rs_BRAM_Split pass.

yosys> techmap -autoproc -map +/rapidsilicon/genesis2/brams_map_new.v

3.93. Executing TECHMAP pass (map to technology primitives).

3.93.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/brams_map_new.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/brams_map_new.v' to AST representation.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_TDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM18_TDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM18_SDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_SDP'.
Successfully finished Verilog frontend.

3.93.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~6 debug messages>

yosys> techmap -map +/rapidsilicon/genesis2/brams_final_map_new.v

3.94. Executing TECHMAP pass (map to technology primitives).

3.94.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/brams_final_map_new.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/brams_final_map_new.v' to AST representation.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Successfully finished Verilog frontend.

3.94.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

yosys> pmuxtree

3.95. Executing PMUXTREE pass.

yosys> muxpack

3.96. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converting xtea.$auto$pmuxtree.cc:65:recursive_mux_generator$1614 ... xtea.$auto$pmuxtree.cc:65:recursive_mux_generator$1616 to a pmux with 2 cases.
Converting xtea.$auto$pmuxtree.cc:65:recursive_mux_generator$1600 ... xtea.$auto$pmuxtree.cc:65:recursive_mux_generator$1602 to a pmux with 2 cases.
Converted 4 (p)mux cells into 2 pmux cells.
<suppressed ~164 debug messages>

yosys> memory_map

3.97. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> stat

3.98. Printing statistics.

=== xtea ===

   Number of wires:                543
   Number of wire bits:           4387
   Number of public wires:          18
   Number of public wire bits:     397
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                407
     $adff                           1
     $adffe                         11
     $alu                           26
     $bmux                           2
     $eq                            17
     $logic_not                      1
     $mux                          160
     $not                           77
     $or                             9
     $pmux                           2
     $reduce_and                     1
     $reduce_or                     90
     $xor                           10


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis2/arith_map.v

3.99. Executing TECHMAP pass (map to technology primitives).

3.99.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.99.2. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/arith_map.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.99.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $adffe.
Using template $paramod$150d098cb9cca1819459bc5073194c8c53d2862d\_90_alu for cells of type $alu.
Using template $paramod$be80489e44a49c29884f59fd81c31ed03229cfc1\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $eq.
Using template $paramod$c6baa65225090ac0a120feab1b920965244aa496\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$79fc87901d7fd8aaad689b5406671422f5fa25b9\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $bmux.
Using template $paramod$c3cd1564c35d873179656addd6052d7ea8b6d991\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $adff.
Using template $paramod$8fabc56b80a569262acfc42757a02ca0b8e91278\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $and.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001000 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100000 for cells of type $lcu.
No more expansions possible.
<suppressed ~1598 debug messages>

yosys> stat

3.100. Printing statistics.

=== xtea ===

   Number of wires:               1715
   Number of wire bits:          20908
   Number of public wires:          18
   Number of public wire bits:     397
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               5700
     $_AND_                        299
     $_DFFE_PP0N_                  126
     $_DFFE_PP0P_                   67
     $_DFF_PP0_                      5
     $_MUX_                       1829
     $_NOT_                        879
     $_OR_                         473
     $_XOR_                       1286
     fa_1bit                       736


yosys> opt_expr

3.101. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
<suppressed ~1427 debug messages>

yosys> opt_merge -nomux

3.102. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
<suppressed ~2433 debug messages>
Removed a total of 811 cells.

yosys> opt_muxtree

3.103. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.104. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.105. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_share

3.106. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe

3.107. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.108. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 156 unused cells and 1335 unused wires.
<suppressed ~157 debug messages>

yosys> opt_expr

3.109. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
<suppressed ~47 debug messages>

yosys> opt_muxtree

3.110. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.111. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.112. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
<suppressed ~75 debug messages>
Removed a total of 25 cells.

yosys> opt_share

3.113. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe

3.114. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.115. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 1 unused cells and 3 unused wires.
<suppressed ~2 debug messages>

yosys> opt_expr

3.116. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

yosys> opt_muxtree

3.117. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.118. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.119. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_share

3.120. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe

3.121. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.122. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..

yosys> opt_expr

3.123. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
MAX OPT ITERATION = 3

yosys> opt_expr -full

3.124. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
<suppressed ~271 debug messages>

yosys> techmap -map +/techmap.v

3.125. Executing TECHMAP pass (map to technology primitives).

3.125.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.125.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> stat

3.126. Printing statistics.

=== xtea ===

   Number of wires:                428
   Number of wire bits:           4786
   Number of public wires:          18
   Number of public wire bits:     397
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3317
     $_AND_                        238
     $_DFFE_PP0N_                  110
     $_DFFE_PP0P_                   64
     $_DFF_PP0_                      5
     $_MUX_                        576
     $_NOT_                        295
     $_OR_                         202
     $_XOR_                       1091
     fa_1bit                       736


yosys> dfflegalize -cell $_SDFF_???_ 0 -cell $_SDFFE_????_ 0 t:$_SDFFCE_*

3.127. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.128. Printing statistics.

=== xtea ===

   Number of wires:                428
   Number of wire bits:           4786
   Number of public wires:          18
   Number of public wire bits:     397
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3317
     $_AND_                        238
     $_DFFE_PP0N_                  110
     $_DFFE_PP0P_                   64
     $_DFF_PP0_                      5
     $_MUX_                        576
     $_NOT_                        295
     $_OR_                         202
     $_XOR_                       1091
     fa_1bit                       736


yosys> opt_expr

3.129. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

yosys> opt_merge -nomux

3.130. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.131. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.132. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.133. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -sat

3.134. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.135. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 5 unused cells and 73 unused wires.
<suppressed ~6 debug messages>

yosys> opt_expr

3.136. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

yosys> opt_muxtree

3.137. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.138. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.139. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -sat

3.140. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.141. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..

yosys> opt_expr

3.142. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
MAX OPT ITERATION = 2

yosys> abc -dff -keepff

3.143. Executing ABC pass (technology mapping using ABC).

3.143.1. Summary of detected clock domains:
  99 cells in clk=\clock, en={ }, arst=\reset, srst={ }
  21 cells in clk=\clock, en=!$auto$opt_reduce.cc:134:opt_pmux$923, arst=\reset, srst={ }
  3 cells in clk=\clock, en=!$auto$simplemap.cc:257:simplemap_eqne$2063, arst=\reset, srst={ }
  1268 cells in clk=\clock, en=!$auto$opt_reduce.cc:134:opt_pmux$919, arst=\reset, srst={ }
  13 cells in clk=\clock, en=!$auto$simplemap.cc:257:simplemap_eqne$2081, arst=\reset, srst={ }
  279 cells in clk=\clock, en=!$auto$opt_reduce.cc:134:opt_pmux$925, arst=\reset, srst={ }
  563 cells in clk=\clock, en=!$auto$opt_reduce.cc:134:opt_pmux$927, arst=\reset, srst={ }
  916 cells in clk=\clock, en=!$auto$opt_reduce.cc:134:opt_pmux$921, arst=\reset, srst={ }
  98 cells in clk=\clock, en=$auto$opt_reduce.cc:134:opt_pmux$789, arst=\reset, srst={ }
  3 cells in clk=\clock, en=!$auto$simplemap.cc:257:simplemap_eqne$2351, arst=\reset, srst={ }
  49 cells in clk=\clock, en=!$auto$opt_reduce.cc:134:opt_pmux$933, arst=\reset, srst={ }

3.143.2. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 99 gates and 122 wires to a netlist network with 21 inputs and 28 outputs.

3.143.2.1. Executing ABC.

3.143.3. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$auto$opt_reduce.cc:134:opt_pmux$923, asynchronously reset by \reset
Extracted 19 gates and 37 wires to a netlist network with 17 inputs and 8 outputs.

3.143.3.1. Executing ABC.

3.143.4. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$abc$7579$auto$simplemap.cc:257:simplemap_eqne$2063, asynchronously reset by \reset
Extracted 3 gates and 6 wires to a netlist network with 3 inputs and 3 outputs.

3.143.4.1. Executing ABC.

3.143.5. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$auto$opt_reduce.cc:134:opt_pmux$919, asynchronously reset by \reset
Extracted 830 gates and 1122 wires to a netlist network with 291 inputs and 381 outputs.

3.143.5.1. Executing ABC.

3.143.6. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$abc$7579$auto$simplemap.cc:257:simplemap_eqne$2081, asynchronously reset by \reset
Extracted 13 gates and 21 wires to a netlist network with 8 inputs and 2 outputs.

3.143.6.1. Executing ABC.

3.143.7. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$auto$opt_reduce.cc:134:opt_pmux$925, asynchronously reset by \reset
Extracted 249 gates and 425 wires to a netlist network with 176 inputs and 200 outputs.

3.143.7.1. Executing ABC.

3.143.8. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$auto$opt_reduce.cc:134:opt_pmux$927, asynchronously reset by \reset
Extracted 435 gates and 994 wires to a netlist network with 559 inputs and 136 outputs.

3.143.8.1. Executing ABC.

3.143.9. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$auto$opt_reduce.cc:134:opt_pmux$921, asynchronously reset by \reset
Extracted 778 gates and 1053 wires to a netlist network with 275 inputs and 477 outputs.

3.143.9.1. Executing ABC.

3.143.10. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_reduce.cc:134:opt_pmux$789, asynchronously reset by \reset
Extracted 98 gates and 165 wires to a netlist network with 66 inputs and 66 outputs.

3.143.10.1. Executing ABC.

3.143.11. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$auto$simplemap.cc:257:simplemap_eqne$2351, asynchronously reset by \reset
Extracted 3 gates and 7 wires to a netlist network with 3 inputs and 3 outputs.

3.143.11.1. Executing ABC.

3.143.12. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$auto$opt_reduce.cc:134:opt_pmux$933, asynchronously reset by \reset
Extracted 49 gates and 59 wires to a netlist network with 10 inputs and 22 outputs.

3.143.12.1. Executing ABC.

yosys> abc -dff -keepff

3.144. Executing ABC pass (technology mapping using ABC).

3.144.1. Summary of detected clock domains:
  11 cells in clk=\clock, en=!$abc$7579$auto$simplemap.cc:257:simplemap_eqne$2081, arst=\reset, srst={ }
  770 cells in clk=\clock, en=!$abc$8572$auto$opt_reduce.cc:134:opt_pmux$927, arst=\reset, srst={ }
  5 cells in clk=\clock, en=!$abc$7579$auto$simplemap.cc:257:simplemap_eqne$2063, arst=\reset, srst={ }
  20 cells in clk=\clock, en=!$abc$7672$auto$opt_reduce.cc:134:opt_pmux$923, arst=\reset, srst={ }
  283 cells in clk=\clock, en=!$abc$8314$auto$opt_reduce.cc:134:opt_pmux$925, arst=\reset, srst={ }
  77 cells in clk=\clock, en={ }, arst=\reset, srst={ }
  702 cells in clk=\clock, en=!$abc$9022$auto$opt_reduce.cc:134:opt_pmux$921, arst=\reset, srst={ }
  5 cells in clk=\clock, en=!$abc$9786$auto$simplemap.cc:257:simplemap_eqne$2351, arst=\reset, srst={ }
  932 cells in clk=\clock, en=!$abc$7697$auto$opt_reduce.cc:134:opt_pmux$919, arst=\reset, srst={ }
  92 cells in clk=\clock, en=$abc$9655$auto$opt_reduce.cc:134:opt_pmux$789, arst=\reset, srst={ }
  57 cells in clk=\clock, en=!$abc$9791$auto$opt_reduce.cc:134:opt_pmux$933, arst=\reset, srst={ }

3.144.2. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$abc$7579$auto$simplemap.cc:257:simplemap_eqne$2081, asynchronously reset by \reset
Extracted 11 gates and 21 wires to a netlist network with 10 inputs and 4 outputs.

3.144.2.1. Executing ABC.

3.144.3. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$abc$8572$auto$opt_reduce.cc:134:opt_pmux$927, asynchronously reset by \reset
Extracted 630 gates and 1304 wires to a netlist network with 674 inputs and 263 outputs.

3.144.3.1. Executing ABC.

3.144.4. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$abc$7579$auto$simplemap.cc:257:simplemap_eqne$2063, asynchronously reset by \reset
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 5 outputs.

3.144.4.1. Executing ABC.

3.144.5. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$abc$7672$auto$opt_reduce.cc:134:opt_pmux$923, asynchronously reset by \reset
Extracted 18 gates and 35 wires to a netlist network with 17 inputs and 7 outputs.

3.144.5.1. Executing ABC.

3.144.6. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$abc$8314$auto$opt_reduce.cc:134:opt_pmux$925, asynchronously reset by \reset
Extracted 253 gates and 430 wires to a netlist network with 177 inputs and 201 outputs.

3.144.6.1. Executing ABC.

3.144.7. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 77 gates and 103 wires to a netlist network with 26 inputs and 23 outputs.

3.144.7.1. Executing ABC.

3.144.8. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$abc$9022$auto$opt_reduce.cc:134:opt_pmux$921, asynchronously reset by \reset
Extracted 529 gates and 813 wires to a netlist network with 284 inputs and 379 outputs.

3.144.8.1. Executing ABC.

3.144.9. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$abc$9786$auto$simplemap.cc:257:simplemap_eqne$2351, asynchronously reset by \reset
Extracted 5 gates and 9 wires to a netlist network with 3 inputs and 3 outputs.

3.144.9.1. Executing ABC.

3.144.10. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$abc$7697$auto$opt_reduce.cc:134:opt_pmux$919, asynchronously reset by \reset
Extracted 541 gates and 809 wires to a netlist network with 268 inputs and 348 outputs.

3.144.10.1. Executing ABC.

3.144.11. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$9655$auto$opt_reduce.cc:134:opt_pmux$789, asynchronously reset by \reset
Extracted 92 gates and 160 wires to a netlist network with 68 inputs and 66 outputs.

3.144.11.1. Executing ABC.

3.144.12. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$abc$9791$auto$opt_reduce.cc:134:opt_pmux$933, asynchronously reset by \reset
Extracted 57 gates and 69 wires to a netlist network with 12 inputs and 25 outputs.

3.144.12.1. Executing ABC.

yosys> abc -dff -keepff

3.145. Executing ABC pass (technology mapping using ABC).

3.145.1. Summary of detected clock domains:
  10 cells in clk=\clock, en=!$abc$9844$abc$7579$auto$simplemap.cc:257:simplemap_eqne$2081, arst=\reset, srst={ }
  5 cells in clk=\clock, en=!$abc$10482$abc$7579$auto$simplemap.cc:257:simplemap_eqne$2063, arst=\reset, srst={ }
  26 cells in clk=\clock, en=!$abc$10489$abc$7672$auto$opt_reduce.cc:134:opt_pmux$923, arst=\reset, srst={ }
  760 cells in clk=\clock, en=!$abc$9856$abc$8572$auto$opt_reduce.cc:134:opt_pmux$927, arst=\reset, srst={ }
  71 cells in clk=\clock, en={ }, arst=\reset, srst={ }
  278 cells in clk=\clock, en=!$abc$10508$abc$8314$auto$opt_reduce.cc:134:opt_pmux$925, arst=\reset, srst={ }
  762 cells in clk=\clock, en=!$abc$10834$abc$9022$auto$opt_reduce.cc:134:opt_pmux$921, arst=\reset, srst={ }
  3 cells in clk=\clock, en=!$abc$11369$abc$9786$auto$simplemap.cc:257:simplemap_eqne$2351, arst=\reset, srst={ }
  864 cells in clk=\clock, en=!$abc$11374$abc$7697$auto$opt_reduce.cc:134:opt_pmux$919, arst=\reset, srst={ }
  108 cells in clk=\clock, en=$abc$11918$abc$9655$auto$opt_reduce.cc:134:opt_pmux$789, arst=\reset, srst={ }
  59 cells in clk=\clock, en=!$abc$12049$abc$9791$auto$opt_reduce.cc:134:opt_pmux$933, arst=\reset, srst={ }

3.145.2. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$abc$9844$abc$7579$auto$simplemap.cc:257:simplemap_eqne$2081, asynchronously reset by \reset
Extracted 10 gates and 20 wires to a netlist network with 10 inputs and 3 outputs.

3.145.2.1. Executing ABC.

3.145.3. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$abc$10482$abc$7579$auto$simplemap.cc:257:simplemap_eqne$2063, asynchronously reset by \reset
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 5 outputs.

3.145.3.1. Executing ABC.

3.145.4. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$abc$10489$abc$7672$auto$opt_reduce.cc:134:opt_pmux$923, asynchronously reset by \reset
Extracted 24 gates and 42 wires to a netlist network with 18 inputs and 9 outputs.

3.145.4.1. Executing ABC.

3.145.5. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$abc$9856$abc$8572$auto$opt_reduce.cc:134:opt_pmux$927, asynchronously reset by \reset
Extracted 620 gates and 1292 wires to a netlist network with 672 inputs and 269 outputs.

3.145.5.1. Executing ABC.

3.145.6. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 71 gates and 98 wires to a netlist network with 27 inputs and 19 outputs.

3.145.6.1. Executing ABC.

3.145.7. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$abc$10508$abc$8314$auto$opt_reduce.cc:134:opt_pmux$925, asynchronously reset by \reset
Extracted 248 gates and 424 wires to a netlist network with 176 inputs and 199 outputs.

3.145.7.1. Executing ABC.

3.145.8. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$abc$10834$abc$9022$auto$opt_reduce.cc:134:opt_pmux$921, asynchronously reset by \reset
Extracted 529 gates and 818 wires to a netlist network with 289 inputs and 377 outputs.

3.145.8.1. Executing ABC.

3.145.9. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$abc$11369$abc$9786$auto$simplemap.cc:257:simplemap_eqne$2351, asynchronously reset by \reset
Extracted 3 gates and 7 wires to a netlist network with 3 inputs and 3 outputs.

3.145.9.1. Executing ABC.

3.145.10. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$abc$11374$abc$7697$auto$opt_reduce.cc:134:opt_pmux$919, asynchronously reset by \reset
Extracted 533 gates and 805 wires to a netlist network with 272 inputs and 336 outputs.

3.145.10.1. Executing ABC.

3.145.11. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$11918$abc$9655$auto$opt_reduce.cc:134:opt_pmux$789, asynchronously reset by \reset
Extracted 108 gates and 175 wires to a netlist network with 67 inputs and 65 outputs.

3.145.11.1. Executing ABC.

3.145.12. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$abc$12049$abc$9791$auto$opt_reduce.cc:134:opt_pmux$933, asynchronously reset by \reset
Extracted 59 gates and 72 wires to a netlist network with 13 inputs and 28 outputs.

3.145.12.1. Executing ABC.

yosys> abc -dff -keepff

3.146. Executing ABC pass (technology mapping using ABC).

3.146.1. Summary of detected clock domains:
  10 cells in clk=\clock, en=!$abc$12105$abc$9844$abc$7579$auto$simplemap.cc:257:simplemap_eqne$2081, arst=\reset, srst={ }
  5 cells in clk=\clock, en=!$abc$12116$abc$10482$abc$7579$auto$simplemap.cc:257:simplemap_eqne$2063, arst=\reset, srst={ }
  26 cells in clk=\clock, en=!$abc$12123$abc$10489$abc$7672$auto$opt_reduce.cc:134:opt_pmux$923, arst=\reset, srst={ }
  953 cells in clk=\clock, en=!$abc$13630$abc$11374$abc$7697$auto$opt_reduce.cc:134:opt_pmux$919, arst=\reset, srst={ }
  762 cells in clk=\clock, en=!$abc$12144$abc$9856$abc$8572$auto$opt_reduce.cc:134:opt_pmux$927, arst=\reset, srst={ }
  74 cells in clk=\clock, en={ }, arst=\reset, srst={ }
  285 cells in clk=\clock, en=!$abc$12842$abc$10508$abc$8314$auto$opt_reduce.cc:134:opt_pmux$925, arst=\reset, srst={ }
  681 cells in clk=\clock, en=!$abc$13095$abc$10834$abc$9022$auto$opt_reduce.cc:134:opt_pmux$921, arst=\reset, srst={ }
  3 cells in clk=\clock, en=!$abc$13625$abc$11369$abc$9786$auto$simplemap.cc:257:simplemap_eqne$2351, arst=\reset, srst={ }
  94 cells in clk=\clock, en=$abc$14163$abc$11918$abc$9655$auto$opt_reduce.cc:134:opt_pmux$789, arst=\reset, srst={ }
  54 cells in clk=\clock, en=!$abc$14293$abc$12049$abc$9791$auto$opt_reduce.cc:134:opt_pmux$933, arst=\reset, srst={ }

3.146.2. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$abc$12105$abc$9844$abc$7579$auto$simplemap.cc:257:simplemap_eqne$2081, asynchronously reset by \reset
Extracted 10 gates and 20 wires to a netlist network with 10 inputs and 3 outputs.

3.146.2.1. Executing ABC.

3.146.3. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$abc$12116$abc$10482$abc$7579$auto$simplemap.cc:257:simplemap_eqne$2063, asynchronously reset by \reset
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 5 outputs.

3.146.3.1. Executing ABC.

3.146.4. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$abc$12123$abc$10489$abc$7672$auto$opt_reduce.cc:134:opt_pmux$923, asynchronously reset by \reset
Extracted 24 gates and 42 wires to a netlist network with 18 inputs and 11 outputs.

3.146.4.1. Executing ABC.

3.146.5. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$abc$13630$abc$11374$abc$7697$auto$opt_reduce.cc:134:opt_pmux$919, asynchronously reset by \reset
Extracted 543 gates and 816 wires to a netlist network with 273 inputs and 346 outputs.

3.146.5.1. Executing ABC.

3.146.6. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$abc$12144$abc$9856$abc$8572$auto$opt_reduce.cc:134:opt_pmux$927, asynchronously reset by \reset
Extracted 622 gates and 1291 wires to a netlist network with 669 inputs and 268 outputs.

3.146.6.1. Executing ABC.

3.146.7. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 74 gates and 100 wires to a netlist network with 26 inputs and 20 outputs.

3.146.7.1. Executing ABC.

3.146.8. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$abc$12842$abc$10508$abc$8314$auto$opt_reduce.cc:134:opt_pmux$925, asynchronously reset by \reset
Extracted 255 gates and 432 wires to a netlist network with 177 inputs and 199 outputs.

3.146.8.1. Executing ABC.

3.146.9. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$abc$13095$abc$10834$abc$9022$auto$opt_reduce.cc:134:opt_pmux$921, asynchronously reset by \reset
Extracted 527 gates and 821 wires to a netlist network with 294 inputs and 373 outputs.

3.146.9.1. Executing ABC.

3.146.10. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$abc$13625$abc$11369$abc$9786$auto$simplemap.cc:257:simplemap_eqne$2351, asynchronously reset by \reset
Extracted 3 gates and 7 wires to a netlist network with 3 inputs and 3 outputs.

3.146.10.1. Executing ABC.

3.146.11. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$14163$abc$11918$abc$9655$auto$opt_reduce.cc:134:opt_pmux$789, asynchronously reset by \reset
Extracted 94 gates and 161 wires to a netlist network with 67 inputs and 65 outputs.

3.146.11.1. Executing ABC.

3.146.12. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$abc$14293$abc$12049$abc$9791$auto$opt_reduce.cc:134:opt_pmux$933, asynchronously reset by \reset
Extracted 54 gates and 67 wires to a netlist network with 13 inputs and 25 outputs.

3.146.12.1. Executing ABC.

yosys> opt_ffinv

3.147. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt_expr

3.148. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

yosys> opt_merge -nomux

3.149. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_muxtree

3.150. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.151. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.152. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_share

3.153. Executing OPT_SHARE pass.

yosys> opt_dff -sat

3.154. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.155. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 0 unused cells and 13658 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.156. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
MAX OPT ITERATION = 1

yosys> bmuxmap

3.157. Executing BMUXMAP pass.

yosys> demuxmap

3.158. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> abc -script /tmp/yosys_8BAzlC/abc_tmp_1.scr

3.159. Executing ABC pass (technology mapping using ABC).

3.159.1. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Extracted 2016 gates and 3035 wires to a netlist network with 1019 inputs and 1022 outputs.

3.159.1.1. Executing ABC.
DE:   #PIs = 1019  #Luts =  1206  Max Lvl =   4  Avg Lvl =   1.08  [   0.42 sec. at Pass 0]{firstMap}[1]
DE:   #PIs = 1019  #Luts =  1200  Max Lvl =   6  Avg Lvl =   1.46  [   3.18 sec. at Pass 1]{initMapFlow}[2]
DE:   #PIs = 1019  #Luts =  1200  Max Lvl =   6  Avg Lvl =   1.46  [   1.13 sec. at Pass 2]{map}[2]
DE:   #PIs = 1019  #Luts =  1199  Max Lvl =   5  Avg Lvl =   1.46  [   1.23 sec. at Pass 3]{postMap}[6]
DE:   #PIs = 1019  #Luts =  1196  Max Lvl =   5  Avg Lvl =   1.46  [   1.55 sec. at Pass 4]{map}[12]
DE:   #PIs = 1019  #Luts =  1196  Max Lvl =   5  Avg Lvl =   1.46  [   2.18 sec. at Pass 5]{postMap}[16]
DE:   #PIs = 1019  #Luts =  1196  Max Lvl =   5  Avg Lvl =   1.46  [   1.20 sec. at Pass 6]{map}[16]
DE:   #PIs = 1019  #Luts =  1194  Max Lvl =   6  Avg Lvl =   1.46  [   1.72 sec. at Pass 7]{postMap}[16]
DE:   #PIs = 1019  #Luts =  1194  Max Lvl =   6  Avg Lvl =   1.46  [   1.88 sec. at Pass 8]{map}[16]
DE:   #PIs = 1019  #Luts =  1193  Max Lvl =   6  Avg Lvl =   1.46  [   1.01 sec. at Pass 9]{postMap}[16]
DE:   #PIs = 1019  #Luts =  1193  Max Lvl =   6  Avg Lvl =   1.46  [   1.75 sec. at Pass 10]{map}[16]
DE:   #PIs = 1019  #Luts =  1193  Max Lvl =   6  Avg Lvl =   1.46  [   2.74 sec. at Pass 11]{postMap}[16]
DE:   #PIs = 1019  #Luts =  1193  Max Lvl =   6  Avg Lvl =   1.46  [   1.03 sec. at Pass 12]{map}[16]
DE:   #PIs = 1019  #Luts =  1193  Max Lvl =   6  Avg Lvl =   1.46  [   0.45 sec. at Pass 13]{finalMap}[16]

yosys> opt_expr

3.160. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

yosys> opt_merge -nomux

3.161. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.162. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.163. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.164. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_share

3.165. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe

3.166. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.167. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 0 unused cells and 2955 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.168. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
MAX OPT ITERATION = 1

yosys> opt_ffinv

3.169. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> stat

3.170. Printing statistics.

=== xtea ===

   Number of wires:               1011
   Number of wire bits:           3770
   Number of public wires:          18
   Number of public wire bits:     397
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2107
     $_DFFE_PP0N_                  110
     $_DFFE_PP0P_                   64
     $_DFF_PP0_                      5
     $lut                         1192
     fa_1bit                       736


yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFFE_??_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_SDFF_???_ 0 -cell $_SDFFE_????_ 0 -cell $_DLATCH_?_ 0 -cell $_DLATCH_???_ 0

3.171. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.172. Printing statistics.

=== xtea ===

   Number of wires:               1011
   Number of wire bits:           3770
   Number of public wires:          18
   Number of public wire bits:     397
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2107
     $_DFFE_PP0N_                  110
     $_DFFE_PP0P_                   64
     $_DFF_PP0_                      5
     $lut                         1192
     fa_1bit                       736


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis2/ffs_map.v

3.173. Executing TECHMAP pass (map to technology primitives).

3.173.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.173.2. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/ffs_map.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_PP0N_'.
Generating RTLIL representation for module `\$_SDFFE_PN0P_'.
Generating RTLIL representation for module `\$_SDFFE_PN0N_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFFE_PP1N_'.
Generating RTLIL representation for module `\$_SDFFE_PN1P_'.
Generating RTLIL representation for module `\$_SDFFE_PN1N_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP0N_'.
Generating RTLIL representation for module `\$_SDFFE_NN0P_'.
Generating RTLIL representation for module `\$_SDFFE_NN0N_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1N_'.
Generating RTLIL representation for module `\$_SDFFE_NN1P_'.
Generating RTLIL representation for module `\$_SDFFE_NN1N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_PP0_'.
Generating RTLIL representation for module `\$_DLATCH_NP0_'.
Generating RTLIL representation for module `\$_DLATCH_PN0_'.
Generating RTLIL representation for module `\$_DLATCH_NN0_'.
Generating RTLIL representation for module `\$_DLATCH_PP1_'.
Generating RTLIL representation for module `\$_DLATCH_NP1_'.
Generating RTLIL representation for module `\$_DLATCH_PN1_'.
Generating RTLIL representation for module `\$_DLATCH_NN1_'.
Successfully finished Verilog frontend.

3.173.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFFE_PP0N_ for cells of type $_DFFE_PP0N_.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~1616 debug messages>

yosys> opt_expr -mux_undef

3.174. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
<suppressed ~8176 debug messages>

yosys> simplemap

3.175. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.176. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

yosys> opt_merge

3.177. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
<suppressed ~10137 debug messages>
Removed a total of 3379 cells.

yosys> opt_dff -nodffe -nosdff

3.178. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.179. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 0 unused cells and 2727 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.180. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
<suppressed ~896 debug messages>

yosys> opt_merge -nomux

3.181. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.182. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.183. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.184. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_share

3.185. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.186. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.187. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 0 unused cells and 69 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.188. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
MAX OPT ITERATION = 1

yosys> abc -script /tmp/yosys_8BAzlC/abc_tmp_2.scr

3.189. Executing ABC pass (technology mapping using ABC).

3.189.1. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Extracted 3121 gates and 4142 wires to a netlist network with 1019 inputs and 1020 outputs.

3.189.1.1. Executing ABC.
DE:   #PIs = 1019  #Luts =  1190  Max Lvl =   5  Avg Lvl =   1.08  [   0.27 sec. at Pass 0]{firstMap}[1]
DE:   #PIs = 1019  #Luts =  1190  Max Lvl =   5  Avg Lvl =   1.08  [   1.89 sec. at Pass 1]{initMapFlow}[2]
DE:   #PIs = 1019  #Luts =  1190  Max Lvl =   5  Avg Lvl =   1.08  [   0.68 sec. at Pass 2]{map}[2]
DE:   #PIs = 1019  #Luts =  1190  Max Lvl =   5  Avg Lvl =   1.08  [   0.86 sec. at Pass 3]{postMap}[6]
DE:   #PIs = 1019  #Luts =  1190  Max Lvl =   5  Avg Lvl =   1.08  [   1.20 sec. at Pass 4]{map}[12]
DE:   #PIs = 1019  #Luts =  1189  Max Lvl =   6  Avg Lvl =   1.46  [   1.39 sec. at Pass 5]{postMap}[16]
DE:   #PIs = 1019  #Luts =  1189  Max Lvl =   6  Avg Lvl =   1.46  [   1.35 sec. at Pass 6]{map}[16]
DE:   #PIs = 1019  #Luts =  1189  Max Lvl =   6  Avg Lvl =   1.46  [   1.49 sec. at Pass 7]{postMap}[16]
DE:   #PIs = 1019  #Luts =  1189  Max Lvl =   6  Avg Lvl =   1.46  [   0.80 sec. at Pass 8]{map}[16]
DE:   #PIs = 1019  #Luts =  1189  Max Lvl =   6  Avg Lvl =   1.46  [   0.72 sec. at Pass 9]{finalMap}[16]

yosys> opt_expr

3.190. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

yosys> opt_merge -nomux

3.191. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.192. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.193. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.194. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_share

3.195. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe

3.196. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.197. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 0 unused cells and 3662 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.198. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
MAX OPT ITERATION = 1

yosys> hierarchy -check

3.199. Executing HIERARCHY pass (managing design hierarchy).

3.199.1. Analyzing design hierarchy..
Top module:  \xtea

3.199.2. Analyzing design hierarchy..
Top module:  \xtea
Removed 0 unused modules.

yosys> stat

3.200. Printing statistics.

=== xtea ===

   Number of wires:               1008
   Number of wire bits:           3767
   Number of public wires:          18
   Number of public wire bits:     397
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2104
     $lut                         1189
     dffr                            5
     dffre                         174
     fa_1bit                       736


yosys> opt_clean -purge

3.201. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..

yosys> write_verilog -noattr -nohex synthesized.v

3.202. Executing Verilog backend.
Dumping module `\xtea'.

End of script. Logfile hash: 59ce2c6c89, CPU: user 11.82s system 0.30s, MEM: 58.52 MB peak
Yosys 0.18+10 (git sha1 92b23013e, gcc 11.2.0 -fPIC -Os)
Time spent: 93% 6x abc (153 sec), 1% 34x opt_expr (2 sec), ...
real 55.82
user 134.70
sys 28.97
