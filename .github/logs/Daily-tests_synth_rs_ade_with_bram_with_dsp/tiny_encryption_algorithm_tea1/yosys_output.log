
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.140
 Yosys 0.18+10 (git sha1 92b23013e, gcc 11.2.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Sep22_SW_Release, released at Fri Sep 30 20:01:32 2022.

yosys> verilog_defaults -add -I.

yosys> read -vhdl tea1.vhd

yosys> verific -vhdl tea1.vhd

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Sep22_SW_Release, released at Fri Sep 30 20:01:32 2022.
VERIFIC-INFO [VHDL-1504] default VHDL library search path is now "/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008"
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'tea1.vhd'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_1164' from file '/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_1164.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.standard' from file '/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/standard.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.textio' from file '/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/textio.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.numeric_std' from file '/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/numeric_std.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_unsigned' from file '/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_unsigned.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_arith' from file '/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_arith.vdb'
VERIFIC-INFO [VHDL-1012] tea1.vhd:6: analyzing entity 'tea1'
VERIFIC-INFO [VHDL-1010] tea1.vhd:17: analyzing architecture 'behavioral'

yosys> synth_rs -top tea1 -tech genesis2 -goal area -de -verilog synthesized.v

3. Executing synth_rs pass: v0.4.116

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis2/cells_sim.v +/rapidsilicon/genesis2/dsp_sim.v +/rapidsilicon/genesis2/brams_sim.v

3.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/cells_sim.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dff'.
Generating RTLIL representation for module `\dffn'.
Generating RTLIL representation for module `\sdff'.
Generating RTLIL representation for module `\sdffn'.
Generating RTLIL representation for module `\dffr'.
Generating RTLIL representation for module `\dffnr'.
Generating RTLIL representation for module `\dffe'.
Generating RTLIL representation for module `\dffne'.
Generating RTLIL representation for module `\sdffre'.
Generating RTLIL representation for module `\sdffnre'.
Generating RTLIL representation for module `\dffre'.
Generating RTLIL representation for module `\dffnre'.
Generating RTLIL representation for module `\latch'.
Generating RTLIL representation for module `\latchn'.
Generating RTLIL representation for module `\latchr'.
Generating RTLIL representation for module `\latchnr'.
Generating RTLIL representation for module `\fa_1bit'.
Successfully finished Verilog frontend.

3.3. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/dsp_sim.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/dsp_sim.v' to AST representation.
Generating RTLIL representation for module `\RS_DSP'.
Generating RTLIL representation for module `\RS_DSP_MULT'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTADD'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTACC'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_ports'.
Successfully finished Verilog frontend.

3.4. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/brams_sim.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/brams_sim.v' to AST representation.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\RS_TDP36K'.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top tea1

3.5. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VHDL-1067] tea1.vhd:6: processing 'tea1(Behavioral)'
Importing module tea1.

3.5.1. Analyzing design hierarchy..
Top module:  \tea1

3.5.2. Analyzing design hierarchy..
Top module:  \tea1
Removed 0 unused modules.

yosys> proc

3.6. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.6.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.6.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.6.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.6.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.6.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.6.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.6.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.6.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.6.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.6.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.6.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.6.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module tea1.
<suppressed ~3 debug messages>

yosys> demuxmap

3.7. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> flatten

3.8. Executing FLATTEN pass (flatten design).

yosys> demuxmap

3.9. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> tribuf -logic -formal

3.10. Executing TRIBUF pass.

yosys> deminout

3.11. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module tea1.

yosys> opt_clean

3.13. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tea1..
Removed 0 unused cells and 24 unused wires.
<suppressed ~18 debug messages>

yosys> check

3.14. Executing CHECK pass (checking for obvious problems).
Checking module tea1...
Found and reported 0 problems.

yosys> opt_expr

3.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module tea1.

yosys> opt_merge -nomux

3.16. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tea1'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \tea1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $verific$mux_6$tea1.vhd:30$48: \cnt -> { 1'1 \cnt [5:0] }
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~10 debug messages>

yosys> opt_reduce

3.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \tea1.
Performed a total of 0 changes.

yosys> opt_merge

3.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tea1'.
Removed a total of 0 cells.

yosys> opt_share

3.20. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.21. Executing OPT_DFF pass (perform DFF optimizations).
Removing never-active async load on $verific$v1_reg$tea1.vhd:55$80 ($aldff) from module tea1.
Removing never-active async load on $verific$v0_reg$tea1.vhd:55$79 ($aldff) from module tea1.
Removing never-active async load on $verific$sum_reg$tea1.vhd:55$74 ($aldff) from module tea1.
Removing never-active async load on $verific$k3_reg$tea1.vhd:55$78 ($aldff) from module tea1.
Removing never-active async load on $verific$k2_reg$tea1.vhd:55$77 ($aldff) from module tea1.
Removing never-active async load on $verific$k1_reg$tea1.vhd:55$76 ($aldff) from module tea1.
Removing never-active async load on $verific$k0_reg$tea1.vhd:55$75 ($aldff) from module tea1.
Removing never-active async load on $verific$cnt_reg$tea1.vhd:34$53 ($aldff) from module tea1.

yosys> opt_clean

3.22. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tea1..

yosys> opt_expr

3.23. Executing OPT_EXPR pass (perform const folding).
Optimizing module tea1.
MAX OPT ITERATION = 1

yosys> fsm -encoding binary

3.24. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.24.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.24.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.24.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.24.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tea1..

yosys> fsm_opt

3.24.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.24.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.24.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.24.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt_expr

3.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module tea1.

yosys> opt_merge -nomux

3.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tea1'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.27. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \tea1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~10 debug messages>

yosys> opt_reduce

3.28. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \tea1.
Performed a total of 0 changes.

yosys> opt_merge

3.29. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tea1'.
Removed a total of 0 cells.

yosys> opt_share

3.30. Executing OPT_SHARE pass.

yosys> opt_dff -sat

3.31. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $verific$sum_reg$tea1.vhd:55$74 ($dff) from module tea1 (D = $verific$n402$21, Q = \sum, rval = 32'10011110001101110111100110111001).
Adding EN signal on $auto$ff.cc:262:slice$95 ($sdff) from module tea1 (D = $verific$n303$18, Q = \sum).
Adding EN signal on $verific$k3_reg$tea1.vhd:55$78 ($dff) from module tea1 (D = \key [127:96], Q = \k3).
Adding EN signal on $verific$k2_reg$tea1.vhd:55$77 ($dff) from module tea1 (D = \key [95:64], Q = \k2).
Adding EN signal on $verific$k1_reg$tea1.vhd:55$76 ($dff) from module tea1 (D = \key [63:32], Q = \k1).
Adding EN signal on $verific$k0_reg$tea1.vhd:55$75 ($dff) from module tea1 (D = \key [31:0], Q = \k0).
Adding SRST signal on $verific$cnt_reg$tea1.vhd:34$53 ($dff) from module tea1 (D = $verific$n46$9, Q = \cnt, rval = 7'1111111).
Adding EN signal on $auto$ff.cc:262:slice$101 ($sdff) from module tea1 (D = $verific$n46$9 [5:0], Q = \cnt [5:0]).

yosys> opt_clean

3.32. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tea1..
Removed 7 unused cells and 7 unused wires.
<suppressed ~8 debug messages>

yosys> opt_expr

3.33. Executing OPT_EXPR pass (perform const folding).
Optimizing module tea1.

yosys> opt_muxtree

3.34. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \tea1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~5 debug messages>

yosys> opt_reduce

3.35. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \tea1.
Performed a total of 0 changes.

yosys> opt_merge

3.36. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tea1'.
Removed a total of 0 cells.

yosys> opt_share

3.37. Executing OPT_SHARE pass.

yosys> opt_dff -sat

3.38. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.39. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tea1..

yosys> opt_expr

3.40. Executing OPT_EXPR pass (perform const folding).
Optimizing module tea1.
MAX OPT ITERATION = 2

yosys> wreduce -keepdc

3.41. Executing WREDUCE pass (reducing word size of cells).
Removed top 6 bits (of 7) from port B of cell tea1.$verific$add_7$tea1.vhd:32$49 ($add).
Removed top 5 bits (of 32) from port A of cell tea1.$verific$add_53$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:838$88 ($add).

yosys> peepopt

3.42. Executing PEEPOPT pass (run peephole optimizers).

yosys> opt_clean

3.43. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tea1..

yosys> demuxmap

3.44. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> stat

3.45. Printing statistics.

=== tea1 ===

   Number of wires:                 30
   Number of wire bits:            861
   Number of public wires:          18
   Number of public wire bits:     587
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 24
     $add                            6
     $dff                            2
     $dffe                           4
     $mux                            6
     $ne                             1
     $sdff                           1
     $sdffe                          2
     $xor                            2


yosys> wreduce t:$mul

3.46. Executing WREDUCE pass (reducing word size of cells).

yosys> rs_dsp_macc -genesis2 -max_dsp 154

3.47. Executing RS_DSP_MACC pass.

yosys> techmap -map +/mul2dsp_check_maxwidth.v -D DSP_A_MAXWIDTH=20 -D DSP_B_MAXWIDTH=18 -D DSP_A_MINWIDTH=11 -D DSP_B_MINWIDTH=10 -D DSP_NAME=$__RS_MUL20X18 a:valid_map

3.48. Executing TECHMAP pass (map to technology primitives).

3.48.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/mul2dsp_check_maxwidth.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/mul2dsp_check_maxwidth.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

3.48.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

yosys> stat

3.49. Printing statistics.

=== tea1 ===

   Number of wires:                 30
   Number of wire bits:            861
   Number of public wires:          18
   Number of public wire bits:     587
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 24
     $add                            6
     $dff                            2
     $dffe                           4
     $mux                            6
     $ne                             1
     $sdff                           1
     $sdffe                          2
     $xor                            2


yosys> chtype -set $mul t:$__soft_mul

yosys> techmap -map +/rapidsilicon/genesis2/dsp_map.v -D USE_DSP_CFG_PARAMS=0

3.50. Executing TECHMAP pass (map to technology primitives).

3.50.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/dsp_map.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/dsp_map.v' to AST representation.
Generating RTLIL representation for module `\$__RS_MUL20X18'.
Successfully finished Verilog frontend.

3.50.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

yosys> techmap -map +/rapidsilicon/genesis2/dsp_final_map.v

3.51. Executing TECHMAP pass (map to technology primitives).

3.51.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/dsp_final_map.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/dsp_final_map.v' to AST representation.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Successfully finished Verilog frontend.

3.51.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

yosys> rs-pack-dsp-regs

3.52. Executing rs_pack_dsp_regs pass.

yosys> rs_dsp_io_regs

3.53. Executing RS_DSP_IO_REGS pass.

yosys> alumacc

3.54. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module tea1:
  creating $macc model for $verific$add_20$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:838$59 ($add).
  creating $macc model for $verific$add_24$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:838$63 ($add).
  creating $macc model for $verific$add_48$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:838$85 ($add).
  creating $macc model for $verific$add_50$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:838$86 ($add).
  creating $macc model for $verific$add_53$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:838$88 ($add).
  creating $macc model for $verific$add_7$tea1.vhd:32$49 ($add).
  creating $alu model for $macc $verific$add_7$tea1.vhd:32$49.
  creating $alu model for $macc $verific$add_53$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:838$88.
  creating $alu model for $macc $verific$add_50$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:838$86.
  creating $alu model for $macc $verific$add_48$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:838$85.
  creating $alu model for $macc $verific$add_24$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:838$63.
  creating $alu model for $macc $verific$add_20$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:838$59.
  creating $alu cell for $verific$add_20$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:838$59: $auto$alumacc.cc:485:replace_alu$106
  creating $alu cell for $verific$add_24$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:838$63: $auto$alumacc.cc:485:replace_alu$109
  creating $alu cell for $verific$add_48$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:838$85: $auto$alumacc.cc:485:replace_alu$112
  creating $alu cell for $verific$add_50$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:838$86: $auto$alumacc.cc:485:replace_alu$115
  creating $alu cell for $verific$add_53$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:838$88: $auto$alumacc.cc:485:replace_alu$118
  creating $alu cell for $verific$add_7$tea1.vhd:32$49: $auto$alumacc.cc:485:replace_alu$121
  created 6 $alu and 0 $macc cells.

yosys> opt_expr

3.55. Executing OPT_EXPR pass (perform const folding).
Optimizing module tea1.

yosys> opt_merge -nomux

3.56. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tea1'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.57. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \tea1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~5 debug messages>

yosys> opt_reduce

3.58. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \tea1.
Performed a total of 0 changes.

yosys> opt_merge

3.59. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tea1'.
Removed a total of 0 cells.

yosys> opt_share

3.60. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe

3.61. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.62. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tea1..

yosys> opt_expr

3.63. Executing OPT_EXPR pass (perform const folding).
Optimizing module tea1.
MAX OPT ITERATION = 1

yosys> stat

3.64. Printing statistics.

=== tea1 ===

   Number of wires:                 42
   Number of wire bits:           1187
   Number of public wires:          18
   Number of public wire bits:     587
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 24
     $alu                            6
     $dff                            2
     $dffe                           4
     $mux                            6
     $ne                             1
     $sdff                           1
     $sdffe                          2
     $xor                            2


yosys> memory -nomap

3.65. Executing MEMORY pass.

yosys> opt_mem

3.65.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.65.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.65.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.65.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.65.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.65.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tea1..

yosys> memory_share

3.65.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.65.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.65.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tea1..

yosys> memory_collect

3.65.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.66. Printing statistics.

=== tea1 ===

   Number of wires:                 42
   Number of wire bits:           1187
   Number of public wires:          18
   Number of public wire bits:     587
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 24
     $alu                            6
     $dff                            2
     $dffe                           4
     $mux                            6
     $ne                             1
     $sdff                           1
     $sdffe                          2
     $xor                            2


yosys> muxpack

3.67. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~6 debug messages>

yosys> opt_clean

3.68. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tea1..

yosys> memory_libmap -lib +/rapidsilicon/genesis2/brams_new_swap.txt -limit 150 a:read_swapped

3.69. Executing MEMORY_LIBMAP pass (mapping memories to cells).

yosys> memory_libmap -lib +/rapidsilicon/genesis2/brams_new.txt -limit 150

3.70. Executing MEMORY_LIBMAP pass (mapping memories to cells).

yosys> rs_bram_split -new_mapping

3.71. Executing Rs_BRAM_Split pass.

yosys> techmap -autoproc -map +/rapidsilicon/genesis2/brams_map_new.v

3.72. Executing TECHMAP pass (map to technology primitives).

3.72.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/brams_map_new.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/brams_map_new.v' to AST representation.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_TDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM18_TDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM18_SDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_SDP'.
Successfully finished Verilog frontend.

3.72.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~6 debug messages>

yosys> techmap -map +/rapidsilicon/genesis2/brams_final_map_new.v

3.73. Executing TECHMAP pass (map to technology primitives).

3.73.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/brams_final_map_new.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/brams_final_map_new.v' to AST representation.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Successfully finished Verilog frontend.

3.73.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

yosys> pmuxtree

3.74. Executing PMUXTREE pass.

yosys> muxpack

3.75. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~6 debug messages>

yosys> memory_map

3.76. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> stat

3.77. Printing statistics.

=== tea1 ===

   Number of wires:                 42
   Number of wire bits:           1187
   Number of public wires:          18
   Number of public wire bits:     587
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 24
     $alu                            6
     $dff                            2
     $dffe                           4
     $mux                            6
     $ne                             1
     $sdff                           1
     $sdffe                          2
     $xor                            2


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis2/arith_map.v

3.78. Executing TECHMAP pass (map to technology primitives).

3.78.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.78.2. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/arith_map.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.78.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $sdff.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $sdffe.
Using template $paramod$be80489e44a49c29884f59fd81c31ed03229cfc1\_80_rs_alu for cells of type $alu.
Using template $paramod$fbc7873bff55778c0b3173955b7e4bce1d9d6834\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $dff.
Using template $paramod$a956358b3023cded48ed5b8b78d4da812e8a9ce4\_80_rs_alu for cells of type $alu.
Using template $paramod$62a9e1f6b6a22c94f58bcb1cbfe24600db0272fe\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$103b4016182df467cceab67bcf3e18e6361ec0fd\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $and.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000111 for cells of type $lcu.
Using extmapper simplemap for cells of type $or.
No more expansions possible.
<suppressed ~891 debug messages>

yosys> stat

3.79. Printing statistics.

=== tea1 ===

   Number of wires:                305
   Number of wire bits:           5999
   Number of public wires:          18
   Number of public wire bits:     587
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1311
     $_AND_                        134
     $_DFFE_PP_                    128
     $_DFF_P_                       64
     $_MUX_                        313
     $_NOT_                        163
     $_OR_                          68
     $_SDFFE_PP0P_                  12
     $_SDFFE_PP1P_                  26
     $_SDFF_PP1_                     1
     $_XOR_                        278
     fa_1bit                       124


yosys> opt_expr

3.80. Executing OPT_EXPR pass (perform const folding).
Optimizing module tea1.
<suppressed ~322 debug messages>

yosys> opt_merge -nomux

3.81. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tea1'.
<suppressed ~81 debug messages>
Removed a total of 27 cells.

yosys> opt_muxtree

3.82. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \tea1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.83. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \tea1.
Performed a total of 0 changes.

yosys> opt_merge

3.84. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tea1'.
Removed a total of 0 cells.

yosys> opt_share

3.85. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe

3.86. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.87. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tea1..
Removed 126 unused cells and 204 unused wires.
<suppressed ~127 debug messages>

yosys> opt_expr

3.88. Executing OPT_EXPR pass (perform const folding).
Optimizing module tea1.

yosys> opt_muxtree

3.89. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \tea1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.90. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \tea1.
Performed a total of 0 changes.

yosys> opt_merge

3.91. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tea1'.
Removed a total of 0 cells.

yosys> opt_share

3.92. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe

3.93. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.94. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tea1..

yosys> opt_expr

3.95. Executing OPT_EXPR pass (perform const folding).
Optimizing module tea1.
MAX OPT ITERATION = 2

yosys> opt_expr -full

3.96. Executing OPT_EXPR pass (perform const folding).
Optimizing module tea1.
<suppressed ~2 debug messages>

yosys> techmap -map +/techmap.v

3.97. Executing TECHMAP pass (map to technology primitives).

3.97.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.97.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> stat

3.98. Printing statistics.

=== tea1 ===

   Number of wires:                123
   Number of wire bits:           1272
   Number of public wires:          18
   Number of public wire bits:     587
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                857
     $_AND_                         77
     $_DFFE_PP_                    128
     $_DFF_P_                       64
     $_MUX_                        138
     $_NOT_                         23
     $_OR_                          36
     $_SDFFE_PP0P_                  12
     $_SDFFE_PP1P_                  26
     $_SDFF_PP1_                     1
     $_XOR_                        228
     fa_1bit                       124


yosys> dfflegalize -cell $_SDFF_???_ 0 -cell $_SDFFE_????_ 0 t:$_SDFFCE_*

3.99. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.100. Printing statistics.

=== tea1 ===

   Number of wires:                123
   Number of wire bits:           1272
   Number of public wires:          18
   Number of public wire bits:     587
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                857
     $_AND_                         77
     $_DFFE_PP_                    128
     $_DFF_P_                       64
     $_MUX_                        138
     $_NOT_                         23
     $_OR_                          36
     $_SDFFE_PP0P_                  12
     $_SDFFE_PP1P_                  26
     $_SDFF_PP1_                     1
     $_XOR_                        228
     fa_1bit                       124


yosys> opt_expr

3.101. Executing OPT_EXPR pass (perform const folding).
Optimizing module tea1.

yosys> opt_merge -nomux

3.102. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tea1'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.103. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \tea1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.104. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \tea1.
Performed a total of 0 changes.

yosys> opt_merge

3.105. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tea1'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -sat

3.106. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.107. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tea1..

yosys> opt_expr

3.108. Executing OPT_EXPR pass (perform const folding).
Optimizing module tea1.
MAX OPT ITERATION = 1

yosys> abc -dff -keepff

3.109. Executing ABC pass (technology mapping using ABC).

3.109.1. Summary of detected clock domains:
  447 cells in clk=\clock, en={ }, arst={ }, srst={ }
  187 cells in clk=\clock, en=\cnt [0], arst={ }, srst=\cnt [6]
  25 cells in clk=\clock, en=$auto$opt_dff.cc:194:make_patterns_logic$103, arst={ }, srst=\reset
  6 cells in clk=\clock, en={ }, arst={ }, srst=\reset
  192 cells in clk=\clock, en=\cnt [6], arst={ }, srst={ }

3.109.2. Extracting gate netlist of module `\tea1' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock
Extracted 323 gates and 601 wires to a netlist network with 278 inputs and 207 outputs.

3.109.2.1. Executing ABC.

3.109.3. Extracting gate netlist of module `\tea1' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by \cnt [0], synchronously reset by \cnt [6]
Extracted 187 gates and 187 wires to a netlist network with 0 inputs and 32 outputs.

3.109.3.1. Executing ABC.

3.109.4. Extracting gate netlist of module `\tea1' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:194:make_patterns_logic$103, synchronously reset by \reset
Extracted 25 gates and 29 wires to a netlist network with 3 inputs and 9 outputs.

3.109.4.1. Executing ABC.

3.109.5. Extracting gate netlist of module `\tea1' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, synchronously reset by \reset
Extracted 6 gates and 9 wires to a netlist network with 3 inputs and 2 outputs.

3.109.5.1. Executing ABC.

3.109.6. Extracting gate netlist of module `\tea1' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$2266$cnt[6]
Extracted 192 gates and 321 wires to a netlist network with 129 inputs and 192 outputs.

3.109.6.1. Executing ABC.

yosys> abc -dff -keepff

3.110. Executing ABC pass (technology mapping using ABC).

3.110.1. Summary of detected clock domains:
  28 cells in clk=\clock, en={ }, arst={ }, srst=\reset
  133 cells in clk=\clock, en=$abc$2235$cnt[0], arst={ }, srst=$abc$2266$cnt[6]
  425 cells in clk=\clock, en={ }, arst={ }, srst={ }
  86 cells in clk=\clock, en=$abc$2235$auto$opt_dff.cc:194:make_patterns_logic$103, arst={ }, srst=\reset
  128 cells in clk=\clock, en=$abc$2266$cnt[6], arst={ }, srst={ }

3.110.2. Extracting gate netlist of module `\tea1' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, synchronously reset by \reset
Extracted 22 gates and 51 wires to a netlist network with 29 inputs and 17 outputs.

3.110.2.1. Executing ABC.

3.110.3. Extracting gate netlist of module `\tea1' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$2235$cnt[0], synchronously reset by $abc$2592$abc$2266$cnt[6]
Extracted 133 gates and 143 wires to a netlist network with 10 inputs and 43 outputs.

3.110.3.1. Executing ABC.

3.110.4. Extracting gate netlist of module `\tea1' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock
Extracted 307 gates and 572 wires to a netlist network with 265 inputs and 199 outputs.

3.110.4.1. Executing ABC.

3.110.5. Extracting gate netlist of module `\tea1' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$2235$auto$opt_dff.cc:194:make_patterns_logic$103, synchronously reset by \reset
Extracted 86 gates and 222 wires to a netlist network with 136 inputs and 77 outputs.

3.110.5.1. Executing ABC.

3.110.6. Extracting gate netlist of module `\tea1' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$2592$abc$2266$cnt[6]
Extracted 128 gates and 256 wires to a netlist network with 128 inputs and 128 outputs.

3.110.6.1. Executing ABC.

yosys> abc -dff -keepff

3.111. Executing ABC pass (technology mapping using ABC).

3.111.1. Summary of detected clock domains:
  31 cells in clk=\clock, en={ }, arst={ }, srst=\reset
  88 cells in clk=\clock, en=$abc$3050$abc$2235$auto$opt_dff.cc:194:make_patterns_logic$103, arst={ }, srst=\reset
  111 cells in clk=\clock, en=$abc$3050$abc$2235$cnt[0], arst={ }, srst=$abc$2592$abc$2266$cnt[6]
  425 cells in clk=\clock, en={ }, arst={ }, srst={ }
  128 cells in clk=\clock, en=$abc$2592$abc$2266$cnt[6], arst={ }, srst={ }

3.111.2. Extracting gate netlist of module `\tea1' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, synchronously reset by \reset
Extracted 27 gates and 59 wires to a netlist network with 32 inputs and 13 outputs.

3.111.2.1. Executing ABC.

3.111.3. Extracting gate netlist of module `\tea1' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$3050$abc$2235$auto$opt_dff.cc:194:make_patterns_logic$103, synchronously reset by \reset
Extracted 88 gates and 224 wires to a netlist network with 136 inputs and 77 outputs.

3.111.3.1. Executing ABC.

3.111.4. Extracting gate netlist of module `\tea1' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$3423$abc$3050$abc$2235$cnt[0], synchronously reset by $abc$3395$abc$2592$abc$2266$cnt[6]
Extracted 111 gates and 117 wires to a netlist network with 6 inputs and 38 outputs.

3.111.4.1. Executing ABC.

3.111.5. Extracting gate netlist of module `\tea1' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock
Extracted 305 gates and 573 wires to a netlist network with 268 inputs and 210 outputs.

3.111.5.1. Executing ABC.

3.111.6. Extracting gate netlist of module `\tea1' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$3395$abc$2592$abc$2266$cnt[6]
Extracted 128 gates and 256 wires to a netlist network with 128 inputs and 128 outputs.

3.111.6.1. Executing ABC.

yosys> abc -dff -keepff

3.112. Executing ABC pass (technology mapping using ABC).

3.112.1. Summary of detected clock domains:
  18 cells in clk=\clock, en={ }, arst={ }, srst=\reset
  86 cells in clk=\clock, en=$abc$3423$abc$3050$abc$2235$auto$opt_dff.cc:194:make_patterns_logic$103, arst={ }, srst=\reset
  115 cells in clk=\clock, en=$abc$3423$abc$3050$abc$2235$cnt[0], arst={ }, srst=$abc$3395$abc$2592$abc$2266$cnt[6]
  436 cells in clk=\clock, en={ }, arst={ }, srst={ }
  128 cells in clk=\clock, en=$abc$3395$abc$2592$abc$2266$cnt[6], arst={ }, srst={ }

3.112.2. Extracting gate netlist of module `\tea1' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, synchronously reset by \reset
Extracted 14 gates and 30 wires to a netlist network with 16 inputs and 13 outputs.

3.112.2.1. Executing ABC.

3.112.3. Extracting gate netlist of module `\tea1' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$4193$abc$3423$abc$3050$abc$2235$auto$opt_dff.cc:194:make_patterns_logic$103, synchronously reset by \reset
Extracted 86 gates and 221 wires to a netlist network with 135 inputs and 76 outputs.

3.112.3.1. Executing ABC.

3.112.4. Extracting gate netlist of module `\tea1' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$4208$abc$3423$abc$3050$abc$2235$cnt[0], synchronously reset by $abc$4193$abc$3395$abc$2592$abc$2266$cnt[6]
Extracted 115 gates and 125 wires to a netlist network with 10 inputs and 42 outputs.

3.112.4.1. Executing ABC.

3.112.5. Extracting gate netlist of module `\tea1' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock
Extracted 316 gates and 582 wires to a netlist network with 266 inputs and 199 outputs.

3.112.5.1. Executing ABC.

3.112.6. Extracting gate netlist of module `\tea1' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$4193$abc$3395$abc$2592$abc$2266$cnt[6]
Extracted 128 gates and 256 wires to a netlist network with 128 inputs and 128 outputs.

3.112.6.1. Executing ABC.

yosys> opt_ffinv

3.113. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt_expr

3.114. Executing OPT_EXPR pass (perform const folding).
Optimizing module tea1.
<suppressed ~2 debug messages>

yosys> opt_merge -nomux

3.115. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tea1'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.116. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \tea1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.117. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \tea1.
Performed a total of 0 changes.

yosys> opt_merge

3.118. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tea1'.
Removed a total of 0 cells.

yosys> opt_share

3.119. Executing OPT_SHARE pass.

yosys> opt_dff -sat

3.120. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.121. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tea1..
Removed 0 unused cells and 4470 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.122. Executing OPT_EXPR pass (perform const folding).
Optimizing module tea1.
MAX OPT ITERATION = 1

yosys> bmuxmap

3.123. Executing BMUXMAP pass.

yosys> demuxmap

3.124. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> abc -script /tmp/yosys_FdXctW/abc_tmp_1.scr

3.125. Executing ABC pass (technology mapping using ABC).

3.125.1. Extracting gate netlist of module `\tea1' to `<abc-temp-dir>/input.blif'..
Extracted 430 gates and 846 wires to a netlist network with 416 inputs and 250 outputs.

3.125.1.1. Executing ABC.
DE:   #PIs = 416  #Luts =   268  Max Lvl =   5  Avg Lvl =   1.31  [   0.13 sec. at Pass 0]{firstMap}[1]
DE:   #PIs = 416  #Luts =   265  Max Lvl =   7  Avg Lvl =   1.49  [   0.62 sec. at Pass 1]{initMapFlow}[2]
DE:   #PIs = 416  #Luts =   265  Max Lvl =   7  Avg Lvl =   1.49  [   0.64 sec. at Pass 2]{map}[2]
DE:   #PIs = 416  #Luts =   265  Max Lvl =   7  Avg Lvl =   1.49  [   0.69 sec. at Pass 3]{postMap}[6]
DE:   #PIs = 416  #Luts =   265  Max Lvl =   7  Avg Lvl =   1.49  [   0.97 sec. at Pass 4]{map}[12]
DE:   #PIs = 416  #Luts =   265  Max Lvl =   7  Avg Lvl =   1.49  [   0.61 sec. at Pass 5]{postMap}[16]
DE:   #PIs = 416  #Luts =   264  Max Lvl =   8  Avg Lvl =   1.57  [   0.87 sec. at Pass 6]{pushMap}[16]
DE:   #PIs = 416  #Luts =   264  Max Lvl =   8  Avg Lvl =   1.57  [   2.69 sec. at Pass 7]{map}[16]
DE:   #PIs = 416  #Luts =   264  Max Lvl =   8  Avg Lvl =   1.57  [   0.74 sec. at Pass 8]{postMap}[16]
DE:   #PIs = 416  #Luts =   264  Max Lvl =   8  Avg Lvl =   1.57  [   0.51 sec. at Pass 9]{map}[16]
DE:   #PIs = 416  #Luts =   264  Max Lvl =   8  Avg Lvl =   1.57  [   0.50 sec. at Pass 10]{pushMap}[16]
DE:   #PIs = 416  #Luts =   264  Max Lvl =   8  Avg Lvl =   1.57  [   0.75 sec. at Pass 11]{finalMap}[16]

yosys> opt_expr

3.126. Executing OPT_EXPR pass (perform const folding).
Optimizing module tea1.

yosys> opt_merge -nomux

3.127. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tea1'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.128. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \tea1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.129. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \tea1.
Performed a total of 0 changes.

yosys> opt_merge

3.130. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tea1'.
Removed a total of 0 cells.

yosys> opt_share

3.131. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe

3.132. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.133. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tea1..
Removed 0 unused cells and 786 unused wires.
<suppressed ~2 debug messages>

yosys> opt_expr

3.134. Executing OPT_EXPR pass (perform const folding).
Optimizing module tea1.
MAX OPT ITERATION = 1

yosys> opt_ffinv

3.135. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> stat

3.136. Printing statistics.

=== tea1 ===

   Number of wires:                844
   Number of wire bits:           1746
   Number of public wires:          17
   Number of public wire bits:     555
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                619
     $_DFFE_PP_                    128
     $_DFF_P_                       64
     $_SDFFE_PP0P_                  38
     $_SDFF_PP0_                     1
     $lut                          264
     fa_1bit                       124


yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFFE_??_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_SDFF_???_ 0 -cell $_SDFFE_????_ 0 -cell $_DLATCH_?_ 0 -cell $_DLATCH_???_ 0

3.137. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.138. Printing statistics.

=== tea1 ===

   Number of wires:                844
   Number of wire bits:           1746
   Number of public wires:          17
   Number of public wire bits:     555
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                619
     $_DFFE_PP_                    128
     $_DFF_P_                       64
     $_SDFFE_PP0P_                  38
     $_SDFF_PP0_                     1
     $lut                          264
     fa_1bit                       124


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis2/ffs_map.v

3.139. Executing TECHMAP pass (map to technology primitives).

3.139.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.139.2. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/ffs_map.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_PP0N_'.
Generating RTLIL representation for module `\$_SDFFE_PN0P_'.
Generating RTLIL representation for module `\$_SDFFE_PN0N_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFFE_PP1N_'.
Generating RTLIL representation for module `\$_SDFFE_PN1P_'.
Generating RTLIL representation for module `\$_SDFFE_PN1N_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP0N_'.
Generating RTLIL representation for module `\$_SDFFE_NN0P_'.
Generating RTLIL representation for module `\$_SDFFE_NN0N_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1N_'.
Generating RTLIL representation for module `\$_SDFFE_NN1P_'.
Generating RTLIL representation for module `\$_SDFFE_NN1N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_PP0_'.
Generating RTLIL representation for module `\$_DLATCH_NP0_'.
Generating RTLIL representation for module `\$_DLATCH_PN0_'.
Generating RTLIL representation for module `\$_DLATCH_NN0_'.
Generating RTLIL representation for module `\$_DLATCH_PP1_'.
Generating RTLIL representation for module `\$_DLATCH_NP1_'.
Generating RTLIL representation for module `\$_DLATCH_PN1_'.
Generating RTLIL representation for module `\$_DLATCH_NN1_'.
Successfully finished Verilog frontend.

3.139.3. Continuing TECHMAP pass.
Using template \$_SDFF_PP0_ for cells of type $_SDFF_PP0_.
Using template \$_SDFFE_PP0P_ for cells of type $_SDFFE_PP0P_.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
No more expansions possible.
<suppressed ~630 debug messages>

yosys> opt_expr -mux_undef

3.140. Executing OPT_EXPR pass (perform const folding).
Optimizing module tea1.
<suppressed ~2009 debug messages>

yosys> simplemap

3.141. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.142. Executing OPT_EXPR pass (perform const folding).
Optimizing module tea1.

yosys> opt_merge

3.143. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tea1'.
<suppressed ~975 debug messages>
Removed a total of 325 cells.

yosys> opt_dff -nodffe -nosdff

3.144. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.145. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tea1..
Removed 0 unused cells and 1363 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.146. Executing OPT_EXPR pass (perform const folding).
Optimizing module tea1.
<suppressed ~67 debug messages>

yosys> opt_merge -nomux

3.147. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tea1'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.148. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \tea1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.149. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \tea1.
Performed a total of 0 changes.

yosys> opt_merge

3.150. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tea1'.
Removed a total of 0 cells.

yosys> opt_share

3.151. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.152. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.153. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tea1..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.154. Executing OPT_EXPR pass (perform const folding).
Optimizing module tea1.
MAX OPT ITERATION = 1

yosys> abc -script /tmp/yosys_FdXctW/abc_tmp_2.scr

3.155. Executing ABC pass (technology mapping using ABC).

3.155.1. Extracting gate netlist of module `\tea1' to `<abc-temp-dir>/input.blif'..
Extracted 797 gates and 1215 wires to a netlist network with 416 inputs and 250 outputs.

3.155.1.1. Executing ABC.
DE:   #PIs = 416  #Luts =   265  Max Lvl =   6  Avg Lvl =   1.33  [   0.08 sec. at Pass 0]{firstMap}[1]
DE:   #PIs = 416  #Luts =   265  Max Lvl =   6  Avg Lvl =   1.33  [   0.60 sec. at Pass 1]{initMapFlow}[2]
DE:   #PIs = 416  #Luts =   264  Max Lvl =   8  Avg Lvl =   1.58  [   0.91 sec. at Pass 2]{map}[2]
DE:   #PIs = 416  #Luts =   264  Max Lvl =   8  Avg Lvl =   1.58  [   1.02 sec. at Pass 3]{postMap}[6]
DE:   #PIs = 416  #Luts =   264  Max Lvl =   8  Avg Lvl =   1.58  [   1.13 sec. at Pass 4]{map}[12]
DE:   #PIs = 416  #Luts =   264  Max Lvl =   8  Avg Lvl =   1.58  [   0.59 sec. at Pass 5]{postMap}[16]
DE:   #PIs = 416  #Luts =   264  Max Lvl =   8  Avg Lvl =   1.58  [   0.54 sec. at Pass 6]{pushMap}[16]
DE:   #PIs = 416  #Luts =   264  Max Lvl =   8  Avg Lvl =   1.58  [   0.44 sec. at Pass 7]{finalMap}[16]

yosys> opt_expr

3.156. Executing OPT_EXPR pass (perform const folding).
Optimizing module tea1.

yosys> opt_merge -nomux

3.157. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tea1'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.158. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \tea1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.159. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \tea1.
Performed a total of 0 changes.

yosys> opt_merge

3.160. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tea1'.
Removed a total of 0 cells.

yosys> opt_share

3.161. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe

3.162. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.163. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tea1..
Removed 0 unused cells and 1068 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.164. Executing OPT_EXPR pass (perform const folding).
Optimizing module tea1.
MAX OPT ITERATION = 1

yosys> hierarchy -check

3.165. Executing HIERARCHY pass (managing design hierarchy).

3.165.1. Analyzing design hierarchy..
Top module:  \tea1

3.165.2. Analyzing design hierarchy..
Top module:  \tea1
Removed 0 unused modules.

yosys> stat

3.166. Printing statistics.

=== tea1 ===

   Number of wires:                844
   Number of wire bits:           1746
   Number of public wires:          17
   Number of public wire bits:     555
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                619
     $lut                          264
     dff                            64
     dffe                          128
     fa_1bit                       124
     sdffre                         39


yosys> opt_clean -purge

3.167. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tea1..

yosys> write_verilog -noattr -nohex synthesized.v

3.168. Executing Verilog backend.
Dumping module `\tea1'.

End of script. Logfile hash: 5dcff4048d, CPU: user 2.30s system 0.09s, MEM: 34.72 MB peak
Yosys 0.18+10 (git sha1 92b23013e, gcc 11.2.0 -fPIC -Os)
Time spent: 95% 6x abc (43 sec), 0% 29x opt_expr (0 sec), ...
real 25.96
user 32.76
sys 12.60
