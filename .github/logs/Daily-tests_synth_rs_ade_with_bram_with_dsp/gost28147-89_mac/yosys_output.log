
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.140
 Yosys 0.18+10 (git sha1 92b23013e, gcc 11.2.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Sep22_SW_Release, released at Fri Sep 30 20:01:32 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k gost89_sbox.v gost89_mac.v gost89_round.v

yosys> verific -vlog2k gost89_sbox.v gost89_mac.v gost89_round.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Sep22_SW_Release, released at Fri Sep 30 20:01:32 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'gost89_sbox.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'gost89_mac.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'gost89_round.v'

yosys> synth_rs -top gost89_mac -tech genesis2 -goal area -de -verilog synthesized.v

3. Executing synth_rs pass: v0.4.116

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis2/cells_sim.v +/rapidsilicon/genesis2/dsp_sim.v +/rapidsilicon/genesis2/brams_sim.v

3.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/cells_sim.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dff'.
Generating RTLIL representation for module `\dffn'.
Generating RTLIL representation for module `\sdff'.
Generating RTLIL representation for module `\sdffn'.
Generating RTLIL representation for module `\dffr'.
Generating RTLIL representation for module `\dffnr'.
Generating RTLIL representation for module `\dffe'.
Generating RTLIL representation for module `\dffne'.
Generating RTLIL representation for module `\sdffre'.
Generating RTLIL representation for module `\sdffnre'.
Generating RTLIL representation for module `\dffre'.
Generating RTLIL representation for module `\dffnre'.
Generating RTLIL representation for module `\latch'.
Generating RTLIL representation for module `\latchn'.
Generating RTLIL representation for module `\latchr'.
Generating RTLIL representation for module `\latchnr'.
Generating RTLIL representation for module `\fa_1bit'.
Successfully finished Verilog frontend.

3.3. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/dsp_sim.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/dsp_sim.v' to AST representation.
Generating RTLIL representation for module `\RS_DSP'.
Generating RTLIL representation for module `\RS_DSP_MULT'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTADD'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTACC'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_ports'.
Successfully finished Verilog frontend.

3.4. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/brams_sim.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/brams_sim.v' to AST representation.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\RS_TDP36K'.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top gost89_mac

3.5. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] gost89_mac.v:1: compiling module 'gost89_mac'
VERIFIC-INFO [VERI-1018] gost89_round.v:1: compiling module 'gost89_round'
VERIFIC-INFO [VERI-1018] gost89_sbox.v:1: compiling module 'gost89_sbox'
VERIFIC-WARNING [VERI-1209] gost89_mac.v:50: expression size 6 truncated to fit in target size 5
Importing module gost89_mac.
Importing module gost89_round.
Importing module gost89_sbox.

3.5.1. Analyzing design hierarchy..
Top module:  \gost89_mac
Used module:     \gost89_round
Used module:         \gost89_sbox

3.5.2. Analyzing design hierarchy..
Top module:  \gost89_mac
Used module:     \gost89_round
Used module:         \gost89_sbox
Removed 0 unused modules.

yosys> proc

3.6. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.6.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.6.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.6.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.6.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.6.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.6.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.6.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.6.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.6.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.6.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.6.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.6.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_sbox.
Optimizing module gost89_round.
Optimizing module gost89_mac.
<suppressed ~3 debug messages>

yosys> demuxmap

3.7. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> flatten

3.8. Executing FLATTEN pass (flatten design).
Deleting now unused module gost89_round.
Deleting now unused module gost89_sbox.
<suppressed ~9 debug messages>

yosys> demuxmap

3.9. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> tribuf -logic -formal

3.10. Executing TRIBUF pass.

yosys> deminout

3.11. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

yosys> opt_clean

3.13. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..
Removed 0 unused cells and 1413 unused wires.
<suppressed ~22 debug messages>

yosys> check

3.14. Executing CHECK pass (checking for obvious problems).
Checking module gost89_mac...
Found and reported 0 problems.

yosys> opt_expr

3.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

yosys> opt_merge -nomux

3.16. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~12 debug messages>

yosys> opt_reduce

3.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
    New ctrl vector for $pmux cell $verific$select_106$gost89_mac.v:80$841: { $auto$opt_reduce.cc:134:opt_pmux$1463 $auto$opt_reduce.cc:134:opt_pmux$1461 $auto$opt_reduce.cc:134:opt_pmux$1459 $auto$opt_reduce.cc:134:opt_pmux$1457 $auto$opt_reduce.cc:134:opt_pmux$1455 $auto$opt_reduce.cc:134:opt_pmux$1453 $auto$opt_reduce.cc:134:opt_pmux$1451 $auto$opt_reduce.cc:134:opt_pmux$1449 $verific$n1570$41 }
  Optimizing cells in module \gost89_mac.
Performed a total of 1 changes.

yosys> opt_merge

3.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_share

3.20. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.21. Executing OPT_DFF pass (perform DFF optimizations).
Removing never-active async load on $verific$round_key_reg$gost89_mac.v:80$842 ($aldff) from module gost89_mac.
Removing never-active async load on $verific$out_reg$gost89_mac.v:60$820 ($aldff) from module gost89_mac.
Removing never-active async load on $verific$n2_reg$gost89_mac.v:60$819 ($aldff) from module gost89_mac.
Removing never-active async load on $verific$n1_reg$gost89_mac.v:60$818 ($aldff) from module gost89_mac.
Removing never-active async load on $verific$counter_reg$gost89_mac.v:60$815 ($aldff) from module gost89_mac.

yosys> opt_clean

3.22. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..

yosys> opt_expr

3.23. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

yosys> opt_muxtree

3.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~12 debug messages>

yosys> opt_reduce

3.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_share

3.27. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.28. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.29. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..

yosys> opt_expr

3.30. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.
MAX OPT ITERATION = 2

yosys> fsm -encoding binary

3.31. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.31.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.31.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.31.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.31.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..

yosys> fsm_opt

3.31.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.31.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.31.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.31.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt_expr

3.32. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

yosys> opt_merge -nomux

3.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.34. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~12 debug messages>

yosys> opt_reduce

3.35. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.36. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_share

3.37. Executing OPT_SHARE pass.

yosys> opt_dff -sat

3.38. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $verific$round_key_reg$gost89_mac.v:80$842 ($dff) from module gost89_mac (D = $verific$n1571$89, Q = \round_key).
Adding EN signal on $verific$out_reg$gost89_mac.v:60$820 ($dff) from module gost89_mac (D = \n1, Q = \out).
Adding SRST signal on $verific$need_xor_reg$gost89_mac.v:60$816 ($dff) from module gost89_mac (D = $verific$n428$13, Q = \need_xor, rval = 1'1).

yosys> opt_clean

3.39. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..
Removed 3 unused cells and 3 unused wires.
<suppressed ~4 debug messages>

yosys> opt_expr

3.40. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.
<suppressed ~4 debug messages>

yosys> opt_muxtree

3.41. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~11 debug messages>

yosys> opt_reduce

3.42. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.43. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_share

3.44. Executing OPT_SHARE pass.

yosys> opt_dff -sat

3.45. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.46. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.47. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.
MAX OPT ITERATION = 2

yosys> wreduce -keepdc

3.48. Executing WREDUCE pass (reducing word size of cells).
Removed top 4 bits (of 5) from port B of cell gost89_mac.$verific$add_46$gost89_mac.v:50$798 ($add).
Removed top 4 bits (of 5) from port A of cell gost89_mac.$verific$LessThan_49$gost89_mac.v:51$801 ($lt).
Removed top 4 bits (of 5) from port B of cell gost89_mac.$verific$equal_90$gost89_mac.v:65$823 ($eq).
Removed top 3 bits (of 5) from port B of cell gost89_mac.$verific$equal_91$gost89_mac.v:66$824 ($eq).
Removed top 3 bits (of 5) from port B of cell gost89_mac.$verific$equal_92$gost89_mac.v:67$825 ($eq).
Removed top 2 bits (of 5) from port B of cell gost89_mac.$verific$equal_93$gost89_mac.v:68$826 ($eq).
Removed top 2 bits (of 5) from port B of cell gost89_mac.$verific$equal_94$gost89_mac.v:69$827 ($eq).
Removed top 2 bits (of 5) from port B of cell gost89_mac.$verific$equal_95$gost89_mac.v:70$828 ($eq).
Removed top 2 bits (of 5) from port B of cell gost89_mac.$verific$equal_96$gost89_mac.v:71$829 ($eq).
Removed top 1 bits (of 5) from port B of cell gost89_mac.$verific$equal_97$gost89_mac.v:72$830 ($eq).
Removed top 1 bits (of 5) from port B of cell gost89_mac.$verific$equal_98$gost89_mac.v:73$831 ($eq).
Removed top 1 bits (of 5) from port B of cell gost89_mac.$verific$equal_99$gost89_mac.v:74$832 ($eq).
Removed top 1 bits (of 5) from port B of cell gost89_mac.$verific$equal_100$gost89_mac.v:75$833 ($eq).
Removed top 1 bits (of 5) from port B of cell gost89_mac.$verific$equal_101$gost89_mac.v:76$834 ($eq).
Removed top 1 bits (of 5) from port B of cell gost89_mac.$verific$equal_102$gost89_mac.v:77$835 ($eq).
Removed top 1 bits (of 5) from port B of cell gost89_mac.$verific$equal_103$gost89_mac.v:78$836 ($eq).
Removed top 1 bits (of 5) from port B of cell gost89_mac.$verific$equal_104$gost89_mac.v:79$837 ($eq).

yosys> peepopt

3.49. Executing PEEPOPT pass (run peephole optimizers).

yosys> opt_clean

3.50. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..

yosys> demuxmap

3.51. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> stat

3.52. Printing statistics.

=== gost89_mac ===

   Number of wires:                112
   Number of wire bits:           2838
   Number of public wires:          48
   Number of public wire bits:    2347
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 81
     $add                            2
     $and                            5
     $bmux                           8
     $dff                            4
     $dffe                           2
     $eq                            16
     $logic_not                      1
     $lt                             2
     $mux                           23
     $not                            3
     $pmux                           1
     $reduce_and                     1
     $reduce_or                      9
     $sdff                           1
     $xor                            3


yosys> wreduce t:$mul

3.53. Executing WREDUCE pass (reducing word size of cells).

yosys> rs_dsp_macc -genesis2 -max_dsp 154

3.54. Executing RS_DSP_MACC pass.

yosys> techmap -map +/mul2dsp_check_maxwidth.v -D DSP_A_MAXWIDTH=20 -D DSP_B_MAXWIDTH=18 -D DSP_A_MINWIDTH=11 -D DSP_B_MINWIDTH=10 -D DSP_NAME=$__RS_MUL20X18 a:valid_map

3.55. Executing TECHMAP pass (map to technology primitives).

3.55.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/mul2dsp_check_maxwidth.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/mul2dsp_check_maxwidth.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

3.55.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

yosys> stat

3.56. Printing statistics.

=== gost89_mac ===

   Number of wires:                112
   Number of wire bits:           2838
   Number of public wires:          48
   Number of public wire bits:    2347
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 81
     $add                            2
     $and                            5
     $bmux                           8
     $dff                            4
     $dffe                           2
     $eq                            16
     $logic_not                      1
     $lt                             2
     $mux                           23
     $not                            3
     $pmux                           1
     $reduce_and                     1
     $reduce_or                      9
     $sdff                           1
     $xor                            3


yosys> chtype -set $mul t:$__soft_mul

yosys> techmap -map +/rapidsilicon/genesis2/dsp_map.v -D USE_DSP_CFG_PARAMS=0

3.57. Executing TECHMAP pass (map to technology primitives).

3.57.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/dsp_map.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/dsp_map.v' to AST representation.
Generating RTLIL representation for module `\$__RS_MUL20X18'.
Successfully finished Verilog frontend.

3.57.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

yosys> techmap -map +/rapidsilicon/genesis2/dsp_final_map.v

3.58. Executing TECHMAP pass (map to technology primitives).

3.58.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/dsp_final_map.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/dsp_final_map.v' to AST representation.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Successfully finished Verilog frontend.

3.58.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

yosys> rs-pack-dsp-regs

3.59. Executing rs_pack_dsp_regs pass.

yosys> rs_dsp_io_regs

3.60. Executing RS_DSP_IO_REGS pass.

yosys> alumacc

3.61. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module gost89_mac:
  creating $macc model for $flatten\rnd.$verific$add_3$gost89_round.v:12$849 ($add).
  creating $macc model for $verific$add_46$gost89_mac.v:50$798 ($add).
  creating $alu model for $macc $verific$add_46$gost89_mac.v:50$798.
  creating $alu model for $macc $flatten\rnd.$verific$add_3$gost89_round.v:12$849.
  creating $alu model for $verific$LessThan_45$gost89_mac.v:49$797 ($lt): new $alu
  creating $alu model for $verific$LessThan_49$gost89_mac.v:51$801 ($lt): new $alu
  creating $alu cell for $verific$LessThan_49$gost89_mac.v:51$801: $auto$alumacc.cc:485:replace_alu$1473
  creating $alu cell for $verific$LessThan_45$gost89_mac.v:49$797: $auto$alumacc.cc:485:replace_alu$1478
  creating $alu cell for $flatten\rnd.$verific$add_3$gost89_round.v:12$849: $auto$alumacc.cc:485:replace_alu$1489
  creating $alu cell for $verific$add_46$gost89_mac.v:50$798: $auto$alumacc.cc:485:replace_alu$1492
  created 4 $alu and 0 $macc cells.

yosys> opt_expr

3.62. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.
<suppressed ~1 debug messages>

yosys> opt_merge -nomux

3.63. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.64. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~11 debug messages>

yosys> opt_reduce

3.65. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.66. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_share

3.67. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe

3.68. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.69. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.70. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.
MAX OPT ITERATION = 1

yosys> stat

3.71. Printing statistics.

=== gost89_mac ===

   Number of wires:                125
   Number of wire bits:           2945
   Number of public wires:          48
   Number of public wire bits:    2347
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 86
     $alu                            4
     $and                            5
     $bmux                           8
     $dff                            4
     $dffe                           2
     $eq                            16
     $logic_not                      1
     $mux                           23
     $not                            6
     $or                             1
     $pmux                           1
     $reduce_and                     2
     $reduce_or                      9
     $sdff                           1
     $xor                            3


yosys> memory -nomap

3.72. Executing MEMORY pass.

yosys> opt_mem

3.72.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.72.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.72.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.72.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.72.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.72.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..

yosys> memory_share

3.72.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.72.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.72.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..

yosys> memory_collect

3.72.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.73. Printing statistics.

=== gost89_mac ===

   Number of wires:                125
   Number of wire bits:           2945
   Number of public wires:          48
   Number of public wire bits:    2347
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 86
     $alu                            4
     $and                            5
     $bmux                           8
     $dff                            4
     $dffe                           2
     $eq                            16
     $logic_not                      1
     $mux                           23
     $not                            6
     $or                             1
     $pmux                           1
     $reduce_and                     2
     $reduce_or                      9
     $sdff                           1
     $xor                            3


yosys> muxpack

3.74. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~24 debug messages>

yosys> opt_clean

3.75. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..

yosys> memory_libmap -lib +/rapidsilicon/genesis2/brams_new_swap.txt -limit 150 a:read_swapped

3.76. Executing MEMORY_LIBMAP pass (mapping memories to cells).

yosys> memory_libmap -lib +/rapidsilicon/genesis2/brams_new.txt -limit 150

3.77. Executing MEMORY_LIBMAP pass (mapping memories to cells).

yosys> rs_bram_split -new_mapping

3.78. Executing Rs_BRAM_Split pass.

yosys> techmap -autoproc -map +/rapidsilicon/genesis2/brams_map_new.v

3.79. Executing TECHMAP pass (map to technology primitives).

3.79.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/brams_map_new.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/brams_map_new.v' to AST representation.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_TDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM18_TDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM18_SDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_SDP'.
Successfully finished Verilog frontend.

3.79.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~6 debug messages>

yosys> techmap -map +/rapidsilicon/genesis2/brams_final_map_new.v

3.80. Executing TECHMAP pass (map to technology primitives).

3.80.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/brams_final_map_new.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/brams_final_map_new.v' to AST representation.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Successfully finished Verilog frontend.

3.80.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

yosys> pmuxtree

3.81. Executing PMUXTREE pass.

yosys> muxpack

3.82. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converting gost89_mac.$auto$pmuxtree.cc:65:recursive_mux_generator$1527 ... gost89_mac.$auto$pmuxtree.cc:65:recursive_mux_generator$1529 to a pmux with 2 cases.
Converting gost89_mac.$auto$pmuxtree.cc:65:recursive_mux_generator$1517 ... gost89_mac.$auto$pmuxtree.cc:65:recursive_mux_generator$1519 to a pmux with 2 cases.
Converted 4 (p)mux cells into 2 pmux cells.
<suppressed ~32 debug messages>

yosys> memory_map

3.83. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> stat

3.84. Printing statistics.

=== gost89_mac ===

   Number of wires:                139
   Number of wire bits:           3238
   Number of public wires:          48
   Number of public wire bits:    2347
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 97
     $alu                            4
     $and                            5
     $bmux                           8
     $dff                            4
     $dffe                           2
     $eq                            16
     $logic_not                      1
     $mux                           28
     $not                            7
     $or                             3
     $pmux                           2
     $reduce_and                     2
     $reduce_or                     11
     $sdff                           1
     $xor                            3


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis2/arith_map.v

3.85. Executing TECHMAP pass (map to technology primitives).

3.85.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.85.2. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/arith_map.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.85.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $not.
Using template $paramod$8fabc56b80a569262acfc42757a02ca0b8e91278\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$be80489e44a49c29884f59fd81c31ed03229cfc1\_80_rs_alu for cells of type $alu.
Using template $paramod$b18e16801adf491a64caa0542270798e5d4ac6b6\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $sdff.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $reduce_and.
Using template $paramod$672a140277c71df8314410f22acc08d55222c3c7\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $bmux.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000101 for cells of type $lcu.
No more expansions possible.
<suppressed ~657 debug messages>

yosys> stat

3.86. Printing statistics.

=== gost89_mac ===

   Number of wires:                611
   Number of wire bits:           8859
   Number of public wires:          48
   Number of public wire bits:    2347
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1950
     $_AND_                        174
     $_DFFE_PP_                     64
     $_DFF_P_                       70
     $_MUX_                       1106
     $_NOT_                         71
     $_OR_                         189
     $_SDFF_PP1_                     1
     $_XOR_                        243
     fa_1bit                        32


yosys> opt_expr

3.87. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.
<suppressed ~225 debug messages>

yosys> opt_merge -nomux

3.88. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
<suppressed ~228 debug messages>
Removed a total of 76 cells.

yosys> opt_muxtree

3.89. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.90. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.91. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_share

3.92. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe

3.93. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.94. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..
Removed 50 unused cells and 443 unused wires.
<suppressed ~51 debug messages>

yosys> opt_expr

3.95. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

yosys> opt_muxtree

3.96. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.97. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.98. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_share

3.99. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe

3.100. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.101. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..

yosys> opt_expr

3.102. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.
MAX OPT ITERATION = 2

yosys> opt_expr -full

3.103. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.
<suppressed ~69 debug messages>

yosys> techmap -map +/techmap.v

3.104. Executing TECHMAP pass (map to technology primitives).

3.104.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.104.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> stat

3.105. Printing statistics.

=== gost89_mac ===

   Number of wires:                207
   Number of wire bits:           3835
   Number of public wires:          48
   Number of public wire bits:    2347
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1639
     $_AND_                        180
     $_DFFE_PP_                     64
     $_DFF_P_                       70
     $_MUX_                        989
     $_NOT_                         28
     $_OR_                         141
     $_SDFF_PP1_                     1
     $_XOR_                        134
     fa_1bit                        32


yosys> dfflegalize -cell $_SDFF_???_ 0 -cell $_SDFFE_????_ 0 t:$_SDFFCE_*

3.106. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.107. Printing statistics.

=== gost89_mac ===

   Number of wires:                207
   Number of wire bits:           3835
   Number of public wires:          48
   Number of public wire bits:    2347
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1639
     $_AND_                        180
     $_DFFE_PP_                     64
     $_DFF_P_                       70
     $_MUX_                        989
     $_NOT_                         28
     $_OR_                         141
     $_SDFF_PP1_                     1
     $_XOR_                        134
     fa_1bit                        32


yosys> opt_expr

3.108. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

yosys> opt_merge -nomux

3.109. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.110. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.111. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.112. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -sat

3.113. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.114. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.115. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.
MAX OPT ITERATION = 1

yosys> abc -dff -keepff

3.116. Executing ABC pass (technology mapping using ABC).

3.116.1. Summary of detected clock domains:
  495 cells in clk=\clk, en=$auto$opt_dff.cc:194:make_patterns_logic$1465, arst={ }, srst={ }
  35 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$1468, arst={ }, srst={ }
  69 cells in clk=\clk, en={ }, arst={ }, srst=$verific$n436$15
  1040 cells in clk=\clk, en={ }, arst={ }, srst={ }

3.116.2. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:194:make_patterns_logic$1465
Extracted 495 gates and 799 wires to a netlist network with 304 inputs and 65 outputs.

3.116.2.1. Executing ABC.

3.116.3. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1468
Extracted 35 gates and 70 wires to a netlist network with 35 inputs and 34 outputs.

3.116.3.1. Executing ABC.

3.116.4. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by $verific$n436$15
Extracted 69 gates and 203 wires to a netlist network with 132 inputs and 66 outputs.

3.116.4.1. Executing ABC.

3.116.5. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 1008 gates and 1686 wires to a netlist network with 677 inputs and 155 outputs.

3.116.5.1. Executing ABC.

yosys> abc -dff -keepff

3.117. Executing ABC pass (technology mapping using ABC).

3.117.1. Summary of detected clock domains:
  70 cells in clk=\clk, en={ }, arst={ }, srst=$abc$4578$verific$n436$15
  35 cells in clk=\clk, en=$abc$4511$auto$opt_dff.cc:219:make_patterns_logic$1468, arst={ }, srst={ }
  486 cells in clk=\clk, en=$abc$4039$auto$opt_dff.cc:194:make_patterns_logic$1465, arst={ }, srst={ }
  1102 cells in clk=\clk, en={ }, arst={ }, srst={ }

3.117.2. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by $abc$4578$verific$n436$15
Extracted 70 gates and 202 wires to a netlist network with 132 inputs and 67 outputs.

3.117.2.1. Executing ABC.

3.117.3. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4511$auto$opt_dff.cc:219:make_patterns_logic$1468
Extracted 35 gates and 71 wires to a netlist network with 36 inputs and 35 outputs.

3.117.3.1. Executing ABC.

3.117.4. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4039$auto$opt_dff.cc:194:make_patterns_logic$1465
Extracted 486 gates and 785 wires to a netlist network with 299 inputs and 66 outputs.

3.117.4.1. Executing ABC.

3.117.5. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 1070 gates and 1750 wires to a netlist network with 680 inputs and 148 outputs.

3.117.5.1. Executing ABC.

yosys> abc -dff -keepff

3.118. Executing ABC pass (technology mapping using ABC).

3.118.1. Summary of detected clock domains:
  67 cells in clk=\clk, en={ }, arst={ }, srst=$abc$5736$abc$4578$verific$n436$15
  599 cells in clk=\clk, en=$abc$5873$abc$4039$auto$opt_dff.cc:194:make_patterns_logic$1465, arst={ }, srst={ }
  35 cells in clk=\clk, en=$abc$5805$abc$4511$auto$opt_dff.cc:219:make_patterns_logic$1468, arst={ }, srst={ }
  1131 cells in clk=\clk, en={ }, arst={ }, srst={ }

3.118.2. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by $abc$5736$abc$4578$verific$n436$15
Extracted 67 gates and 199 wires to a netlist network with 132 inputs and 66 outputs.

3.118.2.1. Executing ABC.

3.118.3. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5873$abc$4039$auto$opt_dff.cc:194:make_patterns_logic$1465
Extracted 599 gates and 898 wires to a netlist network with 299 inputs and 65 outputs.

3.118.3.1. Executing ABC.

3.118.4. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5805$abc$4511$auto$opt_dff.cc:219:make_patterns_logic$1468
Extracted 35 gates and 71 wires to a netlist network with 36 inputs and 35 outputs.

3.118.4.1. Executing ABC.

3.118.5. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 1099 gates and 1777 wires to a netlist network with 678 inputs and 148 outputs.

3.118.5.1. Executing ABC.

yosys> abc -dff -keepff

3.119. Executing ABC pass (technology mapping using ABC).

3.119.1. Summary of detected clock domains:
  67 cells in clk=\clk, en={ }, arst={ }, srst=$abc$7572$abc$5736$abc$4578$verific$n436$15
  638 cells in clk=\clk, en=$abc$7640$abc$5873$abc$4039$auto$opt_dff.cc:194:make_patterns_logic$1465, arst={ }, srst={ }
  35 cells in clk=\clk, en=$abc$8279$abc$5805$abc$4511$auto$opt_dff.cc:219:make_patterns_logic$1468, arst={ }, srst={ }
  1116 cells in clk=\clk, en={ }, arst={ }, srst={ }

3.119.2. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by $abc$7572$abc$5736$abc$4578$verific$n436$15
Extracted 67 gates and 199 wires to a netlist network with 132 inputs and 66 outputs.

3.119.2.1. Executing ABC.

3.119.3. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$7640$abc$5873$abc$4039$auto$opt_dff.cc:194:make_patterns_logic$1465
Extracted 638 gates and 937 wires to a netlist network with 299 inputs and 65 outputs.

3.119.3.1. Executing ABC.

3.119.4. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$8279$abc$5805$abc$4511$auto$opt_dff.cc:219:make_patterns_logic$1468
Extracted 35 gates and 71 wires to a netlist network with 36 inputs and 35 outputs.

3.119.4.1. Executing ABC.

3.119.5. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 1084 gates and 1762 wires to a netlist network with 678 inputs and 148 outputs.

3.119.5.1. Executing ABC.

yosys> opt_ffinv

3.120. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt_expr

3.121. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.
<suppressed ~64 debug messages>

yosys> opt_merge -nomux

3.122. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.123. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.124. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.125. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_share

3.126. Executing OPT_SHARE pass.

yosys> opt_dff -sat

3.127. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $abc$10225$auto$blifparse.cc:362:parse_blif$10295 ($_DFF_P_) from module gost89_mac (D = $abc$10225$n1930_li69, Q = $abc$10225$abc$8347$abc$6474$abc$4648$n2[31]).
Adding EN signal on $abc$10225$auto$blifparse.cc:362:parse_blif$10294 ($_DFF_P_) from module gost89_mac (D = $abc$10225$n1926_li68, Q = $abc$10225$abc$8347$abc$6474$abc$4648$n2[30]).
Adding EN signal on $abc$10225$auto$blifparse.cc:362:parse_blif$10293 ($_DFF_P_) from module gost89_mac (D = $abc$10225$n1922_li67, Q = $abc$10225$abc$8347$abc$6474$abc$4648$n2[29]).
Adding EN signal on $abc$10225$auto$blifparse.cc:362:parse_blif$10292 ($_DFF_P_) from module gost89_mac (D = $abc$10225$n1918_li66, Q = $abc$10225$abc$8347$abc$6474$abc$4648$n2[28]).
Adding EN signal on $abc$10225$auto$blifparse.cc:362:parse_blif$10291 ($_DFF_P_) from module gost89_mac (D = $abc$10225$n1914_li65, Q = $abc$10225$abc$8347$abc$6474$abc$4648$n2[27]).
Adding EN signal on $abc$10225$auto$blifparse.cc:362:parse_blif$10290 ($_DFF_P_) from module gost89_mac (D = $abc$10225$n1910_li64, Q = $abc$10225$abc$8347$abc$6474$abc$4648$n2[26]).
Adding EN signal on $abc$10225$auto$blifparse.cc:362:parse_blif$10289 ($_DFF_P_) from module gost89_mac (D = $abc$10225$n1906_li63, Q = $abc$10225$abc$8347$abc$6474$abc$4648$n2[25]).
Adding EN signal on $abc$10225$auto$blifparse.cc:362:parse_blif$10288 ($_DFF_P_) from module gost89_mac (D = $abc$10225$n1902_li62, Q = $abc$10225$abc$8347$abc$6474$abc$4648$n2[24]).
Adding EN signal on $abc$10225$auto$blifparse.cc:362:parse_blif$10287 ($_DFF_P_) from module gost89_mac (D = $abc$10225$n1898_li61, Q = $abc$10225$abc$8347$abc$6474$abc$4648$n2[23]).
Adding EN signal on $abc$10225$auto$blifparse.cc:362:parse_blif$10286 ($_DFF_P_) from module gost89_mac (D = $abc$10225$n1894_li60, Q = $abc$10225$abc$8347$abc$6474$abc$4648$n2[22]).
Adding EN signal on $abc$10225$auto$blifparse.cc:362:parse_blif$10285 ($_DFF_P_) from module gost89_mac (D = $abc$10225$n1890_li59, Q = $abc$10225$abc$8347$abc$6474$abc$4648$n2[21]).
Adding EN signal on $abc$10225$auto$blifparse.cc:362:parse_blif$10284 ($_DFF_P_) from module gost89_mac (D = $abc$10225$n1886_li58, Q = $abc$10225$abc$8347$abc$6474$abc$4648$n2[20]).
Adding EN signal on $abc$10225$auto$blifparse.cc:362:parse_blif$10283 ($_DFF_P_) from module gost89_mac (D = $abc$10225$n1882_li57, Q = $abc$10225$abc$8347$abc$6474$abc$4648$n2[19]).
Adding EN signal on $abc$10225$auto$blifparse.cc:362:parse_blif$10282 ($_DFF_P_) from module gost89_mac (D = $abc$10225$n1878_li56, Q = $abc$10225$abc$8347$abc$6474$abc$4648$n2[18]).
Adding EN signal on $abc$10225$auto$blifparse.cc:362:parse_blif$10281 ($_DFF_P_) from module gost89_mac (D = $abc$10225$n1874_li55, Q = $abc$10225$abc$8347$abc$6474$abc$4648$n2[17]).
Adding EN signal on $abc$10225$auto$blifparse.cc:362:parse_blif$10280 ($_DFF_P_) from module gost89_mac (D = $abc$10225$n1870_li54, Q = $abc$10225$abc$8347$abc$6474$abc$4648$n2[16]).
Adding EN signal on $abc$10225$auto$blifparse.cc:362:parse_blif$10279 ($_DFF_P_) from module gost89_mac (D = $abc$10225$n1866_li53, Q = $abc$10225$abc$8347$abc$6474$abc$4648$n2[15]).
Adding EN signal on $abc$10225$auto$blifparse.cc:362:parse_blif$10278 ($_DFF_P_) from module gost89_mac (D = $abc$10225$n1862_li52, Q = $abc$10225$abc$8347$abc$6474$abc$4648$n2[14]).
Adding EN signal on $abc$10225$auto$blifparse.cc:362:parse_blif$10277 ($_DFF_P_) from module gost89_mac (D = $abc$10225$n1858_li51, Q = $abc$10225$abc$8347$abc$6474$abc$4648$n2[13]).
Adding EN signal on $abc$10225$auto$blifparse.cc:362:parse_blif$10276 ($_DFF_P_) from module gost89_mac (D = $abc$10225$n1854_li50, Q = $abc$10225$abc$8347$abc$6474$abc$4648$n2[12]).
Adding EN signal on $abc$10225$auto$blifparse.cc:362:parse_blif$10275 ($_DFF_P_) from module gost89_mac (D = $abc$10225$n1850_li49, Q = $abc$10225$abc$8347$abc$6474$abc$4648$n2[11]).
Adding EN signal on $abc$10225$auto$blifparse.cc:362:parse_blif$10274 ($_DFF_P_) from module gost89_mac (D = $abc$10225$n1846_li48, Q = $abc$10225$abc$8347$abc$6474$abc$4648$n2[10]).
Adding EN signal on $abc$10225$auto$blifparse.cc:362:parse_blif$10273 ($_DFF_P_) from module gost89_mac (D = $abc$10225$n1842_li47, Q = $abc$10225$abc$8347$abc$6474$abc$4648$n2[9]).
Adding EN signal on $abc$10225$auto$blifparse.cc:362:parse_blif$10272 ($_DFF_P_) from module gost89_mac (D = $abc$10225$n1838_li46, Q = $abc$10225$abc$8347$abc$6474$abc$4648$n2[8]).
Adding EN signal on $abc$10225$auto$blifparse.cc:362:parse_blif$10271 ($_DFF_P_) from module gost89_mac (D = $abc$10225$n1834_li45, Q = $abc$10225$abc$8347$abc$6474$abc$4648$n2[7]).
Adding EN signal on $abc$10225$auto$blifparse.cc:362:parse_blif$10270 ($_DFF_P_) from module gost89_mac (D = $abc$10225$n1830_li44, Q = $abc$10225$abc$8347$abc$6474$abc$4648$n2[6]).
Adding EN signal on $abc$10225$auto$blifparse.cc:362:parse_blif$10269 ($_DFF_P_) from module gost89_mac (D = $abc$10225$n1826_li43, Q = $abc$10225$abc$8347$abc$6474$abc$4648$n2[5]).
Adding EN signal on $abc$10225$auto$blifparse.cc:362:parse_blif$10268 ($_DFF_P_) from module gost89_mac (D = $abc$10225$n1822_li42, Q = $abc$10225$abc$8347$abc$6474$abc$4648$n2[4]).
Adding EN signal on $abc$10225$auto$blifparse.cc:362:parse_blif$10267 ($_DFF_P_) from module gost89_mac (D = $abc$10225$n1818_li41, Q = $abc$10225$abc$8347$abc$6474$abc$4648$n2[3]).
Adding EN signal on $abc$10225$auto$blifparse.cc:362:parse_blif$10266 ($_DFF_P_) from module gost89_mac (D = $abc$10225$n1814_li40, Q = $abc$10225$abc$8347$abc$6474$abc$4648$n2[2]).
Adding EN signal on $abc$10225$auto$blifparse.cc:362:parse_blif$10265 ($_DFF_P_) from module gost89_mac (D = $abc$10225$n1810_li39, Q = $abc$10225$abc$8347$abc$6474$abc$4648$n2[1]).
Adding EN signal on $abc$10225$auto$blifparse.cc:362:parse_blif$10264 ($_DFF_P_) from module gost89_mac (D = $abc$10225$n1806_li38, Q = $abc$10225$abc$8347$abc$6474$abc$4648$n2[0]).
Adding EN signal on $abc$10225$auto$blifparse.cc:362:parse_blif$10263 ($_DFF_P_) from module gost89_mac (D = $abc$10225$n1802_li37, Q = $abc$10225$abc$8347$abc$6474$abc$4648$n1[31]).
Adding EN signal on $abc$10225$auto$blifparse.cc:362:parse_blif$10261 ($_DFF_P_) from module gost89_mac (D = $abc$10225$n1794_li35, Q = $abc$10225$abc$8347$abc$6474$abc$4648$n1[29]).
Adding EN signal on $abc$10225$auto$blifparse.cc:362:parse_blif$10260 ($_DFF_P_) from module gost89_mac (D = $abc$10225$n1790_li34, Q = $abc$10225$abc$8347$abc$6474$abc$4648$n1[28]).
Adding EN signal on $abc$10225$auto$blifparse.cc:362:parse_blif$10259 ($_DFF_P_) from module gost89_mac (D = $abc$10225$n1786_li33, Q = $abc$10225$abc$8347$abc$6474$abc$4648$n1[27]).
Adding EN signal on $abc$10225$auto$blifparse.cc:362:parse_blif$10258 ($_DFF_P_) from module gost89_mac (D = $abc$10225$n1782_li32, Q = $abc$10225$abc$8347$abc$6474$abc$4648$n1[26]).
Adding EN signal on $abc$10225$auto$blifparse.cc:362:parse_blif$10257 ($_DFF_P_) from module gost89_mac (D = $abc$10225$n1778_li31, Q = $abc$10225$abc$8347$abc$6474$abc$4648$n1[25]).
Adding EN signal on $abc$10225$auto$blifparse.cc:362:parse_blif$10256 ($_DFF_P_) from module gost89_mac (D = $abc$10225$n1774_li30, Q = $abc$10225$abc$8347$abc$6474$abc$4648$n1[24]).
Adding EN signal on $abc$10225$auto$blifparse.cc:362:parse_blif$10255 ($_DFF_P_) from module gost89_mac (D = $abc$10225$n1770_li29, Q = $abc$10225$abc$8347$abc$6474$abc$4648$n1[23]).
Adding EN signal on $abc$10225$auto$blifparse.cc:362:parse_blif$10254 ($_DFF_P_) from module gost89_mac (D = $abc$10225$n1766_li28, Q = $abc$10225$abc$8347$abc$6474$abc$4648$n1[22]).
Adding EN signal on $abc$10225$auto$blifparse.cc:362:parse_blif$10253 ($_DFF_P_) from module gost89_mac (D = $abc$10225$n1762_li27, Q = $abc$10225$abc$8347$abc$6474$abc$4648$n1[21]).
Adding EN signal on $abc$10225$auto$blifparse.cc:362:parse_blif$10252 ($_DFF_P_) from module gost89_mac (D = $abc$10225$n1758_li26, Q = $abc$10225$abc$8347$abc$6474$abc$4648$n1[20]).
Adding EN signal on $abc$10225$auto$blifparse.cc:362:parse_blif$10251 ($_DFF_P_) from module gost89_mac (D = $abc$10225$n1754_li25, Q = $abc$10225$abc$8347$abc$6474$abc$4648$n1[19]).
Adding EN signal on $abc$10225$auto$blifparse.cc:362:parse_blif$10250 ($_DFF_P_) from module gost89_mac (D = $abc$10225$n1750_li24, Q = $abc$10225$abc$8347$abc$6474$abc$4648$n1[18]).
Adding EN signal on $abc$10225$auto$blifparse.cc:362:parse_blif$10248 ($_DFF_P_) from module gost89_mac (D = $abc$10225$n1742_li22, Q = $abc$10225$abc$8347$abc$6474$abc$4648$n1[16]).
Adding EN signal on $abc$10225$auto$blifparse.cc:362:parse_blif$10246 ($_DFF_P_) from module gost89_mac (D = $abc$10225$n1734_li20, Q = $abc$10225$abc$8347$abc$6474$abc$4648$n1[14]).
Adding EN signal on $abc$10225$auto$blifparse.cc:362:parse_blif$10245 ($_DFF_P_) from module gost89_mac (D = $abc$10225$n1730_li19, Q = $abc$10225$abc$8347$abc$6474$abc$4648$n1[13]).
Adding EN signal on $abc$10225$auto$blifparse.cc:362:parse_blif$10244 ($_DFF_P_) from module gost89_mac (D = $abc$10225$n1726_li18, Q = $abc$10225$abc$8347$abc$6474$abc$4648$n1[12]).
Adding EN signal on $abc$10225$auto$blifparse.cc:362:parse_blif$10243 ($_DFF_P_) from module gost89_mac (D = $abc$10225$n1722_li17, Q = $abc$10225$abc$8347$abc$6474$abc$4648$n1[11]).
Adding EN signal on $abc$10225$auto$blifparse.cc:362:parse_blif$10242 ($_DFF_P_) from module gost89_mac (D = $abc$10225$n1718_li16, Q = $abc$10225$abc$8347$abc$6474$abc$4648$n1[10]).
Adding EN signal on $abc$10225$auto$blifparse.cc:362:parse_blif$10241 ($_DFF_P_) from module gost89_mac (D = $abc$10225$n1714_li15, Q = $abc$10225$abc$8347$abc$6474$abc$4648$n1[9]).
Adding EN signal on $abc$10225$auto$blifparse.cc:362:parse_blif$10240 ($_DFF_P_) from module gost89_mac (D = $abc$10225$n1710_li14, Q = $abc$10225$abc$8347$abc$6474$abc$4648$n1[8]).
Adding EN signal on $abc$10225$auto$blifparse.cc:362:parse_blif$10239 ($_DFF_P_) from module gost89_mac (D = $abc$10225$n1706_li13, Q = $abc$10225$abc$8347$abc$6474$abc$4648$n1[7]).
Adding EN signal on $abc$10225$auto$blifparse.cc:362:parse_blif$10238 ($_DFF_P_) from module gost89_mac (D = $abc$10225$n1702_li12, Q = $abc$10225$abc$8347$abc$6474$abc$4648$n1[6]).
Adding EN signal on $abc$10225$auto$blifparse.cc:362:parse_blif$10237 ($_DFF_P_) from module gost89_mac (D = $abc$10225$n1698_li11, Q = $abc$10225$abc$8347$abc$6474$abc$4648$n1[5]).
Adding EN signal on $abc$10225$auto$blifparse.cc:362:parse_blif$10236 ($_DFF_P_) from module gost89_mac (D = $abc$10225$n1694_li10, Q = $abc$10225$abc$8347$abc$6474$abc$4648$n1[4]).
Adding EN signal on $abc$10225$auto$blifparse.cc:362:parse_blif$10233 ($_DFF_P_) from module gost89_mac (D = $abc$10225$n1682_li07, Q = $abc$10225$abc$8347$abc$6474$abc$4648$n1[1]).
Adding EN signal on $abc$10225$auto$blifparse.cc:362:parse_blif$10232 ($_DFF_P_) from module gost89_mac (D = $abc$10225$n1678_li06, Q = $abc$10225$abc$8347$abc$6474$abc$4648$n1[0]).

yosys> opt_clean

3.128. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..
Removed 0 unused cells and 9983 unused wires.
<suppressed ~10 debug messages>

yosys> opt_expr

3.129. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.
<suppressed ~177 debug messages>

yosys> opt_muxtree

3.130. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.131. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.132. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
<suppressed ~696 debug messages>
Removed a total of 232 cells.

yosys> opt_share

3.133. Executing OPT_SHARE pass.

yosys> opt_dff -sat

3.134. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.135. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..
Removed 0 unused cells and 291 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.136. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

yosys> opt_muxtree

3.137. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.138. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.139. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_share

3.140. Executing OPT_SHARE pass.

yosys> opt_dff -sat

3.141. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.142. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..

yosys> opt_expr

3.143. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.
MAX OPT ITERATION = 3

yosys> bmuxmap

3.144. Executing BMUXMAP pass.

yosys> demuxmap

3.145. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> abc -script /tmp/yosys_2hXKHJ/abc_tmp_1.scr

3.146. Executing ABC pass (technology mapping using ABC).

3.146.1. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Extracted 1705 gates and 2674 wires to a netlist network with 968 inputs and 137 outputs.

3.146.1.1. Executing ABC.
DE:   #PIs = 968  #Luts =   472  Max Lvl =   4  Avg Lvl =   2.59  [   0.15 sec. at Pass 0]{firstMap}[1]
DE:   #PIs = 968  #Luts =   385  Max Lvl =   5  Avg Lvl =   2.53  [   2.15 sec. at Pass 1]{initMapFlow}[2]
DE:   #PIs = 968  #Luts =   385  Max Lvl =   5  Avg Lvl =   2.53  [   0.62 sec. at Pass 2]{map}[2]
DE:   #PIs = 968  #Luts =   385  Max Lvl =   5  Avg Lvl =   2.53  [   0.70 sec. at Pass 3]{postMap}[6]
DE:   #PIs = 968  #Luts =   385  Max Lvl =   5  Avg Lvl =   2.53  [   1.10 sec. at Pass 4]{map}[12]
DE:   #PIs = 968  #Luts =   384  Max Lvl =   5  Avg Lvl =   2.28  [   1.33 sec. at Pass 5]{postMap}[16]
DE:   #PIs = 968  #Luts =   384  Max Lvl =   4  Avg Lvl =   2.26  [   1.16 sec. at Pass 6]{map}[16]
DE:   #PIs = 968  #Luts =   383  Max Lvl =   4  Avg Lvl =   2.26  [   1.14 sec. at Pass 7]{postMap}[16]
DE:   #PIs = 968  #Luts =   383  Max Lvl =   4  Avg Lvl =   2.26  [   1.09 sec. at Pass 8]{map}[16]
DE:   #PIs = 968  #Luts =   383  Max Lvl =   4  Avg Lvl =   2.26  [   0.88 sec. at Pass 9]{postMap}[16]
DE:   #PIs = 968  #Luts =   383  Max Lvl =   4  Avg Lvl =   2.26  [   1.02 sec. at Pass 10]{map}[16]
DE:   #PIs = 968  #Luts =   381  Max Lvl =   4  Avg Lvl =   2.27  [   2.74 sec. at Pass 11]{pushMap}[16]
DE:   #PIs = 968  #Luts =   378  Max Lvl =   4  Avg Lvl =   2.30  [   0.75 sec. at Pass 12]{postMap}[16]
DE:   #PIs = 968  #Luts =   378  Max Lvl =   4  Avg Lvl =   2.30  [   0.67 sec. at Pass 13]{map}[16]
DE:   #PIs = 968  #Luts =   378  Max Lvl =   4  Avg Lvl =   2.30  [   0.96 sec. at Pass 14]{postMap}[16]
DE:   #PIs = 968  #Luts =   378  Max Lvl =   4  Avg Lvl =   2.30  [   0.63 sec. at Pass 15]{map}[16]
DE:   #PIs = 968  #Luts =   378  Max Lvl =   4  Avg Lvl =   2.30  [   2.20 sec. at Pass 16]{pushMap}[16]
DE:   #PIs = 968  #Luts =   378  Max Lvl =   4  Avg Lvl =   2.30  [   0.66 sec. at Pass 17]{finalMap}[16]

yosys> opt_expr

3.147. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

yosys> opt_merge -nomux

3.148. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.149. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.150. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.151. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_share

3.152. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe

3.153. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.154. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..
Removed 0 unused cells and 2671 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.155. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.
MAX OPT ITERATION = 1

yosys> opt_ffinv

3.156. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> stat

3.157. Printing statistics.

=== gost89_mac ===

   Number of wires:                795
   Number of wire bits:           3102
   Number of public wires:          39
   Number of public wire bits:    2283
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                545
     $_DFFE_PP_                    123
     $_DFF_P_                       11
     $_SDFF_PP0_                     1
     $lut                          378
     fa_1bit                        32


yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFFE_??_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_SDFF_???_ 0 -cell $_SDFFE_????_ 0 -cell $_DLATCH_?_ 0 -cell $_DLATCH_???_ 0

3.158. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.159. Printing statistics.

=== gost89_mac ===

   Number of wires:                795
   Number of wire bits:           3102
   Number of public wires:          39
   Number of public wire bits:    2283
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                545
     $_DFFE_PP_                    123
     $_DFF_P_                       11
     $_SDFF_PP0_                     1
     $lut                          378
     fa_1bit                        32


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis2/ffs_map.v

3.160. Executing TECHMAP pass (map to technology primitives).

3.160.1. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.160.2. Executing Verilog-2005 frontend: /nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/ffs_map.v
Parsing Verilog input from `/nfs_project/github_runner/yosys_verific_rs_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis2/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_PP0N_'.
Generating RTLIL representation for module `\$_SDFFE_PN0P_'.
Generating RTLIL representation for module `\$_SDFFE_PN0N_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFFE_PP1N_'.
Generating RTLIL representation for module `\$_SDFFE_PN1P_'.
Generating RTLIL representation for module `\$_SDFFE_PN1N_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP0N_'.
Generating RTLIL representation for module `\$_SDFFE_NN0P_'.
Generating RTLIL representation for module `\$_SDFFE_NN0N_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1N_'.
Generating RTLIL representation for module `\$_SDFFE_NN1P_'.
Generating RTLIL representation for module `\$_SDFFE_NN1N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_PP0_'.
Generating RTLIL representation for module `\$_DLATCH_NP0_'.
Generating RTLIL representation for module `\$_DLATCH_PN0_'.
Generating RTLIL representation for module `\$_DLATCH_NN0_'.
Generating RTLIL representation for module `\$_DLATCH_PP1_'.
Generating RTLIL representation for module `\$_DLATCH_NP1_'.
Generating RTLIL representation for module `\$_DLATCH_PN1_'.
Generating RTLIL representation for module `\$_DLATCH_NN1_'.
Successfully finished Verilog frontend.

3.160.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_SDFF_PP0_ for cells of type $_SDFF_PP0_.
No more expansions possible.
<suppressed ~648 debug messages>

yosys> opt_expr -mux_undef

3.161. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.
<suppressed ~13529 debug messages>

yosys> simplemap

3.162. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.163. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

yosys> opt_merge

3.164. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
<suppressed ~9072 debug messages>
Removed a total of 3024 cells.

yosys> opt_dff -nodffe -nosdff

3.165. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.166. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..
Removed 0 unused cells and 1269 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.167. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.
<suppressed ~1030 debug messages>

yosys> opt_merge -nomux

3.168. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.169. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.170. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.171. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_share

3.172. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.173. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.174. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..
Removed 0 unused cells and 32 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.175. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.
MAX OPT ITERATION = 1

yosys> abc -script /tmp/yosys_2hXKHJ/abc_tmp_2.scr

3.176. Executing ABC pass (technology mapping using ABC).

3.176.1. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Extracted 2051 gates and 3021 wires to a netlist network with 968 inputs and 137 outputs.

3.176.1.1. Executing ABC.
DE:   #PIs = 968  #Luts =   378  Max Lvl =   4  Avg Lvl =   2.26  [   0.09 sec. at Pass 0]{firstMap}[1]
DE:   #PIs = 968  #Luts =   378  Max Lvl =   4  Avg Lvl =   2.26  [   1.46 sec. at Pass 1]{initMapFlow}[2]
DE:   #PIs = 968  #Luts =   378  Max Lvl =   4  Avg Lvl =   2.26  [   0.42 sec. at Pass 2]{map}[2]
DE:   #PIs = 968  #Luts =   378  Max Lvl =   4  Avg Lvl =   2.26  [   0.54 sec. at Pass 3]{postMap}[6]
DE:   #PIs = 968  #Luts =   375  Max Lvl =   4  Avg Lvl =   2.31  [   0.53 sec. at Pass 4]{map}[12]
DE:   #PIs = 968  #Luts =   375  Max Lvl =   4  Avg Lvl =   2.31  [   0.65 sec. at Pass 5]{postMap}[16]
DE:   #PIs = 968  #Luts =   375  Max Lvl =   4  Avg Lvl =   2.31  [   0.65 sec. at Pass 6]{map}[16]
DE:   #PIs = 968  #Luts =   375  Max Lvl =   4  Avg Lvl =   2.31  [   0.72 sec. at Pass 7]{postMap}[16]
DE:   #PIs = 968  #Luts =   375  Max Lvl =   4  Avg Lvl =   2.31  [   1.83 sec. at Pass 8]{pushMap}[16]
DE:   #PIs = 968  #Luts =   375  Max Lvl =   4  Avg Lvl =   2.31  [   0.28 sec. at Pass 9]{finalMap}[16]

yosys> opt_expr

3.177. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

yosys> opt_merge -nomux

3.178. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.179. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.180. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.181. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_share

3.182. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe

3.183. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.184. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..
Removed 0 unused cells and 2622 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.185. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.
MAX OPT ITERATION = 1

yosys> hierarchy -check

3.186. Executing HIERARCHY pass (managing design hierarchy).

3.186.1. Analyzing design hierarchy..
Top module:  \gost89_mac

3.186.2. Analyzing design hierarchy..
Top module:  \gost89_mac
Removed 0 unused modules.

yosys> stat

3.187. Printing statistics.

=== gost89_mac ===

   Number of wires:                792
   Number of wire bits:           3099
   Number of public wires:          39
   Number of public wire bits:    2283
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                542
     $lut                          375
     dff                            11
     dffe                          123
     fa_1bit                        32
     sdffre                          1


yosys> opt_clean -purge

3.188. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..
Removed 0 unused cells and 17 unused wires.
<suppressed ~17 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.189. Executing Verilog backend.
Dumping module `\gost89_mac'.

Warnings: 1 unique messages, 1 total
End of script. Logfile hash: d3cd565633, CPU: user 4.63s system 0.11s, MEM: 60.12 MB peak
Yosys 0.18+10 (git sha1 92b23013e, gcc 11.2.0 -fPIC -Os)
Time spent: 97% 6x abc (195 sec), 0% 30x opt_expr (1 sec), ...
real 46.87
user 173.27
sys 25.94
