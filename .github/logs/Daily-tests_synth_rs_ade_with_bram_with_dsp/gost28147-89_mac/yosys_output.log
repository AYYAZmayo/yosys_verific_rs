
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.64
 Yosys 0.18+10 (git sha1 c98b0e94e, gcc 9.4.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 00:39:28 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k gost89_mac.v gost89_round.v gost89_sbox.v

yosys> verific -vlog2k gost89_mac.v gost89_round.v gost89_sbox.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 00:39:28 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'gost89_mac.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'gost89_round.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'gost89_sbox.v'

yosys> synth_rs -top gost89_mac -tech genesis -goal area -de -verilog synthesized.v

3. Executing synth_rs pass: v0.4.65

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v +/rapidsilicon/genesis/dsp_sim.v

3.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Successfully finished Verilog frontend.

3.3. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_sim.v' to AST representation.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\RS_DSP2_MULT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_ports'.
Generating RTLIL representation for module `\RS_DSP3'.
Generating RTLIL representation for module `\RS_DSP3_MULT'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_params'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top gost89_mac

3.4. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] gost89_mac.v:1: compiling module 'gost89_mac'
VERIFIC-INFO [VERI-1018] gost89_round.v:1: compiling module 'gost89_round'
VERIFIC-INFO [VERI-1018] gost89_sbox.v:1: compiling module 'gost89_sbox'
VERIFIC-WARNING [VERI-1209] gost89_mac.v:50: expression size 6 truncated to fit in target size 5
Importing module gost89_mac.
Importing module gost89_round.
Importing module gost89_sbox.

3.4.1. Analyzing design hierarchy..
Top module:  \gost89_mac
Used module:     \gost89_round
Used module:         \gost89_sbox

3.4.2. Analyzing design hierarchy..
Top module:  \gost89_mac
Used module:     \gost89_round
Used module:         \gost89_sbox
Removed 0 unused modules.

yosys> proc

3.5. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.5.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.5.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.5.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.5.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.5.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.5.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.5.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.5.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.5.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.5.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.5.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.5.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_sbox.
Optimizing module gost89_round.
Optimizing module gost89_mac.
<suppressed ~3 debug messages>

yosys> demuxmap

3.6. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> flatten

3.7. Executing FLATTEN pass (flatten design).
Deleting now unused module gost89_round.
Deleting now unused module gost89_sbox.
<suppressed ~9 debug messages>

yosys> demuxmap

3.8. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> tribuf -logic -formal

3.9. Executing TRIBUF pass.

yosys> deminout

3.10. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

yosys> opt_clean

3.12. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..
Removed 0 unused cells and 1413 unused wires.
<suppressed ~22 debug messages>

yosys> check

3.13. Executing CHECK pass (checking for obvious problems).
Checking module gost89_mac...
Found and reported 0 problems.

yosys> opt_expr

3.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

yosys> opt_merge -nomux

3.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.16. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~12 debug messages>

yosys> opt_reduce

3.17. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
    New ctrl vector for $pmux cell $verific$select_106$gost89_mac.v:80$841: { $auto$opt_reduce.cc:134:opt_pmux$1463 $auto$opt_reduce.cc:134:opt_pmux$1461 $auto$opt_reduce.cc:134:opt_pmux$1459 $auto$opt_reduce.cc:134:opt_pmux$1457 $auto$opt_reduce.cc:134:opt_pmux$1455 $auto$opt_reduce.cc:134:opt_pmux$1453 $auto$opt_reduce.cc:134:opt_pmux$1451 $auto$opt_reduce.cc:134:opt_pmux$1449 $verific$n1570$41 }
  Optimizing cells in module \gost89_mac.
Performed a total of 1 changes.

yosys> opt_merge

3.18. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_share

3.19. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.20. Executing OPT_DFF pass (perform DFF optimizations).
Removing never-active async load on $verific$round_key_reg$gost89_mac.v:80$842 ($aldff) from module gost89_mac.
Removing never-active async load on $verific$out_reg$gost89_mac.v:60$820 ($aldff) from module gost89_mac.
Removing never-active async load on $verific$n2_reg$gost89_mac.v:60$819 ($aldff) from module gost89_mac.
Removing never-active async load on $verific$n1_reg$gost89_mac.v:60$818 ($aldff) from module gost89_mac.
Removing never-active async load on $verific$counter_reg$gost89_mac.v:60$815 ($aldff) from module gost89_mac.

yosys> opt_clean

3.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..

yosys> opt_expr

3.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

yosys> opt_muxtree

3.23. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~12 debug messages>

yosys> opt_reduce

3.24. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.25. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_share

3.26. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.27. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..

yosys> opt_expr

3.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.
MAX OPT ITERATION = 2

yosys> fsm -encoding binary

3.30. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.30.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.30.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.30.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.30.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..

yosys> fsm_opt

3.30.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.30.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.30.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.30.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt_expr

3.31. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

yosys> opt_merge -nomux

3.32. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.33. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~12 debug messages>

yosys> opt_reduce

3.34. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.35. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_share

3.36. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.37. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $verific$round_key_reg$gost89_mac.v:80$842 ($dff) from module gost89_mac (D = $verific$n1571$89, Q = \round_key).
Adding EN signal on $verific$out_reg$gost89_mac.v:60$820 ($dff) from module gost89_mac (D = \n1, Q = \out).

yosys> opt_clean

3.38. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..
Removed 2 unused cells and 2 unused wires.
<suppressed ~3 debug messages>

yosys> opt_expr

3.39. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.
<suppressed ~4 debug messages>

yosys> opt_muxtree

3.40. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~11 debug messages>

yosys> opt_reduce

3.41. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.42. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_share

3.43. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.44. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.45. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.46. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.
MAX OPT ITERATION = 2

yosys> wreduce -keepdc

3.47. Executing WREDUCE pass (reducing word size of cells).
Removed top 4 bits (of 5) from port B of cell gost89_mac.$verific$add_46$gost89_mac.v:50$798 ($add).
Removed top 4 bits (of 5) from port A of cell gost89_mac.$verific$LessThan_49$gost89_mac.v:51$801 ($lt).
Removed top 4 bits (of 5) from port B of cell gost89_mac.$verific$equal_90$gost89_mac.v:65$823 ($eq).
Removed top 3 bits (of 5) from port B of cell gost89_mac.$verific$equal_91$gost89_mac.v:66$824 ($eq).
Removed top 3 bits (of 5) from port B of cell gost89_mac.$verific$equal_92$gost89_mac.v:67$825 ($eq).
Removed top 2 bits (of 5) from port B of cell gost89_mac.$verific$equal_93$gost89_mac.v:68$826 ($eq).
Removed top 2 bits (of 5) from port B of cell gost89_mac.$verific$equal_94$gost89_mac.v:69$827 ($eq).
Removed top 2 bits (of 5) from port B of cell gost89_mac.$verific$equal_95$gost89_mac.v:70$828 ($eq).
Removed top 2 bits (of 5) from port B of cell gost89_mac.$verific$equal_96$gost89_mac.v:71$829 ($eq).
Removed top 1 bits (of 5) from port B of cell gost89_mac.$verific$equal_97$gost89_mac.v:72$830 ($eq).
Removed top 1 bits (of 5) from port B of cell gost89_mac.$verific$equal_98$gost89_mac.v:73$831 ($eq).
Removed top 1 bits (of 5) from port B of cell gost89_mac.$verific$equal_99$gost89_mac.v:74$832 ($eq).
Removed top 1 bits (of 5) from port B of cell gost89_mac.$verific$equal_100$gost89_mac.v:75$833 ($eq).
Removed top 1 bits (of 5) from port B of cell gost89_mac.$verific$equal_101$gost89_mac.v:76$834 ($eq).
Removed top 1 bits (of 5) from port B of cell gost89_mac.$verific$equal_102$gost89_mac.v:77$835 ($eq).
Removed top 1 bits (of 5) from port B of cell gost89_mac.$verific$equal_103$gost89_mac.v:78$836 ($eq).
Removed top 1 bits (of 5) from port B of cell gost89_mac.$verific$equal_104$gost89_mac.v:79$837 ($eq).

yosys> peepopt

3.48. Executing PEEPOPT pass (run peephole optimizers).

yosys> opt_clean

3.49. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..

yosys> demuxmap

3.50. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> stat

3.51. Printing statistics.

=== gost89_mac ===

   Number of wires:                113
   Number of wire bits:           2839
   Number of public wires:          48
   Number of public wire bits:    2347
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 82
     $add                            2
     $and                            5
     $bmux                           8
     $dff                            5
     $dffe                           2
     $eq                            16
     $logic_not                      1
     $lt                             2
     $mux                           24
     $not                            3
     $pmux                           1
     $reduce_and                     1
     $reduce_or                      9
     $xor                            3


yosys> wreduce t:$mul

3.52. Executing WREDUCE pass (reducing word size of cells).

yosys> rs_dsp_macc

3.53. Executing RS_DSP_MACC pass.

yosys> techmap -map +/mul2dsp.v -D DSP_A_MAXWIDTH=20 -D DSP_B_MAXWIDTH=18 -D DSP_A_MINWIDTH=11 -D DSP_B_MINWIDTH=10 -D DSP_NAME=$__RS_MUL20X18

3.54. Executing TECHMAP pass (map to technology primitives).

3.54.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/mul2dsp.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

3.54.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

yosys> chtype -set $mul t:$__soft_mul

yosys> techmap -map +/mul2dsp.v -D DSP_A_MAXWIDTH=10 -D DSP_B_MAXWIDTH=9 -D DSP_A_MINWIDTH=4 -D DSP_B_MINWIDTH=4 -D DSP_NAME=$__RS_MUL10X9

3.55. Executing TECHMAP pass (map to technology primitives).

3.55.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/mul2dsp.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

3.55.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

yosys> chtype -set $mul t:$__soft_mul

yosys> techmap -map +/rapidsilicon/genesis/dsp_map.v -D USE_DSP_CFG_PARAMS=0

3.56. Executing TECHMAP pass (map to technology primitives).

3.56.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_map.v' to AST representation.
Generating RTLIL representation for module `\$__RS_MUL20X18'.
Generating RTLIL representation for module `\$__RS_MUL10X9'.
Successfully finished Verilog frontend.

3.56.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

yosys> rs_dsp_simd

3.57. Executing RS_DSP_SIMD pass.

yosys> techmap -map +/rapidsilicon/genesis/dsp_final_map.v

3.58. Executing TECHMAP pass (map to technology primitives).

3.58.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_final_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_final_map.v' to AST representation.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_params'.
Successfully finished Verilog frontend.

3.58.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~6 debug messages>

yosys> rs_dsp_io_regs

3.59. Executing RS_DSP_IO_REGS pass.

yosys> alumacc

3.60. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module gost89_mac:
  creating $macc model for $flatten\rnd.$verific$add_3$gost89_round.v:12$849 ($add).
  creating $macc model for $verific$add_46$gost89_mac.v:50$798 ($add).
  creating $alu model for $macc $verific$add_46$gost89_mac.v:50$798.
  creating $alu model for $macc $flatten\rnd.$verific$add_3$gost89_round.v:12$849.
  creating $alu model for $verific$LessThan_45$gost89_mac.v:49$797 ($lt): new $alu
  creating $alu model for $verific$LessThan_49$gost89_mac.v:51$801 ($lt): new $alu
  creating $alu cell for $verific$LessThan_49$gost89_mac.v:51$801: $auto$alumacc.cc:485:replace_alu$1472
  creating $alu cell for $verific$LessThan_45$gost89_mac.v:49$797: $auto$alumacc.cc:485:replace_alu$1477
  creating $alu cell for $flatten\rnd.$verific$add_3$gost89_round.v:12$849: $auto$alumacc.cc:485:replace_alu$1488
  creating $alu cell for $verific$add_46$gost89_mac.v:50$798: $auto$alumacc.cc:485:replace_alu$1491
  created 4 $alu and 0 $macc cells.

yosys> opt_expr

3.61. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.
<suppressed ~1 debug messages>

yosys> opt_merge -nomux

3.62. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.63. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~11 debug messages>

yosys> opt_reduce

3.64. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.65. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_share

3.66. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.67. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.68. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.69. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.
MAX OPT ITERATION = 1

yosys> stat

3.70. Printing statistics.

=== gost89_mac ===

   Number of wires:                126
   Number of wire bits:           2946
   Number of public wires:          48
   Number of public wire bits:    2347
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 87
     $alu                            4
     $and                            5
     $bmux                           8
     $dff                            5
     $dffe                           2
     $eq                            16
     $logic_not                      1
     $mux                           24
     $not                            6
     $or                             1
     $pmux                           1
     $reduce_and                     2
     $reduce_or                      9
     $xor                            3


yosys> memory -nomap

3.71. Executing MEMORY pass.

yosys> opt_mem

3.71.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.71.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.71.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.71.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.71.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.71.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..

yosys> memory_share

3.71.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.71.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.71.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..

yosys> memory_collect

3.71.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.72. Printing statistics.

=== gost89_mac ===

   Number of wires:                126
   Number of wire bits:           2946
   Number of public wires:          48
   Number of public wire bits:    2347
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 87
     $alu                            4
     $and                            5
     $bmux                           8
     $dff                            5
     $dffe                           2
     $eq                            16
     $logic_not                      1
     $mux                           24
     $not                            6
     $or                             1
     $pmux                           1
     $reduce_and                     2
     $reduce_or                      9
     $xor                            3


yosys> muxpack

3.73. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~25 debug messages>

yosys> opt_clean

3.74. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..

yosys> memory_bram -rules +/rapidsilicon/genesis/brams.txt

3.75. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).

yosys> techmap -map +/rapidsilicon/genesis/brams_map.v

3.76. Executing TECHMAP pass (map to technology primitives).

3.76.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/brams_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_TDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM18_TDP'.
/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/brams_map.v:236: Warning: Range [2:0] select out of bounds on signal `\DOP': Setting 1 MSB bits to undef.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_SDP'.
Successfully finished Verilog frontend.

3.76.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~5 debug messages>

yosys> pmuxtree

3.77. Executing PMUXTREE pass.

yosys> muxpack

3.78. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converting gost89_mac.$auto$pmuxtree.cc:65:recursive_mux_generator$1522 ... gost89_mac.$auto$pmuxtree.cc:65:recursive_mux_generator$1524 to a pmux with 2 cases.
Converting gost89_mac.$auto$pmuxtree.cc:65:recursive_mux_generator$1512 ... gost89_mac.$auto$pmuxtree.cc:65:recursive_mux_generator$1514 to a pmux with 2 cases.
Converted 4 (p)mux cells into 2 pmux cells.
<suppressed ~33 debug messages>

yosys> memory_map

3.79. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> stat

3.80. Printing statistics.

=== gost89_mac ===

   Number of wires:                140
   Number of wire bits:           3239
   Number of public wires:          48
   Number of public wire bits:    2347
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 98
     $alu                            4
     $and                            5
     $bmux                           8
     $dff                            5
     $dffe                           2
     $eq                            16
     $logic_not                      1
     $mux                           29
     $not                            7
     $or                             3
     $pmux                           2
     $reduce_and                     2
     $reduce_or                     11
     $xor                            3


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.81. Executing TECHMAP pass (map to technology primitives).

3.81.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.81.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.81.3. Continuing TECHMAP pass.
Using template $paramod$672a140277c71df8314410f22acc08d55222c3c7\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$be80489e44a49c29884f59fd81c31ed03229cfc1\_80_rs_alu for cells of type $alu.
Using template $paramod$b18e16801adf491a64caa0542270798e5d4ac6b6\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $or.
Using template $paramod$8fabc56b80a569262acfc42757a02ca0b8e91278\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $bmux.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000101 for cells of type $lcu.
No more expansions possible.
<suppressed ~658 debug messages>

yosys> stat

3.82. Printing statistics.

=== gost89_mac ===

   Number of wires:                612
   Number of wire bits:           8860
   Number of public wires:          48
   Number of public wire bits:    2347
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1951
     $_AND_                        174
     $_DFFE_PP_                     64
     $_DFF_P_                       71
     $_MUX_                       1107
     $_NOT_                         71
     $_OR_                         189
     $_XOR_                        243
     adder_carry                    32


yosys> opt_expr

3.83. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.
<suppressed ~225 debug messages>

yosys> opt_merge -nomux

3.84. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
<suppressed ~228 debug messages>
Removed a total of 76 cells.

yosys> opt_muxtree

3.85. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.86. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.87. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_share

3.88. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.89. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.90. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..
Removed 50 unused cells and 443 unused wires.
<suppressed ~51 debug messages>

yosys> opt_expr

3.91. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

yosys> opt_muxtree

3.92. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.93. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.94. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_share

3.95. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.96. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.97. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..

yosys> opt_expr

3.98. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.
MAX OPT ITERATION = 2

yosys> opt_expr -full

3.99. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.
<suppressed ~70 debug messages>

yosys> techmap -map +/techmap.v

3.100. Executing TECHMAP pass (map to technology primitives).

3.100.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.100.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> opt_expr

3.101. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

yosys> opt_merge -nomux

3.102. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.103. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.104. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.105. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_dff -nosdff -nodffe -sat

3.106. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.107. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.108. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.
MAX OPT ITERATION = 1

yosys> abc -dff

3.109. Executing ABC pass (technology mapping using ABC).

3.109.1. Summary of detected clock domains:
  528 cells in clk=\clk, en=$auto$opt_dff.cc:194:make_patterns_logic$1465, arst={ }, srst={ }
  35 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$1468, arst={ }, srst={ }
  1077 cells in clk=\clk, en={ }, arst={ }, srst={ }

3.109.2. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:194:make_patterns_logic$1465
Extracted 496 gates and 801 wires to a netlist network with 305 inputs and 64 outputs.

3.109.2.1. Executing ABC.

3.109.3. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1468
Extracted 35 gates and 70 wires to a netlist network with 35 inputs and 34 outputs.

3.109.3.1. Executing ABC.

3.109.4. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 1077 gates and 1692 wires to a netlist network with 613 inputs and 52 outputs.

3.109.4.1. Executing ABC.

yosys> abc -dff

3.110. Executing ABC pass (technology mapping using ABC).

3.110.1. Summary of detected clock domains:
  516 cells in clk=\clk, en=$abc$4035$auto$opt_dff.cc:194:make_patterns_logic$1465, arst={ }, srst={ }
  33 cells in clk=\clk, en=$abc$4541$auto$opt_dff.cc:219:make_patterns_logic$1468, arst={ }, srst={ }
  1505 cells in clk=\clk, en={ }, arst={ }, srst={ }

3.110.2. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4035$auto$opt_dff.cc:194:make_patterns_logic$1465
Extracted 485 gates and 784 wires to a netlist network with 299 inputs and 64 outputs.

3.110.2.1. Executing ABC.

3.110.3. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4541$auto$opt_dff.cc:219:make_patterns_logic$1468
Extracted 33 gates and 67 wires to a netlist network with 34 inputs and 33 outputs.

3.110.3.1. Executing ABC.

3.110.4. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 1504 gates and 2116 wires to a netlist network with 612 inputs and 46 outputs.

3.110.4.1. Executing ABC.

yosys> abc -dff

3.111. Executing ABC pass (technology mapping using ABC).

3.111.1. Summary of detected clock domains:
  33 cells in clk=\clk, en=$abc$6818$abc$4541$auto$opt_dff.cc:219:make_patterns_logic$1468, arst={ }, srst={ }
  631 cells in clk=\clk, en=$abc$6187$abc$4035$auto$opt_dff.cc:194:make_patterns_logic$1465, arst={ }, srst={ }
  1421 cells in clk=\clk, en={ }, arst={ }, srst={ }

3.111.2. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$6818$abc$4541$auto$opt_dff.cc:219:make_patterns_logic$1468
Extracted 33 gates and 67 wires to a netlist network with 34 inputs and 33 outputs.

3.111.2.1. Executing ABC.

3.111.3. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$6187$abc$4035$auto$opt_dff.cc:194:make_patterns_logic$1465
Extracted 600 gates and 899 wires to a netlist network with 299 inputs and 64 outputs.

3.111.3.1. Executing ABC.

3.111.4. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 1420 gates and 2032 wires to a netlist network with 612 inputs and 46 outputs.

3.111.4.1. Executing ABC.

yosys> abc -dff

3.112. Executing ABC pass (technology mapping using ABC).

3.112.1. Summary of detected clock domains:
  668 cells in clk=\clk, en=$abc$8468$abc$6187$abc$4035$auto$opt_dff.cc:194:make_patterns_logic$1465, arst={ }, srst={ }
  33 cells in clk=\clk, en=$abc$8370$abc$6818$abc$4541$auto$opt_dff.cc:219:make_patterns_logic$1468, arst={ }, srst={ }
  1205 cells in clk=\clk, en={ }, arst={ }, srst={ }

3.112.2. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$8468$abc$6187$abc$4035$auto$opt_dff.cc:194:make_patterns_logic$1465
Extracted 637 gates and 936 wires to a netlist network with 299 inputs and 64 outputs.

3.112.2.1. Executing ABC.

3.112.3. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$8370$abc$6818$abc$4541$auto$opt_dff.cc:219:make_patterns_logic$1468
Extracted 33 gates and 67 wires to a netlist network with 34 inputs and 33 outputs.

3.112.3.1. Executing ABC.

3.112.4. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 1204 gates and 1816 wires to a netlist network with 612 inputs and 46 outputs.

3.112.4.1. Executing ABC.

yosys> opt_ffinv

3.113. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt_expr

3.114. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

yosys> opt_merge -nomux

3.115. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.116. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.117. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.118. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_share

3.119. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.120. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $abc$11164$auto$blifparse.cc:362:parse_blif$11235 ($_DFF_P_) from module gost89_mac (D = $abc$11164$li70_li70, Q = $abc$11164$lo70).
Adding EN signal on $abc$11164$auto$blifparse.cc:362:parse_blif$11234 ($_DFF_P_) from module gost89_mac (D = $abc$11164$li69_li69, Q = $abc$11164$lo69).
Adding EN signal on $abc$11164$auto$blifparse.cc:362:parse_blif$11233 ($_DFF_P_) from module gost89_mac (D = $abc$11164$li68_li68, Q = $abc$11164$lo68).
Adding EN signal on $abc$11164$auto$blifparse.cc:362:parse_blif$11232 ($_DFF_P_) from module gost89_mac (D = $abc$11164$li67_li67, Q = $abc$11164$lo67).
Adding EN signal on $abc$11164$auto$blifparse.cc:362:parse_blif$11231 ($_DFF_P_) from module gost89_mac (D = $abc$11164$li66_li66, Q = $abc$11164$lo66).
Adding EN signal on $abc$11164$auto$blifparse.cc:362:parse_blif$11230 ($_DFF_P_) from module gost89_mac (D = $abc$11164$li65_li65, Q = $abc$11164$lo65).
Adding EN signal on $abc$11164$auto$blifparse.cc:362:parse_blif$11229 ($_DFF_P_) from module gost89_mac (D = $abc$11164$li64_li64, Q = $abc$11164$lo64).
Adding EN signal on $abc$11164$auto$blifparse.cc:362:parse_blif$11228 ($_DFF_P_) from module gost89_mac (D = $abc$11164$li63_li63, Q = $abc$11164$lo63).
Adding EN signal on $abc$11164$auto$blifparse.cc:362:parse_blif$11227 ($_DFF_P_) from module gost89_mac (D = $abc$11164$li62_li62, Q = $abc$11164$lo62).
Adding EN signal on $abc$11164$auto$blifparse.cc:362:parse_blif$11226 ($_DFF_P_) from module gost89_mac (D = $abc$11164$li61_li61, Q = $abc$11164$lo61).
Adding EN signal on $abc$11164$auto$blifparse.cc:362:parse_blif$11225 ($_DFF_P_) from module gost89_mac (D = $abc$11164$li60_li60, Q = $abc$11164$lo60).
Adding EN signal on $abc$11164$auto$blifparse.cc:362:parse_blif$11224 ($_DFF_P_) from module gost89_mac (D = $abc$11164$li59_li59, Q = $abc$11164$lo59).
Adding EN signal on $abc$11164$auto$blifparse.cc:362:parse_blif$11223 ($_DFF_P_) from module gost89_mac (D = $abc$11164$li58_li58, Q = $abc$11164$lo58).
Adding EN signal on $abc$11164$auto$blifparse.cc:362:parse_blif$11222 ($_DFF_P_) from module gost89_mac (D = $abc$11164$li57_li57, Q = $abc$11164$lo57).
Adding EN signal on $abc$11164$auto$blifparse.cc:362:parse_blif$11221 ($_DFF_P_) from module gost89_mac (D = $abc$11164$li56_li56, Q = $abc$11164$lo56).
Adding EN signal on $abc$11164$auto$blifparse.cc:362:parse_blif$11220 ($_DFF_P_) from module gost89_mac (D = $abc$11164$li55_li55, Q = $abc$11164$lo55).
Adding EN signal on $abc$11164$auto$blifparse.cc:362:parse_blif$11219 ($_DFF_P_) from module gost89_mac (D = $abc$11164$li54_li54, Q = $abc$11164$lo54).
Adding EN signal on $abc$11164$auto$blifparse.cc:362:parse_blif$11218 ($_DFF_P_) from module gost89_mac (D = $abc$11164$li53_li53, Q = $abc$11164$lo53).
Adding EN signal on $abc$11164$auto$blifparse.cc:362:parse_blif$11217 ($_DFF_P_) from module gost89_mac (D = $abc$11164$li52_li52, Q = $abc$11164$lo52).
Adding EN signal on $abc$11164$auto$blifparse.cc:362:parse_blif$11216 ($_DFF_P_) from module gost89_mac (D = $abc$11164$li51_li51, Q = $abc$11164$lo51).
Adding EN signal on $abc$11164$auto$blifparse.cc:362:parse_blif$11215 ($_DFF_P_) from module gost89_mac (D = $abc$11164$li50_li50, Q = $abc$11164$lo50).
Adding EN signal on $abc$11164$auto$blifparse.cc:362:parse_blif$11214 ($_DFF_P_) from module gost89_mac (D = $abc$11164$li49_li49, Q = $abc$11164$lo49).
Adding EN signal on $abc$11164$auto$blifparse.cc:362:parse_blif$11213 ($_DFF_P_) from module gost89_mac (D = $abc$11164$li48_li48, Q = $abc$11164$lo48).
Adding EN signal on $abc$11164$auto$blifparse.cc:362:parse_blif$11212 ($_DFF_P_) from module gost89_mac (D = $abc$11164$li47_li47, Q = $abc$11164$lo47).
Adding EN signal on $abc$11164$auto$blifparse.cc:362:parse_blif$11211 ($_DFF_P_) from module gost89_mac (D = $abc$11164$li46_li46, Q = $abc$11164$lo46).
Adding EN signal on $abc$11164$auto$blifparse.cc:362:parse_blif$11210 ($_DFF_P_) from module gost89_mac (D = $abc$11164$li45_li45, Q = $abc$11164$lo45).
Adding EN signal on $abc$11164$auto$blifparse.cc:362:parse_blif$11209 ($_DFF_P_) from module gost89_mac (D = $abc$11164$li44_li44, Q = $abc$11164$lo44).
Adding EN signal on $abc$11164$auto$blifparse.cc:362:parse_blif$11208 ($_DFF_P_) from module gost89_mac (D = $abc$11164$li43_li43, Q = $abc$11164$lo43).
Adding EN signal on $abc$11164$auto$blifparse.cc:362:parse_blif$11207 ($_DFF_P_) from module gost89_mac (D = $abc$11164$li42_li42, Q = $abc$11164$lo42).
Adding EN signal on $abc$11164$auto$blifparse.cc:362:parse_blif$11205 ($_DFF_P_) from module gost89_mac (D = $abc$11164$li40_li40, Q = $abc$11164$lo40).
Adding EN signal on $abc$11164$auto$blifparse.cc:362:parse_blif$11204 ($_DFF_P_) from module gost89_mac (D = $abc$11164$li39_li39, Q = $abc$11164$lo39).
Adding EN signal on $abc$11164$auto$blifparse.cc:362:parse_blif$11203 ($_DFF_P_) from module gost89_mac (D = $abc$11164$li38_li38, Q = $abc$11164$lo38).
Adding EN signal on $abc$11164$auto$blifparse.cc:362:parse_blif$11202 ($_DFF_P_) from module gost89_mac (D = $abc$11164$li37_li37, Q = $abc$11164$lo37).
Adding EN signal on $abc$11164$auto$blifparse.cc:362:parse_blif$11200 ($_DFF_P_) from module gost89_mac (D = $abc$11164$li35_li35, Q = $abc$11164$lo35).
Adding EN signal on $abc$11164$auto$blifparse.cc:362:parse_blif$11199 ($_DFF_P_) from module gost89_mac (D = $abc$11164$li34_li34, Q = $abc$11164$lo34).
Adding EN signal on $abc$11164$auto$blifparse.cc:362:parse_blif$11197 ($_DFF_P_) from module gost89_mac (D = $abc$11164$li32_li32, Q = $abc$11164$lo32).
Adding EN signal on $abc$11164$auto$blifparse.cc:362:parse_blif$11195 ($_DFF_P_) from module gost89_mac (D = $abc$11164$li30_li30, Q = $abc$11164$lo30).
Adding EN signal on $abc$11164$auto$blifparse.cc:362:parse_blif$11192 ($_DFF_P_) from module gost89_mac (D = $abc$11164$li27_li27, Q = $abc$11164$lo27).
Adding EN signal on $abc$11164$auto$blifparse.cc:362:parse_blif$11191 ($_DFF_P_) from module gost89_mac (D = $abc$11164$li26_li26, Q = $abc$11164$lo26).
Adding EN signal on $abc$11164$auto$blifparse.cc:362:parse_blif$11188 ($_DFF_P_) from module gost89_mac (D = $abc$11164$li23_li23, Q = $abc$11164$lo23).
Adding EN signal on $abc$11164$auto$blifparse.cc:362:parse_blif$11184 ($_DFF_P_) from module gost89_mac (D = $abc$11164$li19_li19, Q = $abc$11164$lo19).
Adding EN signal on $abc$11164$auto$blifparse.cc:362:parse_blif$11181 ($_DFF_P_) from module gost89_mac (D = $abc$11164$li16_li16, Q = $abc$11164$lo16).
Adding EN signal on $abc$11164$auto$blifparse.cc:362:parse_blif$11180 ($_DFF_P_) from module gost89_mac (D = $abc$11164$li15_li15, Q = $abc$11164$lo15).
Adding EN signal on $abc$11164$auto$blifparse.cc:362:parse_blif$11176 ($_DFF_P_) from module gost89_mac (D = $abc$11164$li11_li11, Q = $abc$11164$lo11).
Adding EN signal on $abc$11164$auto$blifparse.cc:362:parse_blif$11173 ($_DFF_P_) from module gost89_mac (D = $abc$11164$li08_li08, Q = $abc$11164$lo08).
Adding EN signal on $abc$11164$auto$blifparse.cc:362:parse_blif$11172 ($_DFF_P_) from module gost89_mac (D = $abc$11164$li07_li07, Q = $abc$11164$lo07).

yosys> opt_clean

3.121. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..
Removed 0 unused cells and 10584 unused wires.
<suppressed ~12 debug messages>

yosys> opt_expr

3.122. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.
<suppressed ~92 debug messages>

yosys> opt_muxtree

3.123. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.124. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.125. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
<suppressed ~270 debug messages>
Removed a total of 90 cells.

yosys> opt_share

3.126. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.127. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.128. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..
Removed 0 unused cells and 136 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.129. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

yosys> opt_muxtree

3.130. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.131. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.132. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_share

3.133. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.134. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.135. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..

yosys> opt_expr

3.136. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.
MAX OPT ITERATION = 3

yosys> bmuxmap

3.137. Executing BMUXMAP pass.

yosys> demuxmap

3.138. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> abc -script /tmp/yosys_Dou3CO/abc_tmp_1.scr

3.139. Executing ABC pass (technology mapping using ABC).

3.139.1. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Extracted 1815 gates and 2784 wires to a netlist network with 968 inputs and 136 outputs.

3.139.1.1. Executing ABC.
DE:   #PIs = 968  #Luts =   477  Max Lvl =   5  Avg Lvl =   2.74  [   0.35 sec. at Pass 0]
DE:   #PIs = 968  #Luts =   407  Max Lvl =   5  Avg Lvl =   2.56  [   4.55 sec. at Pass 1]
DE:   #PIs = 968  #Luts =   407  Max Lvl =   5  Avg Lvl =   2.56  [   1.40 sec. at Pass 2]
DE:   #PIs = 968  #Luts =   406  Max Lvl =   5  Avg Lvl =   2.55  [   1.79 sec. at Pass 3]
DE:   #PIs = 968  #Luts =   406  Max Lvl =   5  Avg Lvl =   2.55  [   1.59 sec. at Pass 4]
DE:   #PIs = 968  #Luts =   406  Max Lvl =   5  Avg Lvl =   2.55  [   2.65 sec. at Pass 5]
DE:   #PIs = 968  #Luts =   406  Max Lvl =   4  Avg Lvl =   2.57  [   2.18 sec. at Pass 6]
DE:   #PIs = 968  #Luts =   406  Max Lvl =   4  Avg Lvl =   2.57  [   1.61 sec. at Pass 7]
DE:   #PIs = 968  #Luts =   406  Max Lvl =   4  Avg Lvl =   2.57  [   2.18 sec. at Pass 8]
DE:   #PIs = 968  #Luts =   406  Max Lvl =   4  Avg Lvl =   2.57  [   1.90 sec. at Pass 9]
DE:   #PIs = 968  #Luts =   383  Max Lvl =   4  Avg Lvl =   2.48  [   9.36 sec. at Pass 10]
DE:   #PIs = 968  #Luts =   383  Max Lvl =   4  Avg Lvl =   2.48  [   1.83 sec. at Pass 11]
DE:   #PIs = 968  #Luts =   383  Max Lvl =   4  Avg Lvl =   2.48  [   1.91 sec. at Pass 12]
DE:   #PIs = 968  #Luts =   382  Max Lvl =   5  Avg Lvl =   2.57  [   1.05 sec. at Pass 13]
DE:   #PIs = 968  #Luts =   381  Max Lvl =   5  Avg Lvl =   2.46  [   1.21 sec. at Pass 14]
DE:   #PIs = 968  #Luts =   380  Max Lvl =   5  Avg Lvl =   2.50  [   1.24 sec. at Pass 15]
DE:   #PIs = 968  #Luts =   380  Max Lvl =   5  Avg Lvl =   2.50  [   1.52 sec. at Pass 16]
DE:   #PIs = 968  #Luts =   380  Max Lvl =   5  Avg Lvl =   2.50  [   0.88 sec. at Pass 17]
DE:   #PIs = 968  #Luts =   380  Max Lvl =   5  Avg Lvl =   2.50  [   1.22 sec. at Pass 18]
DE:   #PIs = 968  #Luts =   377  Max Lvl =   4  Avg Lvl =   2.42  [   6.89 sec. at Pass 19]
DE:   #PIs = 968  #Luts =   377  Max Lvl =   4  Avg Lvl =   2.42  [   0.96 sec. at Pass 20]
DE:   #PIs = 968  #Luts =   377  Max Lvl =   4  Avg Lvl =   2.42  [   1.42 sec. at Pass 21]
DE:   #PIs = 968  #Luts =   377  Max Lvl =   4  Avg Lvl =   2.42  [   1.07 sec. at Pass 22]
DE:   #PIs = 968  #Luts =   377  Max Lvl =   4  Avg Lvl =   2.42  [   8.79 sec. at Pass 23]
DE:   #PIs = 968  #Luts =   377  Max Lvl =   4  Avg Lvl =   2.42  [   0.82 sec. at Pass 24]

yosys> opt_expr

3.140. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

yosys> opt_merge -nomux

3.141. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.142. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.143. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.144. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_share

3.145. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.146. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.147. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..
Removed 0 unused cells and 2782 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.148. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.
MAX OPT ITERATION = 1

yosys> opt_ffinv

3.149. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> stat

3.150. Printing statistics.

=== gost89_mac ===

   Number of wires:                427
   Number of wire bits:           2730
   Number of public wires:          37
   Number of public wire bits:    2277
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                544
     $_DFFE_PP_                    110
     $_DFF_P_                       25
     $lut                          377
     adder_carry                    32


yosys> shregmap -minlen 8 -maxlen 20

3.151. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.152. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.153. Printing statistics.

=== gost89_mac ===

   Number of wires:                427
   Number of wire bits:           2730
   Number of public wires:          37
   Number of public wire bits:    2277
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                544
     $_DFFE_PP0P_                  110
     $_DFF_P_                       25
     $lut                          377
     adder_carry                    32


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.154. Executing TECHMAP pass (map to technology primitives).

3.154.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.154.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.154.3. Continuing TECHMAP pass.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using extmapper simplemap for cells of type $lut.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~758 debug messages>

yosys> opt_expr -mux_undef

3.155. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.
<suppressed ~17013 debug messages>

yosys> simplemap

3.156. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.157. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

yosys> opt_merge

3.158. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
<suppressed ~4074 debug messages>
Removed a total of 1358 cells.

yosys> opt_dff -nodffe -nosdff

3.159. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.160. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..
Removed 0 unused cells and 1882 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.161. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.
<suppressed ~481 debug messages>

yosys> opt_merge -nomux

3.162. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

yosys> opt_muxtree

3.163. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.164. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.165. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_share

3.166. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.167. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.168. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..
Removed 0 unused cells and 20 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.169. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.
MAX OPT ITERATION = 1

yosys> abc -script /tmp/yosys_Dou3CO/abc_tmp_2.scr

3.170. Executing ABC pass (technology mapping using ABC).

3.170.1. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Extracted 1757 gates and 2727 wires to a netlist network with 968 inputs and 136 outputs.

3.170.1.1. Executing ABC.
DE:   #PIs = 968  #Luts =   377  Max Lvl =   4  Avg Lvl =   2.43  [   0.16 sec. at Pass 0]
DE:   #PIs = 968  #Luts =   377  Max Lvl =   4  Avg Lvl =   2.43  [   1.99 sec. at Pass 1]
DE:   #PIs = 968  #Luts =   377  Max Lvl =   4  Avg Lvl =   2.43  [   0.65 sec. at Pass 2]
DE:   #PIs = 968  #Luts =   377  Max Lvl =   4  Avg Lvl =   2.43  [   1.51 sec. at Pass 3]
DE:   #PIs = 968  #Luts =   377  Max Lvl =   4  Avg Lvl =   2.43  [   1.33 sec. at Pass 4]
DE:   #PIs = 968  #Luts =   377  Max Lvl =   4  Avg Lvl =   2.43  [   1.81 sec. at Pass 5]
DE:   #PIs = 968  #Luts =   377  Max Lvl =   4  Avg Lvl =   2.43  [   8.14 sec. at Pass 6]
DE:   #PIs = 968  #Luts =   377  Max Lvl =   4  Avg Lvl =   2.43  [   0.72 sec. at Pass 7]

yosys> opt_expr

3.171. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

yosys> opt_merge -nomux

3.172. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.173. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.174. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.175. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_share

3.176. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.177. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.178. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..
Removed 0 unused cells and 2251 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.179. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.
MAX OPT ITERATION = 1

yosys> hierarchy -check

3.180. Executing HIERARCHY pass (managing design hierarchy).

3.180.1. Analyzing design hierarchy..
Top module:  \gost89_mac

3.180.2. Analyzing design hierarchy..
Top module:  \gost89_mac
Removed 0 unused modules.

yosys> stat

3.181. Printing statistics.

=== gost89_mac ===

   Number of wires:                427
   Number of wire bits:           2730
   Number of public wires:          37
   Number of public wire bits:    2277
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                544
     $lut                          377
     adder_carry                    32
     dffsre                        135


yosys> opt_clean -purge

3.182. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..
Removed 0 unused cells and 19 unused wires.
<suppressed ~19 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.183. Executing Verilog backend.
Dumping module `\gost89_mac'.

Warnings: 2 unique messages, 2 total
End of script. Logfile hash: ff81529955, CPU: user 3.68s system 0.12s, MEM: 69.17 MB peak
Yosys 0.18+10 (git sha1 c98b0e94e, gcc 9.4.0 -fPIC -Os)
Time spent: 98% 6x abc (269 sec), 0% 30x opt_expr (1 sec), ...
real 94.64
user 255.00
sys 17.53
