
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.64
 Yosys 0.18+10 (git sha1 c98b0e94e, gcc 9.4.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 00:39:28 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k ql_clkgate_x4.v spi_master_top.v registers.v baud_generator.v serializer_deserializer.v ql_mux2_x2.v

yosys> verific -vlog2k ql_clkgate_x4.v spi_master_top.v registers.v baud_generator.v serializer_deserializer.v ql_mux2_x2.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 00:39:28 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'ql_clkgate_x4.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'spi_master_top.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'registers.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'baud_generator.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'serializer_deserializer.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'ql_mux2_x2.v'

yosys> synth_rs -top spi_master_top -tech genesis -goal area -de -verilog synthesized.v

3. Executing synth_rs pass: v0.4.65

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v +/rapidsilicon/genesis/dsp_sim.v

3.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Successfully finished Verilog frontend.

3.3. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_sim.v' to AST representation.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\RS_DSP2_MULT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_ports'.
Generating RTLIL representation for module `\RS_DSP3'.
Generating RTLIL representation for module `\RS_DSP3_MULT'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_params'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top spi_master_top

3.4. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] spi_master_top.v:26: compiling module 'spi_master_top'
VERIFIC-WARNING [VERI-2371] spi_master_top.v:109: delay control is not supported for synthesis
VERIFIC-INFO [VERI-1018] registers.v:15: compiling module 'registers'
VERIFIC-WARNING [VERI-1209] registers.v:104: expression size 8 truncated to fit in target size 3
VERIFIC-WARNING [VERI-2371] registers.v:205: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] registers.v:206: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] registers.v:207: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] registers.v:208: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] registers.v:209: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] registers.v:210: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] registers.v:211: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] registers.v:221: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] registers.v:224: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] registers.v:229: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] registers.v:234: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] registers.v:241: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] registers.v:244: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] registers.v:249: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] registers.v:254: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] registers.v:261: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] registers.v:264: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] registers.v:269: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] registers.v:274: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] registers.v:282: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] registers.v:285: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] registers.v:290: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] registers.v:295: delay control is not supported for synthesis
VERIFIC-INFO [VERI-1018] serializer_deserializer.v:16: compiling module 'serializer_deserializer'
VERIFIC-INFO [VERI-1018] ql_mux2_x2.v:1: compiling module 'ql_mux2_x2'
VERIFIC-INFO [VERI-1018] ql_clkgate_x4.v:1: compiling module 'ql_clkgate_x4'
VERIFIC-INFO [VERI-1018] baud_generator.v:14: compiling module 'baud_generator'
VERIFIC-WARNING [VERI-1209] baud_generator.v:45: expression size 18 truncated to fit in target size 17
VERIFIC-WARNING [VERI-1209] serializer_deserializer.v:130: expression size 4 truncated to fit in target size 3
Importing module spi_master_top.
Importing module registers.
Importing module serializer_deserializer.
Importing module baud_generator.
Importing module ql_clkgate_x4.
Importing module ql_mux2_x2.

3.4.1. Analyzing design hierarchy..
Top module:  \spi_master_top
Used module:     \serializer_deserializer
Used module:         \baud_generator
Used module:         \ql_clkgate_x4
Used module:         \ql_mux2_x2
Used module:     \registers

3.4.2. Analyzing design hierarchy..
Top module:  \spi_master_top
Used module:     \serializer_deserializer
Used module:         \baud_generator
Used module:         \ql_clkgate_x4
Used module:         \ql_mux2_x2
Used module:     \registers
Removed 0 unused modules.

yosys> proc

3.5. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.5.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.5.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.5.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.5.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.5.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.5.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.5.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.5.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.5.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.5.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.5.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.5.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module ql_mux2_x2.
Optimizing module ql_clkgate_x4.
Optimizing module baud_generator.
<suppressed ~2 debug messages>
Optimizing module serializer_deserializer.
<suppressed ~10 debug messages>
Optimizing module registers.
<suppressed ~4 debug messages>
Optimizing module spi_master_top.

yosys> demuxmap

3.6. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> flatten

3.7. Executing FLATTEN pass (flatten design).
Deleting now unused module baud_generator.
Deleting now unused module ql_clkgate_x4.
Deleting now unused module ql_mux2_x2.
Deleting now unused module registers.
Deleting now unused module serializer_deserializer.
<suppressed ~5 debug messages>

yosys> demuxmap

3.8. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> tribuf -logic -formal

3.9. Executing TRIBUF pass.

yosys> deminout

3.10. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_master_top.
<suppressed ~1 debug messages>

yosys> opt_clean

3.12. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_master_top..
Removed 0 unused cells and 290 unused wires.
<suppressed ~86 debug messages>

yosys> check

3.13. Executing CHECK pass (checking for obvious problems).
Checking module spi_master_top...
Found and reported 0 problems.

yosys> opt_expr

3.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_master_top.

yosys> opt_merge -nomux

3.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_master_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.16. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_master_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~35 debug messages>

yosys> opt_reduce

3.17. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_master_top.
Performed a total of 0 changes.

yosys> opt_merge

3.18. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_master_top'.
Removed a total of 0 cells.

yosys> opt_share

3.19. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.20. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $verific$wb_ack_i_reg$spi_master_top.v:109$19 ($aldff) from module spi_master_top.
Changing const-value async load to async reset on $flatten\spi_register.$verific$tx_reg_reg$registers.v:214$362 ($aldff) from module spi_master_top.
Changing const-value async load to async reset on $flatten\spi_register.$verific$ss_reg_reg$registers.v:214$363 ($aldff) from module spi_master_top.
Changing const-value async load to async reset on $flatten\spi_register.$verific$spi_ctrl_reg_reg$registers.v:214$364 ($aldff) from module spi_master_top.
Changing const-value async load to async reset on $flatten\spi_register.$verific$spi_clk_cnt_reg_reg$registers.v:214$365 ($aldff) from module spi_master_top.
Changing const-value async load to async reset on $flatten\spi_register.$verific$irq_wr2_reg$registers.v:132$309 ($aldff) from module spi_master_top.
Changing const-value async load to async reset on $flatten\spi_register.$verific$irq_wr1_reg$registers.v:132$308 ($aldff) from module spi_master_top.
Changing const-value async load to async reset on $flatten\spi_register.$verific$irq_rd2_reg$registers.v:132$307 ($aldff) from module spi_master_top.
Changing const-value async load to async reset on $flatten\spi_register.$verific$irq_rd1_reg$registers.v:132$306 ($aldff) from module spi_master_top.
Changing const-value async load to async reset on $flatten\spi_register.$verific$cmd_reg7_reg$registers.v:296$396 ($aldff) from module spi_master_top.
Changing const-value async load to async reset on $flatten\spi_register.$verific$cmd_reg32_reg$registers.v:275$387 ($aldff) from module spi_master_top.
Changing const-value async load to async reset on $flatten\spi_register.$verific$cmd_reg1_reg$registers.v:255$380 ($aldff) from module spi_master_top.
Changing const-value async load to async reset on $flatten\spi_register.$verific$cmd_reg0_reg$registers.v:235$374 ($aldff) from module spi_master_top.
Changing const-value async load to async reset on $flatten\spi_register.$verific$TIP_reg$registers.v:174$328 ($aldff) from module spi_master_top.
Changing const-value async load to async reset on $flatten\spi_register.$verific$SPICR1_reg$registers.v:214$361 ($aldff) from module spi_master_top.
Changing const-value async load to async reset on $flatten\spi_register.$verific$SPIBR_reg$registers.v:214$360 ($aldff) from module spi_master_top.
Changing const-value async load to async reset on $flatten\spi_register.$verific$INTR_write_reg$registers.v:163$324 ($aldff) from module spi_master_top.
Changing const-value async load to async reset on $flatten\spi_register.$verific$INTR_read_reg$registers.v:149$320 ($aldff) from module spi_master_top.
Removing never-active async load on $flatten\spi_register.$verific$Data_out_r_reg$registers.v:316$399 ($aldff) from module spi_master_top.
Changing const-value async load to async reset on $flatten\ser_des.\BG.$verific$count16_reg$baud_generator.v:46$691 ($aldff) from module spi_master_top.
Changing const-value async load to async reset on $flatten\ser_des.\BG.$verific$Baud_Rate_r_reg$baud_generator.v:62$698 ($aldff) from module spi_master_top.
Changing const-value async load to async reset on $flatten\ser_des.$verific$trnsfer_done_reg$serializer_deserializer.v:196$606 ($aldff) from module spi_master_top.
Changing const-value async load to async reset on $flatten\ser_des.$verific$bit_count_reg$serializer_deserializer.v:132$562 ($aldff) from module spi_master_top.
Changing const-value async load to async reset on $flatten\ser_des.$verific$Shift_Reg_reg$serializer_deserializer.v:302$643 ($aldff) from module spi_master_top.
Changing const-value async load to async reset on $flatten\ser_des.$verific$SS_bar_reg$serializer_deserializer.v:153$572 ($aldff) from module spi_master_top.
Changing const-value async load to async reset on $flatten\ser_des.$verific$SPI_Read_Data_reg$serializer_deserializer.v:338$662 ($aldff) from module spi_master_top.
Changing const-value async load to async reset on $flatten\ser_des.$verific$IRQ_read_reg$serializer_deserializer.v:179$602 ($aldff) from module spi_master_top.
Changing const-value async load to async reset on $flatten\ser_des.$verific$FSM_spi_state_reg$serializer_deserializer.v:283$636 ($aldff) from module spi_master_top.

yosys> opt_clean

3.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_master_top..

yosys> opt_expr

3.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_master_top.
MAX OPT ITERATION = 1

yosys> fsm -encoding binary

3.23. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.23.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.23.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.23.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.23.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_master_top..

yosys> fsm_opt

3.23.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.23.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.23.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.23.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt_expr

3.24. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_master_top.

yosys> opt_merge -nomux

3.25. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_master_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.26. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_master_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~35 debug messages>

yosys> opt_reduce

3.27. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_master_top.
Performed a total of 0 changes.

yosys> opt_merge

3.28. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_master_top'.
Removed a total of 0 cells.

yosys> opt_share

3.29. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.30. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\spi_register.$verific$tx_reg_reg$registers.v:214$362 ($adff) from module spi_master_top (D = $flatten\spi_register.$verific$n439$256, Q = \spi_register.tx_reg).
Adding EN signal on $flatten\spi_register.$verific$ss_reg_reg$registers.v:214$363 ($adff) from module spi_master_top (D = $flatten\spi_register.$verific$n448$257, Q = \spi_register.ss_reg).
Adding EN signal on $flatten\spi_register.$verific$spi_ctrl_reg_reg$registers.v:214$364 ($adff) from module spi_master_top (D = $flatten\spi_register.$verific$n457$258, Q = \spi_register.spi_ctrl_reg).
Adding EN signal on $flatten\spi_register.$verific$spi_clk_cnt_reg_reg$registers.v:214$365 ($adff) from module spi_master_top (D = $flatten\spi_register.$verific$n461$259, Q = \spi_register.spi_clk_cnt_reg).
Adding EN signal on $flatten\spi_register.$verific$cmd_reg7_reg$registers.v:296$396 ($adff) from module spi_master_top (D = $flatten\spi_register.$verific$n596$232, Q = \spi_register.cmd_reg7).
Adding EN signal on $flatten\spi_register.$verific$cmd_reg32_reg$registers.v:275$387 ($adff) from module spi_master_top (D = $flatten\spi_register.$verific$n577$265, Q = \spi_register.cmd_reg32).
Adding EN signal on $flatten\spi_register.$verific$cmd_reg1_reg$registers.v:255$380 ($adff) from module spi_master_top (D = $flatten\spi_register.$verific$n550$224, Q = \spi_register.cmd_reg1).
Adding EN signal on $flatten\spi_register.$verific$cmd_reg0_reg$registers.v:235$374 ($adff) from module spi_master_top (D = $flatten\spi_register.$verific$n538$219, Q = \spi_register.cmd_reg0).
Adding EN signal on $flatten\spi_register.$verific$SPICR1_reg$registers.v:214$361 ($adff) from module spi_master_top (D = $flatten\spi_register.$verific$n430$255, Q = \spi_register.SPICR1).
Adding EN signal on $flatten\spi_register.$verific$SPIBR_reg$registers.v:214$360 ($adff) from module spi_master_top (D = $flatten\spi_register.$verific$n413$254, Q = \spi_register.SPIBR).
Adding EN signal on $flatten\spi_register.$verific$INTR_write_reg$registers.v:163$324 ($adff) from module spi_master_top (D = $flatten\spi_register.$verific$n112$205, Q = \spi_register.INTR_write).
Adding EN signal on $flatten\spi_register.$verific$INTR_read_reg$registers.v:149$320 ($adff) from module spi_master_top (D = $flatten\spi_register.$verific$n103$202, Q = \spi_register.INTR_read).
Adding EN signal on $flatten\ser_des.\BG.$verific$Baud_Rate_r_reg$baud_generator.v:62$698 ($adff) from module spi_master_top (D = $flatten\ser_des.\BG.$verific$n162$674, Q = \ser_des.BG.Baud_Rate_r).
Adding EN signal on $flatten\ser_des.$verific$bit_count_reg$serializer_deserializer.v:132$562 ($adff) from module spi_master_top (D = $flatten\ser_des.$verific$n59$469, Q = \ser_des.bit_count).
Adding EN signal on $flatten\ser_des.$verific$SS_bar_reg$serializer_deserializer.v:153$572 ($adff) from module spi_master_top (D = $flatten\ser_des.$verific$n90$419, Q = \ser_des.SS_bar).
Adding EN signal on $flatten\ser_des.$verific$SPI_Read_Data_reg$serializer_deserializer.v:338$662 ($adff) from module spi_master_top (D = $flatten\ser_des.$verific$n473$512, Q = \ser_des.SPI_Read_Data).
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$748 ($adffe) from module spi_master_top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$717 ($adffe) from module spi_master_top.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$717 ($adffe) from module spi_master_top.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$717 ($adffe) from module spi_master_top.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$717 ($adffe) from module spi_master_top.

yosys> opt_clean

3.31. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_master_top..

yosys> opt_expr

3.32. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_master_top.
<suppressed ~16 debug messages>

yosys> opt_muxtree

3.33. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_master_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~35 debug messages>

yosys> opt_reduce

3.34. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_master_top.
Performed a total of 0 changes.

yosys> opt_merge

3.35. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_master_top'.
<suppressed ~33 debug messages>
Removed a total of 11 cells.

yosys> opt_share

3.36. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.37. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.38. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_master_top..
Removed 0 unused cells and 11 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.39. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_master_top.

yosys> opt_muxtree

3.40. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_master_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~36 debug messages>

yosys> opt_reduce

3.41. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_master_top.
Performed a total of 0 changes.

yosys> opt_merge

3.42. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_master_top'.
Removed a total of 0 cells.

yosys> opt_share

3.43. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.44. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.45. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_master_top..

yosys> opt_expr

3.46. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_master_top.
MAX OPT ITERATION = 3

yosys> wreduce -keepdc

3.47. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 17) from port B of cell spi_master_top.$flatten\ser_des.\BG.$verific$equal_20$baud_generator.v:58$693 ($eq).
Removed top 16 bits (of 17) from port B of cell spi_master_top.$flatten\ser_des.\BG.$verific$add_12$baud_generator.v:45$689 ($add).
Removed top 2 bits (of 3) from port B of cell spi_master_top.$flatten\ser_des.$verific$add_19$serializer_deserializer.v:130$556 ($add).
Removed top 1 bits (of 3) from port B of cell spi_master_top.$flatten\ser_des.$verific$equal_14$serializer_deserializer.v:129$551 ($eq).
Removed top 1 bits (of 3) from port B of cell spi_master_top.$flatten\ser_des.$verific$equal_5$serializer_deserializer.v:95$517 ($eq).
Removed top 2 bits (of 3) from port B of cell spi_master_top.$flatten\ser_des.$verific$equal_90$serializer_deserializer.v:201$609 ($eq).
Removed top 1 bits (of 3) from mux cell spi_master_top.$flatten\ser_des.$verific$mux_113$serializer_deserializer.v:219$621 ($mux).
Removed top 1 bits (of 6) from mux cell spi_master_top.$flatten\ser_des.$verific$mux_220$serializer_deserializer.v:261$632 ($mux).
Removed top 1 bits (of 3) from wire spi_master_top.$flatten\ser_des.$verific$n176$473.
Removed top 1 bits (of 3) from wire spi_master_top.$flatten\ser_des.$verific$n251$491.

yosys> peepopt

3.48. Executing PEEPOPT pass (run peephole optimizers).

yosys> opt_clean

3.49. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_master_top..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

yosys> demuxmap

3.50. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> stat

3.51. Printing statistics.

=== spi_master_top ===

   Number of wires:                313
   Number of wire bits:            858
   Number of public wires:         170
   Number of public wire bits:     463
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                191
     $add                            2
     $adff                          11
     $adffe                         16
     $and                           25
     $bmux                           8
     $dff                            1
     $eq                            12
     $logic_not                      2
     $mux                           72
     $ne                             1
     $not                           15
     $or                            12
     $reduce_and                     3
     $reduce_bool                   10
     $xor                            1


yosys> wreduce t:$mul

3.52. Executing WREDUCE pass (reducing word size of cells).

yosys> rs_dsp_macc

3.53. Executing RS_DSP_MACC pass.

yosys> techmap -map +/mul2dsp.v -D DSP_A_MAXWIDTH=20 -D DSP_B_MAXWIDTH=18 -D DSP_A_MINWIDTH=11 -D DSP_B_MINWIDTH=10 -D DSP_NAME=$__RS_MUL20X18

3.54. Executing TECHMAP pass (map to technology primitives).

3.54.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/mul2dsp.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

3.54.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

yosys> chtype -set $mul t:$__soft_mul

yosys> techmap -map +/mul2dsp.v -D DSP_A_MAXWIDTH=10 -D DSP_B_MAXWIDTH=9 -D DSP_A_MINWIDTH=4 -D DSP_B_MINWIDTH=4 -D DSP_NAME=$__RS_MUL10X9

3.55. Executing TECHMAP pass (map to technology primitives).

3.55.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/mul2dsp.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

3.55.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

yosys> chtype -set $mul t:$__soft_mul

yosys> techmap -map +/rapidsilicon/genesis/dsp_map.v -D USE_DSP_CFG_PARAMS=0

3.56. Executing TECHMAP pass (map to technology primitives).

3.56.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_map.v' to AST representation.
Generating RTLIL representation for module `\$__RS_MUL20X18'.
Generating RTLIL representation for module `\$__RS_MUL10X9'.
Successfully finished Verilog frontend.

3.56.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

yosys> rs_dsp_simd

3.57. Executing RS_DSP_SIMD pass.

yosys> techmap -map +/rapidsilicon/genesis/dsp_final_map.v

3.58. Executing TECHMAP pass (map to technology primitives).

3.58.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_final_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_final_map.v' to AST representation.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_params'.
Successfully finished Verilog frontend.

3.58.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~6 debug messages>

yosys> rs_dsp_io_regs

3.59. Executing RS_DSP_IO_REGS pass.

yosys> alumacc

3.60. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module spi_master_top:
  creating $macc model for $flatten\ser_des.$verific$add_19$serializer_deserializer.v:130$556 ($add).
  creating $macc model for $flatten\ser_des.\BG.$verific$add_12$baud_generator.v:45$689 ($add).
  creating $alu model for $macc $flatten\ser_des.\BG.$verific$add_12$baud_generator.v:45$689.
  creating $alu model for $macc $flatten\ser_des.$verific$add_19$serializer_deserializer.v:130$556.
  creating $alu cell for $flatten\ser_des.$verific$add_19$serializer_deserializer.v:130$556: $auto$alumacc.cc:485:replace_alu$776
  creating $alu cell for $flatten\ser_des.\BG.$verific$add_12$baud_generator.v:45$689: $auto$alumacc.cc:485:replace_alu$779
  created 2 $alu and 0 $macc cells.

yosys> opt_expr

3.61. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_master_top.

yosys> opt_merge -nomux

3.62. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_master_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.63. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_master_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~36 debug messages>

yosys> opt_reduce

3.64. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_master_top.
Performed a total of 0 changes.

yosys> opt_merge

3.65. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_master_top'.
Removed a total of 0 cells.

yosys> opt_share

3.66. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.67. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.68. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_master_top..

yosys> opt_expr

3.69. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_master_top.
MAX OPT ITERATION = 1

yosys> stat

3.70. Printing statistics.

=== spi_master_top ===

   Number of wires:                317
   Number of wire bits:            898
   Number of public wires:         170
   Number of public wire bits:     463
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                191
     $adff                          11
     $adffe                         16
     $alu                            2
     $and                           25
     $bmux                           8
     $dff                            1
     $eq                            12
     $logic_not                      2
     $mux                           72
     $ne                             1
     $not                           15
     $or                            12
     $reduce_and                     3
     $reduce_bool                   10
     $xor                            1


yosys> memory -nomap

3.71. Executing MEMORY pass.

yosys> opt_mem

3.71.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.71.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.71.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.71.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.71.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.71.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_master_top..

yosys> memory_share

3.71.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.71.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.71.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_master_top..

yosys> memory_collect

3.71.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.72. Printing statistics.

=== spi_master_top ===

   Number of wires:                317
   Number of wire bits:            898
   Number of public wires:         170
   Number of public wire bits:     463
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                191
     $adff                          11
     $adffe                         16
     $alu                            2
     $and                           25
     $bmux                           8
     $dff                            1
     $eq                            12
     $logic_not                      2
     $mux                           72
     $ne                             1
     $not                           15
     $or                            12
     $reduce_and                     3
     $reduce_bool                   10
     $xor                            1


yosys> muxpack

3.73. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~63 debug messages>

yosys> opt_clean

3.74. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_master_top..

yosys> memory_bram -rules +/rapidsilicon/genesis/brams.txt

3.75. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).

yosys> techmap -map +/rapidsilicon/genesis/brams_map.v

3.76. Executing TECHMAP pass (map to technology primitives).

3.76.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/brams_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_TDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM18_TDP'.
/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/brams_map.v:236: Warning: Range [2:0] select out of bounds on signal `\DOP': Setting 1 MSB bits to undef.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_SDP'.
Successfully finished Verilog frontend.

3.76.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~5 debug messages>

yosys> pmuxtree

3.77. Executing PMUXTREE pass.

yosys> muxpack

3.78. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~63 debug messages>

yosys> memory_map

3.79. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> stat

3.80. Printing statistics.

=== spi_master_top ===

   Number of wires:                317
   Number of wire bits:            898
   Number of public wires:         170
   Number of public wire bits:     463
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                191
     $adff                          11
     $adffe                         16
     $alu                            2
     $and                           25
     $bmux                           8
     $dff                            1
     $eq                            12
     $logic_not                      2
     $mux                           72
     $ne                             1
     $not                           15
     $or                            12
     $reduce_and                     3
     $reduce_bool                   10
     $xor                            1


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.81. Executing TECHMAP pass (map to technology primitives).

3.81.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.81.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.81.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $bmux.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $reduce_and.
Using template $paramod$3ef7d3dd227da7627a99c5e5a6a4deb817573e39\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$18205a5da979f93ffab44671dcc4a48cf14e25e2\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010001 for cells of type $lcu.
No more expansions possible.
<suppressed ~802 debug messages>

yosys> stat

3.82. Printing statistics.

=== spi_master_top ===

   Number of wires:                527
   Number of wire bits:           4101
   Number of public wires:         170
   Number of public wire bits:     463
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1197
     $_AND_                         90
     $_DFFE_PP0P_                   62
     $_DFFE_PP1P_                    4
     $_DFF_PP0_                     36
     $_DFF_P_                        8
     $_MUX_                        707
     $_NOT_                         49
     $_OR_                         131
     $_XOR_                        110


yosys> opt_expr

3.83. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_master_top.
<suppressed ~416 debug messages>

yosys> opt_merge -nomux

3.84. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_master_top'.
<suppressed ~102 debug messages>
Removed a total of 34 cells.

yosys> opt_muxtree

3.85. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_master_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.86. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_master_top.
Performed a total of 0 changes.

yosys> opt_merge

3.87. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_master_top'.
Removed a total of 0 cells.

yosys> opt_share

3.88. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.89. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.90. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_master_top..
Removed 24 unused cells and 164 unused wires.
<suppressed ~25 debug messages>

yosys> opt_expr

3.91. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_master_top.

yosys> opt_muxtree

3.92. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_master_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.93. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_master_top.
Performed a total of 0 changes.

yosys> opt_merge

3.94. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_master_top'.
Removed a total of 0 cells.

yosys> opt_share

3.95. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.96. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.97. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_master_top..

yosys> opt_expr

3.98. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_master_top.
MAX OPT ITERATION = 2

yosys> opt_expr -full

3.99. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_master_top.
<suppressed ~104 debug messages>

yosys> techmap -map +/techmap.v

3.100. Executing TECHMAP pass (map to technology primitives).

3.100.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.100.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> opt_expr

3.101. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_master_top.

yosys> opt_merge -nomux

3.102. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_master_top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_muxtree

3.103. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_master_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.104. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_master_top.
Performed a total of 0 changes.

yosys> opt_merge

3.105. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_master_top'.
Removed a total of 0 cells.

yosys> opt_dff -nosdff -nodffe -sat

3.106. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.107. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_master_top..
Removed 0 unused cells and 23 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.108. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_master_top.
MAX OPT ITERATION = 1

yosys> abc -dff

3.109. Executing ABC pass (technology mapping using ABC).

3.109.1. Summary of detected clock domains:
  7 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$739, arst=\arst_i, srst={ }
  17 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$732, arst=\arst_i, srst={ }
  6 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$755, arst=\arst_i, srst={ }
  5 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$758, arst=\arst_i, srst={ }
  27 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$761, arst=\arst_i, srst={ }
  32 cells in clk=\wb_clk_i, en={ }, arst={ }, srst={ }
  22 cells in clk=\ser_des.Baud_Rate, en=$auto$opt_dff.cc:194:make_patterns_logic$767, arst=\arst_i, srst={ }
  34 cells in clk=\ser_des.Baud_Rate, en=$auto$opt_dff.cc:194:make_patterns_logic$770, arst=\arst_i, srst={ }
  76 cells in clk=\ser_des.Baud_Rate, en={ }, arst=\arst_i, srst={ }
  23 cells in clk=\ser_des.Baud_Rate, en=$auto$opt_dff.cc:194:make_patterns_logic$764, arst=\arst_i, srst={ }
  115 cells in clk=\wb_clk_i, en={ }, arst=\arst_i, srst={ }
  326 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$709, arst=\arst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$725, arst=\arst_i, srst={ }

3.109.2. Extracting gate netlist of module `\spi_master_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$739, asynchronously reset by \arst_i
Extracted 7 gates and 15 wires to a netlist network with 7 inputs and 3 outputs.

3.109.2.1. Executing ABC.

3.109.3. Extracting gate netlist of module `\spi_master_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$732, asynchronously reset by \arst_i
Extracted 17 gates and 28 wires to a netlist network with 10 inputs and 5 outputs.

3.109.3.1. Executing ABC.

3.109.4. Extracting gate netlist of module `\spi_master_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$755, asynchronously reset by \arst_i
Extracted 6 gates and 13 wires to a netlist network with 6 inputs and 4 outputs.

3.109.4.1. Executing ABC.

3.109.5. Extracting gate netlist of module `\spi_master_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$758, asynchronously reset by \arst_i
Extracted 5 gates and 11 wires to a netlist network with 5 inputs and 4 outputs.

3.109.5.1. Executing ABC.

3.109.6. Extracting gate netlist of module `\spi_master_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$761, asynchronously reset by \arst_i
Extracted 27 gates and 53 wires to a netlist network with 26 inputs and 3 outputs.

3.109.6.1. Executing ABC.

3.109.7. Extracting gate netlist of module `\spi_master_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i
Extracted 32 gates and 63 wires to a netlist network with 30 inputs and 8 outputs.

3.109.7.1. Executing ABC.

3.109.8. Extracting gate netlist of module `\spi_master_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \ser_des.Baud_Rate, enabled by $auto$opt_dff.cc:194:make_patterns_logic$767, asynchronously reset by \arst_i
Extracted 22 gates and 35 wires to a netlist network with 12 inputs and 9 outputs.

3.109.8.1. Executing ABC.

3.109.9. Extracting gate netlist of module `\spi_master_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \ser_des.Baud_Rate, enabled by $auto$opt_dff.cc:194:make_patterns_logic$770, asynchronously reset by \arst_i
Extracted 34 gates and 48 wires to a netlist network with 13 inputs and 9 outputs.

3.109.9.1. Executing ABC.

3.109.10. Extracting gate netlist of module `\spi_master_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \ser_des.Baud_Rate, asynchronously reset by \arst_i
Extracted 76 gates and 105 wires to a netlist network with 28 inputs and 25 outputs.

3.109.10.1. Executing ABC.

3.109.11. Extracting gate netlist of module `\spi_master_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$2614$ser_des.Baud_Rate, enabled by $auto$opt_dff.cc:194:make_patterns_logic$764, asynchronously reset by \arst_i
Extracted 23 gates and 33 wires to a netlist network with 9 inputs and 9 outputs.

3.109.11.1. Executing ABC.

3.109.12. Extracting gate netlist of module `\spi_master_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, asynchronously reset by \arst_i
Extracted 115 gates and 144 wires to a netlist network with 27 inputs and 25 outputs.

3.109.12.1. Executing ABC.

3.109.13. Extracting gate netlist of module `\spi_master_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$709, asynchronously reset by \arst_i
Extracted 326 gates and 382 wires to a netlist network with 55 inputs and 97 outputs.

3.109.13.1. Executing ABC.

3.109.14. Extracting gate netlist of module `\spi_master_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$725, asynchronously reset by \arst_i
Extracted 11 gates and 18 wires to a netlist network with 6 inputs and 3 outputs.

3.109.14.1. Executing ABC.

yosys> abc -dff

3.110. Executing ABC pass (technology mapping using ABC).

3.110.1. Summary of detected clock domains:
  40 cells in clk=\wb_clk_i, en=$abc$2486$auto$opt_dff.cc:194:make_patterns_logic$761, arst=\arst_i, srst={ }
  6 cells in clk=\wb_clk_i, en=$abc$2472$auto$opt_dff.cc:194:make_patterns_logic$755, arst=\arst_i, srst={ }
  12 cells in clk=\ser_des.Baud_Rate, en=$abc$2559$auto$opt_dff.cc:194:make_patterns_logic$767, arst=\arst_i, srst={ }
  7 cells in clk=\wb_clk_i, en=$abc$2446$auto$opt_dff.cc:219:make_patterns_logic$739, arst=\arst_i, srst={ }
  21 cells in clk=$abc$2614$ser_des.Baud_Rate, en=$abc$2702$auto$opt_dff.cc:194:make_patterns_logic$764, arst=\arst_i, srst={ }
  37 cells in clk=\wb_clk_i, en={ }, arst={ }, srst={ }
  37 cells in clk=\ser_des.Baud_Rate, en=$abc$2574$auto$opt_dff.cc:194:make_patterns_logic$770, arst=\arst_i, srst={ }
  14 cells in clk=\wb_clk_i, en=$abc$2454$auto$opt_dff.cc:219:make_patterns_logic$732, arst=\arst_i, srst={ }
  132 cells in clk=\wb_clk_i, en={ }, arst=\arst_i, srst={ }
  4 cells in clk=\wb_clk_i, en=$abc$2479$auto$opt_dff.cc:194:make_patterns_logic$758, arst=\arst_i, srst={ }
  86 cells in clk=\ser_des.Baud_Rate, en={ }, arst=\arst_i, srst={ }
  217 cells in clk=\wb_clk_i, en=$abc$2860$auto$opt_dff.cc:194:make_patterns_logic$709, arst=\arst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$3120$auto$opt_dff.cc:219:make_patterns_logic$725, arst=\arst_i, srst={ }

3.110.2. Extracting gate netlist of module `\spi_master_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$2486$auto$opt_dff.cc:194:make_patterns_logic$761, asynchronously reset by \arst_i
Extracted 40 gates and 82 wires to a netlist network with 42 inputs and 4 outputs.

3.110.2.1. Executing ABC.

3.110.3. Extracting gate netlist of module `\spi_master_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$2472$auto$opt_dff.cc:194:make_patterns_logic$755, asynchronously reset by \arst_i
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 4 outputs.

3.110.3.1. Executing ABC.

3.110.4. Extracting gate netlist of module `\spi_master_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$2614$ser_des.Baud_Rate, enabled by $abc$2559$auto$opt_dff.cc:194:make_patterns_logic$767, asynchronously reset by \arst_i
Extracted 12 gates and 21 wires to a netlist network with 9 inputs and 8 outputs.

3.110.4.1. Executing ABC.

3.110.5. Extracting gate netlist of module `\spi_master_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$2446$auto$opt_dff.cc:219:make_patterns_logic$739, asynchronously reset by \arst_i
Extracted 7 gates and 15 wires to a netlist network with 8 inputs and 3 outputs.

3.110.5.1. Executing ABC.

3.110.6. Extracting gate netlist of module `\spi_master_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$2614$ser_des.Baud_Rate, enabled by $abc$2702$auto$opt_dff.cc:194:make_patterns_logic$764, asynchronously reset by \arst_i
Extracted 21 gates and 32 wires to a netlist network with 11 inputs and 9 outputs.

3.110.6.1. Executing ABC.

3.110.7. Extracting gate netlist of module `\spi_master_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i
Extracted 37 gates and 67 wires to a netlist network with 30 inputs and 8 outputs.

3.110.7.1. Executing ABC.

3.110.8. Extracting gate netlist of module `\spi_master_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$2614$ser_des.Baud_Rate, enabled by $abc$2574$auto$opt_dff.cc:194:make_patterns_logic$770, asynchronously reset by \arst_i
Extracted 37 gates and 49 wires to a netlist network with 12 inputs and 10 outputs.

3.110.8.1. Executing ABC.

3.110.9. Extracting gate netlist of module `\spi_master_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$2454$auto$opt_dff.cc:219:make_patterns_logic$732, asynchronously reset by \arst_i
Extracted 14 gates and 23 wires to a netlist network with 9 inputs and 5 outputs.

3.110.9.1. Executing ABC.

3.110.10. Extracting gate netlist of module `\spi_master_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, asynchronously reset by \arst_i
Extracted 132 gates and 157 wires to a netlist network with 25 inputs and 38 outputs.

3.110.10.1. Executing ABC.

3.110.11. Extracting gate netlist of module `\spi_master_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$2479$auto$opt_dff.cc:194:make_patterns_logic$758, asynchronously reset by \arst_i
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 3 outputs.

3.110.11.1. Executing ABC.

3.110.12. Extracting gate netlist of module `\spi_master_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$2614$ser_des.Baud_Rate, asynchronously reset by \arst_i
Extracted 86 gates and 114 wires to a netlist network with 28 inputs and 23 outputs.

3.110.12.1. Executing ABC.

3.110.13. Extracting gate netlist of module `\spi_master_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$2860$auto$opt_dff.cc:194:make_patterns_logic$709, asynchronously reset by \arst_i
Extracted 217 gates and 255 wires to a netlist network with 38 inputs and 84 outputs.

3.110.13.1. Executing ABC.

3.110.14. Extracting gate netlist of module `\spi_master_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$3120$auto$opt_dff.cc:219:make_patterns_logic$725, asynchronously reset by \arst_i
Extracted 10 gates and 17 wires to a netlist network with 7 inputs and 3 outputs.

3.110.14.1. Executing ABC.

yosys> abc -dff

3.111. Executing ABC pass (technology mapping using ABC).

3.111.1. Summary of detected clock domains:
  42 cells in clk=\wb_clk_i, en=$abc$3130$abc$2486$auto$opt_dff.cc:194:make_patterns_logic$761, arst=\arst_i, srst={ }
  6 cells in clk=\wb_clk_i, en=$abc$3171$abc$2472$auto$opt_dff.cc:194:make_patterns_logic$755, arst=\arst_i, srst={ }
  14 cells in clk=$abc$2614$ser_des.Baud_Rate, en=$abc$3178$abc$2559$auto$opt_dff.cc:194:make_patterns_logic$767, arst=\arst_i, srst={ }
  7 cells in clk=\wb_clk_i, en=$abc$3192$abc$2446$auto$opt_dff.cc:219:make_patterns_logic$739, arst=\arst_i, srst={ }
  23 cells in clk=$abc$2614$ser_des.Baud_Rate, en=$abc$3200$abc$2702$auto$opt_dff.cc:194:make_patterns_logic$764, arst=\arst_i, srst={ }
  37 cells in clk=\wb_clk_i, en={ }, arst={ }, srst={ }
  28 cells in clk=$abc$2614$ser_des.Baud_Rate, en=$abc$3268$abc$2574$auto$opt_dff.cc:194:make_patterns_logic$770, arst=\arst_i, srst={ }
  13 cells in clk=\wb_clk_i, en=$abc$3306$abc$2454$auto$opt_dff.cc:219:make_patterns_logic$732, arst=\arst_i, srst={ }
  87 cells in clk=$abc$2614$ser_des.Baud_Rate, en={ }, arst=\arst_i, srst={ }
  133 cells in clk=\wb_clk_i, en={ }, arst=\arst_i, srst={ }
  5 cells in clk=\wb_clk_i, en=$abc$3458$abc$2479$auto$opt_dff.cc:194:make_patterns_logic$758, arst=\arst_i, srst={ }
  221 cells in clk=\wb_clk_i, en=$abc$3555$abc$2860$auto$opt_dff.cc:194:make_patterns_logic$709, arst=\arst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$3804$abc$3120$auto$opt_dff.cc:219:make_patterns_logic$725, arst=\arst_i, srst={ }

3.111.2. Extracting gate netlist of module `\spi_master_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$3130$abc$2486$auto$opt_dff.cc:194:make_patterns_logic$761, asynchronously reset by \arst_i
Extracted 42 gates and 86 wires to a netlist network with 44 inputs and 4 outputs.

3.111.2.1. Executing ABC.

3.111.3. Extracting gate netlist of module `\spi_master_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$3171$abc$2472$auto$opt_dff.cc:194:make_patterns_logic$755, asynchronously reset by \arst_i
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 4 outputs.

3.111.3.1. Executing ABC.

3.111.4. Extracting gate netlist of module `\spi_master_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$3464$abc$2614$ser_des.Baud_Rate, enabled by $abc$3178$abc$2559$auto$opt_dff.cc:194:make_patterns_logic$767, asynchronously reset by \arst_i
Extracted 14 gates and 26 wires to a netlist network with 12 inputs and 9 outputs.

3.111.4.1. Executing ABC.

3.111.5. Extracting gate netlist of module `\spi_master_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$3192$abc$2446$auto$opt_dff.cc:219:make_patterns_logic$739, asynchronously reset by \arst_i
Extracted 7 gates and 15 wires to a netlist network with 8 inputs and 3 outputs.

3.111.5.1. Executing ABC.

3.111.6. Extracting gate netlist of module `\spi_master_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$3464$abc$2614$ser_des.Baud_Rate, enabled by $abc$3200$abc$2702$auto$opt_dff.cc:194:make_patterns_logic$764, asynchronously reset by \arst_i
Extracted 23 gates and 35 wires to a netlist network with 12 inputs and 9 outputs.

3.111.6.1. Executing ABC.

3.111.7. Extracting gate netlist of module `\spi_master_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i
Extracted 37 gates and 67 wires to a netlist network with 30 inputs and 8 outputs.

3.111.7.1. Executing ABC.

3.111.8. Extracting gate netlist of module `\spi_master_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$3464$abc$2614$ser_des.Baud_Rate, enabled by $abc$3268$abc$2574$auto$opt_dff.cc:194:make_patterns_logic$770, asynchronously reset by \arst_i
Extracted 28 gates and 46 wires to a netlist network with 18 inputs and 15 outputs.

3.111.8.1. Executing ABC.

3.111.9. Extracting gate netlist of module `\spi_master_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$3306$abc$2454$auto$opt_dff.cc:219:make_patterns_logic$732, asynchronously reset by \arst_i
Extracted 13 gates and 21 wires to a netlist network with 8 inputs and 5 outputs.

3.111.9.1. Executing ABC.

3.111.10. Extracting gate netlist of module `\spi_master_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$3464$abc$2614$ser_des.Baud_Rate, asynchronously reset by \arst_i
Extracted 87 gates and 113 wires to a netlist network with 26 inputs and 23 outputs.

3.111.10.1. Executing ABC.

3.111.11. Extracting gate netlist of module `\spi_master_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, asynchronously reset by \arst_i
Extracted 133 gates and 160 wires to a netlist network with 27 inputs and 41 outputs.

3.111.11.1. Executing ABC.

3.111.12. Extracting gate netlist of module `\spi_master_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$3458$abc$2479$auto$opt_dff.cc:194:make_patterns_logic$758, asynchronously reset by \arst_i
Extracted 5 gates and 10 wires to a netlist network with 5 inputs and 4 outputs.

3.111.12.1. Executing ABC.

3.111.13. Extracting gate netlist of module `\spi_master_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$3555$abc$2860$auto$opt_dff.cc:194:make_patterns_logic$709, asynchronously reset by \arst_i
Extracted 221 gates and 264 wires to a netlist network with 43 inputs and 89 outputs.

3.111.13.1. Executing ABC.

3.111.14. Extracting gate netlist of module `\spi_master_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$3804$abc$3120$auto$opt_dff.cc:219:make_patterns_logic$725, asynchronously reset by \arst_i
Extracted 10 gates and 17 wires to a netlist network with 7 inputs and 3 outputs.

3.111.14.1. Executing ABC.

yosys> abc -dff

3.112. Executing ABC pass (technology mapping using ABC).

3.112.1. Summary of detected clock domains:
  6 cells in clk=\wb_clk_i, en=$abc$4236$abc$3458$abc$2479$auto$opt_dff.cc:194:make_patterns_logic$758, arst=\arst_i, srst={ }
  42 cells in clk=\wb_clk_i, en=$abc$3815$abc$3130$abc$2486$auto$opt_dff.cc:194:make_patterns_logic$761, arst=\arst_i, srst={ }
  5 cells in clk=\wb_clk_i, en=$abc$3858$abc$3171$abc$2472$auto$opt_dff.cc:194:make_patterns_logic$755, arst=\arst_i, srst={ }
  14 cells in clk=$abc$3464$abc$2614$ser_des.Baud_Rate, en=$abc$3865$abc$3178$abc$2559$auto$opt_dff.cc:194:make_patterns_logic$767, arst=\arst_i, srst={ }
  6 cells in clk=\wb_clk_i, en=$abc$3880$abc$3192$abc$2446$auto$opt_dff.cc:219:make_patterns_logic$739, arst=\arst_i, srst={ }
  22 cells in clk=$abc$3464$abc$2614$ser_des.Baud_Rate, en=$abc$3888$abc$3200$abc$2702$auto$opt_dff.cc:194:make_patterns_logic$764, arst=\arst_i, srst={ }
  37 cells in clk=\wb_clk_i, en={ }, arst={ }, srst={ }
  31 cells in clk=$abc$3464$abc$2614$ser_des.Baud_Rate, en=$abc$3958$abc$3268$abc$2574$auto$opt_dff.cc:194:make_patterns_logic$770, arst=\arst_i, srst={ }
  13 cells in clk=\wb_clk_i, en=$abc$3994$abc$3306$abc$2454$auto$opt_dff.cc:219:make_patterns_logic$732, arst=\arst_i, srst={ }
  88 cells in clk=$abc$3464$abc$2614$ser_des.Baud_Rate, en={ }, arst=\arst_i, srst={ }
  125 cells in clk=\wb_clk_i, en={ }, arst=\arst_i, srst={ }
  224 cells in clk=\wb_clk_i, en=$abc$4243$abc$3555$abc$2860$auto$opt_dff.cc:194:make_patterns_logic$709, arst=\arst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$4498$abc$3804$abc$3120$auto$opt_dff.cc:219:make_patterns_logic$725, arst=\arst_i, srst={ }

3.112.2. Extracting gate netlist of module `\spi_master_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$4236$abc$3458$abc$2479$auto$opt_dff.cc:194:make_patterns_logic$758, asynchronously reset by \arst_i
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 4 outputs.

3.112.2.1. Executing ABC.

3.112.3. Extracting gate netlist of module `\spi_master_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$3815$abc$3130$abc$2486$auto$opt_dff.cc:194:make_patterns_logic$761, asynchronously reset by \arst_i
Extracted 42 gates and 86 wires to a netlist network with 44 inputs and 4 outputs.

3.112.3.1. Executing ABC.

3.112.4. Extracting gate netlist of module `\spi_master_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$3858$abc$3171$abc$2472$auto$opt_dff.cc:194:make_patterns_logic$755, asynchronously reset by \arst_i
Extracted 5 gates and 10 wires to a netlist network with 5 inputs and 4 outputs.

3.112.4.1. Executing ABC.

3.112.5. Extracting gate netlist of module `\spi_master_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$4009$abc$3464$abc$2614$ser_des.Baud_Rate, enabled by $abc$3865$abc$3178$abc$2559$auto$opt_dff.cc:194:make_patterns_logic$767, asynchronously reset by \arst_i
Extracted 14 gates and 26 wires to a netlist network with 12 inputs and 9 outputs.

3.112.5.1. Executing ABC.

3.112.6. Extracting gate netlist of module `\spi_master_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$3880$abc$3192$abc$2446$auto$opt_dff.cc:219:make_patterns_logic$739, asynchronously reset by \arst_i
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 3 outputs.

3.112.6.1. Executing ABC.

3.112.7. Extracting gate netlist of module `\spi_master_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$4009$abc$3464$abc$2614$ser_des.Baud_Rate, enabled by $abc$3888$abc$3200$abc$2702$auto$opt_dff.cc:194:make_patterns_logic$764, asynchronously reset by \arst_i
Extracted 22 gates and 34 wires to a netlist network with 12 inputs and 9 outputs.

3.112.7.1. Executing ABC.

3.112.8. Extracting gate netlist of module `\spi_master_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i
Extracted 37 gates and 67 wires to a netlist network with 30 inputs and 8 outputs.

3.112.8.1. Executing ABC.

3.112.9. Extracting gate netlist of module `\spi_master_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$4009$abc$3464$abc$2614$ser_des.Baud_Rate, enabled by $abc$3958$abc$3268$abc$2574$auto$opt_dff.cc:194:make_patterns_logic$770, asynchronously reset by \arst_i
Extracted 31 gates and 38 wires to a netlist network with 7 inputs and 9 outputs.

3.112.9.1. Executing ABC.

3.112.10. Extracting gate netlist of module `\spi_master_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$3994$abc$3306$abc$2454$auto$opt_dff.cc:219:make_patterns_logic$732, asynchronously reset by \arst_i
Extracted 13 gates and 21 wires to a netlist network with 8 inputs and 5 outputs.

3.112.10.1. Executing ABC.

3.112.11. Extracting gate netlist of module `\spi_master_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$4009$abc$3464$abc$2614$ser_des.Baud_Rate, asynchronously reset by \arst_i
Extracted 88 gates and 115 wires to a netlist network with 27 inputs and 22 outputs.

3.112.11.1. Executing ABC.

3.112.12. Extracting gate netlist of module `\spi_master_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, asynchronously reset by \arst_i
Extracted 125 gates and 150 wires to a netlist network with 25 inputs and 39 outputs.

3.112.12.1. Executing ABC.

3.112.13. Extracting gate netlist of module `\spi_master_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$4243$abc$3555$abc$2860$auto$opt_dff.cc:194:make_patterns_logic$709, asynchronously reset by \arst_i
Extracted 224 gates and 271 wires to a netlist network with 47 inputs and 89 outputs.

3.112.13.1. Executing ABC.

3.112.14. Extracting gate netlist of module `\spi_master_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$4498$abc$3804$abc$3120$auto$opt_dff.cc:219:make_patterns_logic$725, asynchronously reset by \arst_i
Extracted 10 gates and 17 wires to a netlist network with 7 inputs and 3 outputs.

3.112.14.1. Executing ABC.

yosys> opt_ffinv

3.113. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt_expr

3.114. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_master_top.

yosys> opt_merge -nomux

3.115. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_master_top'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

yosys> opt_muxtree

3.116. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_master_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.117. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_master_top.
Performed a total of 0 changes.

yosys> opt_merge

3.118. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_master_top'.
Removed a total of 0 cells.

yosys> opt_share

3.119. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$4612$auto$blifparse.cc:381:parse_blif$4630 in front of them:
        $abc$4933$auto$blifparse.cc:381:parse_blif$5039
        $abc$4933$auto$blifparse.cc:381:parse_blif$5034


yosys> opt_dff -nosdff -sat

3.120. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.121. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_master_top..
Removed 0 unused cells and 3283 unused wires.
<suppressed ~32 debug messages>

yosys> opt_expr

3.122. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_master_top.
<suppressed ~1 debug messages>

yosys> opt_muxtree

3.123. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_master_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

yosys> opt_reduce

3.124. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_master_top.
Performed a total of 0 changes.

yosys> opt_merge

3.125. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_master_top'.
Removed a total of 0 cells.

yosys> opt_share

3.126. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.127. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.128. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_master_top..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.129. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_master_top.
MAX OPT ITERATION = 2

yosys> bmuxmap

3.130. Executing BMUXMAP pass.

yosys> demuxmap

3.131. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> abc -script /tmp/yosys_9PjiNg/abc_tmp_1.scr

3.132. Executing ABC pass (technology mapping using ABC).

3.132.1. Extracting gate netlist of module `\spi_master_top' to `<abc-temp-dir>/input.blif'..
Extracted 507 gates and 629 wires to a netlist network with 122 inputs and 133 outputs.

3.132.1.1. Executing ABC.
DE:   #PIs = 122  #Luts =   188  Max Lvl =   6  Avg Lvl =   1.94  [   0.35 sec. at Pass 0]
DE:   #PIs = 122  #Luts =   182  Max Lvl =   5  Avg Lvl =   1.94  [   1.53 sec. at Pass 1]
DE:   #PIs = 122  #Luts =   182  Max Lvl =   5  Avg Lvl =   1.94  [   0.33 sec. at Pass 2]
DE:   #PIs = 122  #Luts =   181  Max Lvl =   5  Avg Lvl =   1.80  [   0.77 sec. at Pass 3]
DE:   #PIs = 122  #Luts =   181  Max Lvl =   5  Avg Lvl =   1.80  [   0.95 sec. at Pass 4]
DE:   #PIs = 122  #Luts =   180  Max Lvl =   4  Avg Lvl =   1.79  [   0.87 sec. at Pass 5]
DE:   #PIs = 122  #Luts =   180  Max Lvl =   4  Avg Lvl =   1.79  [   0.98 sec. at Pass 6]
DE:   #PIs = 122  #Luts =   180  Max Lvl =   4  Avg Lvl =   1.79  [   0.82 sec. at Pass 7]
DE:   #PIs = 122  #Luts =   180  Max Lvl =   4  Avg Lvl =   1.79  [   0.61 sec. at Pass 8]
DE:   #PIs = 122  #Luts =   178  Max Lvl =   4  Avg Lvl =   1.79  [   2.22 sec. at Pass 9]
DE:   #PIs = 122  #Luts =   178  Max Lvl =   4  Avg Lvl =   1.79  [   0.93 sec. at Pass 10]
DE:   #PIs = 122  #Luts =   178  Max Lvl =   4  Avg Lvl =   1.79  [   0.41 sec. at Pass 11]
DE:   #PIs = 122  #Luts =   178  Max Lvl =   4  Avg Lvl =   1.79  [   0.98 sec. at Pass 12]
DE:   #PIs = 122  #Luts =   177  Max Lvl =   5  Avg Lvl =   1.94  [   2.42 sec. at Pass 13]
DE:   #PIs = 122  #Luts =   177  Max Lvl =   5  Avg Lvl =   1.94  [   0.32 sec. at Pass 14]
DE:   #PIs = 122  #Luts =   177  Max Lvl =   4  Avg Lvl =   1.79  [   1.55 sec. at Pass 15]
DE:   #PIs = 122  #Luts =   177  Max Lvl =   4  Avg Lvl =   1.79  [   1.09 sec. at Pass 16]
DE:   #PIs = 122  #Luts =   177  Max Lvl =   4  Avg Lvl =   1.79  [   1.12 sec. at Pass 17]
DE:   #PIs = 122  #Luts =   177  Max Lvl =   4  Avg Lvl =   1.79  [   0.35 sec. at Pass 18]
DE:   #PIs = 122  #Luts =   177  Max Lvl =   4  Avg Lvl =   1.79  [   3.83 sec. at Pass 19]
DE:   #PIs = 122  #Luts =   177  Max Lvl =   4  Avg Lvl =   1.79  [   0.40 sec. at Pass 20]

yosys> opt_expr

3.133. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_master_top.

yosys> opt_merge -nomux

3.134. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_master_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.135. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_master_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

yosys> opt_reduce

3.136. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_master_top.
Performed a total of 0 changes.

yosys> opt_merge

3.137. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_master_top'.
Removed a total of 0 cells.

yosys> opt_share

3.138. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.139. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.140. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_master_top..
Removed 0 unused cells and 628 unused wires.
<suppressed ~10 debug messages>

yosys> opt_expr

3.141. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_master_top.
MAX OPT ITERATION = 1

yosys> opt_ffinv

3.142. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> stat

3.143. Printing statistics.

=== spi_master_top ===

   Number of wires:                389
   Number of wire bits:            655
   Number of public wires:         130
   Number of public wire bits:     396
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                288
     $_DFFE_PP0P_                   66
     $_DFF_PP0_                     36
     $_DFF_P_                        8
     $lut                          177
     $mux                            1


yosys> shregmap -minlen 8 -maxlen 20

3.144. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.145. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.146. Printing statistics.

=== spi_master_top ===

   Number of wires:                389
   Number of wire bits:            655
   Number of public wires:         130
   Number of public wire bits:     396
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                288
     $_DFFE_PP0P_                   66
     $_DFF_PP0_                     36
     $_DFF_P_                        8
     $lut                          177
     $mux                            1


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.147. Executing TECHMAP pass (map to technology primitives).

3.147.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.147.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/davit/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.147.3. Continuing TECHMAP pass.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using extmapper simplemap for cells of type $mux.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~526 debug messages>

yosys> opt_expr -mux_undef

3.148. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_master_top.
<suppressed ~5875 debug messages>

yosys> simplemap

3.149. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.150. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_master_top.

yosys> opt_merge

3.151. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_master_top'.
<suppressed ~1179 debug messages>
Removed a total of 393 cells.

yosys> opt_dff -nodffe -nosdff

3.152. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.153. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_master_top..
Removed 0 unused cells and 980 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.154. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_master_top.
<suppressed ~34 debug messages>

yosys> opt_merge -nomux

3.155. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_master_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.156. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_master_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.157. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_master_top.
Performed a total of 0 changes.

yosys> opt_merge

3.158. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_master_top'.
Removed a total of 0 cells.

yosys> opt_share

3.159. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.160. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.161. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_master_top..
Removed 0 unused cells and 10 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.162. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_master_top.
MAX OPT ITERATION = 1

yosys> abc -script /tmp/yosys_9PjiNg/abc_tmp_2.scr

3.163. Executing ABC pass (technology mapping using ABC).

3.163.1. Extracting gate netlist of module `\spi_master_top' to `<abc-temp-dir>/input.blif'..
Extracted 886 gates and 1010 wires to a netlist network with 122 inputs and 134 outputs.

3.163.1.1. Executing ABC.
DE:   #PIs = 122  #Luts =   178  Max Lvl =   4  Avg Lvl =   1.73  [   0.14 sec. at Pass 0]
DE:   #PIs = 122  #Luts =   178  Max Lvl =   4  Avg Lvl =   1.73  [   1.13 sec. at Pass 1]
DE:   #PIs = 122  #Luts =   178  Max Lvl =   4  Avg Lvl =   1.73  [   0.84 sec. at Pass 2]
DE:   #PIs = 122  #Luts =   178  Max Lvl =   4  Avg Lvl =   1.73  [   0.48 sec. at Pass 3]
DE:   #PIs = 122  #Luts =   178  Max Lvl =   4  Avg Lvl =   1.73  [   1.06 sec. at Pass 4]
DE:   #PIs = 122  #Luts =   178  Max Lvl =   4  Avg Lvl =   1.73  [   1.07 sec. at Pass 5]
DE:   #PIs = 122  #Luts =   177  Max Lvl =   4  Avg Lvl =   1.81  [   3.02 sec. at Pass 6]
DE:   #PIs = 122  #Luts =   177  Max Lvl =   4  Avg Lvl =   1.81  [   0.89 sec. at Pass 7]
DE:   #PIs = 122  #Luts =   177  Max Lvl =   4  Avg Lvl =   1.81  [   1.05 sec. at Pass 8]
DE:   #PIs = 122  #Luts =   177  Max Lvl =   4  Avg Lvl =   1.81  [   0.33 sec. at Pass 9]
DE:   #PIs = 122  #Luts =   177  Max Lvl =   4  Avg Lvl =   1.81  [   3.53 sec. at Pass 10]
DE:   #PIs = 122  #Luts =   177  Max Lvl =   4  Avg Lvl =   1.81  [   0.37 sec. at Pass 11]

yosys> opt_expr

3.164. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_master_top.

yosys> opt_merge -nomux

3.165. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_master_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.166. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_master_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.167. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_master_top.
Performed a total of 0 changes.

yosys> opt_merge

3.168. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_master_top'.
Removed a total of 0 cells.

yosys> opt_share

3.169. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.170. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.171. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_master_top..
Removed 0 unused cells and 766 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.172. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_master_top.
MAX OPT ITERATION = 1

yosys> hierarchy -check

3.173. Executing HIERARCHY pass (managing design hierarchy).

3.173.1. Analyzing design hierarchy..
Top module:  \spi_master_top

3.173.2. Analyzing design hierarchy..
Top module:  \spi_master_top
Removed 0 unused modules.

yosys> stat

3.174. Printing statistics.

=== spi_master_top ===

   Number of wires:                388
   Number of wire bits:            654
   Number of public wires:         130
   Number of public wire bits:     396
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                287
     $lut                          177
     dffsre                        110


yosys> opt_clean -purge

3.175. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_master_top..
Removed 0 unused cells and 101 unused wires.
<suppressed ~101 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.176. Executing Verilog backend.
Dumping module `\spi_master_top'.

Warnings: 28 unique messages, 28 total
End of script. Logfile hash: 2e0a5d3888, CPU: user 1.90s system 0.13s, MEM: 44.48 MB peak
Yosys 0.18+10 (git sha1 c98b0e94e, gcc 9.4.0 -fPIC -Os)
Time spent: 98% 6x abc (89 sec), 0% 31x opt_expr (0 sec), ...
real 53.91
user 81.97
sys 9.42
