
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.14+36 (git sha1 15a4e900b, gcc 7.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jan22_SW_Release, released at Sat Jan 29 02:42:49 2022.

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jan22_SW_Release, released at Sat Jan 29 02:42:49 2022.
VERIFIC-INFO [VHDL-1504] default VHDL library search path is now "/home/users/aram/Workspace/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008"
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'b15.vhd'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.standard' from file '/home/users/aram/Workspace/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/standard.vdb'
VERIFIC-INFO [VHDL-1012] b15.vhd:1: analyzing entity 'b15'
VERIFIC-INFO [VHDL-1010] b15.vhd:17: analyzing architecture 'behav'

3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VHDL-1067] b15.vhd:1: processing 'b15(BEHAV)'
Importing module standard.
Importing module b15.

3.1. Analyzing design hierarchy..
Top module:  \b15

3.2. Analyzing design hierarchy..
Top module:  \b15
Removing unused module `\standard'.
Removed 1 unused modules.

4. Executing PROC pass (convert processes to netlists).

4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

4.4. Executing PROC_INIT pass (extract init attributes).

4.5. Executing PROC_ARST pass (detect async resets in processes).

4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

4.7. Executing PROC_DLATCH pass (convert process syncs to latches).

4.8. Executing PROC_DFF pass (convert process syncs to FFs).

4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~17 debug messages>

5. Executing FLATTEN pass (flatten design).

6. Executing TRIBUF pass.

7. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~5 debug messages>

8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 7 unused cells and 141 unused wires.
<suppressed ~65 debug messages>

9. Executing CHECK pass (checking for obvious problems).
Checking module b15...
Found and reported 0 problems.

10. Executing DEMINOUT pass (demote inout ports to input or output).

11. Executing OPT pass (performing simple optimizations).

11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~2 debug messages>

11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~90 debug messages>

11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
    New ctrl vector for $pmux cell $verific$Select_723$b15.vhd:562$914: { $verific$n7981$95 $verific$n7982$96 $auto$opt_reduce.cc:134:opt_pmux$1085 $auto$opt_reduce.cc:134:opt_pmux$1083 }
    New ctrl vector for $pmux cell $verific$Select_725$b15.vhd:562$916: { $verific$n7981$95 $auto$opt_reduce.cc:134:opt_pmux$1091 $auto$opt_reduce.cc:134:opt_pmux$1089 $auto$opt_reduce.cc:134:opt_pmux$1087 }
    New ctrl vector for $pmux cell $verific$Select_731$b15.vhd:562$922: { $verific$n8173$116 $verific$n7988$102 $auto$opt_reduce.cc:134:opt_pmux$1093 $verific$n7990$104 }
    New ctrl vector for $pmux cell $verific$Select_733$b15.vhd:562$923: { $verific$n8173$116 $auto$opt_reduce.cc:134:opt_pmux$1097 $auto$opt_reduce.cc:134:opt_pmux$1095 }
    New ctrl vector for $pmux cell $verific$Select_735$b15.vhd:562$924: { $verific$n8173$116 $auto$opt_reduce.cc:134:opt_pmux$1101 $auto$opt_reduce.cc:134:opt_pmux$1099 }
    New ctrl vector for $pmux cell $verific$Select_737$b15.vhd:562$925: { $verific$n8173$116 $auto$opt_reduce.cc:134:opt_pmux$1103 }
    New ctrl vector for $pmux cell $verific$select_720$b15.vhd:562$911: { $verific$n7981$95 $verific$n7982$96 $auto$opt_reduce.cc:134:opt_pmux$1113 $auto$opt_reduce.cc:134:opt_pmux$1111 $auto$opt_reduce.cc:134:opt_pmux$1109 $auto$opt_reduce.cc:134:opt_pmux$1107 $auto$opt_reduce.cc:134:opt_pmux$1105 }
    New ctrl vector for $pmux cell $verific$select_721$b15.vhd:562$912: { $auto$opt_reduce.cc:134:opt_pmux$1123 $auto$opt_reduce.cc:134:opt_pmux$1121 $verific$n7987$101 $verific$n7989$103 $auto$opt_reduce.cc:134:opt_pmux$1119 $auto$opt_reduce.cc:134:opt_pmux$1117 $auto$opt_reduce.cc:134:opt_pmux$1115 }
    New ctrl vector for $pmux cell $verific$select_726$b15.vhd:562$917: { $verific$n7981$95 $verific$n7982$96 $auto$opt_reduce.cc:134:opt_pmux$1125 }
    New ctrl vector for $pmux cell $verific$select_727$b15.vhd:562$918: { $verific$n7985$99 $verific$n7987$101 $verific$n7989$103 $verific$n7995$109 $auto$opt_reduce.cc:134:opt_pmux$1127 }
    New ctrl vector for $pmux cell $verific$select_728$b15.vhd:562$919: { $verific$n7986$100 $verific$n7996$110 $auto$opt_reduce.cc:134:opt_pmux$1129 }
    New ctrl vector for $pmux cell $verific$select_729$b15.vhd:562$920: { $verific$n7987$101 $verific$n7988$102 $auto$opt_reduce.cc:134:opt_pmux$1133 $auto$opt_reduce.cc:134:opt_pmux$1131 }
    New ctrl vector for $pmux cell $verific$select_738$b15.vhd:562$926: { $verific$n7987$101 $verific$n7988$102 $auto$opt_reduce.cc:134:opt_pmux$1135 }
    New ctrl vector for $pmux cell $verific$select_739$b15.vhd:562$927: { $verific$n7987$101 $verific$n7988$102 $auto$opt_reduce.cc:134:opt_pmux$1137 }
    New ctrl vector for $pmux cell $verific$select_740$b15.vhd:562$928: { $verific$n7988$102 $verific$n7990$104 $auto$opt_reduce.cc:134:opt_pmux$1139 }
    New ctrl vector for $pmux cell $verific$select_741$b15.vhd:562$929: { $verific$n7988$102 $auto$opt_reduce.cc:134:opt_pmux$1141 }
  Optimizing cells in module \b15.
Performed a total of 16 changes.

11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
<suppressed ~45 debug messages>
Removed a total of 15 cells.

11.6. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $verific$rEIP_reg$b15.vhd:612$1057 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$Address_reg$b15.vhd:231$636 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$ADS_n_reg$b15.vhd:231$640 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$W_R_n_reg$b15.vhd:231$637 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$State_reg$b15.vhd:231$641 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$StateBS16_reg$b15.vhd:231$643 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$RequestPending_reg$b15.vhd:612$1061 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$ReadRequest_reg$b15.vhd:612$1059 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.uWord_reg$b15.vhd:612$1051 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.lWord_reg$b15.vhd:612$1050 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.State2_reg$b15.vhd:612$1027 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.PhyAddrPointer_reg$b15.vhd:612$1047 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.More_reg$b15.vhd:612$1048 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_9$b15.vhd:612$1035 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_8$b15.vhd:612$1034 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_7$b15.vhd:612$1033 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_6$b15.vhd:612$1032 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_5$b15.vhd:612$1031 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_4$b15.vhd:612$1030 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_3$b15.vhd:612$1029 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_2$b15.vhd:612$1028 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_16$b15.vhd:612$1042 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_15$b15.vhd:612$1041 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_14$b15.vhd:612$1040 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_13$b15.vhd:612$1039 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_12$b15.vhd:612$1038 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_11$b15.vhd:612$1037 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_10$b15.vhd:612$1036 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg$b15.vhd:612$1043 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueueWr_Addr_reg$b15.vhd:612$1045 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueueRd_Addr_reg$b15.vhd:612$1044 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstAddrPointer_reg$b15.vhd:612$1046 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.Flush_reg$b15.vhd:612$1049 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$MemoryFetch_reg$b15.vhd:612$1060 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$M_IO_n_reg$b15.vhd:231$639 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$EBX_reg$b15.vhd:612$1056 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$EAX_reg$b15.vhd:612$1055 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$Datao_reg$b15.vhd:612$1053 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$DataWidth_reg$b15.vhd:231$644 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$D_C_n_reg$b15.vhd:231$638 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$CodeFetch_reg$b15.vhd:612$1052 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$ByteEnable_reg$b15.vhd:668$1079 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$BE_n_reg$b15.vhd:231$635 ($aldff) from module b15.

11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 2 unused cells and 19 unused wires.
<suppressed ~3 debug messages>

11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

11.9. Rerunning OPT passes. (Maybe there is more to do..)

11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~91 debug messages>

11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

11.13. Executing OPT_DFF pass (perform DFF optimizations).

11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

11.16. Finished OPT passes. (There is nothing left to do.)

12. Executing FSM pass (extract and optimize FSM).

12.1. Executing FSM_DETECT pass (finding FSMs in design).

12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

13. Executing OPT pass (performing simple optimizations).

13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~91 debug messages>

13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $verific$ByteEnable_reg$b15.vhd:668$1079 ($adff) from module b15 (D = $verific$n9780$544, Q = \ByteEnable).
Setting constant 0-bit at position 2 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 3 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 4 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 5 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 6 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 7 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 8 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 9 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 10 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 11 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 12 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 13 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 14 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 15 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 16 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 17 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 18 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 19 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 20 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 21 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 22 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 23 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 24 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 25 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 26 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 27 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 28 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 29 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 30 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 31 on $verific$DataWidth_reg$b15.vhd:231$644 ($adff) from module b15.
Setting constant 0-bit at position 31 on $verific$Datao_reg$b15.vhd:612$1053 ($adff) from module b15.
Setting constant 0-bit at position 4 on $verific$P1.InstQueueWr_Addr_reg$b15.vhd:612$1045 ($adff) from module b15.

13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~4 debug messages>

13.9. Rerunning OPT passes. (Maybe there is more to do..)

13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~91 debug messages>

13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

13.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$1145 ($adff) from module b15.
Setting constant 0-bit at position 31 on $auto$ff.cc:262:slice$1146 ($adff) from module b15.
Setting constant 0-bit at position 4 on $verific$P1.InstQueueRd_Addr_reg$b15.vhd:612$1044 ($adff) from module b15.

13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

13.16. Rerunning OPT passes. (Maybe there is more to do..)

13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~91 debug messages>

13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

13.20. Executing OPT_DFF pass (perform DFF optimizations).

13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

13.23. Finished OPT passes. (There is nothing left to do.)

14. Executing WREDUCE pass (reducing word size of cells).
Removed top 30 bits (of 32) from mux cell b15.$verific$mux_98$b15.vhd:181$604 ($mux).
Removed top 1 bits (of 31) from port Y of cell b15.$verific$add_113$b15.vhd:197$608 ($add).
Removed top 1 bits (of 31) from port A of cell b15.$verific$add_113$b15.vhd:197$608 ($add).
Removed top 1 bits (of 3) from mux cell b15.$verific$mux_127$b15.vhd:215$614 ($mux).
Removed top 15 bits (of 16) from port A of cell b15.$verific$Decoder_193$b15.vhd:305$649 ($shl).
Removed top 1 bits (of 5) from port A of cell b15.$verific$add_210$b15.vhd:306$666 ($add).
Removed top 4 bits (of 5) from port B of cell b15.$verific$add_210$b15.vhd:306$666 ($add).
Removed top 1 bits (of 5) from port Y of cell b15.$verific$add_210$b15.vhd:306$666 ($add).
Removed top 15 bits (of 16) from port A of cell b15.$verific$Decoder_213$b15.vhd:308$669 ($shl).
Removed top 3 bits (of 4) from port B of cell b15.$verific$add_230$b15.vhd:309$686 ($add).
Removed top 8 bits (of 16) from port Y of cell b15.$verific$add_235$b15.vhd:311$690 ($add).
Removed top 8 bits (of 16) from port A of cell b15.$verific$add_235$b15.vhd:311$690 ($add).
Removed top 15 bits (of 16) from port A of cell b15.$verific$Decoder_237$b15.vhd:311$695 ($shl).
Removed top 3 bits (of 4) from port B of cell b15.$verific$add_254$b15.vhd:312$712 ($add).
Removed top 15 bits (of 16) from port A of cell b15.$verific$Decoder_261$b15.vhd:313$720 ($shl).
Removed top 3 bits (of 4) from port B of cell b15.$verific$add_278$b15.vhd:314$737 ($add).
Removed top 29 bits (of 30) from port B of cell b15.$verific$add_281$b15.vhd:315$738 ($add).
Removed top 30 bits (of 31) from port B of cell b15.$verific$add_284$b15.vhd:318$740 ($add).
Removed top 1 bits (of 32) from port A of cell b15.$verific$LessThan_286$b15.vhd:319$742 ($lt).
Removed top 1 bits (of 33) from port Y of cell b15.$verific$unary_minus_287$b15.vhd:320$743 ($neg).
Removed top 1 bits (of 33) from port A of cell b15.$verific$unary_minus_287$b15.vhd:320$743 ($neg).
Removed top 31 bits (of 32) from port B of cell b15.$verific$add_360$b15.vhd:344$768 ($add).
Removed top 1 bits (of 5) from port A of cell b15.$verific$add_362$b15.vhd:345$770 ($add).
Removed top 4 bits (of 5) from port B of cell b15.$verific$add_362$b15.vhd:345$770 ($add).
Removed top 1 bits (of 6) from port Y of cell b15.$verific$add_362$b15.vhd:345$770 ($add).
Removed top 2 bits (of 6) from port A of cell b15.$verific$sub_369$b15.vhd:355$772 ($sub).
Removed top 2 bits (of 6) from port B of cell b15.$verific$sub_369$b15.vhd:355$772 ($sub).
Removed top 1 bits (of 6) from port Y of cell b15.$verific$sub_369$b15.vhd:355$772 ($sub).
Removed top 1 bits (of 6) from port B of cell b15.$verific$LessThan_370$b15.vhd:355$773 ($le).
Removed top 1 bits (of 8) from port A of cell b15.$verific$LessThan_373$b15.vhd:356$775 ($lt).
Removed top 1 bits (of 9) from port A of cell b15.$verific$sub_378$b15.vhd:357$776 ($sub).
Removed top 1 bits (of 9) from port B of cell b15.$verific$sub_378$b15.vhd:357$776 ($sub).
Removed top 1 bits (of 33) from port Y of cell b15.$verific$sub_379$b15.vhd:357$777 ($sub).
Removed top 1 bits (of 33) from port A of cell b15.$verific$sub_379$b15.vhd:357$777 ($sub).
Removed top 1 bits (of 33) from port B of cell b15.$verific$sub_379$b15.vhd:357$777 ($sub).
Removed top 30 bits (of 31) from port B of cell b15.$verific$add_383$b15.vhd:360$779 ($add).
Removed top 24 bits (of 32) from port B of cell b15.$verific$add_387$b15.vhd:360$780 ($add).
Removed top 1 bits (of 6) from port B of cell b15.$verific$LessThan_397$b15.vhd:370$787 ($le).
Removed top 29 bits (of 32) from port B of cell b15.$verific$add_399$b15.vhd:371$788 ($add).
Removed top 24 bits (of 32) from port B of cell b15.$verific$add_403$b15.vhd:371$789 ($add).
Removed top 1 bits (of 3) from port A of cell b15.$verific$add_422$b15.vhd:391$794 ($add).
Removed top 2 bits (of 3) from port B of cell b15.$verific$add_422$b15.vhd:391$794 ($add).
Removed top 1 bits (of 3) from port Y of cell b15.$verific$add_422$b15.vhd:391$794 ($add).
Removed top 1 bits (of 5) from port A of cell b15.$verific$add_424$b15.vhd:391$797 ($add).
Removed top 3 bits (of 5) from port B of cell b15.$verific$add_424$b15.vhd:391$797 ($add).
Removed top 1 bits (of 5) from port Y of cell b15.$verific$add_424$b15.vhd:391$797 ($add).
Removed top 7 bits (of 8) from port B of cell b15.$verific$add_426$b15.vhd:391$800 ($add).
Removed top 1 bits (of 4) from port A of cell b15.$verific$add_427$b15.vhd:391$801 ($add).
Removed top 3 bits (of 4) from port B of cell b15.$verific$add_427$b15.vhd:391$801 ($add).
Removed top 1 bits (of 5) from port A of cell b15.$verific$add_435$b15.vhd:395$804 ($add).
Removed top 2 bits (of 5) from port B of cell b15.$verific$add_435$b15.vhd:395$804 ($add).
Removed top 1 bits (of 5) from port Y of cell b15.$verific$add_435$b15.vhd:395$804 ($add).
Removed top 1 bits (of 5) from mux cell b15.$verific$mux_440$b15.vhd:399$809 ($mux).
Removed top 1 bits (of 6) from port B of cell b15.$verific$LessThan_462$b15.vhd:412$812 ($le).
Removed top 1 bits (of 32) from port A of cell b15.$verific$LessThan_463$b15.vhd:413$813 ($lt).
Removed top 1 bits (of 33) from port Y of cell b15.$verific$unary_minus_464$b15.vhd:414$814 ($neg).
Removed top 1 bits (of 33) from port A of cell b15.$verific$unary_minus_464$b15.vhd:414$814 ($neg).
Removed top 30 bits (of 31) from port B of cell b15.$verific$add_477$b15.vhd:430$819 ($add).
Removed top 1 bits (of 10) from mux cell b15.$verific$mux_958$b15.vhd:444$847 ($mux).
Removed top 1 bits (of 16) from port Y of cell b15.$verific$add_522$b15.vhd:457$852 ($add).
Removed top 1 bits (of 16) from port A of cell b15.$verific$add_522$b15.vhd:457$852 ($add).
Removed top 1 bits (of 3) from port A of cell b15.$verific$equal_528$b15.vhd:462$857 ($eq).
Removed top 1 bits (of 5) from mux cell b15.$verific$mux_573$b15.vhd:479$874 ($mux).
Removed top 1 bits (of 64) from mux cell b15.$verific$mux_950$b15.vhd:479$877 ($mux).
Removed top 1 bits (of 64) from mux cell b15.$verific$mux_949$b15.vhd:483$885 ($mux).
Removed top 31 bits (of 32) from port B of cell b15.$verific$add_681$b15.vhd:546$886 ($add).
Removed top 31 bits (of 32) from port B of cell b15.$verific$add_689$b15.vhd:552$888 ($add).
Removed top 1 bits (of 8) from port A of cell b15.$verific$equal_702$b15.vhd:348$891 ($eq).
Removed top 5 bits (of 8) from port A of cell b15.$verific$equal_713$b15.vhd:525$902 ($eq).
Removed top 5 bits (of 8) from port A of cell b15.$verific$equal_714$b15.vhd:530$903 ($eq).
Removed top 1 bits (of 8) from port A of cell b15.$verific$equal_717$b15.vhd:545$906 ($eq).
Removed top 1 bits (of 8) from port A of cell b15.$verific$equal_718$b15.vhd:551$907 ($eq).
Removed top 1 bits (of 5) from port B of cell b15.$verific$LessThan_742$b15.vhd:563$930 ($lt).
Removed top 2 bits (of 6) from port A of cell b15.$verific$sub_744$b15.vhd:563$932 ($sub).
Removed top 1 bits (of 6) from port B of cell b15.$verific$sub_744$b15.vhd:563$932 ($sub).
Removed top 1 bits (of 6) from port A of cell b15.$verific$LessThan_745$b15.vhd:563$933 ($lt).
Removed top 1 bits (of 32) from port A of cell b15.$verific$LessThan_755$b15.vhd:579$941 ($lt).
Removed top 1 bits (of 33) from port Y of cell b15.$verific$unary_minus_756$b15.vhd:580$942 ($neg).
Removed top 1 bits (of 33) from port A of cell b15.$verific$unary_minus_756$b15.vhd:580$942 ($neg).
Removed top 30 bits (of 32) from mux cell b15.$verific$mux_759$b15.vhd:585$946 ($mux).
Removed top 1 bits (of 2) from port A of cell b15.$verific$add_760$b15.vhd:586$948 ($add).
Removed top 1 bits (of 4) from mux cell b15.$verific$mux_764$b15.vhd:587$950 ($mux).
Removed top 1 bits (of 5) from mux cell b15.$verific$mux_765$b15.vhd:588$951 ($mux).
Removed top 1 bits (of 5) from mux cell b15.$verific$mux_766$b15.vhd:588$952 ($mux).
Removed top 2 bits (of 6) from port A of cell b15.$verific$sub_767$b15.vhd:589$953 ($sub).
Removed top 2 bits (of 6) from port B of cell b15.$verific$sub_767$b15.vhd:589$953 ($sub).
Removed top 1 bits (of 6) from port Y of cell b15.$verific$sub_767$b15.vhd:589$953 ($sub).
Removed top 1 bits (of 6) from port A of cell b15.$verific$LessThan_768$b15.vhd:589$954 ($lt).
Removed top 1 bits (of 5) from mux cell b15.$verific$mux_770$b15.vhd:594$955 ($mux).
Removed top 1 bits (of 5) from port A of cell b15.$verific$LessThan_771$b15.vhd:597$956 ($le).
Removed top 1 bits (of 5) from port B of cell b15.$verific$LessThan_771$b15.vhd:597$956 ($le).
Removed top 1 bits (of 5) from mux cell b15.$verific$mux_812$b15.vhd:605$992 ($mux).
Removed top 1 bits (of 33) from FF cell b15.$verific$rEIP_reg$b15.vhd:612$1057 ($adff).
Removed top 1 bits (of 2) from port A of cell b15.$verific$equal_909$b15.vhd:634$1071 ($eq).
Removed top 30 bits (of 32) from port Y of cell b15.$verific$unary_minus_756$b15.vhd:580$942 ($neg).
Removed top 30 bits (of 32) from port A of cell b15.$verific$unary_minus_756$b15.vhd:580$942 ($neg).
Removed top 30 bits (of 32) from wire b15.$verific$n1001$177.
Removed top 1 bits (of 31) from wire b15.$verific$n1151$182.
Removed top 1 bits (of 3) from wire b15.$verific$n1294$187.
Removed top 1 bits (of 5) from wire b15.$verific$n2071$220.
Removed top 8 bits (of 16) from wire b15.$verific$n2267$241.
Removed top 1 bits (of 33) from wire b15.$verific$n2793$287.
Removed top 1 bits (of 5) from wire b15.$verific$n3660$314.
Removed top 1 bits (of 33) from wire b15.$verific$n3837$321.
Removed top 1 bits (of 3) from wire b15.$verific$n4619$342.
Removed top 1 bits (of 5) from wire b15.$verific$n4633$344.
Removed top 1 bits (of 4) from wire b15.$verific$n4659$347.
Removed top 1 bits (of 5) from wire b15.$verific$n4791$351.
Removed top 1 bits (of 5) from wire b15.$verific$n4869$355.
Removed top 1 bits (of 33) from wire b15.$verific$n5140$358.
Removed top 1 bits (of 5) from wire b15.$verific$n5695$377.
Removed top 1 bits (of 16) from wire b15.$verific$n5974$388.
Removed top 1 bits (of 32) from wire b15.$verific$n6324$395.
Removed top 1 bits (of 5) from wire b15.$verific$n6434$399.
Removed top 1 bits (of 32) from wire b15.$verific$n6510$403.
Removed top 31 bits (of 33) from wire b15.$verific$n8312$453.
Removed top 30 bits (of 32) from wire b15.$verific$n8412$456.
Removed top 1 bits (of 4) from wire b15.$verific$n8452$458.
Removed top 1 bits (of 5) from wire b15.$verific$n8457$459.
Removed top 1 bits (of 5) from wire b15.$verific$n8463$460.
Removed top 3 bits (of 4) from wire b15.$verific$n8477$462.
Removed top 1 bits (of 5) from wire b15.$verific$n8482$463.
Removed top 1 bits (of 5) from wire b15.$verific$n8841$499.
Removed top 30 bits (of 32) from wire b15.DataWidth.
Removed top 1 bits (of 5) from wire b15.P1.InstQueueRd_Addr.
Removed top 1 bits (of 5) from wire b15.P1.InstQueueWr_Addr.

15. Executing PEEPOPT pass (run peephole optimizers).

16. Executing PMUXTREE pass.

17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 34 unused cells and 95 unused wires.
<suppressed ~35 debug messages>

18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module b15:
  creating $macc model for $verific$add_113$b15.vhd:197$608 ($add).
  creating $macc model for $verific$add_210$b15.vhd:306$666 ($add).
  creating $macc model for $verific$add_230$b15.vhd:309$686 ($add).
  creating $macc model for $verific$add_235$b15.vhd:311$690 ($add).
  creating $macc model for $verific$add_254$b15.vhd:312$712 ($add).
  creating $macc model for $verific$add_259$b15.vhd:313$716 ($add).
  creating $macc model for $verific$add_278$b15.vhd:314$737 ($add).
  creating $macc model for $verific$add_28$b15.vhd:125$558 ($add).
  creating $macc model for $verific$add_281$b15.vhd:315$738 ($add).
  creating $macc model for $verific$add_284$b15.vhd:318$740 ($add).
  creating $macc model for $verific$add_360$b15.vhd:344$768 ($add).
  creating $macc model for $verific$add_362$b15.vhd:345$770 ($add).
  creating $macc model for $verific$add_383$b15.vhd:360$779 ($add).
  creating $macc model for $verific$add_387$b15.vhd:360$780 ($add).
  creating $macc model for $verific$add_399$b15.vhd:371$788 ($add).
  creating $macc model for $verific$add_403$b15.vhd:371$789 ($add).
  creating $macc model for $verific$add_422$b15.vhd:391$794 ($add).
  creating $macc model for $verific$add_424$b15.vhd:391$797 ($add).
  creating $macc model for $verific$add_426$b15.vhd:391$800 ($add).
  creating $macc model for $verific$add_427$b15.vhd:391$801 ($add).
  creating $macc model for $verific$add_435$b15.vhd:395$804 ($add).
  creating $macc model for $verific$add_477$b15.vhd:430$819 ($add).
  creating $macc model for $verific$add_522$b15.vhd:457$852 ($add).
  creating $macc model for $verific$add_681$b15.vhd:546$886 ($add).
  creating $macc model for $verific$add_689$b15.vhd:552$888 ($add).
  creating $macc model for $verific$add_760$b15.vhd:586$948 ($add).
  creating $macc model for $verific$sub_369$b15.vhd:355$772 ($sub).
  creating $macc model for $verific$sub_378$b15.vhd:357$776 ($sub).
  creating $macc model for $verific$sub_379$b15.vhd:357$777 ($sub).
  creating $macc model for $verific$sub_744$b15.vhd:563$932 ($sub).
  creating $macc model for $verific$sub_767$b15.vhd:589$953 ($sub).
  creating $macc model for $verific$unary_minus_287$b15.vhd:320$743 ($neg).
  creating $macc model for $verific$unary_minus_464$b15.vhd:414$814 ($neg).
  creating $macc model for $verific$unary_minus_756$b15.vhd:580$942 ($neg).
  creating $alu model for $macc $verific$unary_minus_756$b15.vhd:580$942.
  creating $alu model for $macc $verific$unary_minus_464$b15.vhd:414$814.
  creating $alu model for $macc $verific$unary_minus_287$b15.vhd:320$743.
  creating $alu model for $macc $verific$sub_767$b15.vhd:589$953.
  creating $alu model for $macc $verific$sub_744$b15.vhd:563$932.
  creating $alu model for $macc $verific$sub_379$b15.vhd:357$777.
  creating $alu model for $macc $verific$sub_378$b15.vhd:357$776.
  creating $alu model for $macc $verific$sub_369$b15.vhd:355$772.
  creating $alu model for $macc $verific$add_760$b15.vhd:586$948.
  creating $alu model for $macc $verific$add_689$b15.vhd:552$888.
  creating $alu model for $macc $verific$add_681$b15.vhd:546$886.
  creating $alu model for $macc $verific$add_522$b15.vhd:457$852.
  creating $alu model for $macc $verific$add_477$b15.vhd:430$819.
  creating $alu model for $macc $verific$add_435$b15.vhd:395$804.
  creating $alu model for $macc $verific$add_427$b15.vhd:391$801.
  creating $alu model for $macc $verific$add_426$b15.vhd:391$800.
  creating $alu model for $macc $verific$add_424$b15.vhd:391$797.
  creating $alu model for $macc $verific$add_422$b15.vhd:391$794.
  creating $alu model for $macc $verific$add_403$b15.vhd:371$789.
  creating $alu model for $macc $verific$add_399$b15.vhd:371$788.
  creating $alu model for $macc $verific$add_387$b15.vhd:360$780.
  creating $alu model for $macc $verific$add_383$b15.vhd:360$779.
  creating $alu model for $macc $verific$add_362$b15.vhd:345$770.
  creating $alu model for $macc $verific$add_360$b15.vhd:344$768.
  creating $alu model for $macc $verific$add_284$b15.vhd:318$740.
  creating $alu model for $macc $verific$add_281$b15.vhd:315$738.
  creating $alu model for $macc $verific$add_28$b15.vhd:125$558.
  creating $alu model for $macc $verific$add_278$b15.vhd:314$737.
  creating $alu model for $macc $verific$add_259$b15.vhd:313$716.
  creating $alu model for $macc $verific$add_254$b15.vhd:312$712.
  creating $alu model for $macc $verific$add_235$b15.vhd:311$690.
  creating $alu model for $macc $verific$add_230$b15.vhd:309$686.
  creating $alu model for $macc $verific$add_210$b15.vhd:306$666.
  creating $alu model for $macc $verific$add_113$b15.vhd:197$608.
  creating $alu model for $verific$LessThan_286$b15.vhd:319$742 ($lt): new $alu
  creating $alu model for $verific$LessThan_370$b15.vhd:355$773 ($le): new $alu
  creating $alu model for $verific$LessThan_373$b15.vhd:356$775 ($lt): new $alu
  creating $alu model for $verific$LessThan_397$b15.vhd:370$787 ($le): new $alu
  creating $alu model for $verific$LessThan_462$b15.vhd:412$812 ($le): new $alu
  creating $alu model for $verific$LessThan_463$b15.vhd:413$813 ($lt): new $alu
  creating $alu model for $verific$LessThan_742$b15.vhd:563$930 ($lt): new $alu
  creating $alu model for $verific$LessThan_745$b15.vhd:563$933 ($lt): new $alu
  creating $alu model for $verific$LessThan_755$b15.vhd:579$941 ($lt): new $alu
  creating $alu model for $verific$LessThan_768$b15.vhd:589$954 ($lt): new $alu
  creating $alu model for $verific$LessThan_771$b15.vhd:597$956 ($le): new $alu
  creating $alu cell for $verific$LessThan_771$b15.vhd:597$956: $auto$alumacc.cc:485:replace_alu$1426
  creating $alu cell for $verific$LessThan_768$b15.vhd:589$954: $auto$alumacc.cc:485:replace_alu$1435
  creating $alu cell for $verific$LessThan_755$b15.vhd:579$941: $auto$alumacc.cc:485:replace_alu$1440
  creating $alu cell for $verific$LessThan_745$b15.vhd:563$933: $auto$alumacc.cc:485:replace_alu$1445
  creating $alu cell for $verific$LessThan_742$b15.vhd:563$930: $auto$alumacc.cc:485:replace_alu$1450
  creating $alu cell for $verific$LessThan_463$b15.vhd:413$813: $auto$alumacc.cc:485:replace_alu$1461
  creating $alu cell for $verific$LessThan_462$b15.vhd:412$812: $auto$alumacc.cc:485:replace_alu$1466
  creating $alu cell for $verific$LessThan_397$b15.vhd:370$787: $auto$alumacc.cc:485:replace_alu$1479
  creating $alu cell for $verific$LessThan_373$b15.vhd:356$775: $auto$alumacc.cc:485:replace_alu$1492
  creating $alu cell for $verific$LessThan_370$b15.vhd:355$773: $auto$alumacc.cc:485:replace_alu$1497
  creating $alu cell for $verific$LessThan_286$b15.vhd:319$742: $auto$alumacc.cc:485:replace_alu$1510
  creating $alu cell for $verific$add_113$b15.vhd:197$608: $auto$alumacc.cc:485:replace_alu$1515
  creating $alu cell for $verific$add_210$b15.vhd:306$666: $auto$alumacc.cc:485:replace_alu$1518
  creating $alu cell for $verific$add_230$b15.vhd:309$686: $auto$alumacc.cc:485:replace_alu$1521
  creating $alu cell for $verific$add_235$b15.vhd:311$690: $auto$alumacc.cc:485:replace_alu$1524
  creating $alu cell for $verific$add_254$b15.vhd:312$712: $auto$alumacc.cc:485:replace_alu$1527
  creating $alu cell for $verific$add_259$b15.vhd:313$716: $auto$alumacc.cc:485:replace_alu$1530
  creating $alu cell for $verific$add_278$b15.vhd:314$737: $auto$alumacc.cc:485:replace_alu$1533
  creating $alu cell for $verific$add_28$b15.vhd:125$558: $auto$alumacc.cc:485:replace_alu$1536
  creating $alu cell for $verific$add_281$b15.vhd:315$738: $auto$alumacc.cc:485:replace_alu$1539
  creating $alu cell for $verific$add_284$b15.vhd:318$740: $auto$alumacc.cc:485:replace_alu$1542
  creating $alu cell for $verific$add_360$b15.vhd:344$768: $auto$alumacc.cc:485:replace_alu$1545
  creating $alu cell for $verific$add_362$b15.vhd:345$770: $auto$alumacc.cc:485:replace_alu$1548
  creating $alu cell for $verific$add_383$b15.vhd:360$779: $auto$alumacc.cc:485:replace_alu$1551
  creating $alu cell for $verific$add_387$b15.vhd:360$780: $auto$alumacc.cc:485:replace_alu$1554
  creating $alu cell for $verific$add_399$b15.vhd:371$788: $auto$alumacc.cc:485:replace_alu$1557
  creating $alu cell for $verific$add_403$b15.vhd:371$789: $auto$alumacc.cc:485:replace_alu$1560
  creating $alu cell for $verific$add_422$b15.vhd:391$794: $auto$alumacc.cc:485:replace_alu$1563
  creating $alu cell for $verific$add_424$b15.vhd:391$797: $auto$alumacc.cc:485:replace_alu$1566
  creating $alu cell for $verific$add_426$b15.vhd:391$800: $auto$alumacc.cc:485:replace_alu$1569
  creating $alu cell for $verific$add_427$b15.vhd:391$801: $auto$alumacc.cc:485:replace_alu$1572
  creating $alu cell for $verific$add_435$b15.vhd:395$804: $auto$alumacc.cc:485:replace_alu$1575
  creating $alu cell for $verific$add_477$b15.vhd:430$819: $auto$alumacc.cc:485:replace_alu$1578
  creating $alu cell for $verific$add_522$b15.vhd:457$852: $auto$alumacc.cc:485:replace_alu$1581
  creating $alu cell for $verific$add_681$b15.vhd:546$886: $auto$alumacc.cc:485:replace_alu$1584
  creating $alu cell for $verific$add_689$b15.vhd:552$888: $auto$alumacc.cc:485:replace_alu$1587
  creating $alu cell for $verific$add_760$b15.vhd:586$948: $auto$alumacc.cc:485:replace_alu$1590
  creating $alu cell for $verific$sub_369$b15.vhd:355$772: $auto$alumacc.cc:485:replace_alu$1593
  creating $alu cell for $verific$sub_378$b15.vhd:357$776: $auto$alumacc.cc:485:replace_alu$1596
  creating $alu cell for $verific$sub_379$b15.vhd:357$777: $auto$alumacc.cc:485:replace_alu$1599
  creating $alu cell for $verific$sub_744$b15.vhd:563$932: $auto$alumacc.cc:485:replace_alu$1602
  creating $alu cell for $verific$sub_767$b15.vhd:589$953: $auto$alumacc.cc:485:replace_alu$1605
  creating $alu cell for $verific$unary_minus_287$b15.vhd:320$743: $auto$alumacc.cc:485:replace_alu$1608
  creating $alu cell for $verific$unary_minus_464$b15.vhd:414$814: $auto$alumacc.cc:485:replace_alu$1611
  creating $alu cell for $verific$unary_minus_756$b15.vhd:580$942: $auto$alumacc.cc:485:replace_alu$1614
  created 45 $alu and 0 $macc cells.

19. Executing OPT pass (performing simple optimizations).

19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~7 debug messages>

19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~97 debug messages>

19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$1327: { $verific$n7997$111 $verific$n7996$110 $verific$n7995$109 $verific$n7994$108 $verific$n7993$107 $verific$n7992$106 $verific$n7991$105 $verific$n7990$104 $verific$n7989$103 $verific$n7988$102 $verific$n7986$100 $verific$n7984$98 $verific$n7983$97 $verific$n7982$96 $verific$n7981$95 $verific$n7980$94 $verific$n7979$93 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$1275: { $auto$rtlil.cc:2393:Or$1264 $verific$n7990$104 $verific$n7989$103 $verific$n7988$102 $verific$n7987$101 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$1299: { $auto$rtlil.cc:2393:Or$1264 $verific$n7990$104 $verific$n7989$103 $verific$n7988$102 }
  Optimizing cells in module \b15.
Performed a total of 3 changes.

19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

19.6. Executing OPT_DFF pass (perform DFF optimizations).

19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 5 unused cells and 21 unused wires.
<suppressed ~6 debug messages>

19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

19.9. Rerunning OPT passes. (Maybe there is more to do..)

19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~97 debug messages>

19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

19.13. Executing OPT_DFF pass (perform DFF optimizations).

19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

19.16. Finished OPT passes. (There is nothing left to do.)

20. Executing MEMORY pass.

20.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

20.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

20.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

20.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

20.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

20.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

20.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

20.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

20.9. Executing MEMORY_COLLECT pass (generating $mem cells).

21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

22. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~2 debug messages>

23. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping b15.$auto$alumacc.cc:520:replace_alu$1433 ($reduce_or).
Mapping b15.$auto$alumacc.cc:520:replace_alu$1477 ($reduce_or).
Mapping b15.$auto$alumacc.cc:520:replace_alu$1490 ($reduce_or).
Mapping b15.$auto$alumacc.cc:520:replace_alu$1508 ($reduce_or).
Mapping b15.$auto$alumacc.cc:67:get_gt$1457 ($or).
Mapping b15.$auto$alumacc.cc:67:get_gt$1473 ($or).
Mapping b15.$auto$alumacc.cc:67:get_gt$1486 ($or).
Mapping b15.$auto$alumacc.cc:67:get_gt$1504 ($or).
Mapping b15.$auto$alumacc.cc:68:get_gt$1475 ($not).
Mapping b15.$auto$alumacc.cc:68:get_gt$1488 ($not).
Mapping b15.$auto$alumacc.cc:68:get_gt$1506 ($not).
Mapping b15.$auto$alumacc.cc:75:get_eq$1431 ($reduce_and).
Mapping b15.$auto$alumacc.cc:75:get_eq$1455 ($reduce_and).
Mapping b15.$auto$alumacc.cc:75:get_eq$1471 ($reduce_and).
Mapping b15.$auto$alumacc.cc:75:get_eq$1484 ($reduce_and).
Mapping b15.$auto$alumacc.cc:75:get_eq$1502 ($reduce_and).
Mapping b15.$auto$alumacc.cc:89:get_cf$1429 ($not).
Mapping b15.$auto$alumacc.cc:89:get_cf$1438 ($not).
Mapping b15.$auto$alumacc.cc:89:get_cf$1448 ($not).
Mapping b15.$auto$alumacc.cc:89:get_cf$1453 ($not).
Mapping b15.$auto$alumacc.cc:89:get_cf$1469 ($not).
Mapping b15.$auto$alumacc.cc:89:get_cf$1482 ($not).
Mapping b15.$auto$alumacc.cc:89:get_cf$1500 ($not).
Mapping b15.$auto$ff.cc:262:slice$1142 ($adffe).
Mapping b15.$auto$ff.cc:262:slice$1147 ($adff).
Mapping b15.$auto$ff.cc:262:slice$1148 ($adff).
Mapping b15.$auto$ff.cc:262:slice$1149 ($adff).
Mapping b15.$auto$ff.cc:262:slice$1150 ($adff).
Mapping b15.$auto$opt_reduce.cc:128:opt_pmux$1090 ($reduce_or).
Mapping b15.$auto$opt_reduce.cc:128:opt_pmux$1100 ($reduce_or).
Mapping b15.$auto$opt_reduce.cc:128:opt_pmux$1102 ($reduce_or).
Mapping b15.$auto$opt_reduce.cc:128:opt_pmux$1110 ($reduce_or).
Mapping b15.$auto$opt_reduce.cc:128:opt_pmux$1114 ($reduce_or).
Mapping b15.$auto$opt_reduce.cc:128:opt_pmux$1116 ($reduce_or).
Mapping b15.$auto$opt_reduce.cc:128:opt_pmux$1118 ($reduce_or).
Mapping b15.$auto$opt_reduce.cc:128:opt_pmux$1120 ($reduce_or).
Mapping b15.$auto$opt_reduce.cc:128:opt_pmux$1122 ($reduce_or).
Mapping b15.$auto$opt_reduce.cc:128:opt_pmux$1124 ($reduce_or).
Mapping b15.$auto$opt_reduce.cc:128:opt_pmux$1126 ($reduce_or).
Mapping b15.$auto$opt_reduce.cc:128:opt_pmux$1128 ($reduce_or).
Mapping b15.$auto$opt_reduce.cc:128:opt_pmux$1130 ($reduce_or).
Mapping b15.$auto$opt_reduce.cc:128:opt_pmux$1132 ($reduce_or).
Mapping b15.$auto$opt_reduce.cc:128:opt_pmux$1136 ($reduce_or).
Mapping b15.$auto$opt_reduce.cc:128:opt_pmux$1138 ($reduce_or).
Mapping b15.$auto$opt_reduce.cc:128:opt_pmux$1140 ($reduce_or).
Mapping b15.$auto$pmuxtree.cc:35:or_generator$1191 ($or).
Mapping b15.$auto$pmuxtree.cc:35:or_generator$1219 ($or).
Mapping b15.$auto$pmuxtree.cc:35:or_generator$1243 ($or).
Mapping b15.$auto$pmuxtree.cc:35:or_generator$1263 ($or).
Mapping b15.$auto$pmuxtree.cc:35:or_generator$1271 ($or).
Mapping b15.$auto$pmuxtree.cc:35:or_generator$1295 ($or).
Mapping b15.$auto$pmuxtree.cc:35:or_generator$1311 ($or).
Mapping b15.$auto$pmuxtree.cc:35:or_generator$1339 ($or).
Mapping b15.$auto$pmuxtree.cc:35:or_generator$1353 ($or).
Mapping b15.$auto$pmuxtree.cc:35:or_generator$1365 ($or).
Mapping b15.$auto$pmuxtree.cc:35:or_generator$1389 ($or).
Mapping b15.$auto$pmuxtree.cc:35:or_generator$1411 ($or).
Mapping b15.$auto$pmuxtree.cc:37:or_generator$1275 ($reduce_or).
Mapping b15.$auto$pmuxtree.cc:37:or_generator$1299 ($reduce_or).
Mapping b15.$auto$pmuxtree.cc:37:or_generator$1327 ($reduce_or).
Mapping b15.$auto$pmuxtree.cc:65:recursive_mux_generator$1185 ($mux).
Mapping b15.$auto$pmuxtree.cc:65:recursive_mux_generator$1187 ($mux).
Mapping b15.$auto$pmuxtree.cc:65:recursive_mux_generator$1189 ($mux).
Mapping b15.$auto$pmuxtree.cc:65:recursive_mux_generator$1193 ($mux).
Mapping b15.$auto$pmuxtree.cc:65:recursive_mux_generator$1199 ($mux).
Mapping b15.$auto$pmuxtree.cc:65:recursive_mux_generator$1201 ($mux).
Mapping b15.$auto$pmuxtree.cc:65:recursive_mux_generator$1203 ($mux).
Mapping b15.$auto$pmuxtree.cc:65:recursive_mux_generator$1207 ($mux).
Mapping b15.$auto$pmuxtree.cc:65:recursive_mux_generator$1213 ($mux).
Mapping b15.$auto$pmuxtree.cc:65:recursive_mux_generator$1215 ($mux).
Mapping b15.$auto$pmuxtree.cc:65:recursive_mux_generator$1217 ($mux).
Mapping b15.$auto$pmuxtree.cc:65:recursive_mux_generator$1221 ($mux).
Mapping b15.$auto$pmuxtree.cc:65:recursive_mux_generator$1227 ($mux).
Mapping b15.$auto$pmuxtree.cc:65:recursive_mux_generator$1229 ($mux).
Mapping b15.$auto$pmuxtree.cc:65:recursive_mux_generator$1233 ($mux).
Mapping b15.$auto$pmuxtree.cc:65:recursive_mux_generator$1239 ($mux).
Mapping b15.$auto$pmuxtree.cc:65:recursive_mux_generator$1241 ($mux).
Mapping b15.$auto$pmuxtree.cc:65:recursive_mux_generator$1245 ($mux).
Mapping b15.$auto$pmuxtree.cc:65:recursive_mux_generator$1251 ($mux).
Mapping b15.$auto$pmuxtree.cc:65:recursive_mux_generator$1253 ($mux).
Mapping b15.$auto$pmuxtree.cc:65:recursive_mux_generator$1259 ($mux).
Mapping b15.$auto$pmuxtree.cc:65:recursive_mux_generator$1261 ($mux).
Mapping b15.$auto$pmuxtree.cc:65:recursive_mux_generator$1265 ($mux).
Mapping b15.$auto$pmuxtree.cc:65:recursive_mux_generator$1267 ($mux).
Mapping b15.$auto$pmuxtree.cc:65:recursive_mux_generator$1269 ($mux).
Mapping b15.$auto$pmuxtree.cc:65:recursive_mux_generator$1273 ($mux).
Mapping b15.$auto$pmuxtree.cc:65:recursive_mux_generator$1277 ($mux).
Mapping b15.$auto$pmuxtree.cc:65:recursive_mux_generator$1283 ($mux).
Mapping b15.$auto$pmuxtree.cc:65:recursive_mux_generator$1285 ($mux).
Mapping b15.$auto$pmuxtree.cc:65:recursive_mux_generator$1289 ($mux).
Mapping b15.$auto$pmuxtree.cc:65:recursive_mux_generator$1291 ($mux).
Mapping b15.$auto$pmuxtree.cc:65:recursive_mux_generator$1293 ($mux).
Mapping b15.$auto$pmuxtree.cc:65:recursive_mux_generator$1297 ($mux).
Mapping b15.$auto$pmuxtree.cc:65:recursive_mux_generator$1301 ($mux).
Mapping b15.$auto$pmuxtree.cc:65:recursive_mux_generator$1307 ($mux).
Mapping b15.$auto$pmuxtree.cc:65:recursive_mux_generator$1309 ($mux).
Mapping b15.$auto$pmuxtree.cc:65:recursive_mux_generator$1313 ($mux).
Mapping b15.$auto$pmuxtree.cc:65:recursive_mux_generator$1319 ($mux).
Mapping b15.$auto$pmuxtree.cc:65:recursive_mux_generator$1321 ($mux).
Mapping b15.$auto$pmuxtree.cc:65:recursive_mux_generator$1323 ($mux).
Mapping b15.$auto$pmuxtree.cc:65:recursive_mux_generator$1325 ($mux).
Mapping b15.$auto$pmuxtree.cc:65:recursive_mux_generator$1329 ($mux).
Mapping b15.$auto$pmuxtree.cc:65:recursive_mux_generator$1335 ($mux).
Mapping b15.$auto$pmuxtree.cc:65:recursive_mux_generator$1337 ($mux).
Mapping b15.$auto$pmuxtree.cc:65:recursive_mux_generator$1341 ($mux).
Mapping b15.$auto$pmuxtree.cc:65:recursive_mux_generator$1347 ($mux).
Mapping b15.$auto$pmuxtree.cc:65:recursive_mux_generator$1349 ($mux).
Mapping b15.$auto$pmuxtree.cc:65:recursive_mux_generator$1351 ($mux).
Mapping b15.$auto$pmuxtree.cc:65:recursive_mux_generator$1355 ($mux).
Mapping b15.$auto$pmuxtree.cc:65:recursive_mux_generator$1361 ($mux).
Mapping b15.$auto$pmuxtree.cc:65:recursive_mux_generator$1363 ($mux).
Mapping b15.$auto$pmuxtree.cc:65:recursive_mux_generator$1367 ($mux).
Mapping b15.$auto$pmuxtree.cc:65:recursive_mux_generator$1373 ($mux).
Mapping b15.$auto$pmuxtree.cc:65:recursive_mux_generator$1375 ($mux).
Mapping b15.$auto$pmuxtree.cc:65:recursive_mux_generator$1379 ($mux).
Mapping b15.$auto$pmuxtree.cc:65:recursive_mux_generator$1385 ($mux).
Mapping b15.$auto$pmuxtree.cc:65:recursive_mux_generator$1387 ($mux).
Mapping b15.$auto$pmuxtree.cc:65:recursive_mux_generator$1391 ($mux).
Mapping b15.$auto$pmuxtree.cc:65:recursive_mux_generator$1397 ($mux).
Mapping b15.$auto$pmuxtree.cc:65:recursive_mux_generator$1399 ($mux).
Mapping b15.$auto$pmuxtree.cc:65:recursive_mux_generator$1407 ($mux).
Mapping b15.$auto$pmuxtree.cc:65:recursive_mux_generator$1409 ($mux).
Mapping b15.$auto$pmuxtree.cc:65:recursive_mux_generator$1413 ($mux).
Mapping b15.$verific$ADS_n_reg$b15.vhd:231$640 ($adff).
Mapping b15.$verific$Address_reg$b15.vhd:231$636 ($adff).
Mapping b15.$verific$BE_n_reg$b15.vhd:231$635 ($adff).
Mapping b15.$verific$CodeFetch_reg$b15.vhd:612$1052 ($adff).
Mapping b15.$verific$D_C_n_reg$b15.vhd:231$638 ($adff).
Mapping b15.$verific$EAX_reg$b15.vhd:612$1055 ($adff).
Mapping b15.$verific$EBX_reg$b15.vhd:612$1056 ($adff).
Mapping b15.$verific$M_IO_n_reg$b15.vhd:231$639 ($adff).
Mapping b15.$verific$MemoryFetch_reg$b15.vhd:612$1060 ($adff).
Mapping b15.$verific$Mux_151$b15.vhd:230$625 ($bmux).
Mapping b15.$verific$Mux_152$b15.vhd:230$626 ($bmux).
Mapping b15.$verific$Mux_155$b15.vhd:230$629 ($bmux).
Mapping b15.$verific$Mux_159$b15.vhd:230$633 ($bmux).
Mapping b15.$verific$Mux_160$b15.vhd:230$634 ($bmux).
Mapping b15.$verific$Mux_819$b15.vhd:611$998 ($bmux).
Mapping b15.$verific$Mux_820$b15.vhd:611$999 ($bmux).
Mapping b15.$verific$Mux_821$b15.vhd:611$1000 ($bmux).
Mapping b15.$verific$Mux_822$b15.vhd:611$1001 ($bmux).
Mapping b15.$verific$Mux_841$b15.vhd:611$1020 ($bmux).
Mapping b15.$verific$Mux_842$b15.vhd:611$1021 ($bmux).
Mapping b15.$verific$P1.Flush_reg$b15.vhd:612$1049 ($adff).
Mapping b15.$verific$P1.InstAddrPointer_reg$b15.vhd:612$1046 ($adff).
Mapping b15.$verific$P1.InstQueue_reg$b15.vhd:612$1043 ($adff).
Mapping b15.$verific$P1.InstQueue_reg_10$b15.vhd:612$1036 ($adff).
Mapping b15.$verific$P1.InstQueue_reg_11$b15.vhd:612$1037 ($adff).
Mapping b15.$verific$P1.InstQueue_reg_12$b15.vhd:612$1038 ($adff).
Mapping b15.$verific$P1.InstQueue_reg_13$b15.vhd:612$1039 ($adff).
Mapping b15.$verific$P1.InstQueue_reg_14$b15.vhd:612$1040 ($adff).
Mapping b15.$verific$P1.InstQueue_reg_15$b15.vhd:612$1041 ($adff).
Mapping b15.$verific$P1.InstQueue_reg_16$b15.vhd:612$1042 ($adff).
Mapping b15.$verific$P1.InstQueue_reg_2$b15.vhd:612$1028 ($adff).
Mapping b15.$verific$P1.InstQueue_reg_3$b15.vhd:612$1029 ($adff).
Mapping b15.$verific$P1.InstQueue_reg_4$b15.vhd:612$1030 ($adff).
Mapping b15.$verific$P1.InstQueue_reg_5$b15.vhd:612$1031 ($adff).
Mapping b15.$verific$P1.InstQueue_reg_6$b15.vhd:612$1032 ($adff).
Mapping b15.$verific$P1.InstQueue_reg_7$b15.vhd:612$1033 ($adff).
Mapping b15.$verific$P1.InstQueue_reg_8$b15.vhd:612$1034 ($adff).
Mapping b15.$verific$P1.InstQueue_reg_9$b15.vhd:612$1035 ($adff).
Mapping b15.$verific$P1.More_reg$b15.vhd:612$1048 ($adff).
Mapping b15.$verific$P1.PhyAddrPointer_reg$b15.vhd:612$1047 ($adff).
Mapping b15.$verific$P1.State2_reg$b15.vhd:612$1027 ($adff).
Mapping b15.$verific$P1.lWord_reg$b15.vhd:612$1050 ($adff).
Mapping b15.$verific$P1.uWord_reg$b15.vhd:612$1051 ($adff).
Mapping b15.$verific$ReadRequest_reg$b15.vhd:612$1059 ($adff).
Mapping b15.$verific$RequestPending_reg$b15.vhd:612$1061 ($adff).
Mapping b15.$verific$StateBS16_reg$b15.vhd:231$643 ($adff).
Mapping b15.$verific$State_reg$b15.vhd:231$641 ($adff).
Mapping b15.$verific$W_R_n_reg$b15.vhd:231$637 ($adff).
Mapping b15.$verific$equal_528$b15.vhd:462$857 ($eq).
Mapping b15.$verific$equal_529$b15.vhd:462$858 ($eq).
Mapping b15.$verific$equal_701$b15.vhd:343$890 ($eq).
Mapping b15.$verific$equal_702$b15.vhd:348$891 ($eq).
Mapping b15.$verific$equal_703$b15.vhd:354$892 ($eq).
Mapping b15.$verific$equal_704$b15.vhd:369$893 ($eq).
Mapping b15.$verific$equal_705$b15.vhd:379$894 ($eq).
Mapping b15.$verific$equal_706$b15.vhd:384$895 ($eq).
Mapping b15.$verific$equal_707$b15.vhd:389$896 ($eq).
Mapping b15.$verific$equal_708$b15.vhd:400$897 ($eq).
Mapping b15.$verific$equal_709$b15.vhd:411$898 ($eq).
Mapping b15.$verific$equal_710$b15.vhd:449$899 ($eq).
Mapping b15.$verific$equal_711$b15.vhd:484$900 ($eq).
Mapping b15.$verific$equal_712$b15.vhd:503$901 ($eq).
Mapping b15.$verific$equal_713$b15.vhd:525$902 ($eq).
Mapping b15.$verific$equal_714$b15.vhd:530$903 ($eq).
Mapping b15.$verific$equal_715$b15.vhd:535$904 ($eq).
Mapping b15.$verific$equal_716$b15.vhd:540$905 ($eq).
Mapping b15.$verific$equal_717$b15.vhd:545$906 ($eq).
Mapping b15.$verific$equal_718$b15.vhd:551$907 ($eq).
Mapping b15.$verific$equal_908$b15.vhd:622$1070 ($logic_not).
Mapping b15.$verific$equal_909$b15.vhd:634$1071 ($eq).
Mapping b15.$verific$equal_910$b15.vhd:650$1072 ($eq).
Mapping b15.$verific$i112$b15.vhd:197$607 ($and).
Mapping b15.$verific$i130$b15.vhd:218$615 ($and).
Mapping b15.$verific$i131$b15.vhd:218$616 ($and).
Mapping b15.$verific$i134$b15.vhd:220$617 ($and).
Mapping b15.$verific$i145$b15.vhd:224$620 ($and).
Mapping b15.$verific$i234$b15.vhd:311$689 ($and).
Mapping b15.$verific$i258$b15.vhd:313$715 ($and).
Mapping b15.$verific$i27$b15.vhd:125$557 ($and).
Mapping b15.$verific$i35$b15.vhd:132$562 ($mux).
Mapping b15.$verific$i38$b15.vhd:137$563 ($mux).
Mapping b15.$verific$i42$b15.vhd:142$564 ($not).
Mapping b15.$verific$i43$b15.vhd:142$565 ($and).
Mapping b15.$verific$i44$b15.vhd:142$566 ($and).
Mapping b15.$verific$i46$b15.vhd:144$567 ($and).
Mapping b15.$verific$i47$b15.vhd:146$568 ($or).
Mapping b15.$verific$i48$b15.vhd:146$569 ($not).
Mapping b15.$verific$i49$b15.vhd:146$570 ($and).
Mapping b15.$verific$i492$b15.vhd:444$827 ($mux).
Mapping b15.$verific$i497$b15.vhd:444$832 ($mux).
Mapping b15.$verific$i498$b15.vhd:444$833 ($mux).
Mapping b15.$verific$i50$b15.vhd:146$571 ($and).
Mapping b15.$verific$i502$b15.vhd:448$837 ($mux).
Mapping b15.$verific$i503$b15.vhd:448$838 ($mux).
Mapping b15.$verific$i504$b15.vhd:448$839 ($mux).
Mapping b15.$verific$i505$b15.vhd:448$840 ($mux).
Mapping b15.$verific$i509$b15.vhd:448$844 ($mux).
Mapping b15.$verific$i510$b15.vhd:448$845 ($mux).
Mapping b15.$verific$i521$b15.vhd:457$851 ($and).
Mapping b15.$verific$i531$b15.vhd:462$859 ($or).
Mapping b15.$verific$i54$b15.vhd:148$574 ($and).
Mapping b15.$verific$i55$b15.vhd:148$575 ($and).
Mapping b15.$verific$i554$b15.vhd:478$864 ($mux).
Mapping b15.$verific$i56$b15.vhd:148$576 ($and).
Mapping b15.$verific$i565$b15.vhd:479$868 ($mux).
Mapping b15.$verific$i571$b15.vhd:479$871 ($mux).
Mapping b15.$verific$i572$b15.vhd:479$872 ($mux).
Mapping b15.$verific$i578$b15.vhd:483$875 ($mux).
Mapping b15.$verific$i579$b15.vhd:483$876 ($mux).
Mapping b15.$verific$i58$b15.vhd:150$579 ($not).
Mapping b15.$verific$i584$b15.vhd:483$879 ($mux).
Mapping b15.$verific$i585$b15.vhd:483$880 ($mux).
Mapping b15.$verific$i61$b15.vhd:150$580 ($and).
Mapping b15.$verific$i613$b15.vhd:502$882 ($mux).
Mapping b15.$verific$i62$b15.vhd:150$581 ($and).
Mapping b15.$verific$i64$b15.vhd:152$584 ($and).
Mapping b15.$verific$i646$b15.vhd:520$883 ($mux).
Mapping b15.$verific$i652$b15.vhd:524$884 ($mux).
Mapping b15.$verific$i747$b15.vhd:563$934 ($or).
Mapping b15.$verific$i748$b15.vhd:563$935 ($or).
Mapping b15.$verific$i749$b15.vhd:563$936 ($or).
Mapping b15.$verific$i754$b15.vhd:572$939 ($mux).
Mapping b15.$verific$i82$b15.vhd:167$595 ($and).
Mapping b15.$verific$i83$b15.vhd:167$596 ($and).
Mapping b15.$verific$i87$b15.vhd:169$597 ($or).
Mapping b15.$verific$i88$b15.vhd:169$598 ($and).
Mapping b15.$verific$i944$b15.vhd:368$786 ($not).
Mapping b15.$verific$i947$b15.vhd:410$808 ($not).
Mapping b15.$verific$inv_965$b15.vhd:605$841 ($not).
Mapping b15.$verific$mux_109$b15.vhd:192$605 ($mux).
Mapping b15.$verific$mux_110$b15.vhd:192$606 ($mux).
Mapping b15.$verific$mux_127$b15.vhd:215$614 ($mux).
Mapping b15.$verific$mux_147$b15.vhd:228$621 ($mux).
Mapping b15.$verific$mux_148$b15.vhd:228$622 ($mux).
Mapping b15.$verific$mux_149$b15.vhd:228$623 ($mux).
Mapping b15.$verific$mux_150$b15.vhd:228$624 ($mux).
Mapping b15.$verific$mux_153$b15.vhd:230$627 ($bmux).
Mapping b15.$verific$mux_156$b15.vhd:230$630 ($bmux).
Mapping b15.$verific$mux_157$b15.vhd:230$631 ($bmux).
Mapping b15.$verific$mux_158$b15.vhd:230$632 ($bmux).
Mapping b15.$verific$mux_194$b15.vhd:305$650 ($mux).
Mapping b15.$verific$mux_195$b15.vhd:305$651 ($mux).
Mapping b15.$verific$mux_196$b15.vhd:305$652 ($mux).
Mapping b15.$verific$mux_197$b15.vhd:305$653 ($mux).
Mapping b15.$verific$mux_198$b15.vhd:305$654 ($mux).
Mapping b15.$verific$mux_199$b15.vhd:305$655 ($mux).
Mapping b15.$verific$mux_200$b15.vhd:305$656 ($mux).
Mapping b15.$verific$mux_201$b15.vhd:305$657 ($mux).
Mapping b15.$verific$mux_202$b15.vhd:305$658 ($mux).
Mapping b15.$verific$mux_203$b15.vhd:305$659 ($mux).
Mapping b15.$verific$mux_204$b15.vhd:305$660 ($mux).
Mapping b15.$verific$mux_205$b15.vhd:305$661 ($mux).
Mapping b15.$verific$mux_206$b15.vhd:305$662 ($mux).
Mapping b15.$verific$mux_207$b15.vhd:305$663 ($mux).
Mapping b15.$verific$mux_208$b15.vhd:305$664 ($mux).
Mapping b15.$verific$mux_209$b15.vhd:305$665 ($mux).
Mapping b15.$verific$mux_214$b15.vhd:308$670 ($mux).
Mapping b15.$verific$mux_215$b15.vhd:308$671 ($mux).
Mapping b15.$verific$mux_216$b15.vhd:308$672 ($mux).
Mapping b15.$verific$mux_217$b15.vhd:308$673 ($mux).
Mapping b15.$verific$mux_218$b15.vhd:308$674 ($mux).
Mapping b15.$verific$mux_219$b15.vhd:308$675 ($mux).
Mapping b15.$verific$mux_220$b15.vhd:308$676 ($mux).
Mapping b15.$verific$mux_221$b15.vhd:308$677 ($mux).
Mapping b15.$verific$mux_222$b15.vhd:308$678 ($mux).
Mapping b15.$verific$mux_223$b15.vhd:308$679 ($mux).
Mapping b15.$verific$mux_224$b15.vhd:308$680 ($mux).
Mapping b15.$verific$mux_225$b15.vhd:308$681 ($mux).
Mapping b15.$verific$mux_226$b15.vhd:308$682 ($mux).
Mapping b15.$verific$mux_227$b15.vhd:308$683 ($mux).
Mapping b15.$verific$mux_228$b15.vhd:308$684 ($mux).
Mapping b15.$verific$mux_229$b15.vhd:308$685 ($mux).
Mapping b15.$verific$mux_23$b15.vhd:120$554 ($mux).
Mapping b15.$verific$mux_238$b15.vhd:311$696 ($mux).
Mapping b15.$verific$mux_239$b15.vhd:311$697 ($mux).
Mapping b15.$verific$mux_24$b15.vhd:120$555 ($mux).
Mapping b15.$verific$mux_240$b15.vhd:311$698 ($mux).
Mapping b15.$verific$mux_241$b15.vhd:311$699 ($mux).
Mapping b15.$verific$mux_242$b15.vhd:311$700 ($mux).
Mapping b15.$verific$mux_243$b15.vhd:311$701 ($mux).
Mapping b15.$verific$mux_244$b15.vhd:311$702 ($mux).
Mapping b15.$verific$mux_245$b15.vhd:311$703 ($mux).
Mapping b15.$verific$mux_246$b15.vhd:311$704 ($mux).
Mapping b15.$verific$mux_247$b15.vhd:311$705 ($mux).
Mapping b15.$verific$mux_248$b15.vhd:311$706 ($mux).
Mapping b15.$verific$mux_249$b15.vhd:311$707 ($mux).
Mapping b15.$verific$mux_250$b15.vhd:311$708 ($mux).
Mapping b15.$verific$mux_251$b15.vhd:311$709 ($mux).
Mapping b15.$verific$mux_252$b15.vhd:311$710 ($mux).
Mapping b15.$verific$mux_253$b15.vhd:311$711 ($mux).
Mapping b15.$verific$mux_262$b15.vhd:313$721 ($mux).
Mapping b15.$verific$mux_263$b15.vhd:313$722 ($mux).
Mapping b15.$verific$mux_264$b15.vhd:313$723 ($mux).
Mapping b15.$verific$mux_265$b15.vhd:313$724 ($mux).
Mapping b15.$verific$mux_266$b15.vhd:313$725 ($mux).
Mapping b15.$verific$mux_267$b15.vhd:313$726 ($mux).
Mapping b15.$verific$mux_268$b15.vhd:313$727 ($mux).
Mapping b15.$verific$mux_269$b15.vhd:313$728 ($mux).
Mapping b15.$verific$mux_270$b15.vhd:313$729 ($mux).
Mapping b15.$verific$mux_271$b15.vhd:313$730 ($mux).
Mapping b15.$verific$mux_272$b15.vhd:313$731 ($mux).
Mapping b15.$verific$mux_273$b15.vhd:313$732 ($mux).
Mapping b15.$verific$mux_274$b15.vhd:313$733 ($mux).
Mapping b15.$verific$mux_275$b15.vhd:313$734 ($mux).
Mapping b15.$verific$mux_276$b15.vhd:313$735 ($mux).
Mapping b15.$verific$mux_277$b15.vhd:313$736 ($mux).
Mapping b15.$verific$mux_290$b15.vhd:323$746 ($mux).
Mapping b15.$verific$mux_291$b15.vhd:325$747 ($mux).
Mapping b15.$verific$mux_292$b15.vhd:325$748 ($mux).
Mapping b15.$verific$mux_293$b15.vhd:325$749 ($mux).
Mapping b15.$verific$mux_294$b15.vhd:325$750 ($mux).
Mapping b15.$verific$mux_295$b15.vhd:325$751 ($mux).
Mapping b15.$verific$mux_296$b15.vhd:325$752 ($mux).
Mapping b15.$verific$mux_297$b15.vhd:325$753 ($mux).
Mapping b15.$verific$mux_298$b15.vhd:325$754 ($mux).
Mapping b15.$verific$mux_299$b15.vhd:325$755 ($mux).
Mapping b15.$verific$mux_300$b15.vhd:325$756 ($mux).
Mapping b15.$verific$mux_301$b15.vhd:325$757 ($mux).
Mapping b15.$verific$mux_302$b15.vhd:325$758 ($mux).
Mapping b15.$verific$mux_303$b15.vhd:325$759 ($mux).
Mapping b15.$verific$mux_304$b15.vhd:325$760 ($mux).
Mapping b15.$verific$mux_305$b15.vhd:325$761 ($mux).
Mapping b15.$verific$mux_306$b15.vhd:325$762 ($mux).
Mapping b15.$verific$mux_307$b15.vhd:325$763 ($mux).
Mapping b15.$verific$mux_308$b15.vhd:325$764 ($mux).
Mapping b15.$verific$mux_310$b15.vhd:325$765 ($mux).
Mapping b15.$verific$mux_358$b15.vhd:342$767 ($bmux).
Mapping b15.$verific$mux_372$b15.vhd:356$774 ($bmux).
Mapping b15.$verific$mux_390$b15.vhd:362$782 ($mux).
Mapping b15.$verific$mux_392$b15.vhd:368$784 ($mux).
Mapping b15.$verific$mux_393$b15.vhd:368$785 ($mux).
Mapping b15.$verific$mux_406$b15.vhd:378$792 ($mux).
Mapping b15.$verific$mux_423$b15.vhd:391$796 ($bmux).
Mapping b15.$verific$mux_425$b15.vhd:391$799 ($bmux).
Mapping b15.$verific$mux_428$b15.vhd:391$802 ($bmux).
Mapping b15.$verific$mux_437$b15.vhd:399$807 ($mux).
Mapping b15.$verific$mux_440$b15.vhd:399$809 ($mux).
Mapping b15.$verific$mux_457$b15.vhd:410$811 ($mux).
Mapping b15.$verific$mux_467$b15.vhd:417$817 ($mux).
Mapping b15.$verific$mux_483$b15.vhd:436$823 ($mux).
Mapping b15.$verific$mux_492$b15.vhd:444$828 ($mux).
Mapping b15.$verific$mux_493$b15.vhd:444$829 ($mux).
Mapping b15.$verific$mux_494$b15.vhd:444$830 ($mux).
Mapping b15.$verific$mux_498$b15.vhd:444$834 ($mux).
Mapping b15.$verific$mux_542$b15.vhd:473$861 ($mux).
Mapping b15.$verific$mux_547$b15.vhd:473$863 ($mux).
Mapping b15.$verific$mux_554$b15.vhd:478$865 ($mux).
Mapping b15.$verific$mux_558$b15.vhd:478$866 ($mux).
Mapping b15.$verific$mux_565$b15.vhd:479$869 ($mux).
Mapping b15.$verific$mux_569$b15.vhd:479$870 ($mux).
Mapping b15.$verific$mux_572$b15.vhd:479$873 ($mux).
Mapping b15.$verific$mux_573$b15.vhd:479$874 ($mux).
Mapping b15.$verific$mux_582$b15.vhd:483$878 ($mux).
Mapping b15.$verific$mux_66$b15.vhd:156$585 ($mux).
Mapping b15.$verific$mux_67$b15.vhd:156$586 ($mux).
Mapping b15.$verific$mux_68$b15.vhd:156$587 ($mux).
Mapping b15.$verific$mux_69$b15.vhd:156$588 ($mux).
Mapping b15.$verific$mux_70$b15.vhd:156$589 ($mux).
Mapping b15.$verific$mux_71$b15.vhd:156$590 ($mux).
Mapping b15.$verific$mux_749$b15.vhd:565$937 ($mux).
Mapping b15.$verific$mux_754$b15.vhd:572$940 ($mux).
Mapping b15.$verific$mux_759$b15.vhd:585$946 ($mux).
Mapping b15.$verific$mux_764$b15.vhd:587$950 ($mux).
Mapping b15.$verific$mux_765$b15.vhd:588$951 ($mux).
Mapping b15.$verific$mux_766$b15.vhd:588$952 ($mux).
Mapping b15.$verific$mux_770$b15.vhd:594$955 ($mux).
Mapping b15.$verific$mux_775$b15.vhd:598$958 ($mux).
Mapping b15.$verific$mux_776$b15.vhd:598$959 ($mux).
Mapping b15.$verific$mux_777$b15.vhd:598$960 ($mux).
Mapping b15.$verific$mux_778$b15.vhd:598$961 ($mux).
Mapping b15.$verific$mux_779$b15.vhd:598$962 ($mux).
Mapping b15.$verific$mux_780$b15.vhd:598$963 ($mux).
Mapping b15.$verific$mux_781$b15.vhd:598$964 ($mux).
Mapping b15.$verific$mux_782$b15.vhd:598$965 ($mux).
Mapping b15.$verific$mux_783$b15.vhd:598$966 ($mux).
Mapping b15.$verific$mux_784$b15.vhd:598$967 ($mux).
Mapping b15.$verific$mux_785$b15.vhd:598$968 ($mux).
Mapping b15.$verific$mux_786$b15.vhd:598$969 ($mux).
Mapping b15.$verific$mux_787$b15.vhd:598$970 ($mux).
Mapping b15.$verific$mux_788$b15.vhd:598$971 ($mux).
Mapping b15.$verific$mux_789$b15.vhd:598$972 ($mux).
Mapping b15.$verific$mux_790$b15.vhd:598$973 ($mux).
Mapping b15.$verific$mux_795$b15.vhd:605$975 ($mux).
Mapping b15.$verific$mux_796$b15.vhd:605$976 ($mux).
Mapping b15.$verific$mux_797$b15.vhd:605$977 ($mux).
Mapping b15.$verific$mux_798$b15.vhd:605$978 ($mux).
Mapping b15.$verific$mux_799$b15.vhd:605$979 ($mux).
Mapping b15.$verific$mux_800$b15.vhd:605$980 ($mux).
Mapping b15.$verific$mux_801$b15.vhd:605$981 ($mux).
Mapping b15.$verific$mux_802$b15.vhd:605$982 ($mux).
Mapping b15.$verific$mux_803$b15.vhd:605$983 ($mux).
Mapping b15.$verific$mux_804$b15.vhd:605$984 ($mux).
Mapping b15.$verific$mux_805$b15.vhd:605$985 ($mux).
Mapping b15.$verific$mux_806$b15.vhd:605$986 ($mux).
Mapping b15.$verific$mux_807$b15.vhd:605$987 ($mux).
Mapping b15.$verific$mux_808$b15.vhd:605$988 ($mux).
Mapping b15.$verific$mux_809$b15.vhd:605$989 ($mux).
Mapping b15.$verific$mux_810$b15.vhd:605$990 ($mux).
Mapping b15.$verific$mux_811$b15.vhd:605$991 ($mux).
Mapping b15.$verific$mux_812$b15.vhd:605$992 ($mux).
Mapping b15.$verific$mux_815$b15.vhd:611$994 ($bmux).
Mapping b15.$verific$mux_816$b15.vhd:611$995 ($bmux).
Mapping b15.$verific$mux_817$b15.vhd:611$996 ($bmux).
Mapping b15.$verific$mux_818$b15.vhd:611$997 ($bmux).
Mapping b15.$verific$mux_823$b15.vhd:611$1002 ($bmux).
Mapping b15.$verific$mux_824$b15.vhd:611$1003 ($bmux).
Mapping b15.$verific$mux_825$b15.vhd:611$1004 ($bmux).
Mapping b15.$verific$mux_826$b15.vhd:611$1005 ($bmux).
Mapping b15.$verific$mux_827$b15.vhd:611$1006 ($bmux).
Mapping b15.$verific$mux_828$b15.vhd:611$1007 ($bmux).
Mapping b15.$verific$mux_829$b15.vhd:611$1008 ($bmux).
Mapping b15.$verific$mux_830$b15.vhd:611$1009 ($bmux).
Mapping b15.$verific$mux_831$b15.vhd:611$1010 ($bmux).
Mapping b15.$verific$mux_832$b15.vhd:611$1011 ($bmux).
Mapping b15.$verific$mux_833$b15.vhd:611$1012 ($bmux).
Mapping b15.$verific$mux_834$b15.vhd:611$1013 ($bmux).
Mapping b15.$verific$mux_835$b15.vhd:611$1014 ($bmux).
Mapping b15.$verific$mux_836$b15.vhd:611$1015 ($bmux).
Mapping b15.$verific$mux_837$b15.vhd:611$1016 ($bmux).
Mapping b15.$verific$mux_838$b15.vhd:611$1017 ($bmux).
Mapping b15.$verific$mux_839$b15.vhd:611$1018 ($bmux).
Mapping b15.$verific$mux_840$b15.vhd:611$1019 ($bmux).
Mapping b15.$verific$mux_843$b15.vhd:611$1022 ($bmux).
Mapping b15.$verific$mux_844$b15.vhd:611$1023 ($bmux).
Mapping b15.$verific$mux_845$b15.vhd:611$1024 ($bmux).
Mapping b15.$verific$mux_846$b15.vhd:611$1025 ($bmux).
Mapping b15.$verific$mux_847$b15.vhd:611$1026 ($bmux).
Mapping b15.$verific$mux_91$b15.vhd:175$599 ($mux).
Mapping b15.$verific$mux_92$b15.vhd:175$600 ($mux).
Mapping b15.$verific$mux_920$b15.vhd:633$856 ($bmux).
Mapping b15.$verific$mux_93$b15.vhd:175$601 ($mux).
Mapping b15.$verific$mux_949$b15.vhd:483$885 ($mux).
Mapping b15.$verific$mux_950$b15.vhd:479$877 ($mux).
Mapping b15.$verific$mux_953$b15.vhd:448$612 ($mux).
Mapping b15.$verific$mux_954$b15.vhd:444$843 ($mux).
Mapping b15.$verific$mux_956$b15.vhd:448$824 ($mux).
Mapping b15.$verific$mux_957$b15.vhd:448$836 ($mux).
Mapping b15.$verific$mux_958$b15.vhd:444$847 ($mux).
Mapping b15.$verific$mux_960$b15.vhd:378$826 ($mux).
Mapping b15.$verific$mux_962$b15.vhd:448$791 ($mux).
Mapping b15.$verific$mux_963$b15.vhd:448$846 ($mux).
Mapping b15.$verific$mux_964$b15.vhd:448$842 ($mux).
Mapping b15.$verific$mux_98$b15.vhd:181$604 ($mux).
Mapping b15.$verific$rEIP_reg$b15.vhd:612$1057 ($adff).
Mapping b15.$verific$reduce_nor_719$b15.vhd:562$908 ($not).
Mapping b15.$verific$reduce_nor_719$b15.vhd:562$909 ($reduce_or).
Mapping b15.$verific$reduce_nor_911$b15.vhd:667$1073 ($not).
Mapping b15.$verific$reduce_nor_911$b15.vhd:667$1074 ($reduce_or).
Mapping b15.$verific$reduce_or_232$b15.vhd:311$688 ($reduce_or).
Mapping b15.$verific$reduce_or_25$b15.vhd:125$556 ($reduce_or).
Mapping b15.$verific$reduce_or_256$b15.vhd:313$714 ($reduce_or).
Mapping b15.$verific$reduce_or_519$b15.vhd:457$850 ($reduce_or).

24. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~3740 debug messages>

25. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
<suppressed ~1653 debug messages>
Removed a total of 551 cells.

26. Executing OPT_DFF pass (perform DFF optimizations).

27. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 6 unused cells and 228 unused wires.
<suppressed ~7 debug messages>

28. Executing OPT pass (performing simple optimizations).

28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~7 debug messages>

28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

28.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

28.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

28.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

28.6. Executing OPT_DFF pass (perform DFF optimizations).

28.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

28.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

28.9. Rerunning OPT passes. (Maybe there is more to do..)

28.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

28.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

28.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

28.13. Executing OPT_DFF pass (perform DFF optimizations).

28.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

28.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

28.16. Finished OPT passes. (There is nothing left to do.)

29. Executing OPT pass (performing simple optimizations).

29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~833 debug messages>

29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
<suppressed ~27 debug messages>
Removed a total of 9 cells.

29.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$3244 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9927 [4], Q = \P1.InstQueue[2] [4]).
Adding EN signal on $auto$ff.cc:262:slice$3243 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9927 [3], Q = \P1.InstQueue[2] [3]).
Adding EN signal on $auto$ff.cc:262:slice$3242 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9927 [2], Q = \P1.InstQueue[2] [2]).
Adding EN signal on $auto$ff.cc:262:slice$3241 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9927 [1], Q = \P1.InstQueue[2] [1]).
Adding EN signal on $auto$ff.cc:262:slice$3240 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9927 [0], Q = \P1.InstQueue[2] [0]).
Adding EN signal on $auto$ff.cc:262:slice$3239 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9803 [7], Q = \P1.InstQueue[3] [7]).
Adding EN signal on $auto$ff.cc:262:slice$3238 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9803 [6], Q = \P1.InstQueue[3] [6]).
Adding EN signal on $auto$ff.cc:262:slice$3237 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9803 [5], Q = \P1.InstQueue[3] [5]).
Adding EN signal on $auto$ff.cc:262:slice$3236 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9803 [4], Q = \P1.InstQueue[3] [4]).
Adding EN signal on $auto$ff.cc:262:slice$3235 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9803 [3], Q = \P1.InstQueue[3] [3]).
Adding EN signal on $auto$ff.cc:262:slice$3234 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9803 [2], Q = \P1.InstQueue[3] [2]).
Adding EN signal on $auto$ff.cc:262:slice$3233 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9803 [1], Q = \P1.InstQueue[3] [1]).
Adding EN signal on $auto$ff.cc:262:slice$3232 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9803 [0], Q = \P1.InstQueue[3] [0]).
Adding EN signal on $auto$ff.cc:262:slice$3231 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9679 [7], Q = \P1.InstQueue[4] [7]).
Adding EN signal on $auto$ff.cc:262:slice$3230 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9679 [6], Q = \P1.InstQueue[4] [6]).
Adding EN signal on $auto$ff.cc:262:slice$3229 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9679 [5], Q = \P1.InstQueue[4] [5]).
Adding EN signal on $auto$ff.cc:262:slice$3228 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9679 [4], Q = \P1.InstQueue[4] [4]).
Adding EN signal on $auto$ff.cc:262:slice$3227 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9679 [3], Q = \P1.InstQueue[4] [3]).
Adding EN signal on $auto$ff.cc:262:slice$3226 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9679 [2], Q = \P1.InstQueue[4] [2]).
Adding EN signal on $auto$ff.cc:262:slice$3225 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9679 [1], Q = \P1.InstQueue[4] [1]).
Adding EN signal on $auto$ff.cc:262:slice$3224 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9679 [0], Q = \P1.InstQueue[4] [0]).
Adding EN signal on $auto$ff.cc:262:slice$3223 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9555 [7], Q = \P1.InstQueue[5] [7]).
Adding EN signal on $auto$ff.cc:262:slice$3222 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9555 [6], Q = \P1.InstQueue[5] [6]).
Adding EN signal on $auto$ff.cc:262:slice$3221 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9555 [5], Q = \P1.InstQueue[5] [5]).
Adding EN signal on $auto$ff.cc:262:slice$3220 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9555 [4], Q = \P1.InstQueue[5] [4]).
Adding EN signal on $auto$ff.cc:262:slice$3219 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9555 [3], Q = \P1.InstQueue[5] [3]).
Adding EN signal on $auto$ff.cc:262:slice$3218 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9555 [2], Q = \P1.InstQueue[5] [2]).
Adding EN signal on $auto$ff.cc:262:slice$3217 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9555 [1], Q = \P1.InstQueue[5] [1]).
Adding EN signal on $auto$ff.cc:262:slice$3216 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9555 [0], Q = \P1.InstQueue[5] [0]).
Adding EN signal on $auto$ff.cc:262:slice$3215 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9431 [7], Q = \P1.InstQueue[6] [7]).
Adding EN signal on $auto$ff.cc:262:slice$3214 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9431 [6], Q = \P1.InstQueue[6] [6]).
Adding EN signal on $auto$ff.cc:262:slice$3213 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9431 [5], Q = \P1.InstQueue[6] [5]).
Adding EN signal on $auto$ff.cc:262:slice$3212 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9431 [4], Q = \P1.InstQueue[6] [4]).
Adding EN signal on $auto$ff.cc:262:slice$3211 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9431 [3], Q = \P1.InstQueue[6] [3]).
Adding EN signal on $auto$ff.cc:262:slice$3210 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9431 [2], Q = \P1.InstQueue[6] [2]).
Adding EN signal on $auto$ff.cc:262:slice$3209 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9431 [1], Q = \P1.InstQueue[6] [1]).
Adding EN signal on $auto$ff.cc:262:slice$3208 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9431 [0], Q = \P1.InstQueue[6] [0]).
Adding EN signal on $auto$ff.cc:262:slice$3207 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9307 [7], Q = \P1.InstQueue[7] [7]).
Adding EN signal on $auto$ff.cc:262:slice$3206 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9307 [6], Q = \P1.InstQueue[7] [6]).
Adding EN signal on $auto$ff.cc:262:slice$3205 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9307 [5], Q = \P1.InstQueue[7] [5]).
Adding EN signal on $auto$ff.cc:262:slice$3204 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9307 [4], Q = \P1.InstQueue[7] [4]).
Adding EN signal on $auto$ff.cc:262:slice$3203 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9307 [3], Q = \P1.InstQueue[7] [3]).
Adding EN signal on $auto$ff.cc:262:slice$3202 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9307 [2], Q = \P1.InstQueue[7] [2]).
Adding EN signal on $auto$ff.cc:262:slice$3201 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9307 [1], Q = \P1.InstQueue[7] [1]).
Adding EN signal on $auto$ff.cc:262:slice$3200 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9307 [0], Q = \P1.InstQueue[7] [0]).
Adding EN signal on $auto$ff.cc:262:slice$3199 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10175 [7], Q = \P1.InstQueue[0] [7]).
Adding EN signal on $auto$ff.cc:262:slice$3198 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10175 [6], Q = \P1.InstQueue[0] [6]).
Adding EN signal on $auto$ff.cc:262:slice$3197 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10175 [5], Q = \P1.InstQueue[0] [5]).
Adding EN signal on $auto$ff.cc:262:slice$3196 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10175 [4], Q = \P1.InstQueue[0] [4]).
Adding EN signal on $auto$ff.cc:262:slice$3195 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10175 [3], Q = \P1.InstQueue[0] [3]).
Adding EN signal on $auto$ff.cc:262:slice$3194 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10175 [2], Q = \P1.InstQueue[0] [2]).
Adding EN signal on $auto$ff.cc:262:slice$3193 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10175 [1], Q = \P1.InstQueue[0] [1]).
Adding EN signal on $auto$ff.cc:262:slice$3192 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10175 [0], Q = \P1.InstQueue[0] [0]).
Adding EN signal on $auto$ff.cc:262:slice$3191 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7604 [31], Q = \P1.InstAddrPointer [31]).
Adding EN signal on $auto$ff.cc:262:slice$3190 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7604 [30], Q = \P1.InstAddrPointer [30]).
Adding EN signal on $auto$ff.cc:262:slice$3189 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7604 [29], Q = \P1.InstAddrPointer [29]).
Adding EN signal on $auto$ff.cc:262:slice$3188 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7604 [28], Q = \P1.InstAddrPointer [28]).
Adding EN signal on $auto$ff.cc:262:slice$3187 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7604 [27], Q = \P1.InstAddrPointer [27]).
Adding EN signal on $auto$ff.cc:262:slice$3186 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7604 [26], Q = \P1.InstAddrPointer [26]).
Adding EN signal on $auto$ff.cc:262:slice$3185 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7604 [25], Q = \P1.InstAddrPointer [25]).
Adding EN signal on $auto$ff.cc:262:slice$3184 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7604 [24], Q = \P1.InstAddrPointer [24]).
Adding EN signal on $auto$ff.cc:262:slice$3183 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7604 [23], Q = \P1.InstAddrPointer [23]).
Adding EN signal on $auto$ff.cc:262:slice$3182 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7604 [22], Q = \P1.InstAddrPointer [22]).
Adding EN signal on $auto$ff.cc:262:slice$3181 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7604 [21], Q = \P1.InstAddrPointer [21]).
Adding EN signal on $auto$ff.cc:262:slice$3180 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7604 [20], Q = \P1.InstAddrPointer [20]).
Adding EN signal on $auto$ff.cc:262:slice$3179 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7604 [19], Q = \P1.InstAddrPointer [19]).
Adding EN signal on $auto$ff.cc:262:slice$3178 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7604 [18], Q = \P1.InstAddrPointer [18]).
Adding EN signal on $auto$ff.cc:262:slice$3177 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7604 [17], Q = \P1.InstAddrPointer [17]).
Adding EN signal on $auto$ff.cc:262:slice$3176 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7604 [16], Q = \P1.InstAddrPointer [16]).
Adding EN signal on $auto$ff.cc:262:slice$3175 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7604 [15], Q = \P1.InstAddrPointer [15]).
Adding EN signal on $auto$ff.cc:262:slice$3174 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7604 [14], Q = \P1.InstAddrPointer [14]).
Adding EN signal on $auto$ff.cc:262:slice$3173 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7604 [13], Q = \P1.InstAddrPointer [13]).
Adding EN signal on $auto$ff.cc:262:slice$3172 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7604 [12], Q = \P1.InstAddrPointer [12]).
Adding EN signal on $auto$ff.cc:262:slice$3171 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7604 [11], Q = \P1.InstAddrPointer [11]).
Adding EN signal on $auto$ff.cc:262:slice$3170 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7604 [10], Q = \P1.InstAddrPointer [10]).
Adding EN signal on $auto$ff.cc:262:slice$3169 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7604 [9], Q = \P1.InstAddrPointer [9]).
Adding EN signal on $auto$ff.cc:262:slice$3168 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7604 [8], Q = \P1.InstAddrPointer [8]).
Adding EN signal on $auto$ff.cc:262:slice$3167 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7604 [7], Q = \P1.InstAddrPointer [7]).
Adding EN signal on $auto$ff.cc:262:slice$3166 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7604 [6], Q = \P1.InstAddrPointer [6]).
Adding EN signal on $auto$ff.cc:262:slice$3165 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7604 [5], Q = \P1.InstAddrPointer [5]).
Adding EN signal on $auto$ff.cc:262:slice$3164 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7604 [4], Q = \P1.InstAddrPointer [4]).
Adding EN signal on $auto$ff.cc:262:slice$3163 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7604 [3], Q = \P1.InstAddrPointer [3]).
Adding EN signal on $auto$ff.cc:262:slice$3162 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7604 [2], Q = \P1.InstAddrPointer [2]).
Adding EN signal on $auto$ff.cc:262:slice$3161 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7604 [1], Q = \P1.InstAddrPointer [1]).
Adding EN signal on $auto$ff.cc:262:slice$3160 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7604 [0], Q = \P1.InstAddrPointer [0]).
Adding EN signal on $auto$ff.cc:262:slice$3159 ($_DFF_PP0_) from module b15 (D = $auto$rtlil.cc:2459:Mux$1194, Q = \P1.Flush).
Adding EN signal on $auto$ff.cc:262:slice$3012 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$3099, Q = \MemoryFetch).
Adding EN signal on $auto$ff.cc:262:slice$3011 ($_DFF_PP0_) from module b15 (D = \MemoryFetch, Q = \M_IO_n).
Adding EN signal on $auto$ff.cc:262:slice$3010 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11277 [31], Q = \EBX [31]).
Adding EN signal on $auto$ff.cc:262:slice$3009 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11277 [30], Q = \EBX [30]).
Adding EN signal on $auto$ff.cc:262:slice$3008 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11277 [29], Q = \EBX [29]).
Adding EN signal on $auto$ff.cc:262:slice$3007 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11277 [28], Q = \EBX [28]).
Adding EN signal on $auto$ff.cc:262:slice$3006 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11277 [27], Q = \EBX [27]).
Adding EN signal on $auto$ff.cc:262:slice$3005 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11277 [26], Q = \EBX [26]).
Adding EN signal on $auto$ff.cc:262:slice$3004 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11277 [25], Q = \EBX [25]).
Adding EN signal on $auto$ff.cc:262:slice$3003 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11277 [24], Q = \EBX [24]).
Adding EN signal on $auto$ff.cc:262:slice$3002 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11277 [23], Q = \EBX [23]).
Adding EN signal on $auto$ff.cc:262:slice$3001 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11277 [22], Q = \EBX [22]).
Adding EN signal on $auto$ff.cc:262:slice$3000 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11277 [21], Q = \EBX [21]).
Adding EN signal on $auto$ff.cc:262:slice$2999 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11277 [20], Q = \EBX [20]).
Adding EN signal on $auto$ff.cc:262:slice$2998 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11277 [19], Q = \EBX [19]).
Adding EN signal on $auto$ff.cc:262:slice$2997 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11277 [18], Q = \EBX [18]).
Adding EN signal on $auto$ff.cc:262:slice$2996 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11277 [17], Q = \EBX [17]).
Adding EN signal on $auto$ff.cc:262:slice$2995 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11277 [16], Q = \EBX [16]).
Adding EN signal on $auto$ff.cc:262:slice$2994 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11277 [15], Q = \EBX [15]).
Adding EN signal on $auto$ff.cc:262:slice$2993 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11277 [14], Q = \EBX [14]).
Adding EN signal on $auto$ff.cc:262:slice$2992 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11277 [13], Q = \EBX [13]).
Adding EN signal on $auto$ff.cc:262:slice$2991 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11277 [12], Q = \EBX [12]).
Adding EN signal on $auto$ff.cc:262:slice$2990 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11277 [11], Q = \EBX [11]).
Adding EN signal on $auto$ff.cc:262:slice$2989 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11277 [10], Q = \EBX [10]).
Adding EN signal on $auto$ff.cc:262:slice$2988 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11277 [9], Q = \EBX [9]).
Adding EN signal on $auto$ff.cc:262:slice$2987 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11277 [8], Q = \EBX [8]).
Adding EN signal on $auto$ff.cc:262:slice$2986 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11277 [7], Q = \EBX [7]).
Adding EN signal on $auto$ff.cc:262:slice$2985 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11277 [6], Q = \EBX [6]).
Adding EN signal on $auto$ff.cc:262:slice$2984 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11277 [5], Q = \EBX [5]).
Adding EN signal on $auto$ff.cc:262:slice$2983 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11277 [4], Q = \EBX [4]).
Adding EN signal on $auto$ff.cc:262:slice$2982 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11277 [3], Q = \EBX [3]).
Adding EN signal on $auto$ff.cc:262:slice$2981 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11277 [2], Q = \EBX [2]).
Adding EN signal on $auto$ff.cc:262:slice$2980 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11277 [1], Q = \EBX [1]).
Adding EN signal on $auto$ff.cc:262:slice$2979 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11277 [0], Q = \EBX [0]).
Adding EN signal on $auto$ff.cc:262:slice$2978 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10793 [31], Q = \EAX [31]).
Adding EN signal on $auto$ff.cc:262:slice$2977 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10793 [30], Q = \EAX [30]).
Adding EN signal on $auto$ff.cc:262:slice$2976 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10793 [29], Q = \EAX [29]).
Adding EN signal on $auto$ff.cc:262:slice$2975 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10793 [28], Q = \EAX [28]).
Adding EN signal on $auto$ff.cc:262:slice$2974 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10793 [27], Q = \EAX [27]).
Adding EN signal on $auto$ff.cc:262:slice$2973 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10793 [26], Q = \EAX [26]).
Adding EN signal on $auto$ff.cc:262:slice$2972 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10793 [25], Q = \EAX [25]).
Adding EN signal on $auto$ff.cc:262:slice$2971 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10793 [24], Q = \EAX [24]).
Adding EN signal on $auto$ff.cc:262:slice$2970 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10793 [23], Q = \EAX [23]).
Adding EN signal on $auto$ff.cc:262:slice$2969 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10793 [22], Q = \EAX [22]).
Adding EN signal on $auto$ff.cc:262:slice$2968 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10793 [21], Q = \EAX [21]).
Adding EN signal on $auto$ff.cc:262:slice$2967 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10793 [20], Q = \EAX [20]).
Adding EN signal on $auto$ff.cc:262:slice$2966 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10793 [19], Q = \EAX [19]).
Adding EN signal on $auto$ff.cc:262:slice$2965 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10793 [18], Q = \EAX [18]).
Adding EN signal on $auto$ff.cc:262:slice$2964 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10793 [17], Q = \EAX [17]).
Adding EN signal on $auto$ff.cc:262:slice$2963 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10793 [16], Q = \EAX [16]).
Adding EN signal on $auto$ff.cc:262:slice$2962 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10793 [15], Q = \EAX [15]).
Adding EN signal on $auto$ff.cc:262:slice$2961 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10793 [14], Q = \EAX [14]).
Adding EN signal on $auto$ff.cc:262:slice$2960 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10793 [13], Q = \EAX [13]).
Adding EN signal on $auto$ff.cc:262:slice$2959 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10793 [12], Q = \EAX [12]).
Adding EN signal on $auto$ff.cc:262:slice$2958 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10793 [11], Q = \EAX [11]).
Adding EN signal on $auto$ff.cc:262:slice$2957 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10793 [10], Q = \EAX [10]).
Adding EN signal on $auto$ff.cc:262:slice$2956 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10793 [9], Q = \EAX [9]).
Adding EN signal on $auto$ff.cc:262:slice$2955 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10793 [8], Q = \EAX [8]).
Adding EN signal on $auto$ff.cc:262:slice$2954 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10793 [7], Q = \EAX [7]).
Adding EN signal on $auto$ff.cc:262:slice$2953 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10793 [6], Q = \EAX [6]).
Adding EN signal on $auto$ff.cc:262:slice$2952 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10793 [5], Q = \EAX [5]).
Adding EN signal on $auto$ff.cc:262:slice$2951 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10793 [4], Q = \EAX [4]).
Adding EN signal on $auto$ff.cc:262:slice$2950 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10793 [3], Q = \EAX [3]).
Adding EN signal on $auto$ff.cc:262:slice$2949 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10793 [2], Q = \EAX [2]).
Adding EN signal on $auto$ff.cc:262:slice$2948 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10793 [1], Q = \EAX [1]).
Adding EN signal on $auto$ff.cc:262:slice$2947 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10793 [0], Q = \EAX [0]).
Adding EN signal on $auto$ff.cc:262:slice$2946 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$3021, Q = \D_C_n).
Adding EN signal on $auto$ff.cc:262:slice$2945 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$3137, Q = \CodeFetch).
Adding EN signal on $auto$ff.cc:262:slice$2944 ($_DFF_PP0_) from module b15 (D = \ByteEnable [3], Q = \BE_n [3]).
Adding EN signal on $auto$ff.cc:262:slice$2943 ($_DFF_PP0_) from module b15 (D = \ByteEnable [2], Q = \BE_n [2]).
Adding EN signal on $auto$ff.cc:262:slice$2942 ($_DFF_PP0_) from module b15 (D = \ByteEnable [1], Q = \BE_n [1]).
Adding EN signal on $auto$ff.cc:262:slice$2941 ($_DFF_PP0_) from module b15 (D = \ByteEnable [0], Q = \BE_n [0]).
Adding EN signal on $auto$ff.cc:262:slice$2940 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$4431 [29], Q = \Address [29]).
Adding EN signal on $auto$ff.cc:262:slice$2939 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$4431 [28], Q = \Address [28]).
Adding EN signal on $auto$ff.cc:262:slice$2938 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$4431 [27], Q = \Address [27]).
Adding EN signal on $auto$ff.cc:262:slice$2937 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$4431 [26], Q = \Address [26]).
Adding EN signal on $auto$ff.cc:262:slice$2936 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$4431 [25], Q = \Address [25]).
Adding EN signal on $auto$ff.cc:262:slice$2935 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$4431 [24], Q = \Address [24]).
Adding EN signal on $auto$ff.cc:262:slice$2934 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$4431 [23], Q = \Address [23]).
Adding EN signal on $auto$ff.cc:262:slice$2933 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$4431 [22], Q = \Address [22]).
Adding EN signal on $auto$ff.cc:262:slice$2932 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$4431 [21], Q = \Address [21]).
Adding EN signal on $auto$ff.cc:262:slice$2931 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$4431 [20], Q = \Address [20]).
Adding EN signal on $auto$ff.cc:262:slice$2930 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$4431 [19], Q = \Address [19]).
Adding EN signal on $auto$ff.cc:262:slice$2929 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$4431 [18], Q = \Address [18]).
Adding EN signal on $auto$ff.cc:262:slice$2928 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$4431 [17], Q = \Address [17]).
Adding EN signal on $auto$ff.cc:262:slice$2927 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$4431 [16], Q = \Address [16]).
Adding EN signal on $auto$ff.cc:262:slice$2926 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$4431 [15], Q = \Address [15]).
Adding EN signal on $auto$ff.cc:262:slice$2925 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$4431 [14], Q = \Address [14]).
Adding EN signal on $auto$ff.cc:262:slice$2924 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$4431 [13], Q = \Address [13]).
Adding EN signal on $auto$ff.cc:262:slice$2923 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$4431 [12], Q = \Address [12]).
Adding EN signal on $auto$ff.cc:262:slice$2922 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$4431 [11], Q = \Address [11]).
Adding EN signal on $auto$ff.cc:262:slice$2921 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$4431 [10], Q = \Address [10]).
Adding EN signal on $auto$ff.cc:262:slice$2920 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$4431 [9], Q = \Address [9]).
Adding EN signal on $auto$ff.cc:262:slice$2919 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$4431 [8], Q = \Address [8]).
Adding EN signal on $auto$ff.cc:262:slice$2918 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$4431 [7], Q = \Address [7]).
Adding EN signal on $auto$ff.cc:262:slice$2917 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$4431 [6], Q = \Address [6]).
Adding EN signal on $auto$ff.cc:262:slice$2916 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$4431 [5], Q = \Address [5]).
Adding EN signal on $auto$ff.cc:262:slice$2915 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$4431 [4], Q = \Address [4]).
Adding EN signal on $auto$ff.cc:262:slice$2914 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$4431 [3], Q = \Address [3]).
Adding EN signal on $auto$ff.cc:262:slice$2913 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$4431 [2], Q = \Address [2]).
Adding EN signal on $auto$ff.cc:262:slice$2912 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$4431 [1], Q = \Address [1]).
Adding EN signal on $auto$ff.cc:262:slice$2911 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$4431 [0], Q = \Address [0]).
Adding EN signal on $auto$ff.cc:262:slice$1719 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10336 [3], Q = \P1.InstQueueRd_Addr [3]).
Adding EN signal on $auto$ff.cc:262:slice$1718 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10336 [2], Q = \P1.InstQueueRd_Addr [2]).
Adding EN signal on $auto$ff.cc:262:slice$1717 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10336 [1], Q = \P1.InstQueueRd_Addr [1]).
Adding EN signal on $auto$ff.cc:262:slice$1716 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10336 [0], Q = \P1.InstQueueRd_Addr [0]).
Adding EN signal on $auto$ff.cc:262:slice$1715 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12248 [30], Q = \Datao [30]).
Adding EN signal on $auto$ff.cc:262:slice$1714 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12248 [29], Q = \Datao [29]).
Adding EN signal on $auto$ff.cc:262:slice$1713 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12248 [28], Q = \Datao [28]).
Adding EN signal on $auto$ff.cc:262:slice$1712 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12248 [27], Q = \Datao [27]).
Adding EN signal on $auto$ff.cc:262:slice$1711 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12248 [26], Q = \Datao [26]).
Adding EN signal on $auto$ff.cc:262:slice$1710 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12248 [25], Q = \Datao [25]).
Adding EN signal on $auto$ff.cc:262:slice$1709 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12248 [24], Q = \Datao [24]).
Adding EN signal on $auto$ff.cc:262:slice$1708 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12248 [23], Q = \Datao [23]).
Adding EN signal on $auto$ff.cc:262:slice$1707 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12248 [22], Q = \Datao [22]).
Adding EN signal on $auto$ff.cc:262:slice$1706 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12248 [21], Q = \Datao [21]).
Adding EN signal on $auto$ff.cc:262:slice$1705 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12248 [20], Q = \Datao [20]).
Adding EN signal on $auto$ff.cc:262:slice$1704 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12248 [19], Q = \Datao [19]).
Adding EN signal on $auto$ff.cc:262:slice$1703 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12248 [18], Q = \Datao [18]).
Adding EN signal on $auto$ff.cc:262:slice$1702 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12248 [17], Q = \Datao [17]).
Adding EN signal on $auto$ff.cc:262:slice$1701 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12248 [16], Q = \Datao [16]).
Adding EN signal on $auto$ff.cc:262:slice$1700 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12248 [15], Q = \Datao [15]).
Adding EN signal on $auto$ff.cc:262:slice$1699 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12248 [14], Q = \Datao [14]).
Adding EN signal on $auto$ff.cc:262:slice$1698 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12248 [13], Q = \Datao [13]).
Adding EN signal on $auto$ff.cc:262:slice$1697 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12248 [12], Q = \Datao [12]).
Adding EN signal on $auto$ff.cc:262:slice$1696 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12248 [11], Q = \Datao [11]).
Adding EN signal on $auto$ff.cc:262:slice$1695 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12248 [10], Q = \Datao [10]).
Adding EN signal on $auto$ff.cc:262:slice$1694 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12248 [9], Q = \Datao [9]).
Adding EN signal on $auto$ff.cc:262:slice$1693 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12248 [8], Q = \Datao [8]).
Adding EN signal on $auto$ff.cc:262:slice$1692 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12248 [7], Q = \Datao [7]).
Adding EN signal on $auto$ff.cc:262:slice$1691 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12248 [6], Q = \Datao [6]).
Adding EN signal on $auto$ff.cc:262:slice$1690 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12248 [5], Q = \Datao [5]).
Adding EN signal on $auto$ff.cc:262:slice$1689 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12248 [4], Q = \Datao [4]).
Adding EN signal on $auto$ff.cc:262:slice$1688 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12248 [3], Q = \Datao [3]).
Adding EN signal on $auto$ff.cc:262:slice$1687 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12248 [2], Q = \Datao [2]).
Adding EN signal on $auto$ff.cc:262:slice$1686 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12248 [1], Q = \Datao [1]).
Adding EN signal on $auto$ff.cc:262:slice$1685 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12248 [0], Q = \Datao [0]).
Adding EN signal on $auto$ff.cc:262:slice$1684 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$4215 [1], Q = \DataWidth [1]).
Adding EN signal on $auto$ff.cc:262:slice$1683 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$4215 [0], Q = \DataWidth [0]).
Adding EN signal on $auto$ff.cc:262:slice$1682 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10257 [3], Q = \P1.InstQueueWr_Addr [3]).
Adding EN signal on $auto$ff.cc:262:slice$1681 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10257 [2], Q = \P1.InstQueueWr_Addr [2]).
Adding EN signal on $auto$ff.cc:262:slice$1680 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10257 [1], Q = \P1.InstQueueWr_Addr [1]).
Adding EN signal on $auto$ff.cc:262:slice$1679 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10257 [0], Q = \P1.InstQueueWr_Addr [0]).
Adding EN signal on $auto$ff.cc:262:slice$12926 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8166 [32], Q = \rEIP [31]).
Adding EN signal on $auto$ff.cc:262:slice$12925 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8166 [30], Q = \rEIP [30]).
Adding EN signal on $auto$ff.cc:262:slice$12924 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8166 [29], Q = \rEIP [29]).
Adding EN signal on $auto$ff.cc:262:slice$12923 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8166 [28], Q = \rEIP [28]).
Adding EN signal on $auto$ff.cc:262:slice$12922 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8166 [27], Q = \rEIP [27]).
Adding EN signal on $auto$ff.cc:262:slice$12921 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8166 [26], Q = \rEIP [26]).
Adding EN signal on $auto$ff.cc:262:slice$12920 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8166 [25], Q = \rEIP [25]).
Adding EN signal on $auto$ff.cc:262:slice$12919 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8166 [24], Q = \rEIP [24]).
Adding EN signal on $auto$ff.cc:262:slice$12918 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8166 [23], Q = \rEIP [23]).
Adding EN signal on $auto$ff.cc:262:slice$12917 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8166 [22], Q = \rEIP [22]).
Adding EN signal on $auto$ff.cc:262:slice$12916 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8166 [21], Q = \rEIP [21]).
Adding EN signal on $auto$ff.cc:262:slice$12915 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8166 [20], Q = \rEIP [20]).
Adding EN signal on $auto$ff.cc:262:slice$12914 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8166 [19], Q = \rEIP [19]).
Adding EN signal on $auto$ff.cc:262:slice$12913 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8166 [18], Q = \rEIP [18]).
Adding EN signal on $auto$ff.cc:262:slice$12912 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8166 [17], Q = \rEIP [17]).
Adding EN signal on $auto$ff.cc:262:slice$12911 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8166 [16], Q = \rEIP [16]).
Adding EN signal on $auto$ff.cc:262:slice$12910 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8166 [15], Q = \rEIP [15]).
Adding EN signal on $auto$ff.cc:262:slice$12909 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8166 [14], Q = \rEIP [14]).
Adding EN signal on $auto$ff.cc:262:slice$12908 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8166 [13], Q = \rEIP [13]).
Adding EN signal on $auto$ff.cc:262:slice$12907 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8166 [12], Q = \rEIP [12]).
Adding EN signal on $auto$ff.cc:262:slice$12906 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8166 [11], Q = \rEIP [11]).
Adding EN signal on $auto$ff.cc:262:slice$12905 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8166 [10], Q = \rEIP [10]).
Adding EN signal on $auto$ff.cc:262:slice$12904 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8166 [9], Q = \rEIP [9]).
Adding EN signal on $auto$ff.cc:262:slice$12903 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8166 [8], Q = \rEIP [8]).
Adding EN signal on $auto$ff.cc:262:slice$12902 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8166 [7], Q = \rEIP [7]).
Adding EN signal on $auto$ff.cc:262:slice$12901 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8166 [6], Q = \rEIP [6]).
Adding EN signal on $auto$ff.cc:262:slice$12900 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8166 [5], Q = \rEIP [5]).
Adding EN signal on $auto$ff.cc:262:slice$12899 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8166 [4], Q = \rEIP [4]).
Adding EN signal on $auto$ff.cc:262:slice$12898 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8166 [3], Q = \rEIP [3]).
Adding EN signal on $auto$ff.cc:262:slice$12897 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8166 [2], Q = \rEIP [2]).
Adding EN signal on $auto$ff.cc:262:slice$12896 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8166 [1], Q = \rEIP [1]).
Adding EN signal on $auto$ff.cc:262:slice$12895 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8166 [0], Q = \rEIP [0]).
Adding EN signal on $auto$ff.cc:262:slice$3394 ($_DFF_PP0_) from module b15 (D = $verific$n398$17, Q = \W_R_n).
Adding EN signal on $auto$ff.cc:262:slice$3391 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$4011 [0], Q = \State [0]).
Adding EN signal on $auto$ff.cc:262:slice$3390 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$3041, Q = \StateBS16).
Adding EN signal on $auto$ff.cc:262:slice$3389 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$3118, Q = \RequestPending).
Adding EN signal on $auto$ff.cc:262:slice$3388 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$3080, Q = \ReadRequest).
Adding EN signal on $auto$ff.cc:262:slice$3387 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11523 [14], Q = \P1.uWord [14]).
Adding EN signal on $auto$ff.cc:262:slice$3386 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11523 [13], Q = \P1.uWord [13]).
Adding EN signal on $auto$ff.cc:262:slice$3385 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11523 [12], Q = \P1.uWord [12]).
Adding EN signal on $auto$ff.cc:262:slice$3384 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11523 [11], Q = \P1.uWord [11]).
Adding EN signal on $auto$ff.cc:262:slice$3383 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11523 [10], Q = \P1.uWord [10]).
Adding EN signal on $auto$ff.cc:262:slice$3382 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11523 [9], Q = \P1.uWord [9]).
Adding EN signal on $auto$ff.cc:262:slice$3381 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11523 [8], Q = \P1.uWord [8]).
Adding EN signal on $auto$ff.cc:262:slice$3380 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11523 [7], Q = \P1.uWord [7]).
Adding EN signal on $auto$ff.cc:262:slice$3379 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11523 [6], Q = \P1.uWord [6]).
Adding EN signal on $auto$ff.cc:262:slice$3378 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11523 [5], Q = \P1.uWord [5]).
Adding EN signal on $auto$ff.cc:262:slice$3377 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11523 [4], Q = \P1.uWord [4]).
Adding EN signal on $auto$ff.cc:262:slice$3376 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11523 [3], Q = \P1.uWord [3]).
Adding EN signal on $auto$ff.cc:262:slice$3375 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11523 [2], Q = \P1.uWord [2]).
Adding EN signal on $auto$ff.cc:262:slice$3374 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11523 [1], Q = \P1.uWord [1]).
Adding EN signal on $auto$ff.cc:262:slice$3373 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11523 [0], Q = \P1.uWord [0]).
Adding EN signal on $auto$ff.cc:262:slice$3372 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11766 [15], Q = \P1.lWord [15]).
Adding EN signal on $auto$ff.cc:262:slice$3371 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11766 [14], Q = \P1.lWord [14]).
Adding EN signal on $auto$ff.cc:262:slice$3370 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11766 [13], Q = \P1.lWord [13]).
Adding EN signal on $auto$ff.cc:262:slice$3369 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11766 [12], Q = \P1.lWord [12]).
Adding EN signal on $auto$ff.cc:262:slice$3368 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11766 [11], Q = \P1.lWord [11]).
Adding EN signal on $auto$ff.cc:262:slice$3367 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11766 [10], Q = \P1.lWord [10]).
Adding EN signal on $auto$ff.cc:262:slice$3366 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11766 [9], Q = \P1.lWord [9]).
Adding EN signal on $auto$ff.cc:262:slice$3365 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11766 [8], Q = \P1.lWord [8]).
Adding EN signal on $auto$ff.cc:262:slice$3364 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11766 [7], Q = \P1.lWord [7]).
Adding EN signal on $auto$ff.cc:262:slice$3363 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11766 [6], Q = \P1.lWord [6]).
Adding EN signal on $auto$ff.cc:262:slice$3362 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11766 [5], Q = \P1.lWord [5]).
Adding EN signal on $auto$ff.cc:262:slice$3361 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11766 [4], Q = \P1.lWord [4]).
Adding EN signal on $auto$ff.cc:262:slice$3360 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11766 [3], Q = \P1.lWord [3]).
Adding EN signal on $auto$ff.cc:262:slice$3359 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11766 [2], Q = \P1.lWord [2]).
Adding EN signal on $auto$ff.cc:262:slice$3358 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11766 [1], Q = \P1.lWord [1]).
Adding EN signal on $auto$ff.cc:262:slice$3357 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11766 [0], Q = \P1.lWord [0]).
Adding EN signal on $auto$ff.cc:262:slice$3355 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7696 [2], Q = \P1.State2 [2]).
Adding EN signal on $auto$ff.cc:262:slice$3353 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7696 [0], Q = \P1.State2 [0]).
Adding EN signal on $auto$ff.cc:262:slice$3352 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7120 [31], Q = \P1.PhyAddrPointer [31]).
Adding EN signal on $auto$ff.cc:262:slice$3351 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7120 [30], Q = \P1.PhyAddrPointer [30]).
Adding EN signal on $auto$ff.cc:262:slice$3350 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7120 [29], Q = \P1.PhyAddrPointer [29]).
Adding EN signal on $auto$ff.cc:262:slice$3349 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7120 [28], Q = \P1.PhyAddrPointer [28]).
Adding EN signal on $auto$ff.cc:262:slice$3348 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7120 [27], Q = \P1.PhyAddrPointer [27]).
Adding EN signal on $auto$ff.cc:262:slice$3347 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7120 [26], Q = \P1.PhyAddrPointer [26]).
Adding EN signal on $auto$ff.cc:262:slice$3346 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7120 [25], Q = \P1.PhyAddrPointer [25]).
Adding EN signal on $auto$ff.cc:262:slice$3345 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7120 [24], Q = \P1.PhyAddrPointer [24]).
Adding EN signal on $auto$ff.cc:262:slice$3344 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7120 [23], Q = \P1.PhyAddrPointer [23]).
Adding EN signal on $auto$ff.cc:262:slice$3343 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7120 [22], Q = \P1.PhyAddrPointer [22]).
Adding EN signal on $auto$ff.cc:262:slice$3342 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7120 [21], Q = \P1.PhyAddrPointer [21]).
Adding EN signal on $auto$ff.cc:262:slice$3341 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7120 [20], Q = \P1.PhyAddrPointer [20]).
Adding EN signal on $auto$ff.cc:262:slice$3340 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7120 [19], Q = \P1.PhyAddrPointer [19]).
Adding EN signal on $auto$ff.cc:262:slice$3339 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7120 [18], Q = \P1.PhyAddrPointer [18]).
Adding EN signal on $auto$ff.cc:262:slice$3338 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7120 [17], Q = \P1.PhyAddrPointer [17]).
Adding EN signal on $auto$ff.cc:262:slice$3337 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7120 [16], Q = \P1.PhyAddrPointer [16]).
Adding EN signal on $auto$ff.cc:262:slice$3336 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7120 [15], Q = \P1.PhyAddrPointer [15]).
Adding EN signal on $auto$ff.cc:262:slice$3335 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7120 [14], Q = \P1.PhyAddrPointer [14]).
Adding EN signal on $auto$ff.cc:262:slice$3334 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7120 [13], Q = \P1.PhyAddrPointer [13]).
Adding EN signal on $auto$ff.cc:262:slice$3333 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7120 [12], Q = \P1.PhyAddrPointer [12]).
Adding EN signal on $auto$ff.cc:262:slice$3332 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7120 [11], Q = \P1.PhyAddrPointer [11]).
Adding EN signal on $auto$ff.cc:262:slice$3331 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7120 [10], Q = \P1.PhyAddrPointer [10]).
Adding EN signal on $auto$ff.cc:262:slice$3330 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7120 [9], Q = \P1.PhyAddrPointer [9]).
Adding EN signal on $auto$ff.cc:262:slice$3329 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7120 [8], Q = \P1.PhyAddrPointer [8]).
Adding EN signal on $auto$ff.cc:262:slice$3328 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7120 [7], Q = \P1.PhyAddrPointer [7]).
Adding EN signal on $auto$ff.cc:262:slice$3327 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7120 [6], Q = \P1.PhyAddrPointer [6]).
Adding EN signal on $auto$ff.cc:262:slice$3326 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7120 [5], Q = \P1.PhyAddrPointer [5]).
Adding EN signal on $auto$ff.cc:262:slice$3325 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7120 [4], Q = \P1.PhyAddrPointer [4]).
Adding EN signal on $auto$ff.cc:262:slice$3324 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7120 [3], Q = \P1.PhyAddrPointer [3]).
Adding EN signal on $auto$ff.cc:262:slice$3323 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7120 [2], Q = \P1.PhyAddrPointer [2]).
Adding EN signal on $auto$ff.cc:262:slice$3322 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7120 [1], Q = \P1.PhyAddrPointer [1]).
Adding EN signal on $auto$ff.cc:262:slice$3321 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7120 [0], Q = \P1.PhyAddrPointer [0]).
Adding EN signal on $auto$ff.cc:262:slice$3320 ($_DFF_PP0_) from module b15 (D = $auto$rtlil.cc:2459:Mux$1208, Q = \P1.More).
Adding EN signal on $auto$ff.cc:262:slice$3319 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9183 [7], Q = \P1.InstQueue[8] [7]).
Adding EN signal on $auto$ff.cc:262:slice$3318 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9183 [6], Q = \P1.InstQueue[8] [6]).
Adding EN signal on $auto$ff.cc:262:slice$3317 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9183 [5], Q = \P1.InstQueue[8] [5]).
Adding EN signal on $auto$ff.cc:262:slice$3316 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9183 [4], Q = \P1.InstQueue[8] [4]).
Adding EN signal on $auto$ff.cc:262:slice$3315 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9183 [3], Q = \P1.InstQueue[8] [3]).
Adding EN signal on $auto$ff.cc:262:slice$3314 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9183 [2], Q = \P1.InstQueue[8] [2]).
Adding EN signal on $auto$ff.cc:262:slice$3313 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9183 [1], Q = \P1.InstQueue[8] [1]).
Adding EN signal on $auto$ff.cc:262:slice$3312 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9183 [0], Q = \P1.InstQueue[8] [0]).
Adding EN signal on $auto$ff.cc:262:slice$3311 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9059 [7], Q = \P1.InstQueue[9] [7]).
Adding EN signal on $auto$ff.cc:262:slice$3310 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9059 [6], Q = \P1.InstQueue[9] [6]).
Adding EN signal on $auto$ff.cc:262:slice$3309 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9059 [5], Q = \P1.InstQueue[9] [5]).
Adding EN signal on $auto$ff.cc:262:slice$3308 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9059 [4], Q = \P1.InstQueue[9] [4]).
Adding EN signal on $auto$ff.cc:262:slice$3307 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9059 [3], Q = \P1.InstQueue[9] [3]).
Adding EN signal on $auto$ff.cc:262:slice$3306 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9059 [2], Q = \P1.InstQueue[9] [2]).
Adding EN signal on $auto$ff.cc:262:slice$3305 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9059 [1], Q = \P1.InstQueue[9] [1]).
Adding EN signal on $auto$ff.cc:262:slice$3304 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9059 [0], Q = \P1.InstQueue[9] [0]).
Adding EN signal on $auto$ff.cc:262:slice$3303 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8935 [7], Q = \P1.InstQueue[10] [7]).
Adding EN signal on $auto$ff.cc:262:slice$3302 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8935 [6], Q = \P1.InstQueue[10] [6]).
Adding EN signal on $auto$ff.cc:262:slice$3301 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8935 [5], Q = \P1.InstQueue[10] [5]).
Adding EN signal on $auto$ff.cc:262:slice$3300 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8935 [4], Q = \P1.InstQueue[10] [4]).
Adding EN signal on $auto$ff.cc:262:slice$3299 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8935 [3], Q = \P1.InstQueue[10] [3]).
Adding EN signal on $auto$ff.cc:262:slice$3298 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8935 [2], Q = \P1.InstQueue[10] [2]).
Adding EN signal on $auto$ff.cc:262:slice$3297 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8935 [1], Q = \P1.InstQueue[10] [1]).
Adding EN signal on $auto$ff.cc:262:slice$3296 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8935 [0], Q = \P1.InstQueue[10] [0]).
Adding EN signal on $auto$ff.cc:262:slice$3295 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8811 [7], Q = \P1.InstQueue[11] [7]).
Adding EN signal on $auto$ff.cc:262:slice$3294 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8811 [6], Q = \P1.InstQueue[11] [6]).
Adding EN signal on $auto$ff.cc:262:slice$3293 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8811 [5], Q = \P1.InstQueue[11] [5]).
Adding EN signal on $auto$ff.cc:262:slice$3292 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8811 [4], Q = \P1.InstQueue[11] [4]).
Adding EN signal on $auto$ff.cc:262:slice$3291 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8811 [3], Q = \P1.InstQueue[11] [3]).
Adding EN signal on $auto$ff.cc:262:slice$3290 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8811 [2], Q = \P1.InstQueue[11] [2]).
Adding EN signal on $auto$ff.cc:262:slice$3289 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8811 [1], Q = \P1.InstQueue[11] [1]).
Adding EN signal on $auto$ff.cc:262:slice$3288 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8811 [0], Q = \P1.InstQueue[11] [0]).
Adding EN signal on $auto$ff.cc:262:slice$3287 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8687 [7], Q = \P1.InstQueue[12] [7]).
Adding EN signal on $auto$ff.cc:262:slice$3286 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8687 [6], Q = \P1.InstQueue[12] [6]).
Adding EN signal on $auto$ff.cc:262:slice$3285 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8687 [5], Q = \P1.InstQueue[12] [5]).
Adding EN signal on $auto$ff.cc:262:slice$3284 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8687 [4], Q = \P1.InstQueue[12] [4]).
Adding EN signal on $auto$ff.cc:262:slice$3283 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8687 [3], Q = \P1.InstQueue[12] [3]).
Adding EN signal on $auto$ff.cc:262:slice$3282 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8687 [2], Q = \P1.InstQueue[12] [2]).
Adding EN signal on $auto$ff.cc:262:slice$3281 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8687 [1], Q = \P1.InstQueue[12] [1]).
Adding EN signal on $auto$ff.cc:262:slice$3280 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8687 [0], Q = \P1.InstQueue[12] [0]).
Adding EN signal on $auto$ff.cc:262:slice$3279 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8563 [7], Q = \P1.InstQueue[13] [7]).
Adding EN signal on $auto$ff.cc:262:slice$3278 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8563 [6], Q = \P1.InstQueue[13] [6]).
Adding EN signal on $auto$ff.cc:262:slice$3277 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8563 [5], Q = \P1.InstQueue[13] [5]).
Adding EN signal on $auto$ff.cc:262:slice$3276 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8563 [4], Q = \P1.InstQueue[13] [4]).
Adding EN signal on $auto$ff.cc:262:slice$3275 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8563 [3], Q = \P1.InstQueue[13] [3]).
Adding EN signal on $auto$ff.cc:262:slice$3274 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8563 [2], Q = \P1.InstQueue[13] [2]).
Adding EN signal on $auto$ff.cc:262:slice$3273 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8563 [1], Q = \P1.InstQueue[13] [1]).
Adding EN signal on $auto$ff.cc:262:slice$3272 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8563 [0], Q = \P1.InstQueue[13] [0]).
Adding EN signal on $auto$ff.cc:262:slice$3271 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8439 [7], Q = \P1.InstQueue[14] [7]).
Adding EN signal on $auto$ff.cc:262:slice$3270 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8439 [6], Q = \P1.InstQueue[14] [6]).
Adding EN signal on $auto$ff.cc:262:slice$3269 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8439 [5], Q = \P1.InstQueue[14] [5]).
Adding EN signal on $auto$ff.cc:262:slice$3268 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8439 [4], Q = \P1.InstQueue[14] [4]).
Adding EN signal on $auto$ff.cc:262:slice$3267 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8439 [3], Q = \P1.InstQueue[14] [3]).
Adding EN signal on $auto$ff.cc:262:slice$3266 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8439 [2], Q = \P1.InstQueue[14] [2]).
Adding EN signal on $auto$ff.cc:262:slice$3265 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8439 [1], Q = \P1.InstQueue[14] [1]).
Adding EN signal on $auto$ff.cc:262:slice$3264 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8439 [0], Q = \P1.InstQueue[14] [0]).
Adding EN signal on $auto$ff.cc:262:slice$3263 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8315 [7], Q = \P1.InstQueue[15] [7]).
Adding EN signal on $auto$ff.cc:262:slice$3262 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8315 [6], Q = \P1.InstQueue[15] [6]).
Adding EN signal on $auto$ff.cc:262:slice$3261 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8315 [5], Q = \P1.InstQueue[15] [5]).
Adding EN signal on $auto$ff.cc:262:slice$3260 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8315 [4], Q = \P1.InstQueue[15] [4]).
Adding EN signal on $auto$ff.cc:262:slice$3259 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8315 [3], Q = \P1.InstQueue[15] [3]).
Adding EN signal on $auto$ff.cc:262:slice$3258 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8315 [2], Q = \P1.InstQueue[15] [2]).
Adding EN signal on $auto$ff.cc:262:slice$3257 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8315 [1], Q = \P1.InstQueue[15] [1]).
Adding EN signal on $auto$ff.cc:262:slice$3256 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8315 [0], Q = \P1.InstQueue[15] [0]).
Adding EN signal on $auto$ff.cc:262:slice$3255 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10051 [7], Q = \P1.InstQueue[1] [7]).
Adding EN signal on $auto$ff.cc:262:slice$3254 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10051 [6], Q = \P1.InstQueue[1] [6]).
Adding EN signal on $auto$ff.cc:262:slice$3253 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10051 [5], Q = \P1.InstQueue[1] [5]).
Adding EN signal on $auto$ff.cc:262:slice$3252 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10051 [4], Q = \P1.InstQueue[1] [4]).
Adding EN signal on $auto$ff.cc:262:slice$3251 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10051 [3], Q = \P1.InstQueue[1] [3]).
Adding EN signal on $auto$ff.cc:262:slice$3250 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10051 [2], Q = \P1.InstQueue[1] [2]).
Adding EN signal on $auto$ff.cc:262:slice$3249 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10051 [1], Q = \P1.InstQueue[1] [1]).
Adding EN signal on $auto$ff.cc:262:slice$3248 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10051 [0], Q = \P1.InstQueue[1] [0]).
Adding EN signal on $auto$ff.cc:262:slice$3247 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9927 [7], Q = \P1.InstQueue[2] [7]).
Adding EN signal on $auto$ff.cc:262:slice$3246 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9927 [6], Q = \P1.InstQueue[2] [6]).
Adding EN signal on $auto$ff.cc:262:slice$3245 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9927 [5], Q = \P1.InstQueue[2] [5]).

29.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 113 unused cells and 3356 unused wires.
<suppressed ~114 debug messages>

29.5. Rerunning OPT passes. (Removed registers in this run.)

29.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~14927 debug messages>

29.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
<suppressed ~50721 debug messages>
Removed a total of 16907 cells.

29.8. Executing OPT_DFF pass (perform DFF optimizations).

29.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 0 unused cells and 15269 unused wires.
<suppressed ~1 debug messages>

29.10. Finished fast OPT passes.

30. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

31. Executing OPT pass (performing simple optimizations).

31.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

31.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

31.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

31.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

31.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

31.6. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$1942 in front of them:
        $auto$simplemap.cc:278:simplemap_mux$3950
        $auto$simplemap.cc:278:simplemap_mux$3936

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$4007 in front of them:
        $auto$simplemap.cc:312:simplemap_bmux$3997
        $auto$simplemap.cc:312:simplemap_bmux$3994

31.7. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$25126 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7539 [1], Q = \P1.InstAddrPointer [1]).
Adding EN signal on $auto$ff.cc:262:slice$24910 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7539 [2], Q = \P1.InstAddrPointer [2]).
Adding EN signal on $auto$ff.cc:262:slice$24694 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7539 [3], Q = \P1.InstAddrPointer [3]).
Adding EN signal on $auto$ff.cc:262:slice$24478 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7539 [4], Q = \P1.InstAddrPointer [4]).
Adding EN signal on $auto$ff.cc:262:slice$24262 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7539 [5], Q = \P1.InstAddrPointer [5]).
Adding EN signal on $auto$ff.cc:262:slice$24046 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7539 [6], Q = \P1.InstAddrPointer [6]).
Adding EN signal on $auto$ff.cc:262:slice$23830 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7539 [7], Q = \P1.InstAddrPointer [7]).
Adding EN signal on $auto$ff.cc:262:slice$23614 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7539 [8], Q = \P1.InstAddrPointer [8]).
Adding EN signal on $auto$ff.cc:262:slice$23398 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7539 [9], Q = \P1.InstAddrPointer [9]).
Adding EN signal on $auto$ff.cc:262:slice$23182 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7539 [10], Q = \P1.InstAddrPointer [10]).
Adding EN signal on $auto$ff.cc:262:slice$22966 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7539 [11], Q = \P1.InstAddrPointer [11]).
Adding EN signal on $auto$ff.cc:262:slice$22750 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7539 [12], Q = \P1.InstAddrPointer [12]).
Adding EN signal on $auto$ff.cc:262:slice$22534 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7539 [13], Q = \P1.InstAddrPointer [13]).
Adding EN signal on $auto$ff.cc:262:slice$22318 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7539 [14], Q = \P1.InstAddrPointer [14]).
Adding EN signal on $auto$ff.cc:262:slice$22102 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7539 [15], Q = \P1.InstAddrPointer [15]).
Adding EN signal on $auto$ff.cc:262:slice$21886 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7539 [16], Q = \P1.InstAddrPointer [16]).
Adding EN signal on $auto$ff.cc:262:slice$21670 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7539 [17], Q = \P1.InstAddrPointer [17]).
Adding EN signal on $auto$ff.cc:262:slice$21454 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7539 [18], Q = \P1.InstAddrPointer [18]).
Adding EN signal on $auto$ff.cc:262:slice$21238 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7539 [19], Q = \P1.InstAddrPointer [19]).
Adding EN signal on $auto$ff.cc:262:slice$21022 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7539 [20], Q = \P1.InstAddrPointer [20]).
Adding EN signal on $auto$ff.cc:262:slice$20806 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7539 [21], Q = \P1.InstAddrPointer [21]).
Adding EN signal on $auto$ff.cc:262:slice$20590 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7539 [22], Q = \P1.InstAddrPointer [22]).
Adding EN signal on $auto$ff.cc:262:slice$20374 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7539 [23], Q = \P1.InstAddrPointer [23]).
Adding EN signal on $auto$ff.cc:262:slice$20158 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7539 [24], Q = \P1.InstAddrPointer [24]).
Adding EN signal on $auto$ff.cc:262:slice$19942 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7539 [25], Q = \P1.InstAddrPointer [25]).
Adding EN signal on $auto$ff.cc:262:slice$19726 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7539 [26], Q = \P1.InstAddrPointer [26]).
Adding EN signal on $auto$ff.cc:262:slice$19510 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7539 [27], Q = \P1.InstAddrPointer [27]).
Adding EN signal on $auto$ff.cc:262:slice$19294 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7539 [28], Q = \P1.InstAddrPointer [28]).
Adding EN signal on $auto$ff.cc:262:slice$19078 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7539 [29], Q = \P1.InstAddrPointer [29]).
Adding EN signal on $auto$ff.cc:262:slice$18862 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7539 [30], Q = \P1.InstAddrPointer [30]).
Adding EN signal on $auto$ff.cc:262:slice$18646 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7539 [31], Q = \P1.InstAddrPointer [31]).

31.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 0 unused cells and 64 unused wires.
<suppressed ~1 debug messages>

31.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~157 debug messages>

31.10. Rerunning OPT passes. (Maybe there is more to do..)

31.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

31.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

31.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
<suppressed ~639 debug messages>
Removed a total of 213 cells.

31.14. Executing OPT_SHARE pass.

31.15. Executing OPT_DFF pass (perform DFF optimizations).

31.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 0 unused cells and 216 unused wires.
<suppressed ~1 debug messages>

31.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

31.18. Rerunning OPT passes. (Maybe there is more to do..)

31.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

31.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

31.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

31.22. Executing OPT_SHARE pass.

31.23. Executing OPT_DFF pass (perform DFF optimizations).

31.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

31.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

31.26. Finished OPT passes. (There is nothing left to do.)

32. Executing TECHMAP pass (map to technology primitives).

32.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

32.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $not.
Using template $paramod$44a13d10af618e7fbe7b9aad2f6151ffcee1e2fa\_90_alu for cells of type $alu.
Using template $paramod$32a7b7b86c07519b7537abc18e96f0331f97914d\_90_alu for cells of type $alu.
Using template $paramod$constmap:0c58e37f7f9ab9c08bb604a660a738f4cdfdf6a8$paramod$0c53878c2ab6a84f047b5c15f705bf752551700e\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$c3cd1564c35d873179656addd6052d7ea8b6d991\_90_alu for cells of type $alu.
Using template $paramod$788c3d57e5abb3a3f89aea6d4acd665be37f4e9b\_90_alu for cells of type $alu.
Using template $paramod$6a42b6fefed750f8a1c58eab59479d960557103c\_90_alu for cells of type $alu.
Using template $paramod$c6baa65225090ac0a120feab1b920965244aa496\_90_alu for cells of type $alu.
Using template $paramod$943564b9366bbc392bf4bbc801aa0a2d7742a4e0\_90_alu for cells of type $alu.
Using template $paramod$adbaf76fa5a3091a329503792521395f8ff4d1a4\_90_alu for cells of type $alu.
Using template $paramod$b85fbb3374a1d9ba7ee4f4d6323c30f939df3ada\_90_alu for cells of type $alu.
Using template $paramod$e04283ca12514baf3d204c6994bec8f178dd89f8\_90_alu for cells of type $alu.
Using template $paramod$fbc7873bff55778c0b3173955b7e4bce1d9d6834\_90_alu for cells of type $alu.
Using template $paramod$9e8c19db10db5b8954224cafa0587db20bab09bd\_90_alu for cells of type $alu.
Using template $paramod$91f82ead1edc61e0a1452110f15ef747116b421b\_90_alu for cells of type $alu.
Using template $paramod$076c9a7a3f037230073fe14dd4865d470cb48917\_90_alu for cells of type $alu.
Using template $paramod$175e67c02b86e96b1288b9dc100122520d7240d8\_90_alu for cells of type $alu.
Using template $paramod$f85408ed1aa3d09e465edae8a7bf590332ae9f7b\_90_alu for cells of type $alu.
Using template $paramod$a2af9b43308e3114c3b5dd3f4dc3329b2387395d\_90_alu for cells of type $alu.
Using template $paramod$bfceb922395790c0ce92e9f9b5b428d4fc72cc30\_90_alu for cells of type $alu.
Using template $paramod$1a3a0c35c4a4896fbfd612699525c057298e72d2\_90_alu for cells of type $alu.
Using template $paramod$83dd457849c736323edf2edb15923eb27f99c683\_90_alu for cells of type $alu.
Using template $paramod$d1615bf4e5e328245ffd1550e5fe105901cda77b\_90_alu for cells of type $alu.
Using template $paramod$3b7577489eb4433b1d5620cab7f3794743dee5ea\_90_alu for cells of type $alu.
Using template $paramod$b3c20b05d9b1fc2c940ef2f6c917486aead042e8\_90_alu for cells of type $alu.
Using template $paramod$740b056ede97228d3eae64ea2fdc81f0a33e0fe7\_90_alu for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000100 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $and.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000110 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000101 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001111 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000011111 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000011110 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001000 for cells of type $lcu.
Using extmapper simplemap for cells of type $or.
No more expansions possible.
<suppressed ~4909 debug messages>

33. Executing OPT pass (performing simple optimizations).

33.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~3501 debug messages>

33.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
<suppressed ~1230 debug messages>
Removed a total of 410 cells.

33.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

33.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

33.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

33.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$38933 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10257 [0], Q = \P1.InstQueueWr_Addr [0]).

33.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 342 unused cells and 2606 unused wires.
<suppressed ~343 debug messages>

33.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~47 debug messages>

33.9. Rerunning OPT passes. (Maybe there is more to do..)

33.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

33.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

33.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

33.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$48736 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7696 [0], Q = \P1.State2 [0]).

33.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 1 unused cells and 44 unused wires.
<suppressed ~2 debug messages>

33.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~1 debug messages>

33.16. Rerunning OPT passes. (Maybe there is more to do..)

33.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

33.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

33.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

33.20. Executing OPT_DFF pass (perform DFF optimizations).

33.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

33.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

33.23. Rerunning OPT passes. (Maybe there is more to do..)

33.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

33.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

33.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

33.27. Executing OPT_DFF pass (perform DFF optimizations).

33.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

33.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

33.30. Finished OPT passes. (There is nothing left to do.)

34. Executing ABC pass (technology mapping using ABC).

34.1. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Extracted 5238 gates and 5637 wires to a netlist network with 396 inputs and 458 outputs.

34.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/aram/Workspace/yosys_verific_rs/scripts/synth/abc/abc_base6.a21.scr 
ABC: netlist  : i/o =    396/    458  and =   10094  lev =   63 (22.86)  mem = 0.14 MB
ABC: Mapping (K=6)  :  lut =   1816  edge =    7879  lev =   22 (9.34)  mem = 0.09 MB
ABC: netlist  : i/o =    396/    458  and =   10291  lev =   63 (22.66)  mem = 0.14 MB
ABC: Mapping (K=6)  :  lut =   1714  edge =    7767  lev =   19 (8.98)  mem = 0.09 MB
ABC: netlist  : i/o =    396/    458  and =   10137  lev =   59 (22.61)  mem = 0.14 MB
ABC: Mapping (K=6)  :  lut =   1703  edge =    7621  lev =   20 (9.15)  mem = 0.08 MB
ABC: netlist  : i/o =    396/    458  and =   10172  lev =   53 (19.84)  mem = 0.14 MB
ABC: Mapping (K=6)  :  lut =   1672  edge =    7484  lev =   19 (8.89)  mem = 0.08 MB
ABC: netlist  : i/o =    396/    458  and =    9771  lev =   60 (23.25)  mem = 0.14 MB
ABC: Mapping (K=6)  :  lut =   1703  edge =    7522  lev =   20 (9.09)  mem = 0.08 MB
ABC: netlist  : i/o =    396/    458  and =    9840  lev =   64 (23.64)  mem = 0.18 MB
ABC: Mapping (K=6)  :  lut =   1621  edge =    7431  lev =   18 (8.52)  mem = 0.08 MB
ABC: netlist  : i/o =    396/    458  and =    9796  lev =   62 (23.43)  mem = 0.18 MB
ABC: Mapping (K=6)  :  lut =   1606  edge =    7365  lev =   18 (8.61)  mem = 0.08 MB
ABC: netlist  : i/o =    396/    458  and =    9756  lev =   61 (23.47)  mem = 0.18 MB
ABC: Mapping (K=6)  :  lut =   1607  edge =    7327  lev =   18 (8.28)  mem = 0.08 MB
ABC: netlist  : i/o =    396/    458  and =    9758  lev =   51 (19.95)  mem = 0.18 MB
ABC: Mapping (K=6)  :  lut =   1598  edge =    7340  lev =   18 (8.02)  mem = 0.08 MB
ABC: netlist  : i/o =    396/    458  and =    9506  lev =   59 (23.32)  mem = 0.17 MB
ABC: Mapping (K=6)  :  lut =   1550  edge =    7167  lev =   17 (8.39)  mem = 0.08 MB
ABC: netlist  : i/o =    396/    458  and =    9642  lev =   64 (23.56)  mem = 0.17 MB
ABC: Mapping (K=6)  :  lut =   1524  edge =    7208  lev =   17 (8.40)  mem = 0.08 MB
ABC: netlist  : i/o =    396/    458  and =    9713  lev =   66 (24.02)  mem = 0.17 MB
ABC: Mapping (K=6)  :  lut =   1461  edge =    6976  lev =   17 (8.44)  mem = 0.08 MB
ABC: netlist  : i/o =    396/    458  and =    9680  lev =   67 (23.97)  mem = 0.17 MB
ABC: Mapping (K=6)  :  lut =   1440  edge =    6876  lev =   17 (8.42)  mem = 0.08 MB
ABC: netlist  : i/o =    396/    458  and =    9680  lev =   67 (23.97)  mem = 0.13 MB
ABC: Mapping (K=6)  :  lut =   1440  edge =    6876  lev =   17 (8.42)  mem = 0.08 MB
ABC: netlist  : i/o =    396/    458  and =    9680  lev =   67 (23.97)  mem = 0.17 MB
ABC: Mapping (K=6)  :  lut =   1440  edge =    6876  lev =   17 (8.42)  mem = 0.08 MB
ABC: netlist  : i/o =    396/    458  and =    9819  lev =   61 (23.27)  mem = 0.14 MB
ABC: Mapping (K=6)  :  lut =   1440  edge =    6876  lev =   17 (8.42)  mem = 0.08 MB
ABC: + write_blif <abc-temp-dir>/output.blif 

34.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     1443
ABC RESULTS:        internal signals:     4783
ABC RESULTS:           input signals:      396
ABC RESULTS:          output signals:      458
Removing temp directory.

35. Executing OPT pass (performing simple optimizations).

35.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

35.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

35.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

35.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

35.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

35.6. Executing OPT_DFF pass (perform DFF optimizations).

35.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 0 unused cells and 1739 unused wires.
<suppressed ~1 debug messages>

35.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

35.9. Rerunning OPT passes. (Maybe there is more to do..)

35.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

35.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

35.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

35.13. Executing OPT_DFF pass (perform DFF optimizations).

35.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

35.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

35.16. Finished OPT passes. (There is nothing left to do.)

36. Executing HIERARCHY pass (managing design hierarchy).

36.1. Analyzing design hierarchy..
Top module:  \b15

36.2. Analyzing design hierarchy..
Top module:  \b15
Removed 0 unused modules.

37. Printing statistics.

=== b15 ===

   Number of wires:               1491
   Number of wire bits:           1896
   Number of public wires:          50
   Number of public wire bits:     455
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1856
     $_DFFE_PP0P_                  410
     $_DFF_PP0_                      5
     $lut                         1441

38. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

39. Executing BLIF backend.

End of script. Logfile hash: 0c8bd119e7, CPU: user 20.44s system 0.12s, MEM: 81.82 MB peak
Yosys 0.14+36 (git sha1 15a4e900b, gcc 7.1.0 -fPIC -Os)
Time spent: 65% 1x abc (38 sec), 12% 33x opt_dff (7 sec), ...
