
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.14+36 (git sha1 15a4e900b, gcc 7.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jan22_SW_Release, released at Sat Jan 29 02:42:49 2022.

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jan22_SW_Release, released at Sat Jan 29 02:42:49 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'IR_Emitter_Carrier_Generator.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'IR_Emitter_Interface.v'
VERIFIC-INFO [VERI-2561] IR_Emitter_Interface.v:263: undeclared symbol 'IR_Emitter_MemRd_Stb', assumed default net type 'wire'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'IR_Emitter_Modulator.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'IR_Emitter_Registers.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'IR_Remote.v'
VERIFIC-WARNING [VERI-1407] IR_Remote.v:125: attribute target identifier 'hierarchy' not found in this scope
VERIFIC-WARNING [VERI-1407] IR_Remote.v:124: attribute target identifier 'ql_pack' not found in this scope
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'i2cSlave.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'i2cSlaveSerialInterface.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'i2cSlaveTop.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'r1024x9_1024x9.v'

3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] IR_Remote.v:29: compiling module 'top'
VERIFIC-INFO [VERI-1018] i2cSlaveTop.v:47: compiling module 'i2cSlaveTop(I2C_ADDRESS=7'b0101010)'
VERIFIC-INFO [VERI-1018] i2cSlave.v:48: compiling module 'i2cSlave(I2C_ADDRESS=7'b0101010)'
VERIFIC-INFO [VERI-1018] i2cSlaveSerialInterface.v:58: compiling module 'i2cSlaveSerialInterface(I2C_ADDRESS=7'b0101010)'
VERIFIC-INFO [VERI-1018] IR_Emitter_Interface.v:29: compiling module 'IR_Emitter_Interface'
VERIFIC-INFO [VERI-1018] IR_Emitter_Carrier_Generator.v:32: compiling module 'IR_Emitter_Carrier_Generator'
VERIFIC-WARNING [VERI-1209] IR_Emitter_Carrier_Generator.v:236: expression size 32 truncated to fit in target size 8
VERIFIC-WARNING [VERI-1209] IR_Emitter_Carrier_Generator.v:264: expression size 32 truncated to fit in target size 8
VERIFIC-WARNING [VERI-1209] IR_Emitter_Carrier_Generator.v:438: expression size 32 truncated to fit in target size 8
VERIFIC-WARNING [VERI-1209] IR_Emitter_Carrier_Generator.v:466: expression size 32 truncated to fit in target size 8
VERIFIC-INFO [VERI-1018] IR_Emitter_Modulator.v:32: compiling module 'IR_Emitter_Modulator'
VERIFIC-WARNING [VERI-1209] IR_Emitter_Modulator.v:478: expression size 14 truncated to fit in target size 13
VERIFIC-WARNING [VERI-1209] IR_Emitter_Modulator.v:508: expression size 32 truncated to fit in target size 16
VERIFIC-INFO [VERI-1018] IR_Emitter_Registers.v:31: compiling module 'IR_Emitter_Registers'
VERIFIC-INFO [VERI-1018] r1024x9_1024x9.v:17: compiling module 'r1024x9_1024x9'
VERIFIC-WARNING [VERI-1209] r1024x9_1024x9.v:40: expression size 22 truncated to fit in target size 9
Importing module top.
Importing module i2cSlaveTop(I2C_ADDRESS=7'b0101010).
Importing module i2cSlave(I2C_ADDRESS=7'b0101010).
Importing module IR_Emitter_Interface.
Importing module i2cSlaveSerialInterface(I2C_ADDRESS=7'b0101010).
Importing module IR_Emitter_Carrier_Generator.
Importing module IR_Emitter_Modulator.
Importing module IR_Emitter_Registers.
Importing module r1024x9_1024x9.

3.1. Analyzing design hierarchy..
Top module:  \top
Used module:     \IR_Emitter_Interface
Used module:         \r1024x9_1024x9
Used module:         \IR_Emitter_Registers
Used module:         \IR_Emitter_Modulator
Used module:         \IR_Emitter_Carrier_Generator
Used module:     \i2cSlaveTop(I2C_ADDRESS=7'b0101010)
Used module:         \i2cSlave(I2C_ADDRESS=7'b0101010)
Used module:             \i2cSlaveSerialInterface(I2C_ADDRESS=7'b0101010)

3.2. Analyzing design hierarchy..
Top module:  \top
Used module:     \IR_Emitter_Interface
Used module:         \r1024x9_1024x9
Used module:         \IR_Emitter_Registers
Used module:         \IR_Emitter_Modulator
Used module:         \IR_Emitter_Carrier_Generator
Used module:     \i2cSlaveTop(I2C_ADDRESS=7'b0101010)
Used module:         \i2cSlave(I2C_ADDRESS=7'b0101010)
Used module:             \i2cSlaveSerialInterface(I2C_ADDRESS=7'b0101010)
Removed 0 unused modules.

4. Executing PROC pass (convert processes to netlists).

4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

4.4. Executing PROC_INIT pass (extract init attributes).

4.5. Executing PROC_ARST pass (detect async resets in processes).

4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

4.7. Executing PROC_DLATCH pass (convert process syncs to latches).

4.8. Executing PROC_DFF pass (convert process syncs to FFs).

4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module r1024x9_1024x9.
Optimizing module IR_Emitter_Registers.
<suppressed ~7 debug messages>
Optimizing module IR_Emitter_Modulator.
<suppressed ~8 debug messages>
Optimizing module IR_Emitter_Carrier_Generator.
<suppressed ~11 debug messages>
Optimizing module i2cSlaveSerialInterface(I2C_ADDRESS=7'b0101010).
<suppressed ~20 debug messages>
Optimizing module IR_Emitter_Interface.
<suppressed ~3 debug messages>
Optimizing module i2cSlave(I2C_ADDRESS=7'b0101010).
<suppressed ~3 debug messages>
Optimizing module i2cSlaveTop(I2C_ADDRESS=7'b0101010).
Optimizing module top.

5. Executing FLATTEN pass (flatten design).
Deleting now unused module r1024x9_1024x9.
Deleting now unused module IR_Emitter_Registers.
Deleting now unused module IR_Emitter_Modulator.
Deleting now unused module IR_Emitter_Carrier_Generator.
Deleting now unused module i2cSlaveSerialInterface(I2C_ADDRESS=7'b0101010).
Deleting now unused module IR_Emitter_Interface.
Deleting now unused module i2cSlave(I2C_ADDRESS=7'b0101010).
Deleting now unused module i2cSlaveTop(I2C_ADDRESS=7'b0101010).
<suppressed ~15 debug messages>

6. Executing TRIBUF pass.

7. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~32 debug messages>

8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 1061 unused wires.
<suppressed ~181 debug messages>

9. Executing CHECK pass (checking for obvious problems).
Checking module top...
Found and reported 0 problems.

10. Executing DEMINOUT pass (demote inout ports to input or output).
Demoting inout port top.CpuScl to input.
Demoting inout port top.CpuSda to output.
Demoting inout port top.IR_Emitter_Gpio_Port_io to output.

11. Executing OPT pass (performing simple optimizations).

11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~57 debug messages>

11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~126 debug messages>

11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New ctrl vector for $pmux cell $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$Select_125$IR_Emitter_Carrier_Generator.v:383$1430: { $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$n318$1282 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$n326$1287 }
    New ctrl vector for $pmux cell $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$select_122$IR_Emitter_Carrier_Generator.v:383$1427: { $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$n319$1283 $auto$opt_reduce.cc:134:opt_pmux$1885 }
    New ctrl vector for $pmux cell $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$select_140$IR_Emitter_Carrier_Generator.v:409$1437: { $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$n203$1262 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$n347$1291 }
    New ctrl vector for $pmux cell $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$Select_153$IR_Emitter_Modulator.v:442$1615: { $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$n296$1497 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$n298$1499 }
    New ctrl vector for $pmux cell $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$select_143$IR_Emitter_Modulator.v:442$1611: { $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$n296$1497 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$n298$1499 }
    New ctrl vector for $pmux cell $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$select_80$IR_Emitter_Registers.v:312$1798: { $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n207$1685 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n208$1686 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n209$1687 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n6$1659 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n9$1661 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n12$1663 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n15$1665 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n18$1667 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n21$1669 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n24$1671 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n27$1673 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n30$1675 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n33$1677 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n36$1679 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n39$1681 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n42$1683 }
    New ctrl vector for $pmux cell $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$Select_235$i2cSlaveSerialInterface.v:474$1238: { $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n956$971 $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n957$972 }
    New ctrl vector for $pmux cell $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$select_79$i2cSlaveSerialInterface.v:309$1143: { $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n323$950 $auto$opt_reduce.cc:134:opt_pmux$1887 }
    New ctrl vector for $pmux cell $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$select_81$i2cSlaveSerialInterface.v:309$1144: $auto$opt_reduce.cc:134:opt_pmux$1889
    New ctrl vector for $pmux cell $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$select_94$i2cSlaveSerialInterface.v:322$1145: $auto$opt_reduce.cc:134:opt_pmux$1891
  Optimizing cells in module \top.
Performed a total of 12 changes.

11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

11.6. Executing OPT_DFF pass (perform DFF optimizations).
Removing never-active async load on $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$txData_reg$i2cSlaveSerialInterface.v:449$1225 ($aldff) from module top.
Removing never-active async load on $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$streamSt_reg$i2cSlaveSerialInterface.v:449$1224 ($aldff) from module top.
Removing never-active async load on $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$rxData_reg$i2cSlaveSerialInterface.v:449$1226 ($aldff) from module top.
Removing never-active async load on $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$regAddr_reg$i2cSlaveSerialInterface.v:449$1228 ($aldff) from module top.
Removing never-active async load on $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$dataOut_reg$i2cSlaveSerialInterface.v:449$1222 ($aldff) from module top.
Removing never-active async load on $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$bitCnt_reg$i2cSlaveSerialInterface.v:449$1227 ($aldff) from module top.
Removing never-active async load on $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$CurrState_SISt_reg$i2cSlaveSerialInterface.v:424$1201 ($aldff) from module top.
Removing never-active async load on $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$startStopDetState_reg$i2cSlave.v:245$200 ($aldff) from module top.
Removing never-active async load on $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$sdaPipe_reg$i2cSlave.v:191$174 ($aldff) from module top.
Removing never-active async load on $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$sdaDelayed_reg$i2cSlave.v:214$183 ($aldff) from module top.
Removing never-active async load on $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$sclPipe_reg$i2cSlave.v:191$176 ($aldff) from module top.
Removing never-active async load on $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$sclDelayed_reg$i2cSlave.v:214$182 ($aldff) from module top.
Removing never-active async load on $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$rstPipe_reg$i2cSlave.v:158$156 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.$verific$RegAddr_i_1ff_reg$IR_Emitter_Interface.v:324$351 ($aldff) from module top.
Removing never-active async load on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_7.$verific$RAM9bit_reg$r1024x9_1024x9.v:41$1883 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.$verific$RegRd_En_i_1ff_reg$IR_Emitter_Interface.v:324$350 ($aldff) from module top.
Removing never-active async load on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_6.$verific$RAM9bit_reg$r1024x9_1024x9.v:41$1883 ($aldff) from module top.
Removing never-active async load on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_5.$verific$RAM9bit_reg$r1024x9_1024x9.v:41$1883 ($aldff) from module top.
Removing never-active async load on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_4.$verific$RAM9bit_reg$r1024x9_1024x9.v:41$1883 ($aldff) from module top.
Removing never-active async load on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_3.$verific$RAM9bit_reg$r1024x9_1024x9.v:41$1883 ($aldff) from module top.
Removing never-active async load on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_2.$verific$RAM9bit_reg$r1024x9_1024x9.v:41$1883 ($aldff) from module top.
Removing never-active async load on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_1.$verific$RAM9bit_reg$r1024x9_1024x9.v:41$1883 ($aldff) from module top.
Removing never-active async load on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_0.$verific$RAM9bit_reg$r1024x9_1024x9.v:41$1883 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$RegData_o_reg$IR_Emitter_Registers.v:408$1840 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$RegAddr_i_1ff_reg$IR_Emitter_Registers.v:408$1839 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_LED_Gpio_o_reg$IR_Emitter_Registers.v:408$1849 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_LED_Gpio_Polarity_o_reg$IR_Emitter_Registers.v:408$1848 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Run_Modulator_o_reg$IR_Emitter_Registers.v:408$1841 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Mode_Modulator_o_reg$IR_Emitter_Registers.v:408$1842 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_MemRd_Stop_o_reg$IR_Emitter_Registers.v:408$1846 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_MemRd_Start_o_reg$IR_Emitter_Registers.v:408$1845 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_MemAddr_Reg_o_reg$IR_Emitter_Registers.v:408$1847 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Interrupt_reg$IR_Emitter_Registers.v:408$1853 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Interrupt_Enable_reg$IR_Emitter_Registers.v:408$1854 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Gpio_Port_o_reg$IR_Emitter_Registers.v:408$1850 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Gpio_Dir_o_reg$IR_Emitter_Registers.v:408$1851 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Carrier_Duty_Len_o_reg$IR_Emitter_Registers.v:408$1844 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Carrier_Cycle_Len_o_reg$IR_Emitter_Registers.v:408$1843 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Busy_Modulator_i_1ff_reg$IR_Emitter_Registers.v:408$1852 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_LED_En_o_reg$IR_Emitter_Modulator.v:260$1588 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_Pulse_Modulator_o_tc_reg$IR_Emitter_Modulator.v:260$1584 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_Pulse_Modulator_o_reg$IR_Emitter_Modulator.v:260$1581 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_Pulse_Modulator_o_ld_upr_reg$IR_Emitter_Modulator.v:260$1583 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_Pulse_Modulator_o_ld_lwr_reg$IR_Emitter_Modulator.v:260$1582 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_Pulse_Modulator_Signal_reg$IR_Emitter_Modulator.v:260$1587 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_Modulator_State_reg$IR_Emitter_Modulator.v:260$1589 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_MemData_lwr_reg$IR_Emitter_Modulator.v:260$1585 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_MemAddr_Modulator_o_tc_upr_reg$IR_Emitter_Modulator.v:260$1580 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_MemAddr_Modulator_o_tc_lwr_reg$IR_Emitter_Modulator.v:260$1579 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_MemAddr_Modulator_o_reg$IR_Emitter_Modulator.v:260$1576 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_MemAddr_Modulator_o_ld_reg$IR_Emitter_Modulator.v:260$1578 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_MemAddr_Modulator_o_ce_reg$IR_Emitter_Modulator.v:260$1577 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_Carrier_Enable_o_reg$IR_Emitter_Modulator.v:260$1574 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_Busy_Modulator_o_reg$IR_Emitter_Modulator.v:260$1575 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Signal_o_reg$IR_Emitter_Carrier_Generator.v:216$1385 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Duty_ld_tc_reg$IR_Emitter_Carrier_Generator.v:216$1383 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Duty_cntr_tc_reg$IR_Emitter_Carrier_Generator.v:216$1382 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Duty_cntr_ld_reg$IR_Emitter_Carrier_Generator.v:216$1381 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Duty_State_reg$IR_Emitter_Carrier_Generator.v:216$1384 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Duty_1_cntr_tc_reg$IR_Emitter_Carrier_Generator.v:216$1380 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Duty_1_cntr_reg$IR_Emitter_Carrier_Generator.v:216$1379 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Duty_0_cntr_tc_reg$IR_Emitter_Carrier_Generator.v:216$1378 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Duty_0_cntr_reg$IR_Emitter_Carrier_Generator.v:216$1377 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Cycle_Enable_o_reg$IR_Emitter_Carrier_Generator.v:216$1376 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Cycle_1_cntr_tc_reg$IR_Emitter_Carrier_Generator.v:216$1375 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Cycle_1_cntr_reg$IR_Emitter_Carrier_Generator.v:216$1374 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Cycle_0_cntr_tc_reg$IR_Emitter_Carrier_Generator.v:216$1373 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Cycle_0_cntr_reg$IR_Emitter_Carrier_Generator.v:216$1372 ($aldff) from module top.

11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 9 unused cells and 17 unused wires.
<suppressed ~10 debug messages>

11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

11.9. Rerunning OPT passes. (Maybe there is more to do..)

11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~128 debug messages>

11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

11.13. Executing OPT_DFF pass (perform DFF optimizations).

11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

11.16. Finished OPT passes. (There is nothing left to do.)

12. Executing FSM pass (extract and optimize FSM).

12.1. Executing FSM_DETECT pass (finding FSMs in design).
Found FSM state register top.u_i2cSlaveTop.u_i2cSlave.startStopDetState.

12.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\u_i2cSlaveTop.u_i2cSlave.startStopDetState' from module `\top'.
  found $dff cell for state register: $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$startStopDetState_reg$i2cSlave.v:245$200
  root of input selection tree: $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$n176$149
  found reset state: 2'00 (guessed from mux tree)
  found ctrl input: \u_i2cSlaveTop.u_i2cSlave.rstPipe [1]
  found ctrl input: \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.clearStartStopDet
  found ctrl input: \u_i2cSlaveTop.u_i2cSlave.sclDeb
  found ctrl input: $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$n154$123
  found ctrl input: $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$n160$124
  found state code: 2'01
  found state code: 2'10
  found state code: 2'00
  found ctrl output: $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n324$951
  found ctrl output: $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n323$950
  found ctrl output: $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n291$945
  ctrl inputs: { \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.clearStartStopDet \u_i2cSlaveTop.u_i2cSlave.rstPipe [1] $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$n160$124 $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$n154$123 \u_i2cSlaveTop.u_i2cSlave.sclDeb }
  ctrl outputs: { $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n291$945 $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n323$950 $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n324$951 $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$n176$149 }
  transition:       2'00 5'00--0 ->       2'00 5'01000
  transition:       2'00 5'00001 ->       2'00 5'01000
  transition:       2'00 5'00101 ->       2'01 5'01001
  transition:       2'00 5'00-11 ->       2'10 5'01010
  transition:       2'00 5'10--- ->       2'00 5'01000
  transition:       2'00 5'-1--- ->       2'00 5'01000
  transition:       2'10 5'00--0 ->       2'10 5'10010
  transition:       2'10 5'00001 ->       2'10 5'10010
  transition:       2'10 5'00101 ->       2'01 5'10001
  transition:       2'10 5'00-11 ->       2'10 5'10010
  transition:       2'10 5'10--- ->       2'00 5'10000
  transition:       2'10 5'-1--- ->       2'00 5'10000
  transition:       2'01 5'00--0 ->       2'01 5'00101
  transition:       2'01 5'00001 ->       2'01 5'00101
  transition:       2'01 5'00101 ->       2'01 5'00101
  transition:       2'01 5'00-11 ->       2'10 5'00110
  transition:       2'01 5'10--- ->       2'00 5'00100
  transition:       2'01 5'-1--- ->       2'00 5'00100

12.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\u_i2cSlaveTop.u_i2cSlave.startStopDetState$1892' from module `\top'.
  Merging pattern 5'00001 and 5'00101 from group (2 2 5'00101).
  Merging pattern 5'00101 and 5'00001 from group (2 2 5'00101).

12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 9 unused cells and 10 unused wires.
<suppressed ~11 debug messages>

12.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\u_i2cSlaveTop.u_i2cSlave.startStopDetState$1892' from module `\top'.
  Removing unused output signal $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$n176$149 [0].
  Removing unused output signal $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$n176$149 [1].

12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\u_i2cSlaveTop.u_i2cSlave.startStopDetState$1892' from module `\top' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00 -> --1
  10 -> -1-
  01 -> 1--

12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\u_i2cSlaveTop.u_i2cSlave.startStopDetState$1892' from module `top':
-------------------------------------

  Information on FSM $fsm$\u_i2cSlaveTop.u_i2cSlave.startStopDetState$1892 (\u_i2cSlaveTop.u_i2cSlave.startStopDetState):

  Number of input signals:    5
  Number of output signals:   3
  Number of state bits:       3

  Input signals:
    0: \u_i2cSlaveTop.u_i2cSlave.sclDeb
    1: $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$n154$123
    2: $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$n160$124
    3: \u_i2cSlaveTop.u_i2cSlave.rstPipe [1]
    4: \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.clearStartStopDet

  Output signals:
    0: $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n324$951
    1: $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n323$950
    2: $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n291$945

  State encoding:
    0:      3'--1  <RESET STATE>
    1:      3'-1-
    2:      3'1--

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 5'00--0   ->     0 3'010
      1:     0 5'00001   ->     0 3'010
      2:     0 5'10---   ->     0 3'010
      3:     0 5'-1---   ->     0 3'010
      4:     0 5'00-11   ->     1 3'010
      5:     0 5'00101   ->     2 3'010
      6:     1 5'10---   ->     0 3'100
      7:     1 5'-1---   ->     0 3'100
      8:     1 5'00--0   ->     1 3'100
      9:     1 5'00001   ->     1 3'100
     10:     1 5'00-11   ->     1 3'100
     11:     1 5'00101   ->     2 3'100
     12:     2 5'10---   ->     0 3'001
     13:     2 5'-1---   ->     0 3'001
     14:     2 5'00-11   ->     1 3'001
     15:     2 5'00--0   ->     2 3'001
     16:     2 5'00-01   ->     2 3'001

-------------------------------------

12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\u_i2cSlaveTop.u_i2cSlave.startStopDetState$1892' from module `\top'.

13. Executing OPT pass (performing simple optimizations).

13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~4 debug messages>

13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~127 debug messages>

13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$writeEn_reg$i2cSlaveSerialInterface.v:449$1221 ($dff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_writeEn, Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.writeEn, rval = 1'0).
Adding SRST signal on $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$txData_reg$i2cSlaveSerialInterface.v:449$1225 ($dff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_txData, Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.txData, rval = 8'00000000).
Adding SRST signal on $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$streamSt_reg$i2cSlaveSerialInterface.v:449$1224 ($dff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_streamSt, Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.streamSt, rval = 2'00).
Adding SRST signal on $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$sdaOut_reg$i2cSlaveSerialInterface.v:449$1220 ($dff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_sdaOut, Q = \CpuSda, rval = 1'1).
Adding SRST signal on $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$rxData_reg$i2cSlaveSerialInterface.v:449$1226 ($dff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_rxData, Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.rxData, rval = 8'00000000).
Adding EN signal on $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$regAddr_reg$i2cSlaveSerialInterface.v:449$1228 ($dff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_regAddr, Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.regAddr).
Adding SRST signal on $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$dataOut_reg$i2cSlaveSerialInterface.v:449$1222 ($dff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_dataOut, Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut, rval = 8'00000000).
Adding SRST signal on $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$clearStartStopDet_reg$i2cSlaveSerialInterface.v:449$1223 ($dff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_clearStartStopDet, Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.clearStartStopDet, rval = 1'0).
Adding SRST signal on $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$bitCnt_reg$i2cSlaveSerialInterface.v:449$1227 ($dff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_bitCnt, Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.bitCnt, rval = 3'000).
Adding SRST signal on $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$I2CReadDataLatchedOut_reg$i2cSlaveSerialInterface.v:476$1240 ($dff) from module top (D = $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n959$974, Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.I2CReadDataLatchedOut, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$1945 ($sdff) from module top (D = $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n959$974, Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.I2CReadDataLatchedOut).
Adding SRST signal on $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$CurrState_SISt_reg$i2cSlaveSerialInterface.v:424$1201 ($dff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.NextState_SISt, Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.CurrState_SISt, rval = 4'0000).
Adding SRST signal on $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$startEdgeDet_reg$i2cSlave.v:245$201 ($dff) from module top (D = $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$n146$121, Q = \u_i2cSlaveTop.u_i2cSlave.startEdgeDet, rval = 1'0).
Adding SRST signal on $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$sdaPipe_reg$i2cSlave.v:191$174 ($dff) from module top (D = { \u_i2cSlaveTop.u_i2cSlave.sdaPipe [3:0] \CpuSda }, Q = \u_i2cSlaveTop.u_i2cSlave.sdaPipe, rval = 5'11111).
Adding SRST signal on $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$sdaDelayed_reg$i2cSlave.v:214$183 ($dff) from module top (D = { \u_i2cSlaveTop.u_i2cSlave.sdaDelayed [0] \u_i2cSlaveTop.u_i2cSlave.sdaDeb }, Q = \u_i2cSlaveTop.u_i2cSlave.sdaDelayed, rval = 2'11).
Adding SRST signal on $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$sdaDeb_reg$i2cSlave.v:191$175 ($dff) from module top (D = $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$n65$114, Q = \u_i2cSlaveTop.u_i2cSlave.sdaDeb, rval = 1'1).
Adding EN signal on $auto$ff.cc:262:slice$1957 ($sdff) from module top (D = 1'0, Q = \u_i2cSlaveTop.u_i2cSlave.sdaDeb).
Adding SRST signal on $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$sclPipe_reg$i2cSlave.v:191$176 ($dff) from module top (D = { \u_i2cSlaveTop.u_i2cSlave.sclPipe [3:0] \CpuScl }, Q = \u_i2cSlaveTop.u_i2cSlave.sclPipe, rval = 5'11111).
Adding SRST signal on $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$sclDelayed_reg$i2cSlave.v:214$182 ($dff) from module top (D = { \u_i2cSlaveTop.u_i2cSlave.sclDelayed [3:0] \u_i2cSlaveTop.u_i2cSlave.sclDeb }, Q = \u_i2cSlaveTop.u_i2cSlave.sclDelayed, rval = 5'11111).
Adding SRST signal on $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$sclDeb_reg$i2cSlave.v:191$177 ($dff) from module top (D = $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$n57$110, Q = \u_i2cSlaveTop.u_i2cSlave.sclDeb, rval = 1'1).
Adding EN signal on $auto$ff.cc:262:slice$1963 ($sdff) from module top (D = 1'0, Q = \u_i2cSlaveTop.u_i2cSlave.sclDeb).
Adding SRST signal on $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$rstPipe_reg$i2cSlave.v:158$156 ($dff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.rstPipe [0], Q = \u_i2cSlaveTop.u_i2cSlave.rstPipe [1], rval = 1'1).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_7.$verific$RAM9bit_reg$r1024x9_1024x9.v:41$1883 ($dff) from module top (D = $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_7.$verific$n37$1865 [8:0], Q = \u_IR_Emitter_Interface.u_IR_Emitter_SRAM_7.RAM9bit).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_6.$verific$RAM9bit_reg$r1024x9_1024x9.v:41$1883 ($dff) from module top (D = $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_6.$verific$n37$1865 [8:0], Q = \u_IR_Emitter_Interface.u_IR_Emitter_SRAM_6.RAM9bit).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_5.$verific$RAM9bit_reg$r1024x9_1024x9.v:41$1883 ($dff) from module top (D = $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_5.$verific$n37$1865 [8:0], Q = \u_IR_Emitter_Interface.u_IR_Emitter_SRAM_5.RAM9bit).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_4.$verific$RAM9bit_reg$r1024x9_1024x9.v:41$1883 ($dff) from module top (D = $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_4.$verific$n37$1865 [8:0], Q = \u_IR_Emitter_Interface.u_IR_Emitter_SRAM_4.RAM9bit).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_3.$verific$RAM9bit_reg$r1024x9_1024x9.v:41$1883 ($dff) from module top (D = $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_3.$verific$n37$1865 [8:0], Q = \u_IR_Emitter_Interface.u_IR_Emitter_SRAM_3.RAM9bit).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_2.$verific$RAM9bit_reg$r1024x9_1024x9.v:41$1883 ($dff) from module top (D = $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_2.$verific$n37$1865 [8:0], Q = \u_IR_Emitter_Interface.u_IR_Emitter_SRAM_2.RAM9bit).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_1.$verific$RAM9bit_reg$r1024x9_1024x9.v:41$1883 ($dff) from module top (D = $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_1.$verific$n37$1865 [8:0], Q = \u_IR_Emitter_Interface.u_IR_Emitter_SRAM_1.RAM9bit).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_0.$verific$RAM9bit_reg$r1024x9_1024x9.v:41$1883 ($dff) from module top (D = $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_0.$verific$n37$1865 [8:0], Q = \u_IR_Emitter_Interface.u_IR_Emitter_SRAM_0.RAM9bit).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_LED_Gpio_o_reg$IR_Emitter_Registers.v:408$1849 ($adff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut [2], Q = \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_LED_Gpio_o).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_LED_Gpio_Polarity_o_reg$IR_Emitter_Registers.v:408$1848 ($adff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut [3], Q = \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_LED_Gpio_Polarity_o).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Mode_Modulator_o_reg$IR_Emitter_Registers.v:408$1842 ($adff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut [1:0], Q = \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Mode_Modulator_o).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_MemRd_Stop_o_reg$IR_Emitter_Registers.v:408$1846 ($adff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Stop_o [7:0]).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_MemRd_Stop_o_reg$IR_Emitter_Registers.v:408$1846 ($adff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut [4:0], Q = \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Stop_o [12:8]).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_MemRd_Start_o_reg$IR_Emitter_Registers.v:408$1845 ($adff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Start_o [7:0]).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_MemRd_Start_o_reg$IR_Emitter_Registers.v:408$1845 ($adff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut [4:0], Q = \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Start_o [12:8]).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_MemAddr_Reg_o_reg$IR_Emitter_Registers.v:408$1847 ($adff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut [5:0], Q = \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemAddr_Reg_o).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Interrupt_reg$IR_Emitter_Registers.v:408$1853 ($adff) from module top (D = $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n386$1704, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Interrupt).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Interrupt_Enable_reg$IR_Emitter_Registers.v:408$1854 ($adff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut [5], Q = \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Interrupt_Enable).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Gpio_Port_o_reg$IR_Emitter_Registers.v:408$1850 ($adff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Gpio_Port_o).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Gpio_Dir_o_reg$IR_Emitter_Registers.v:408$1851 ($adff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Gpio_Dir_o).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Carrier_Duty_Len_o_reg$IR_Emitter_Registers.v:408$1844 ($adff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Duty_Len_o [7:0]).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Carrier_Duty_Len_o_reg$IR_Emitter_Registers.v:408$1844 ($adff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Duty_Len_o [15:8]).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Carrier_Cycle_Len_o_reg$IR_Emitter_Registers.v:408$1843 ($adff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Cycle_Len_o [7:0]).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Carrier_Cycle_Len_o_reg$IR_Emitter_Registers.v:408$1843 ($adff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Cycle_Len_o [15:8]).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_Pulse_Modulator_o_tc_reg$IR_Emitter_Modulator.v:260$1584 ($adff) from module top (D = \u_IR_Emitter_Interface.u_IR_Emitter_Modulator.IR_Emitter_Pulse_Modulator_o_tc_nxt, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Modulator.IR_Emitter_Pulse_Modulator_o_tc).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_Pulse_Modulator_o_reg$IR_Emitter_Modulator.v:260$1581 ($adff) from module top (D = \u_IR_Emitter_Interface.u_IR_Emitter_Modulator.IR_Emitter_Pulse_Modulator_o_nxt, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Modulator.IR_Emitter_Pulse_Modulator_o).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_MemData_lwr_reg$IR_Emitter_Modulator.v:260$1585 ($adff) from module top (D = \u_IR_Emitter_Interface.IR_Emitter_MemData_o, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Modulator.IR_Emitter_MemData_lwr).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_MemAddr_Modulator_o_tc_upr_reg$IR_Emitter_Modulator.v:260$1580 ($adff) from module top (D = \u_IR_Emitter_Interface.u_IR_Emitter_Modulator.IR_Emitter_MemAddr_Modulator_o_tc_lwr, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Modulator.IR_Emitter_MemAddr_Modulator_o_tc_upr).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_MemAddr_Modulator_o_tc_lwr_reg$IR_Emitter_Modulator.v:260$1579 ($adff) from module top (D = \u_IR_Emitter_Interface.u_IR_Emitter_Modulator.IR_Emitter_MemAddr_Modulator_o_tc_nxt, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Modulator.IR_Emitter_MemAddr_Modulator_o_tc_lwr).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_MemAddr_Modulator_o_reg$IR_Emitter_Modulator.v:260$1576 ($adff) from module top (D = \u_IR_Emitter_Interface.u_IR_Emitter_Modulator.IR_Emitter_MemAddr_Modulator_o_nxt, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Modulator.IR_Emitter_MemAddr_Modulator_o).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Duty_1_cntr_tc_reg$IR_Emitter_Carrier_Generator.v:216$1380 ($adff) from module top (D = \u_IR_Emitter_Interface.u_IR_Emitter_Carrier_Generator.IR_Emitter_Carrier_Duty_1_cntr_tc_nxt, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Carrier_Generator.IR_Emitter_Carrier_Duty_1_cntr_tc).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Duty_1_cntr_reg$IR_Emitter_Carrier_Generator.v:216$1379 ($adff) from module top (D = \u_IR_Emitter_Interface.u_IR_Emitter_Carrier_Generator.IR_Emitter_Carrier_Duty_1_cntr_nxt, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Carrier_Generator.IR_Emitter_Carrier_Duty_1_cntr).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Cycle_1_cntr_tc_reg$IR_Emitter_Carrier_Generator.v:216$1375 ($adff) from module top (D = \u_IR_Emitter_Interface.u_IR_Emitter_Carrier_Generator.IR_Emitter_Carrier_Cycle_1_cntr_tc_nxt, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Carrier_Generator.IR_Emitter_Carrier_Cycle_1_cntr_tc).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Cycle_1_cntr_reg$IR_Emitter_Carrier_Generator.v:216$1374 ($adff) from module top (D = \u_IR_Emitter_Interface.u_IR_Emitter_Carrier_Generator.IR_Emitter_Carrier_Cycle_1_cntr_nxt, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Carrier_Generator.IR_Emitter_Carrier_Cycle_1_cntr).

13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 52 unused cells and 62 unused wires.
<suppressed ~53 debug messages>

13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~7 debug messages>

13.9. Rerunning OPT passes. (Maybe there is more to do..)

13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~85 debug messages>

13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

13.13. Executing OPT_DFF pass (perform DFF optimizations).

13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

13.16. Rerunning OPT passes. (Maybe there is more to do..)

13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~85 debug messages>

13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

13.20. Executing OPT_DFF pass (perform DFF optimizations).

13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

13.23. Finished OPT passes. (There is nothing left to do.)

14. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 2) from mux cell top.$flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$mux_11$i2cSlave.v:156$155 ($mux).
Removed top 1 bits (of 4) from mux cell top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$mux_138$i2cSlaveSerialInterface.v:366$1172 ($mux).
Removed top 1 bits (of 7) from port B of cell top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$equal_115$i2cSlaveSerialInterface.v:342$1158 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$equal_232$i2cSlaveSerialInterface.v:462$1233 ($eq).
Removed top 1 bits (of 4) from mux cell top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$mux_50$i2cSlaveSerialInterface.v:282$1125 ($mux).
Removed top 2 bits (of 3) from port B of cell top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$add_48$i2cSlaveSerialInterface.v:280$1123 ($add).
Removed top 7 bits (of 8) from port B of cell top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$add_25$i2cSlaveSerialInterface.v:245$1107 ($add).
Removed top 1 bits (of 2) from port B of cell top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$equal_22$i2cSlaveSerialInterface.v:241$1105 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$1923 ($eq).
Removed top 4 bits (of 5) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$1919 ($eq).
Removed top 1 bits (of 9) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_7.$verific$xor_22$r1024x9_1024x9.v:40$1879 ($xor).
Removed top 1 bits (of 9) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_6.$verific$xor_22$r1024x9_1024x9.v:40$1879 ($xor).
Removed top 1 bits (of 9) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_5.$verific$xor_22$r1024x9_1024x9.v:40$1879 ($xor).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$1950 ($ne).
Removed top 1 bits (of 9) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_4.$verific$xor_22$r1024x9_1024x9.v:40$1879 ($xor).
Removed top 1 bits (of 9) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_3.$verific$xor_22$r1024x9_1024x9.v:40$1879 ($xor).
Removed top 1 bits (of 9) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_2.$verific$xor_22$r1024x9_1024x9.v:40$1879 ($xor).
Removed top 1 bits (of 9) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_1.$verific$xor_22$r1024x9_1024x9.v:40$1879 ($xor).
Removed top 1 bits (of 9) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_0.$verific$xor_22$r1024x9_1024x9.v:40$1879 ($xor).
Removed top 5 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_5$IR_Emitter_Registers.v:239$1752 ($eq).
Removed top 5 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_8$IR_Emitter_Registers.v:240$1755 ($eq).
Removed top 5 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_11$IR_Emitter_Registers.v:242$1758 ($eq).
Removed top 5 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_14$IR_Emitter_Registers.v:243$1761 ($eq).
Removed top 4 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_17$IR_Emitter_Registers.v:245$1764 ($eq).
Removed top 4 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_20$IR_Emitter_Registers.v:246$1767 ($eq).
Removed top 4 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_23$IR_Emitter_Registers.v:248$1770 ($eq).
Removed top 4 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_26$IR_Emitter_Registers.v:249$1773 ($eq).
Removed top 4 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_29$IR_Emitter_Registers.v:251$1776 ($eq).
Removed top 4 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_32$IR_Emitter_Registers.v:252$1779 ($eq).
Removed top 4 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_35$IR_Emitter_Registers.v:254$1782 ($eq).
Removed top 3 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_38$IR_Emitter_Registers.v:256$1785 ($eq).
Removed top 3 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_41$IR_Emitter_Registers.v:257$1788 ($eq).
Removed top 7 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_63$IR_Emitter_Registers.v:283$1792 ($eq).
Removed top 6 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_64$IR_Emitter_Registers.v:285$1793 ($eq).
Removed top 3 bits (of 4) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$1932 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$1930 ($eq).
Removed top 2 bits (of 3) from mux cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$mux_79$IR_Emitter_Modulator.v:339$1599 ($mux).
Removed top 14 bits (of 16) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$equal_196$IR_Emitter_Modulator.v:529$1651 ($eq).
Removed top 12 bits (of 13) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$add_173$IR_Emitter_Modulator.v:478$1627 ($add).
Removed top 1 bits (of 2) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$equal_176$IR_Emitter_Modulator.v:477$1628 ($eq).
Removed top 1 bits (of 17) from port A of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$sub_185$IR_Emitter_Modulator.v:508$1639 ($sub).
Removed top 16 bits (of 17) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$sub_185$IR_Emitter_Modulator.v:508$1639 ($sub).
Removed top 1 bits (of 17) from port Y of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$sub_185$IR_Emitter_Modulator.v:508$1639 ($sub).
Removed top 1 bits (of 2) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$equal_188$IR_Emitter_Modulator.v:507$1641 ($eq).
Removed top 15 bits (of 16) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$equal_193$IR_Emitter_Modulator.v:528$1648 ($eq).
Removed top 1 bits (of 9) from port A of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_56$IR_Emitter_Carrier_Generator.v:236$1386 ($sub).
Removed top 8 bits (of 9) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_56$IR_Emitter_Carrier_Generator.v:236$1386 ($sub).
Removed top 1 bits (of 9) from port Y of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_56$IR_Emitter_Carrier_Generator.v:236$1386 ($sub).
Removed top 6 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$equal_62$IR_Emitter_Carrier_Generator.v:243$1392 ($eq).
Removed top 7 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$equal_65$IR_Emitter_Carrier_Generator.v:245$1395 ($eq).
Removed top 1 bits (of 9) from port A of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_71$IR_Emitter_Carrier_Generator.v:264$1399 ($sub).
Removed top 8 bits (of 9) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_71$IR_Emitter_Carrier_Generator.v:264$1399 ($sub).
Removed top 1 bits (of 9) from port Y of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_71$IR_Emitter_Carrier_Generator.v:264$1399 ($sub).
Removed top 7 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$equal_77$IR_Emitter_Carrier_Generator.v:272$1403 ($eq).
Removed top 15 bits (of 16) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$equal_89$IR_Emitter_Carrier_Generator.v:302$1412 ($eq).
Removed top 1 bits (of 2) from mux cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$mux_99$IR_Emitter_Carrier_Generator.v:338$1416 ($mux).
Removed top 1 bits (of 9) from port A of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_149$IR_Emitter_Carrier_Generator.v:438$1443 ($sub).
Removed top 8 bits (of 9) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_149$IR_Emitter_Carrier_Generator.v:438$1443 ($sub).
Removed top 1 bits (of 9) from port Y of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_149$IR_Emitter_Carrier_Generator.v:438$1443 ($sub).
Removed top 6 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$equal_155$IR_Emitter_Carrier_Generator.v:445$1449 ($eq).
Removed top 7 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$equal_158$IR_Emitter_Carrier_Generator.v:447$1452 ($eq).
Removed top 1 bits (of 9) from port A of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_164$IR_Emitter_Carrier_Generator.v:466$1456 ($sub).
Removed top 8 bits (of 9) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_164$IR_Emitter_Carrier_Generator.v:466$1456 ($sub).
Removed top 1 bits (of 9) from port Y of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_164$IR_Emitter_Carrier_Generator.v:466$1456 ($sub).
Removed top 7 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$equal_170$IR_Emitter_Carrier_Generator.v:474$1462 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\u_IR_Emitter_Interface.$verific$equal_75$IR_Emitter_Interface.v:296$331 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\u_IR_Emitter_Interface.$verific$equal_72$IR_Emitter_Interface.v:295$330 ($eq).
Removed top 2 bits (of 3) from port B of cell top.$flatten\u_IR_Emitter_Interface.$verific$equal_69$IR_Emitter_Interface.v:294$329 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\u_IR_Emitter_Interface.$verific$equal_51$IR_Emitter_Interface.v:282$322 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\u_IR_Emitter_Interface.$verific$equal_48$IR_Emitter_Interface.v:281$321 ($eq).
Removed top 2 bits (of 3) from port B of cell top.$flatten\u_IR_Emitter_Interface.$verific$equal_45$IR_Emitter_Interface.v:280$320 ($eq).
Removed top 1 bits (of 9) from wire top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$n175$1318.
Removed top 1 bits (of 9) from wire top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$n223$1321.
Removed top 1 bits (of 2) from wire top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$n288$1326.
Removed top 1 bits (of 9) from wire top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$n364$1337.
Removed top 1 bits (of 9) from wire top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$n412$1340.
Removed top 2 bits (of 3) from wire top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$n214$1531.
Removed top 1 bits (of 17) from wire top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$n432$1545.
Removed top 13 bits (of 22) from wire top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_0.$verific$n37$1865.
Removed top 13 bits (of 22) from wire top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_1.$verific$n37$1865.
Removed top 13 bits (of 22) from wire top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_2.$verific$n37$1865.
Removed top 13 bits (of 22) from wire top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_3.$verific$n37$1865.
Removed top 13 bits (of 22) from wire top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_4.$verific$n37$1865.
Removed top 13 bits (of 22) from wire top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_5.$verific$n37$1865.
Removed top 13 bits (of 22) from wire top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_6.$verific$n37$1865.
Removed top 13 bits (of 22) from wire top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_7.$verific$n37$1865.
Removed top 1 bits (of 2) from wire top.$flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$n16$129.
Removed top 1 bits (of 4) from wire top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n247$1010.
Removed top 1 bits (of 4) from wire top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n559$1051.

15. Executing PEEPOPT pass (run peephole optimizers).

16. Executing PMUXTREE pass.

17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 30 unused cells and 68 unused wires.
<suppressed ~31 debug messages>

18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module top:
  creating $macc model for $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_149$IR_Emitter_Carrier_Generator.v:438$1443 ($sub).
  creating $macc model for $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_164$IR_Emitter_Carrier_Generator.v:466$1456 ($sub).
  creating $macc model for $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_56$IR_Emitter_Carrier_Generator.v:236$1386 ($sub).
  creating $macc model for $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_71$IR_Emitter_Carrier_Generator.v:264$1399 ($sub).
  creating $macc model for $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$add_173$IR_Emitter_Modulator.v:478$1627 ($add).
  creating $macc model for $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$sub_185$IR_Emitter_Modulator.v:508$1639 ($sub).
  creating $macc model for $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$add_25$i2cSlaveSerialInterface.v:245$1107 ($add).
  creating $macc model for $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$add_48$i2cSlaveSerialInterface.v:280$1123 ($add).
  creating $alu model for $macc $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$add_48$i2cSlaveSerialInterface.v:280$1123.
  creating $alu model for $macc $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$add_25$i2cSlaveSerialInterface.v:245$1107.
  creating $alu model for $macc $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$sub_185$IR_Emitter_Modulator.v:508$1639.
  creating $alu model for $macc $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$add_173$IR_Emitter_Modulator.v:478$1627.
  creating $alu model for $macc $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_71$IR_Emitter_Carrier_Generator.v:264$1399.
  creating $alu model for $macc $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_56$IR_Emitter_Carrier_Generator.v:236$1386.
  creating $alu model for $macc $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_164$IR_Emitter_Carrier_Generator.v:466$1456.
  creating $alu model for $macc $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_149$IR_Emitter_Carrier_Generator.v:438$1443.
  creating $alu cell for $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_149$IR_Emitter_Carrier_Generator.v:438$1443: $auto$alumacc.cc:485:replace_alu$2203
  creating $alu cell for $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_164$IR_Emitter_Carrier_Generator.v:466$1456: $auto$alumacc.cc:485:replace_alu$2206
  creating $alu cell for $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_56$IR_Emitter_Carrier_Generator.v:236$1386: $auto$alumacc.cc:485:replace_alu$2209
  creating $alu cell for $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_71$IR_Emitter_Carrier_Generator.v:264$1399: $auto$alumacc.cc:485:replace_alu$2212
  creating $alu cell for $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$add_173$IR_Emitter_Modulator.v:478$1627: $auto$alumacc.cc:485:replace_alu$2215
  creating $alu cell for $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$sub_185$IR_Emitter_Modulator.v:508$1639: $auto$alumacc.cc:485:replace_alu$2218
  creating $alu cell for $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$add_25$i2cSlaveSerialInterface.v:245$1107: $auto$alumacc.cc:485:replace_alu$2221
  creating $alu cell for $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$add_48$i2cSlaveSerialInterface.v:280$1123: $auto$alumacc.cc:485:replace_alu$2224
  created 8 $alu and 0 $macc cells.

19. Executing OPT pass (performing simple optimizations).

19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~9 debug messages>

19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $auto$pmuxtree.cc:65:recursive_mux_generator$2057.
    dead port 2/2 on $mux $auto$pmuxtree.cc:65:recursive_mux_generator$2065.
    dead port 2/2 on $mux $auto$pmuxtree.cc:65:recursive_mux_generator$2073.
    dead port 2/2 on $mux $auto$pmuxtree.cc:65:recursive_mux_generator$2081.
Removed 4 multiplexer ports.
<suppressed ~85 debug messages>

19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$2183: { $auto$rtlil.cc:2393:Or$2146 $auto$rtlil.cc:2393:Or$2154 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n36$1679 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n33$1677 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n24$1671 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n21$1669 }
  Optimizing cells in module \top.
Performed a total of 1 changes.

19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

19.6. Executing OPT_DFF pass (perform DFF optimizations).

19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 4 unused cells and 11 unused wires.
<suppressed ~5 debug messages>

19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

19.9. Rerunning OPT passes. (Maybe there is more to do..)

19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~83 debug messages>

19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

19.13. Executing OPT_DFF pass (perform DFF optimizations).

19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

19.16. Finished OPT passes. (There is nothing left to do.)

20. Executing MEMORY pass.

20.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

20.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

20.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

20.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

20.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

20.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

20.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

20.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

20.9. Executing MEMORY_COLLECT pass (generating $mem cells).

21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~12 debug messages>

23. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping top.$auto$ff.cc:262:slice$1940 ($sdff).
Mapping top.$auto$ff.cc:262:slice$1941 ($dffe).
Mapping top.$auto$ff.cc:262:slice$1942 ($sdff).
Mapping top.$auto$ff.cc:262:slice$1943 ($sdff).
Mapping top.$auto$ff.cc:262:slice$1944 ($sdff).
Mapping top.$auto$ff.cc:262:slice$1946 ($sdffe).
Mapping top.$auto$ff.cc:262:slice$1953 ($sdff).
Mapping top.$auto$ff.cc:262:slice$1954 ($sdff).
Mapping top.$auto$ff.cc:262:slice$1955 ($sdff).
Mapping top.$auto$ff.cc:262:slice$1956 ($sdff).
Mapping top.$auto$ff.cc:262:slice$1960 ($sdffe).
Mapping top.$auto$ff.cc:262:slice$1961 ($sdff).
Mapping top.$auto$ff.cc:262:slice$1962 ($sdff).
Mapping top.$auto$ff.cc:262:slice$1966 ($sdffe).
Mapping top.$auto$ff.cc:262:slice$1967 ($sdff).
Mapping top.$auto$ff.cc:262:slice$1968 ($dff).
Mapping top.$auto$ff.cc:262:slice$1969 ($dffe).
Mapping top.$auto$ff.cc:262:slice$1970 ($dffe).
Mapping top.$auto$ff.cc:262:slice$1971 ($dffe).
Mapping top.$auto$ff.cc:262:slice$1972 ($dffe).
Mapping top.$auto$ff.cc:262:slice$1973 ($dffe).
Mapping top.$auto$ff.cc:262:slice$1974 ($dffe).
Mapping top.$auto$ff.cc:262:slice$1975 ($dffe).
Mapping top.$auto$ff.cc:262:slice$1976 ($dffe).
Mapping top.$auto$ff.cc:262:slice$1977 ($adffe).
Mapping top.$auto$ff.cc:262:slice$1978 ($adffe).
Mapping top.$auto$ff.cc:262:slice$1979 ($adffe).
Mapping top.$auto$ff.cc:262:slice$1980 ($adffe).
Mapping top.$auto$ff.cc:262:slice$1981 ($adffe).
Mapping top.$auto$ff.cc:262:slice$1982 ($adffe).
Mapping top.$auto$ff.cc:262:slice$1983 ($adffe).
Mapping top.$auto$ff.cc:262:slice$1984 ($adffe).
Mapping top.$auto$ff.cc:262:slice$1985 ($adffe).
Mapping top.$auto$ff.cc:262:slice$1988 ($adffe).
Mapping top.$auto$ff.cc:262:slice$1989 ($adffe).
Mapping top.$auto$ff.cc:262:slice$1990 ($adffe).
Mapping top.$auto$ff.cc:262:slice$1991 ($adffe).
Mapping top.$auto$ff.cc:262:slice$1992 ($adffe).
Mapping top.$auto$ff.cc:262:slice$1993 ($adffe).
Mapping top.$auto$ff.cc:262:slice$1994 ($adffe).
Mapping top.$auto$ff.cc:262:slice$1995 ($adffe).
Mapping top.$auto$ff.cc:262:slice$1998 ($adffe).
Mapping top.$auto$ff.cc:262:slice$2001 ($adffe).
Mapping top.$auto$ff.cc:262:slice$2002 ($adffe).
Mapping top.$auto$ff.cc:262:slice$2003 ($adffe).
Mapping top.$auto$ff.cc:262:slice$2004 ($adffe).
Mapping top.$auto$ff.cc:262:slice$2007 ($adffe).
Mapping top.$auto$ff.cc:262:slice$2008 ($adffe).
Mapping top.$auto$ff.cc:262:slice$2009 ($adffe).
Mapping top.$auto$ff.cc:262:slice$2010 ($adffe).
Mapping top.$auto$fsm_map.cc:121:implement_pattern_cache$1904 ($and).
Mapping top.$auto$fsm_map.cc:121:implement_pattern_cache$1908 ($and).
Mapping top.$auto$fsm_map.cc:121:implement_pattern_cache$1917 ($and).
Mapping top.$auto$fsm_map.cc:121:implement_pattern_cache$1921 ($and).
Mapping top.$auto$fsm_map.cc:121:implement_pattern_cache$1928 ($and).
Mapping top.$auto$fsm_map.cc:121:implement_pattern_cache$1934 ($and).
Mapping top.$auto$fsm_map.cc:144:implement_pattern_cache$1913 ($reduce_or).
Mapping top.$auto$fsm_map.cc:144:implement_pattern_cache$1924 ($reduce_or).
Mapping top.$auto$fsm_map.cc:144:implement_pattern_cache$1935 ($reduce_or).
Mapping top.$auto$fsm_map.cc:172:map_fsm$1898 ($dff).
Mapping top.$auto$fsm_map.cc:77:implement_pattern_cache$1910 ($eq).
Mapping top.$auto$fsm_map.cc:77:implement_pattern_cache$1919 ($eq).
Mapping top.$auto$fsm_map.cc:77:implement_pattern_cache$1923 ($eq).
Mapping top.$auto$fsm_map.cc:77:implement_pattern_cache$1926 ($logic_not).
Mapping top.$auto$fsm_map.cc:77:implement_pattern_cache$1930 ($eq).
Mapping top.$auto$fsm_map.cc:77:implement_pattern_cache$1932 ($eq).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$1948 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$1950 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$1987 ($reduce_bool).
Mapping top.$auto$opt_dff.cc:220:make_patterns_logic$1952 ($reduce_and).
Mapping top.$auto$opt_dff.cc:254:combine_resets$1959 ($reduce_or).
Mapping top.$auto$opt_dff.cc:254:combine_resets$1965 ($reduce_or).
Mapping top.$auto$opt_reduce.cc:128:opt_pmux$1884 ($reduce_or).
Mapping top.$auto$opt_reduce.cc:128:opt_pmux$1886 ($reduce_or).
Mapping top.$auto$opt_reduce.cc:128:opt_pmux$1890 ($reduce_or).
Mapping top.$auto$pmuxtree.cc:35:or_generator$2101 ($or).
Mapping top.$auto$pmuxtree.cc:35:or_generator$2121 ($or).
Mapping top.$auto$pmuxtree.cc:35:or_generator$2145 ($or).
Mapping top.$auto$pmuxtree.cc:35:or_generator$2153 ($or).
Mapping top.$auto$pmuxtree.cc:35:or_generator$2165 ($or).
Mapping top.$auto$pmuxtree.cc:35:or_generator$2175 ($or).
Mapping top.$auto$pmuxtree.cc:37:or_generator$2157 ($reduce_or).
Mapping top.$auto$pmuxtree.cc:37:or_generator$2179 ($reduce_or).
Mapping top.$auto$pmuxtree.cc:37:or_generator$2183 ($reduce_or).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$2033 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$2035 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$2041 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$2043 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$2049 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$2051 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$2059 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$2067 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$2075 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$2083 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$2089 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$2091 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$2099 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$2103 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$2109 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$2111 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$2119 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$2123 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$2131 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$2135 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$2141 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$2143 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$2147 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$2149 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$2151 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$2155 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$2159 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$2161 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$2163 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$2167 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$2169 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$2171 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$2173 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$2177 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$2181 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$2185 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$2191 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$2193 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$2199 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$2201 ($mux).
Mapping top.$flatten\u_IR_Emitter_Interface.$verific$RegAddr_i_1ff_reg$IR_Emitter_Interface.v:324$351 ($adff).
Mapping top.$flatten\u_IR_Emitter_Interface.$verific$RegRd_En_i_1ff_reg$IR_Emitter_Interface.v:324$350 ($adff).
Mapping top.$flatten\u_IR_Emitter_Interface.$verific$and_108$IR_Emitter_Interface.v:300$337 ($and).
Mapping top.$flatten\u_IR_Emitter_Interface.$verific$and_110$IR_Emitter_Interface.v:286$327 ($and).
Mapping top.$flatten\u_IR_Emitter_Interface.$verific$equal_42$IR_Emitter_Interface.v:279$319 ($logic_not).
Mapping top.$flatten\u_IR_Emitter_Interface.$verific$equal_45$IR_Emitter_Interface.v:280$320 ($eq).
Mapping top.$flatten\u_IR_Emitter_Interface.$verific$equal_48$IR_Emitter_Interface.v:281$321 ($eq).
Mapping top.$flatten\u_IR_Emitter_Interface.$verific$equal_51$IR_Emitter_Interface.v:282$322 ($eq).
Mapping top.$flatten\u_IR_Emitter_Interface.$verific$equal_54$IR_Emitter_Interface.v:283$323 ($eq).
Mapping top.$flatten\u_IR_Emitter_Interface.$verific$equal_57$IR_Emitter_Interface.v:284$324 ($eq).
Mapping top.$flatten\u_IR_Emitter_Interface.$verific$equal_60$IR_Emitter_Interface.v:285$325 ($eq).
Mapping top.$flatten\u_IR_Emitter_Interface.$verific$equal_63$IR_Emitter_Interface.v:286$326 ($eq).
Mapping top.$flatten\u_IR_Emitter_Interface.$verific$equal_66$IR_Emitter_Interface.v:293$328 ($logic_not).
Mapping top.$flatten\u_IR_Emitter_Interface.$verific$equal_69$IR_Emitter_Interface.v:294$329 ($eq).
Mapping top.$flatten\u_IR_Emitter_Interface.$verific$equal_72$IR_Emitter_Interface.v:295$330 ($eq).
Mapping top.$flatten\u_IR_Emitter_Interface.$verific$equal_75$IR_Emitter_Interface.v:296$331 ($eq).
Mapping top.$flatten\u_IR_Emitter_Interface.$verific$equal_78$IR_Emitter_Interface.v:297$332 ($eq).
Mapping top.$flatten\u_IR_Emitter_Interface.$verific$equal_81$IR_Emitter_Interface.v:298$333 ($eq).
Mapping top.$flatten\u_IR_Emitter_Interface.$verific$equal_84$IR_Emitter_Interface.v:299$334 ($eq).
Mapping top.$flatten\u_IR_Emitter_Interface.$verific$equal_87$IR_Emitter_Interface.v:300$335 ($eq).
Mapping top.$flatten\u_IR_Emitter_Interface.$verific$i10$IR_Emitter_Interface.v:196$297 ($mux).
Mapping top.$flatten\u_IR_Emitter_Interface.$verific$i12$IR_Emitter_Interface.v:198$298 ($mux).
Mapping top.$flatten\u_IR_Emitter_Interface.$verific$i14$IR_Emitter_Interface.v:199$299 ($mux).
Mapping top.$flatten\u_IR_Emitter_Interface.$verific$i16$IR_Emitter_Interface.v:200$300 ($mux).
Mapping top.$flatten\u_IR_Emitter_Interface.$verific$i18$IR_Emitter_Interface.v:201$301 ($mux).
Mapping top.$flatten\u_IR_Emitter_Interface.$verific$i35$IR_Emitter_Interface.v:264$311 ($mux).
Mapping top.$flatten\u_IR_Emitter_Interface.$verific$i37$IR_Emitter_Interface.v:271$313 ($and).
Mapping top.$flatten\u_IR_Emitter_Interface.$verific$i38$IR_Emitter_Interface.v:271$314 ($not).
Mapping top.$flatten\u_IR_Emitter_Interface.$verific$i39$IR_Emitter_Interface.v:271$315 ($and).
Mapping top.$flatten\u_IR_Emitter_Interface.$verific$i4$IR_Emitter_Interface.v:193$294 ($mux).
Mapping top.$flatten\u_IR_Emitter_Interface.$verific$i41$IR_Emitter_Interface.v:272$317 ($and).
Mapping top.$flatten\u_IR_Emitter_Interface.$verific$i6$IR_Emitter_Interface.v:194$295 ($mux).
Mapping top.$flatten\u_IR_Emitter_Interface.$verific$i8$IR_Emitter_Interface.v:195$296 ($mux).
Mapping top.$flatten\u_IR_Emitter_Interface.$verific$i91$IR_Emitter_Interface.v:303$338 ($and).
Mapping top.$flatten\u_IR_Emitter_Interface.$verific$i92$IR_Emitter_Interface.v:304$339 ($and).
Mapping top.$flatten\u_IR_Emitter_Interface.$verific$i93$IR_Emitter_Interface.v:305$340 ($and).
Mapping top.$flatten\u_IR_Emitter_Interface.$verific$i94$IR_Emitter_Interface.v:306$341 ($and).
Mapping top.$flatten\u_IR_Emitter_Interface.$verific$i95$IR_Emitter_Interface.v:307$342 ($and).
Mapping top.$flatten\u_IR_Emitter_Interface.$verific$i96$IR_Emitter_Interface.v:308$343 ($and).
Mapping top.$flatten\u_IR_Emitter_Interface.$verific$i97$IR_Emitter_Interface.v:309$344 ($and).
Mapping top.$flatten\u_IR_Emitter_Interface.$verific$mux_19$IR_Emitter_Interface.v:211$303 ($mux).
Mapping top.$flatten\u_IR_Emitter_Interface.$verific$mux_30$IR_Emitter_Interface.v:243$307 ($bmux).
Mapping top.$flatten\u_IR_Emitter_Interface.$verific$mux_32$IR_Emitter_Interface.v:258$309 ($mux).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Cycle_0_cntr_reg$IR_Emitter_Carrier_Generator.v:216$1372 ($adff).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Cycle_0_cntr_tc_reg$IR_Emitter_Carrier_Generator.v:216$1373 ($adff).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Cycle_Enable_o_reg$IR_Emitter_Carrier_Generator.v:216$1376 ($adff).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Duty_0_cntr_reg$IR_Emitter_Carrier_Generator.v:216$1377 ($adff).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Duty_0_cntr_tc_reg$IR_Emitter_Carrier_Generator.v:216$1378 ($adff).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Duty_State_reg$IR_Emitter_Carrier_Generator.v:216$1384 ($adff).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Duty_cntr_ld_reg$IR_Emitter_Carrier_Generator.v:216$1381 ($adff).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Duty_cntr_tc_reg$IR_Emitter_Carrier_Generator.v:216$1382 ($adff).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Duty_ld_tc_reg$IR_Emitter_Carrier_Generator.v:216$1383 ($adff).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Signal_o_reg$IR_Emitter_Carrier_Generator.v:216$1385 ($adff).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$Mux_147$IR_Emitter_Carrier_Generator.v:418$1441 ($bmux).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$Mux_148$IR_Emitter_Carrier_Generator.v:418$1442 ($bmux).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$equal_117$IR_Emitter_Carrier_Generator.v:346$1420 ($eq).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$equal_118$IR_Emitter_Carrier_Generator.v:353$1421 ($eq).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$equal_119$IR_Emitter_Carrier_Generator.v:360$1422 ($eq).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$equal_120$IR_Emitter_Carrier_Generator.v:369$1423 ($eq).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$equal_138$IR_Emitter_Carrier_Generator.v:395$1433 ($eq).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$equal_152$IR_Emitter_Carrier_Generator.v:438$1446 ($logic_not).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$equal_155$IR_Emitter_Carrier_Generator.v:445$1449 ($eq).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$equal_157$IR_Emitter_Carrier_Generator.v:446$1451 ($logic_not).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$equal_158$IR_Emitter_Carrier_Generator.v:447$1452 ($eq).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$equal_167$IR_Emitter_Carrier_Generator.v:466$1459 ($eq).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$equal_170$IR_Emitter_Carrier_Generator.v:474$1462 ($eq).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$equal_172$IR_Emitter_Carrier_Generator.v:476$1464 ($logic_not).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$equal_59$IR_Emitter_Carrier_Generator.v:236$1389 ($eq).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$equal_62$IR_Emitter_Carrier_Generator.v:243$1392 ($eq).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$equal_64$IR_Emitter_Carrier_Generator.v:244$1394 ($logic_not).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$equal_65$IR_Emitter_Carrier_Generator.v:245$1395 ($eq).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$equal_77$IR_Emitter_Carrier_Generator.v:272$1403 ($eq).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$equal_79$IR_Emitter_Carrier_Generator.v:274$1405 ($logic_not).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$equal_88$IR_Emitter_Carrier_Generator.v:301$1411 ($logic_not).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$equal_89$IR_Emitter_Carrier_Generator.v:302$1412 ($eq).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$i101$IR_Emitter_Carrier_Generator.v:338$1417 ($mux).
Mapping top.$auto$ff.cc:262:slice$1938 ($sdff).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$i124$IR_Emitter_Carrier_Generator.v:383$1428 ($or).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$i128$IR_Emitter_Carrier_Generator.v:383$1431 ($mux).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$i142$IR_Emitter_Carrier_Generator.v:409$1438 ($mux).
Mapping top.$auto$ff.cc:262:slice$1939 ($sdff).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$i160$IR_Emitter_Carrier_Generator.v:447$1453 ($or).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$i164$IR_Emitter_Carrier_Generator.v:448$1455 ($mux).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$i177$IR_Emitter_Carrier_Generator.v:477$1466 ($mux).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$i21$IR_Emitter_Carrier_Generator.v:187$1350 ($or).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$i26$IR_Emitter_Carrier_Generator.v:194$1355 ($not).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$i27$IR_Emitter_Carrier_Generator.v:194$1356 ($and).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$i28$IR_Emitter_Carrier_Generator.v:195$1357 ($and).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$i32$IR_Emitter_Carrier_Generator.v:202$1361 ($or).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$i33$IR_Emitter_Carrier_Generator.v:202$1362 ($or).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$i67$IR_Emitter_Carrier_Generator.v:245$1396 ($or).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$i71$IR_Emitter_Carrier_Generator.v:246$1398 ($mux).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$i84$IR_Emitter_Carrier_Generator.v:275$1407 ($mux).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$i86$IR_Emitter_Carrier_Generator.v:291$1408 ($and).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$i87$IR_Emitter_Carrier_Generator.v:291$1409 ($mux).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$i91$IR_Emitter_Carrier_Generator.v:302$1413 ($or).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$mux_146$IR_Emitter_Carrier_Generator.v:418$1440 ($bmux).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$reduce_nor_121$IR_Emitter_Carrier_Generator.v:383$1424 ($not).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$reduce_nor_121$IR_Emitter_Carrier_Generator.v:383$1425 ($reduce_or).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_Busy_Modulator_o_reg$IR_Emitter_Modulator.v:260$1575 ($adff).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_Carrier_Enable_o_reg$IR_Emitter_Modulator.v:260$1574 ($adff).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_MemAddr_Modulator_o_ce_reg$IR_Emitter_Modulator.v:260$1577 ($adff).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_MemAddr_Modulator_o_ld_reg$IR_Emitter_Modulator.v:260$1578 ($adff).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_Modulator_State_reg$IR_Emitter_Modulator.v:260$1589 ($adff).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_Pulse_Modulator_Signal_reg$IR_Emitter_Modulator.v:260$1587 ($adff).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_Pulse_Modulator_o_ld_lwr_reg$IR_Emitter_Modulator.v:260$1582 ($adff).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_Pulse_Modulator_o_ld_upr_reg$IR_Emitter_Modulator.v:260$1583 ($adff).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_LED_En_o_reg$IR_Emitter_Modulator.v:260$1588 ($adff).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$Mux_164$IR_Emitter_Modulator.v:460$1618 ($bmux).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$Mux_165$IR_Emitter_Modulator.v:460$1619 ($bmux).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$Mux_166$IR_Emitter_Modulator.v:460$1620 ($bmux).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$Mux_168$IR_Emitter_Modulator.v:460$1622 ($bmux).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$Mux_169$IR_Emitter_Modulator.v:460$1623 ($bmux).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$Mux_170$IR_Emitter_Modulator.v:460$1624 ($bmux).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$Mux_171$IR_Emitter_Modulator.v:460$1625 ($bmux).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$Mux_61$IR_Emitter_Modulator.v:283$1594 ($bmux).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$equal_140$IR_Emitter_Modulator.v:410$1606 ($eq).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$equal_141$IR_Emitter_Modulator.v:426$1607 ($eq).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$equal_176$IR_Emitter_Modulator.v:477$1628 ($eq).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$equal_177$IR_Emitter_Modulator.v:478$1629 ($eq).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$equal_180$IR_Emitter_Modulator.v:491$1634 ($eq).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$equal_181$IR_Emitter_Modulator.v:492$1635 ($eq).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$equal_188$IR_Emitter_Modulator.v:507$1641 ($eq).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$equal_189$IR_Emitter_Modulator.v:508$1642 ($eq).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$equal_192$IR_Emitter_Modulator.v:527$1647 ($logic_not).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$equal_193$IR_Emitter_Modulator.v:528$1648 ($eq).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$equal_196$IR_Emitter_Modulator.v:529$1651 ($eq).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$i112$IR_Emitter_Modulator.v:392$1602 ($and).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$i121$IR_Emitter_Modulator.v:424$1604 ($not).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$i145$IR_Emitter_Modulator.v:442$1612 ($mux).
Mapping top.$auto$ff.cc:262:slice$1936 ($sdff).
Mapping top.$auto$ff.cc:262:slice$1937 ($sdff).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$i183$IR_Emitter_Modulator.v:492$1636 ($or).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$i195$IR_Emitter_Modulator.v:528$1649 ($or).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$i58$IR_Emitter_Modulator.v:279$1590 ($and).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$i63$IR_Emitter_Modulator.v:287$1595 ($not).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$i64$IR_Emitter_Modulator.v:287$1596 ($mux).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$i84$IR_Emitter_Modulator.v:339$1601 ($mux).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$mux_163$IR_Emitter_Modulator.v:460$1617 ($bmux).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$reduce_nor_142$IR_Emitter_Modulator.v:442$1609 ($reduce_or).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$reduce_nor_178$IR_Emitter_Modulator.v:480$1630 ($not).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$reduce_nor_178$IR_Emitter_Modulator.v:480$1631 ($reduce_or).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$reduce_nor_190$IR_Emitter_Modulator.v:510$1643 ($not).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$reduce_nor_190$IR_Emitter_Modulator.v:510$1644 ($reduce_or).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Busy_Modulator_i_1ff_reg$IR_Emitter_Registers.v:408$1852 ($adff).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Run_Modulator_o_reg$IR_Emitter_Registers.v:408$1841 ($adff).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$RegAddr_i_1ff_reg$IR_Emitter_Registers.v:408$1839 ($adff).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$RegData_o_reg$IR_Emitter_Registers.v:408$1840 ($adff).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_11$IR_Emitter_Registers.v:242$1758 ($eq).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_14$IR_Emitter_Registers.v:243$1761 ($eq).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_17$IR_Emitter_Registers.v:245$1764 ($eq).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_20$IR_Emitter_Registers.v:246$1767 ($eq).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_23$IR_Emitter_Registers.v:248$1770 ($eq).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_26$IR_Emitter_Registers.v:249$1773 ($eq).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_29$IR_Emitter_Registers.v:251$1776 ($eq).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_32$IR_Emitter_Registers.v:252$1779 ($eq).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_35$IR_Emitter_Registers.v:254$1782 ($eq).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_38$IR_Emitter_Registers.v:256$1785 ($eq).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_41$IR_Emitter_Registers.v:257$1788 ($eq).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_5$IR_Emitter_Registers.v:239$1752 ($eq).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_62$IR_Emitter_Registers.v:282$1791 ($logic_not).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_63$IR_Emitter_Registers.v:283$1792 ($eq).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_64$IR_Emitter_Registers.v:285$1793 ($eq).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_8$IR_Emitter_Registers.v:240$1755 ($eq).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$i10$IR_Emitter_Registers.v:240$1756 ($and).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$i101$IR_Emitter_Registers.v:355$1809 ($and).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$i112$IR_Emitter_Registers.v:369$1820 ($not).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$i113$IR_Emitter_Registers.v:369$1821 ($and).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$i116$IR_Emitter_Registers.v:370$1823 ($mux).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$i13$IR_Emitter_Registers.v:242$1759 ($and).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$i16$IR_Emitter_Registers.v:243$1762 ($and).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$i19$IR_Emitter_Registers.v:245$1765 ($and).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$i22$IR_Emitter_Registers.v:246$1768 ($and).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$i25$IR_Emitter_Registers.v:248$1771 ($and).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$i28$IR_Emitter_Registers.v:249$1774 ($and).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$i31$IR_Emitter_Registers.v:251$1777 ($and).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$i34$IR_Emitter_Registers.v:252$1780 ($and).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$i37$IR_Emitter_Registers.v:254$1783 ($and).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$i4$IR_Emitter_Registers.v:234$1750 ($and).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$i40$IR_Emitter_Registers.v:256$1786 ($and).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$i43$IR_Emitter_Registers.v:257$1789 ($and).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$i7$IR_Emitter_Registers.v:239$1753 ($and).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_0.$verific$mux_10$r1024x9_1024x9.v:35$1876 ($mux).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_0.$verific$xor_22$r1024x9_1024x9.v:40$1879 ($xor).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_1.$verific$mux_10$r1024x9_1024x9.v:35$1876 ($mux).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_1.$verific$xor_22$r1024x9_1024x9.v:40$1879 ($xor).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_2.$verific$mux_10$r1024x9_1024x9.v:35$1876 ($mux).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_2.$verific$xor_22$r1024x9_1024x9.v:40$1879 ($xor).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_3.$verific$mux_10$r1024x9_1024x9.v:35$1876 ($mux).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_3.$verific$xor_22$r1024x9_1024x9.v:40$1879 ($xor).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_4.$verific$mux_10$r1024x9_1024x9.v:35$1876 ($mux).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_4.$verific$xor_22$r1024x9_1024x9.v:40$1879 ($xor).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_5.$verific$mux_10$r1024x9_1024x9.v:35$1876 ($mux).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_5.$verific$xor_22$r1024x9_1024x9.v:40$1879 ($xor).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_6.$verific$mux_10$r1024x9_1024x9.v:35$1876 ($mux).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_6.$verific$xor_22$r1024x9_1024x9.v:40$1879 ($xor).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_7.$verific$mux_10$r1024x9_1024x9.v:35$1876 ($mux).
Mapping top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_7.$verific$xor_22$r1024x9_1024x9.v:40$1879 ($xor).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$i62$i2cSlave.v:228$185 ($not).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$i63$i2cSlave.v:228$186 ($and).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$i65$i2cSlave.v:228$187 ($and).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$i73$i2cSlave.v:238$189 ($not).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$i74$i2cSlave.v:238$190 ($and).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$i78$i2cSlave.v:240$192 ($and).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$i88$i2cSlave.v:258$236 ($or).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$mux_11$i2cSlave.v:156$155 ($mux).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$reduce_and_22$i2cSlave.v:181$161 ($reduce_and).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$reduce_and_30$i2cSlave.v:186$166 ($reduce_and).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$reduce_or_25$i2cSlave.v:183$162 ($reduce_or).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$reduce_or_33$i2cSlave.v:188$167 ($reduce_or).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$Mux_131$i2cSlaveSerialInterface.v:360$1167 ($bmux).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$Mux_134$i2cSlaveSerialInterface.v:360$1170 ($bmux).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$Mux_171$i2cSlaveSerialInterface.v:414$1189 ($bmux).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$Mux_174$i2cSlaveSerialInterface.v:414$1192 ($bmux).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$Mux_175$i2cSlaveSerialInterface.v:414$1193 ($bmux).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$equal_112$i2cSlaveSerialInterface.v:336$1157 ($eq).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$equal_115$i2cSlaveSerialInterface.v:342$1158 ($eq).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$equal_22$i2cSlaveSerialInterface.v:241$1105 ($eq).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$equal_232$i2cSlaveSerialInterface.v:462$1233 ($eq).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$equal_233$i2cSlaveSerialInterface.v:467$1234 ($eq).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$equal_45$i2cSlaveSerialInterface.v:273$1122 ($logic_not).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$equal_66$i2cSlaveSerialInterface.v:299$1133 ($logic_not).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$i105$i2cSlaveSerialInterface.v:323$1154 ($mux).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$i118$i2cSlaveSerialInterface.v:342$1159 ($and).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$i125$i2cSlaveSerialInterface.v:348$1163 ($mux).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$i140$i2cSlaveSerialInterface.v:366$1173 ($mux).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$i142$i2cSlaveSerialInterface.v:366$1175 ($mux).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$i36$i2cSlaveSerialInterface.v:257$1116 ($not).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$i41$i2cSlaveSerialInterface.v:262$1120 ($mux).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$i57$i2cSlaveSerialInterface.v:288$1128 ($mux).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$i69$i2cSlaveSerialInterface.v:299$1135 ($and).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$i70$i2cSlaveSerialInterface.v:299$1136 ($or).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$i71$i2cSlaveSerialInterface.v:299$1137 ($and).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$mux_100$i2cSlaveSerialInterface.v:323$1150 ($mux).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$mux_101$i2cSlaveSerialInterface.v:323$1151 ($mux).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$mux_102$i2cSlaveSerialInterface.v:323$1152 ($mux).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$mux_103$i2cSlaveSerialInterface.v:323$1153 ($mux).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$mux_111$i2cSlaveSerialInterface.v:332$1156 ($mux).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$mux_121$i2cSlaveSerialInterface.v:346$1161 ($mux).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$mux_123$i2cSlaveSerialInterface.v:348$1162 ($mux).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$mux_130$i2cSlaveSerialInterface.v:360$1166 ($bmux).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$mux_132$i2cSlaveSerialInterface.v:360$1168 ($bmux).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$mux_133$i2cSlaveSerialInterface.v:360$1169 ($bmux).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$mux_138$i2cSlaveSerialInterface.v:366$1172 ($mux).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$mux_140$i2cSlaveSerialInterface.v:366$1174 ($mux).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$mux_142$i2cSlaveSerialInterface.v:366$1176 ($mux).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$mux_143$i2cSlaveSerialInterface.v:366$1177 ($mux).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$mux_144$i2cSlaveSerialInterface.v:366$1178 ($mux).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$mux_165$i2cSlaveSerialInterface.v:404$1186 ($mux).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$mux_172$i2cSlaveSerialInterface.v:414$1190 ($bmux).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$mux_173$i2cSlaveSerialInterface.v:414$1191 ($bmux).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$mux_176$i2cSlaveSerialInterface.v:414$1194 ($bmux).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$mux_177$i2cSlaveSerialInterface.v:414$1195 ($bmux).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$mux_178$i2cSlaveSerialInterface.v:414$1196 ($bmux).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$mux_179$i2cSlaveSerialInterface.v:414$1197 ($bmux).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$mux_180$i2cSlaveSerialInterface.v:414$1198 ($bmux).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$mux_246$i2cSlaveSerialInterface.v:383$1095 ($mux).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$mux_273$i2cSlaveSerialInterface.v:399$1119 ($mux).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$mux_275$i2cSlaveSerialInterface.v:391$1183 ($mux).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$mux_30$i2cSlaveSerialInterface.v:253$1111 ($mux).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$mux_31$i2cSlaveSerialInterface.v:253$1112 ($mux).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$mux_32$i2cSlaveSerialInterface.v:253$1113 ($mux).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$mux_33$i2cSlaveSerialInterface.v:253$1114 ($mux).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$mux_34$i2cSlaveSerialInterface.v:253$1115 ($mux).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$mux_41$i2cSlaveSerialInterface.v:262$1121 ($mux).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$mux_50$i2cSlaveSerialInterface.v:282$1125 ($mux).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$mux_51$i2cSlaveSerialInterface.v:282$1126 ($mux).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$mux_61$i2cSlaveSerialInterface.v:295$1130 ($mux).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$mux_63$i2cSlaveSerialInterface.v:296$1131 ($mux).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$mux_96$i2cSlaveSerialInterface.v:323$1146 ($mux).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$mux_97$i2cSlaveSerialInterface.v:323$1147 ($mux).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$mux_98$i2cSlaveSerialInterface.v:323$1148 ($mux).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$mux_99$i2cSlaveSerialInterface.v:323$1149 ($mux).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$reduce_nor_78$i2cSlaveSerialInterface.v:309$1140 ($not).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$reduce_nor_78$i2cSlaveSerialInterface.v:309$1141 ($reduce_or).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$select_81$i2cSlaveSerialInterface.v:309$1144 ($mux).
Mapping top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$select_94$i2cSlaveSerialInterface.v:322$1145 ($mux).

24. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~931 debug messages>

25. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~930 debug messages>
Removed a total of 310 cells.

26. Executing OPT_DFF pass (perform DFF optimizations).

27. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 6 unused cells and 309 unused wires.
<suppressed ~7 debug messages>

28. Executing OPT pass (performing simple optimizations).

28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

28.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

28.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

28.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

28.6. Executing OPT_DFF pass (perform DFF optimizations).

28.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

28.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

28.9. Finished OPT passes. (There is nothing left to do.)

29. Executing OPT pass (performing simple optimizations).

29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~167 debug messages>

29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

29.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$3949 ($_SDFF_PP0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$5428 [7], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.txData [7]).
Adding EN signal on $auto$ff.cc:262:slice$3948 ($_SDFF_PP0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$5428 [6], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.txData [6]).
Adding EN signal on $auto$ff.cc:262:slice$3947 ($_SDFF_PP0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$5428 [5], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.txData [5]).
Adding EN signal on $auto$ff.cc:262:slice$3946 ($_SDFF_PP0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$5428 [4], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.txData [4]).
Adding EN signal on $auto$ff.cc:262:slice$3945 ($_SDFF_PP0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$5428 [3], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.txData [3]).
Adding EN signal on $auto$ff.cc:262:slice$3944 ($_SDFF_PP0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$5428 [2], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.txData [2]).
Adding EN signal on $auto$ff.cc:262:slice$3943 ($_SDFF_PP0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$5428 [1], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.txData [1]).
Adding EN signal on $auto$ff.cc:262:slice$3942 ($_SDFF_PP0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$5428 [0], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.txData [0]).
Adding EN signal on $auto$ff.cc:262:slice$3941 ($_SDFF_PP0_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_writeEn, Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.writeEn).
Adding EN signal on $auto$ff.cc:262:slice$3627 ($_DFF_PN0_) from module top (D = \u_IR_Emitter_Interface.u_IR_Emitter_Modulator.IR_Emitter_Pulse_Modulator_Signal_nxt, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Modulator.IR_Emitter_Pulse_Modulator_Signal).
Adding EN signal on $auto$ff.cc:262:slice$3590 ($_SDFF_PP1_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_sdaOut, Q = \CpuSda).
Adding EN signal on $auto$ff.cc:262:slice$3586 ($_SDFF_PP0_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_streamSt [1], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.streamSt [1]).
Adding EN signal on $auto$ff.cc:262:slice$3585 ($_SDFF_PP0_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_streamSt [0], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.streamSt [0]).
Adding EN signal on $auto$ff.cc:262:slice$2258 ($_SDFF_PP0_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.NextState_SISt [2], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.CurrState_SISt [2]).
Adding EN signal on $auto$ff.cc:262:slice$2254 ($_SDFF_PP0_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_bitCnt [2], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.bitCnt [2]).
Adding EN signal on $auto$ff.cc:262:slice$2253 ($_SDFF_PP0_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_bitCnt [1], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.bitCnt [1]).
Adding EN signal on $auto$ff.cc:262:slice$2252 ($_SDFF_PP0_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_bitCnt [0], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.bitCnt [0]).
Adding EN signal on $auto$ff.cc:262:slice$2251 ($_SDFF_PP0_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_clearStartStopDet, Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.clearStartStopDet).
Adding EN signal on $auto$ff.cc:262:slice$2250 ($_SDFF_PP0_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_dataOut [7], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut [7]).
Adding EN signal on $auto$ff.cc:262:slice$2249 ($_SDFF_PP0_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_dataOut [6], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut [6]).
Adding EN signal on $auto$ff.cc:262:slice$2248 ($_SDFF_PP0_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_dataOut [5], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut [5]).
Adding EN signal on $auto$ff.cc:262:slice$2247 ($_SDFF_PP0_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_dataOut [4], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut [4]).
Adding EN signal on $auto$ff.cc:262:slice$2246 ($_SDFF_PP0_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_dataOut [3], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut [3]).
Adding EN signal on $auto$ff.cc:262:slice$2245 ($_SDFF_PP0_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_dataOut [2], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut [2]).
Adding EN signal on $auto$ff.cc:262:slice$2244 ($_SDFF_PP0_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_dataOut [1], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut [1]).
Adding EN signal on $auto$ff.cc:262:slice$2243 ($_SDFF_PP0_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_dataOut [0], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut [0]).
Adding EN signal on $auto$ff.cc:262:slice$2242 ($_DFFE_PN_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_regAddr [7], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.regAddr [7]).
Adding EN signal on $auto$ff.cc:262:slice$2241 ($_DFFE_PN_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_regAddr [6], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.regAddr [6]).
Adding EN signal on $auto$ff.cc:262:slice$2240 ($_DFFE_PN_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_regAddr [5], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.regAddr [5]).
Adding EN signal on $auto$ff.cc:262:slice$2239 ($_DFFE_PN_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_regAddr [4], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.regAddr [4]).
Adding EN signal on $auto$ff.cc:262:slice$2238 ($_DFFE_PN_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_regAddr [3], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.regAddr [3]).
Adding EN signal on $auto$ff.cc:262:slice$2237 ($_DFFE_PN_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_regAddr [2], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.regAddr [2]).
Adding EN signal on $auto$ff.cc:262:slice$2236 ($_DFFE_PN_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_regAddr [1], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.regAddr [1]).
Adding EN signal on $auto$ff.cc:262:slice$2235 ($_DFFE_PN_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_regAddr [0], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.regAddr [0]).
Adding EN signal on $auto$ff.cc:262:slice$2234 ($_SDFF_PP0_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_rxData [7], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.rxData [7]).
Adding EN signal on $auto$ff.cc:262:slice$2233 ($_SDFF_PP0_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_rxData [6], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.rxData [6]).
Adding EN signal on $auto$ff.cc:262:slice$2232 ($_SDFF_PP0_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_rxData [5], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.rxData [5]).
Adding EN signal on $auto$ff.cc:262:slice$2231 ($_SDFF_PP0_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_rxData [4], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.rxData [4]).
Adding EN signal on $auto$ff.cc:262:slice$2230 ($_SDFF_PP0_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_rxData [3], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.rxData [3]).
Adding EN signal on $auto$ff.cc:262:slice$2229 ($_SDFF_PP0_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_rxData [2], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.rxData [2]).
Adding EN signal on $auto$ff.cc:262:slice$2228 ($_SDFF_PP0_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_rxData [1], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.rxData [1]).
Adding EN signal on $auto$ff.cc:262:slice$2227 ($_SDFF_PP0_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_rxData [0], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.rxData [0]).

29.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 16 unused cells and 348 unused wires.
<suppressed ~18 debug messages>

29.5. Rerunning OPT passes. (Removed registers in this run.)

29.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1553 debug messages>

29.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~5130 debug messages>
Removed a total of 1710 cells.

29.8. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$10688 ($_SDFFE_PP0P_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_rxData [0], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.rxData [0]).
Adding EN signal on $auto$ff.cc:262:slice$10370 ($_SDFFE_PP0P_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_rxData [3], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.rxData [3]).
Adding EN signal on $auto$ff.cc:262:slice$10476 ($_SDFFE_PP0P_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_rxData [2], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.rxData [2]).
Adding EN signal on $auto$ff.cc:262:slice$10582 ($_SDFFE_PP0P_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_rxData [1], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.rxData [1]).
Adding EN signal on $auto$ff.cc:262:slice$9946 ($_SDFFE_PP0P_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_rxData [7], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.rxData [7]).
Adding EN signal on $auto$ff.cc:262:slice$6837 ($_SDFFE_PP0P_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_bitCnt [2], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.bitCnt [2]).
Adding EN signal on $auto$ff.cc:262:slice$6983 ($_SDFFE_PP0P_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_bitCnt [1], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.bitCnt [1]).
Adding EN signal on $auto$ff.cc:262:slice$7129 ($_SDFFE_PP0P_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_bitCnt [0], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.bitCnt [0]).
Adding EN signal on $auto$ff.cc:262:slice$10052 ($_SDFFE_PP0P_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_rxData [6], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.rxData [6]).
Adding EN signal on $auto$ff.cc:262:slice$10158 ($_SDFFE_PP0P_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_rxData [5], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.rxData [5]).
Adding EN signal on $auto$ff.cc:262:slice$10264 ($_SDFFE_PP0P_) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_rxData [4], Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.rxData [4]).

29.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 1694 unused wires.
<suppressed ~1 debug messages>

29.10. Rerunning OPT passes. (Removed registers in this run.)

29.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~48 debug messages>

29.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~117 debug messages>
Removed a total of 39 cells.

29.13. Executing OPT_DFF pass (perform DFF optimizations).

29.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 48 unused wires.
<suppressed ~1 debug messages>

29.15. Finished fast OPT passes.

30. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

31. Executing OPT pass (performing simple optimizations).

31.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

31.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

31.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

31.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

31.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

31.6. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$5307 in front of them:
        $auto$simplemap.cc:312:simplemap_bmux$5287
        $auto$simplemap.cc:312:simplemap_bmux$5281

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$5308 in front of them:
        $auto$simplemap.cc:312:simplemap_bmux$5288
        $auto$simplemap.cc:312:simplemap_bmux$5282

31.7. Executing OPT_DFF pass (perform DFF optimizations).

31.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

31.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~2 debug messages>

31.10. Rerunning OPT passes. (Maybe there is more to do..)

31.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

31.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

31.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

31.14. Executing OPT_SHARE pass.

31.15. Executing OPT_DFF pass (perform DFF optimizations).

31.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

31.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

31.18. Rerunning OPT passes. (Maybe there is more to do..)

31.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

31.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

31.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

31.22. Executing OPT_SHARE pass.

31.23. Executing OPT_DFF pass (perform DFF optimizations).

31.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

31.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

31.26. Finished OPT passes. (There is nothing left to do.)

32. Executing TECHMAP pass (map to technology primitives).

32.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

32.2. Continuing TECHMAP pass.
Using template $paramod$3ef7d3dd227da7627a99c5e5a6a4deb817573e39\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $mux.
Using template $paramod$403a3c2fa431a154c52a6a5429d7a6260b5d144f\_90_alu for cells of type $alu.
Using template $paramod$a1665ef28c749ebcdbe9aecd466e644647b56463\_90_alu for cells of type $alu.
Using template $paramod$c3cd1564c35d873179656addd6052d7ea8b6d991\_90_alu for cells of type $alu.
Using template $paramod$215440792383f7884e57d9c95f84e9552d0bf4ac\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001101 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000011 for cells of type $lcu.
Using extmapper simplemap for cells of type $or.
No more expansions possible.
<suppressed ~938 debug messages>

33. Executing OPT pass (performing simple optimizations).

33.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~339 debug messages>

33.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~69 debug messages>
Removed a total of 23 cells.

33.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

33.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

33.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

33.6. Executing OPT_DFF pass (perform DFF optimizations).

33.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 55 unused cells and 347 unused wires.
<suppressed ~56 debug messages>

33.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

33.9. Rerunning OPT passes. (Maybe there is more to do..)

33.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

33.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

33.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

33.13. Executing OPT_DFF pass (perform DFF optimizations).

33.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

33.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

33.16. Finished OPT passes. (There is nothing left to do.)

34. Executing ABC pass (technology mapping using ABC).

34.1. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Extracted 1564 gates and 1898 wires to a netlist network with 332 inputs and 221 outputs.

34.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/aram/Workspace/yosys_verific_rs/scripts/synth/abc/abc_base6.a21.scr 
ABC: netlist  : i/o =    332/    221  and =    1983  lev =   17 (6.86)  mem = 0.04 MB
ABC: Mapping (K=6)  :  lut =    401  edge =    1755  lev =    9 (2.81)  mem = 0.02 MB
ABC: netlist  : i/o =    332/    221  and =    1967  lev =   19 (6.82)  mem = 0.04 MB
ABC: Mapping (K=6)  :  lut =    393  edge =    1705  lev =    7 (2.69)  mem = 0.02 MB
ABC: netlist  : i/o =    332/    221  and =    1987  lev =   19 (6.91)  mem = 0.04 MB
ABC: Mapping (K=6)  :  lut =    394  edge =    1730  lev =    8 (2.68)  mem = 0.02 MB
ABC: netlist  : i/o =    332/    221  and =    1940  lev =   19 (6.51)  mem = 0.04 MB
ABC: Mapping (K=6)  :  lut =    394  edge =    1725  lev =    6 (2.48)  mem = 0.02 MB
ABC: netlist  : i/o =    332/    221  and =    2011  lev =   19 (6.97)  mem = 0.04 MB
ABC: Mapping (K=6)  :  lut =    389  edge =    1745  lev =    7 (2.54)  mem = 0.02 MB
ABC: netlist  : i/o =    332/    221  and =    1982  lev =   19 (6.98)  mem = 0.05 MB
ABC: Mapping (K=6)  :  lut =    387  edge =    1721  lev =    8 (2.58)  mem = 0.02 MB
ABC: netlist  : i/o =    332/    221  and =    1992  lev =   18 (6.93)  mem = 0.05 MB
ABC: Mapping (K=6)  :  lut =    386  edge =    1716  lev =    8 (2.56)  mem = 0.02 MB
ABC: netlist  : i/o =    332/    221  and =    1987  lev =   20 (6.91)  mem = 0.05 MB
ABC: Mapping (K=6)  :  lut =    384  edge =    1710  lev =    7 (2.49)  mem = 0.02 MB
ABC: netlist  : i/o =    332/    221  and =    1987  lev =   18 (6.40)  mem = 0.05 MB
ABC: Mapping (K=6)  :  lut =    382  edge =    1710  lev =    7 (2.52)  mem = 0.02 MB
ABC: netlist  : i/o =    332/    221  and =    2042  lev =   18 (6.48)  mem = 0.05 MB
ABC: Mapping (K=6)  :  lut =    378  edge =    1706  lev =    7 (2.48)  mem = 0.02 MB
ABC: netlist  : i/o =    332/    221  and =    2015  lev =   19 (6.92)  mem = 0.05 MB
ABC: Mapping (K=6)  :  lut =    376  edge =    1692  lev =    7 (2.48)  mem = 0.02 MB
ABC: netlist  : i/o =    332/    221  and =    2011  lev =   19 (6.92)  mem = 0.05 MB
ABC: Mapping (K=6)  :  lut =    376  edge =    1692  lev =    7 (2.48)  mem = 0.02 MB
ABC: netlist  : i/o =    332/    221  and =    2009  lev =   19 (6.93)  mem = 0.05 MB
ABC: Mapping (K=6)  :  lut =    376  edge =    1688  lev =    7 (2.48)  mem = 0.02 MB
ABC: netlist  : i/o =    332/    221  and =    2015  lev =   19 (6.92)  mem = 0.04 MB
ABC: Mapping (K=6)  :  lut =    376  edge =    1692  lev =    7 (2.48)  mem = 0.02 MB
ABC: netlist  : i/o =    332/    221  and =    2015  lev =   19 (6.92)  mem = 0.05 MB
ABC: Mapping (K=6)  :  lut =    376  edge =    1692  lev =    7 (2.48)  mem = 0.02 MB
ABC: netlist  : i/o =    332/    221  and =    2012  lev =   19 (6.96)  mem = 0.04 MB
ABC: Mapping (K=6)  :  lut =    376  edge =    1692  lev =    7 (2.48)  mem = 0.02 MB
ABC: + write_blif <abc-temp-dir>/output.blif 

34.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      380
ABC RESULTS:        internal signals:     1345
ABC RESULTS:           input signals:      332
ABC RESULTS:          output signals:      221
Removing temp directory.

35. Executing OPT pass (performing simple optimizations).

35.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

35.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

35.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

35.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

35.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

35.6. Executing OPT_DFF pass (perform DFF optimizations).

35.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 9 unused cells and 1220 unused wires.
<suppressed ~41 debug messages>

35.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

35.9. Rerunning OPT passes. (Maybe there is more to do..)

35.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

35.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

35.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

35.13. Executing OPT_DFF pass (perform DFF optimizations).

35.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

35.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

35.16. Finished OPT passes. (There is nothing left to do.)

36. Executing HIERARCHY pass (managing design hierarchy).

36.1. Analyzing design hierarchy..
Top module:  \top

36.2. Analyzing design hierarchy..
Top module:  \top
Removed 0 unused modules.

37. Printing statistics.

=== top ===

   Number of wires:                524
   Number of wire bits:           1424
   Number of public wires:         311
   Number of public wire bits:    1211
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                710
     $_DFFE_PN0P_                  136
     $_DFFE_PN1P_                    9
     $_DFFE_PP_                     72
     $_DFF_PN0_                     53
     $_DFF_P_                        4
     $_SDFFE_PP0P_                  33
     $_SDFFE_PP1N_                   2
     $_SDFFE_PP1P_                   1
     $_SDFF_PN1_                     1
     $_SDFF_PP0_                     4
     $_SDFF_PP1_                    17
     $lut                          378

38. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 171 unused wires.
<suppressed ~171 debug messages>

39. Executing BLIF backend.

Warnings: 9 unique messages, 9 total
End of script. Logfile hash: c84f104cba, CPU: user 4.59s system 0.03s, MEM: 27.93 MB peak
Yosys 0.14+36 (git sha1 15a4e900b, gcc 7.1.0 -fPIC -Os)
Time spent: 49% 1x abc (4 sec), 18% 37x opt_expr (1 sec), ...
