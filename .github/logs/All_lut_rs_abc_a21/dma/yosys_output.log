
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.14+36 (git sha1 15a4e900b, gcc 7.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jan22_SW_Release, released at Sat Jan 29 02:42:49 2022.

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jan22_SW_Release, released at Sat Jan 29 02:42:49 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'DMA_DEFINE.vh'
VERIFIC-INFO [VERI-1328] DMA_DEFINE.vh:90: analyzing included file 'DMA_FIX_DEFINE.vh'
VERIFIC-INFO [VERI-2320] DMA_DEFINE.vh:90: back to file 'DMA_DEFINE.vh'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'DMA_FIX_DEFINE.vh'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'dma_ahbdec.v'
VERIFIC-INFO [VERI-1328] dma_ahbdec.v:38: analyzing included file 'DMA_DEFINE.vh'
VERIFIC-INFO [VERI-1328] DMA_DEFINE.vh:90: analyzing included file 'DMA_FIX_DEFINE.vh'
VERIFIC-INFO [VERI-2320] DMA_DEFINE.vh:90: back to file 'DMA_DEFINE.vh'
VERIFIC-INFO [VERI-2320] dma_ahbdec.v:38: back to file 'dma_ahbdec.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'dma_ahbmst.v'
VERIFIC-INFO [VERI-1328] dma_ahbmst.v:39: analyzing included file 'DMA_DEFINE.vh'
VERIFIC-INFO [VERI-1328] DMA_DEFINE.vh:90: analyzing included file 'DMA_FIX_DEFINE.vh'
VERIFIC-INFO [VERI-2320] DMA_DEFINE.vh:90: back to file 'DMA_DEFINE.vh'
VERIFIC-INFO [VERI-2320] dma_ahbmst.v:39: back to file 'dma_ahbmst.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'dma_ahbmux.v'
VERIFIC-INFO [VERI-1328] dma_ahbmux.v:39: analyzing included file 'DMA_DEFINE.vh'
VERIFIC-INFO [VERI-1328] DMA_DEFINE.vh:90: analyzing included file 'DMA_FIX_DEFINE.vh'
VERIFIC-INFO [VERI-2320] DMA_DEFINE.vh:90: back to file 'DMA_DEFINE.vh'
VERIFIC-INFO [VERI-2320] dma_ahbmux.v:39: back to file 'dma_ahbmux.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'dma_ahbslv.v'
VERIFIC-INFO [VERI-1328] dma_ahbslv.v:40: analyzing included file 'DMA_DEFINE.vh'
VERIFIC-INFO [VERI-1328] DMA_DEFINE.vh:90: analyzing included file 'DMA_FIX_DEFINE.vh'
VERIFIC-INFO [VERI-2320] DMA_DEFINE.vh:90: back to file 'DMA_DEFINE.vh'
VERIFIC-INFO [VERI-2320] dma_ahbslv.v:40: back to file 'dma_ahbslv.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'dma_chrf.v'
VERIFIC-INFO [VERI-1328] dma_chrf.v:39: analyzing included file 'DMA_DEFINE.vh'
VERIFIC-INFO [VERI-1328] DMA_DEFINE.vh:90: analyzing included file 'DMA_FIX_DEFINE.vh'
VERIFIC-INFO [VERI-2320] DMA_DEFINE.vh:90: back to file 'DMA_DEFINE.vh'
VERIFIC-INFO [VERI-2320] dma_chrf.v:39: back to file 'dma_chrf.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'dma_chsel.v'
VERIFIC-INFO [VERI-1328] dma_chsel.v:41: analyzing included file 'DMA_DEFINE.vh'
VERIFIC-INFO [VERI-1328] DMA_DEFINE.vh:90: analyzing included file 'DMA_FIX_DEFINE.vh'
VERIFIC-INFO [VERI-2320] DMA_DEFINE.vh:90: back to file 'DMA_DEFINE.vh'
VERIFIC-INFO [VERI-2320] dma_chsel.v:41: back to file 'dma_chsel.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'dma_ctlrf.v'
VERIFIC-INFO [VERI-1328] dma_ctlrf.v:41: analyzing included file 'DMA_DEFINE.vh'
VERIFIC-INFO [VERI-1328] DMA_DEFINE.vh:90: analyzing included file 'DMA_FIX_DEFINE.vh'
VERIFIC-INFO [VERI-2320] DMA_DEFINE.vh:90: back to file 'DMA_DEFINE.vh'
VERIFIC-INFO [VERI-2320] dma_ctlrf.v:41: back to file 'dma_ctlrf.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'dma_engine.v'
VERIFIC-INFO [VERI-1328] dma_engine.v:39: analyzing included file 'DMA_DEFINE.vh'
VERIFIC-INFO [VERI-1328] DMA_DEFINE.vh:90: analyzing included file 'DMA_FIX_DEFINE.vh'
VERIFIC-INFO [VERI-2320] DMA_DEFINE.vh:90: back to file 'DMA_DEFINE.vh'
VERIFIC-INFO [VERI-2320] dma_engine.v:39: back to file 'dma_engine.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'dma_fifo.v'
VERIFIC-INFO [VERI-1328] dma_fifo.v:44: analyzing included file 'DMA_DEFINE.vh'
VERIFIC-INFO [VERI-1328] DMA_DEFINE.vh:90: analyzing included file 'DMA_FIX_DEFINE.vh'
VERIFIC-INFO [VERI-2320] DMA_DEFINE.vh:90: back to file 'DMA_DEFINE.vh'
VERIFIC-INFO [VERI-2320] dma_fifo.v:44: back to file 'dma_fifo.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'dma_rrarb.v'
VERIFIC-INFO [VERI-1328] dma_rrarb.v:40: analyzing included file 'DMA_DEFINE.vh'
VERIFIC-INFO [VERI-1328] DMA_DEFINE.vh:90: analyzing included file 'DMA_FIX_DEFINE.vh'
VERIFIC-INFO [VERI-2320] DMA_DEFINE.vh:90: back to file 'DMA_DEFINE.vh'
VERIFIC-INFO [VERI-2320] dma_rrarb.v:40: back to file 'dma_rrarb.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'dma_top.v'
VERIFIC-INFO [VERI-1328] dma_top.v:38: analyzing included file 'DMA_DEFINE.vh'
VERIFIC-INFO [VERI-1328] DMA_DEFINE.vh:90: analyzing included file 'DMA_FIX_DEFINE.vh'
VERIFIC-INFO [VERI-2320] DMA_DEFINE.vh:90: back to file 'DMA_DEFINE.vh'
VERIFIC-INFO [VERI-2320] dma_top.v:38: back to file 'dma_top.v'
VERIFIC-INFO [VERI-2561] dma_top.v:689: undeclared symbol 'de_err_notify', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:691: undeclared symbol 'st_llp0t3', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:693: undeclared symbol 'dst_m', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:694: undeclared symbol 'src_m', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:695: undeclared symbol 'dst_a', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:696: undeclared symbol 'src_a', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:697: undeclared symbol 'dst_e', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:698: undeclared symbol 'src_e', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:699: undeclared symbol 'dst_wid_wd', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:700: undeclared symbol 'src_wid_wd', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:701: undeclared symbol 'dst_wid_hw', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:702: undeclared symbol 'src_wid_hw', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:703: undeclared symbol 'dst_wid_bt', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:704: undeclared symbol 'src_wid_bt', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:706: undeclared symbol 'bst_eq0', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:707: undeclared symbol 'bst_eq1', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:708: undeclared symbol 'bst_eq2', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:709: undeclared symbol 'tsz_eq0', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:710: undeclared symbol 'tsz_eq1', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:711: undeclared symbol 'tsz_eq2', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:712: undeclared symbol 'cv8t32', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:713: undeclared symbol 'cv8t16', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:714: undeclared symbol 'cv16t32', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:715: undeclared symbol 'cvtp2', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:716: undeclared symbol 'pack_en', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:717: undeclared symbol 'pack_end', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:718: undeclared symbol 'unpack_en', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:719: undeclared symbol 'upk_cnteq0', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:720: undeclared symbol 'upk_cnteq1', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:732: undeclared symbol 'm0_cp', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:733: undeclared symbol 'm0_tr_sq', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:734: undeclared symbol 'm0_rp_err', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:736: undeclared symbol 'm0_rp_rty', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:740: undeclared symbol 'm0_dma_err_ok', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:743: undeclared symbol 'm0_is_dst', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:744: undeclared symbol 'm0_is_src', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:746: undeclared symbol 'm0_is_llp', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:748: undeclared symbol 'm0_arb_src', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:749: undeclared symbol 'm0_arb_dst', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:762: undeclared symbol 'm1_cp', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:763: undeclared symbol 'm1_tr_sq', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:764: undeclared symbol 'm1_rp_err', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:765: undeclared symbol 'm1_rp_rty', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:768: undeclared symbol 'm1_dtp', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:769: undeclared symbol 'm1_dma_had_a_rty', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:771: undeclared symbol 'm1_dma_err_ok', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:774: undeclared symbol 'm1_is_dst', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:775: undeclared symbol 'm1_is_src', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:777: undeclared symbol 'm1_is_llp', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:779: undeclared symbol 'm1_arb_src', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:780: undeclared symbol 'm1_arb_dst', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:783: undeclared symbol 'm1_src2br', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:785: undeclared symbol 'm0_m1_same', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:794: undeclared symbol 'm1_arb_br', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:798: undeclared symbol 'slv_br_req', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:801: undeclared symbol 'slv_brst_cmd', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:802: undeclared symbol 'slv_brst_mscd', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:805: undeclared symbol 'br_req_qf', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:811: undeclared symbol 'ff_eq1', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:812: undeclared symbol 'ff_eq2', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:813: undeclared symbol 'ff_2ltfl', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:814: undeclared symbol 'ff_1ltfl', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:815: undeclared symbol 'ff_part_wd', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:819: undeclared symbol 'ff_wr', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:822: undeclared symbol 'de_ff_push', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:823: undeclared symbol 'de_ff_pop', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:824: undeclared symbol 'de_ff_ahead', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:825: undeclared symbol 'de_ff_flush', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:826: undeclared symbol 'de_ff_clear', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:827: undeclared symbol 'de_ff_ini', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:833: undeclared symbol 'arb_req', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:840: undeclared symbol 'arb_chllpen', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:844: undeclared symbol 'de_ack', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:845: undeclared symbol 'de_tc_st', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:849: undeclared symbol 'rf_cherr', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:850: undeclared symbol 'arb_chabt', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:852: undeclared symbol 'arb_abt_any', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:863: undeclared symbol 'de_llpen', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:865: undeclared symbol 'de_busy', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:866: undeclared symbol 'de_sad_we', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:867: undeclared symbol 'de_dad_we', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:868: undeclared symbol 'de_tsz_we', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:870: undeclared symbol 'de_llp_we', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:871: undeclared symbol 'de_csr_we', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:872: undeclared symbol 'de_llpen_we', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:874: undeclared symbol 'de_en_clr', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:876: undeclared symbol 'de_abt_on_idle', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:877: undeclared symbol 'de_err_st', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:903: undeclared symbol 'slv_wr_d1', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:936: undeclared symbol 'ff_geth', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:938: undeclared symbol 'ff_q_full', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:939: undeclared symbol 'ff_empty', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:1152: undeclared symbol 'h1req', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:1223: undeclared symbol 'slv_rf_req', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:1288: undeclared symbol 'c0llpen', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:1290: undeclared symbol 'c0abt', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:1310: undeclared symbol 'c1llpen', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:1312: undeclared symbol 'c1abt', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:1333: undeclared symbol 'c2llpen', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:1336: undeclared symbol 'c2abt', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:1358: undeclared symbol 'c3llpen', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:1361: undeclared symbol 'c3abt', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:1383: undeclared symbol 'c4llpen', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:1386: undeclared symbol 'c4abt', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:1408: undeclared symbol 'c5llpen', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:1411: undeclared symbol 'c5abt', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:1433: undeclared symbol 'c6llpen', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:1436: undeclared symbol 'c6abt', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:1458: undeclared symbol 'c7llpen', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] dma_top.v:1461: undeclared symbol 'c7abt', assumed default net type 'wire'

3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] dma_top.v:40: compiling module 'dma_top'
VERIFIC-INFO [VERI-1018] dma_engine.v:41: compiling module 'dma_engine'
VERIFIC-WARNING [VERI-1209] dma_engine.v:1379: expression size 32 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] dma_engine.v:1522: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] dma_engine.v:1630: expression size 32 truncated to fit in target size 2
VERIFIC-INFO [VERI-1018] dma_ahbmst.v:41: compiling module 'dma_ahbmst(THIS_IS_M1=0)'
VERIFIC-WARNING [VERI-1209] dma_ahbmst.v:414: expression size 32 truncated to fit in target size 1
VERIFIC-WARNING [VERI-1209] dma_ahbmst.v:464: expression size 32 truncated to fit in target size 1
VERIFIC-WARNING [VERI-1209] dma_ahbmst.v:519: expression size 32 truncated to fit in target size 1
VERIFIC-WARNING [VERI-1209] dma_ahbmst.v:635: expression size 32 truncated to fit in target size 1
VERIFIC-WARNING [VERI-1209] dma_ahbmst.v:660: expression size 32 truncated to fit in target size 1
VERIFIC-WARNING [VERI-1209] dma_ahbmst.v:799: expression size 32 truncated to fit in target size 1
VERIFIC-WARNING [VERI-1209] dma_ahbmst.v:1096: expression size 17 truncated to fit in target size 16
VERIFIC-WARNING [VERI-1209] dma_ahbmst.v:1097: expression size 32 truncated to fit in target size 16
VERIFIC-INFO [VERI-1018] dma_ahbmst.v:41: compiling module 'dma_ahbmst'
VERIFIC-WARNING [VERI-1209] dma_ahbmst.v:414: expression size 32 truncated to fit in target size 1
VERIFIC-WARNING [VERI-1209] dma_ahbmst.v:464: expression size 32 truncated to fit in target size 1
VERIFIC-WARNING [VERI-1209] dma_ahbmst.v:519: expression size 32 truncated to fit in target size 1
VERIFIC-WARNING [VERI-1209] dma_ahbmst.v:635: expression size 32 truncated to fit in target size 1
VERIFIC-WARNING [VERI-1209] dma_ahbmst.v:660: expression size 32 truncated to fit in target size 1
VERIFIC-WARNING [VERI-1209] dma_ahbmst.v:799: expression size 32 truncated to fit in target size 1
VERIFIC-WARNING [VERI-1209] dma_ahbmst.v:1096: expression size 17 truncated to fit in target size 16
VERIFIC-WARNING [VERI-1209] dma_ahbmst.v:1097: expression size 32 truncated to fit in target size 16
VERIFIC-INFO [VERI-1018] dma_fifo.v:48: compiling module 'dma_fifo'
VERIFIC-WARNING [VERI-1209] dma_fifo.v:419: expression size 4 truncated to fit in target size 3
VERIFIC-WARNING [VERI-1209] dma_fifo.v:427: expression size 4 truncated to fit in target size 3
VERIFIC-WARNING [VERI-1209] dma_fifo.v:438: expression size 5 truncated to fit in target size 4
VERIFIC-WARNING [VERI-1209] dma_fifo.v:440: expression size 32 truncated to fit in target size 4
VERIFIC-INFO [VERI-1018] dma_fifo.v:458: compiling module 'ff_ram'
VERIFIC-INFO [VERI-2571] dma_fifo.v:479: extracting RAM for identifier 'ram_dt'
VERIFIC-INFO [VERI-1018] dma_ctlrf.v:43: compiling module 'dma_ctlrf'
VERIFIC-INFO [VERI-1018] dma_chrf.v:41: compiling module 'dma_chrf'
VERIFIC-WARNING [VERI-1209] dma_chrf.v:279: expression size 5 truncated to fit in target size 4
VERIFIC-INFO [VERI-1018] dma_chrf.v:41: compiling module 'dma_chrf(CH_NO=1)'
VERIFIC-WARNING [VERI-1209] dma_chrf.v:279: expression size 5 truncated to fit in target size 4
VERIFIC-INFO [VERI-1018] dma_chrf.v:41: compiling module 'dma_chrf(CH_NO=2)'
VERIFIC-WARNING [VERI-1209] dma_chrf.v:279: expression size 5 truncated to fit in target size 4
VERIFIC-INFO [VERI-1018] dma_chrf.v:41: compiling module 'dma_chrf(CH_NO=3)'
VERIFIC-WARNING [VERI-1209] dma_chrf.v:279: expression size 5 truncated to fit in target size 4
VERIFIC-INFO [VERI-1018] dma_chrf.v:41: compiling module 'dma_chrf(CH_NO=4)'
VERIFIC-WARNING [VERI-1209] dma_chrf.v:279: expression size 5 truncated to fit in target size 4
VERIFIC-INFO [VERI-1018] dma_chrf.v:41: compiling module 'dma_chrf(CH_NO=5)'
VERIFIC-WARNING [VERI-1209] dma_chrf.v:279: expression size 5 truncated to fit in target size 4
VERIFIC-INFO [VERI-1018] dma_chrf.v:41: compiling module 'dma_chrf(CH_NO=6)'
VERIFIC-WARNING [VERI-1209] dma_chrf.v:279: expression size 5 truncated to fit in target size 4
VERIFIC-INFO [VERI-1018] dma_chrf.v:41: compiling module 'dma_chrf(CH_NO=7)'
VERIFIC-WARNING [VERI-1209] dma_chrf.v:279: expression size 5 truncated to fit in target size 4
VERIFIC-INFO [VERI-1018] dma_chsel.v:43: compiling module 'dma_chsel'
VERIFIC-WARNING [VERI-2580] dma_chsel.v:858: latch inferred for net 'arb_ch_sel[2]'
VERIFIC-INFO [VERI-1018] dma_rrarb.v:42: compiling module 'dma_rrarb'
VERIFIC-INFO [VERI-1018] dma_ahbslv.v:42: compiling module 'dma_ahbslv'
VERIFIC-INFO [VERI-1018] dma_ahbdec.v:43: compiling module 'dma_ahbdec'
VERIFIC-INFO [VERI-1018] dma_ahbmux.v:44: compiling module 'dma_ahbmux'
Importing module dma_top.
Importing module dma_engine.
Importing module dma_ahbmst(THIS_IS_M1=0).
Importing module dma_ahbmst.
Importing module dma_ctlrf.
Importing module dma_fifo.
Importing module ff_ram.
Importing module dma_chsel.
Importing module dma_chrf.
Importing module dma_chrf(CH_NO=1).
Importing module dma_chrf(CH_NO=2).
Importing module dma_chrf(CH_NO=3).
Importing module dma_chrf(CH_NO=4).
Importing module dma_chrf(CH_NO=5).
Importing module dma_chrf(CH_NO=6).
Importing module dma_chrf(CH_NO=7).
Importing module dma_rrarb.
Importing module dma_ahbslv.
Importing module dma_ahbmux.
Importing module dma_ahbdec.

3.1. Analyzing design hierarchy..
Top module:  \dma_top
Used module:     \dma_ahbmux
Used module:     \dma_ahbdec
Used module:     \dma_ahbslv
Used module:     \dma_chsel
Used module:         \dma_rrarb
Used module:     \dma_ctlrf
Used module:         \dma_chrf(CH_NO=7)
Used module:         \dma_chrf(CH_NO=6)
Used module:         \dma_chrf(CH_NO=5)
Used module:         \dma_chrf(CH_NO=4)
Used module:         \dma_chrf(CH_NO=3)
Used module:         \dma_chrf(CH_NO=2)
Used module:         \dma_chrf(CH_NO=1)
Used module:         \dma_chrf
Used module:     \dma_fifo
Used module:         \ff_ram
Used module:     \dma_ahbmst
Used module:     \dma_ahbmst(THIS_IS_M1=0)
Used module:     \dma_engine

3.2. Analyzing design hierarchy..
Top module:  \dma_top
Used module:     \dma_ahbmux
Used module:     \dma_ahbdec
Used module:     \dma_ahbslv
Used module:     \dma_chsel
Used module:         \dma_rrarb
Used module:     \dma_ctlrf
Used module:         \dma_chrf(CH_NO=7)
Used module:         \dma_chrf(CH_NO=6)
Used module:         \dma_chrf(CH_NO=5)
Used module:         \dma_chrf(CH_NO=4)
Used module:         \dma_chrf(CH_NO=3)
Used module:         \dma_chrf(CH_NO=2)
Used module:         \dma_chrf(CH_NO=1)
Used module:         \dma_chrf
Used module:     \dma_fifo
Used module:         \ff_ram
Used module:     \dma_ahbmst
Used module:     \dma_ahbmst(THIS_IS_M1=0)
Used module:     \dma_engine
Removed 0 unused modules.

4. Executing PROC pass (convert processes to netlists).

4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

4.4. Executing PROC_INIT pass (extract init attributes).

4.5. Executing PROC_ARST pass (detect async resets in processes).

4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

4.7. Executing PROC_DLATCH pass (convert process syncs to latches).

4.8. Executing PROC_DFF pass (convert process syncs to FFs).

4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module dma_ahbdec.
<suppressed ~16 debug messages>
Optimizing module dma_ahbmux.
<suppressed ~7 debug messages>
Optimizing module dma_ahbslv.
<suppressed ~20 debug messages>
Optimizing module dma_rrarb.
<suppressed ~2 debug messages>
Optimizing module dma_chrf(CH_NO=7).
<suppressed ~34 debug messages>
Optimizing module dma_chrf(CH_NO=6).
<suppressed ~34 debug messages>
Optimizing module dma_chrf(CH_NO=5).
<suppressed ~34 debug messages>
Optimizing module dma_chrf(CH_NO=4).
<suppressed ~34 debug messages>
Optimizing module dma_chrf(CH_NO=3).
<suppressed ~34 debug messages>
Optimizing module dma_chrf(CH_NO=2).
<suppressed ~34 debug messages>
Optimizing module dma_chrf(CH_NO=1).
<suppressed ~34 debug messages>
Optimizing module dma_chrf.
<suppressed ~35 debug messages>
Optimizing module dma_chsel.
<suppressed ~30 debug messages>
Optimizing module ff_ram.
Optimizing module dma_fifo.
<suppressed ~16 debug messages>
Optimizing module dma_ctlrf.
<suppressed ~32 debug messages>
Optimizing module dma_ahbmst.
<suppressed ~23 debug messages>
Optimizing module dma_ahbmst(THIS_IS_M1=0).
<suppressed ~23 debug messages>
Optimizing module dma_engine.
<suppressed ~27 debug messages>
Optimizing module dma_top.

5. Executing FLATTEN pass (flatten design).
Deleting now unused module dma_ahbdec.
Deleting now unused module dma_ahbmux.
Deleting now unused module dma_ahbslv.
Deleting now unused module dma_rrarb.
Deleting now unused module dma_chrf(CH_NO=7).
Deleting now unused module dma_chrf(CH_NO=6).
Deleting now unused module dma_chrf(CH_NO=5).
Deleting now unused module dma_chrf(CH_NO=4).
Deleting now unused module dma_chrf(CH_NO=3).
Deleting now unused module dma_chrf(CH_NO=2).
Deleting now unused module dma_chrf(CH_NO=1).
Deleting now unused module dma_chrf.
Deleting now unused module dma_chsel.
Deleting now unused module ff_ram.
Deleting now unused module dma_fifo.
Deleting now unused module dma_ctlrf.
Deleting now unused module dma_ahbmst.
Deleting now unused module dma_ahbmst(THIS_IS_M1=0).
Deleting now unused module dma_engine.
<suppressed ~22 debug messages>

6. Executing TRIBUF pass.

7. Executing OPT_EXPR pass (perform const folding).
Optimizing module dma_top.
<suppressed ~4 debug messages>

8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \dma_top..
Removed 67 unused cells and 11627 unused wires.
<suppressed ~1666 debug messages>

9. Executing CHECK pass (checking for obvious problems).
Checking module dma_top...
Found and reported 0 problems.

10. Executing DEMINOUT pass (demote inout ports to input or output).

11. Executing OPT pass (performing simple optimizations).

11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module dma_top.
<suppressed ~17 debug messages>

11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\dma_top'.
<suppressed ~282 debug messages>
Removed a total of 94 cells.

11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \dma_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port B of cell $flatten\de.$verific$i150$dma_engine.v:858$7008: \de.st_ed1s -> 1'1
      Replacing known input bits on port B of cell $flatten\m1_mux.$verific$i65$dma_ahbmux.v:359$18413: \m1_mux.hrdy_df -> 1'1
  Analyzing evaluation results.
    dead port 5/7 on $pmux $flatten\ahb_mst0.$verific$select_342$dma_ahbmst.v:978$7990.
Removed 1 multiplexer ports.
<suppressed ~522 debug messages>

11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \dma_top.
    New input vector for $reduce_or cell $flatten\ahb_mst0.$verific$reduce_nor_341$dma_ahbmst.v:978$7988: { $flatten\ahb_mst0.$verific$n2949$7551 $flatten\ahb_mst0.$verific$n2951$7553 $flatten\ahb_mst0.$verific$n2952$7554 \ahb_mst0.mx_cmd_st [1] }
    New input vector for $reduce_or cell $flatten\ahb_mst0.$verific$reduce_nor_339$dma_ahbmst.v:975$7984: { \ahb_mst0.ad_sel_llp $flatten\ahb_mst0.$verific$n2950$7552 \ahb_mst0.mx_cmd_st [1] }
    New input vector for $reduce_or cell $flatten\ahb_mst0.$verific$reduce_nor_337$dma_ahbmst.v:972$7980: { $flatten\ahb_mst0.$verific$n2948$7550 \ahb_mst0.mx_cmd_st [1] }
    New ctrl vector for $pmux cell $flatten\ahb_mst0.$verific$select_400$dma_ahbmst.v:1033$8038: { $flatten\ahb_mst0.$verific$n3165$7584 $flatten\ahb_mst0.$verific$n3166$7585 $flatten\ahb_mst0.$verific$n3167$7586 $flatten\ahb_mst0.$verific$n3168$7587 $flatten\ahb_mst0.$verific$n3169$7588 $flatten\ahb_mst0.$verific$n3170$7589 }
    New ctrl vector for $pmux cell $flatten\ahb_mst1.$verific$select_418$dma_ahbmst.v:1033$8776: { $flatten\ahb_mst1.$verific$n3603$8283 $flatten\ahb_mst1.$verific$n3604$8284 $flatten\ahb_mst1.$verific$n3605$8285 $flatten\ahb_mst1.$verific$n3606$8286 $flatten\ahb_mst1.$verific$n3607$8287 $flatten\ahb_mst1.$verific$n3608$8288 }
    New ctrl vector for $pmux cell $flatten\ch_sel.$verific$Select_268$dma_chsel.v:858$13981: $auto$opt_reduce.cc:134:opt_pmux$18825
    New ctrl vector for $pmux cell $flatten\de.$verific$select_221$dma_engine.v:1010$7069: { $flatten\de.$verific$n621$6610 $flatten\de.$verific$n622$6611 $flatten\de.$verific$n623$6612 $flatten\de.$verific$n624$6613 $flatten\de.$verific$n625$6614 $flatten\de.$verific$n627$6616 $flatten\de.$verific$n628$6617 $flatten\de.$verific$n629$6618 $flatten\de.$verific$n630$6619 $flatten\de.$verific$n631$6620 $auto$opt_reduce.cc:134:opt_pmux$18827 }
    New ctrl vector for $pmux cell $flatten\de.$verific$select_634$dma_engine.v:1602$7373: { $flatten\de.$verific$n1730$6783 $flatten\de.$verific$n1731$6784 }
    New ctrl vector for $pmux cell $flatten\m1_decoder.$verific$select_14$dma_ahbdec.v:215$18611: { $flatten\m1_decoder.$verific$n15$18454 $flatten\m1_decoder.$verific$n16$18455 $flatten\m1_decoder.$verific$n17$18456 $flatten\m1_decoder.$verific$n18$18457 }
    New ctrl vector for $pmux cell $flatten\m1_decoder.$verific$select_20$dma_ahbdec.v:226$18619: { $flatten\m1_decoder.$verific$n25$18459 $flatten\m1_decoder.$verific$n26$18460 $flatten\m1_decoder.$verific$n27$18461 $flatten\m1_decoder.$verific$n28$18462 }
    New ctrl vector for $pmux cell $flatten\m1_decoder.$verific$select_26$dma_ahbdec.v:237$18627: { $flatten\m1_decoder.$verific$n35$18464 $flatten\m1_decoder.$verific$n36$18465 $flatten\m1_decoder.$verific$n37$18466 $flatten\m1_decoder.$verific$n38$18467 }
    New ctrl vector for $pmux cell $flatten\m1_decoder.$verific$select_32$dma_ahbdec.v:248$18635: { $flatten\m1_decoder.$verific$n45$18469 $flatten\m1_decoder.$verific$n46$18470 $flatten\m1_decoder.$verific$n47$18471 $flatten\m1_decoder.$verific$n48$18472 }
    New ctrl vector for $pmux cell $flatten\m1_decoder.$verific$select_38$dma_ahbdec.v:259$18643: { $flatten\m1_decoder.$verific$n55$18474 $flatten\m1_decoder.$verific$n56$18475 $flatten\m1_decoder.$verific$n57$18476 $flatten\m1_decoder.$verific$n58$18477 }
    New ctrl vector for $pmux cell $flatten\m1_decoder.$verific$select_44$dma_ahbdec.v:270$18651: { $flatten\m1_decoder.$verific$n65$18479 $flatten\m1_decoder.$verific$n66$18480 $flatten\m1_decoder.$verific$n67$18481 $flatten\m1_decoder.$verific$n68$18482 }
    New ctrl vector for $pmux cell $flatten\m1_decoder.$verific$select_50$dma_ahbdec.v:281$18659: { $flatten\m1_decoder.$verific$n75$18484 $flatten\m1_decoder.$verific$n76$18485 $flatten\m1_decoder.$verific$n77$18486 $flatten\m1_decoder.$verific$n78$18487 }
    New ctrl vector for $pmux cell $flatten\m1_decoder.$verific$select_56$dma_ahbdec.v:292$18667: { $flatten\m1_decoder.$verific$n85$18489 $flatten\m1_decoder.$verific$n86$18490 $flatten\m1_decoder.$verific$n87$18491 $flatten\m1_decoder.$verific$n88$18492 }
    New ctrl vector for $pmux cell $flatten\m1_decoder.$verific$select_62$dma_ahbdec.v:302$18675: { $flatten\m1_decoder.$verific$n95$18494 $flatten\m1_decoder.$verific$n96$18495 $flatten\m1_decoder.$verific$n97$18496 $flatten\m1_decoder.$verific$n98$18497 }
    New ctrl vector for $pmux cell $flatten\m1_decoder.$verific$select_68$dma_ahbdec.v:313$18683: { $flatten\m1_decoder.$verific$n105$18499 $flatten\m1_decoder.$verific$n106$18500 $flatten\m1_decoder.$verific$n107$18501 $flatten\m1_decoder.$verific$n108$18502 }
    New ctrl vector for $pmux cell $flatten\m1_decoder.$verific$select_74$dma_ahbdec.v:324$18691: { $flatten\m1_decoder.$verific$n115$18504 $flatten\m1_decoder.$verific$n116$18505 $flatten\m1_decoder.$verific$n117$18506 $flatten\m1_decoder.$verific$n118$18507 }
    New ctrl vector for $pmux cell $flatten\m1_decoder.$verific$select_8$dma_ahbdec.v:205$18603: { $flatten\m1_decoder.$verific$n5$18449 $flatten\m1_decoder.$verific$n6$18450 $flatten\m1_decoder.$verific$n7$18451 $flatten\m1_decoder.$verific$n8$18452 }
    New ctrl vector for $pmux cell $flatten\m1_decoder.$verific$select_80$dma_ahbdec.v:335$18699: { $flatten\m1_decoder.$verific$n125$18509 $flatten\m1_decoder.$verific$n126$18510 $flatten\m1_decoder.$verific$n127$18511 $flatten\m1_decoder.$verific$n128$18512 }
    New ctrl vector for $pmux cell $flatten\m1_decoder.$verific$select_86$dma_ahbdec.v:346$18707: { $flatten\m1_decoder.$verific$n135$18514 $flatten\m1_decoder.$verific$n136$18515 $flatten\m1_decoder.$verific$n137$18516 $flatten\m1_decoder.$verific$n138$18517 }
    New ctrl vector for $pmux cell $flatten\m1_decoder.$verific$select_92$dma_ahbdec.v:357$18715: { $flatten\m1_decoder.$verific$n145$18519 $flatten\m1_decoder.$verific$n146$18520 $flatten\m1_decoder.$verific$n147$18521 $flatten\m1_decoder.$verific$n148$18522 }
    New ctrl vector for $pmux cell $flatten\m1_decoder.$verific$select_98$dma_ahbdec.v:368$18723: { $flatten\m1_decoder.$verific$n155$18524 $flatten\m1_decoder.$verific$n156$18525 $flatten\m1_decoder.$verific$n157$18526 $flatten\m1_decoder.$verific$n158$18527 }
    New ctrl vector for $pmux cell $flatten\m1_mux.$verific$select_14$dma_ahbmux.v:282$18375: { $flatten\m1_mux.$verific$n7$18271 $flatten\m1_mux.$verific$n8$18272 $flatten\m1_mux.$verific$n9$18273 $flatten\m1_mux.$verific$n10$18274 $flatten\m1_mux.$verific$n11$18275 $flatten\m1_mux.$verific$n12$18276 $flatten\m1_mux.$verific$n13$18277 }
    New ctrl vector for $pmux cell $flatten\m1_mux.$verific$select_24$dma_ahbmux.v:309$18387: { $flatten\m1_mux.$verific$n20$18280 $flatten\m1_mux.$verific$n21$18281 $flatten\m1_mux.$verific$n22$18282 $flatten\m1_mux.$verific$n23$18283 $flatten\m1_mux.$verific$n24$18284 $flatten\m1_mux.$verific$n25$18285 $flatten\m1_mux.$verific$n26$18286 }
  Optimizing cells in module \dma_top.
Performed a total of 28 changes.

11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\dma_top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

11.6. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $flatten\m1_mux.$verific$mux_no_reg$dma_ahbmux.v:325$18399 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\m1_mux.$verific$hrp_df_reg$dma_ahbmux.v:369$18419 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\m1_mux.$verific$hrmxnof_reg$dma_ahbmux.v:341$18407 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\m1_mux.$verific$hrdy_df_reg$dma_ahbmux.v:359$18415 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\dma_fifo.$verific$ram_wrq_reg$dma_fifo.v:356$13403 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\dma_fifo.$verific$ram_wr_reg$dma_fifo.v:322$13391 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\dma_fifo.$verific$part_wd_reg$dma_fifo.v:387$13422 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\dma_fifo.$verific$ff_fram_wado_reg$dma_fifo.v:419$13432 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\dma_fifo.$verific$ff_fram_radx_reg$dma_fifo.v:427$13437 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\dma_fifo.$verific$ff_cnv_q_vld_reg$dma_fifo.v:313$13386 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\dma_fifo.$verific$ff_cnt_reg$dma_fifo.v:440$13451 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\dma_fifo.$verific$cnv_bt3_reg$dma_fifo.v:302$13376 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\dma_fifo.$verific$cnv_bt2_reg$dma_fifo.v:296$13373 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\dma_fifo.$verific$cnv_bt1_reg$dma_fifo.v:290$13370 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\dma_fifo.$verific$cnv_bt0_reg$dma_fifo.v:284$13367 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\dma_fifo.$verific$cbe_reg$dma_fifo.v:271$13354 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\de.$verific$upk_cnt1_reg$dma_engine.v:1638$7388 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\de.$verific$upk_cnt0_reg$dma_engine.v:1630$7383 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\de.$verific$tsz_cnt_reg$dma_engine.v:1537$7332 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\de.$verific$st_rd_msk_reg$dma_engine.v:1500$7315 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\de.$verific$st_ed1s_reg$dma_engine.v:858$7010 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\de.$verific$m1_is_llp_reg$dma_engine.v:1096$7146 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\de.$verific$m1_arb_st_reg$dma_engine.v:1269$7209 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\de.$verific$m0_is_llp_reg$dma_engine.v:1081$7142 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\de.$verific$m0_arb_st_reg$dma_engine.v:1122$7163 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\de.$verific$de_st_reg$dma_engine.v:911$7042 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\de.$verific$de_mllp_reg$dma_engine.v:653$6909 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\de.$verific$de_ff_flush_d1_reg$dma_engine.v:1364$7241 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\de.$verific$de_err_notify_reg$dma_engine.v:1473$7301 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\de.$verific$bst_cnt_reg$dma_engine.v:1522$7325 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c7_rf.$verific$swidth_reg$dma_chrf.v:411$17673 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c7_rf.$verific$src_sz_reg$dma_chrf.v:352$17650 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c7_rf.$verific$src_sel_reg$dma_chrf.v:463$17710 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c7_rf.$verific$sad_ctl1_reg$dma_chrf.v:463$17706 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c7_rf.$verific$sad_ctl0_reg$dma_chrf.v:463$17707 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c7_rf.$verific$prot3_reg$dma_chrf.v:343$17644 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c7_rf.$verific$prot2_reg$dma_chrf.v:343$17645 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c7_rf.$verific$prot1_reg$dma_chrf.v:343$17646 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c7_rf.$verific$mode_reg$dma_chrf.v:431$17681 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c7_rf.$verific$int_tc_msk_reg$dma_chrf.v:306$17629 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c7_rf.$verific$int_tc1_msk_reg$dma_chrf.v:500$17728 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c7_rf.$verific$int_err_msk_reg$dma_chrf.v:500$17727 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c7_rf.$verific$int_abt_msk_reg$dma_chrf.v:500$17726 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c7_rf.$verific$dwidth_reg$dma_chrf.v:422$17678 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c7_rf.$verific$dst_sel_reg$dma_chrf.v:463$17711 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c7_rf.$verific$dreqmode_reg$dma_chrf.v:326$17637 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c7_rf.$verific$dad_ctl1_reg$dma_chrf.v:463$17708 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c7_rf.$verific$dad_ctl0_reg$dma_chrf.v:463$17709 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c7_rf.$verific$chtsz_reg$dma_chrf.v:644$17810 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c7_rf.$verific$chsad_reg$dma_chrf.v:540$17742 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c7_rf.$verific$chpri_reg$dma_chrf.v:316$17634 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c7_rf.$verific$chllpen_reg$dma_chrf.v:239$17586 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c7_rf.$verific$chllp_reg$dma_chrf.v:621$17791 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c7_rf.$verific$chllp_on_reg$dma_chrf.v:267$17598 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c7_rf.$verific$chllp_cnt_reg$dma_chrf.v:279$17613 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c7_rf.$verific$chdad_reg$dma_chrf.v:580$17768 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c7_rf.$verific$chabt_reg$dma_chrf.v:390$17663 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c7_rf.$verific$ch_en_reg$dma_chrf.v:480$17720 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c7_rf.$verific$autold_reg$dma_chrf.v:400$17667 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c6_rf.$verific$swidth_reg$dma_chrf.v:411$17222 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c6_rf.$verific$src_sz_reg$dma_chrf.v:352$17199 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c6_rf.$verific$src_sel_reg$dma_chrf.v:463$17259 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c6_rf.$verific$sad_ctl1_reg$dma_chrf.v:463$17255 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c6_rf.$verific$sad_ctl0_reg$dma_chrf.v:463$17256 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c6_rf.$verific$prot3_reg$dma_chrf.v:343$17193 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c6_rf.$verific$prot2_reg$dma_chrf.v:343$17194 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c6_rf.$verific$prot1_reg$dma_chrf.v:343$17195 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c6_rf.$verific$mode_reg$dma_chrf.v:431$17230 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c6_rf.$verific$int_tc_msk_reg$dma_chrf.v:306$17178 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c6_rf.$verific$int_tc1_msk_reg$dma_chrf.v:500$17277 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c6_rf.$verific$int_err_msk_reg$dma_chrf.v:500$17276 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c6_rf.$verific$int_abt_msk_reg$dma_chrf.v:500$17275 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c6_rf.$verific$dwidth_reg$dma_chrf.v:422$17227 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c6_rf.$verific$dst_sel_reg$dma_chrf.v:463$17260 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c6_rf.$verific$dreqmode_reg$dma_chrf.v:326$17186 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c6_rf.$verific$dad_ctl1_reg$dma_chrf.v:463$17257 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c6_rf.$verific$dad_ctl0_reg$dma_chrf.v:463$17258 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c6_rf.$verific$chtsz_reg$dma_chrf.v:644$17359 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c6_rf.$verific$chsad_reg$dma_chrf.v:540$17291 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c6_rf.$verific$chpri_reg$dma_chrf.v:316$17183 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c6_rf.$verific$chllpen_reg$dma_chrf.v:239$17135 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c6_rf.$verific$chllp_reg$dma_chrf.v:621$17340 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c6_rf.$verific$chllp_on_reg$dma_chrf.v:267$17147 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c6_rf.$verific$chllp_cnt_reg$dma_chrf.v:279$17162 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c6_rf.$verific$chdad_reg$dma_chrf.v:580$17317 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c6_rf.$verific$chabt_reg$dma_chrf.v:390$17212 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c6_rf.$verific$ch_en_reg$dma_chrf.v:480$17269 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c6_rf.$verific$autold_reg$dma_chrf.v:400$17216 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c5_rf.$verific$swidth_reg$dma_chrf.v:411$16771 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c5_rf.$verific$src_sz_reg$dma_chrf.v:352$16748 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c5_rf.$verific$src_sel_reg$dma_chrf.v:463$16808 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c5_rf.$verific$sad_ctl1_reg$dma_chrf.v:463$16804 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c5_rf.$verific$sad_ctl0_reg$dma_chrf.v:463$16805 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c5_rf.$verific$prot3_reg$dma_chrf.v:343$16742 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c5_rf.$verific$prot2_reg$dma_chrf.v:343$16743 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c5_rf.$verific$prot1_reg$dma_chrf.v:343$16744 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c5_rf.$verific$mode_reg$dma_chrf.v:431$16779 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c5_rf.$verific$int_tc_msk_reg$dma_chrf.v:306$16727 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c5_rf.$verific$int_tc1_msk_reg$dma_chrf.v:500$16826 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c5_rf.$verific$int_err_msk_reg$dma_chrf.v:500$16825 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c5_rf.$verific$int_abt_msk_reg$dma_chrf.v:500$16824 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c5_rf.$verific$dwidth_reg$dma_chrf.v:422$16776 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c5_rf.$verific$dst_sel_reg$dma_chrf.v:463$16809 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c5_rf.$verific$dreqmode_reg$dma_chrf.v:326$16735 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c5_rf.$verific$dad_ctl1_reg$dma_chrf.v:463$16806 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c5_rf.$verific$dad_ctl0_reg$dma_chrf.v:463$16807 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c5_rf.$verific$chtsz_reg$dma_chrf.v:644$16908 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c5_rf.$verific$chsad_reg$dma_chrf.v:540$16840 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c5_rf.$verific$chpri_reg$dma_chrf.v:316$16732 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c5_rf.$verific$chllpen_reg$dma_chrf.v:239$16684 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c5_rf.$verific$chllp_reg$dma_chrf.v:621$16889 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c5_rf.$verific$chllp_on_reg$dma_chrf.v:267$16696 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c5_rf.$verific$chllp_cnt_reg$dma_chrf.v:279$16711 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c5_rf.$verific$chdad_reg$dma_chrf.v:580$16866 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c5_rf.$verific$chabt_reg$dma_chrf.v:390$16761 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c5_rf.$verific$ch_en_reg$dma_chrf.v:480$16818 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c5_rf.$verific$autold_reg$dma_chrf.v:400$16765 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c4_rf.$verific$swidth_reg$dma_chrf.v:411$16320 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c4_rf.$verific$src_sz_reg$dma_chrf.v:352$16297 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c4_rf.$verific$src_sel_reg$dma_chrf.v:463$16357 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c4_rf.$verific$sad_ctl1_reg$dma_chrf.v:463$16353 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c4_rf.$verific$sad_ctl0_reg$dma_chrf.v:463$16354 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c4_rf.$verific$prot3_reg$dma_chrf.v:343$16291 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c4_rf.$verific$prot2_reg$dma_chrf.v:343$16292 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c4_rf.$verific$prot1_reg$dma_chrf.v:343$16293 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c4_rf.$verific$mode_reg$dma_chrf.v:431$16328 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c4_rf.$verific$int_tc_msk_reg$dma_chrf.v:306$16276 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c4_rf.$verific$int_tc1_msk_reg$dma_chrf.v:500$16375 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c4_rf.$verific$int_err_msk_reg$dma_chrf.v:500$16374 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c4_rf.$verific$int_abt_msk_reg$dma_chrf.v:500$16373 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c4_rf.$verific$dwidth_reg$dma_chrf.v:422$16325 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c4_rf.$verific$dst_sel_reg$dma_chrf.v:463$16358 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c4_rf.$verific$dreqmode_reg$dma_chrf.v:326$16284 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c4_rf.$verific$dad_ctl1_reg$dma_chrf.v:463$16355 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c4_rf.$verific$dad_ctl0_reg$dma_chrf.v:463$16356 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c4_rf.$verific$chtsz_reg$dma_chrf.v:644$16457 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c4_rf.$verific$chsad_reg$dma_chrf.v:540$16389 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c4_rf.$verific$chpri_reg$dma_chrf.v:316$16281 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c4_rf.$verific$chllpen_reg$dma_chrf.v:239$16233 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c4_rf.$verific$chllp_reg$dma_chrf.v:621$16438 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c4_rf.$verific$chllp_on_reg$dma_chrf.v:267$16245 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c4_rf.$verific$chllp_cnt_reg$dma_chrf.v:279$16260 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c4_rf.$verific$chdad_reg$dma_chrf.v:580$16415 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c4_rf.$verific$chabt_reg$dma_chrf.v:390$16310 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c4_rf.$verific$ch_en_reg$dma_chrf.v:480$16367 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c4_rf.$verific$autold_reg$dma_chrf.v:400$16314 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c3_rf.$verific$swidth_reg$dma_chrf.v:411$15869 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c3_rf.$verific$src_sz_reg$dma_chrf.v:352$15846 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c3_rf.$verific$src_sel_reg$dma_chrf.v:463$15906 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c3_rf.$verific$sad_ctl1_reg$dma_chrf.v:463$15902 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c3_rf.$verific$sad_ctl0_reg$dma_chrf.v:463$15903 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c3_rf.$verific$prot3_reg$dma_chrf.v:343$15840 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c3_rf.$verific$prot2_reg$dma_chrf.v:343$15841 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c3_rf.$verific$prot1_reg$dma_chrf.v:343$15842 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c3_rf.$verific$mode_reg$dma_chrf.v:431$15877 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c3_rf.$verific$int_tc_msk_reg$dma_chrf.v:306$15825 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c3_rf.$verific$int_tc1_msk_reg$dma_chrf.v:500$15924 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c3_rf.$verific$int_err_msk_reg$dma_chrf.v:500$15923 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c3_rf.$verific$int_abt_msk_reg$dma_chrf.v:500$15922 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c3_rf.$verific$dwidth_reg$dma_chrf.v:422$15874 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c3_rf.$verific$dst_sel_reg$dma_chrf.v:463$15907 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c3_rf.$verific$dreqmode_reg$dma_chrf.v:326$15833 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c3_rf.$verific$dad_ctl1_reg$dma_chrf.v:463$15904 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c3_rf.$verific$dad_ctl0_reg$dma_chrf.v:463$15905 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c3_rf.$verific$chtsz_reg$dma_chrf.v:644$16006 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c3_rf.$verific$chsad_reg$dma_chrf.v:540$15938 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c3_rf.$verific$chpri_reg$dma_chrf.v:316$15830 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c3_rf.$verific$chllpen_reg$dma_chrf.v:239$15782 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c3_rf.$verific$chllp_reg$dma_chrf.v:621$15987 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c3_rf.$verific$chllp_on_reg$dma_chrf.v:267$15794 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c3_rf.$verific$chllp_cnt_reg$dma_chrf.v:279$15809 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c3_rf.$verific$chdad_reg$dma_chrf.v:580$15964 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c3_rf.$verific$chabt_reg$dma_chrf.v:390$15859 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c3_rf.$verific$ch_en_reg$dma_chrf.v:480$15916 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c3_rf.$verific$autold_reg$dma_chrf.v:400$15863 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c2_rf.$verific$swidth_reg$dma_chrf.v:411$15418 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c2_rf.$verific$src_sz_reg$dma_chrf.v:352$15395 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c2_rf.$verific$src_sel_reg$dma_chrf.v:463$15455 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c2_rf.$verific$sad_ctl1_reg$dma_chrf.v:463$15451 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c2_rf.$verific$sad_ctl0_reg$dma_chrf.v:463$15452 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c2_rf.$verific$prot3_reg$dma_chrf.v:343$15389 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c2_rf.$verific$prot2_reg$dma_chrf.v:343$15390 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c2_rf.$verific$prot1_reg$dma_chrf.v:343$15391 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c2_rf.$verific$mode_reg$dma_chrf.v:431$15426 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c2_rf.$verific$int_tc_msk_reg$dma_chrf.v:306$15374 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c2_rf.$verific$int_tc1_msk_reg$dma_chrf.v:500$15473 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c2_rf.$verific$int_err_msk_reg$dma_chrf.v:500$15472 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c2_rf.$verific$int_abt_msk_reg$dma_chrf.v:500$15471 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c2_rf.$verific$dwidth_reg$dma_chrf.v:422$15423 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c2_rf.$verific$dst_sel_reg$dma_chrf.v:463$15456 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c2_rf.$verific$dreqmode_reg$dma_chrf.v:326$15382 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c2_rf.$verific$dad_ctl1_reg$dma_chrf.v:463$15453 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c2_rf.$verific$dad_ctl0_reg$dma_chrf.v:463$15454 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c2_rf.$verific$chtsz_reg$dma_chrf.v:644$15555 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c2_rf.$verific$chsad_reg$dma_chrf.v:540$15487 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c2_rf.$verific$chpri_reg$dma_chrf.v:316$15379 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c2_rf.$verific$chllpen_reg$dma_chrf.v:239$15331 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c2_rf.$verific$chllp_reg$dma_chrf.v:621$15536 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c2_rf.$verific$chllp_on_reg$dma_chrf.v:267$15343 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c2_rf.$verific$chllp_cnt_reg$dma_chrf.v:279$15358 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c2_rf.$verific$chdad_reg$dma_chrf.v:580$15513 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c2_rf.$verific$chabt_reg$dma_chrf.v:390$15408 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c2_rf.$verific$ch_en_reg$dma_chrf.v:480$15465 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c2_rf.$verific$autold_reg$dma_chrf.v:400$15412 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c1_rf.$verific$swidth_reg$dma_chrf.v:411$14967 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c1_rf.$verific$src_sz_reg$dma_chrf.v:352$14944 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c1_rf.$verific$src_sel_reg$dma_chrf.v:463$15004 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c1_rf.$verific$sad_ctl1_reg$dma_chrf.v:463$15000 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c1_rf.$verific$sad_ctl0_reg$dma_chrf.v:463$15001 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c1_rf.$verific$prot3_reg$dma_chrf.v:343$14938 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c1_rf.$verific$prot2_reg$dma_chrf.v:343$14939 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c1_rf.$verific$prot1_reg$dma_chrf.v:343$14940 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c1_rf.$verific$mode_reg$dma_chrf.v:431$14975 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c1_rf.$verific$int_tc_msk_reg$dma_chrf.v:306$14923 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c1_rf.$verific$int_tc1_msk_reg$dma_chrf.v:500$15022 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c1_rf.$verific$int_err_msk_reg$dma_chrf.v:500$15021 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c1_rf.$verific$int_abt_msk_reg$dma_chrf.v:500$15020 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c1_rf.$verific$dwidth_reg$dma_chrf.v:422$14972 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c1_rf.$verific$dst_sel_reg$dma_chrf.v:463$15005 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c1_rf.$verific$dreqmode_reg$dma_chrf.v:326$14931 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c1_rf.$verific$dad_ctl1_reg$dma_chrf.v:463$15002 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c1_rf.$verific$dad_ctl0_reg$dma_chrf.v:463$15003 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c1_rf.$verific$chtsz_reg$dma_chrf.v:644$15104 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c1_rf.$verific$chsad_reg$dma_chrf.v:540$15036 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c1_rf.$verific$chpri_reg$dma_chrf.v:316$14928 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c1_rf.$verific$chllpen_reg$dma_chrf.v:239$14880 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c1_rf.$verific$chllp_reg$dma_chrf.v:621$15085 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c1_rf.$verific$chllp_on_reg$dma_chrf.v:267$14892 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c1_rf.$verific$chllp_cnt_reg$dma_chrf.v:279$14907 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c1_rf.$verific$chdad_reg$dma_chrf.v:580$15062 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c1_rf.$verific$chabt_reg$dma_chrf.v:390$14957 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c1_rf.$verific$ch_en_reg$dma_chrf.v:480$15014 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c1_rf.$verific$autold_reg$dma_chrf.v:400$14961 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c0_rf.$verific$swidth_reg$dma_chrf.v:411$14516 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c0_rf.$verific$src_sz_reg$dma_chrf.v:352$14493 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c0_rf.$verific$src_sel_reg$dma_chrf.v:463$14553 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c0_rf.$verific$sad_ctl1_reg$dma_chrf.v:463$14549 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c0_rf.$verific$sad_ctl0_reg$dma_chrf.v:463$14550 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c0_rf.$verific$prot3_reg$dma_chrf.v:343$14487 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c0_rf.$verific$prot2_reg$dma_chrf.v:343$14488 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c0_rf.$verific$prot1_reg$dma_chrf.v:343$14489 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c0_rf.$verific$mode_reg$dma_chrf.v:431$14524 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c0_rf.$verific$int_tc_msk_reg$dma_chrf.v:306$14472 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c0_rf.$verific$int_tc1_msk_reg$dma_chrf.v:500$14571 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c0_rf.$verific$int_err_msk_reg$dma_chrf.v:500$14570 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c0_rf.$verific$int_abt_msk_reg$dma_chrf.v:500$14569 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c0_rf.$verific$dwidth_reg$dma_chrf.v:422$14521 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c0_rf.$verific$dst_sel_reg$dma_chrf.v:463$14554 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c0_rf.$verific$dreqmode_reg$dma_chrf.v:326$14480 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c0_rf.$verific$dad_ctl1_reg$dma_chrf.v:463$14551 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c0_rf.$verific$dad_ctl0_reg$dma_chrf.v:463$14552 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c0_rf.$verific$chtsz_reg$dma_chrf.v:644$14653 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c0_rf.$verific$chsad_reg$dma_chrf.v:540$14585 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c0_rf.$verific$chpri_reg$dma_chrf.v:316$14477 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c0_rf.$verific$chllpen_reg$dma_chrf.v:239$14429 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c0_rf.$verific$chllp_reg$dma_chrf.v:621$14634 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c0_rf.$verific$chllp_on_reg$dma_chrf.v:267$14441 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c0_rf.$verific$chllp_cnt_reg$dma_chrf.v:279$14456 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c0_rf.$verific$chdad_reg$dma_chrf.v:580$14611 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c0_rf.$verific$chabt_reg$dma_chrf.v:390$14506 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c0_rf.$verific$ch_en_reg$dma_chrf.v:480$14563 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.\c0_rf.$verific$autold_reg$dma_chrf.v:400$14510 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.$verific$tc_reg$dma_ctlrf.v:1902$10014 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.$verific$sync_reg$dma_ctlrf.v:2281$10034 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.$verific$rf_sel_d1_reg$dma_ctlrf.v:1475$9561 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.$verific$m1end_reg$dma_ctlrf.v:2257$10021 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.$verific$m0end_reg$dma_ctlrf.v:2263$10024 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.$verific$err_reg$dma_ctlrf.v:2224$9554 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_mst0.$verific$hwriteo_reg$dma_ahbmst.v:671$7885 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_mst0.$verific$hwdatao_reg$dma_ahbmst.v:893$7943 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_mst0.$verific$hsizeo_reg$dma_ahbmst.v:726$7904 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_mst0.$verific$hreqo_reg$dma_ahbmst.v:1174$8105 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_mst0.$verific$hproto_reg$dma_ahbmst.v:783$7909 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_mst0.$verific$hbursto_reg$dma_ahbmst.v:811$7921 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_mst0.$verific$haddro_reg$dma_ahbmst.v:987$7994 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.$verific$dmaint_tc_reg$dma_ctlrf.v:1721$9912 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.$verific$dmaint_reg$dma_ctlrf.v:1715$9910 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.$verific$dmaint_err_reg$dma_ctlrf.v:1727$9914 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.$verific$dmacen_reg$dma_ctlrf.v:2269$10027 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.$verific$c7dmabs_reg$dma_ctlrf.v:2420$10090 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.$verific$c7brbs_reg$dma_ctlrf.v:2557$10146 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.$verific$c6dmabs_reg$dma_ctlrf.v:2403$10083 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.$verific$c6brbs_reg$dma_ctlrf.v:2540$10139 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.$verific$c5dmabs_reg$dma_ctlrf.v:2386$10076 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.$verific$c5brbs_reg$dma_ctlrf.v:2523$10132 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.$verific$c4dmabs_reg$dma_ctlrf.v:2369$10069 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.$verific$c4brbs_reg$dma_ctlrf.v:2506$10125 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.$verific$c3dmabs_reg$dma_ctlrf.v:2352$10062 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.$verific$c3brbs_reg$dma_ctlrf.v:2489$10118 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.$verific$c2dmabs_reg$dma_ctlrf.v:2335$10055 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.$verific$c2brbs_reg$dma_ctlrf.v:2472$10111 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.$verific$c1dmabs_reg$dma_ctlrf.v:2318$10048 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.$verific$c1brbs_reg$dma_ctlrf.v:2455$10104 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.$verific$c0dmabs_reg$dma_ctlrf.v:2302$10040 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.$verific$c0brbs_reg$dma_ctlrf.v:2439$10097 ($aldff) from module dma_top.
Removing never-active async load on $flatten\ctl_rf.$verific$be_d1_reg$dma_ctlrf.v:1469$9557 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ctl_rf.$verific$abt_reg$dma_ctlrf.v:2233$10011 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ch_sel.\dma_rrarb3.$verific$state_reg$dma_rrarb.v:74$17905 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ch_sel.\dma_rrarb2.$verific$state_reg$dma_rrarb.v:74$17905 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ch_sel.\dma_rrarb1.$verific$state_reg$dma_rrarb.v:74$17905 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ch_sel.\dma_rrarb0.$verific$state_reg$dma_rrarb.v:74$17905 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ch_sel.$verific$vld_req_any_d1_reg$dma_chsel.v:868$13986 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ch_sel.$verific$fix_pri_sel_reg$dma_chsel.v:848$13965 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ch_sel.$verific$dma_tc_reg$dma_chsel.v:1243$14098 ($aldff) from module dma_top.
Removing never-active async load on $flatten\ch_sel.$verific$dma_reqd2_reg$dma_chsel.v:485$13839 ($aldff) from module dma_top.
Removing never-active async load on $flatten\ch_sel.$verific$dma_reqd1_reg$dma_chsel.v:459$13836 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ch_sel.$verific$dma_ack_reg$dma_chsel.v:1085$14051 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ch_sel.$verific$de_stup_d1_reg$dma_chsel.v:905$14001 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ch_sel.$verific$arb_req_reg$dma_chsel.v:890$13999 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ch_sel.$verific$arb_chcsr_reg_reg$dma_chsel.v:1310$14104 ($aldff) from module dma_top.
Removing never-active CLR on $flatten\ch_sel.$verific$arb_ch_sel_reg$dma_chsel.v:858$13966 ($dlatchsr) from module dma_top.
Removing never-active ARST on $flatten\ch_sel.$verific$arb_ch_sel_reg$dma_chsel.v:858$13966 ($dlatchsr) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_slv.$verific$slv_wr_d1o_reg$dma_ahbslv.v:274$18114 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_slv.$verific$slv_sz_d1o_reg$dma_ahbslv.v:268$18109 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_slv.$verific$slv_pt_d1o_reg$dma_ahbslv.v:268$18110 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_slv.$verific$slv_br_req_reg$dma_ahbslv.v:366$18179 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_slv.$verific$slv_ad_d1o_reg$dma_ahbslv.v:268$18108 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_slv.$verific$hresp_br_reg$dma_ahbslv.v:448$18229 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_slv.$verific$hreadyout_reg_reg$dma_ahbslv.v:315$18143 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_slv.$verific$hreadyout_br_reg$dma_ahbslv.v:435$18222 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_slv.$verific$hrdata_reg_reg$dma_ahbslv.v:346$18169 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_slv.$verific$hrdata_br_reg$dma_ahbslv.v:492$18264 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_slv.$verific$br_st_reg$dma_ahbslv.v:407$18200 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_mst1.$verific$mx_dtp_reg$dma_ahbmst.v:596$8584 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_mst1.$verific$mx_dt_st_reg$dma_ahbmst.v:607$8593 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_mst1.$verific$mx_dma_had_a_rty_reg$dma_ahbmst.v:1209$8858 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_mst1.$verific$mx_cmd_st_reg$dma_ahbmst.v:586$8579 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_mst1.$verific$mx_ad1t0x_reg$dma_ahbmst.v:1111$8803 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_mst1.$verific$m0_m1_diff_tx_reg$dma_ahbmst.v:926$8695 ($aldff) from module dma_top.
Removing never-active async load on $flatten\ahb_mst1.$verific$inc_selx_reg$dma_ahbmst.v:1045$8780 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_mst1.$verific$hwriteo_reg$dma_ahbmst.v:671$8622 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_mst1.$verific$hwdatao_reg$dma_ahbmst.v:893$8681 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_mst1.$verific$hsizeo_reg$dma_ahbmst.v:726$8641 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_mst1.$verific$hproto_reg$dma_ahbmst.v:783$8647 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_mst1.$verific$hbursto_reg$dma_ahbmst.v:811$8659 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_mst1.$verific$haddro_reg$dma_ahbmst.v:987$8732 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_mst1.$verific$adin_is_neg_reg$dma_ahbmst.v:1094$8791 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_mst1.$verific$add_cfx_reg$dma_ahbmst.v:1088$8788 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_mst0.$verific$mx_dtp_reg$dma_ahbmst.v:596$7861 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_mst0.$verific$mx_dt_st_reg$dma_ahbmst.v:607$7870 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_mst0.$verific$mx_dma_had_a_rty_reg$dma_ahbmst.v:1209$8117 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_mst0.$verific$mx_cmd_st_reg$dma_ahbmst.v:586$7856 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_mst0.$verific$mx_ad1t0x_reg$dma_ahbmst.v:1111$8065 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_mst0.$verific$m0_m1_diff_tx_reg$dma_ahbmst.v:926$7957 ($aldff) from module dma_top.
Removing never-active async load on $flatten\ahb_mst0.$verific$inc_selx_reg$dma_ahbmst.v:1045$8042 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_mst0.$verific$add_cfx_reg$dma_ahbmst.v:1088$8050 ($aldff) from module dma_top.
Changing const-value async load to async reset on $flatten\ahb_mst0.$verific$adin_is_neg_reg$dma_ahbmst.v:1094$8053 ($aldff) from module dma_top.

11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \dma_top..
Removed 14 unused cells and 106 unused wires.
<suppressed ~15 debug messages>

11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module dma_top.

11.9. Rerunning OPT passes. (Maybe there is more to do..)

11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \dma_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~522 debug messages>

11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \dma_top.
Performed a total of 0 changes.

11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\dma_top'.
Removed a total of 0 cells.

11.13. Executing OPT_DFF pass (perform DFF optimizations).

11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \dma_top..

11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module dma_top.

11.16. Finished OPT passes. (There is nothing left to do.)

12. Executing FSM pass (extract and optimize FSM).

12.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking dma_top.ahb_mst0.inc_selx as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking dma_top.ahb_mst1.inc_selx as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking dma_top.m1_mux.mux_no as FSM state register:
    Users of register don't seem to benefit from recoding.

12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \dma_top..

12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

13. Executing OPT pass (performing simple optimizations).

13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module dma_top.

13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\dma_top'.
Removed a total of 0 cells.

13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \dma_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~522 debug messages>

13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \dma_top.
Performed a total of 0 changes.

13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\dma_top'.
Removed a total of 0 cells.

13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\m1_mux.$verific$mux_no_reg$dma_ahbmux.v:325$18399 ($adff) from module dma_top (D = \m1_mux.mux_noi, Q = \m1_mux.mux_no).
Adding EN signal on $flatten\m1_mux.$verific$hrp_df_reg$dma_ahbmux.v:369$18419 ($adff) from module dma_top (D = { 1'0 \m1_mux.df_cmd }, Q = \m1_mux.hrp_df).
Adding EN signal on $flatten\m1_mux.$verific$hrmxnof_reg$dma_ahbmux.v:341$18407 ($adff) from module dma_top (D = \m1_mux.hsel_df, Q = \m1_mux.hrmxnof).
Adding EN signal on $flatten\dma_fifo.$verific$part_wd_reg$dma_fifo.v:387$13422 ($adff) from module dma_top (D = $flatten\dma_fifo.$verific$n539$13233, Q = \dma_fifo.part_wd).
Adding EN signal on $flatten\dma_fifo.$verific$ff_fram_wado_reg$dma_fifo.v:419$13432 ($adff) from module dma_top (D = $flatten\dma_fifo.$verific$n601$13259, Q = \dma_fifo.ff_fram_wado).
Adding EN signal on $flatten\dma_fifo.$verific$ff_fram_radx_reg$dma_fifo.v:427$13437 ($adff) from module dma_top (D = $flatten\dma_fifo.$verific$n633$13263, Q = \dma_fifo.ff_fram_radx).
Adding EN signal on $flatten\dma_fifo.$verific$ff_cnv_q_vld_reg$dma_fifo.v:313$13386 ($adff) from module dma_top (D = $flatten\dma_fifo.$verific$n483$13208, Q = \dma_fifo.ff_cnv_q_vld).
Adding EN signal on $flatten\dma_fifo.$verific$ff_cnt_reg$dma_fifo.v:440$13451 ($adff) from module dma_top (D = $flatten\dma_fifo.$verific$n699$13271, Q = \dma_fifo.ff_cnt).
Adding EN signal on $flatten\dma_fifo.$verific$cnv_bt3_reg$dma_fifo.v:302$13376 ($adff) from module dma_top (D = \dma_fifo.cb3i, Q = \dma_fifo.cnv_bt3).
Adding EN signal on $flatten\dma_fifo.$verific$cnv_bt2_reg$dma_fifo.v:296$13373 ($adff) from module dma_top (D = \dma_fifo.cb2i, Q = \dma_fifo.cnv_bt2).
Adding EN signal on $flatten\dma_fifo.$verific$cnv_bt1_reg$dma_fifo.v:290$13370 ($adff) from module dma_top (D = \dma_fifo.cb1i, Q = \dma_fifo.cnv_bt1).
Adding EN signal on $flatten\dma_fifo.$verific$cnv_bt0_reg$dma_fifo.v:284$13367 ($adff) from module dma_top (D = \dma_fifo.cb0i, Q = \dma_fifo.cnv_bt0).
Adding EN signal on $flatten\dma_fifo.$verific$cbe_reg$dma_fifo.v:271$13354 ($adff) from module dma_top (D = $flatten\dma_fifo.$verific$n291$13245, Q = \dma_fifo.cbe).
Adding EN signal on $flatten\de.$verific$upk_cnt1_reg$dma_engine.v:1638$7388 ($adff) from module dma_top (D = $flatten\de.$verific$n1788$6867, Q = \de.upk_cnt1).
Adding EN signal on $flatten\de.$verific$upk_cnt0_reg$dma_engine.v:1630$7383 ($adff) from module dma_top (D = $flatten\de.$verific$n1767$6864, Q = \de.upk_cnt0).
Adding EN signal on $flatten\de.$verific$tsz_cnt_reg$dma_engine.v:1537$7332 ($adff) from module dma_top (D = $flatten\de.$verific$n1632$6857, Q = \de.tsz_cnt).
Adding EN signal on $flatten\de.$verific$st_rd_msk_reg$dma_engine.v:1500$7315 ($adff) from module dma_top (D = $flatten\de.$verific$n1488$6764, Q = \de.st_rd_msk).
Adding EN signal on $flatten\de.$verific$m1_is_llp_reg$dma_engine.v:1096$7146 ($adff) from module dma_top (D = $flatten\de.$verific$n760$6673, Q = \de.m1_is_llp).
Adding EN signal on $flatten\de.$verific$m0_is_llp_reg$dma_engine.v:1081$7142 ($adff) from module dma_top (D = $flatten\de.$verific$n750$6670, Q = \de.m0_is_llp).
Adding EN signal on $flatten\de.$verific$m0_arb_st_reg$dma_engine.v:1122$7163 ($adff) from module dma_top (D = $flatten\de.$verific$n783$6685, Q = \de.m0_arb_st).
Adding EN signal on $flatten\de.$verific$de_mllp_reg$dma_engine.v:653$6909 ($adff) from module dma_top (D = $flatten\de.$verific$n217$6811, Q = \de.de_mllp).
Adding EN signal on $flatten\de.$verific$de_err_notify_reg$dma_engine.v:1473$7301 ($adff) from module dma_top (D = $flatten\de.$verific$n1468$6753, Q = \de.de_err_notify).
Adding EN signal on $flatten\de.$verific$bst_cnt_reg$dma_engine.v:1522$7325 ($adff) from module dma_top (D = $flatten\de.$verific$n1556$6852, Q = \de.bst_cnt).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$swidth_reg$dma_chrf.v:411$17673 ($adff) from module dma_top (D = $flatten\ctl_rf.\c7_rf.$verific$n231$17510, Q = \ctl_rf.c7_rf.swidth).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$src_sz_reg$dma_chrf.v:352$17650 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [2:0], Q = \ctl_rf.c7_rf.src_sz).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$src_sel_reg$dma_chrf.v:463$17710 ($adff) from module dma_top (D = $flatten\ctl_rf.\c7_rf.$verific$n308$17464, Q = \ctl_rf.c7_rf.src_sel).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$sad_ctl1_reg$dma_chrf.v:463$17706 ($adff) from module dma_top (D = $flatten\ctl_rf.\c7_rf.$verific$n304$17460, Q = \ctl_rf.c7_rf.sad_ctl1).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$sad_ctl0_reg$dma_chrf.v:463$17707 ($adff) from module dma_top (D = $flatten\ctl_rf.\c7_rf.$verific$n305$17461, Q = \ctl_rf.c7_rf.sad_ctl0).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$prot3_reg$dma_chrf.v:343$17644 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [5], Q = \ctl_rf.c7_rf.prot3).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$prot2_reg$dma_chrf.v:343$17645 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [4], Q = \ctl_rf.c7_rf.prot2).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$prot1_reg$dma_chrf.v:343$17646 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [3], Q = \ctl_rf.c7_rf.prot1).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$mode_reg$dma_chrf.v:431$17681 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [7], Q = \ctl_rf.c7_rf.mode).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$int_tc_msk_reg$dma_chrf.v:306$17629 ($adff) from module dma_top (D = $flatten\ctl_rf.\c7_rf.$verific$n114$17416, Q = \ctl_rf.c7_rf.int_tc_msk).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$int_tc1_msk_reg$dma_chrf.v:500$17728 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [0], Q = \ctl_rf.c7_rf.int_tc1_msk).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$int_err_msk_reg$dma_chrf.v:500$17727 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [1], Q = \ctl_rf.c7_rf.int_err_msk).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$int_abt_msk_reg$dma_chrf.v:500$17726 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [2], Q = \ctl_rf.c7_rf.int_abt_msk).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$dwidth_reg$dma_chrf.v:422$17678 ($adff) from module dma_top (D = $flatten\ctl_rf.\c7_rf.$verific$n261$17514, Q = \ctl_rf.c7_rf.dwidth).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$dst_sel_reg$dma_chrf.v:463$17711 ($adff) from module dma_top (D = $flatten\ctl_rf.\c7_rf.$verific$n309$17465, Q = \ctl_rf.c7_rf.dst_sel).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$dreqmode_reg$dma_chrf.v:326$17637 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb3 [0], Q = \ctl_rf.c7_rf.dreqmode).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$dad_ctl1_reg$dma_chrf.v:463$17708 ($adff) from module dma_top (D = $flatten\ctl_rf.\c7_rf.$verific$n306$17462, Q = \ctl_rf.c7_rf.dad_ctl1).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$dad_ctl0_reg$dma_chrf.v:463$17709 ($adff) from module dma_top (D = $flatten\ctl_rf.\c7_rf.$verific$n307$17463, Q = \ctl_rf.c7_rf.dad_ctl0).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$chtsz_reg$dma_chrf.v:644$17810 ($adff) from module dma_top (D = $flatten\ctl_rf.\c7_rf.$verific$n1218$17561, Q = \ctl_rf.c7_rf.chtsz [7:0]).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$chtsz_reg$dma_chrf.v:644$17810 ($adff) from module dma_top (D = $flatten\ctl_rf.\c7_rf.$verific$n1216$17559, Q = \ctl_rf.c7_rf.chtsz [11:8]).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$chsad_reg$dma_chrf.v:540$17742 ($adff) from module dma_top (D = $flatten\ctl_rf.\c7_rf.$verific$n1195$17541, Q = \ctl_rf.c7_rf.chsad [7:0]).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$chsad_reg$dma_chrf.v:540$17742 ($adff) from module dma_top (D = $flatten\ctl_rf.\c7_rf.$verific$n1193$17539, Q = \ctl_rf.c7_rf.chsad [15:8]).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$chsad_reg$dma_chrf.v:540$17742 ($adff) from module dma_top (D = $flatten\ctl_rf.\c7_rf.$verific$n1191$17537, Q = \ctl_rf.c7_rf.chsad [23:16]).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$chsad_reg$dma_chrf.v:540$17742 ($adff) from module dma_top (D = $flatten\ctl_rf.\c7_rf.$verific$n1189$17535, Q = \ctl_rf.c7_rf.chsad [31:24]).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$chpri_reg$dma_chrf.v:316$17634 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [7:6], Q = \ctl_rf.c7_rf.chpri).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$chllpen_reg$dma_chrf.v:239$17586 ($adff) from module dma_top (D = $flatten\ctl_rf.\c7_rf.$verific$n28$17389, Q = \ctl_rf.c7_rf.chllpen).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$chllp_reg$dma_chrf.v:621$17791 ($adff) from module dma_top (D = $flatten\ctl_rf.\c7_rf.$verific$n1213$17557, Q = \ctl_rf.c7_rf.chllp [7:0]).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$chllp_reg$dma_chrf.v:621$17791 ($adff) from module dma_top (D = $flatten\ctl_rf.\c7_rf.$verific$n1211$17555, Q = \ctl_rf.c7_rf.chllp [15:8]).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$chllp_reg$dma_chrf.v:621$17791 ($adff) from module dma_top (D = $flatten\ctl_rf.\c7_rf.$verific$n1209$17553, Q = \ctl_rf.c7_rf.chllp [23:16]).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$chllp_reg$dma_chrf.v:621$17791 ($adff) from module dma_top (D = $flatten\ctl_rf.\c7_rf.$verific$n1207$17551, Q = \ctl_rf.c7_rf.chllp [31:24]).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$chllp_on_reg$dma_chrf.v:267$17598 ($adff) from module dma_top (D = $flatten\ctl_rf.\c7_rf.$verific$n45$17398, Q = \ctl_rf.c7_rf.chllp_on).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$chllp_cnt_reg$dma_chrf.v:279$17613 ($adff) from module dma_top (D = $flatten\ctl_rf.\c7_rf.$verific$n86$17499, Q = \ctl_rf.c7_rf.chllp_cnt).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$chdad_reg$dma_chrf.v:580$17768 ($adff) from module dma_top (D = $flatten\ctl_rf.\c7_rf.$verific$n1204$17549, Q = \ctl_rf.c7_rf.chdad [7:0]).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$chdad_reg$dma_chrf.v:580$17768 ($adff) from module dma_top (D = $flatten\ctl_rf.\c7_rf.$verific$n1202$17547, Q = \ctl_rf.c7_rf.chdad [15:8]).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$chdad_reg$dma_chrf.v:580$17768 ($adff) from module dma_top (D = $flatten\ctl_rf.\c7_rf.$verific$n1200$17545, Q = \ctl_rf.c7_rf.chdad [23:16]).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$chdad_reg$dma_chrf.v:580$17768 ($adff) from module dma_top (D = $flatten\ctl_rf.\c7_rf.$verific$n1198$17543, Q = \ctl_rf.c7_rf.chdad [31:24]).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$chabt_reg$dma_chrf.v:390$17663 ($adff) from module dma_top (D = $flatten\ctl_rf.\c7_rf.$verific$n198$17435, Q = \ctl_rf.c7_rf.chabt).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$ch_en_reg$dma_chrf.v:480$17720 ($adff) from module dma_top (D = $flatten\ctl_rf.\c7_rf.$verific$n334$17471, Q = \ctl_rf.c7_rf.ch_en).
Adding EN signal on $flatten\ctl_rf.\c7_rf.$verific$autold_reg$dma_chrf.v:400$17667 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb1 [6], Q = \ctl_rf.c7_rf.autold).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$swidth_reg$dma_chrf.v:411$17222 ($adff) from module dma_top (D = $flatten\ctl_rf.\c6_rf.$verific$n231$17059, Q = \ctl_rf.c6_rf.swidth).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$src_sz_reg$dma_chrf.v:352$17199 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [2:0], Q = \ctl_rf.c6_rf.src_sz).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$src_sel_reg$dma_chrf.v:463$17259 ($adff) from module dma_top (D = $flatten\ctl_rf.\c6_rf.$verific$n308$17013, Q = \ctl_rf.c6_rf.src_sel).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$sad_ctl1_reg$dma_chrf.v:463$17255 ($adff) from module dma_top (D = $flatten\ctl_rf.\c6_rf.$verific$n304$17009, Q = \ctl_rf.c6_rf.sad_ctl1).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$sad_ctl0_reg$dma_chrf.v:463$17256 ($adff) from module dma_top (D = $flatten\ctl_rf.\c6_rf.$verific$n305$17010, Q = \ctl_rf.c6_rf.sad_ctl0).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$prot3_reg$dma_chrf.v:343$17193 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [5], Q = \ctl_rf.c6_rf.prot3).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$prot2_reg$dma_chrf.v:343$17194 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [4], Q = \ctl_rf.c6_rf.prot2).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$prot1_reg$dma_chrf.v:343$17195 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [3], Q = \ctl_rf.c6_rf.prot1).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$mode_reg$dma_chrf.v:431$17230 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [7], Q = \ctl_rf.c6_rf.mode).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$int_tc_msk_reg$dma_chrf.v:306$17178 ($adff) from module dma_top (D = $flatten\ctl_rf.\c6_rf.$verific$n114$16965, Q = \ctl_rf.c6_rf.int_tc_msk).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$int_tc1_msk_reg$dma_chrf.v:500$17277 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [0], Q = \ctl_rf.c6_rf.int_tc1_msk).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$int_err_msk_reg$dma_chrf.v:500$17276 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [1], Q = \ctl_rf.c6_rf.int_err_msk).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$int_abt_msk_reg$dma_chrf.v:500$17275 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [2], Q = \ctl_rf.c6_rf.int_abt_msk).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$dwidth_reg$dma_chrf.v:422$17227 ($adff) from module dma_top (D = $flatten\ctl_rf.\c6_rf.$verific$n261$17063, Q = \ctl_rf.c6_rf.dwidth).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$dst_sel_reg$dma_chrf.v:463$17260 ($adff) from module dma_top (D = $flatten\ctl_rf.\c6_rf.$verific$n309$17014, Q = \ctl_rf.c6_rf.dst_sel).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$dreqmode_reg$dma_chrf.v:326$17186 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb3 [0], Q = \ctl_rf.c6_rf.dreqmode).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$dad_ctl1_reg$dma_chrf.v:463$17257 ($adff) from module dma_top (D = $flatten\ctl_rf.\c6_rf.$verific$n306$17011, Q = \ctl_rf.c6_rf.dad_ctl1).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$dad_ctl0_reg$dma_chrf.v:463$17258 ($adff) from module dma_top (D = $flatten\ctl_rf.\c6_rf.$verific$n307$17012, Q = \ctl_rf.c6_rf.dad_ctl0).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$chtsz_reg$dma_chrf.v:644$17359 ($adff) from module dma_top (D = $flatten\ctl_rf.\c6_rf.$verific$n1218$17110, Q = \ctl_rf.c6_rf.chtsz [7:0]).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$chtsz_reg$dma_chrf.v:644$17359 ($adff) from module dma_top (D = $flatten\ctl_rf.\c6_rf.$verific$n1216$17108, Q = \ctl_rf.c6_rf.chtsz [11:8]).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$chsad_reg$dma_chrf.v:540$17291 ($adff) from module dma_top (D = $flatten\ctl_rf.\c6_rf.$verific$n1195$17090, Q = \ctl_rf.c6_rf.chsad [7:0]).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$chsad_reg$dma_chrf.v:540$17291 ($adff) from module dma_top (D = $flatten\ctl_rf.\c6_rf.$verific$n1193$17088, Q = \ctl_rf.c6_rf.chsad [15:8]).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$chsad_reg$dma_chrf.v:540$17291 ($adff) from module dma_top (D = $flatten\ctl_rf.\c6_rf.$verific$n1191$17086, Q = \ctl_rf.c6_rf.chsad [23:16]).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$chsad_reg$dma_chrf.v:540$17291 ($adff) from module dma_top (D = $flatten\ctl_rf.\c6_rf.$verific$n1189$17084, Q = \ctl_rf.c6_rf.chsad [31:24]).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$chpri_reg$dma_chrf.v:316$17183 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [7:6], Q = \ctl_rf.c6_rf.chpri).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$chllpen_reg$dma_chrf.v:239$17135 ($adff) from module dma_top (D = $flatten\ctl_rf.\c6_rf.$verific$n28$16938, Q = \ctl_rf.c6_rf.chllpen).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$chllp_reg$dma_chrf.v:621$17340 ($adff) from module dma_top (D = $flatten\ctl_rf.\c6_rf.$verific$n1213$17106, Q = \ctl_rf.c6_rf.chllp [7:0]).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$chllp_reg$dma_chrf.v:621$17340 ($adff) from module dma_top (D = $flatten\ctl_rf.\c6_rf.$verific$n1211$17104, Q = \ctl_rf.c6_rf.chllp [15:8]).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$chllp_reg$dma_chrf.v:621$17340 ($adff) from module dma_top (D = $flatten\ctl_rf.\c6_rf.$verific$n1209$17102, Q = \ctl_rf.c6_rf.chllp [23:16]).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$chllp_reg$dma_chrf.v:621$17340 ($adff) from module dma_top (D = $flatten\ctl_rf.\c6_rf.$verific$n1207$17100, Q = \ctl_rf.c6_rf.chllp [31:24]).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$chllp_on_reg$dma_chrf.v:267$17147 ($adff) from module dma_top (D = $flatten\ctl_rf.\c6_rf.$verific$n45$16947, Q = \ctl_rf.c6_rf.chllp_on).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$chllp_cnt_reg$dma_chrf.v:279$17162 ($adff) from module dma_top (D = $flatten\ctl_rf.\c6_rf.$verific$n86$17048, Q = \ctl_rf.c6_rf.chllp_cnt).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$chdad_reg$dma_chrf.v:580$17317 ($adff) from module dma_top (D = $flatten\ctl_rf.\c6_rf.$verific$n1204$17098, Q = \ctl_rf.c6_rf.chdad [7:0]).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$chdad_reg$dma_chrf.v:580$17317 ($adff) from module dma_top (D = $flatten\ctl_rf.\c6_rf.$verific$n1202$17096, Q = \ctl_rf.c6_rf.chdad [15:8]).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$chdad_reg$dma_chrf.v:580$17317 ($adff) from module dma_top (D = $flatten\ctl_rf.\c6_rf.$verific$n1200$17094, Q = \ctl_rf.c6_rf.chdad [23:16]).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$chdad_reg$dma_chrf.v:580$17317 ($adff) from module dma_top (D = $flatten\ctl_rf.\c6_rf.$verific$n1198$17092, Q = \ctl_rf.c6_rf.chdad [31:24]).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$chabt_reg$dma_chrf.v:390$17212 ($adff) from module dma_top (D = $flatten\ctl_rf.\c6_rf.$verific$n198$16984, Q = \ctl_rf.c6_rf.chabt).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$ch_en_reg$dma_chrf.v:480$17269 ($adff) from module dma_top (D = $flatten\ctl_rf.\c6_rf.$verific$n334$17020, Q = \ctl_rf.c6_rf.ch_en).
Adding EN signal on $flatten\ctl_rf.\c6_rf.$verific$autold_reg$dma_chrf.v:400$17216 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb1 [6], Q = \ctl_rf.c6_rf.autold).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$swidth_reg$dma_chrf.v:411$16771 ($adff) from module dma_top (D = $flatten\ctl_rf.\c5_rf.$verific$n231$16608, Q = \ctl_rf.c5_rf.swidth).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$src_sz_reg$dma_chrf.v:352$16748 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [2:0], Q = \ctl_rf.c5_rf.src_sz).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$src_sel_reg$dma_chrf.v:463$16808 ($adff) from module dma_top (D = $flatten\ctl_rf.\c5_rf.$verific$n308$16562, Q = \ctl_rf.c5_rf.src_sel).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$sad_ctl1_reg$dma_chrf.v:463$16804 ($adff) from module dma_top (D = $flatten\ctl_rf.\c5_rf.$verific$n304$16558, Q = \ctl_rf.c5_rf.sad_ctl1).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$sad_ctl0_reg$dma_chrf.v:463$16805 ($adff) from module dma_top (D = $flatten\ctl_rf.\c5_rf.$verific$n305$16559, Q = \ctl_rf.c5_rf.sad_ctl0).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$prot3_reg$dma_chrf.v:343$16742 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [5], Q = \ctl_rf.c5_rf.prot3).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$prot2_reg$dma_chrf.v:343$16743 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [4], Q = \ctl_rf.c5_rf.prot2).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$prot1_reg$dma_chrf.v:343$16744 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [3], Q = \ctl_rf.c5_rf.prot1).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$mode_reg$dma_chrf.v:431$16779 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [7], Q = \ctl_rf.c5_rf.mode).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$int_tc_msk_reg$dma_chrf.v:306$16727 ($adff) from module dma_top (D = $flatten\ctl_rf.\c5_rf.$verific$n114$16514, Q = \ctl_rf.c5_rf.int_tc_msk).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$int_tc1_msk_reg$dma_chrf.v:500$16826 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [0], Q = \ctl_rf.c5_rf.int_tc1_msk).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$int_err_msk_reg$dma_chrf.v:500$16825 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [1], Q = \ctl_rf.c5_rf.int_err_msk).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$int_abt_msk_reg$dma_chrf.v:500$16824 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [2], Q = \ctl_rf.c5_rf.int_abt_msk).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$dwidth_reg$dma_chrf.v:422$16776 ($adff) from module dma_top (D = $flatten\ctl_rf.\c5_rf.$verific$n261$16612, Q = \ctl_rf.c5_rf.dwidth).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$dst_sel_reg$dma_chrf.v:463$16809 ($adff) from module dma_top (D = $flatten\ctl_rf.\c5_rf.$verific$n309$16563, Q = \ctl_rf.c5_rf.dst_sel).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$dreqmode_reg$dma_chrf.v:326$16735 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb3 [0], Q = \ctl_rf.c5_rf.dreqmode).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$dad_ctl1_reg$dma_chrf.v:463$16806 ($adff) from module dma_top (D = $flatten\ctl_rf.\c5_rf.$verific$n306$16560, Q = \ctl_rf.c5_rf.dad_ctl1).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$dad_ctl0_reg$dma_chrf.v:463$16807 ($adff) from module dma_top (D = $flatten\ctl_rf.\c5_rf.$verific$n307$16561, Q = \ctl_rf.c5_rf.dad_ctl0).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$chtsz_reg$dma_chrf.v:644$16908 ($adff) from module dma_top (D = $flatten\ctl_rf.\c5_rf.$verific$n1218$16659, Q = \ctl_rf.c5_rf.chtsz [7:0]).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$chtsz_reg$dma_chrf.v:644$16908 ($adff) from module dma_top (D = $flatten\ctl_rf.\c5_rf.$verific$n1216$16657, Q = \ctl_rf.c5_rf.chtsz [11:8]).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$chsad_reg$dma_chrf.v:540$16840 ($adff) from module dma_top (D = $flatten\ctl_rf.\c5_rf.$verific$n1195$16639, Q = \ctl_rf.c5_rf.chsad [7:0]).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$chsad_reg$dma_chrf.v:540$16840 ($adff) from module dma_top (D = $flatten\ctl_rf.\c5_rf.$verific$n1193$16637, Q = \ctl_rf.c5_rf.chsad [15:8]).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$chsad_reg$dma_chrf.v:540$16840 ($adff) from module dma_top (D = $flatten\ctl_rf.\c5_rf.$verific$n1191$16635, Q = \ctl_rf.c5_rf.chsad [23:16]).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$chsad_reg$dma_chrf.v:540$16840 ($adff) from module dma_top (D = $flatten\ctl_rf.\c5_rf.$verific$n1189$16633, Q = \ctl_rf.c5_rf.chsad [31:24]).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$chpri_reg$dma_chrf.v:316$16732 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [7:6], Q = \ctl_rf.c5_rf.chpri).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$chllpen_reg$dma_chrf.v:239$16684 ($adff) from module dma_top (D = $flatten\ctl_rf.\c5_rf.$verific$n28$16487, Q = \ctl_rf.c5_rf.chllpen).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$chllp_reg$dma_chrf.v:621$16889 ($adff) from module dma_top (D = $flatten\ctl_rf.\c5_rf.$verific$n1213$16655, Q = \ctl_rf.c5_rf.chllp [7:0]).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$chllp_reg$dma_chrf.v:621$16889 ($adff) from module dma_top (D = $flatten\ctl_rf.\c5_rf.$verific$n1211$16653, Q = \ctl_rf.c5_rf.chllp [15:8]).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$chllp_reg$dma_chrf.v:621$16889 ($adff) from module dma_top (D = $flatten\ctl_rf.\c5_rf.$verific$n1209$16651, Q = \ctl_rf.c5_rf.chllp [23:16]).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$chllp_reg$dma_chrf.v:621$16889 ($adff) from module dma_top (D = $flatten\ctl_rf.\c5_rf.$verific$n1207$16649, Q = \ctl_rf.c5_rf.chllp [31:24]).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$chllp_on_reg$dma_chrf.v:267$16696 ($adff) from module dma_top (D = $flatten\ctl_rf.\c5_rf.$verific$n45$16496, Q = \ctl_rf.c5_rf.chllp_on).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$chllp_cnt_reg$dma_chrf.v:279$16711 ($adff) from module dma_top (D = $flatten\ctl_rf.\c5_rf.$verific$n86$16597, Q = \ctl_rf.c5_rf.chllp_cnt).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$chdad_reg$dma_chrf.v:580$16866 ($adff) from module dma_top (D = $flatten\ctl_rf.\c5_rf.$verific$n1204$16647, Q = \ctl_rf.c5_rf.chdad [7:0]).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$chdad_reg$dma_chrf.v:580$16866 ($adff) from module dma_top (D = $flatten\ctl_rf.\c5_rf.$verific$n1202$16645, Q = \ctl_rf.c5_rf.chdad [15:8]).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$chdad_reg$dma_chrf.v:580$16866 ($adff) from module dma_top (D = $flatten\ctl_rf.\c5_rf.$verific$n1200$16643, Q = \ctl_rf.c5_rf.chdad [23:16]).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$chdad_reg$dma_chrf.v:580$16866 ($adff) from module dma_top (D = $flatten\ctl_rf.\c5_rf.$verific$n1198$16641, Q = \ctl_rf.c5_rf.chdad [31:24]).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$chabt_reg$dma_chrf.v:390$16761 ($adff) from module dma_top (D = $flatten\ctl_rf.\c5_rf.$verific$n198$16533, Q = \ctl_rf.c5_rf.chabt).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$ch_en_reg$dma_chrf.v:480$16818 ($adff) from module dma_top (D = $flatten\ctl_rf.\c5_rf.$verific$n334$16569, Q = \ctl_rf.c5_rf.ch_en).
Adding EN signal on $flatten\ctl_rf.\c5_rf.$verific$autold_reg$dma_chrf.v:400$16765 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb1 [6], Q = \ctl_rf.c5_rf.autold).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$swidth_reg$dma_chrf.v:411$16320 ($adff) from module dma_top (D = $flatten\ctl_rf.\c4_rf.$verific$n231$16157, Q = \ctl_rf.c4_rf.swidth).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$src_sz_reg$dma_chrf.v:352$16297 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [2:0], Q = \ctl_rf.c4_rf.src_sz).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$src_sel_reg$dma_chrf.v:463$16357 ($adff) from module dma_top (D = $flatten\ctl_rf.\c4_rf.$verific$n308$16111, Q = \ctl_rf.c4_rf.src_sel).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$sad_ctl1_reg$dma_chrf.v:463$16353 ($adff) from module dma_top (D = $flatten\ctl_rf.\c4_rf.$verific$n304$16107, Q = \ctl_rf.c4_rf.sad_ctl1).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$sad_ctl0_reg$dma_chrf.v:463$16354 ($adff) from module dma_top (D = $flatten\ctl_rf.\c4_rf.$verific$n305$16108, Q = \ctl_rf.c4_rf.sad_ctl0).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$prot3_reg$dma_chrf.v:343$16291 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [5], Q = \ctl_rf.c4_rf.prot3).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$prot2_reg$dma_chrf.v:343$16292 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [4], Q = \ctl_rf.c4_rf.prot2).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$prot1_reg$dma_chrf.v:343$16293 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [3], Q = \ctl_rf.c4_rf.prot1).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$mode_reg$dma_chrf.v:431$16328 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [7], Q = \ctl_rf.c4_rf.mode).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$int_tc_msk_reg$dma_chrf.v:306$16276 ($adff) from module dma_top (D = $flatten\ctl_rf.\c4_rf.$verific$n114$16063, Q = \ctl_rf.c4_rf.int_tc_msk).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$int_tc1_msk_reg$dma_chrf.v:500$16375 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [0], Q = \ctl_rf.c4_rf.int_tc1_msk).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$int_err_msk_reg$dma_chrf.v:500$16374 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [1], Q = \ctl_rf.c4_rf.int_err_msk).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$int_abt_msk_reg$dma_chrf.v:500$16373 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [2], Q = \ctl_rf.c4_rf.int_abt_msk).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$dwidth_reg$dma_chrf.v:422$16325 ($adff) from module dma_top (D = $flatten\ctl_rf.\c4_rf.$verific$n261$16161, Q = \ctl_rf.c4_rf.dwidth).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$dst_sel_reg$dma_chrf.v:463$16358 ($adff) from module dma_top (D = $flatten\ctl_rf.\c4_rf.$verific$n309$16112, Q = \ctl_rf.c4_rf.dst_sel).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$dreqmode_reg$dma_chrf.v:326$16284 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb3 [0], Q = \ctl_rf.c4_rf.dreqmode).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$dad_ctl1_reg$dma_chrf.v:463$16355 ($adff) from module dma_top (D = $flatten\ctl_rf.\c4_rf.$verific$n306$16109, Q = \ctl_rf.c4_rf.dad_ctl1).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$dad_ctl0_reg$dma_chrf.v:463$16356 ($adff) from module dma_top (D = $flatten\ctl_rf.\c4_rf.$verific$n307$16110, Q = \ctl_rf.c4_rf.dad_ctl0).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$chtsz_reg$dma_chrf.v:644$16457 ($adff) from module dma_top (D = $flatten\ctl_rf.\c4_rf.$verific$n1218$16208, Q = \ctl_rf.c4_rf.chtsz [7:0]).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$chtsz_reg$dma_chrf.v:644$16457 ($adff) from module dma_top (D = $flatten\ctl_rf.\c4_rf.$verific$n1216$16206, Q = \ctl_rf.c4_rf.chtsz [11:8]).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$chsad_reg$dma_chrf.v:540$16389 ($adff) from module dma_top (D = $flatten\ctl_rf.\c4_rf.$verific$n1195$16188, Q = \ctl_rf.c4_rf.chsad [7:0]).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$chsad_reg$dma_chrf.v:540$16389 ($adff) from module dma_top (D = $flatten\ctl_rf.\c4_rf.$verific$n1193$16186, Q = \ctl_rf.c4_rf.chsad [15:8]).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$chsad_reg$dma_chrf.v:540$16389 ($adff) from module dma_top (D = $flatten\ctl_rf.\c4_rf.$verific$n1191$16184, Q = \ctl_rf.c4_rf.chsad [23:16]).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$chsad_reg$dma_chrf.v:540$16389 ($adff) from module dma_top (D = $flatten\ctl_rf.\c4_rf.$verific$n1189$16182, Q = \ctl_rf.c4_rf.chsad [31:24]).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$chpri_reg$dma_chrf.v:316$16281 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [7:6], Q = \ctl_rf.c4_rf.chpri).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$chllpen_reg$dma_chrf.v:239$16233 ($adff) from module dma_top (D = $flatten\ctl_rf.\c4_rf.$verific$n28$16036, Q = \ctl_rf.c4_rf.chllpen).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$chllp_reg$dma_chrf.v:621$16438 ($adff) from module dma_top (D = $flatten\ctl_rf.\c4_rf.$verific$n1213$16204, Q = \ctl_rf.c4_rf.chllp [7:0]).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$chllp_reg$dma_chrf.v:621$16438 ($adff) from module dma_top (D = $flatten\ctl_rf.\c4_rf.$verific$n1211$16202, Q = \ctl_rf.c4_rf.chllp [15:8]).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$chllp_reg$dma_chrf.v:621$16438 ($adff) from module dma_top (D = $flatten\ctl_rf.\c4_rf.$verific$n1209$16200, Q = \ctl_rf.c4_rf.chllp [23:16]).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$chllp_reg$dma_chrf.v:621$16438 ($adff) from module dma_top (D = $flatten\ctl_rf.\c4_rf.$verific$n1207$16198, Q = \ctl_rf.c4_rf.chllp [31:24]).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$chllp_on_reg$dma_chrf.v:267$16245 ($adff) from module dma_top (D = $flatten\ctl_rf.\c4_rf.$verific$n45$16045, Q = \ctl_rf.c4_rf.chllp_on).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$chllp_cnt_reg$dma_chrf.v:279$16260 ($adff) from module dma_top (D = $flatten\ctl_rf.\c4_rf.$verific$n86$16146, Q = \ctl_rf.c4_rf.chllp_cnt).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$chdad_reg$dma_chrf.v:580$16415 ($adff) from module dma_top (D = $flatten\ctl_rf.\c4_rf.$verific$n1204$16196, Q = \ctl_rf.c4_rf.chdad [7:0]).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$chdad_reg$dma_chrf.v:580$16415 ($adff) from module dma_top (D = $flatten\ctl_rf.\c4_rf.$verific$n1202$16194, Q = \ctl_rf.c4_rf.chdad [15:8]).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$chdad_reg$dma_chrf.v:580$16415 ($adff) from module dma_top (D = $flatten\ctl_rf.\c4_rf.$verific$n1200$16192, Q = \ctl_rf.c4_rf.chdad [23:16]).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$chdad_reg$dma_chrf.v:580$16415 ($adff) from module dma_top (D = $flatten\ctl_rf.\c4_rf.$verific$n1198$16190, Q = \ctl_rf.c4_rf.chdad [31:24]).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$chabt_reg$dma_chrf.v:390$16310 ($adff) from module dma_top (D = $flatten\ctl_rf.\c4_rf.$verific$n198$16082, Q = \ctl_rf.c4_rf.chabt).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$ch_en_reg$dma_chrf.v:480$16367 ($adff) from module dma_top (D = $flatten\ctl_rf.\c4_rf.$verific$n334$16118, Q = \ctl_rf.c4_rf.ch_en).
Adding EN signal on $flatten\ctl_rf.\c4_rf.$verific$autold_reg$dma_chrf.v:400$16314 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb1 [6], Q = \ctl_rf.c4_rf.autold).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$swidth_reg$dma_chrf.v:411$15869 ($adff) from module dma_top (D = $flatten\ctl_rf.\c3_rf.$verific$n231$15706, Q = \ctl_rf.c3_rf.swidth).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$src_sz_reg$dma_chrf.v:352$15846 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [2:0], Q = \ctl_rf.c3_rf.src_sz).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$src_sel_reg$dma_chrf.v:463$15906 ($adff) from module dma_top (D = $flatten\ctl_rf.\c3_rf.$verific$n308$15660, Q = \ctl_rf.c3_rf.src_sel).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$sad_ctl1_reg$dma_chrf.v:463$15902 ($adff) from module dma_top (D = $flatten\ctl_rf.\c3_rf.$verific$n304$15656, Q = \ctl_rf.c3_rf.sad_ctl1).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$sad_ctl0_reg$dma_chrf.v:463$15903 ($adff) from module dma_top (D = $flatten\ctl_rf.\c3_rf.$verific$n305$15657, Q = \ctl_rf.c3_rf.sad_ctl0).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$prot3_reg$dma_chrf.v:343$15840 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [5], Q = \ctl_rf.c3_rf.prot3).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$prot2_reg$dma_chrf.v:343$15841 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [4], Q = \ctl_rf.c3_rf.prot2).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$prot1_reg$dma_chrf.v:343$15842 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [3], Q = \ctl_rf.c3_rf.prot1).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$mode_reg$dma_chrf.v:431$15877 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [7], Q = \ctl_rf.c3_rf.mode).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$int_tc_msk_reg$dma_chrf.v:306$15825 ($adff) from module dma_top (D = $flatten\ctl_rf.\c3_rf.$verific$n114$15612, Q = \ctl_rf.c3_rf.int_tc_msk).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$int_tc1_msk_reg$dma_chrf.v:500$15924 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [0], Q = \ctl_rf.c3_rf.int_tc1_msk).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$int_err_msk_reg$dma_chrf.v:500$15923 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [1], Q = \ctl_rf.c3_rf.int_err_msk).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$int_abt_msk_reg$dma_chrf.v:500$15922 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [2], Q = \ctl_rf.c3_rf.int_abt_msk).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$dwidth_reg$dma_chrf.v:422$15874 ($adff) from module dma_top (D = $flatten\ctl_rf.\c3_rf.$verific$n261$15710, Q = \ctl_rf.c3_rf.dwidth).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$dst_sel_reg$dma_chrf.v:463$15907 ($adff) from module dma_top (D = $flatten\ctl_rf.\c3_rf.$verific$n309$15661, Q = \ctl_rf.c3_rf.dst_sel).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$dreqmode_reg$dma_chrf.v:326$15833 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb3 [0], Q = \ctl_rf.c3_rf.dreqmode).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$dad_ctl1_reg$dma_chrf.v:463$15904 ($adff) from module dma_top (D = $flatten\ctl_rf.\c3_rf.$verific$n306$15658, Q = \ctl_rf.c3_rf.dad_ctl1).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$dad_ctl0_reg$dma_chrf.v:463$15905 ($adff) from module dma_top (D = $flatten\ctl_rf.\c3_rf.$verific$n307$15659, Q = \ctl_rf.c3_rf.dad_ctl0).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$chtsz_reg$dma_chrf.v:644$16006 ($adff) from module dma_top (D = $flatten\ctl_rf.\c3_rf.$verific$n1218$15757, Q = \ctl_rf.c3_rf.chtsz [7:0]).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$chtsz_reg$dma_chrf.v:644$16006 ($adff) from module dma_top (D = $flatten\ctl_rf.\c3_rf.$verific$n1216$15755, Q = \ctl_rf.c3_rf.chtsz [11:8]).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$chsad_reg$dma_chrf.v:540$15938 ($adff) from module dma_top (D = $flatten\ctl_rf.\c3_rf.$verific$n1195$15737, Q = \ctl_rf.c3_rf.chsad [7:0]).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$chsad_reg$dma_chrf.v:540$15938 ($adff) from module dma_top (D = $flatten\ctl_rf.\c3_rf.$verific$n1193$15735, Q = \ctl_rf.c3_rf.chsad [15:8]).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$chsad_reg$dma_chrf.v:540$15938 ($adff) from module dma_top (D = $flatten\ctl_rf.\c3_rf.$verific$n1191$15733, Q = \ctl_rf.c3_rf.chsad [23:16]).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$chsad_reg$dma_chrf.v:540$15938 ($adff) from module dma_top (D = $flatten\ctl_rf.\c3_rf.$verific$n1189$15731, Q = \ctl_rf.c3_rf.chsad [31:24]).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$chpri_reg$dma_chrf.v:316$15830 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [7:6], Q = \ctl_rf.c3_rf.chpri).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$chllpen_reg$dma_chrf.v:239$15782 ($adff) from module dma_top (D = $flatten\ctl_rf.\c3_rf.$verific$n28$15585, Q = \ctl_rf.c3_rf.chllpen).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$chllp_reg$dma_chrf.v:621$15987 ($adff) from module dma_top (D = $flatten\ctl_rf.\c3_rf.$verific$n1213$15753, Q = \ctl_rf.c3_rf.chllp [7:0]).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$chllp_reg$dma_chrf.v:621$15987 ($adff) from module dma_top (D = $flatten\ctl_rf.\c3_rf.$verific$n1211$15751, Q = \ctl_rf.c3_rf.chllp [15:8]).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$chllp_reg$dma_chrf.v:621$15987 ($adff) from module dma_top (D = $flatten\ctl_rf.\c3_rf.$verific$n1209$15749, Q = \ctl_rf.c3_rf.chllp [23:16]).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$chllp_reg$dma_chrf.v:621$15987 ($adff) from module dma_top (D = $flatten\ctl_rf.\c3_rf.$verific$n1207$15747, Q = \ctl_rf.c3_rf.chllp [31:24]).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$chllp_on_reg$dma_chrf.v:267$15794 ($adff) from module dma_top (D = $flatten\ctl_rf.\c3_rf.$verific$n45$15594, Q = \ctl_rf.c3_rf.chllp_on).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$chllp_cnt_reg$dma_chrf.v:279$15809 ($adff) from module dma_top (D = $flatten\ctl_rf.\c3_rf.$verific$n86$15695, Q = \ctl_rf.c3_rf.chllp_cnt).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$chdad_reg$dma_chrf.v:580$15964 ($adff) from module dma_top (D = $flatten\ctl_rf.\c3_rf.$verific$n1204$15745, Q = \ctl_rf.c3_rf.chdad [7:0]).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$chdad_reg$dma_chrf.v:580$15964 ($adff) from module dma_top (D = $flatten\ctl_rf.\c3_rf.$verific$n1202$15743, Q = \ctl_rf.c3_rf.chdad [15:8]).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$chdad_reg$dma_chrf.v:580$15964 ($adff) from module dma_top (D = $flatten\ctl_rf.\c3_rf.$verific$n1200$15741, Q = \ctl_rf.c3_rf.chdad [23:16]).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$chdad_reg$dma_chrf.v:580$15964 ($adff) from module dma_top (D = $flatten\ctl_rf.\c3_rf.$verific$n1198$15739, Q = \ctl_rf.c3_rf.chdad [31:24]).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$chabt_reg$dma_chrf.v:390$15859 ($adff) from module dma_top (D = $flatten\ctl_rf.\c3_rf.$verific$n198$15631, Q = \ctl_rf.c3_rf.chabt).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$ch_en_reg$dma_chrf.v:480$15916 ($adff) from module dma_top (D = $flatten\ctl_rf.\c3_rf.$verific$n334$15667, Q = \ctl_rf.c3_rf.ch_en).
Adding EN signal on $flatten\ctl_rf.\c3_rf.$verific$autold_reg$dma_chrf.v:400$15863 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb1 [6], Q = \ctl_rf.c3_rf.autold).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$swidth_reg$dma_chrf.v:411$15418 ($adff) from module dma_top (D = $flatten\ctl_rf.\c2_rf.$verific$n231$15255, Q = \ctl_rf.c2_rf.swidth).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$src_sz_reg$dma_chrf.v:352$15395 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [2:0], Q = \ctl_rf.c2_rf.src_sz).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$src_sel_reg$dma_chrf.v:463$15455 ($adff) from module dma_top (D = $flatten\ctl_rf.\c2_rf.$verific$n308$15209, Q = \ctl_rf.c2_rf.src_sel).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$sad_ctl1_reg$dma_chrf.v:463$15451 ($adff) from module dma_top (D = $flatten\ctl_rf.\c2_rf.$verific$n304$15205, Q = \ctl_rf.c2_rf.sad_ctl1).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$sad_ctl0_reg$dma_chrf.v:463$15452 ($adff) from module dma_top (D = $flatten\ctl_rf.\c2_rf.$verific$n305$15206, Q = \ctl_rf.c2_rf.sad_ctl0).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$prot3_reg$dma_chrf.v:343$15389 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [5], Q = \ctl_rf.c2_rf.prot3).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$prot2_reg$dma_chrf.v:343$15390 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [4], Q = \ctl_rf.c2_rf.prot2).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$prot1_reg$dma_chrf.v:343$15391 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [3], Q = \ctl_rf.c2_rf.prot1).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$mode_reg$dma_chrf.v:431$15426 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [7], Q = \ctl_rf.c2_rf.mode).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$int_tc_msk_reg$dma_chrf.v:306$15374 ($adff) from module dma_top (D = $flatten\ctl_rf.\c2_rf.$verific$n114$15161, Q = \ctl_rf.c2_rf.int_tc_msk).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$int_tc1_msk_reg$dma_chrf.v:500$15473 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [0], Q = \ctl_rf.c2_rf.int_tc1_msk).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$int_err_msk_reg$dma_chrf.v:500$15472 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [1], Q = \ctl_rf.c2_rf.int_err_msk).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$int_abt_msk_reg$dma_chrf.v:500$15471 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [2], Q = \ctl_rf.c2_rf.int_abt_msk).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$dwidth_reg$dma_chrf.v:422$15423 ($adff) from module dma_top (D = $flatten\ctl_rf.\c2_rf.$verific$n261$15259, Q = \ctl_rf.c2_rf.dwidth).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$dst_sel_reg$dma_chrf.v:463$15456 ($adff) from module dma_top (D = $flatten\ctl_rf.\c2_rf.$verific$n309$15210, Q = \ctl_rf.c2_rf.dst_sel).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$dreqmode_reg$dma_chrf.v:326$15382 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb3 [0], Q = \ctl_rf.c2_rf.dreqmode).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$dad_ctl1_reg$dma_chrf.v:463$15453 ($adff) from module dma_top (D = $flatten\ctl_rf.\c2_rf.$verific$n306$15207, Q = \ctl_rf.c2_rf.dad_ctl1).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$dad_ctl0_reg$dma_chrf.v:463$15454 ($adff) from module dma_top (D = $flatten\ctl_rf.\c2_rf.$verific$n307$15208, Q = \ctl_rf.c2_rf.dad_ctl0).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$chtsz_reg$dma_chrf.v:644$15555 ($adff) from module dma_top (D = $flatten\ctl_rf.\c2_rf.$verific$n1218$15306, Q = \ctl_rf.c2_rf.chtsz [7:0]).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$chtsz_reg$dma_chrf.v:644$15555 ($adff) from module dma_top (D = $flatten\ctl_rf.\c2_rf.$verific$n1216$15304, Q = \ctl_rf.c2_rf.chtsz [11:8]).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$chsad_reg$dma_chrf.v:540$15487 ($adff) from module dma_top (D = $flatten\ctl_rf.\c2_rf.$verific$n1195$15286, Q = \ctl_rf.c2_rf.chsad [7:0]).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$chsad_reg$dma_chrf.v:540$15487 ($adff) from module dma_top (D = $flatten\ctl_rf.\c2_rf.$verific$n1193$15284, Q = \ctl_rf.c2_rf.chsad [15:8]).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$chsad_reg$dma_chrf.v:540$15487 ($adff) from module dma_top (D = $flatten\ctl_rf.\c2_rf.$verific$n1191$15282, Q = \ctl_rf.c2_rf.chsad [23:16]).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$chsad_reg$dma_chrf.v:540$15487 ($adff) from module dma_top (D = $flatten\ctl_rf.\c2_rf.$verific$n1189$15280, Q = \ctl_rf.c2_rf.chsad [31:24]).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$chpri_reg$dma_chrf.v:316$15379 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [7:6], Q = \ctl_rf.c2_rf.chpri).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$chllpen_reg$dma_chrf.v:239$15331 ($adff) from module dma_top (D = $flatten\ctl_rf.\c2_rf.$verific$n28$15134, Q = \ctl_rf.c2_rf.chllpen).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$chllp_reg$dma_chrf.v:621$15536 ($adff) from module dma_top (D = $flatten\ctl_rf.\c2_rf.$verific$n1213$15302, Q = \ctl_rf.c2_rf.chllp [7:0]).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$chllp_reg$dma_chrf.v:621$15536 ($adff) from module dma_top (D = $flatten\ctl_rf.\c2_rf.$verific$n1211$15300, Q = \ctl_rf.c2_rf.chllp [15:8]).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$chllp_reg$dma_chrf.v:621$15536 ($adff) from module dma_top (D = $flatten\ctl_rf.\c2_rf.$verific$n1209$15298, Q = \ctl_rf.c2_rf.chllp [23:16]).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$chllp_reg$dma_chrf.v:621$15536 ($adff) from module dma_top (D = $flatten\ctl_rf.\c2_rf.$verific$n1207$15296, Q = \ctl_rf.c2_rf.chllp [31:24]).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$chllp_on_reg$dma_chrf.v:267$15343 ($adff) from module dma_top (D = $flatten\ctl_rf.\c2_rf.$verific$n45$15143, Q = \ctl_rf.c2_rf.chllp_on).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$chllp_cnt_reg$dma_chrf.v:279$15358 ($adff) from module dma_top (D = $flatten\ctl_rf.\c2_rf.$verific$n86$15244, Q = \ctl_rf.c2_rf.chllp_cnt).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$chdad_reg$dma_chrf.v:580$15513 ($adff) from module dma_top (D = $flatten\ctl_rf.\c2_rf.$verific$n1204$15294, Q = \ctl_rf.c2_rf.chdad [7:0]).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$chdad_reg$dma_chrf.v:580$15513 ($adff) from module dma_top (D = $flatten\ctl_rf.\c2_rf.$verific$n1202$15292, Q = \ctl_rf.c2_rf.chdad [15:8]).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$chdad_reg$dma_chrf.v:580$15513 ($adff) from module dma_top (D = $flatten\ctl_rf.\c2_rf.$verific$n1200$15290, Q = \ctl_rf.c2_rf.chdad [23:16]).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$chdad_reg$dma_chrf.v:580$15513 ($adff) from module dma_top (D = $flatten\ctl_rf.\c2_rf.$verific$n1198$15288, Q = \ctl_rf.c2_rf.chdad [31:24]).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$chabt_reg$dma_chrf.v:390$15408 ($adff) from module dma_top (D = $flatten\ctl_rf.\c2_rf.$verific$n198$15180, Q = \ctl_rf.c2_rf.chabt).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$ch_en_reg$dma_chrf.v:480$15465 ($adff) from module dma_top (D = $flatten\ctl_rf.\c2_rf.$verific$n334$15216, Q = \ctl_rf.c2_rf.ch_en).
Adding EN signal on $flatten\ctl_rf.\c2_rf.$verific$autold_reg$dma_chrf.v:400$15412 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb1 [6], Q = \ctl_rf.c2_rf.autold).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$swidth_reg$dma_chrf.v:411$14967 ($adff) from module dma_top (D = $flatten\ctl_rf.\c1_rf.$verific$n231$14804, Q = \ctl_rf.c1_rf.swidth).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$src_sz_reg$dma_chrf.v:352$14944 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [2:0], Q = \ctl_rf.c1_rf.src_sz).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$src_sel_reg$dma_chrf.v:463$15004 ($adff) from module dma_top (D = $flatten\ctl_rf.\c1_rf.$verific$n308$14758, Q = \ctl_rf.c1_rf.src_sel).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$sad_ctl1_reg$dma_chrf.v:463$15000 ($adff) from module dma_top (D = $flatten\ctl_rf.\c1_rf.$verific$n304$14754, Q = \ctl_rf.c1_rf.sad_ctl1).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$sad_ctl0_reg$dma_chrf.v:463$15001 ($adff) from module dma_top (D = $flatten\ctl_rf.\c1_rf.$verific$n305$14755, Q = \ctl_rf.c1_rf.sad_ctl0).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$prot3_reg$dma_chrf.v:343$14938 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [5], Q = \ctl_rf.c1_rf.prot3).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$prot2_reg$dma_chrf.v:343$14939 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [4], Q = \ctl_rf.c1_rf.prot2).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$prot1_reg$dma_chrf.v:343$14940 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [3], Q = \ctl_rf.c1_rf.prot1).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$mode_reg$dma_chrf.v:431$14975 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [7], Q = \ctl_rf.c1_rf.mode).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$int_tc_msk_reg$dma_chrf.v:306$14923 ($adff) from module dma_top (D = $flatten\ctl_rf.\c1_rf.$verific$n114$14710, Q = \ctl_rf.c1_rf.int_tc_msk).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$int_tc1_msk_reg$dma_chrf.v:500$15022 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [0], Q = \ctl_rf.c1_rf.int_tc1_msk).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$int_err_msk_reg$dma_chrf.v:500$15021 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [1], Q = \ctl_rf.c1_rf.int_err_msk).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$int_abt_msk_reg$dma_chrf.v:500$15020 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [2], Q = \ctl_rf.c1_rf.int_abt_msk).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$dwidth_reg$dma_chrf.v:422$14972 ($adff) from module dma_top (D = $flatten\ctl_rf.\c1_rf.$verific$n261$14808, Q = \ctl_rf.c1_rf.dwidth).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$dst_sel_reg$dma_chrf.v:463$15005 ($adff) from module dma_top (D = $flatten\ctl_rf.\c1_rf.$verific$n309$14759, Q = \ctl_rf.c1_rf.dst_sel).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$dreqmode_reg$dma_chrf.v:326$14931 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb3 [0], Q = \ctl_rf.c1_rf.dreqmode).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$dad_ctl1_reg$dma_chrf.v:463$15002 ($adff) from module dma_top (D = $flatten\ctl_rf.\c1_rf.$verific$n306$14756, Q = \ctl_rf.c1_rf.dad_ctl1).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$dad_ctl0_reg$dma_chrf.v:463$15003 ($adff) from module dma_top (D = $flatten\ctl_rf.\c1_rf.$verific$n307$14757, Q = \ctl_rf.c1_rf.dad_ctl0).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$chtsz_reg$dma_chrf.v:644$15104 ($adff) from module dma_top (D = $flatten\ctl_rf.\c1_rf.$verific$n1218$14855, Q = \ctl_rf.c1_rf.chtsz [7:0]).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$chtsz_reg$dma_chrf.v:644$15104 ($adff) from module dma_top (D = $flatten\ctl_rf.\c1_rf.$verific$n1216$14853, Q = \ctl_rf.c1_rf.chtsz [11:8]).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$chsad_reg$dma_chrf.v:540$15036 ($adff) from module dma_top (D = $flatten\ctl_rf.\c1_rf.$verific$n1195$14835, Q = \ctl_rf.c1_rf.chsad [7:0]).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$chsad_reg$dma_chrf.v:540$15036 ($adff) from module dma_top (D = $flatten\ctl_rf.\c1_rf.$verific$n1193$14833, Q = \ctl_rf.c1_rf.chsad [15:8]).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$chsad_reg$dma_chrf.v:540$15036 ($adff) from module dma_top (D = $flatten\ctl_rf.\c1_rf.$verific$n1191$14831, Q = \ctl_rf.c1_rf.chsad [23:16]).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$chsad_reg$dma_chrf.v:540$15036 ($adff) from module dma_top (D = $flatten\ctl_rf.\c1_rf.$verific$n1189$14829, Q = \ctl_rf.c1_rf.chsad [31:24]).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$chpri_reg$dma_chrf.v:316$14928 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [7:6], Q = \ctl_rf.c1_rf.chpri).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$chllpen_reg$dma_chrf.v:239$14880 ($adff) from module dma_top (D = $flatten\ctl_rf.\c1_rf.$verific$n28$14683, Q = \ctl_rf.c1_rf.chllpen).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$chllp_reg$dma_chrf.v:621$15085 ($adff) from module dma_top (D = $flatten\ctl_rf.\c1_rf.$verific$n1213$14851, Q = \ctl_rf.c1_rf.chllp [7:0]).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$chllp_reg$dma_chrf.v:621$15085 ($adff) from module dma_top (D = $flatten\ctl_rf.\c1_rf.$verific$n1211$14849, Q = \ctl_rf.c1_rf.chllp [15:8]).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$chllp_reg$dma_chrf.v:621$15085 ($adff) from module dma_top (D = $flatten\ctl_rf.\c1_rf.$verific$n1209$14847, Q = \ctl_rf.c1_rf.chllp [23:16]).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$chllp_reg$dma_chrf.v:621$15085 ($adff) from module dma_top (D = $flatten\ctl_rf.\c1_rf.$verific$n1207$14845, Q = \ctl_rf.c1_rf.chllp [31:24]).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$chllp_on_reg$dma_chrf.v:267$14892 ($adff) from module dma_top (D = $flatten\ctl_rf.\c1_rf.$verific$n45$14692, Q = \ctl_rf.c1_rf.chllp_on).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$chllp_cnt_reg$dma_chrf.v:279$14907 ($adff) from module dma_top (D = $flatten\ctl_rf.\c1_rf.$verific$n86$14793, Q = \ctl_rf.c1_rf.chllp_cnt).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$chdad_reg$dma_chrf.v:580$15062 ($adff) from module dma_top (D = $flatten\ctl_rf.\c1_rf.$verific$n1204$14843, Q = \ctl_rf.c1_rf.chdad [7:0]).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$chdad_reg$dma_chrf.v:580$15062 ($adff) from module dma_top (D = $flatten\ctl_rf.\c1_rf.$verific$n1202$14841, Q = \ctl_rf.c1_rf.chdad [15:8]).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$chdad_reg$dma_chrf.v:580$15062 ($adff) from module dma_top (D = $flatten\ctl_rf.\c1_rf.$verific$n1200$14839, Q = \ctl_rf.c1_rf.chdad [23:16]).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$chdad_reg$dma_chrf.v:580$15062 ($adff) from module dma_top (D = $flatten\ctl_rf.\c1_rf.$verific$n1198$14837, Q = \ctl_rf.c1_rf.chdad [31:24]).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$chabt_reg$dma_chrf.v:390$14957 ($adff) from module dma_top (D = $flatten\ctl_rf.\c1_rf.$verific$n198$14729, Q = \ctl_rf.c1_rf.chabt).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$ch_en_reg$dma_chrf.v:480$15014 ($adff) from module dma_top (D = $flatten\ctl_rf.\c1_rf.$verific$n334$14765, Q = \ctl_rf.c1_rf.ch_en).
Adding EN signal on $flatten\ctl_rf.\c1_rf.$verific$autold_reg$dma_chrf.v:400$14961 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb1 [6], Q = \ctl_rf.c1_rf.autold).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$swidth_reg$dma_chrf.v:411$14516 ($adff) from module dma_top (D = $flatten\ctl_rf.\c0_rf.$verific$n231$14353, Q = \ctl_rf.c0_rf.swidth).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$src_sz_reg$dma_chrf.v:352$14493 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [2:0], Q = \ctl_rf.c0_rf.src_sz).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$src_sel_reg$dma_chrf.v:463$14553 ($adff) from module dma_top (D = $flatten\ctl_rf.\c0_rf.$verific$n308$14307, Q = \ctl_rf.c0_rf.src_sel).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$sad_ctl1_reg$dma_chrf.v:463$14549 ($adff) from module dma_top (D = $flatten\ctl_rf.\c0_rf.$verific$n304$14303, Q = \ctl_rf.c0_rf.sad_ctl1).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$sad_ctl0_reg$dma_chrf.v:463$14550 ($adff) from module dma_top (D = $flatten\ctl_rf.\c0_rf.$verific$n305$14304, Q = \ctl_rf.c0_rf.sad_ctl0).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$prot3_reg$dma_chrf.v:343$14487 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [5], Q = \ctl_rf.c0_rf.prot3).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$prot2_reg$dma_chrf.v:343$14488 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [4], Q = \ctl_rf.c0_rf.prot2).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$prot1_reg$dma_chrf.v:343$14489 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [3], Q = \ctl_rf.c0_rf.prot1).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$mode_reg$dma_chrf.v:431$14524 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [7], Q = \ctl_rf.c0_rf.mode).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$int_tc_msk_reg$dma_chrf.v:306$14472 ($adff) from module dma_top (D = $flatten\ctl_rf.\c0_rf.$verific$n114$14259, Q = \ctl_rf.c0_rf.int_tc_msk).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$int_tc1_msk_reg$dma_chrf.v:500$14571 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [0], Q = \ctl_rf.c0_rf.int_tc1_msk).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$int_err_msk_reg$dma_chrf.v:500$14570 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [1], Q = \ctl_rf.c0_rf.int_err_msk).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$int_abt_msk_reg$dma_chrf.v:500$14569 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [2], Q = \ctl_rf.c0_rf.int_abt_msk).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$dwidth_reg$dma_chrf.v:422$14521 ($adff) from module dma_top (D = $flatten\ctl_rf.\c0_rf.$verific$n261$14357, Q = \ctl_rf.c0_rf.dwidth).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$dst_sel_reg$dma_chrf.v:463$14554 ($adff) from module dma_top (D = $flatten\ctl_rf.\c0_rf.$verific$n309$14308, Q = \ctl_rf.c0_rf.dst_sel).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$dreqmode_reg$dma_chrf.v:326$14480 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb3 [0], Q = \ctl_rf.c0_rf.dreqmode).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$dad_ctl1_reg$dma_chrf.v:463$14551 ($adff) from module dma_top (D = $flatten\ctl_rf.\c0_rf.$verific$n306$14305, Q = \ctl_rf.c0_rf.dad_ctl1).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$dad_ctl0_reg$dma_chrf.v:463$14552 ($adff) from module dma_top (D = $flatten\ctl_rf.\c0_rf.$verific$n307$14306, Q = \ctl_rf.c0_rf.dad_ctl0).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$chtsz_reg$dma_chrf.v:644$14653 ($adff) from module dma_top (D = $flatten\ctl_rf.\c0_rf.$verific$n1218$14404, Q = \ctl_rf.c0_rf.chtsz [7:0]).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$chtsz_reg$dma_chrf.v:644$14653 ($adff) from module dma_top (D = $flatten\ctl_rf.\c0_rf.$verific$n1216$14402, Q = \ctl_rf.c0_rf.chtsz [11:8]).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$chsad_reg$dma_chrf.v:540$14585 ($adff) from module dma_top (D = $flatten\ctl_rf.\c0_rf.$verific$n1195$14384, Q = \ctl_rf.c0_rf.chsad [7:0]).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$chsad_reg$dma_chrf.v:540$14585 ($adff) from module dma_top (D = $flatten\ctl_rf.\c0_rf.$verific$n1193$14382, Q = \ctl_rf.c0_rf.chsad [15:8]).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$chsad_reg$dma_chrf.v:540$14585 ($adff) from module dma_top (D = $flatten\ctl_rf.\c0_rf.$verific$n1191$14380, Q = \ctl_rf.c0_rf.chsad [23:16]).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$chsad_reg$dma_chrf.v:540$14585 ($adff) from module dma_top (D = $flatten\ctl_rf.\c0_rf.$verific$n1189$14378, Q = \ctl_rf.c0_rf.chsad [31:24]).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$chpri_reg$dma_chrf.v:316$14477 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2 [7:6], Q = \ctl_rf.c0_rf.chpri).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$chllpen_reg$dma_chrf.v:239$14429 ($adff) from module dma_top (D = $flatten\ctl_rf.\c0_rf.$verific$n28$14232, Q = \ctl_rf.c0_rf.chllpen).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$chllp_reg$dma_chrf.v:621$14634 ($adff) from module dma_top (D = $flatten\ctl_rf.\c0_rf.$verific$n1213$14400, Q = \ctl_rf.c0_rf.chllp [7:0]).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$chllp_reg$dma_chrf.v:621$14634 ($adff) from module dma_top (D = $flatten\ctl_rf.\c0_rf.$verific$n1211$14398, Q = \ctl_rf.c0_rf.chllp [15:8]).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$chllp_reg$dma_chrf.v:621$14634 ($adff) from module dma_top (D = $flatten\ctl_rf.\c0_rf.$verific$n1209$14396, Q = \ctl_rf.c0_rf.chllp [23:16]).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$chllp_reg$dma_chrf.v:621$14634 ($adff) from module dma_top (D = $flatten\ctl_rf.\c0_rf.$verific$n1207$14394, Q = \ctl_rf.c0_rf.chllp [31:24]).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$chllp_on_reg$dma_chrf.v:267$14441 ($adff) from module dma_top (D = $flatten\ctl_rf.\c0_rf.$verific$n45$14241, Q = \ctl_rf.c0_rf.chllp_on).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$chllp_cnt_reg$dma_chrf.v:279$14456 ($adff) from module dma_top (D = $flatten\ctl_rf.\c0_rf.$verific$n86$14342, Q = \ctl_rf.c0_rf.chllp_cnt).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$chdad_reg$dma_chrf.v:580$14611 ($adff) from module dma_top (D = $flatten\ctl_rf.\c0_rf.$verific$n1204$14392, Q = \ctl_rf.c0_rf.chdad [7:0]).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$chdad_reg$dma_chrf.v:580$14611 ($adff) from module dma_top (D = $flatten\ctl_rf.\c0_rf.$verific$n1202$14390, Q = \ctl_rf.c0_rf.chdad [15:8]).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$chdad_reg$dma_chrf.v:580$14611 ($adff) from module dma_top (D = $flatten\ctl_rf.\c0_rf.$verific$n1200$14388, Q = \ctl_rf.c0_rf.chdad [23:16]).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$chdad_reg$dma_chrf.v:580$14611 ($adff) from module dma_top (D = $flatten\ctl_rf.\c0_rf.$verific$n1198$14386, Q = \ctl_rf.c0_rf.chdad [31:24]).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$chabt_reg$dma_chrf.v:390$14506 ($adff) from module dma_top (D = $flatten\ctl_rf.\c0_rf.$verific$n198$14278, Q = \ctl_rf.c0_rf.chabt).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$ch_en_reg$dma_chrf.v:480$14563 ($adff) from module dma_top (D = $flatten\ctl_rf.\c0_rf.$verific$n334$14314, Q = \ctl_rf.c0_rf.ch_en).
Adding EN signal on $flatten\ctl_rf.\c0_rf.$verific$autold_reg$dma_chrf.v:400$14510 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb1 [6], Q = \ctl_rf.c0_rf.autold).
Adding EN signal on $flatten\ctl_rf.$verific$tc_reg$dma_ctlrf.v:1902$10014 ($adff) from module dma_top (D = $flatten\ctl_rf.$verific$n3755$9250, Q = \ctl_rf.tc [0]).
Adding EN signal on $flatten\ctl_rf.$verific$tc_reg$dma_ctlrf.v:1902$10014 ($adff) from module dma_top (D = $flatten\ctl_rf.$verific$n3764$9252, Q = \ctl_rf.tc [1]).
Adding EN signal on $flatten\ctl_rf.$verific$tc_reg$dma_ctlrf.v:1902$10014 ($adff) from module dma_top (D = $flatten\ctl_rf.$verific$n3773$9254, Q = \ctl_rf.tc [2]).
Adding EN signal on $flatten\ctl_rf.$verific$tc_reg$dma_ctlrf.v:1902$10014 ($adff) from module dma_top (D = $flatten\ctl_rf.$verific$n3782$9256, Q = \ctl_rf.tc [3]).
Adding EN signal on $flatten\ctl_rf.$verific$tc_reg$dma_ctlrf.v:1902$10014 ($adff) from module dma_top (D = $flatten\ctl_rf.$verific$n3791$9258, Q = \ctl_rf.tc [4]).
Adding EN signal on $flatten\ctl_rf.$verific$tc_reg$dma_ctlrf.v:1902$10014 ($adff) from module dma_top (D = $flatten\ctl_rf.$verific$n3800$9260, Q = \ctl_rf.tc [5]).
Adding EN signal on $flatten\ctl_rf.$verific$tc_reg$dma_ctlrf.v:1902$10014 ($adff) from module dma_top (D = $flatten\ctl_rf.$verific$n3809$9262, Q = \ctl_rf.tc [6]).
Adding EN signal on $flatten\ctl_rf.$verific$tc_reg$dma_ctlrf.v:1902$10014 ($adff) from module dma_top (D = $flatten\ctl_rf.$verific$n3818$9264, Q = \ctl_rf.tc [7]).
Adding EN signal on $flatten\ctl_rf.$verific$sync_reg$dma_ctlrf.v:2281$10034 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0, Q = \ctl_rf.sync).
Adding EN signal on $flatten\ctl_rf.$verific$m1end_reg$dma_ctlrf.v:2257$10021 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [2], Q = \ctl_rf.m1end).
Adding EN signal on $flatten\ctl_rf.$verific$m0end_reg$dma_ctlrf.v:2263$10024 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [1], Q = \ctl_rf.m0end).
Adding EN signal on $flatten\ctl_rf.$verific$err_reg$dma_ctlrf.v:2224$9554 ($adff) from module dma_top (D = $flatten\ctl_rf.$verific$n3923$9274, Q = \ctl_rf.err [0]).
Adding EN signal on $flatten\ctl_rf.$verific$err_reg$dma_ctlrf.v:2224$9554 ($adff) from module dma_top (D = $flatten\ctl_rf.$verific$n3941$9278, Q = \ctl_rf.err [1]).
Adding EN signal on $flatten\ctl_rf.$verific$err_reg$dma_ctlrf.v:2224$9554 ($adff) from module dma_top (D = $flatten\ctl_rf.$verific$n3959$9282, Q = \ctl_rf.err [2]).
Adding EN signal on $flatten\ctl_rf.$verific$err_reg$dma_ctlrf.v:2224$9554 ($adff) from module dma_top (D = $flatten\ctl_rf.$verific$n3977$9286, Q = \ctl_rf.err [3]).
Adding EN signal on $flatten\ctl_rf.$verific$err_reg$dma_ctlrf.v:2224$9554 ($adff) from module dma_top (D = $flatten\ctl_rf.$verific$n3995$9290, Q = \ctl_rf.err [4]).
Adding EN signal on $flatten\ctl_rf.$verific$err_reg$dma_ctlrf.v:2224$9554 ($adff) from module dma_top (D = $flatten\ctl_rf.$verific$n4013$9294, Q = \ctl_rf.err [5]).
Adding EN signal on $flatten\ctl_rf.$verific$err_reg$dma_ctlrf.v:2224$9554 ($adff) from module dma_top (D = $flatten\ctl_rf.$verific$n4031$9298, Q = \ctl_rf.err [6]).
Adding EN signal on $flatten\ctl_rf.$verific$err_reg$dma_ctlrf.v:2224$9554 ($adff) from module dma_top (D = $flatten\ctl_rf.$verific$n4049$9302, Q = \ctl_rf.err [7]).
Adding EN signal on $flatten\ctl_rf.$verific$dmacen_reg$dma_ctlrf.v:2269$10027 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb0 [0], Q = \ctl_rf.dmacen).
Adding EN signal on $flatten\ctl_rf.$verific$c7dmabs_reg$dma_ctlrf.v:2420$10090 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb3, Q = \ctl_rf.c7dmabs [15:8]).
Adding EN signal on $flatten\ctl_rf.$verific$c7dmabs_reg$dma_ctlrf.v:2420$10090 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2, Q = \ctl_rf.c7dmabs [7:0]).
Adding EN signal on $flatten\ctl_rf.$verific$c7brbs_reg$dma_ctlrf.v:2557$10146 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb3, Q = \ctl_rf.c7brbs [15:8]).
Adding EN signal on $flatten\ctl_rf.$verific$c7brbs_reg$dma_ctlrf.v:2557$10146 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2, Q = \ctl_rf.c7brbs [7:0]).
Adding EN signal on $flatten\ctl_rf.$verific$c6dmabs_reg$dma_ctlrf.v:2403$10083 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb3, Q = \ctl_rf.c6dmabs [15:8]).
Adding EN signal on $flatten\ctl_rf.$verific$c6dmabs_reg$dma_ctlrf.v:2403$10083 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2, Q = \ctl_rf.c6dmabs [7:0]).
Adding EN signal on $flatten\ctl_rf.$verific$c6brbs_reg$dma_ctlrf.v:2540$10139 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb3, Q = \ctl_rf.c6brbs [15:8]).
Adding EN signal on $flatten\ctl_rf.$verific$c6brbs_reg$dma_ctlrf.v:2540$10139 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2, Q = \ctl_rf.c6brbs [7:0]).
Adding EN signal on $flatten\ctl_rf.$verific$c5dmabs_reg$dma_ctlrf.v:2386$10076 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb3, Q = \ctl_rf.c5dmabs [15:8]).
Adding EN signal on $flatten\ctl_rf.$verific$c5dmabs_reg$dma_ctlrf.v:2386$10076 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2, Q = \ctl_rf.c5dmabs [7:0]).
Adding EN signal on $flatten\ctl_rf.$verific$c5brbs_reg$dma_ctlrf.v:2523$10132 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb3, Q = \ctl_rf.c5brbs [15:8]).
Adding EN signal on $flatten\ctl_rf.$verific$c5brbs_reg$dma_ctlrf.v:2523$10132 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2, Q = \ctl_rf.c5brbs [7:0]).
Adding EN signal on $flatten\ctl_rf.$verific$c4dmabs_reg$dma_ctlrf.v:2369$10069 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb3, Q = \ctl_rf.c4dmabs [15:8]).
Adding EN signal on $flatten\ctl_rf.$verific$c4dmabs_reg$dma_ctlrf.v:2369$10069 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2, Q = \ctl_rf.c4dmabs [7:0]).
Adding EN signal on $flatten\ctl_rf.$verific$c4brbs_reg$dma_ctlrf.v:2506$10125 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb3, Q = \ctl_rf.c4brbs [15:8]).
Adding EN signal on $flatten\ctl_rf.$verific$c4brbs_reg$dma_ctlrf.v:2506$10125 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2, Q = \ctl_rf.c4brbs [7:0]).
Adding EN signal on $flatten\ctl_rf.$verific$c3dmabs_reg$dma_ctlrf.v:2352$10062 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb3, Q = \ctl_rf.c3dmabs [15:8]).
Adding EN signal on $flatten\ctl_rf.$verific$c3dmabs_reg$dma_ctlrf.v:2352$10062 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2, Q = \ctl_rf.c3dmabs [7:0]).
Adding EN signal on $flatten\ctl_rf.$verific$c3brbs_reg$dma_ctlrf.v:2489$10118 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb3, Q = \ctl_rf.c3brbs [15:8]).
Adding EN signal on $flatten\ctl_rf.$verific$c3brbs_reg$dma_ctlrf.v:2489$10118 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2, Q = \ctl_rf.c3brbs [7:0]).
Adding EN signal on $flatten\ctl_rf.$verific$c2dmabs_reg$dma_ctlrf.v:2335$10055 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb3, Q = \ctl_rf.c2dmabs [15:8]).
Adding EN signal on $flatten\ctl_rf.$verific$c2dmabs_reg$dma_ctlrf.v:2335$10055 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2, Q = \ctl_rf.c2dmabs [7:0]).
Adding EN signal on $flatten\ctl_rf.$verific$c2brbs_reg$dma_ctlrf.v:2472$10111 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb3, Q = \ctl_rf.c2brbs [15:8]).
Adding EN signal on $flatten\ctl_rf.$verific$c2brbs_reg$dma_ctlrf.v:2472$10111 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2, Q = \ctl_rf.c2brbs [7:0]).
Adding EN signal on $flatten\ctl_rf.$verific$c1dmabs_reg$dma_ctlrf.v:2318$10048 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb3, Q = \ctl_rf.c1dmabs [15:8]).
Adding EN signal on $flatten\ctl_rf.$verific$c1dmabs_reg$dma_ctlrf.v:2318$10048 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2, Q = \ctl_rf.c1dmabs [7:0]).
Adding EN signal on $flatten\ctl_rf.$verific$c1brbs_reg$dma_ctlrf.v:2455$10104 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb3, Q = \ctl_rf.c1brbs [15:8]).
Adding EN signal on $flatten\ctl_rf.$verific$c1brbs_reg$dma_ctlrf.v:2455$10104 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2, Q = \ctl_rf.c1brbs [7:0]).
Adding EN signal on $flatten\ctl_rf.$verific$c0dmabs_reg$dma_ctlrf.v:2302$10040 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb3, Q = \ctl_rf.c0dmabs [15:8]).
Adding EN signal on $flatten\ctl_rf.$verific$c0dmabs_reg$dma_ctlrf.v:2302$10040 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2, Q = \ctl_rf.c0dmabs [7:0]).
Adding EN signal on $flatten\ctl_rf.$verific$c0brbs_reg$dma_ctlrf.v:2439$10097 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb3, Q = \ctl_rf.c0brbs [15:8]).
Adding EN signal on $flatten\ctl_rf.$verific$c0brbs_reg$dma_ctlrf.v:2439$10097 ($adff) from module dma_top (D = \ahb_slv.s_rgdtb2, Q = \ctl_rf.c0brbs [7:0]).
Adding EN signal on $flatten\ctl_rf.$verific$abt_reg$dma_ctlrf.v:2233$10011 ($adff) from module dma_top (D = $flatten\ctl_rf.$verific$n3932$9276, Q = \ctl_rf.abt [0]).
Adding EN signal on $flatten\ctl_rf.$verific$abt_reg$dma_ctlrf.v:2233$10011 ($adff) from module dma_top (D = $flatten\ctl_rf.$verific$n3950$9280, Q = \ctl_rf.abt [1]).
Adding EN signal on $flatten\ctl_rf.$verific$abt_reg$dma_ctlrf.v:2233$10011 ($adff) from module dma_top (D = $flatten\ctl_rf.$verific$n3968$9284, Q = \ctl_rf.abt [2]).
Adding EN signal on $flatten\ctl_rf.$verific$abt_reg$dma_ctlrf.v:2233$10011 ($adff) from module dma_top (D = $flatten\ctl_rf.$verific$n3986$9288, Q = \ctl_rf.abt [3]).
Adding EN signal on $flatten\ctl_rf.$verific$abt_reg$dma_ctlrf.v:2233$10011 ($adff) from module dma_top (D = $flatten\ctl_rf.$verific$n4004$9292, Q = \ctl_rf.abt [4]).
Adding EN signal on $flatten\ctl_rf.$verific$abt_reg$dma_ctlrf.v:2233$10011 ($adff) from module dma_top (D = $flatten\ctl_rf.$verific$n4022$9296, Q = \ctl_rf.abt [5]).
Adding EN signal on $flatten\ctl_rf.$verific$abt_reg$dma_ctlrf.v:2233$10011 ($adff) from module dma_top (D = $flatten\ctl_rf.$verific$n4040$9300, Q = \ctl_rf.abt [6]).
Adding EN signal on $flatten\ctl_rf.$verific$abt_reg$dma_ctlrf.v:2233$10011 ($adff) from module dma_top (D = $flatten\ctl_rf.$verific$n4058$9304, Q = \ctl_rf.abt [7]).
Adding EN signal on $flatten\ch_sel.$verific$fix_pri_sel_reg$dma_chsel.v:848$13965 ($adff) from module dma_top (D = { 1'0 \ch_sel.fix_pri_sx }, Q = \ch_sel.fix_pri_sel).
Adding EN signal on $flatten\ch_sel.$verific$arb_req_reg$dma_chsel.v:890$13999 ($adff) from module dma_top (D = $flatten\ch_sel.$verific$n500$13622, Q = \ch_sel.arb_req).
Adding EN signal on $flatten\ahb_slv.$verific$slv_wr_d1o_reg$dma_ahbslv.v:274$18114 ($adff) from module dma_top (D = \hwrite, Q = \ahb_slv.slv_wr_d1o).
Adding EN signal on $flatten\ahb_slv.$verific$slv_sz_d1o_reg$dma_ahbslv.v:268$18109 ($adff) from module dma_top (D = \hsize, Q = \ahb_slv.slv_sz_d1o).
Adding EN signal on $flatten\ahb_slv.$verific$slv_pt_d1o_reg$dma_ahbslv.v:268$18110 ($adff) from module dma_top (D = \hprot, Q = \ahb_slv.slv_pt_d1o).
Adding EN signal on $flatten\ahb_slv.$verific$slv_br_req_reg$dma_ahbslv.v:366$18179 ($adff) from module dma_top (D = $flatten\ahb_slv.$verific$n661$17998, Q = \ahb_slv.slv_br_req).
Adding EN signal on $flatten\ahb_slv.$verific$slv_ad_d1o_reg$dma_ahbslv.v:268$18108 ($adff) from module dma_top (D = \haddr, Q = \ahb_slv.slv_ad_d1o).
Adding EN signal on $flatten\ahb_slv.$verific$hresp_br_reg$dma_ahbslv.v:448$18229 ($adff) from module dma_top (D = $flatten\ahb_slv.$verific$n758$18065, Q = \ahb_slv.hresp_br).
Adding EN signal on $flatten\ahb_slv.$verific$hreadyout_br_reg$dma_ahbslv.v:435$18222 ($adff) from module dma_top (D = $flatten\ahb_slv.$verific$n735$18024, Q = \ahb_slv.hreadyout_br).
Adding EN signal on $flatten\ahb_slv.$verific$hrdata_reg_reg$dma_ahbslv.v:346$18169 ($adff) from module dma_top (D = { \ahb_slv.hrdtgb3 \ahb_slv.hrdtgb2 \ahb_slv.hrdtgb1 \ahb_slv.hrdtgb0 }, Q = \ahb_slv.hrdata_reg).
Adding EN signal on $flatten\ahb_slv.$verific$hrdata_br_reg$dma_ahbslv.v:492$18264 ($adff) from module dma_top (D = { \ahb_slv.h1rdtib3 \ahb_slv.h1rdtib2 \ahb_slv.h1rdtib1 \ahb_slv.h1rdtib0 }, Q = \ahb_slv.hrdata_br).
Adding EN signal on $flatten\ahb_mst1.$verific$mx_dtp_reg$dma_ahbmst.v:596$8584 ($adff) from module dma_top (D = \ahb_mst1.mx_cmd_st [1], Q = \ahb_mst1.mx_dtp).
Adding EN signal on $flatten\ahb_mst1.$verific$mx_dma_had_a_rty_reg$dma_ahbmst.v:1209$8858 ($adff) from module dma_top (D = $flatten\ahb_mst1.$verific$n4101$8324, Q = \ahb_mst1.mx_dma_had_a_rty).
Adding EN signal on $flatten\ahb_mst1.$verific$mx_ad1t0x_reg$dma_ahbmst.v:1111$8803 ($adff) from module dma_top (D = \ahb_mst1.haddro [1:0], Q = \ahb_mst1.mx_ad1t0x).
Adding EN signal on $flatten\ahb_mst1.$verific$m0_m1_diff_tx_reg$dma_ahbmst.v:926$8695 ($adff) from module dma_top (D = $flatten\ahb_mst1.$verific$n3100$8204, Q = \ahb_mst1.m0_m1_diff_tx).
Adding SRST signal on $flatten\ahb_mst1.$verific$inc_selx_reg$dma_ahbmst.v:1045$8780 ($dff) from module dma_top (D = \ahb_mst1.inc_sel, Q = \ahb_mst1.inc_selx, rval = 3'011).
Adding EN signal on $flatten\ahb_mst1.$verific$hwriteo_reg$dma_ahbmst.v:671$8622 ($adff) from module dma_top (D = $flatten\ahb_mst1.$verific$n2380$8181, Q = \ahb_mst1.hwriteo).
Adding EN signal on $flatten\ahb_mst1.$verific$hwdatao_reg$dma_ahbmst.v:893$8681 ($adff) from module dma_top (D = \ahb_mst1.mux_wdt, Q = \ahb_mst1.hwdatao).
Adding EN signal on $flatten\ahb_mst1.$verific$hsizeo_reg$dma_ahbmst.v:726$8641 ($adff) from module dma_top (D = \ahb_mst1.hsizeq [1:0], Q = \ahb_mst1.hsizeo [1:0]).
Adding EN signal on $flatten\ahb_mst1.$verific$hsizeo_reg$dma_ahbmst.v:726$8641 ($adff) from module dma_top (D = \ahb_mst1.hsizeq [2], Q = \ahb_mst1.hsizeo [2]).
Adding EN signal on $flatten\ahb_mst1.$verific$hproto_reg$dma_ahbmst.v:783$8647 ($adff) from module dma_top (D = \ahb_mst1.mux_prot, Q = \ahb_mst1.hproto).
Adding EN signal on $flatten\ahb_mst1.$verific$hbursto_reg$dma_ahbmst.v:811$8659 ($adff) from module dma_top (D = { 2'00 \ahb_mst1.mux_bst [0] }, Q = \ahb_mst1.hbursto).
Adding EN signal on $flatten\ahb_mst1.$verific$haddro_reg$dma_ahbmst.v:987$8732 ($adff) from module dma_top (D = \ahb_mst1.mux_ad [15:0], Q = \ahb_mst1.haddro [15:0]).
Adding EN signal on $flatten\ahb_mst1.$verific$haddro_reg$dma_ahbmst.v:987$8732 ($adff) from module dma_top (D = \ahb_mst1.mux_ad [31:16], Q = \ahb_mst1.haddro [31:16]).
Adding EN signal on $flatten\ahb_mst1.$verific$adin_is_neg_reg$dma_ahbmst.v:1094$8791 ($adff) from module dma_top (D = \ahb_mst1.ad_addin2 [16], Q = \ahb_mst1.adin_is_neg).
Adding EN signal on $flatten\ahb_mst0.$verific$mx_dtp_reg$dma_ahbmst.v:596$7861 ($adff) from module dma_top (D = \ahb_mst0.mx_cmd_st [1], Q = \ahb_mst0.mx_dtp).
Adding EN signal on $flatten\ahb_mst0.$verific$mx_dma_had_a_rty_reg$dma_ahbmst.v:1209$8117 ($adff) from module dma_top (D = $flatten\ahb_mst0.$verific$n3659$7623, Q = \ahb_mst0.mx_dma_had_a_rty).
Adding EN signal on $flatten\ahb_mst0.$verific$mx_ad1t0x_reg$dma_ahbmst.v:1111$8065 ($adff) from module dma_top (D = \ahb_mst0.haddro [1:0], Q = \ahb_mst0.mx_ad1t0x).
Adding EN signal on $flatten\ahb_mst0.$verific$m0_m1_diff_tx_reg$dma_ahbmst.v:926$7957 ($adff) from module dma_top (D = $flatten\ahb_mst0.$verific$n2662$7505, Q = \ahb_mst0.m0_m1_diff_tx).
Adding SRST signal on $flatten\ahb_mst0.$verific$inc_selx_reg$dma_ahbmst.v:1045$8042 ($dff) from module dma_top (D = \ahb_mst0.inc_sel, Q = \ahb_mst0.inc_selx, rval = 3'011).
Adding EN signal on $flatten\ahb_mst0.$verific$hwriteo_reg$dma_ahbmst.v:671$7885 ($adff) from module dma_top (D = $flatten\ahb_mst0.$verific$n1980$7482, Q = \ahb_mst0.hwriteo).
Adding EN signal on $flatten\ahb_mst0.$verific$hwdatao_reg$dma_ahbmst.v:893$7943 ($adff) from module dma_top (D = \ahb_mst0.mux_wdt, Q = \ahb_mst0.hwdatao).
Adding EN signal on $flatten\ahb_mst0.$verific$hsizeo_reg$dma_ahbmst.v:726$7904 ($adff) from module dma_top (D = \ahb_mst0.hsizep [1:0], Q = \ahb_mst0.hsizeo [1:0]).
Adding EN signal on $flatten\ahb_mst0.$verific$hsizeo_reg$dma_ahbmst.v:726$7904 ($adff) from module dma_top (D = \ahb_mst0.hsizep [2], Q = \ahb_mst0.hsizeo [2]).
Adding EN signal on $flatten\ahb_mst0.$verific$hreqo_reg$dma_ahbmst.v:1174$8105 ($adff) from module dma_top (D = $flatten\ahb_mst0.$verific$n3638$7615, Q = \ahb_mst0.hreqo).
Adding EN signal on $flatten\ahb_mst0.$verific$hproto_reg$dma_ahbmst.v:783$7909 ($adff) from module dma_top (D = { \ch_sel.arb_chcsr_reg [20:18] 1'0 }, Q = \ahb_mst0.hproto).
Adding EN signal on $flatten\ahb_mst0.$verific$hbursto_reg$dma_ahbmst.v:811$7921 ($adff) from module dma_top (D = { 2'00 \ahb_mst0.mux_bst [0] }, Q = \ahb_mst0.hbursto).
Adding EN signal on $flatten\ahb_mst0.$verific$haddro_reg$dma_ahbmst.v:987$7994 ($adff) from module dma_top (D = \ahb_mst0.mux_ad [31:16], Q = \ahb_mst0.haddro [31:16]).
Adding EN signal on $flatten\ahb_mst0.$verific$haddro_reg$dma_ahbmst.v:987$7994 ($adff) from module dma_top (D = \ahb_mst0.mux_ad [15:0], Q = \ahb_mst0.haddro [15:0]).
Adding EN signal on $flatten\ahb_mst0.$verific$adin_is_neg_reg$dma_ahbmst.v:1094$8053 ($adff) from module dma_top (D = \ahb_mst0.ad_addin2 [16], Q = \ahb_mst0.adin_is_neg).
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$19827 ($adffe) from module dma_top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19827 ($adffe) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19826 ($adffe) from module dma_top.
Setting constant 0-bit at position 0 on $flatten\ahb_mst0.$verific$mx_dt_st_reg$dma_ahbmst.v:607$7870 ($adff) from module dma_top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$19790 ($adffe) from module dma_top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19790 ($adffe) from module dma_top.
Setting constant 0-bit at position 0 on $flatten\ahb_mst1.$verific$mx_dt_st_reg$dma_ahbmst.v:607$8593 ($adff) from module dma_top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19751 ($adffe) from module dma_top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$18829 ($adffe) from module dma_top.

13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \dma_top..
Removed 166 unused cells and 166 unused wires.
<suppressed ~173 debug messages>

13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module dma_top.
<suppressed ~829 debug messages>

13.9. Rerunning OPT passes. (Maybe there is more to do..)

13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \dma_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $flatten\ahb_mst0.$verific$mux_429$dma_ahbmst.v:1099$8059.
    dead port 2/2 on $mux $flatten\ahb_mst0.$verific$mux_429$dma_ahbmst.v:1099$8059.
    dead port 1/2 on $mux $flatten\ahb_mst0.$verific$mux_430$dma_ahbmst.v:1100$8060.
    dead port 2/2 on $mux $flatten\ahb_mst0.$verific$mux_430$dma_ahbmst.v:1100$8060.
    dead port 1/2 on $mux $flatten\ahb_mst1.$verific$mux_447$dma_ahbmst.v:1099$8797.
    dead port 2/2 on $mux $flatten\ahb_mst1.$verific$mux_447$dma_ahbmst.v:1099$8797.
    dead port 1/2 on $mux $flatten\ahb_mst1.$verific$mux_448$dma_ahbmst.v:1100$8798.
    dead port 2/2 on $mux $flatten\ahb_mst1.$verific$mux_448$dma_ahbmst.v:1100$8798.
    dead port 1/2 on $mux $flatten\de.$verific$mux_27$dma_engine.v:645$6901.
    dead port 2/2 on $mux $flatten\de.$verific$mux_27$dma_engine.v:645$6901.
    dead port 1/2 on $mux $flatten\de.$verific$mux_461$dma_engine.v:1375$7248.
    dead port 2/2 on $mux $flatten\de.$verific$mux_461$dma_engine.v:1375$7248.
    dead port 1/2 on $mux $flatten\de.$verific$mux_463$dma_engine.v:1376$7250.
    dead port 2/2 on $mux $flatten\de.$verific$mux_463$dma_engine.v:1376$7250.
    dead port 1/2 on $mux $flatten\de.$verific$mux_467$dma_engine.v:1382$7255.
    dead port 2/2 on $mux $flatten\de.$verific$mux_467$dma_engine.v:1382$7255.
    dead port 1/2 on $mux $flatten\de.$verific$mux_470$dma_engine.v:1393$7258.
    dead port 2/2 on $mux $flatten\de.$verific$mux_470$dma_engine.v:1393$7258.
    dead port 1/2 on $mux $flatten\de.$verific$mux_472$dma_engine.v:1398$7260.
    dead port 2/2 on $mux $flatten\de.$verific$mux_472$dma_engine.v:1398$7260.
    dead port 1/2 on $mux $flatten\de.$verific$mux_475$dma_engine.v:1408$7263.
    dead port 2/2 on $mux $flatten\de.$verific$mux_475$dma_engine.v:1408$7263.
Removed 22 multiplexer ports.
<suppressed ~378 debug messages>

13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \dma_top.
Performed a total of 0 changes.

13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\dma_top'.
<suppressed ~33 debug messages>
Removed a total of 11 cells.

13.13. Executing OPT_DFF pass (perform DFF optimizations).
Handling never-active EN on $auto$ff.cc:262:slice$18847 ($adffe) from module dma_top (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$18846 ($adffe) from module dma_top (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$18849 ($adffe) from module dma_top (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$18848 ($adffe) from module dma_top (removing D path).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$18848 ($dlatch) from module dma_top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$18848 ($dlatch) from module dma_top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$18848 ($dlatch) from module dma_top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$18848 ($dlatch) from module dma_top.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$18848 ($dlatch) from module dma_top.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$18848 ($dlatch) from module dma_top.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$18848 ($dlatch) from module dma_top.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$18848 ($dlatch) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19771 ($adffe) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19805 ($adffe) from module dma_top.
Setting constant 0-bit at position 3 on $flatten\de.$verific$de_st_reg$dma_engine.v:911$7042 ($adff) from module dma_top.
Setting constant 0-bit at position 4 on $flatten\de.$verific$de_st_reg$dma_engine.v:911$7042 ($adff) from module dma_top.
Setting constant 0-bit at position 7 on $flatten\de.$verific$de_st_reg$dma_engine.v:911$7042 ($adff) from module dma_top.
Setting constant 0-bit at position 8 on $flatten\de.$verific$de_st_reg$dma_engine.v:911$7042 ($adff) from module dma_top.
Setting constant 0-bit at position 9 on $flatten\de.$verific$de_st_reg$dma_engine.v:911$7042 ($adff) from module dma_top.
Setting constant 0-bit at position 10 on $flatten\de.$verific$de_st_reg$dma_engine.v:911$7042 ($adff) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$18840 ($adffe) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$18849 ($dlatch) from module dma_top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$18849 ($dlatch) from module dma_top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$18849 ($dlatch) from module dma_top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$18849 ($dlatch) from module dma_top.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$18849 ($dlatch) from module dma_top.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$18849 ($dlatch) from module dma_top.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$18849 ($dlatch) from module dma_top.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$18849 ($dlatch) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$18846 ($dlatch) from module dma_top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$18846 ($dlatch) from module dma_top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$18846 ($dlatch) from module dma_top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$18846 ($dlatch) from module dma_top.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$18846 ($dlatch) from module dma_top.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$18846 ($dlatch) from module dma_top.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$18846 ($dlatch) from module dma_top.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$18846 ($dlatch) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$18847 ($dlatch) from module dma_top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$18847 ($dlatch) from module dma_top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$18847 ($dlatch) from module dma_top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$18847 ($dlatch) from module dma_top.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$18847 ($dlatch) from module dma_top.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$18847 ($dlatch) from module dma_top.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$18847 ($dlatch) from module dma_top.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$18847 ($dlatch) from module dma_top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$18880 ($adffe) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$18831 ($adffe) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$18837 ($adffe) from module dma_top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$18837 ($adffe) from module dma_top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$18837 ($adffe) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$18877 ($adffe) from module dma_top.
Setting constant 1-bit at position 0 on $flatten\de.$verific$st_ed1s_reg$dma_engine.v:858$7010 ($adff) from module dma_top.
Setting constant 0-bit at position 0 on $flatten\dma_fifo.$verific$ram_wr_reg$dma_fifo.v:322$13391 ($adff) from module dma_top.

13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \dma_top..
Removed 112 unused cells and 690 unused wires.
<suppressed ~240 debug messages>

13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module dma_top.
<suppressed ~67 debug messages>

13.16. Rerunning OPT passes. (Maybe there is more to do..)

13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \dma_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $flatten\de.$verific$mux_200$dma_engine.v:972$7053.
    dead port 2/2 on $mux $flatten\de.$verific$mux_200$dma_engine.v:972$7053.
    dead port 2/12 on $pmux $flatten\de.$verific$select_221$dma_engine.v:1010$7069.
    dead port 3/12 on $pmux $flatten\de.$verific$select_221$dma_engine.v:1010$7069.
    dead port 4/12 on $pmux $flatten\de.$verific$select_221$dma_engine.v:1010$7069.
    dead port 5/12 on $pmux $flatten\de.$verific$select_221$dma_engine.v:1010$7069.
    dead port 7/12 on $pmux $flatten\de.$verific$select_221$dma_engine.v:1010$7069.
    dead port 8/12 on $pmux $flatten\de.$verific$select_221$dma_engine.v:1010$7069.
Removed 8 multiplexer ports.
<suppressed ~359 debug messages>

13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \dma_top.
    New input vector for $reduce_or cell $flatten\de.$verific$reduce_nor_220$dma_engine.v:1010$7067: { $flatten\de.$verific$n621$6610 $flatten\de.$verific$n622$6611 $flatten\de.$verific$n623$6612 $flatten\de.$verific$n626$6615 $flatten\de.$verific$n627$6616 }
  Optimizing cells in module \dma_top.
Performed a total of 1 changes.

13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\dma_top'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

13.20. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19670 ($adffe) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19673 ($adffe) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19676 ($adffe) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19679 ($adffe) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19682 ($adffe) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19685 ($adffe) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19688 ($adffe) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19691 ($adffe) from module dma_top.
Setting constant 0-bit at position 0 on $flatten\dma_fifo.$verific$ram_wrq_reg$dma_fifo.v:356$13403 ($adff) from module dma_top.

13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \dma_top..
Removed 37 unused cells and 98 unused wires.
<suppressed ~47 debug messages>

13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module dma_top.
<suppressed ~9 debug messages>

13.23. Rerunning OPT passes. (Maybe there is more to do..)

13.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \dma_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~350 debug messages>

13.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \dma_top.
Performed a total of 0 changes.

13.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\dma_top'.
<suppressed ~24 debug messages>
Removed a total of 8 cells.

13.27. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$18843 ($adffe) from module dma_top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$18843 ($adffe) from module dma_top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$18843 ($adffe) from module dma_top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$18843 ($adffe) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$18834 ($adffe) from module dma_top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$18834 ($adffe) from module dma_top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$18834 ($adffe) from module dma_top.
Setting constant 0-bit at position 0 on $flatten\ctl_rf.$verific$dmaint_err_reg$dma_ctlrf.v:1727$9914 ($adff) from module dma_top.

13.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \dma_top..
Removed 6 unused cells and 20 unused wires.
<suppressed ~8 debug messages>

13.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module dma_top.
<suppressed ~10 debug messages>

13.30. Rerunning OPT passes. (Maybe there is more to do..)

13.31. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \dma_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~347 debug messages>

13.32. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \dma_top.
Performed a total of 0 changes.

13.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\dma_top'.
Removed a total of 0 cells.

13.34. Executing OPT_DFF pass (perform DFF optimizations).

13.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \dma_top..
Removed 8 unused cells and 17 unused wires.
<suppressed ~22 debug messages>

13.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module dma_top.

13.37. Rerunning OPT passes. (Maybe there is more to do..)

13.38. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \dma_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~347 debug messages>

13.39. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \dma_top.
Performed a total of 0 changes.

13.40. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\dma_top'.
Removed a total of 0 cells.

13.41. Executing OPT_DFF pass (perform DFF optimizations).

13.42. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \dma_top..

13.43. Executing OPT_EXPR pass (perform const folding).
Optimizing module dma_top.

13.44. Finished OPT passes. (There is nothing left to do.)

14. Executing WREDUCE pass (reducing word size of cells).
Removed top 10 bits (of 12) from port B of cell dma_top.$flatten\de.$verific$equal_692$dma_engine.v:1668$7420 ($eq).
Removed top 11 bits (of 12) from port B of cell dma_top.$flatten\de.$verific$equal_690$dma_engine.v:1667$7418 ($eq).
Removed top 2 bits (of 3) from port B of cell dma_top.$flatten\de.$verific$equal_666$dma_engine.v:1647$7397 ($eq).
Removed top 1 bits (of 3) from port B of cell dma_top.$flatten\de.$verific$equal_664$dma_engine.v:1646$7395 ($eq).
Removed top 2 bits (of 3) from port B of cell dma_top.$flatten\de.$verific$equal_660$dma_engine.v:1644$7391 ($eq).
Removed top 1 bits (of 3) from port B of cell dma_top.$flatten\de.$verific$equal_658$dma_engine.v:1643$7389 ($eq).
Removed top 1 bits (of 3) from port A of cell dma_top.$flatten\de.$verific$sub_643$dma_engine.v:1630$7377 ($sub).
Removed top 2 bits (of 3) from port B of cell dma_top.$flatten\de.$verific$sub_643$dma_engine.v:1630$7377 ($sub).
Removed top 1 bits (of 3) from port Y of cell dma_top.$flatten\de.$verific$sub_643$dma_engine.v:1630$7377 ($sub).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\de.$verific$equal_631$dma_engine.v:1599$7368 ($eq).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\de.$verific$equal_580$dma_engine.v:1568$7344 ($eq).
Removed top 7 bits (of 8) from port B of cell dma_top.$flatten\de.$verific$equal_696$dma_engine.v:1670$7424 ($eq).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\de.$verific$equal_400$dma_engine.v:1224$7200 ($eq).
Removed top 4 bits (of 11) from mux cell dma_top.$flatten\de.$verific$select_221$dma_engine.v:1010$7069 ($pmux).
Removed top 1 bits (of 5) from port B of cell dma_top.$flatten\de.$verific$equal_214$dma_engine.v:973$7060 ($eq).
Removed top 2 bits (of 5) from port B of cell dma_top.$flatten\de.$verific$equal_211$dma_engine.v:952$7057 ($eq).
Removed top 3 bits (of 5) from port B of cell dma_top.$flatten\de.$verific$equal_210$dma_engine.v:941$7056 ($eq).
Removed top 4 bits (of 5) from port B of cell dma_top.$flatten\de.$verific$equal_209$dma_engine.v:924$7055 ($eq).
Removed top 1 bits (of 17) from port A of cell dma_top.$flatten\ahb_mst0.$verific$add_407$dma_ahbmst.v:1078$8044 ($add).
Removed top 1 bits (of 17) from port Y of cell dma_top.$flatten\ahb_mst0.$verific$add_407$dma_ahbmst.v:1078$8044 ($add).
Removed top 1 bits (of 17) from port B of cell dma_top.$flatten\ahb_mst0.$verific$add_407$dma_ahbmst.v:1078$8044 ($add).
Removed top 6 bits (of 7) from port B of cell dma_top.$flatten\ahb_mst0.$verific$equal_398$dma_ahbmst.v:1031$8034 ($eq).
Removed top 5 bits (of 7) from port B of cell dma_top.$flatten\ahb_mst0.$verific$equal_397$dma_ahbmst.v:1030$8033 ($eq).
Removed top 4 bits (of 7) from port B of cell dma_top.$flatten\ahb_mst0.$verific$equal_396$dma_ahbmst.v:1029$8032 ($eq).
Removed top 3 bits (of 7) from port B of cell dma_top.$flatten\ahb_mst0.$verific$equal_395$dma_ahbmst.v:1028$8031 ($eq).
Removed top 2 bits (of 7) from port B of cell dma_top.$flatten\ahb_mst0.$verific$equal_394$dma_ahbmst.v:1027$8030 ($eq).
Removed top 1 bits (of 7) from port B of cell dma_top.$flatten\ahb_mst0.$verific$equal_393$dma_ahbmst.v:1026$8029 ($eq).
Removed top 3 bits (of 4) from port B of cell dma_top.$flatten\ahb_mst0.$verific$equal_340$dma_ahbmst.v:976$7986 ($eq).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst0.$verific$and_580$dma_ahbmst.v:794$7912 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst0.$verific$and_580$dma_ahbmst.v:794$7912 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst0.$verific$and_580$dma_ahbmst.v:794$7912 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst0.$verific$and_579$dma_ahbmst.v:793$7910 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst0.$verific$and_579$dma_ahbmst.v:793$7910 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst0.$verific$and_579$dma_ahbmst.v:793$7910 ($and).
Removed top 1 bits (of 3) from port B of cell dma_top.$flatten\ahb_mst0.$verific$equal_180$dma_ahbmst.v:711$7893 ($eq).
Removed top 2 bits (of 3) from port B of cell dma_top.$flatten\ahb_mst0.$verific$equal_179$dma_ahbmst.v:710$7892 ($eq).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst0.$verific$and_572$dma_ahbmst.v:626$7871 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst0.$verific$and_572$dma_ahbmst.v:626$7871 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst0.$verific$and_572$dma_ahbmst.v:626$7871 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst0.$verific$inv_571$dma_ahbmst.v:626$7850 ($not).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst0.$verific$inv_571$dma_ahbmst.v:626$7850 ($not).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst0.$verific$or_565$dma_ahbmst.v:539$7838 ($or).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst0.$verific$or_565$dma_ahbmst.v:539$7838 ($or).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst0.$verific$or_565$dma_ahbmst.v:539$7838 ($or).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst0.$verific$or_563$dma_ahbmst.v:526$7836 ($or).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst0.$verific$or_563$dma_ahbmst.v:526$7836 ($or).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst0.$verific$or_563$dma_ahbmst.v:526$7836 ($or).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst0.$verific$and_562$dma_ahbmst.v:526$7835 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst0.$verific$and_562$dma_ahbmst.v:526$7835 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst0.$verific$and_562$dma_ahbmst.v:526$7835 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst0.$verific$or_561$dma_ahbmst.v:526$7834 ($or).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst0.$verific$or_561$dma_ahbmst.v:526$7834 ($or).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst0.$verific$or_561$dma_ahbmst.v:526$7834 ($or).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst0.$verific$and_560$dma_ahbmst.v:526$7833 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst0.$verific$and_560$dma_ahbmst.v:526$7833 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst0.$verific$and_560$dma_ahbmst.v:526$7833 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst0.$verific$or_559$dma_ahbmst.v:526$7832 ($or).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst0.$verific$or_559$dma_ahbmst.v:526$7832 ($or).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst0.$verific$or_559$dma_ahbmst.v:526$7832 ($or).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst0.$verific$or_558$dma_ahbmst.v:523$7831 ($or).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst0.$verific$inv_556$dma_ahbmst.v:523$7829 ($not).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst0.$verific$and_553$dma_ahbmst.v:520$7828 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst0.$verific$and_553$dma_ahbmst.v:520$7828 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst0.$verific$and_553$dma_ahbmst.v:520$7828 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst0.$verific$and_551$dma_ahbmst.v:520$7826 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst0.$verific$and_551$dma_ahbmst.v:520$7826 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst0.$verific$and_551$dma_ahbmst.v:520$7826 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst0.$verific$inv_549$dma_ahbmst.v:520$7824 ($not).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst0.$verific$or_544$dma_ahbmst.v:476$7811 ($or).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst0.$verific$or_544$dma_ahbmst.v:476$7811 ($or).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst0.$verific$or_544$dma_ahbmst.v:476$7811 ($or).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst0.$verific$and_543$dma_ahbmst.v:476$7810 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst0.$verific$and_543$dma_ahbmst.v:476$7810 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst0.$verific$and_543$dma_ahbmst.v:476$7810 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst0.$verific$or_542$dma_ahbmst.v:467$7809 ($or).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst0.$verific$or_542$dma_ahbmst.v:467$7809 ($or).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst0.$verific$or_542$dma_ahbmst.v:467$7809 ($or).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst0.$verific$and_541$dma_ahbmst.v:467$7808 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst0.$verific$and_541$dma_ahbmst.v:467$7808 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst0.$verific$and_541$dma_ahbmst.v:467$7808 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst0.$verific$or_540$dma_ahbmst.v:467$7807 ($or).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst0.$verific$or_540$dma_ahbmst.v:467$7807 ($or).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst0.$verific$or_540$dma_ahbmst.v:467$7807 ($or).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst0.$verific$and_537$dma_ahbmst.v:466$7804 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst0.$verific$and_537$dma_ahbmst.v:466$7804 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst0.$verific$and_537$dma_ahbmst.v:466$7804 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst0.$verific$and_536$dma_ahbmst.v:465$7803 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst0.$verific$and_536$dma_ahbmst.v:465$7803 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst0.$verific$and_536$dma_ahbmst.v:465$7803 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst0.$verific$or_535$dma_ahbmst.v:465$7802 ($or).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst0.$verific$and_533$dma_ahbmst.v:464$7788 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst0.$verific$and_533$dma_ahbmst.v:464$7788 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst0.$verific$and_533$dma_ahbmst.v:464$7788 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst0.$verific$and_530$dma_ahbmst.v:420$7784 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst0.$verific$and_530$dma_ahbmst.v:420$7784 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst0.$verific$and_530$dma_ahbmst.v:420$7784 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst0.$verific$or_529$dma_ahbmst.v:416$7782 ($or).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst0.$verific$or_529$dma_ahbmst.v:416$7782 ($or).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst0.$verific$or_529$dma_ahbmst.v:416$7782 ($or).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst0.$verific$and_528$dma_ahbmst.v:416$7781 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst0.$verific$and_528$dma_ahbmst.v:416$7781 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst0.$verific$and_528$dma_ahbmst.v:416$7781 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst0.$verific$and_526$dma_ahbmst.v:416$7779 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst0.$verific$and_526$dma_ahbmst.v:416$7779 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst0.$verific$and_526$dma_ahbmst.v:416$7779 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst0.$verific$inv_525$dma_ahbmst.v:416$7778 ($not).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst0.$verific$and_524$dma_ahbmst.v:416$7777 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst0.$verific$and_524$dma_ahbmst.v:416$7777 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst0.$verific$and_524$dma_ahbmst.v:416$7777 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst0.$verific$inv_523$dma_ahbmst.v:416$7776 ($not).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst0.$verific$and_522$dma_ahbmst.v:415$7775 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst0.$verific$and_522$dma_ahbmst.v:415$7775 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst0.$verific$and_522$dma_ahbmst.v:415$7775 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst0.$verific$equal_21$dma_ahbmst.v:378$7755 ($eq).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$and_543$dma_ahbmst.v:414$8848 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$and_543$dma_ahbmst.v:414$8848 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$and_543$dma_ahbmst.v:414$8848 ($and).
Removed top 1 bits (of 17) from port A of cell dma_top.$flatten\ahb_mst1.$verific$add_425$dma_ahbmst.v:1078$8782 ($add).
Removed top 1 bits (of 17) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$add_425$dma_ahbmst.v:1078$8782 ($add).
Removed top 1 bits (of 17) from port B of cell dma_top.$flatten\ahb_mst1.$verific$add_425$dma_ahbmst.v:1078$8782 ($add).
Removed top 6 bits (of 7) from port B of cell dma_top.$flatten\ahb_mst1.$verific$equal_416$dma_ahbmst.v:1031$8772 ($eq).
Removed top 5 bits (of 7) from port B of cell dma_top.$flatten\ahb_mst1.$verific$equal_415$dma_ahbmst.v:1030$8771 ($eq).
Removed top 4 bits (of 7) from port B of cell dma_top.$flatten\ahb_mst1.$verific$equal_414$dma_ahbmst.v:1029$8770 ($eq).
Removed top 3 bits (of 7) from port B of cell dma_top.$flatten\ahb_mst1.$verific$equal_413$dma_ahbmst.v:1028$8769 ($eq).
Removed top 2 bits (of 7) from port B of cell dma_top.$flatten\ahb_mst1.$verific$equal_412$dma_ahbmst.v:1027$8768 ($eq).
Removed top 1 bits (of 7) from port B of cell dma_top.$flatten\ahb_mst1.$verific$equal_411$dma_ahbmst.v:1026$8767 ($eq).
Removed top 4 bits (of 5) from port B of cell dma_top.$flatten\ahb_mst1.$verific$equal_358$dma_ahbmst.v:976$8724 ($eq).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$or_616$dma_ahbmst.v:794$8650 ($or).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$or_616$dma_ahbmst.v:794$8650 ($or).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$or_616$dma_ahbmst.v:794$8650 ($or).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$and_615$dma_ahbmst.v:794$8649 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$and_615$dma_ahbmst.v:794$8649 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$and_615$dma_ahbmst.v:794$8649 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$and_614$dma_ahbmst.v:793$8648 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$and_614$dma_ahbmst.v:793$8648 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$and_614$dma_ahbmst.v:793$8648 ($and).
Removed top 1 bits (of 3) from port B of cell dma_top.$flatten\ahb_mst1.$verific$equal_196$dma_ahbmst.v:711$8630 ($eq).
Removed top 2 bits (of 3) from port B of cell dma_top.$flatten\ahb_mst1.$verific$equal_195$dma_ahbmst.v:710$8629 ($eq).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$inv_613$dma_ahbmst.v:793$8614 ($not).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$inv_613$dma_ahbmst.v:793$8614 ($not).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$inv_610$dma_ahbmst.v:660$8610 ($not).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$inv_610$dma_ahbmst.v:660$8610 ($not).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$and_608$dma_ahbmst.v:652$8607 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$and_608$dma_ahbmst.v:652$8607 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$and_608$dma_ahbmst.v:652$8607 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$and_607$dma_ahbmst.v:651$8606 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$and_607$dma_ahbmst.v:651$8606 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$and_607$dma_ahbmst.v:651$8606 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$and_606$dma_ahbmst.v:645$8604 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$and_606$dma_ahbmst.v:645$8604 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$and_606$dma_ahbmst.v:645$8604 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$and_605$dma_ahbmst.v:644$8602 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$and_605$dma_ahbmst.v:644$8602 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$and_605$dma_ahbmst.v:644$8602 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$and_600$dma_ahbmst.v:626$8596 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$and_600$dma_ahbmst.v:626$8596 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$and_600$dma_ahbmst.v:626$8596 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$inv_599$dma_ahbmst.v:626$8595 ($not).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$inv_599$dma_ahbmst.v:626$8595 ($not).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$and_598$dma_ahbmst.v:625$8572 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$and_598$dma_ahbmst.v:625$8572 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$and_598$dma_ahbmst.v:625$8572 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$or_592$dma_ahbmst.v:539$8560 ($or).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$or_592$dma_ahbmst.v:539$8560 ($or).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$or_592$dma_ahbmst.v:539$8560 ($or).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$or_590$dma_ahbmst.v:534$8558 ($or).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$or_590$dma_ahbmst.v:534$8558 ($or).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$or_590$dma_ahbmst.v:534$8558 ($or).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$or_589$dma_ahbmst.v:526$8557 ($or).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$or_589$dma_ahbmst.v:526$8557 ($or).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$or_589$dma_ahbmst.v:526$8557 ($or).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$and_588$dma_ahbmst.v:526$8556 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$and_588$dma_ahbmst.v:526$8556 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$and_588$dma_ahbmst.v:526$8556 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$or_587$dma_ahbmst.v:526$8555 ($or).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$or_587$dma_ahbmst.v:526$8555 ($or).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$or_587$dma_ahbmst.v:526$8555 ($or).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$and_586$dma_ahbmst.v:526$8554 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$and_586$dma_ahbmst.v:526$8554 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$and_586$dma_ahbmst.v:526$8554 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$or_585$dma_ahbmst.v:526$8553 ($or).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$or_585$dma_ahbmst.v:526$8553 ($or).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$or_585$dma_ahbmst.v:526$8553 ($or).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$and_583$dma_ahbmst.v:523$8551 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$and_579$dma_ahbmst.v:520$8549 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$and_579$dma_ahbmst.v:520$8549 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$and_579$dma_ahbmst.v:520$8549 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$and_576$dma_ahbmst.v:520$8546 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$or_570$dma_ahbmst.v:476$8532 ($or).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$or_570$dma_ahbmst.v:476$8532 ($or).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$or_570$dma_ahbmst.v:476$8532 ($or).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$and_569$dma_ahbmst.v:476$8531 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$and_569$dma_ahbmst.v:476$8531 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$and_569$dma_ahbmst.v:476$8531 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$or_568$dma_ahbmst.v:471$8530 ($or).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$or_568$dma_ahbmst.v:471$8530 ($or).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$or_568$dma_ahbmst.v:471$8530 ($or).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$or_567$dma_ahbmst.v:467$8529 ($or).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$or_567$dma_ahbmst.v:467$8529 ($or).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$or_567$dma_ahbmst.v:467$8529 ($or).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$and_566$dma_ahbmst.v:467$8528 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$and_566$dma_ahbmst.v:467$8528 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$and_566$dma_ahbmst.v:467$8528 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$and_562$dma_ahbmst.v:466$8524 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$and_562$dma_ahbmst.v:466$8524 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$and_562$dma_ahbmst.v:466$8524 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$and_561$dma_ahbmst.v:465$8523 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$and_561$dma_ahbmst.v:465$8523 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$and_561$dma_ahbmst.v:465$8523 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$and_559$dma_ahbmst.v:465$8521 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$and_559$dma_ahbmst.v:465$8521 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$and_559$dma_ahbmst.v:465$8521 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$and_558$dma_ahbmst.v:464$8508 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$and_558$dma_ahbmst.v:464$8508 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$and_558$dma_ahbmst.v:464$8508 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$or_554$dma_ahbmst.v:422$8503 ($or).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$or_554$dma_ahbmst.v:422$8503 ($or).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$or_554$dma_ahbmst.v:422$8503 ($or).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$and_553$dma_ahbmst.v:420$8502 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$and_553$dma_ahbmst.v:420$8502 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$and_553$dma_ahbmst.v:420$8502 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$or_552$dma_ahbmst.v:416$8501 ($or).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$or_552$dma_ahbmst.v:416$8501 ($or).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$or_552$dma_ahbmst.v:416$8501 ($or).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$and_551$dma_ahbmst.v:416$8500 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$and_551$dma_ahbmst.v:416$8500 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$and_551$dma_ahbmst.v:416$8500 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$and_549$dma_ahbmst.v:416$8498 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$and_549$dma_ahbmst.v:416$8498 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$and_549$dma_ahbmst.v:416$8498 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$and_547$dma_ahbmst.v:416$8496 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$and_547$dma_ahbmst.v:416$8496 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$and_547$dma_ahbmst.v:416$8496 ($and).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst1.$verific$and_545$dma_ahbmst.v:415$8494 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$and_545$dma_ahbmst.v:415$8494 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$and_545$dma_ahbmst.v:415$8494 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$equal_21$dma_ahbmst.v:378$8472 ($eq).
Removed top 1 bits (of 3) from port B of cell dma_top.$flatten\dma_fifo.$verific$equal_71$dma_fifo.v:252$13317 ($eq).
Removed top 2 bits (of 3) from port B of cell dma_top.$flatten\dma_fifo.$verific$equal_70$dma_fifo.v:251$13316 ($eq).
Removed top 3 bits (of 4) from port B of cell dma_top.$flatten\ctl_rf.\c7_rf.$verific$add_61$dma_chrf.v:279$17609 ($add).
Removed top 3 bits (of 4) from port B of cell dma_top.$flatten\ctl_rf.\c6_rf.$verific$add_61$dma_chrf.v:279$17158 ($add).
Removed top 3 bits (of 4) from port B of cell dma_top.$flatten\ctl_rf.\c5_rf.$verific$add_61$dma_chrf.v:279$16707 ($add).
Removed top 3 bits (of 4) from port B of cell dma_top.$flatten\ctl_rf.\c4_rf.$verific$add_61$dma_chrf.v:279$16256 ($add).
Removed top 3 bits (of 4) from port B of cell dma_top.$flatten\ctl_rf.\c3_rf.$verific$add_61$dma_chrf.v:279$15805 ($add).
Removed top 3 bits (of 4) from port B of cell dma_top.$flatten\ctl_rf.\c2_rf.$verific$add_61$dma_chrf.v:279$15354 ($add).
Removed top 3 bits (of 4) from port B of cell dma_top.$flatten\ctl_rf.\c1_rf.$verific$add_61$dma_chrf.v:279$14903 ($add).
Removed top 3 bits (of 4) from port B of cell dma_top.$flatten\ctl_rf.\c0_rf.$verific$add_61$dma_chrf.v:279$14452 ($add).
Removed top 1 bits (of 3) from port B of cell dma_top.$flatten\ctl_rf.$verific$not_equal_998$dma_ctlrf.v:2009$9969 ($ne).
Removed top 1 bits (of 3) from port B of cell dma_top.$flatten\ctl_rf.$verific$not_equal_986$dma_ctlrf.v:1992$9968 ($ne).
Removed top 2 bits (of 3) from port B of cell dma_top.$flatten\ctl_rf.$verific$not_equal_974$dma_ctlrf.v:1975$9967 ($ne).
Removed top 7 bits (of 8) from port B of cell dma_top.$flatten\ctl_rf.$verific$and_1982$dma_ctlrf.v:1786$9932 ($and).
Removed top 1 bits (of 7) from port B of cell dma_top.$flatten\ctl_rf.$verific$equal_476$dma_ctlrf.v:1534$9647 ($eq).
Removed top 2 bits (of 7) from port B of cell dma_top.$flatten\ctl_rf.$verific$equal_473$dma_ctlrf.v:1533$9644 ($eq).
Removed top 1 bits (of 7) from port B of cell dma_top.$flatten\ctl_rf.$verific$equal_466$dma_ctlrf.v:1527$9637 ($eq).
Removed top 2 bits (of 7) from port B of cell dma_top.$flatten\ctl_rf.$verific$equal_463$dma_ctlrf.v:1526$9634 ($eq).
Removed top 1 bits (of 7) from port B of cell dma_top.$flatten\ctl_rf.$verific$equal_456$dma_ctlrf.v:1520$9627 ($eq).
Removed top 2 bits (of 7) from port B of cell dma_top.$flatten\ctl_rf.$verific$equal_453$dma_ctlrf.v:1519$9624 ($eq).
Removed top 1 bits (of 7) from port B of cell dma_top.$flatten\ctl_rf.$verific$equal_446$dma_ctlrf.v:1513$9617 ($eq).
Removed top 2 bits (of 7) from port B of cell dma_top.$flatten\ctl_rf.$verific$equal_443$dma_ctlrf.v:1512$9614 ($eq).
Removed top 1 bits (of 7) from port B of cell dma_top.$flatten\ctl_rf.$verific$equal_436$dma_ctlrf.v:1506$9607 ($eq).
Removed top 2 bits (of 7) from port B of cell dma_top.$flatten\ctl_rf.$verific$equal_433$dma_ctlrf.v:1505$9604 ($eq).
Removed top 1 bits (of 7) from port B of cell dma_top.$flatten\ctl_rf.$verific$equal_426$dma_ctlrf.v:1499$9597 ($eq).
Removed top 2 bits (of 7) from port B of cell dma_top.$flatten\ctl_rf.$verific$equal_423$dma_ctlrf.v:1498$9594 ($eq).
Removed top 1 bits (of 7) from port B of cell dma_top.$flatten\ctl_rf.$verific$equal_416$dma_ctlrf.v:1492$9587 ($eq).
Removed top 2 bits (of 7) from port B of cell dma_top.$flatten\ctl_rf.$verific$equal_413$dma_ctlrf.v:1491$9584 ($eq).
Removed top 1 bits (of 7) from port B of cell dma_top.$flatten\ctl_rf.$verific$equal_406$dma_ctlrf.v:1486$9577 ($eq).
Removed top 2 bits (of 7) from port B of cell dma_top.$flatten\ctl_rf.$verific$equal_403$dma_ctlrf.v:1485$9574 ($eq).
Removed top 3 bits (of 7) from port B of cell dma_top.$flatten\ctl_rf.$verific$equal_400$dma_ctlrf.v:1480$9571 ($eq).
Removed top 3 bits (of 7) from port B of cell dma_top.$flatten\ctl_rf.$verific$equal_397$dma_ctlrf.v:1479$9568 ($eq).
Removed top 4 bits (of 7) from port B of cell dma_top.$flatten\ctl_rf.$verific$equal_394$dma_ctlrf.v:1478$9565 ($eq).
Removed top 5 bits (of 7) from port B of cell dma_top.$flatten\ctl_rf.$verific$equal_391$dma_ctlrf.v:1477$9562 ($eq).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ctl_rf.$verific$equal_225$dma_ctlrf.v:1292$9523 ($eq).
Removed top 1 bits (of 3) from port B of cell dma_top.$flatten\ctl_rf.$verific$equal_12$dma_ctlrf.v:984$9489 ($eq).
Removed top 4 bits (of 25) from FF cell dma_top.$flatten\ch_sel.$verific$arb_chcsr_reg_reg$dma_chsel.v:1310$14104 ($adff).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ch_sel.$verific$equal_262$dma_chsel.v:855$13974 ($eq).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ch_sel.$verific$equal_232$dma_chsel.v:796$13942 ($eq).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ch_sel.$verific$equal_224$dma_chsel.v:776$13932 ($eq).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ch_sel.$verific$equal_216$dma_chsel.v:756$13922 ($eq).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ch_sel.$verific$equal_208$dma_chsel.v:736$13912 ($eq).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ch_sel.$verific$equal_200$dma_chsel.v:716$13902 ($eq).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ch_sel.$verific$equal_192$dma_chsel.v:696$13892 ($eq).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ch_sel.$verific$equal_184$dma_chsel.v:675$13882 ($eq).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ch_sel.$verific$equal_176$dma_chsel.v:657$13872 ($eq).
Removed top 1 bits (of 3) from port B of cell dma_top.$flatten\ch_sel.$verific$equal_78$dma_chsel.v:525$13852 ($eq).
Removed top 1 bits (of 3) from port B of cell dma_top.$flatten\ch_sel.$verific$equal_71$dma_chsel.v:522$13851 ($eq).
Removed top 2 bits (of 3) from port B of cell dma_top.$flatten\ch_sel.$verific$equal_64$dma_chsel.v:519$13850 ($eq).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_slv.$verific$equal_148$dma_ahbslv.v:417$18207 ($eq).
Removed top 1 bits (of 3) from port B of cell dma_top.$flatten\ahb_slv.$verific$equal_132$dma_ahbslv.v:396$18192 ($eq).
Removed top 2 bits (of 3) from port B of cell dma_top.$flatten\ahb_slv.$verific$equal_131$dma_ahbslv.v:394$18191 ($eq).
Removed top 2 bits (of 3) from port B of cell dma_top.$flatten\ahb_slv.$verific$equal_74$dma_ahbslv.v:324$18147 ($eq).
Removed top 2 bits (of 3) from port B of cell dma_top.$flatten\ahb_slv.$verific$equal_37$dma_ahbslv.v:279$18115 ($eq).
Removed top 2 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_96$dma_ahbdec.v:366$18719 ($eq).
Removed top 2 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_95$dma_ahbdec.v:365$18718 ($eq).
Removed top 3 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_94$dma_ahbdec.v:364$18717 ($eq).
Removed top 2 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_90$dma_ahbdec.v:355$18711 ($eq).
Removed top 2 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_89$dma_ahbdec.v:354$18710 ($eq).
Removed top 3 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_88$dma_ahbdec.v:353$18709 ($eq).
Removed top 2 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_84$dma_ahbdec.v:344$18703 ($eq).
Removed top 2 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_83$dma_ahbdec.v:343$18702 ($eq).
Removed top 3 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_82$dma_ahbdec.v:342$18701 ($eq).
Removed top 2 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_78$dma_ahbdec.v:333$18695 ($eq).
Removed top 2 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_77$dma_ahbdec.v:332$18694 ($eq).
Removed top 3 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_76$dma_ahbdec.v:331$18693 ($eq).
Removed top 2 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_72$dma_ahbdec.v:322$18687 ($eq).
Removed top 2 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_71$dma_ahbdec.v:321$18686 ($eq).
Removed top 3 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_70$dma_ahbdec.v:320$18685 ($eq).
Removed top 2 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_66$dma_ahbdec.v:311$18679 ($eq).
Removed top 2 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_65$dma_ahbdec.v:310$18678 ($eq).
Removed top 3 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_64$dma_ahbdec.v:309$18677 ($eq).
Removed top 2 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_60$dma_ahbdec.v:300$18671 ($eq).
Removed top 2 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_59$dma_ahbdec.v:299$18670 ($eq).
Removed top 3 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_58$dma_ahbdec.v:298$18669 ($eq).
Removed top 2 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_54$dma_ahbdec.v:290$18663 ($eq).
Removed top 2 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_53$dma_ahbdec.v:289$18662 ($eq).
Removed top 3 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_52$dma_ahbdec.v:288$18661 ($eq).
Removed top 2 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_48$dma_ahbdec.v:279$18655 ($eq).
Removed top 2 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_47$dma_ahbdec.v:278$18654 ($eq).
Removed top 3 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_46$dma_ahbdec.v:277$18653 ($eq).
Removed top 2 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_42$dma_ahbdec.v:268$18647 ($eq).
Removed top 2 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_41$dma_ahbdec.v:267$18646 ($eq).
Removed top 3 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_40$dma_ahbdec.v:266$18645 ($eq).
Removed top 2 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_36$dma_ahbdec.v:257$18639 ($eq).
Removed top 2 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_35$dma_ahbdec.v:256$18638 ($eq).
Removed top 3 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_34$dma_ahbdec.v:255$18637 ($eq).
Removed top 2 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_30$dma_ahbdec.v:246$18631 ($eq).
Removed top 2 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_29$dma_ahbdec.v:245$18630 ($eq).
Removed top 3 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_28$dma_ahbdec.v:244$18629 ($eq).
Removed top 2 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_24$dma_ahbdec.v:235$18623 ($eq).
Removed top 2 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_23$dma_ahbdec.v:234$18622 ($eq).
Removed top 3 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_22$dma_ahbdec.v:233$18621 ($eq).
Removed top 2 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_18$dma_ahbdec.v:224$18615 ($eq).
Removed top 2 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_17$dma_ahbdec.v:223$18614 ($eq).
Removed top 3 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_16$dma_ahbdec.v:222$18613 ($eq).
Removed top 2 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_12$dma_ahbdec.v:213$18607 ($eq).
Removed top 2 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_11$dma_ahbdec.v:212$18606 ($eq).
Removed top 3 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_10$dma_ahbdec.v:211$18605 ($eq).
Removed top 2 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_6$dma_ahbdec.v:203$18599 ($eq).
Removed top 2 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_5$dma_ahbdec.v:202$18598 ($eq).
Removed top 3 bits (of 4) from port B of cell dma_top.$flatten\m1_decoder.$verific$equal_4$dma_ahbdec.v:201$18597 ($eq).
Removed top 1 bits (of 8) from port B of cell dma_top.$flatten\m1_mux.$verific$equal_21$dma_ahbmux.v:303$18382 ($eq).
Removed top 2 bits (of 8) from port B of cell dma_top.$flatten\m1_mux.$verific$equal_20$dma_ahbmux.v:300$18381 ($eq).
Removed top 3 bits (of 8) from port B of cell dma_top.$flatten\m1_mux.$verific$equal_19$dma_ahbmux.v:297$18380 ($eq).
Removed top 4 bits (of 8) from port B of cell dma_top.$flatten\m1_mux.$verific$equal_18$dma_ahbmux.v:294$18379 ($eq).
Removed top 5 bits (of 8) from port B of cell dma_top.$flatten\m1_mux.$verific$equal_17$dma_ahbmux.v:291$18378 ($eq).
Removed top 6 bits (of 8) from port B of cell dma_top.$flatten\m1_mux.$verific$equal_16$dma_ahbmux.v:288$18377 ($eq).
Removed top 1 bits (of 8) from port B of cell dma_top.$flatten\m1_mux.$verific$equal_11$dma_ahbmux.v:276$18370 ($eq).
Removed top 2 bits (of 8) from port B of cell dma_top.$flatten\m1_mux.$verific$equal_10$dma_ahbmux.v:273$18369 ($eq).
Removed top 3 bits (of 8) from port B of cell dma_top.$flatten\m1_mux.$verific$equal_9$dma_ahbmux.v:270$18368 ($eq).
Removed top 4 bits (of 8) from port B of cell dma_top.$flatten\m1_mux.$verific$equal_8$dma_ahbmux.v:267$18367 ($eq).
Removed top 5 bits (of 8) from port B of cell dma_top.$flatten\m1_mux.$verific$equal_7$dma_ahbmux.v:264$18366 ($eq).
Removed top 6 bits (of 8) from port B of cell dma_top.$flatten\m1_mux.$verific$equal_6$dma_ahbmux.v:261$18365 ($eq).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst0.$verific$or_558$dma_ahbmst.v:523$7831 ($or).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst0.$verific$or_558$dma_ahbmst.v:523$7831 ($or).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst0.$verific$or_552$dma_ahbmst.v:520$7827 ($or).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst0.$verific$or_552$dma_ahbmst.v:520$7827 ($or).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst0.$verific$or_552$dma_ahbmst.v:520$7827 ($or).
Removed top 1 bits (of 2) from port A of cell dma_top.$flatten\ahb_mst0.$verific$or_535$dma_ahbmst.v:465$7802 ($or).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst0.$verific$or_535$dma_ahbmst.v:465$7802 ($or).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst0.$verific$inv_525$dma_ahbmst.v:416$7778 ($not).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst0.$verific$inv_523$dma_ahbmst.v:416$7776 ($not).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$and_583$dma_ahbmst.v:523$8551 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$and_583$dma_ahbmst.v:523$8551 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst1.$verific$and_576$dma_ahbmst.v:520$8546 ($and).
Removed top 1 bits (of 2) from port B of cell dma_top.$flatten\ahb_mst1.$verific$and_576$dma_ahbmst.v:520$8546 ($and).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst0.$verific$inv_556$dma_ahbmst.v:523$7829 ($not).
Removed top 1 bits (of 2) from port Y of cell dma_top.$flatten\ahb_mst0.$verific$inv_549$dma_ahbmst.v:520$7824 ($not).
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst0.$verific$n1020$7657.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst0.$verific$n1086$7659.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst0.$verific$n109$7631.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst0.$verific$n142$7632.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst0.$verific$n208$7634.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst0.$verific$n451$7641.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst0.$verific$n484$7642.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst0.$verific$n517$7643.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst0.$verific$n682$7648.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst0.$verific$n715$7649.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst0.$verific$n748$7650.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst0.$verific$n76$7630.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst0.$verific$n814$7652.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst0.$verific$n847$7653.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst0.$verific$n987$7656.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst1.$verific$n110$8332.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst1.$verific$n1252$8365.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst1.$verific$n1450$8369.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst1.$verific$n1483$8370.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst1.$verific$n1516$8371.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst1.$verific$n1549$8372.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst1.$verific$n1582$8373.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst1.$verific$n1648$8375.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst1.$verific$n1872$8384.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst1.$verific$n1905$8385.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst1.$verific$n1938$8386.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst1.$verific$n2004$8388.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst1.$verific$n2037$8389.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst1.$verific$n2138$8392.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst1.$verific$n2205$8394.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst1.$verific$n2238$8395.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst1.$verific$n2271$8396.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst1.$verific$n2304$8397.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst1.$verific$n2467$8410.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst1.$verific$n2500$8411.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst1.$verific$n2566$8413.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst1.$verific$n44$8330.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst1.$verific$n440$8342.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst1.$verific$n473$8343.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst1.$verific$n551$8345.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst1.$verific$n650$8348.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst1.$verific$n683$8349.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst1.$verific$n815$8353.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst1.$verific$n848$8354.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst1.$verific$n881$8355.
Removed top 31 bits (of 32) from wire dma_top.$flatten\ahb_mst1.$verific$n947$8357.
Removed top 1 bits (of 2) from wire dma_top.$flatten\ahb_slv.$verific$n674$18055.
Removed top 1 bits (of 3) from wire dma_top.$flatten\ahb_slv.$verific$n677$18056.
Removed top 1 bits (of 3) from wire dma_top.$flatten\de.$verific$n1754$6860.
Removed top 6 bits (of 7) from wire dma_top.$flatten\de.$verific$n464$6814.
Removed top 1 bits (of 3) from wire dma_top.$flatten\de.$verific$n488$6817.
Removed top 10 bits (of 32) from wire dma_top.arb_chcsr.
Removed top 12 bits (of 32) from wire dma_top.c0cfg.
Removed top 12 bits (of 32) from wire dma_top.c1cfg.
Removed top 12 bits (of 32) from wire dma_top.c2cfg.
Removed top 12 bits (of 32) from wire dma_top.c3cfg.
Removed top 12 bits (of 32) from wire dma_top.c4cfg.
Removed top 12 bits (of 32) from wire dma_top.c5cfg.
Removed top 12 bits (of 32) from wire dma_top.c6cfg.
Removed top 12 bits (of 32) from wire dma_top.c7cfg.
Removed top 5 bits (of 8) from wire dma_top.csr.
Removed top 4 bits (of 11) from wire dma_top.de_st.
Removed top 16 bits (of 32) from wire dma_top.m0_updad.
Removed top 16 bits (of 32) from wire dma_top.m1_updad.

15. Executing PEEPOPT pass (run peephole optimizers).

16. Executing PMUXTREE pass.

17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \dma_top..
Removed 90 unused cells and 219 unused wires.
<suppressed ~93 debug messages>

18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module dma_top:
  creating $macc model for $flatten\ahb_mst0.$verific$add_407$dma_ahbmst.v:1078$8044 ($add).
  creating $macc model for $flatten\ahb_mst1.$verific$add_425$dma_ahbmst.v:1078$8782 ($add).
  creating $macc model for $flatten\ctl_rf.\c0_rf.$verific$add_61$dma_chrf.v:279$14452 ($add).
  creating $macc model for $flatten\ctl_rf.\c1_rf.$verific$add_61$dma_chrf.v:279$14903 ($add).
  creating $macc model for $flatten\ctl_rf.\c2_rf.$verific$add_61$dma_chrf.v:279$15354 ($add).
  creating $macc model for $flatten\ctl_rf.\c3_rf.$verific$add_61$dma_chrf.v:279$15805 ($add).
  creating $macc model for $flatten\ctl_rf.\c4_rf.$verific$add_61$dma_chrf.v:279$16256 ($add).
  creating $macc model for $flatten\ctl_rf.\c5_rf.$verific$add_61$dma_chrf.v:279$16707 ($add).
  creating $macc model for $flatten\ctl_rf.\c6_rf.$verific$add_61$dma_chrf.v:279$17158 ($add).
  creating $macc model for $flatten\ctl_rf.\c7_rf.$verific$add_61$dma_chrf.v:279$17609 ($add).
  creating $macc model for $flatten\de.$verific$sub_643$dma_engine.v:1630$7377 ($sub).
  creating $alu model for $macc $flatten\de.$verific$sub_643$dma_engine.v:1630$7377.
  creating $alu model for $macc $flatten\ctl_rf.\c7_rf.$verific$add_61$dma_chrf.v:279$17609.
  creating $alu model for $macc $flatten\ctl_rf.\c6_rf.$verific$add_61$dma_chrf.v:279$17158.
  creating $alu model for $macc $flatten\ctl_rf.\c5_rf.$verific$add_61$dma_chrf.v:279$16707.
  creating $alu model for $macc $flatten\ctl_rf.\c4_rf.$verific$add_61$dma_chrf.v:279$16256.
  creating $alu model for $macc $flatten\ctl_rf.\c3_rf.$verific$add_61$dma_chrf.v:279$15805.
  creating $alu model for $macc $flatten\ctl_rf.\c2_rf.$verific$add_61$dma_chrf.v:279$15354.
  creating $alu model for $macc $flatten\ctl_rf.\c1_rf.$verific$add_61$dma_chrf.v:279$14903.
  creating $alu model for $macc $flatten\ctl_rf.\c0_rf.$verific$add_61$dma_chrf.v:279$14452.
  creating $alu model for $macc $flatten\ahb_mst1.$verific$add_425$dma_ahbmst.v:1078$8782.
  creating $alu model for $macc $flatten\ahb_mst0.$verific$add_407$dma_ahbmst.v:1078$8044.
  creating $alu cell for $flatten\ahb_mst0.$verific$add_407$dma_ahbmst.v:1078$8044: $auto$alumacc.cc:485:replace_alu$20564
  creating $alu cell for $flatten\ahb_mst1.$verific$add_425$dma_ahbmst.v:1078$8782: $auto$alumacc.cc:485:replace_alu$20567
  creating $alu cell for $flatten\ctl_rf.\c0_rf.$verific$add_61$dma_chrf.v:279$14452: $auto$alumacc.cc:485:replace_alu$20570
  creating $alu cell for $flatten\ctl_rf.\c1_rf.$verific$add_61$dma_chrf.v:279$14903: $auto$alumacc.cc:485:replace_alu$20573
  creating $alu cell for $flatten\ctl_rf.\c2_rf.$verific$add_61$dma_chrf.v:279$15354: $auto$alumacc.cc:485:replace_alu$20576
  creating $alu cell for $flatten\ctl_rf.\c3_rf.$verific$add_61$dma_chrf.v:279$15805: $auto$alumacc.cc:485:replace_alu$20579
  creating $alu cell for $flatten\ctl_rf.\c4_rf.$verific$add_61$dma_chrf.v:279$16256: $auto$alumacc.cc:485:replace_alu$20582
  creating $alu cell for $flatten\ctl_rf.\c5_rf.$verific$add_61$dma_chrf.v:279$16707: $auto$alumacc.cc:485:replace_alu$20585
  creating $alu cell for $flatten\ctl_rf.\c6_rf.$verific$add_61$dma_chrf.v:279$17158: $auto$alumacc.cc:485:replace_alu$20588
  creating $alu cell for $flatten\ctl_rf.\c7_rf.$verific$add_61$dma_chrf.v:279$17609: $auto$alumacc.cc:485:replace_alu$20591
  creating $alu cell for $flatten\de.$verific$sub_643$dma_engine.v:1630$7377: $auto$alumacc.cc:485:replace_alu$20594
  created 11 $alu and 0 $macc cells.

19. Executing OPT pass (performing simple optimizations).

19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module dma_top.
<suppressed ~70 debug messages>

19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\dma_top'.
<suppressed ~45 debug messages>
Removed a total of 15 cells.

19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \dma_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~347 debug messages>

19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \dma_top.
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$20266: { $flatten\de.$verific$n623$6612 $flatten\de.$verific$n626$6615 $flatten\de.$verific$n627$6616 $flatten\de.$verific$n632$6621 }
  Optimizing cells in module \dma_top.
Performed a total of 1 changes.

19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\dma_top'.
Removed a total of 0 cells.

19.6. Executing OPT_DFF pass (perform DFF optimizations).

19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \dma_top..
Removed 39 unused cells and 99 unused wires.
<suppressed ~68 debug messages>

19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module dma_top.

19.9. Rerunning OPT passes. (Maybe there is more to do..)

19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \dma_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~345 debug messages>

19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \dma_top.
Performed a total of 0 changes.

19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\dma_top'.
Removed a total of 0 cells.

19.13. Executing OPT_DFF pass (perform DFF optimizations).

19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \dma_top..

19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module dma_top.

19.16. Finished OPT passes. (There is nothing left to do.)

20. Executing MEMORY pass.

20.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

20.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

20.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

20.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

20.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \dma_top..

20.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

20.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

20.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \dma_top..

20.9. Executing MEMORY_COLLECT pass (generating $mem cells).

21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \dma_top..

22. Executing OPT_EXPR pass (perform const folding).
Optimizing module dma_top.
<suppressed ~266 debug messages>

23. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping dma_top.$auto$ff.cc:262:slice$19475 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19476 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19479 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19482 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19483 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19486 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19489 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19492 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19495 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19498 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19501 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19504 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19507 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19508 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19511 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19514 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19517 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19520 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19523 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19526 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19529 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19532 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19535 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19538 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19541 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19544 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19547 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19548 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19551 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19552 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19555 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19558 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19561 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19562 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19563 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19564 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19565 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19568 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19569 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19570 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19571 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19574 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19577 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19578 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19581 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19584 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19587 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19590 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19593 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19596 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19599 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19602 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19603 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19606 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19609 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19612 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19615 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19618 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19621 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19624 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19627 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19630 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19633 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19636 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19639 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19642 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19643 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19646 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19649 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19652 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19655 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19658 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19661 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19664 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19667 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19668 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19669 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19694 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19695 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19696 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19697 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19698 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19699 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19700 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19701 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19702 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19703 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19704 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19705 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19706 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19707 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19708 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19709 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19710 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19711 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19712 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19713 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19714 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19715 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19716 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19717 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19718 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19719 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19720 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19721 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19722 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19723 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19724 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19725 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19726 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19727 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19730 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19733 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19736 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19739 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19742 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19745 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19748 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19752 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19755 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19756 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19757 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19758 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19761 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19762 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19765 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19768 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19769 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19770 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19778 ($sdff).
Mapping dma_top.$auto$ff.cc:262:slice$19779 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19782 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19783 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19784 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19789 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19791 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19796 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19804 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19809 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19812 ($sdff).
Mapping dma_top.$auto$ff.cc:262:slice$19813 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19816 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19817 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19818 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19823 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19828 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19835 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19841 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19842 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19843 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19844 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19845 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19846 ($adff).
Mapping dma_top.$auto$ff.cc:262:slice$19847 ($adffe).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$18858 ($reduce_bool).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$18864 ($reduce_bool).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$18870 ($reduce_bool).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$18873 ($reduce_bool).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$18940 ($reduce_bool).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$18955 ($reduce_bool).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$18958 ($reduce_bool).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$18973 ($reduce_bool).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$18976 ($reduce_bool).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$19035 ($reduce_bool).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$19050 ($reduce_bool).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$19053 ($reduce_bool).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$19068 ($reduce_bool).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$19071 ($reduce_bool).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$19130 ($reduce_bool).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$19145 ($reduce_bool).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$19148 ($reduce_bool).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$19163 ($reduce_bool).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$19166 ($reduce_bool).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$19225 ($reduce_bool).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$19240 ($reduce_bool).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$19243 ($reduce_bool).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$19258 ($reduce_bool).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$19261 ($reduce_bool).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$19320 ($reduce_bool).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$19335 ($reduce_bool).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$19338 ($reduce_bool).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$19353 ($reduce_bool).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$19356 ($reduce_bool).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$19415 ($reduce_bool).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$19430 ($reduce_bool).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$19433 ($reduce_bool).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$19448 ($reduce_bool).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$19451 ($reduce_bool).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$19510 ($reduce_bool).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$19525 ($reduce_bool).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$19528 ($reduce_bool).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$19543 ($reduce_bool).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$19546 ($reduce_bool).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$19605 ($reduce_bool).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$19620 ($reduce_bool).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$19623 ($reduce_bool).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$19638 ($reduce_bool).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$19641 ($reduce_bool).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$19645 ($reduce_bool).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$19648 ($reduce_bool).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$19651 ($reduce_bool).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$19654 ($reduce_bool).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$19657 ($reduce_bool).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$19660 ($reduce_bool).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$19663 ($reduce_bool).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$19666 ($reduce_bool).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$19729 ($reduce_bool).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$19732 ($reduce_bool).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$19735 ($reduce_bool).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$19738 ($reduce_bool).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$19741 ($reduce_bool).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$19744 ($reduce_bool).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$19747 ($reduce_bool).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$19750 ($reduce_bool).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$19754 ($reduce_bool).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$19760 ($reduce_bool).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$19764 ($reduce_bool).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$19767 ($reduce_bool).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$19777 ($reduce_bool).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$19781 ($reduce_bool).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$19786 ($ne).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$19800 ($not).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$19815 ($reduce_bool).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$19825 ($reduce_bool).
Mapping dma_top.$auto$opt_dff.cc:195:make_patterns_logic$19830 ($not).
Mapping dma_top.$auto$opt_dff.cc:220:make_patterns_logic$19788 ($reduce_and).
Mapping dma_top.$auto$opt_dff.cc:220:make_patterns_logic$19795 ($reduce_and).
Mapping dma_top.$auto$opt_dff.cc:220:make_patterns_logic$19802 ($reduce_and).
Mapping dma_top.$auto$opt_dff.cc:220:make_patterns_logic$19822 ($reduce_and).
Mapping dma_top.$auto$opt_dff.cc:220:make_patterns_logic$19834 ($reduce_and).
Mapping dma_top.$auto$opt_dff.cc:220:make_patterns_logic$19839 ($reduce_and).
Mapping dma_top.$auto$opt_reduce.cc:128:opt_pmux$18826 ($reduce_or).
Mapping dma_top.$auto$pmuxtree.cc:35:or_generator$19922 ($or).
Mapping dma_top.$auto$pmuxtree.cc:35:or_generator$19954 ($or).
Mapping dma_top.$auto$pmuxtree.cc:35:or_generator$19972 ($or).
Mapping dma_top.$auto$pmuxtree.cc:35:or_generator$19988 ($or).
Mapping dma_top.$auto$pmuxtree.cc:35:or_generator$20008 ($or).
Mapping dma_top.$auto$pmuxtree.cc:35:or_generator$20026 ($or).
Mapping dma_top.$auto$pmuxtree.cc:35:or_generator$20040 ($or).
Mapping dma_top.$auto$pmuxtree.cc:35:or_generator$20054 ($or).
Mapping dma_top.$auto$pmuxtree.cc:35:or_generator$20068 ($or).
Mapping dma_top.$auto$pmuxtree.cc:35:or_generator$20082 ($or).
Mapping dma_top.$auto$pmuxtree.cc:35:or_generator$20096 ($or).
Mapping dma_top.$auto$pmuxtree.cc:35:or_generator$20110 ($or).
Mapping dma_top.$auto$pmuxtree.cc:35:or_generator$20124 ($or).
Mapping dma_top.$auto$pmuxtree.cc:35:or_generator$20138 ($or).
Mapping dma_top.$auto$pmuxtree.cc:35:or_generator$20166 ($or).
Mapping dma_top.$auto$pmuxtree.cc:35:or_generator$20302 ($or).
Mapping dma_top.$auto$pmuxtree.cc:35:or_generator$20316 ($or).
Mapping dma_top.$auto$pmuxtree.cc:35:or_generator$20330 ($or).
Mapping dma_top.$auto$pmuxtree.cc:35:or_generator$20344 ($or).
Mapping dma_top.$auto$pmuxtree.cc:35:or_generator$20358 ($or).
Mapping dma_top.$auto$pmuxtree.cc:35:or_generator$20372 ($or).
Mapping dma_top.$auto$pmuxtree.cc:35:or_generator$20386 ($or).
Mapping dma_top.$auto$pmuxtree.cc:35:or_generator$20400 ($or).
Mapping dma_top.$auto$pmuxtree.cc:35:or_generator$20414 ($or).
Mapping dma_top.$auto$pmuxtree.cc:35:or_generator$20428 ($or).
Mapping dma_top.$auto$pmuxtree.cc:35:or_generator$20442 ($or).
Mapping dma_top.$auto$pmuxtree.cc:35:or_generator$20456 ($or).
Mapping dma_top.$auto$pmuxtree.cc:35:or_generator$20470 ($or).
Mapping dma_top.$auto$pmuxtree.cc:35:or_generator$20484 ($or).
Mapping dma_top.$auto$pmuxtree.cc:35:or_generator$20498 ($or).
Mapping dma_top.$auto$pmuxtree.cc:35:or_generator$20512 ($or).
Mapping dma_top.$auto$pmuxtree.cc:35:or_generator$20524 ($or).
Mapping dma_top.$auto$pmuxtree.cc:35:or_generator$20532 ($or).
Mapping dma_top.$auto$pmuxtree.cc:35:or_generator$20548 ($or).
Mapping dma_top.$auto$pmuxtree.cc:35:or_generator$20556 ($or).
Mapping dma_top.$auto$pmuxtree.cc:37:or_generator$19938 ($reduce_or).
Mapping dma_top.$auto$pmuxtree.cc:37:or_generator$19958 ($reduce_or).
Mapping dma_top.$auto$pmuxtree.cc:37:or_generator$19992 ($reduce_or).
Mapping dma_top.$auto$pmuxtree.cc:37:or_generator$20012 ($reduce_or).
Mapping dma_top.$auto$pmuxtree.cc:37:or_generator$20154 ($reduce_or).
Mapping dma_top.$auto$pmuxtree.cc:37:or_generator$20266 ($reduce_or).
Mapping dma_top.$auto$pmuxtree.cc:37:or_generator$20536 ($reduce_or).
Mapping dma_top.$auto$pmuxtree.cc:37:or_generator$20560 ($reduce_or).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$19916 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$19918 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$19920 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$19924 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$19930 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$19934 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$19936 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$19940 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$19946 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$19948 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$19950 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$19952 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$19956 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$19960 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$19966 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$19968 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$19970 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$19974 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$19980 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$19984 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$19986 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$19990 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$19994 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20000 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20002 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20004 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20006 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20010 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20014 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20020 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20022 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20024 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20028 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20034 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20036 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20038 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20042 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20048 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20050 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20052 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20056 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20062 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20064 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20066 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20070 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20076 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20078 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20080 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20084 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20090 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20092 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20094 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20098 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20104 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20106 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20108 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20112 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20118 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20120 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20122 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20126 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20132 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20134 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20136 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20140 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20146 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20150 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20152 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20156 ($mux).
Mapping dma_top.$auto$ff.cc:262:slice$18865 ($adffe).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20164 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20168 ($mux).
Mapping dma_top.$auto$ff.cc:262:slice$18883 ($adffe).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20176 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20180 ($mux).
Mapping dma_top.$auto$ff.cc:262:slice$18874 ($adffe).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20188 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20192 ($mux).
Mapping dma_top.$auto$ff.cc:262:slice$18871 ($adffe).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20200 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20204 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20212 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20216 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20224 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20228 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20236 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20240 ($mux).
Mapping dma_top.$auto$ff.cc:262:slice$18862 ($adffe).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20248 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20252 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20258 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20260 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20262 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20264 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20268 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20274 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20276 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20296 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20298 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20300 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20304 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20310 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20312 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20314 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20318 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20324 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20326 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20328 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20332 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20338 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20340 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20342 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20346 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20352 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20354 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20356 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20360 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20366 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20368 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20370 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20374 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20380 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20382 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20384 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20388 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20394 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20396 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20398 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20402 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20408 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20410 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20412 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20416 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20422 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20424 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20426 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20430 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20436 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20438 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20440 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20444 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20450 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20452 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20454 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20458 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20464 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20466 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20468 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20472 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20478 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20480 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20482 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20486 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20492 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20494 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20496 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20500 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20506 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20508 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20510 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20514 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20520 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20522 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20526 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20528 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20530 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20534 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20538 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20544 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20546 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20550 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20552 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20554 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20558 ($mux).
Mapping dma_top.$auto$pmuxtree.cc:65:recursive_mux_generator$20562 ($mux).
Mapping dma_top.$flatten\ahb_mst0.$verific$and_524$dma_ahbmst.v:416$7777 ($and).
Mapping dma_top.$flatten\ahb_mst0.$verific$and_526$dma_ahbmst.v:416$7779 ($and).
Mapping dma_top.$flatten\ahb_mst0.$verific$and_530$dma_ahbmst.v:420$7784 ($and).
Mapping dma_top.$flatten\ahb_mst0.$verific$and_533$dma_ahbmst.v:464$7788 ($and).
Mapping dma_top.$flatten\ahb_mst0.$verific$and_536$dma_ahbmst.v:465$7803 ($and).
Mapping dma_top.$flatten\ahb_mst0.$verific$and_537$dma_ahbmst.v:466$7804 ($and).
Mapping dma_top.$flatten\ahb_mst0.$verific$and_541$dma_ahbmst.v:467$7808 ($and).
Mapping dma_top.$flatten\ahb_mst0.$verific$and_562$dma_ahbmst.v:526$7835 ($and).
Mapping dma_top.$flatten\ahb_mst0.$verific$and_572$dma_ahbmst.v:626$7871 ($and).
Mapping dma_top.$flatten\ahb_mst0.$verific$and_574$dma_ahbmst.v:627$7874 ($and).
Mapping dma_top.$flatten\ahb_mst0.$verific$and_579$dma_ahbmst.v:793$7910 ($and).
Mapping dma_top.$flatten\ahb_mst0.$verific$and_580$dma_ahbmst.v:794$7912 ($and).
Mapping dma_top.$flatten\ahb_mst0.$verific$and_582$dma_ahbmst.v:794$7914 ($and).
Mapping dma_top.$flatten\ahb_mst0.$verific$and_589$dma_ahbmst.v:645$7873 ($and).
Mapping dma_top.$flatten\ahb_mst0.$verific$equal_179$dma_ahbmst.v:710$7892 ($eq).
Mapping dma_top.$flatten\ahb_mst0.$verific$equal_180$dma_ahbmst.v:711$7893 ($eq).
Mapping dma_top.$flatten\ahb_mst0.$verific$equal_181$dma_ahbmst.v:712$7894 ($eq).
Mapping dma_top.$flatten\ahb_mst0.$verific$equal_21$dma_ahbmst.v:378$7755 ($eq).
Mapping dma_top.$flatten\ahb_mst0.$verific$equal_340$dma_ahbmst.v:976$7986 ($eq).
Mapping dma_top.$flatten\ahb_mst0.$verific$equal_393$dma_ahbmst.v:1026$8029 ($eq).
Mapping dma_top.$flatten\ahb_mst0.$verific$equal_394$dma_ahbmst.v:1027$8030 ($eq).
Mapping dma_top.$flatten\ahb_mst0.$verific$equal_395$dma_ahbmst.v:1028$8031 ($eq).
Mapping dma_top.$flatten\ahb_mst0.$verific$equal_396$dma_ahbmst.v:1029$8032 ($eq).
Mapping dma_top.$flatten\ahb_mst0.$verific$equal_397$dma_ahbmst.v:1030$8033 ($eq).
Mapping dma_top.$flatten\ahb_mst0.$verific$equal_398$dma_ahbmst.v:1031$8034 ($eq).
Mapping dma_top.$flatten\ahb_mst0.$verific$i112$dma_ahbmst.v:549$7843 ($or).
Mapping dma_top.$flatten\ahb_mst0.$verific$i113$dma_ahbmst.v:550$7844 ($or).
Mapping dma_top.$flatten\ahb_mst0.$verific$i165$dma_ahbmst.v:668$7880 ($and).
Mapping dma_top.$flatten\ahb_mst0.$verific$i167$dma_ahbmst.v:670$7882 ($and).
Mapping dma_top.$auto$ff.cc:262:slice$18859 ($adffe).
Mapping dma_top.$flatten\ahb_mst0.$verific$i170$dma_ahbmst.v:671$7884 ($mux).
Mapping dma_top.$flatten\ahb_mst0.$verific$i172$dma_ahbmst.v:683$7886 ($and).
Mapping dma_top.$flatten\ahb_mst0.$verific$i174$dma_ahbmst.v:684$7888 ($and).
Mapping dma_top.$flatten\ahb_mst0.$verific$i248$dma_ahbmst.v:887$7938 ($and).
Mapping dma_top.$flatten\ahb_mst0.$verific$i25$dma_ahbmst.v:382$7758 ($or).
Mapping dma_top.$flatten\ahb_mst0.$verific$i268$dma_ahbmst.v:925$7950 ($not).
Mapping dma_top.$flatten\ahb_mst0.$verific$i269$dma_ahbmst.v:925$7951 ($and).
Mapping dma_top.$flatten\ahb_mst0.$verific$i27$dma_ahbmst.v:383$7760 ($or).
Mapping dma_top.$flatten\ahb_mst0.$verific$i270$dma_ahbmst.v:925$7952 ($or).
Mapping dma_top.$flatten\ahb_mst0.$verific$i272$dma_ahbmst.v:925$7954 ($and).
Mapping dma_top.$auto$ff.cc:262:slice$18856 ($adffe).
Mapping dma_top.$flatten\ahb_mst0.$verific$i275$dma_ahbmst.v:926$7956 ($mux).
Mapping dma_top.$flatten\ahb_mst0.$verific$i279$dma_ahbmst.v:928$7960 ($and).
Mapping dma_top.$flatten\ahb_mst0.$verific$i283$dma_ahbmst.v:929$7962 ($or).
Mapping dma_top.$flatten\ahb_mst0.$verific$i284$dma_ahbmst.v:929$7963 ($or).
Mapping dma_top.$flatten\ahb_mst0.$verific$i285$dma_ahbmst.v:929$7964 ($and).
Mapping dma_top.$flatten\ahb_mst0.$verific$i287$dma_ahbmst.v:939$7966 ($not).
Mapping dma_top.$flatten\ahb_mst0.$verific$i288$dma_ahbmst.v:939$7967 ($and).
Mapping dma_top.$flatten\ahb_mst0.$verific$i289$dma_ahbmst.v:939$7968 ($or).
Mapping dma_top.$flatten\ahb_mst0.$verific$i290$dma_ahbmst.v:939$7969 ($not).
Mapping dma_top.$flatten\ahb_mst0.$verific$i291$dma_ahbmst.v:939$7970 ($and).
Mapping dma_top.$flatten\ahb_mst0.$verific$i294$dma_ahbmst.v:940$7972 ($and).
Mapping dma_top.$flatten\ahb_mst0.$verific$i297$dma_ahbmst.v:940$7973 ($and).
Mapping dma_top.$flatten\ahb_mst0.$verific$i30$dma_ahbmst.v:388$7763 ($not).
Mapping dma_top.$flatten\ahb_mst0.$verific$i31$dma_ahbmst.v:388$7764 ($and).
Mapping dma_top.$flatten\ahb_mst0.$verific$i32$dma_ahbmst.v:388$7765 ($and).
Mapping dma_top.$flatten\ahb_mst0.$verific$i33$dma_ahbmst.v:388$7766 ($or).
Mapping dma_top.$flatten\ahb_mst0.$verific$i337$dma_ahbmst.v:972$7978 ($not).
Mapping dma_top.$flatten\ahb_mst0.$verific$i339$dma_ahbmst.v:975$7982 ($not).
Mapping dma_top.$flatten\ahb_mst0.$verific$i348$dma_ahbmst.v:986$7991 ($and).
Mapping dma_top.$flatten\ahb_mst0.$verific$i35$dma_ahbmst.v:389$7767 ($not).
Mapping dma_top.$flatten\ahb_mst0.$verific$i352$dma_ahbmst.v:999$7995 ($and).
Mapping dma_top.$flatten\ahb_mst0.$verific$i353$dma_ahbmst.v:999$7996 ($and).
Mapping dma_top.$flatten\ahb_mst0.$verific$i354$dma_ahbmst.v:1000$7997 ($and).
Mapping dma_top.$flatten\ahb_mst0.$verific$i355$dma_ahbmst.v:1000$7998 ($and).
Mapping dma_top.$flatten\ahb_mst0.$verific$i356$dma_ahbmst.v:1000$7999 ($or).
Mapping dma_top.$flatten\ahb_mst0.$verific$i359$dma_ahbmst.v:1001$8001 ($and).
Mapping dma_top.$flatten\ahb_mst0.$verific$i36$dma_ahbmst.v:389$7768 ($and).
Mapping dma_top.$flatten\ahb_mst0.$verific$i361$dma_ahbmst.v:1002$8002 ($and).
Mapping dma_top.$flatten\ahb_mst0.$verific$i362$dma_ahbmst.v:1002$8003 ($or).
Mapping dma_top.$flatten\ahb_mst0.$verific$i365$dma_ahbmst.v:1003$8005 ($and).
Mapping dma_top.$flatten\ahb_mst0.$verific$i367$dma_ahbmst.v:1004$8006 ($and).
Mapping dma_top.$flatten\ahb_mst0.$verific$i368$dma_ahbmst.v:1004$8007 ($or).
Mapping dma_top.$flatten\ahb_mst0.$verific$i37$dma_ahbmst.v:389$7769 ($and).
Mapping dma_top.$flatten\ahb_mst0.$verific$i370$dma_ahbmst.v:1005$8009 ($and).
Mapping dma_top.$flatten\ahb_mst0.$verific$i371$dma_ahbmst.v:1006$8010 ($and).
Mapping dma_top.$flatten\ahb_mst0.$verific$i372$dma_ahbmst.v:1006$8011 ($or).
Mapping dma_top.$flatten\ahb_mst0.$verific$i374$dma_ahbmst.v:1007$8013 ($and).
Mapping dma_top.$flatten\ahb_mst0.$verific$i375$dma_ahbmst.v:1007$8014 ($and).
Mapping dma_top.$flatten\ahb_mst0.$verific$i376$dma_ahbmst.v:1008$8015 ($and).
Mapping dma_top.$flatten\ahb_mst0.$verific$i377$dma_ahbmst.v:1008$8016 ($and).
Mapping dma_top.$flatten\ahb_mst0.$verific$i378$dma_ahbmst.v:1008$8017 ($or).
Mapping dma_top.$flatten\ahb_mst0.$verific$i38$dma_ahbmst.v:389$7770 ($and).
Mapping dma_top.$flatten\ahb_mst0.$verific$i381$dma_ahbmst.v:1009$8019 ($and).
Mapping dma_top.$flatten\ahb_mst0.$verific$i383$dma_ahbmst.v:1010$8020 ($and).
Mapping dma_top.$flatten\ahb_mst0.$verific$i384$dma_ahbmst.v:1010$8021 ($or).
Mapping dma_top.$flatten\ahb_mst0.$verific$i387$dma_ahbmst.v:1011$8023 ($and).
Mapping dma_top.$flatten\ahb_mst0.$verific$i389$dma_ahbmst.v:1012$8024 ($and).
Mapping dma_top.$flatten\ahb_mst0.$verific$i39$dma_ahbmst.v:389$7771 ($or).
Mapping dma_top.$flatten\ahb_mst0.$verific$i390$dma_ahbmst.v:1012$8025 ($or).
Mapping dma_top.$flatten\ahb_mst0.$verific$i391$dma_ahbmst.v:1014$8026 ($or).
Mapping dma_top.$flatten\ahb_mst0.$verific$i40$dma_ahbmst.v:389$7772 ($and).
Mapping dma_top.$flatten\ahb_mst0.$verific$i464$dma_ahbmst.v:1163$8089 ($and).
Mapping dma_top.$flatten\ahb_mst0.$verific$i466$dma_ahbmst.v:1163$8090 ($and).
Mapping dma_top.$flatten\ahb_mst0.$verific$i469$dma_ahbmst.v:1164$8093 ($and).
Mapping dma_top.$flatten\ahb_mst0.$verific$i470$dma_ahbmst.v:1164$8094 ($or).
Mapping dma_top.$flatten\ahb_mst0.$verific$i472$dma_ahbmst.v:1166$8096 ($and).
Mapping dma_top.$flatten\ahb_mst0.$verific$i473$dma_ahbmst.v:1166$8097 ($and).
Mapping dma_top.$flatten\ahb_mst0.$verific$i474$dma_ahbmst.v:1166$8098 ($or).
Mapping dma_top.$flatten\ahb_mst0.$verific$i480$dma_ahbmst.v:1171$8100 ($not).
Mapping dma_top.$flatten\ahb_mst0.$verific$i481$dma_ahbmst.v:1171$8101 ($and).
Mapping dma_top.$flatten\ahb_mst0.$verific$i483$dma_ahbmst.v:1173$8102 ($and).
Mapping dma_top.$auto$ff.cc:262:slice$18830 ($adffe).
Mapping dma_top.$flatten\ahb_mst0.$verific$i486$dma_ahbmst.v:1174$8104 ($mux).
Mapping dma_top.$flatten\ahb_mst0.$verific$i56$dma_ahbmst.v:443$7790 ($not).
Mapping dma_top.$flatten\ahb_mst0.$verific$i57$dma_ahbmst.v:443$7791 ($not).
Mapping dma_top.$flatten\ahb_mst0.$verific$i571$dma_ahbmst.v:575$7848 ($not).
Mapping dma_top.$flatten\ahb_mst0.$verific$i58$dma_ahbmst.v:443$7792 ($and).
Mapping dma_top.$flatten\ahb_mst0.$verific$i584$dma_ahbmst.v:804$7915 ($not).
Mapping dma_top.$flatten\ahb_mst0.$verific$i59$dma_ahbmst.v:443$7793 ($and).
Mapping dma_top.$flatten\ahb_mst0.$verific$i60$dma_ahbmst.v:443$7794 ($and).
Mapping dma_top.$flatten\ahb_mst0.$verific$i62$dma_ahbmst.v:443$7796 ($and).
Mapping dma_top.$flatten\ahb_mst0.$verific$i65$dma_ahbmst.v:444$7799 ($and).
Mapping dma_top.$flatten\ahb_mst0.$verific$i83$dma_ahbmst.v:491$7817 ($or).
Mapping dma_top.$flatten\ahb_mst0.$verific$i84$dma_ahbmst.v:492$7818 ($or).
Mapping dma_top.$flatten\ahb_mst0.$verific$i88$dma_ahbmst.v:501$7822 ($not).
Mapping dma_top.$flatten\ahb_mst0.$verific$inv_523$dma_ahbmst.v:416$7776 ($not).
Mapping dma_top.$flatten\ahb_mst0.$verific$inv_525$dma_ahbmst.v:416$7778 ($not).
Mapping dma_top.$flatten\ahb_mst0.$verific$inv_586$dma_ahbmst.v:482$7813 ($not).
Mapping dma_top.$flatten\ahb_mst0.$verific$inv_590$dma_ahbmst.v:793$7875 ($not).
Mapping dma_top.$flatten\ahb_mst0.$verific$mux_118$dma_ahbmst.v:571$7849 ($mux).
Mapping dma_top.$flatten\ahb_mst0.$verific$mux_121$dma_ahbmst.v:580$7852 ($bmux).
Mapping dma_top.$flatten\ahb_mst0.$verific$mux_229$dma_ahbmst.v:850$7932 ($bmux).
Mapping dma_top.$flatten\ahb_mst0.$verific$mux_234$dma_ahbmst.v:858$7933 ($bmux).
Mapping dma_top.$flatten\ahb_mst0.$verific$mux_239$dma_ahbmst.v:866$7934 ($bmux).
Mapping dma_top.$flatten\ahb_mst0.$verific$mux_244$dma_ahbmst.v:874$7935 ($bmux).
Mapping dma_top.$flatten\ahb_mst0.$verific$mux_245$dma_ahbmst.v:878$7936 ($mux).
Mapping dma_top.$flatten\ahb_mst0.$verific$mux_406$dma_ahbmst.v:1074$8043 ($bmux).
Mapping dma_top.$flatten\ahb_mst0.$verific$mx_cmd_st_reg$dma_ahbmst.v:586$7856 ($adff).
Mapping dma_top.$flatten\ahb_mst0.$verific$or_540$dma_ahbmst.v:467$7807 ($or).
Mapping dma_top.$flatten\ahb_mst0.$verific$or_542$dma_ahbmst.v:467$7809 ($or).
Mapping dma_top.$flatten\ahb_mst0.$verific$or_547$dma_ahbmst.v:482$7815 ($or).
Mapping dma_top.$flatten\ahb_mst0.$verific$or_568$dma_ahbmst.v:545$7841 ($or).
Mapping dma_top.$flatten\ahb_mst0.$verific$or_577$dma_ahbmst.v:652$7877 ($or).
Mapping dma_top.$flatten\ahb_mst0.$verific$or_584$dma_ahbmst.v:422$8114 ($or).
Mapping dma_top.$flatten\ahb_mst0.$verific$or_585$dma_ahbmst.v:478$7786 ($or).
Mapping dma_top.$flatten\ahb_mst0.$verific$or_587$dma_ahbmst.v:541$7814 ($or).
Mapping dma_top.$flatten\ahb_mst0.$verific$or_591$dma_ahbmst.v:794$7878 ($or).
Mapping dma_top.$flatten\ahb_mst0.$verific$reduce_and_28$dma_ahbmst.v:386$7762 ($reduce_and).
Mapping dma_top.$flatten\ahb_mst0.$verific$reduce_nor_182$dma_ahbmst.v:714$7895 ($not).
Mapping dma_top.$flatten\ahb_mst0.$verific$reduce_nor_182$dma_ahbmst.v:714$7896 ($reduce_or).
Mapping dma_top.$flatten\ahb_mst0.$verific$reduce_nor_337$dma_ahbmst.v:972$7979 ($not).
Mapping dma_top.$flatten\ahb_mst0.$verific$reduce_nor_337$dma_ahbmst.v:972$7980 ($reduce_or).
Mapping dma_top.$flatten\ahb_mst0.$verific$reduce_nor_339$dma_ahbmst.v:975$7983 ($not).
Mapping dma_top.$flatten\ahb_mst0.$verific$reduce_nor_339$dma_ahbmst.v:975$7984 ($reduce_or).
Mapping dma_top.$flatten\ahb_mst0.$verific$reduce_nor_341$dma_ahbmst.v:978$7987 ($not).
Mapping dma_top.$flatten\ahb_mst0.$verific$reduce_nor_341$dma_ahbmst.v:978$7988 ($reduce_or).
Mapping dma_top.$flatten\ahb_mst1.$verific$and_547$dma_ahbmst.v:416$8496 ($and).
Mapping dma_top.$flatten\ahb_mst1.$verific$and_549$dma_ahbmst.v:416$8498 ($and).
Mapping dma_top.$flatten\ahb_mst1.$verific$and_553$dma_ahbmst.v:420$8502 ($and).
Mapping dma_top.$flatten\ahb_mst1.$verific$and_558$dma_ahbmst.v:464$8508 ($and).
Mapping dma_top.$flatten\ahb_mst1.$verific$and_561$dma_ahbmst.v:465$8523 ($and).
Mapping dma_top.$flatten\ahb_mst1.$verific$and_562$dma_ahbmst.v:466$8524 ($and).
Mapping dma_top.$flatten\ahb_mst1.$verific$and_566$dma_ahbmst.v:467$8528 ($and).
Mapping dma_top.$flatten\ahb_mst1.$verific$and_588$dma_ahbmst.v:526$8556 ($and).
Mapping dma_top.$flatten\ahb_mst1.$verific$and_598$dma_ahbmst.v:625$8572 ($and).
Mapping dma_top.$flatten\ahb_mst1.$verific$and_600$dma_ahbmst.v:626$8596 ($and).
Mapping dma_top.$flatten\ahb_mst1.$verific$and_605$dma_ahbmst.v:644$8602 ($and).
Mapping dma_top.$flatten\ahb_mst1.$verific$and_606$dma_ahbmst.v:645$8604 ($and).
Mapping dma_top.$flatten\ahb_mst1.$verific$and_607$dma_ahbmst.v:651$8606 ($and).
Mapping dma_top.$flatten\ahb_mst1.$verific$and_608$dma_ahbmst.v:652$8607 ($and).
Mapping dma_top.$flatten\ahb_mst1.$verific$and_614$dma_ahbmst.v:793$8648 ($and).
Mapping dma_top.$flatten\ahb_mst1.$verific$and_615$dma_ahbmst.v:794$8649 ($and).
Mapping dma_top.$flatten\ahb_mst1.$verific$and_620$dma_ahbmst.v:422$8855 ($and).
Mapping dma_top.$flatten\ahb_mst1.$verific$and_621$dma_ahbmst.v:427$8505 ($and).
Mapping dma_top.$flatten\ahb_mst1.$verific$and_625$dma_ahbmst.v:627$8562 ($and).
Mapping dma_top.$flatten\ahb_mst1.$verific$and_626$dma_ahbmst.v:635$8599 ($and).
Mapping dma_top.$flatten\ahb_mst1.$verific$and_628$dma_ahbmst.v:660$8609 ($and).
Mapping dma_top.$flatten\ahb_mst1.$verific$and_629$dma_ahbmst.v:794$8612 ($and).
Mapping dma_top.$flatten\ahb_mst1.$verific$equal_195$dma_ahbmst.v:710$8629 ($eq).
Mapping dma_top.$flatten\ahb_mst1.$verific$equal_196$dma_ahbmst.v:711$8630 ($eq).
Mapping dma_top.$flatten\ahb_mst1.$verific$equal_197$dma_ahbmst.v:712$8631 ($eq).
Mapping dma_top.$flatten\ahb_mst1.$verific$equal_21$dma_ahbmst.v:378$8472 ($eq).
Mapping dma_top.$flatten\ahb_mst1.$verific$equal_358$dma_ahbmst.v:976$8724 ($eq).
Mapping dma_top.$flatten\ahb_mst1.$verific$equal_411$dma_ahbmst.v:1026$8767 ($eq).
Mapping dma_top.$flatten\ahb_mst1.$verific$equal_412$dma_ahbmst.v:1027$8768 ($eq).
Mapping dma_top.$flatten\ahb_mst1.$verific$equal_413$dma_ahbmst.v:1028$8769 ($eq).
Mapping dma_top.$flatten\ahb_mst1.$verific$equal_414$dma_ahbmst.v:1029$8770 ($eq).
Mapping dma_top.$flatten\ahb_mst1.$verific$equal_415$dma_ahbmst.v:1030$8771 ($eq).
Mapping dma_top.$flatten\ahb_mst1.$verific$equal_416$dma_ahbmst.v:1031$8772 ($eq).
Mapping dma_top.$flatten\ahb_mst1.$verific$i118$dma_ahbmst.v:549$8565 ($or).
Mapping dma_top.$flatten\ahb_mst1.$verific$i119$dma_ahbmst.v:550$8566 ($or).
Mapping dma_top.$flatten\ahb_mst1.$verific$i157$dma_ahbmst.v:625$8594 ($not).
Mapping dma_top.$flatten\ahb_mst1.$verific$i181$dma_ahbmst.v:668$8617 ($and).
Mapping dma_top.$flatten\ahb_mst1.$verific$i183$dma_ahbmst.v:670$8619 ($and).
Mapping dma_top.$auto$ff.cc:262:slice$18868 ($adffe).
Mapping dma_top.$flatten\ahb_mst1.$verific$i186$dma_ahbmst.v:671$8621 ($mux).
Mapping dma_top.$flatten\ahb_mst1.$verific$i188$dma_ahbmst.v:683$8623 ($and).
Mapping dma_top.$flatten\ahb_mst1.$verific$i190$dma_ahbmst.v:684$8625 ($and).
Mapping dma_top.$flatten\ahb_mst1.$verific$i266$dma_ahbmst.v:887$8676 ($and).
Mapping dma_top.$flatten\ahb_mst1.$verific$i276$dma_ahbmst.v:900$8683 ($and).
Mapping dma_top.$flatten\ahb_mst1.$verific$i297$dma_ahbmst.v:928$8698 ($and).
Mapping dma_top.$flatten\ahb_mst1.$verific$i30$dma_ahbmst.v:388$8480 ($not).
Mapping dma_top.$flatten\ahb_mst1.$verific$i303$dma_ahbmst.v:929$8702 ($and).
Mapping dma_top.$flatten\ahb_mst1.$verific$i305$dma_ahbmst.v:939$8704 ($not).
Mapping dma_top.$flatten\ahb_mst1.$verific$i306$dma_ahbmst.v:939$8705 ($and).
Mapping dma_top.$flatten\ahb_mst1.$verific$i307$dma_ahbmst.v:939$8706 ($or).
Mapping dma_top.$flatten\ahb_mst1.$verific$i308$dma_ahbmst.v:939$8707 ($not).
Mapping dma_top.$flatten\ahb_mst1.$verific$i309$dma_ahbmst.v:939$8708 ($and).
Mapping dma_top.$flatten\ahb_mst1.$verific$i31$dma_ahbmst.v:388$8481 ($and).
Mapping dma_top.$flatten\ahb_mst1.$verific$i312$dma_ahbmst.v:940$8710 ($and).
Mapping dma_top.$flatten\ahb_mst1.$verific$i315$dma_ahbmst.v:940$8711 ($and).
Mapping dma_top.$flatten\ahb_mst1.$verific$i32$dma_ahbmst.v:388$8482 ($and).
Mapping dma_top.$flatten\ahb_mst1.$verific$i33$dma_ahbmst.v:388$8483 ($or).
Mapping dma_top.$flatten\ahb_mst1.$verific$i35$dma_ahbmst.v:389$8484 ($not).
Mapping dma_top.$flatten\ahb_mst1.$verific$i355$dma_ahbmst.v:972$8716 ($not).
Mapping dma_top.$flatten\ahb_mst1.$verific$i357$dma_ahbmst.v:975$8720 ($not).
Mapping dma_top.$flatten\ahb_mst1.$verific$i36$dma_ahbmst.v:389$8485 ($and).
Mapping dma_top.$flatten\ahb_mst1.$verific$i366$dma_ahbmst.v:986$8729 ($and).
Mapping dma_top.$flatten\ahb_mst1.$verific$i37$dma_ahbmst.v:389$8486 ($and).
Mapping dma_top.$flatten\ahb_mst1.$verific$i370$dma_ahbmst.v:999$8733 ($and).
Mapping dma_top.$flatten\ahb_mst1.$verific$i371$dma_ahbmst.v:999$8734 ($and).
Mapping dma_top.$flatten\ahb_mst1.$verific$i372$dma_ahbmst.v:1000$8735 ($and).
Mapping dma_top.$flatten\ahb_mst1.$verific$i373$dma_ahbmst.v:1000$8736 ($and).
Mapping dma_top.$flatten\ahb_mst1.$verific$i374$dma_ahbmst.v:1000$8737 ($or).
Mapping dma_top.$flatten\ahb_mst1.$verific$i377$dma_ahbmst.v:1001$8739 ($and).
Mapping dma_top.$flatten\ahb_mst1.$verific$i379$dma_ahbmst.v:1002$8740 ($and).
Mapping dma_top.$flatten\ahb_mst1.$verific$i38$dma_ahbmst.v:389$8487 ($and).
Mapping dma_top.$flatten\ahb_mst1.$verific$i380$dma_ahbmst.v:1002$8741 ($or).
Mapping dma_top.$flatten\ahb_mst1.$verific$i383$dma_ahbmst.v:1003$8743 ($and).
Mapping dma_top.$flatten\ahb_mst1.$verific$i385$dma_ahbmst.v:1004$8744 ($and).
Mapping dma_top.$flatten\ahb_mst1.$verific$i386$dma_ahbmst.v:1004$8745 ($or).
Mapping dma_top.$flatten\ahb_mst1.$verific$i388$dma_ahbmst.v:1005$8747 ($and).
Mapping dma_top.$flatten\ahb_mst1.$verific$i389$dma_ahbmst.v:1006$8748 ($and).
Mapping dma_top.$flatten\ahb_mst1.$verific$i39$dma_ahbmst.v:389$8488 ($or).
Mapping dma_top.$flatten\ahb_mst1.$verific$i390$dma_ahbmst.v:1006$8749 ($or).
Mapping dma_top.$flatten\ahb_mst1.$verific$i392$dma_ahbmst.v:1007$8751 ($and).
Mapping dma_top.$flatten\ahb_mst1.$verific$i393$dma_ahbmst.v:1007$8752 ($and).
Mapping dma_top.$flatten\ahb_mst1.$verific$i394$dma_ahbmst.v:1008$8753 ($and).
Mapping dma_top.$flatten\ahb_mst1.$verific$i395$dma_ahbmst.v:1008$8754 ($and).
Mapping dma_top.$flatten\ahb_mst1.$verific$i396$dma_ahbmst.v:1008$8755 ($or).
Mapping dma_top.$flatten\ahb_mst1.$verific$i399$dma_ahbmst.v:1009$8757 ($and).
Mapping dma_top.$flatten\ahb_mst1.$verific$i40$dma_ahbmst.v:389$8489 ($and).
Mapping dma_top.$flatten\ahb_mst1.$verific$i401$dma_ahbmst.v:1010$8758 ($and).
Mapping dma_top.$flatten\ahb_mst1.$verific$i402$dma_ahbmst.v:1010$8759 ($or).
Mapping dma_top.$flatten\ahb_mst1.$verific$i405$dma_ahbmst.v:1011$8761 ($and).
Mapping dma_top.$flatten\ahb_mst1.$verific$i407$dma_ahbmst.v:1012$8762 ($and).
Mapping dma_top.$flatten\ahb_mst1.$verific$i408$dma_ahbmst.v:1012$8763 ($or).
Mapping dma_top.$flatten\ahb_mst1.$verific$i409$dma_ahbmst.v:1014$8764 ($or).
Mapping dma_top.$flatten\ahb_mst1.$verific$i43$dma_ahbmst.v:414$8492 ($not).
Mapping dma_top.$flatten\ahb_mst1.$verific$i533$dma_ahbmst.v:1213$8861 ($or).
Mapping dma_top.$flatten\ahb_mst1.$verific$i534$dma_ahbmst.v:1213$8862 ($not).
Mapping dma_top.$flatten\ahb_mst1.$verific$i598$dma_ahbmst.v:575$8570 ($not).
Mapping dma_top.$flatten\ahb_mst1.$verific$i61$dma_ahbmst.v:443$8511 ($not).
Mapping dma_top.$flatten\ahb_mst1.$verific$i62$dma_ahbmst.v:443$8512 ($and).
Mapping dma_top.$flatten\ahb_mst1.$verific$i620$dma_ahbmst.v:804$8653 ($not).
Mapping dma_top.$flatten\ahb_mst1.$verific$i63$dma_ahbmst.v:443$8513 ($and).
Mapping dma_top.$flatten\ahb_mst1.$verific$i65$dma_ahbmst.v:443$8515 ($not).
Mapping dma_top.$flatten\ahb_mst1.$verific$i66$dma_ahbmst.v:443$8516 ($and).
Mapping dma_top.$flatten\ahb_mst1.$verific$i69$dma_ahbmst.v:444$8519 ($and).
Mapping dma_top.$flatten\ahb_mst1.$verific$i88$dma_ahbmst.v:491$8538 ($or).
Mapping dma_top.$flatten\ahb_mst1.$verific$i89$dma_ahbmst.v:492$8539 ($or).
Mapping dma_top.$flatten\ahb_mst1.$verific$i93$dma_ahbmst.v:501$8543 ($not).
Mapping dma_top.$flatten\ahb_mst1.$verific$inv_599$dma_ahbmst.v:626$8595 ($not).
Mapping dma_top.$flatten\ahb_mst1.$verific$inv_610$dma_ahbmst.v:660$8610 ($not).
Mapping dma_top.$flatten\ahb_mst1.$verific$mux_124$dma_ahbmst.v:571$8571 ($mux).
Mapping dma_top.$flatten\ahb_mst1.$verific$mux_127$dma_ahbmst.v:580$8575 ($bmux).
Mapping dma_top.$flatten\ahb_mst1.$verific$mux_200$dma_ahbmst.v:716$8636 ($mux).
Mapping dma_top.$flatten\ahb_mst1.$verific$mux_209$dma_ahbmst.v:764$8642 ($mux).
Mapping dma_top.$flatten\ahb_mst1.$verific$mux_263$dma_ahbmst.v:878$8674 ($mux).
Mapping dma_top.$flatten\ahb_mst1.$verific$mux_424$dma_ahbmst.v:1074$8781 ($bmux).
Mapping dma_top.$flatten\ahb_mst1.$verific$mx_cmd_st_reg$dma_ahbmst.v:586$8579 ($adff).
Mapping dma_top.$flatten\ahb_mst1.$verific$or_554$dma_ahbmst.v:422$8503 ($or).
Mapping dma_top.$flatten\ahb_mst1.$verific$or_557$dma_ahbmst.v:427$8507 ($or).
Mapping dma_top.$flatten\ahb_mst1.$verific$or_567$dma_ahbmst.v:467$8529 ($or).
Mapping dma_top.$flatten\ahb_mst1.$verific$or_568$dma_ahbmst.v:471$8530 ($or).
Mapping dma_top.$flatten\ahb_mst1.$verific$or_590$dma_ahbmst.v:534$8558 ($or).
Mapping dma_top.$flatten\ahb_mst1.$verific$or_604$dma_ahbmst.v:635$8601 ($or).
Mapping dma_top.$flatten\ahb_mst1.$verific$or_612$dma_ahbmst.v:660$8613 ($or).
Mapping dma_top.$flatten\ahb_mst1.$verific$or_616$dma_ahbmst.v:794$8650 ($or).
Mapping dma_top.$flatten\ahb_mst1.$verific$or_618$dma_ahbmst.v:799$8652 ($or).
Mapping dma_top.$flatten\ahb_mst1.$verific$or_622$dma_ahbmst.v:478$8506 ($or).
Mapping dma_top.$flatten\ahb_mst1.$verific$or_624$dma_ahbmst.v:541$8535 ($or).
Mapping dma_top.$flatten\ahb_mst1.$verific$or_627$dma_ahbmst.v:652$8600 ($or).
Mapping dma_top.$flatten\ahb_mst1.$verific$reduce_and_28$dma_ahbmst.v:386$8479 ($reduce_and).
Mapping dma_top.$flatten\ahb_mst1.$verific$reduce_nor_198$dma_ahbmst.v:714$8632 ($not).
Mapping dma_top.$flatten\ahb_mst1.$verific$reduce_nor_198$dma_ahbmst.v:714$8633 ($reduce_or).
Mapping dma_top.$flatten\ahb_mst1.$verific$reduce_nor_353$dma_ahbmst.v:967$8713 ($not).
Mapping dma_top.$flatten\ahb_mst1.$verific$reduce_nor_353$dma_ahbmst.v:967$8714 ($reduce_or).
Mapping dma_top.$flatten\ahb_mst1.$verific$reduce_nor_355$dma_ahbmst.v:972$8717 ($not).
Mapping dma_top.$flatten\ahb_mst1.$verific$reduce_nor_355$dma_ahbmst.v:972$8718 ($reduce_or).
Mapping dma_top.$flatten\ahb_mst1.$verific$reduce_nor_357$dma_ahbmst.v:975$8721 ($not).
Mapping dma_top.$flatten\ahb_mst1.$verific$reduce_nor_357$dma_ahbmst.v:975$8722 ($reduce_or).
Mapping dma_top.$flatten\ahb_mst1.$verific$reduce_nor_359$dma_ahbmst.v:978$8725 ($not).
Mapping dma_top.$flatten\ahb_mst1.$verific$reduce_nor_359$dma_ahbmst.v:978$8726 ($reduce_or).
Mapping dma_top.$flatten\ahb_slv.$verific$br_st_reg$dma_ahbslv.v:407$18200 ($adff).
Mapping dma_top.$flatten\ahb_slv.$verific$equal_117$dma_ahbslv.v:377$18180 ($eq).
Mapping dma_top.$flatten\ahb_slv.$verific$equal_131$dma_ahbslv.v:394$18191 ($eq).
Mapping dma_top.$flatten\ahb_slv.$verific$equal_132$dma_ahbslv.v:396$18192 ($eq).
Mapping dma_top.$flatten\ahb_slv.$verific$equal_133$dma_ahbslv.v:398$18193 ($eq).
Mapping dma_top.$flatten\ahb_slv.$verific$equal_148$dma_ahbslv.v:417$18207 ($eq).
Mapping dma_top.$flatten\ahb_slv.$verific$equal_150$dma_ahbslv.v:419$18209 ($eq).
Mapping dma_top.$flatten\ahb_slv.$verific$equal_3$dma_ahbslv.v:235$18086 ($eq).
Mapping dma_top.$flatten\ahb_slv.$verific$equal_37$dma_ahbslv.v:279$18115 ($eq).
Mapping dma_top.$flatten\ahb_slv.$verific$equal_39$dma_ahbslv.v:280$18117 ($logic_not).
Mapping dma_top.$flatten\ahb_slv.$verific$equal_5$dma_ahbslv.v:236$18088 ($eq).
Mapping dma_top.$flatten\ahb_slv.$verific$equal_60$dma_ahbslv.v:307$18138 ($eq).
Mapping dma_top.$flatten\ahb_slv.$verific$equal_74$dma_ahbslv.v:324$18147 ($eq).
Mapping dma_top.$flatten\ahb_slv.$verific$equal_76$dma_ahbslv.v:325$18149 ($logic_not).
Mapping dma_top.$flatten\ahb_slv.$verific$hreadyout_reg_reg$dma_ahbslv.v:315$18143 ($adff).
Mapping dma_top.$flatten\ahb_slv.$verific$i104$dma_ahbslv.v:357$18172 ($and).
Mapping dma_top.$flatten\ahb_slv.$verific$i105$dma_ahbslv.v:357$18173 ($and).
Mapping dma_top.$flatten\ahb_slv.$verific$i107$dma_ahbslv.v:358$18175 ($or).
Mapping dma_top.$auto$ff.cc:262:slice$19474 ($adffe).
Mapping dma_top.$flatten\ahb_slv.$verific$i116$dma_ahbslv.v:366$18178 ($mux).
Mapping dma_top.$flatten\ahb_slv.$verific$i12$dma_ahbslv.v:247$18094 ($or).
Mapping dma_top.$flatten\ahb_slv.$verific$i120$dma_ahbslv.v:378$18182 ($and).
Mapping dma_top.$flatten\ahb_slv.$verific$i121$dma_ahbslv.v:378$18183 ($and).
Mapping dma_top.$flatten\ahb_slv.$verific$i122$dma_ahbslv.v:378$18184 ($and).
Mapping dma_top.$flatten\ahb_slv.$verific$i13$dma_ahbslv.v:247$18095 ($and).
Mapping dma_top.$flatten\ahb_slv.$verific$i14$dma_ahbslv.v:247$18096 ($and).
Mapping dma_top.$flatten\ahb_slv.$verific$i143$dma_ahbslv.v:412$18201 ($and).
Mapping dma_top.$flatten\ahb_slv.$verific$i144$dma_ahbslv.v:412$18202 ($and).
Mapping dma_top.$flatten\ahb_slv.$verific$i146$dma_ahbslv.v:415$18204 ($or).
Mapping dma_top.$flatten\ahb_slv.$verific$i147$dma_ahbslv.v:415$18205 ($or).
Mapping dma_top.$flatten\ahb_slv.$verific$i153$dma_ahbslv.v:421$18211 ($or).
Mapping dma_top.$flatten\ahb_slv.$verific$i154$dma_ahbslv.v:421$18212 ($not).
Mapping dma_top.$flatten\ahb_slv.$verific$i155$dma_ahbslv.v:421$18213 ($and).
Mapping dma_top.$auto$ff.cc:262:slice$19473 ($adffe).
Mapping dma_top.$flatten\ahb_slv.$verific$i169$dma_ahbslv.v:435$18220 ($mux).
Mapping dma_top.$flatten\ahb_slv.$verific$i170$dma_ahbslv.v:435$18221 ($mux).
Mapping dma_top.$flatten\ahb_slv.$verific$i183$dma_ahbslv.v:452$18230 ($xor).
Mapping dma_top.$flatten\ahb_slv.$verific$i185$dma_ahbslv.v:459$18232 ($and).
Mapping dma_top.$flatten\ahb_slv.$verific$i187$dma_ahbslv.v:460$18234 ($and).
Mapping dma_top.$flatten\ahb_slv.$verific$i42$dma_ahbslv.v:281$18119 ($and).
Mapping dma_top.$flatten\ahb_slv.$verific$i44$dma_ahbslv.v:282$18121 ($and).
Mapping dma_top.$flatten\ahb_slv.$verific$i60$dma_ahbslv.v:307$18137 ($and).
Mapping dma_top.$flatten\ahb_slv.$verific$i62$dma_ahbslv.v:307$18139 ($and).
Mapping dma_top.$flatten\ahb_slv.$verific$i70$dma_ahbslv.v:315$18142 ($mux).
Mapping dma_top.$flatten\ahb_slv.$verific$i73$dma_ahbslv.v:322$18145 ($and).
Mapping dma_top.$flatten\ahb_slv.$verific$i79$dma_ahbslv.v:326$18151 ($and).
Mapping dma_top.$flatten\ahb_slv.$verific$i8$dma_ahbslv.v:239$18090 ($and).
Mapping dma_top.$flatten\ahb_slv.$verific$i81$dma_ahbslv.v:327$18153 ($and).
Mapping dma_top.$flatten\ahb_slv.$verific$i9$dma_ahbslv.v:239$18091 ($and).
Mapping dma_top.$flatten\ahb_slv.$verific$inv_225$dma_ahbslv.v:395$18261 ($not).
Mapping dma_top.$auto$ff.cc:262:slice$19470 ($adffe).
Mapping dma_top.$flatten\ahb_slv.$verific$mux_179$dma_ahbslv.v:448$18227 ($mux).
Mapping dma_top.$flatten\ahb_slv.$verific$mux_180$dma_ahbslv.v:448$18228 ($mux).
Mapping dma_top.$flatten\ahb_slv.$verific$mux_188$dma_ahbslv.v:462$18236 ($mux).
Mapping dma_top.$flatten\ahb_slv.$verific$mux_189$dma_ahbslv.v:462$18237 ($mux).
Mapping dma_top.$flatten\ahb_slv.$verific$mux_191$dma_ahbslv.v:464$18239 ($mux).
Mapping dma_top.$flatten\ahb_slv.$verific$mux_192$dma_ahbslv.v:464$18240 ($mux).
Mapping dma_top.$flatten\ahb_slv.$verific$mux_194$dma_ahbslv.v:466$18242 ($mux).
Mapping dma_top.$flatten\ahb_slv.$verific$mux_195$dma_ahbslv.v:466$18243 ($mux).
Mapping dma_top.$flatten\ahb_slv.$verific$mux_197$dma_ahbslv.v:468$18245 ($mux).
Mapping dma_top.$flatten\ahb_slv.$verific$mux_198$dma_ahbslv.v:468$18246 ($mux).
Mapping dma_top.$flatten\ahb_slv.$verific$mux_201$dma_ahbslv.v:475$18249 ($mux).
Mapping dma_top.$flatten\ahb_slv.$verific$mux_202$dma_ahbslv.v:475$18250 ($mux).
Mapping dma_top.$flatten\ahb_slv.$verific$mux_204$dma_ahbslv.v:477$18252 ($mux).
Mapping dma_top.$flatten\ahb_slv.$verific$mux_205$dma_ahbslv.v:477$18253 ($mux).
Mapping dma_top.$flatten\ahb_slv.$verific$mux_207$dma_ahbslv.v:479$18255 ($mux).
Mapping dma_top.$flatten\ahb_slv.$verific$mux_208$dma_ahbslv.v:479$18256 ($mux).
Mapping dma_top.$flatten\ahb_slv.$verific$mux_210$dma_ahbslv.v:481$18258 ($mux).
Mapping dma_top.$flatten\ahb_slv.$verific$mux_211$dma_ahbslv.v:481$18259 ($mux).
Mapping dma_top.$flatten\ahb_slv.$verific$mux_45$dma_ahbslv.v:285$18123 ($mux).
Mapping dma_top.$flatten\ahb_slv.$verific$mux_46$dma_ahbslv.v:285$18124 ($mux).
Mapping dma_top.$flatten\ahb_slv.$verific$mux_48$dma_ahbslv.v:287$18126 ($mux).
Mapping dma_top.$flatten\ahb_slv.$verific$mux_49$dma_ahbslv.v:287$18127 ($mux).
Mapping dma_top.$flatten\ahb_slv.$verific$mux_51$dma_ahbslv.v:289$18129 ($mux).
Mapping dma_top.$flatten\ahb_slv.$verific$mux_52$dma_ahbslv.v:289$18130 ($mux).
Mapping dma_top.$flatten\ahb_slv.$verific$mux_54$dma_ahbslv.v:291$18132 ($mux).
Mapping dma_top.$flatten\ahb_slv.$verific$mux_55$dma_ahbslv.v:291$18133 ($mux).
Mapping dma_top.$flatten\ahb_slv.$verific$mux_82$dma_ahbslv.v:334$18155 ($mux).
Mapping dma_top.$flatten\ahb_slv.$verific$mux_83$dma_ahbslv.v:334$18156 ($mux).
Mapping dma_top.$flatten\ahb_slv.$verific$mux_85$dma_ahbslv.v:336$18158 ($mux).
Mapping dma_top.$flatten\ahb_slv.$verific$mux_86$dma_ahbslv.v:336$18159 ($mux).
Mapping dma_top.$flatten\ahb_slv.$verific$mux_88$dma_ahbslv.v:338$18161 ($mux).
Mapping dma_top.$flatten\ahb_slv.$verific$mux_89$dma_ahbslv.v:338$18162 ($mux).
Mapping dma_top.$flatten\ahb_slv.$verific$mux_91$dma_ahbslv.v:340$18164 ($mux).
Mapping dma_top.$flatten\ahb_slv.$verific$mux_92$dma_ahbslv.v:340$18165 ($mux).
Mapping dma_top.$flatten\ahb_slv.$verific$reduce_nor_134$dma_ahbslv.v:401$18194 ($not).
Mapping dma_top.$flatten\ahb_slv.$verific$reduce_nor_134$dma_ahbslv.v:401$18195 ($reduce_or).
Mapping dma_top.$flatten\ch_sel.$verific$Mux_654$dma_chsel.v:1585$14129 ($bmux).
Mapping dma_top.$flatten\ch_sel.$verific$Mux_663$dma_chsel.v:1635$14138 ($bmux).
Mapping dma_top.$auto$ff.cc:262:slice$19469 ($adffe).
Mapping dma_top.$flatten\ch_sel.$verific$and_764$dma_chsel.v:537$13862 ($and).
Mapping dma_top.$flatten\ch_sel.$verific$and_765$dma_chsel.v:537$13861 ($and).
Mapping dma_top.$flatten\ch_sel.$verific$and_768$dma_chsel.v:537$13860 ($and).
Mapping dma_top.$flatten\ch_sel.$verific$and_770$dma_chsel.v:646$13870 ($and).
Mapping dma_top.$flatten\ch_sel.$verific$and_771$dma_chsel.v:645$13869 ($and).
Mapping dma_top.$flatten\ch_sel.$verific$and_772$dma_chsel.v:645$13865 ($and).
Mapping dma_top.$flatten\ch_sel.$verific$and_776$dma_chsel.v:646$13866 ($and).
Mapping dma_top.$flatten\ch_sel.$verific$and_779$dma_chsel.v:1021$14049 ($and).
Mapping dma_top.$flatten\ch_sel.$verific$and_782$dma_chsel.v:1180$14096 ($and).
Mapping dma_top.$flatten\ch_sel.$verific$and_784$dma_chsel.v:1659$14140 ($and).
Mapping dma_top.$flatten\ch_sel.$verific$and_786$dma_chsel.v:1682$14142 ($and).
Mapping dma_top.$flatten\ch_sel.$verific$and_788$dma_chsel.v:1705$14145 ($and).
Mapping dma_top.$flatten\ch_sel.$verific$and_790$dma_chsel.v:1728$14155 ($and).
Mapping dma_top.$flatten\ch_sel.$verific$and_793$dma_chsel.v:483$13838 ($and).
Mapping dma_top.$flatten\ch_sel.$verific$arb_ch_sel_reg$dma_chsel.v:858$13966 ($dlatch).
Mapping dma_top.$flatten\ch_sel.$verific$arb_chcsr_reg_reg$dma_chsel.v:1310$14104 ($adff).
Mapping dma_top.$flatten\ch_sel.$verific$de_stup_d1_reg$dma_chsel.v:905$14001 ($adff).
Mapping dma_top.$flatten\ch_sel.$verific$dma_ack_reg$dma_chsel.v:1085$14051 ($adff).
Mapping dma_top.$flatten\ch_sel.$verific$dma_reqd1_reg$dma_chsel.v:459$13836 ($dff).
Mapping dma_top.$flatten\ch_sel.$verific$dma_reqd2_reg$dma_chsel.v:485$13839 ($dff).
Mapping dma_top.$flatten\ch_sel.$verific$dma_tc_reg$dma_chsel.v:1243$14098 ($adff).
Mapping dma_top.$flatten\ch_sel.$verific$equal_106$dma_chsel.v:537$13858 ($eq).
Mapping dma_top.$flatten\ch_sel.$verific$equal_175$dma_chsel.v:656$13871 ($logic_not).
Mapping dma_top.$flatten\ch_sel.$verific$equal_176$dma_chsel.v:657$13872 ($eq).
Mapping dma_top.$flatten\ch_sel.$verific$equal_177$dma_chsel.v:658$13873 ($eq).
Mapping dma_top.$flatten\ch_sel.$verific$equal_183$dma_chsel.v:674$13881 ($logic_not).
Mapping dma_top.$flatten\ch_sel.$verific$equal_184$dma_chsel.v:675$13882 ($eq).
Mapping dma_top.$flatten\ch_sel.$verific$equal_185$dma_chsel.v:676$13883 ($eq).
Mapping dma_top.$flatten\ch_sel.$verific$equal_191$dma_chsel.v:695$13891 ($logic_not).
Mapping dma_top.$flatten\ch_sel.$verific$equal_192$dma_chsel.v:696$13892 ($eq).
Mapping dma_top.$flatten\ch_sel.$verific$equal_193$dma_chsel.v:697$13893 ($eq).
Mapping dma_top.$flatten\ch_sel.$verific$equal_199$dma_chsel.v:715$13901 ($logic_not).
Mapping dma_top.$flatten\ch_sel.$verific$equal_200$dma_chsel.v:716$13902 ($eq).
Mapping dma_top.$flatten\ch_sel.$verific$equal_201$dma_chsel.v:717$13903 ($eq).
Mapping dma_top.$flatten\ch_sel.$verific$equal_207$dma_chsel.v:735$13911 ($logic_not).
Mapping dma_top.$flatten\ch_sel.$verific$equal_208$dma_chsel.v:736$13912 ($eq).
Mapping dma_top.$flatten\ch_sel.$verific$equal_209$dma_chsel.v:737$13913 ($eq).
Mapping dma_top.$flatten\ch_sel.$verific$equal_215$dma_chsel.v:755$13921 ($logic_not).
Mapping dma_top.$flatten\ch_sel.$verific$equal_216$dma_chsel.v:756$13922 ($eq).
Mapping dma_top.$flatten\ch_sel.$verific$equal_217$dma_chsel.v:757$13923 ($eq).
Mapping dma_top.$flatten\ch_sel.$verific$equal_223$dma_chsel.v:775$13931 ($logic_not).
Mapping dma_top.$flatten\ch_sel.$verific$equal_224$dma_chsel.v:776$13932 ($eq).
Mapping dma_top.$flatten\ch_sel.$verific$equal_225$dma_chsel.v:777$13933 ($eq).
Mapping dma_top.$flatten\ch_sel.$verific$equal_231$dma_chsel.v:795$13941 ($logic_not).
Mapping dma_top.$flatten\ch_sel.$verific$equal_232$dma_chsel.v:796$13942 ($eq).
Mapping dma_top.$flatten\ch_sel.$verific$equal_233$dma_chsel.v:797$13943 ($eq).
Mapping dma_top.$flatten\ch_sel.$verific$equal_261$dma_chsel.v:854$13973 ($logic_not).
Mapping dma_top.$flatten\ch_sel.$verific$equal_262$dma_chsel.v:855$13974 ($eq).
Mapping dma_top.$flatten\ch_sel.$verific$equal_263$dma_chsel.v:856$13975 ($eq).
Mapping dma_top.$flatten\ch_sel.$verific$equal_264$dma_chsel.v:857$13976 ($eq).
Mapping dma_top.$flatten\ch_sel.$verific$equal_57$dma_chsel.v:517$13849 ($logic_not).
Mapping dma_top.$flatten\ch_sel.$verific$equal_64$dma_chsel.v:519$13850 ($eq).
Mapping dma_top.$flatten\ch_sel.$verific$equal_71$dma_chsel.v:522$13851 ($eq).
Mapping dma_top.$flatten\ch_sel.$verific$equal_736$dma_chsel.v:1708$14146 ($eq).
Mapping dma_top.$flatten\ch_sel.$verific$equal_739$dma_chsel.v:1710$14147 ($eq).
Mapping dma_top.$flatten\ch_sel.$verific$equal_742$dma_chsel.v:1713$14148 ($eq).
Mapping dma_top.$flatten\ch_sel.$verific$equal_745$dma_chsel.v:1716$14149 ($eq).
Mapping dma_top.$flatten\ch_sel.$verific$equal_748$dma_chsel.v:1719$14150 ($eq).
Mapping dma_top.$flatten\ch_sel.$verific$equal_751$dma_chsel.v:1722$14151 ($eq).
Mapping dma_top.$flatten\ch_sel.$verific$equal_754$dma_chsel.v:1725$14152 ($eq).
Mapping dma_top.$flatten\ch_sel.$verific$equal_757$dma_chsel.v:1728$14153 ($eq).
Mapping dma_top.$flatten\ch_sel.$verific$equal_78$dma_chsel.v:525$13852 ($eq).
Mapping dma_top.$flatten\ch_sel.$verific$equal_85$dma_chsel.v:528$13853 ($eq).
Mapping dma_top.$flatten\ch_sel.$verific$equal_92$dma_chsel.v:531$13854 ($eq).
Mapping dma_top.$flatten\ch_sel.$verific$equal_99$dma_chsel.v:534$13855 ($eq).
Mapping dma_top.$flatten\ch_sel.$verific$i285$dma_chsel.v:871$13987 ($not).
Mapping dma_top.$flatten\ch_sel.$verific$i286$dma_chsel.v:871$13988 ($and).
Mapping dma_top.$flatten\ch_sel.$verific$i292$dma_chsel.v:887$13990 ($and).
Mapping dma_top.$flatten\ch_sel.$verific$i293$dma_chsel.v:887$13991 ($or).
Mapping dma_top.$flatten\ch_sel.$verific$i295$dma_chsel.v:889$13992 ($not).
Mapping dma_top.$flatten\ch_sel.$verific$i296$dma_chsel.v:889$13993 ($not).
Mapping dma_top.$flatten\ch_sel.$verific$i297$dma_chsel.v:889$13994 ($and).
Mapping dma_top.$flatten\ch_sel.$verific$i298$dma_chsel.v:889$13995 ($and).
Mapping dma_top.$auto$ff.cc:262:slice$19468 ($adffe).
Mapping dma_top.$flatten\ch_sel.$verific$i301$dma_chsel.v:890$13998 ($mux).
Mapping dma_top.$flatten\ch_sel.$verific$i309$dma_chsel.v:920$14002 ($and).
Mapping dma_top.$flatten\ch_sel.$verific$i310$dma_chsel.v:921$14003 ($or).
Mapping dma_top.$flatten\ch_sel.$verific$i311$dma_chsel.v:921$14004 ($or).
Mapping dma_top.$flatten\ch_sel.$verific$i315$dma_chsel.v:965$14006 ($not).
Mapping dma_top.$flatten\ch_sel.$verific$i316$dma_chsel.v:965$14007 ($and).
Mapping dma_top.$flatten\ch_sel.$verific$i317$dma_chsel.v:965$14008 ($and).
Mapping dma_top.$flatten\ch_sel.$verific$i318$dma_chsel.v:965$14009 ($and).
Mapping dma_top.$flatten\ch_sel.$verific$i319$dma_chsel.v:965$14010 ($not).
Mapping dma_top.$flatten\ch_sel.$verific$i326$dma_chsel.v:973$14011 ($not).
Mapping dma_top.$flatten\ch_sel.$verific$i327$dma_chsel.v:973$14012 ($and).
Mapping dma_top.$flatten\ch_sel.$verific$i328$dma_chsel.v:973$14013 ($and).
Mapping dma_top.$flatten\ch_sel.$verific$i329$dma_chsel.v:973$14014 ($and).
Mapping dma_top.$flatten\ch_sel.$verific$i330$dma_chsel.v:973$14015 ($not).
Mapping dma_top.$flatten\ch_sel.$verific$i337$dma_chsel.v:981$14016 ($not).
Mapping dma_top.$flatten\ch_sel.$verific$i338$dma_chsel.v:981$14017 ($and).
Mapping dma_top.$flatten\ch_sel.$verific$i339$dma_chsel.v:981$14018 ($and).
Mapping dma_top.$flatten\ch_sel.$verific$i340$dma_chsel.v:981$14019 ($and).
Mapping dma_top.$flatten\ch_sel.$verific$i341$dma_chsel.v:981$14020 ($not).
Mapping dma_top.$flatten\ch_sel.$verific$i348$dma_chsel.v:989$14021 ($not).
Mapping dma_top.$flatten\ch_sel.$verific$i349$dma_chsel.v:989$14022 ($and).
Mapping dma_top.$flatten\ch_sel.$verific$i350$dma_chsel.v:989$14023 ($and).
Mapping dma_top.$flatten\ch_sel.$verific$i351$dma_chsel.v:989$14024 ($and).
Mapping dma_top.$flatten\ch_sel.$verific$i352$dma_chsel.v:989$14025 ($not).
Mapping dma_top.$flatten\ch_sel.$verific$i359$dma_chsel.v:997$14026 ($not).
Mapping dma_top.$flatten\ch_sel.$verific$i360$dma_chsel.v:997$14027 ($and).
Mapping dma_top.$flatten\ch_sel.$verific$i361$dma_chsel.v:997$14028 ($and).
Mapping dma_top.$flatten\ch_sel.$verific$i362$dma_chsel.v:997$14029 ($and).
Mapping dma_top.$flatten\ch_sel.$verific$i363$dma_chsel.v:997$14030 ($not).
Mapping dma_top.$flatten\ch_sel.$verific$i370$dma_chsel.v:1005$14031 ($not).
Mapping dma_top.$flatten\ch_sel.$verific$i371$dma_chsel.v:1005$14032 ($and).
Mapping dma_top.$flatten\ch_sel.$verific$i372$dma_chsel.v:1005$14033 ($and).
Mapping dma_top.$flatten\ch_sel.$verific$i373$dma_chsel.v:1005$14034 ($and).
Mapping dma_top.$flatten\ch_sel.$verific$i374$dma_chsel.v:1005$14035 ($not).
Mapping dma_top.$flatten\ch_sel.$verific$i381$dma_chsel.v:1013$14036 ($not).
Mapping dma_top.$flatten\ch_sel.$verific$i382$dma_chsel.v:1013$14037 ($and).
Mapping dma_top.$flatten\ch_sel.$verific$i383$dma_chsel.v:1013$14038 ($and).
Mapping dma_top.$flatten\ch_sel.$verific$i384$dma_chsel.v:1013$14039 ($and).
Mapping dma_top.$flatten\ch_sel.$verific$i385$dma_chsel.v:1013$14040 ($not).
Mapping dma_top.$flatten\ch_sel.$verific$i392$dma_chsel.v:1021$14043 ($not).
Mapping dma_top.$flatten\ch_sel.$verific$i393$dma_chsel.v:1021$14044 ($and).
Mapping dma_top.$flatten\ch_sel.$verific$i394$dma_chsel.v:1021$14045 ($and).
Mapping dma_top.$flatten\ch_sel.$verific$i395$dma_chsel.v:1021$14046 ($and).
Mapping dma_top.$flatten\ch_sel.$verific$i396$dma_chsel.v:1021$14047 ($not).
Mapping dma_top.$flatten\ch_sel.$verific$i40$dma_chsel.v:487$13840 ($mux).
Mapping dma_top.$flatten\ch_sel.$verific$i42$dma_chsel.v:489$13841 ($mux).
Mapping dma_top.$flatten\ch_sel.$verific$i44$dma_chsel.v:492$13842 ($mux).
Mapping dma_top.$flatten\ch_sel.$verific$i46$dma_chsel.v:495$13843 ($mux).
Mapping dma_top.$flatten\ch_sel.$verific$i465$dma_chsel.v:1151$14061 ($and).
Mapping dma_top.$flatten\ch_sel.$verific$i467$dma_chsel.v:1153$14063 ($not).
Mapping dma_top.$flatten\ch_sel.$verific$i468$dma_chsel.v:1153$14064 ($and).
Mapping dma_top.$flatten\ch_sel.$verific$i469$dma_chsel.v:1153$14065 ($and).
Mapping dma_top.$flatten\ch_sel.$verific$i470$dma_chsel.v:1153$14066 ($and).
Mapping dma_top.$flatten\ch_sel.$verific$i476$dma_chsel.v:1156$14067 ($not).
Mapping dma_top.$flatten\ch_sel.$verific$i477$dma_chsel.v:1156$14068 ($and).
Mapping dma_top.$flatten\ch_sel.$verific$i478$dma_chsel.v:1156$14069 ($and).
Mapping dma_top.$flatten\ch_sel.$verific$i479$dma_chsel.v:1156$14070 ($and).
Mapping dma_top.$flatten\ch_sel.$verific$i48$dma_chsel.v:498$13844 ($mux).
Mapping dma_top.$flatten\ch_sel.$verific$i485$dma_chsel.v:1160$14071 ($not).
Mapping dma_top.$flatten\ch_sel.$verific$i486$dma_chsel.v:1160$14072 ($and).
Mapping dma_top.$flatten\ch_sel.$verific$i487$dma_chsel.v:1160$14073 ($and).
Mapping dma_top.$flatten\ch_sel.$verific$i488$dma_chsel.v:1160$14074 ($and).
Mapping dma_top.$flatten\ch_sel.$verific$i494$dma_chsel.v:1164$14075 ($not).
Mapping dma_top.$flatten\ch_sel.$verific$i495$dma_chsel.v:1164$14076 ($and).
Mapping dma_top.$flatten\ch_sel.$verific$i496$dma_chsel.v:1164$14077 ($and).
Mapping dma_top.$flatten\ch_sel.$verific$i497$dma_chsel.v:1164$14078 ($and).
Mapping dma_top.$flatten\ch_sel.$verific$i50$dma_chsel.v:501$13845 ($mux).
Mapping dma_top.$flatten\ch_sel.$verific$i503$dma_chsel.v:1168$14079 ($not).
Mapping dma_top.$flatten\ch_sel.$verific$i504$dma_chsel.v:1168$14080 ($and).
Mapping dma_top.$flatten\ch_sel.$verific$i505$dma_chsel.v:1168$14081 ($and).
Mapping dma_top.$flatten\ch_sel.$verific$i506$dma_chsel.v:1168$14082 ($and).
Mapping dma_top.$flatten\ch_sel.$verific$i512$dma_chsel.v:1172$14083 ($not).
Mapping dma_top.$flatten\ch_sel.$verific$i513$dma_chsel.v:1172$14084 ($and).
Mapping dma_top.$flatten\ch_sel.$verific$i514$dma_chsel.v:1172$14085 ($and).
Mapping dma_top.$flatten\ch_sel.$verific$i515$dma_chsel.v:1172$14086 ($and).
Mapping dma_top.$flatten\ch_sel.$verific$i52$dma_chsel.v:504$13846 ($mux).
Mapping dma_top.$flatten\ch_sel.$verific$i521$dma_chsel.v:1176$14087 ($not).
Mapping dma_top.$flatten\ch_sel.$verific$i522$dma_chsel.v:1176$14088 ($and).
Mapping dma_top.$flatten\ch_sel.$verific$i523$dma_chsel.v:1176$14089 ($and).
Mapping dma_top.$flatten\ch_sel.$verific$i524$dma_chsel.v:1176$14090 ($and).
Mapping dma_top.$flatten\ch_sel.$verific$i530$dma_chsel.v:1180$14091 ($not).
Mapping dma_top.$flatten\ch_sel.$verific$i531$dma_chsel.v:1180$14092 ($and).
Mapping dma_top.$flatten\ch_sel.$verific$i532$dma_chsel.v:1180$14093 ($and).
Mapping dma_top.$flatten\ch_sel.$verific$i533$dma_chsel.v:1180$14094 ($and).
Mapping dma_top.$flatten\ch_sel.$verific$i54$dma_chsel.v:507$13847 ($mux).
Mapping dma_top.$flatten\ch_sel.$verific$i639$dma_chsel.v:1516$14113 ($or).
Mapping dma_top.$flatten\ch_sel.$verific$i640$dma_chsel.v:1519$14114 ($or).
Mapping dma_top.$flatten\ch_sel.$verific$i641$dma_chsel.v:1522$14115 ($or).
Mapping dma_top.$flatten\ch_sel.$verific$i642$dma_chsel.v:1525$14116 ($or).
Mapping dma_top.$flatten\ch_sel.$verific$i643$dma_chsel.v:1528$14117 ($or).
Mapping dma_top.$flatten\ch_sel.$verific$i644$dma_chsel.v:1531$14118 ($or).
Mapping dma_top.$flatten\ch_sel.$verific$i645$dma_chsel.v:1534$14119 ($or).
Mapping dma_top.$flatten\ch_sel.$verific$inv_766$dma_chsel.v:537$13857 ($not).
Mapping dma_top.$flatten\ch_sel.$verific$inv_767$dma_chsel.v:537$13856 ($not).
Mapping dma_top.$flatten\ch_sel.$verific$inv_773$dma_chsel.v:645$13863 ($not).
Mapping dma_top.$flatten\ch_sel.$verific$inv_775$dma_chsel.v:645$13868 ($not).
Mapping dma_top.$flatten\ch_sel.$verific$mux_182$dma_chsel.v:666$13880 ($mux).
Mapping dma_top.$flatten\ch_sel.$verific$mux_190$dma_chsel.v:684$13890 ($mux).
Mapping dma_top.$flatten\ch_sel.$verific$mux_198$dma_chsel.v:705$13900 ($mux).
Mapping dma_top.$flatten\ch_sel.$verific$mux_206$dma_chsel.v:725$13910 ($mux).
Mapping dma_top.$flatten\ch_sel.$verific$mux_214$dma_chsel.v:745$13920 ($mux).
Mapping dma_top.$flatten\ch_sel.$verific$mux_222$dma_chsel.v:765$13930 ($mux).
Mapping dma_top.$flatten\ch_sel.$verific$mux_230$dma_chsel.v:785$13940 ($mux).
Mapping dma_top.$flatten\ch_sel.$verific$mux_238$dma_chsel.v:805$13950 ($mux).
Mapping dma_top.$flatten\ch_sel.$verific$mux_248$dma_chsel.v:839$13959 ($mux).
Mapping dma_top.$flatten\ch_sel.$verific$mux_249$dma_chsel.v:839$13960 ($mux).
Mapping dma_top.$flatten\ch_sel.$verific$mux_594$dma_chsel.v:1296$14101 ($bmux).
Mapping dma_top.$flatten\ch_sel.$verific$mux_610$dma_chsel.v:1361$14107 ($bmux).
Mapping dma_top.$flatten\ch_sel.$verific$mux_619$dma_chsel.v:1410$14109 ($bmux).
Mapping dma_top.$flatten\ch_sel.$verific$mux_628$dma_chsel.v:1460$14111 ($bmux).
Mapping dma_top.$flatten\ch_sel.$verific$mux_637$dma_chsel.v:1511$14112 ($bmux).
Mapping dma_top.$flatten\ch_sel.$verific$or_239$dma_chsel.v:811$13951 ($or).
Mapping dma_top.$flatten\ch_sel.$verific$or_240$dma_chsel.v:814$13952 ($or).
Mapping dma_top.$flatten\ch_sel.$verific$or_241$dma_chsel.v:817$13953 ($or).
Mapping dma_top.$flatten\ch_sel.$verific$or_242$dma_chsel.v:820$13954 ($or).
Mapping dma_top.$flatten\ch_sel.$verific$or_243$dma_chsel.v:823$13955 ($or).
Mapping dma_top.$flatten\ch_sel.$verific$or_244$dma_chsel.v:826$13956 ($or).
Mapping dma_top.$flatten\ch_sel.$verific$or_245$dma_chsel.v:829$13957 ($or).
Mapping dma_top.$flatten\ch_sel.$verific$or_774$dma_chsel.v:646$13864 ($or).
Mapping dma_top.$flatten\ch_sel.$verific$or_778$dma_chsel.v:1022$14050 ($or).
Mapping dma_top.$flatten\ch_sel.$verific$or_781$dma_chsel.v:1181$14097 ($or).
Mapping dma_top.$flatten\ch_sel.$verific$reduce_nor_178$dma_chsel.v:660$13874 ($not).
Mapping dma_top.$flatten\ch_sel.$verific$reduce_nor_178$dma_chsel.v:660$13875 ($reduce_or).
Mapping dma_top.$flatten\ch_sel.$verific$reduce_nor_186$dma_chsel.v:678$13884 ($not).
Mapping dma_top.$flatten\ch_sel.$verific$reduce_nor_186$dma_chsel.v:678$13885 ($reduce_or).
Mapping dma_top.$flatten\ch_sel.$verific$reduce_nor_194$dma_chsel.v:699$13894 ($not).
Mapping dma_top.$flatten\ch_sel.$verific$reduce_nor_194$dma_chsel.v:699$13895 ($reduce_or).
Mapping dma_top.$flatten\ch_sel.$verific$reduce_nor_202$dma_chsel.v:719$13904 ($not).
Mapping dma_top.$flatten\ch_sel.$verific$reduce_nor_202$dma_chsel.v:719$13905 ($reduce_or).
Mapping dma_top.$flatten\ch_sel.$verific$reduce_nor_210$dma_chsel.v:739$13914 ($not).
Mapping dma_top.$flatten\ch_sel.$verific$reduce_nor_210$dma_chsel.v:739$13915 ($reduce_or).
Mapping dma_top.$flatten\ch_sel.$verific$reduce_nor_218$dma_chsel.v:759$13924 ($not).
Mapping dma_top.$flatten\ch_sel.$verific$reduce_nor_218$dma_chsel.v:759$13925 ($reduce_or).
Mapping dma_top.$flatten\ch_sel.$verific$reduce_nor_226$dma_chsel.v:779$13934 ($not).
Mapping dma_top.$flatten\ch_sel.$verific$reduce_nor_226$dma_chsel.v:779$13935 ($reduce_or).
Mapping dma_top.$flatten\ch_sel.$verific$reduce_nor_234$dma_chsel.v:799$13944 ($not).
Mapping dma_top.$flatten\ch_sel.$verific$reduce_nor_234$dma_chsel.v:799$13945 ($reduce_or).
Mapping dma_top.$flatten\ch_sel.$verific$reduce_nor_265$dma_chsel.v:858$13977 ($not).
Mapping dma_top.$flatten\ch_sel.$verific$reduce_nor_265$dma_chsel.v:858$13978 ($reduce_or).
Mapping dma_top.$flatten\ch_sel.$verific$reduce_or_276$dma_chsel.v:862$13982 ($reduce_or).
Mapping dma_top.$flatten\ch_sel.$verific$vld_req_any_d1_reg$dma_chsel.v:868$13986 ($adff).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb0.$verific$mux_11$dma_rrarb.v:110$17907 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb0.$verific$mux_12$dma_rrarb.v:110$17908 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb0.$verific$mux_13$dma_rrarb.v:110$17909 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb0.$verific$mux_14$dma_rrarb.v:110$17910 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb0.$verific$mux_15$dma_rrarb.v:110$17911 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb0.$verific$mux_16$dma_rrarb.v:110$17912 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb0.$verific$mux_17$dma_rrarb.v:110$17913 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb0.$verific$mux_21$dma_rrarb.v:143$17914 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb0.$verific$mux_22$dma_rrarb.v:143$17915 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb0.$verific$mux_23$dma_rrarb.v:143$17916 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb0.$verific$mux_24$dma_rrarb.v:143$17917 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb0.$verific$mux_25$dma_rrarb.v:143$17918 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb0.$verific$mux_26$dma_rrarb.v:143$17919 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb0.$verific$mux_27$dma_rrarb.v:143$17920 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb0.$verific$mux_31$dma_rrarb.v:174$17921 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb0.$verific$mux_32$dma_rrarb.v:174$17922 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb0.$verific$mux_33$dma_rrarb.v:174$17923 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb0.$verific$mux_34$dma_rrarb.v:174$17924 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb0.$verific$mux_35$dma_rrarb.v:174$17925 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb0.$verific$mux_36$dma_rrarb.v:174$17926 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb0.$verific$mux_37$dma_rrarb.v:174$17927 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb0.$verific$mux_41$dma_rrarb.v:202$17928 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb0.$verific$mux_42$dma_rrarb.v:202$17929 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb0.$verific$mux_43$dma_rrarb.v:202$17930 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb0.$verific$mux_44$dma_rrarb.v:202$17931 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb0.$verific$mux_45$dma_rrarb.v:202$17932 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb0.$verific$mux_46$dma_rrarb.v:202$17933 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb0.$verific$mux_47$dma_rrarb.v:202$17934 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb0.$verific$mux_51$dma_rrarb.v:227$17935 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb0.$verific$mux_52$dma_rrarb.v:227$17936 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb0.$verific$mux_53$dma_rrarb.v:227$17937 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb0.$verific$mux_54$dma_rrarb.v:227$17938 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb0.$verific$mux_55$dma_rrarb.v:227$17939 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb0.$verific$mux_56$dma_rrarb.v:227$17940 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb0.$verific$mux_57$dma_rrarb.v:227$17941 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb0.$verific$mux_61$dma_rrarb.v:249$17942 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb0.$verific$mux_62$dma_rrarb.v:249$17943 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb0.$verific$mux_63$dma_rrarb.v:249$17944 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb0.$verific$mux_64$dma_rrarb.v:249$17945 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb0.$verific$mux_65$dma_rrarb.v:249$17946 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb0.$verific$mux_66$dma_rrarb.v:249$17947 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb0.$verific$mux_67$dma_rrarb.v:249$17948 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb0.$verific$mux_71$dma_rrarb.v:268$17949 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb0.$verific$mux_72$dma_rrarb.v:268$17950 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb0.$verific$mux_73$dma_rrarb.v:268$17951 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb0.$verific$mux_74$dma_rrarb.v:268$17952 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb0.$verific$mux_75$dma_rrarb.v:268$17953 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb0.$verific$mux_76$dma_rrarb.v:268$17954 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb0.$verific$mux_77$dma_rrarb.v:268$17955 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb0.$verific$mux_81$dma_rrarb.v:284$17956 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb0.$verific$mux_82$dma_rrarb.v:284$17957 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb0.$verific$mux_83$dma_rrarb.v:284$17958 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb0.$verific$mux_84$dma_rrarb.v:284$17959 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb0.$verific$mux_85$dma_rrarb.v:284$17960 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb0.$verific$mux_86$dma_rrarb.v:284$17961 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb0.$verific$mux_87$dma_rrarb.v:284$17962 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb0.$verific$mux_90$dma_rrarb.v:289$17964 ($bmux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb0.$verific$mux_91$dma_rrarb.v:286$17965 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb0.$verific$state_reg$dma_rrarb.v:74$17905 ($adff).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb1.$verific$mux_11$dma_rrarb.v:110$17907 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb1.$verific$mux_12$dma_rrarb.v:110$17908 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb1.$verific$mux_13$dma_rrarb.v:110$17909 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb1.$verific$mux_14$dma_rrarb.v:110$17910 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb1.$verific$mux_15$dma_rrarb.v:110$17911 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb1.$verific$mux_16$dma_rrarb.v:110$17912 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb1.$verific$mux_17$dma_rrarb.v:110$17913 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb1.$verific$mux_21$dma_rrarb.v:143$17914 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb1.$verific$mux_22$dma_rrarb.v:143$17915 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb1.$verific$mux_23$dma_rrarb.v:143$17916 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb1.$verific$mux_24$dma_rrarb.v:143$17917 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb1.$verific$mux_25$dma_rrarb.v:143$17918 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb1.$verific$mux_26$dma_rrarb.v:143$17919 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb1.$verific$mux_27$dma_rrarb.v:143$17920 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb1.$verific$mux_31$dma_rrarb.v:174$17921 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb1.$verific$mux_32$dma_rrarb.v:174$17922 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb1.$verific$mux_33$dma_rrarb.v:174$17923 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb1.$verific$mux_34$dma_rrarb.v:174$17924 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb1.$verific$mux_35$dma_rrarb.v:174$17925 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb1.$verific$mux_36$dma_rrarb.v:174$17926 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb1.$verific$mux_37$dma_rrarb.v:174$17927 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb1.$verific$mux_41$dma_rrarb.v:202$17928 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb1.$verific$mux_42$dma_rrarb.v:202$17929 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb1.$verific$mux_43$dma_rrarb.v:202$17930 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb1.$verific$mux_44$dma_rrarb.v:202$17931 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb1.$verific$mux_45$dma_rrarb.v:202$17932 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb1.$verific$mux_46$dma_rrarb.v:202$17933 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb1.$verific$mux_47$dma_rrarb.v:202$17934 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb1.$verific$mux_51$dma_rrarb.v:227$17935 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb1.$verific$mux_52$dma_rrarb.v:227$17936 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb1.$verific$mux_53$dma_rrarb.v:227$17937 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb1.$verific$mux_54$dma_rrarb.v:227$17938 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb1.$verific$mux_55$dma_rrarb.v:227$17939 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb1.$verific$mux_56$dma_rrarb.v:227$17940 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb1.$verific$mux_57$dma_rrarb.v:227$17941 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb1.$verific$mux_61$dma_rrarb.v:249$17942 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb1.$verific$mux_62$dma_rrarb.v:249$17943 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb1.$verific$mux_63$dma_rrarb.v:249$17944 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb1.$verific$mux_64$dma_rrarb.v:249$17945 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb1.$verific$mux_65$dma_rrarb.v:249$17946 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb1.$verific$mux_66$dma_rrarb.v:249$17947 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb1.$verific$mux_67$dma_rrarb.v:249$17948 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb1.$verific$mux_71$dma_rrarb.v:268$17949 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb1.$verific$mux_72$dma_rrarb.v:268$17950 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb1.$verific$mux_73$dma_rrarb.v:268$17951 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb1.$verific$mux_74$dma_rrarb.v:268$17952 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb1.$verific$mux_75$dma_rrarb.v:268$17953 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb1.$verific$mux_76$dma_rrarb.v:268$17954 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb1.$verific$mux_77$dma_rrarb.v:268$17955 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb1.$verific$mux_81$dma_rrarb.v:284$17956 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb1.$verific$mux_82$dma_rrarb.v:284$17957 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb1.$verific$mux_83$dma_rrarb.v:284$17958 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb1.$verific$mux_84$dma_rrarb.v:284$17959 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb1.$verific$mux_85$dma_rrarb.v:284$17960 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb1.$verific$mux_86$dma_rrarb.v:284$17961 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb1.$verific$mux_87$dma_rrarb.v:284$17962 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb1.$verific$mux_90$dma_rrarb.v:289$17964 ($bmux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb1.$verific$mux_91$dma_rrarb.v:286$17965 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb1.$verific$state_reg$dma_rrarb.v:74$17905 ($adff).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb2.$verific$mux_11$dma_rrarb.v:110$17907 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb2.$verific$mux_12$dma_rrarb.v:110$17908 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb2.$verific$mux_13$dma_rrarb.v:110$17909 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb2.$verific$mux_14$dma_rrarb.v:110$17910 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb2.$verific$mux_15$dma_rrarb.v:110$17911 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb2.$verific$mux_16$dma_rrarb.v:110$17912 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb2.$verific$mux_17$dma_rrarb.v:110$17913 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb2.$verific$mux_21$dma_rrarb.v:143$17914 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb2.$verific$mux_22$dma_rrarb.v:143$17915 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb2.$verific$mux_23$dma_rrarb.v:143$17916 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb2.$verific$mux_24$dma_rrarb.v:143$17917 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb2.$verific$mux_25$dma_rrarb.v:143$17918 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb2.$verific$mux_26$dma_rrarb.v:143$17919 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb2.$verific$mux_27$dma_rrarb.v:143$17920 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb2.$verific$mux_31$dma_rrarb.v:174$17921 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb2.$verific$mux_32$dma_rrarb.v:174$17922 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb2.$verific$mux_33$dma_rrarb.v:174$17923 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb2.$verific$mux_34$dma_rrarb.v:174$17924 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb2.$verific$mux_35$dma_rrarb.v:174$17925 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb2.$verific$mux_36$dma_rrarb.v:174$17926 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb2.$verific$mux_37$dma_rrarb.v:174$17927 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb2.$verific$mux_41$dma_rrarb.v:202$17928 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb2.$verific$mux_42$dma_rrarb.v:202$17929 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb2.$verific$mux_43$dma_rrarb.v:202$17930 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb2.$verific$mux_44$dma_rrarb.v:202$17931 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb2.$verific$mux_45$dma_rrarb.v:202$17932 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb2.$verific$mux_46$dma_rrarb.v:202$17933 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb2.$verific$mux_47$dma_rrarb.v:202$17934 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb2.$verific$mux_51$dma_rrarb.v:227$17935 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb2.$verific$mux_52$dma_rrarb.v:227$17936 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb2.$verific$mux_53$dma_rrarb.v:227$17937 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb2.$verific$mux_54$dma_rrarb.v:227$17938 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb2.$verific$mux_55$dma_rrarb.v:227$17939 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb2.$verific$mux_56$dma_rrarb.v:227$17940 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb2.$verific$mux_57$dma_rrarb.v:227$17941 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb2.$verific$mux_61$dma_rrarb.v:249$17942 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb2.$verific$mux_62$dma_rrarb.v:249$17943 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb2.$verific$mux_63$dma_rrarb.v:249$17944 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb2.$verific$mux_64$dma_rrarb.v:249$17945 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb2.$verific$mux_65$dma_rrarb.v:249$17946 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb2.$verific$mux_66$dma_rrarb.v:249$17947 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb2.$verific$mux_67$dma_rrarb.v:249$17948 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb2.$verific$mux_71$dma_rrarb.v:268$17949 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb2.$verific$mux_72$dma_rrarb.v:268$17950 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb2.$verific$mux_73$dma_rrarb.v:268$17951 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb2.$verific$mux_74$dma_rrarb.v:268$17952 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb2.$verific$mux_75$dma_rrarb.v:268$17953 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb2.$verific$mux_76$dma_rrarb.v:268$17954 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb2.$verific$mux_77$dma_rrarb.v:268$17955 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb2.$verific$mux_81$dma_rrarb.v:284$17956 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb2.$verific$mux_82$dma_rrarb.v:284$17957 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb2.$verific$mux_83$dma_rrarb.v:284$17958 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb2.$verific$mux_84$dma_rrarb.v:284$17959 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb2.$verific$mux_85$dma_rrarb.v:284$17960 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb2.$verific$mux_86$dma_rrarb.v:284$17961 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb2.$verific$mux_87$dma_rrarb.v:284$17962 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb2.$verific$mux_90$dma_rrarb.v:289$17964 ($bmux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb2.$verific$mux_91$dma_rrarb.v:286$17965 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb2.$verific$state_reg$dma_rrarb.v:74$17905 ($adff).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb3.$verific$mux_11$dma_rrarb.v:110$17907 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb3.$verific$mux_12$dma_rrarb.v:110$17908 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb3.$verific$mux_13$dma_rrarb.v:110$17909 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb3.$verific$mux_14$dma_rrarb.v:110$17910 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb3.$verific$mux_15$dma_rrarb.v:110$17911 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb3.$verific$mux_16$dma_rrarb.v:110$17912 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb3.$verific$mux_17$dma_rrarb.v:110$17913 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb3.$verific$mux_21$dma_rrarb.v:143$17914 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb3.$verific$mux_22$dma_rrarb.v:143$17915 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb3.$verific$mux_23$dma_rrarb.v:143$17916 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb3.$verific$mux_24$dma_rrarb.v:143$17917 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb3.$verific$mux_25$dma_rrarb.v:143$17918 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb3.$verific$mux_26$dma_rrarb.v:143$17919 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb3.$verific$mux_27$dma_rrarb.v:143$17920 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb3.$verific$mux_31$dma_rrarb.v:174$17921 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb3.$verific$mux_32$dma_rrarb.v:174$17922 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb3.$verific$mux_33$dma_rrarb.v:174$17923 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb3.$verific$mux_34$dma_rrarb.v:174$17924 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb3.$verific$mux_35$dma_rrarb.v:174$17925 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb3.$verific$mux_36$dma_rrarb.v:174$17926 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb3.$verific$mux_37$dma_rrarb.v:174$17927 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb3.$verific$mux_41$dma_rrarb.v:202$17928 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb3.$verific$mux_42$dma_rrarb.v:202$17929 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb3.$verific$mux_43$dma_rrarb.v:202$17930 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb3.$verific$mux_44$dma_rrarb.v:202$17931 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb3.$verific$mux_45$dma_rrarb.v:202$17932 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb3.$verific$mux_46$dma_rrarb.v:202$17933 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb3.$verific$mux_47$dma_rrarb.v:202$17934 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb3.$verific$mux_51$dma_rrarb.v:227$17935 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb3.$verific$mux_52$dma_rrarb.v:227$17936 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb3.$verific$mux_53$dma_rrarb.v:227$17937 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb3.$verific$mux_54$dma_rrarb.v:227$17938 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb3.$verific$mux_55$dma_rrarb.v:227$17939 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb3.$verific$mux_56$dma_rrarb.v:227$17940 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb3.$verific$mux_57$dma_rrarb.v:227$17941 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb3.$verific$mux_61$dma_rrarb.v:249$17942 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb3.$verific$mux_62$dma_rrarb.v:249$17943 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb3.$verific$mux_63$dma_rrarb.v:249$17944 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb3.$verific$mux_64$dma_rrarb.v:249$17945 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb3.$verific$mux_65$dma_rrarb.v:249$17946 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb3.$verific$mux_66$dma_rrarb.v:249$17947 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb3.$verific$mux_67$dma_rrarb.v:249$17948 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb3.$verific$mux_71$dma_rrarb.v:268$17949 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb3.$verific$mux_72$dma_rrarb.v:268$17950 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb3.$verific$mux_73$dma_rrarb.v:268$17951 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb3.$verific$mux_74$dma_rrarb.v:268$17952 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb3.$verific$mux_75$dma_rrarb.v:268$17953 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb3.$verific$mux_76$dma_rrarb.v:268$17954 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb3.$verific$mux_77$dma_rrarb.v:268$17955 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb3.$verific$mux_81$dma_rrarb.v:284$17956 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb3.$verific$mux_82$dma_rrarb.v:284$17957 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb3.$verific$mux_83$dma_rrarb.v:284$17958 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb3.$verific$mux_84$dma_rrarb.v:284$17959 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb3.$verific$mux_85$dma_rrarb.v:284$17960 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb3.$verific$mux_86$dma_rrarb.v:284$17961 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb3.$verific$mux_87$dma_rrarb.v:284$17962 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb3.$verific$mux_90$dma_rrarb.v:289$17964 ($bmux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb3.$verific$mux_91$dma_rrarb.v:286$17965 ($mux).
Mapping dma_top.$flatten\ch_sel.\dma_rrarb3.$verific$state_reg$dma_rrarb.v:74$17905 ($adff).
Mapping dma_top.$flatten\ctl_rf.$verific$and_1967$dma_ctlrf.v:1824$9947 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$and_1968$dma_ctlrf.v:1824$9946 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$and_1975$dma_ctlrf.v:2075$9979 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$and_1976$dma_ctlrf.v:2075$9976 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$and_1979$dma_ctlrf.v:1785$9929 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$and_1982$dma_ctlrf.v:1786$9932 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$and_1985$dma_ctlrf.v:1788$9935 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$be_d1_reg$dma_ctlrf.v:1469$9557 ($dff).
Mapping dma_top.$flatten\ctl_rf.$verific$dmaint_reg$dma_ctlrf.v:1715$9910 ($adff).
Mapping dma_top.$flatten\ctl_rf.$verific$dmaint_tc_reg$dma_ctlrf.v:1721$9912 ($adff).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_12$dma_ctlrf.v:984$9489 ($eq).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_224$dma_ctlrf.v:1290$9522 ($logic_not).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_225$dma_ctlrf.v:1292$9523 ($eq).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_391$dma_ctlrf.v:1477$9562 ($eq).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_394$dma_ctlrf.v:1478$9565 ($eq).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_397$dma_ctlrf.v:1479$9568 ($eq).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_400$dma_ctlrf.v:1480$9571 ($eq).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_403$dma_ctlrf.v:1485$9574 ($eq).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_406$dma_ctlrf.v:1486$9577 ($eq).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_413$dma_ctlrf.v:1491$9584 ($eq).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_416$dma_ctlrf.v:1492$9587 ($eq).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_423$dma_ctlrf.v:1498$9594 ($eq).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_426$dma_ctlrf.v:1499$9597 ($eq).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_433$dma_ctlrf.v:1505$9604 ($eq).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_436$dma_ctlrf.v:1506$9607 ($eq).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_443$dma_ctlrf.v:1512$9614 ($eq).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_446$dma_ctlrf.v:1513$9617 ($eq).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_453$dma_ctlrf.v:1519$9624 ($eq).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_456$dma_ctlrf.v:1520$9627 ($eq).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_463$dma_ctlrf.v:1526$9634 ($eq).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_466$dma_ctlrf.v:1527$9637 ($eq).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_473$dma_ctlrf.v:1533$9644 ($eq).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_476$dma_ctlrf.v:1534$9647 ($eq).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_483$dma_ctlrf.v:1542$9654 ($eq).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_486$dma_ctlrf.v:1543$9657 ($eq).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_489$dma_ctlrf.v:1544$9660 ($eq).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_492$dma_ctlrf.v:1545$9663 ($eq).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_495$dma_ctlrf.v:1547$9666 ($eq).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_498$dma_ctlrf.v:1549$9669 ($eq).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_513$dma_ctlrf.v:1561$9684 ($eq).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_516$dma_ctlrf.v:1562$9687 ($eq).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_519$dma_ctlrf.v:1563$9690 ($eq).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_522$dma_ctlrf.v:1564$9693 ($eq).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_525$dma_ctlrf.v:1566$9696 ($eq).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_528$dma_ctlrf.v:1568$9699 ($eq).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_543$dma_ctlrf.v:1582$9714 ($eq).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_546$dma_ctlrf.v:1583$9717 ($eq).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_549$dma_ctlrf.v:1584$9720 ($eq).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_552$dma_ctlrf.v:1585$9723 ($eq).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_555$dma_ctlrf.v:1587$9726 ($eq).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_558$dma_ctlrf.v:1589$9729 ($eq).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_573$dma_ctlrf.v:1602$9744 ($eq).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_576$dma_ctlrf.v:1603$9747 ($eq).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_579$dma_ctlrf.v:1604$9750 ($eq).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_582$dma_ctlrf.v:1605$9753 ($eq).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_585$dma_ctlrf.v:1607$9756 ($eq).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_588$dma_ctlrf.v:1609$9759 ($eq).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_603$dma_ctlrf.v:1622$9774 ($eq).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_606$dma_ctlrf.v:1623$9777 ($eq).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_609$dma_ctlrf.v:1624$9780 ($eq).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_612$dma_ctlrf.v:1625$9783 ($eq).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_615$dma_ctlrf.v:1627$9786 ($eq).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_618$dma_ctlrf.v:1629$9789 ($eq).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_633$dma_ctlrf.v:1642$9804 ($eq).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_636$dma_ctlrf.v:1643$9807 ($eq).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_639$dma_ctlrf.v:1644$9810 ($eq).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_642$dma_ctlrf.v:1645$9813 ($eq).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_645$dma_ctlrf.v:1647$9816 ($eq).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_648$dma_ctlrf.v:1649$9819 ($eq).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_663$dma_ctlrf.v:1662$9834 ($eq).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_666$dma_ctlrf.v:1663$9837 ($eq).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_669$dma_ctlrf.v:1664$9840 ($eq).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_672$dma_ctlrf.v:1665$9843 ($eq).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_675$dma_ctlrf.v:1667$9846 ($eq).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_678$dma_ctlrf.v:1669$9849 ($eq).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_693$dma_ctlrf.v:1682$9864 ($eq).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_696$dma_ctlrf.v:1683$9867 ($eq).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_699$dma_ctlrf.v:1684$9870 ($eq).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_702$dma_ctlrf.v:1685$9873 ($eq).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_705$dma_ctlrf.v:1687$9876 ($eq).
Mapping dma_top.$flatten\ctl_rf.$verific$equal_708$dma_ctlrf.v:1689$9879 ($eq).
Mapping dma_top.$auto$ff.cc:262:slice$19449 ($adffe).
Mapping dma_top.$flatten\ctl_rf.$verific$i1068$dma_ctlrf.v:2095$9984 ($mux).
Mapping dma_top.$auto$ff.cc:262:slice$19446 ($adffe).
Mapping dma_top.$flatten\ctl_rf.$verific$i1086$dma_ctlrf.v:2113$9988 ($mux).
Mapping dma_top.$flatten\ctl_rf.$verific$i11$dma_ctlrf.v:983$9487 ($and).
Mapping dma_top.$auto$ff.cc:262:slice$19443 ($adffe).
Mapping dma_top.$flatten\ctl_rf.$verific$i1104$dma_ctlrf.v:2133$9992 ($mux).
Mapping dma_top.$auto$ff.cc:262:slice$19440 ($adffe).
Mapping dma_top.$flatten\ctl_rf.$verific$i1122$dma_ctlrf.v:2153$9996 ($mux).
Mapping dma_top.$auto$ff.cc:262:slice$19437 ($adffe).
Mapping dma_top.$flatten\ctl_rf.$verific$i1140$dma_ctlrf.v:2173$10000 ($mux).
Mapping dma_top.$auto$ff.cc:262:slice$19434 ($adffe).
Mapping dma_top.$flatten\ctl_rf.$verific$i1158$dma_ctlrf.v:2193$10004 ($mux).
Mapping dma_top.$auto$ff.cc:262:slice$19431 ($adffe).
Mapping dma_top.$flatten\ctl_rf.$verific$i1176$dma_ctlrf.v:2213$10008 ($mux).
Mapping dma_top.$auto$ff.cc:262:slice$19428 ($adffe).
Mapping dma_top.$flatten\ctl_rf.$verific$i1194$dma_ctlrf.v:2233$10013 ($mux).
Mapping dma_top.$flatten\ctl_rf.$verific$i1198$dma_ctlrf.v:2251$10017 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i12$dma_ctlrf.v:983$9488 ($or).
Mapping dma_top.$flatten\ctl_rf.$verific$i1222$dma_ctlrf.v:2275$10029 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i1231$dma_ctlrf.v:2289$10035 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i1233$dma_ctlrf.v:2290$10037 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i1277$dma_ctlrf.v:2305$10044 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i1279$dma_ctlrf.v:2306$10046 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i1323$dma_ctlrf.v:2322$10051 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i1325$dma_ctlrf.v:2323$10053 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i1369$dma_ctlrf.v:2339$10058 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i1371$dma_ctlrf.v:2340$10060 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i14$dma_ctlrf.v:984$9490 ($or).
Mapping dma_top.$flatten\ctl_rf.$verific$i1415$dma_ctlrf.v:2356$10065 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i1417$dma_ctlrf.v:2357$10067 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i1461$dma_ctlrf.v:2373$10072 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i1463$dma_ctlrf.v:2374$10074 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i1507$dma_ctlrf.v:2390$10079 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i1509$dma_ctlrf.v:2391$10081 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i1553$dma_ctlrf.v:2407$10086 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i1555$dma_ctlrf.v:2408$10088 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i1599$dma_ctlrf.v:2426$10093 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i1601$dma_ctlrf.v:2427$10095 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i1645$dma_ctlrf.v:2442$10100 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i1647$dma_ctlrf.v:2443$10102 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i1691$dma_ctlrf.v:2459$10107 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i1693$dma_ctlrf.v:2460$10109 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i1737$dma_ctlrf.v:2476$10114 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i1739$dma_ctlrf.v:2477$10116 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i1783$dma_ctlrf.v:2493$10121 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i1785$dma_ctlrf.v:2494$10123 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i1829$dma_ctlrf.v:2510$10128 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i1831$dma_ctlrf.v:2511$10130 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i1875$dma_ctlrf.v:2527$10135 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i1877$dma_ctlrf.v:2528$10137 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i19$dma_ctlrf.v:985$9492 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i1921$dma_ctlrf.v:2544$10142 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i1923$dma_ctlrf.v:2545$10144 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i23$dma_ctlrf.v:986$9493 ($or).
Mapping dma_top.$flatten\ctl_rf.$verific$i25$dma_ctlrf.v:987$9494 ($or).
Mapping dma_top.$flatten\ctl_rf.$verific$i28$dma_ctlrf.v:988$9496 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i30$dma_ctlrf.v:988$9497 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i32$dma_ctlrf.v:989$9498 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i33$dma_ctlrf.v:989$9499 ($or).
Mapping dma_top.$flatten\ctl_rf.$verific$i35$dma_ctlrf.v:990$9500 ($or).
Mapping dma_top.$flatten\ctl_rf.$verific$i39$dma_ctlrf.v:991$9502 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i393$dma_ctlrf.v:1477$9563 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i396$dma_ctlrf.v:1478$9566 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i399$dma_ctlrf.v:1479$9569 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i402$dma_ctlrf.v:1480$9572 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i405$dma_ctlrf.v:1485$9575 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i408$dma_ctlrf.v:1486$9578 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i410$dma_ctlrf.v:1487$9580 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i412$dma_ctlrf.v:1488$9582 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i415$dma_ctlrf.v:1491$9585 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i418$dma_ctlrf.v:1492$9588 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i42$dma_ctlrf.v:992$9503 ($or).
Mapping dma_top.$flatten\ctl_rf.$verific$i420$dma_ctlrf.v:1493$9590 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i422$dma_ctlrf.v:1494$9592 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i425$dma_ctlrf.v:1498$9595 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i428$dma_ctlrf.v:1499$9598 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i430$dma_ctlrf.v:1500$9600 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i432$dma_ctlrf.v:1501$9602 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i435$dma_ctlrf.v:1505$9605 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i438$dma_ctlrf.v:1506$9608 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i44$dma_ctlrf.v:993$9504 ($or).
Mapping dma_top.$flatten\ctl_rf.$verific$i440$dma_ctlrf.v:1507$9610 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i442$dma_ctlrf.v:1508$9612 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i445$dma_ctlrf.v:1512$9615 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i448$dma_ctlrf.v:1513$9618 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i450$dma_ctlrf.v:1514$9620 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i452$dma_ctlrf.v:1515$9622 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i455$dma_ctlrf.v:1519$9625 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i458$dma_ctlrf.v:1520$9628 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i460$dma_ctlrf.v:1521$9630 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i462$dma_ctlrf.v:1522$9632 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i465$dma_ctlrf.v:1526$9635 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i468$dma_ctlrf.v:1527$9638 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i470$dma_ctlrf.v:1528$9640 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i472$dma_ctlrf.v:1529$9642 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i475$dma_ctlrf.v:1533$9645 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i478$dma_ctlrf.v:1534$9648 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i480$dma_ctlrf.v:1535$9650 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i482$dma_ctlrf.v:1536$9652 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i485$dma_ctlrf.v:1542$9655 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i488$dma_ctlrf.v:1543$9658 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i491$dma_ctlrf.v:1544$9661 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i494$dma_ctlrf.v:1545$9664 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i497$dma_ctlrf.v:1547$9667 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i5$dma_ctlrf.v:982$9482 ($not).
Mapping dma_top.$flatten\ctl_rf.$verific$i500$dma_ctlrf.v:1549$9670 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i502$dma_ctlrf.v:1551$9672 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i504$dma_ctlrf.v:1552$9674 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i506$dma_ctlrf.v:1553$9676 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i508$dma_ctlrf.v:1554$9678 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i510$dma_ctlrf.v:1556$9680 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i512$dma_ctlrf.v:1558$9682 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i515$dma_ctlrf.v:1561$9685 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i518$dma_ctlrf.v:1562$9688 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i521$dma_ctlrf.v:1563$9691 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i524$dma_ctlrf.v:1564$9694 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i527$dma_ctlrf.v:1566$9697 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i530$dma_ctlrf.v:1568$9700 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i532$dma_ctlrf.v:1571$9702 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i534$dma_ctlrf.v:1572$9704 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i536$dma_ctlrf.v:1573$9706 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i538$dma_ctlrf.v:1574$9708 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i540$dma_ctlrf.v:1576$9710 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i542$dma_ctlrf.v:1578$9712 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i545$dma_ctlrf.v:1582$9715 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i548$dma_ctlrf.v:1583$9718 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i551$dma_ctlrf.v:1584$9721 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i554$dma_ctlrf.v:1585$9724 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i557$dma_ctlrf.v:1587$9727 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i560$dma_ctlrf.v:1589$9730 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i562$dma_ctlrf.v:1591$9732 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i564$dma_ctlrf.v:1592$9734 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i566$dma_ctlrf.v:1593$9736 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i568$dma_ctlrf.v:1594$9738 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i570$dma_ctlrf.v:1596$9740 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i572$dma_ctlrf.v:1598$9742 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i575$dma_ctlrf.v:1602$9745 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i578$dma_ctlrf.v:1603$9748 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i581$dma_ctlrf.v:1604$9751 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i584$dma_ctlrf.v:1605$9754 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i587$dma_ctlrf.v:1607$9757 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i590$dma_ctlrf.v:1609$9760 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i592$dma_ctlrf.v:1611$9762 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i594$dma_ctlrf.v:1612$9764 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i596$dma_ctlrf.v:1613$9766 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i598$dma_ctlrf.v:1614$9768 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i6$dma_ctlrf.v:982$9483 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i600$dma_ctlrf.v:1616$9770 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i602$dma_ctlrf.v:1618$9772 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i605$dma_ctlrf.v:1622$9775 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i608$dma_ctlrf.v:1623$9778 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i611$dma_ctlrf.v:1624$9781 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i614$dma_ctlrf.v:1625$9784 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i617$dma_ctlrf.v:1627$9787 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i620$dma_ctlrf.v:1629$9790 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i622$dma_ctlrf.v:1631$9792 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i624$dma_ctlrf.v:1632$9794 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i626$dma_ctlrf.v:1633$9796 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i628$dma_ctlrf.v:1634$9798 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i630$dma_ctlrf.v:1636$9800 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i632$dma_ctlrf.v:1638$9802 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i635$dma_ctlrf.v:1642$9805 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i638$dma_ctlrf.v:1643$9808 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i641$dma_ctlrf.v:1644$9811 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i644$dma_ctlrf.v:1645$9814 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i647$dma_ctlrf.v:1647$9817 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i650$dma_ctlrf.v:1649$9820 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i652$dma_ctlrf.v:1651$9822 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i654$dma_ctlrf.v:1652$9824 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i656$dma_ctlrf.v:1653$9826 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i658$dma_ctlrf.v:1654$9828 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i660$dma_ctlrf.v:1656$9830 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i662$dma_ctlrf.v:1658$9832 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i665$dma_ctlrf.v:1662$9835 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i668$dma_ctlrf.v:1663$9838 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i671$dma_ctlrf.v:1664$9841 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i674$dma_ctlrf.v:1665$9844 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i677$dma_ctlrf.v:1667$9847 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i680$dma_ctlrf.v:1669$9850 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i682$dma_ctlrf.v:1671$9852 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i684$dma_ctlrf.v:1672$9854 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i686$dma_ctlrf.v:1673$9856 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i688$dma_ctlrf.v:1674$9858 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i690$dma_ctlrf.v:1676$9860 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i692$dma_ctlrf.v:1678$9862 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i695$dma_ctlrf.v:1682$9865 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i698$dma_ctlrf.v:1683$9868 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i7$dma_ctlrf.v:982$9484 ($not).
Mapping dma_top.$flatten\ctl_rf.$verific$i701$dma_ctlrf.v:1684$9871 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i704$dma_ctlrf.v:1685$9874 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i707$dma_ctlrf.v:1687$9877 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i710$dma_ctlrf.v:1689$9880 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i712$dma_ctlrf.v:1691$9882 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i714$dma_ctlrf.v:1692$9884 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i716$dma_ctlrf.v:1693$9886 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i718$dma_ctlrf.v:1694$9888 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i720$dma_ctlrf.v:1696$9890 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i722$dma_ctlrf.v:1698$9892 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i724$dma_ctlrf.v:1701$9894 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i725$dma_ctlrf.v:1701$9895 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i732$dma_ctlrf.v:1704$9901 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i733$dma_ctlrf.v:1704$9902 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i737$dma_ctlrf.v:1705$9905 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i740$dma_ctlrf.v:1706$9907 ($and).
Mapping dma_top.$flatten\ctl_rf.$verific$i760$dma_ctlrf.v:1729$9915 ($or).
Mapping dma_top.$flatten\ctl_rf.$verific$i761$dma_ctlrf.v:1729$9916 ($or).
Mapping dma_top.$flatten\ctl_rf.$verific$i8$dma_ctlrf.v:982$9485 ($and).
Mapping dma_top.$auto$ff.cc:262:slice$19467 ($adffe).
Mapping dma_top.$flatten\ctl_rf.$verific$i891$dma_ctlrf.v:1833$9950 ($mux).
Mapping dma_top.$auto$ff.cc:262:slice$19466 ($adffe).
Mapping dma_top.$flatten\ctl_rf.$verific$i900$dma_ctlrf.v:1842$9952 ($mux).
Mapping dma_top.$auto$ff.cc:262:slice$19463 ($adffe).
Mapping dma_top.$flatten\ctl_rf.$verific$i909$dma_ctlrf.v:1852$9954 ($mux).
Mapping dma_top.$auto$ff.cc:262:slice$19460 ($adffe).
Mapping dma_top.$flatten\ctl_rf.$verific$i918$dma_ctlrf.v:1862$9956 ($mux).
Mapping dma_top.$auto$ff.cc:262:slice$19457 ($adffe).
Mapping dma_top.$flatten\ctl_rf.$verific$i927$dma_ctlrf.v:1872$9958 ($mux).
Mapping dma_top.$auto$ff.cc:262:slice$19456 ($adffe).
Mapping dma_top.$flatten\ctl_rf.$verific$i936$dma_ctlrf.v:1882$9960 ($mux).
Mapping dma_top.$auto$ff.cc:262:slice$19453 ($adffe).
Mapping dma_top.$flatten\ctl_rf.$verific$i945$dma_ctlrf.v:1892$9962 ($mux).
Mapping dma_top.$auto$ff.cc:262:slice$19452 ($adffe).
Mapping dma_top.$flatten\ctl_rf.$verific$i954$dma_ctlrf.v:1902$9964 ($mux).
Mapping dma_top.$flatten\ctl_rf.$verific$inv_1969$dma_ctlrf.v:1824$9944 ($not).
Mapping dma_top.$flatten\ctl_rf.$verific$inv_1980$dma_ctlrf.v:1785$9928 ($not).
Mapping dma_top.$flatten\ctl_rf.$verific$inv_1983$dma_ctlrf.v:1786$9931 ($not).
Mapping dma_top.$flatten\ctl_rf.$verific$inv_1986$dma_ctlrf.v:1788$9934 ($not).
Mapping dma_top.$flatten\ctl_rf.$verific$mux_170$dma_ctlrf.v:1064$9512 ($bmux).
Mapping dma_top.$flatten\ctl_rf.$verific$mux_179$dma_ctlrf.v:1129$9514 ($bmux).
Mapping dma_top.$flatten\ctl_rf.$verific$mux_188$dma_ctlrf.v:1195$9516 ($bmux).
Mapping dma_top.$flatten\ctl_rf.$verific$mux_205$dma_ctlrf.v:1270$9518 ($bmux).
Mapping dma_top.$flatten\ctl_rf.$verific$mux_210$dma_ctlrf.v:1281$9520 ($bmux).
Mapping dma_top.$flatten\ctl_rf.$verific$mux_232$dma_ctlrf.v:1304$9529 ($bmux).
Mapping dma_top.$flatten\ctl_rf.$verific$mux_254$dma_ctlrf.v:1328$9533 ($bmux).
Mapping dma_top.$flatten\ctl_rf.$verific$mux_276$dma_ctlrf.v:1352$9537 ($bmux).
Mapping dma_top.$flatten\ctl_rf.$verific$mux_298$dma_ctlrf.v:1376$9541 ($bmux).
Mapping dma_top.$flatten\ctl_rf.$verific$mux_320$dma_ctlrf.v:1400$9545 ($bmux).
Mapping dma_top.$flatten\ctl_rf.$verific$mux_342$dma_ctlrf.v:1424$9549 ($bmux).
Mapping dma_top.$flatten\ctl_rf.$verific$mux_364$dma_ctlrf.v:1448$9553 ($bmux).
Mapping dma_top.$flatten\ctl_rf.$verific$mux_46$dma_ctlrf.v:1000$9507 ($mux).
Mapping dma_top.$flatten\ctl_rf.$verific$mux_725$dma_ctlrf.v:1701$9896 ($mux).
Mapping dma_top.$flatten\ctl_rf.$verific$mux_733$dma_ctlrf.v:1704$9903 ($mux).
Mapping dma_top.$flatten\ctl_rf.$verific$mux_81$dma_ctlrf.v:1048$9510 ($bmux).
Mapping dma_top.$flatten\ctl_rf.$verific$not_equal_1010$dma_ctlrf.v:2027$9970 ($ne).
Mapping dma_top.$flatten\ctl_rf.$verific$not_equal_1022$dma_ctlrf.v:2044$9971 ($ne).
Mapping dma_top.$flatten\ctl_rf.$verific$not_equal_1034$dma_ctlrf.v:2060$9972 ($ne).
Mapping dma_top.$flatten\ctl_rf.$verific$not_equal_1046$dma_ctlrf.v:2076$9977 ($ne).
Mapping dma_top.$flatten\ctl_rf.$verific$not_equal_962$dma_ctlrf.v:1960$9966 ($reduce_bool).
Mapping dma_top.$flatten\ctl_rf.$verific$not_equal_974$dma_ctlrf.v:1975$9967 ($ne).
Mapping dma_top.$flatten\ctl_rf.$verific$not_equal_986$dma_ctlrf.v:1992$9968 ($ne).
Mapping dma_top.$flatten\ctl_rf.$verific$not_equal_998$dma_ctlrf.v:2009$9969 ($ne).
Mapping dma_top.$flatten\ctl_rf.$verific$or_1974$dma_ctlrf.v:2076$9980 ($or).
Mapping dma_top.$flatten\ctl_rf.$verific$or_1977$dma_ctlrf.v:2076$9975 ($or).
Mapping dma_top.$flatten\ctl_rf.$verific$or_768$dma_ctlrf.v:1735$9924 ($or).
Mapping dma_top.$flatten\ctl_rf.$verific$or_769$dma_ctlrf.v:1735$9925 ($or).
Mapping dma_top.$flatten\ctl_rf.$verific$reduce_nor_226$dma_ctlrf.v:1294$9524 ($not).
Mapping dma_top.$flatten\ctl_rf.$verific$reduce_nor_226$dma_ctlrf.v:1294$9525 ($reduce_or).
Mapping dma_top.$flatten\ctl_rf.$verific$reduce_or_762$dma_ctlrf.v:1730$9918 ($reduce_or).
Mapping dma_top.$flatten\ctl_rf.$verific$reduce_or_764$dma_ctlrf.v:1731$9920 ($reduce_or).
Mapping dma_top.$flatten\ctl_rf.$verific$reduce_or_766$dma_ctlrf.v:1733$9922 ($reduce_or).
Mapping dma_top.$flatten\ctl_rf.$verific$rf_sel_d1_reg$dma_ctlrf.v:1475$9561 ($adff).
Mapping dma_top.$flatten\ctl_rf.\c0_rf.$verific$i10$dma_chrf.v:220$14414 ($not).
Mapping dma_top.$flatten\ctl_rf.\c0_rf.$verific$i11$dma_chrf.v:220$14415 ($and).
Mapping dma_top.$flatten\ctl_rf.\c0_rf.$verific$i12$dma_chrf.v:220$14416 ($or).
Mapping dma_top.$flatten\ctl_rf.\c0_rf.$verific$i13$dma_chrf.v:220$14417 ($and).
Mapping dma_top.$flatten\ctl_rf.\c0_rf.$verific$i132$dma_chrf.v:366$14494 ($and).
Mapping dma_top.$flatten\ctl_rf.\c0_rf.$verific$i134$dma_chrf.v:366$14495 ($or).
Mapping dma_top.$flatten\ctl_rf.\c0_rf.$verific$i135$dma_chrf.v:366$14496 ($and).
Mapping dma_top.$flatten\ctl_rf.\c0_rf.$verific$i136$dma_chrf.v:367$14497 ($or).
Mapping dma_top.$flatten\ctl_rf.\c0_rf.$verific$i137$dma_chrf.v:368$14498 ($or).
Mapping dma_top.$flatten\ctl_rf.\c0_rf.$verific$i138$dma_chrf.v:368$14499 ($and).
Mapping dma_top.$flatten\ctl_rf.\c0_rf.$verific$i14$dma_chrf.v:220$14418 ($or).
Mapping dma_top.$flatten\ctl_rf.\c0_rf.$verific$i140$dma_chrf.v:382$14501 ($and).
Mapping dma_top.$auto$ff.cc:262:slice$19373 ($adffe).
Mapping dma_top.$flatten\ctl_rf.\c0_rf.$verific$i149$dma_chrf.v:390$14505 ($mux).
Mapping dma_top.$flatten\ctl_rf.\c0_rf.$verific$i156$dma_chrf.v:399$14507 ($and).
Mapping dma_top.$flatten\ctl_rf.\c0_rf.$verific$i20$dma_chrf.v:234$14422 ($and).
Mapping dma_top.$flatten\ctl_rf.\c0_rf.$verific$i21$dma_chrf.v:234$14423 ($and).
Mapping dma_top.$auto$ff.cc:262:slice$19378 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19379 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19380 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19381 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19384 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19387 ($adffe).
Mapping dma_top.$flatten\ctl_rf.\c0_rf.$verific$i231$dma_chrf.v:467$14555 ($and).
Mapping dma_top.$flatten\ctl_rf.\c0_rf.$verific$i237$dma_chrf.v:468$14556 ($or).
Mapping dma_top.$flatten\ctl_rf.\c0_rf.$verific$i24$dma_chrf.v:234$14425 ($and).
Mapping dma_top.$flatten\ctl_rf.\c0_rf.$verific$i240$dma_chrf.v:470$14558 ($and).
Mapping dma_top.$auto$ff.cc:262:slice$19388 ($adffe).
Mapping dma_top.$flatten\ctl_rf.\c0_rf.$verific$i249$dma_chrf.v:480$14562 ($mux).
Mapping dma_top.$flatten\ctl_rf.\c0_rf.$verific$i251$dma_chrf.v:484$14564 ($and).
Mapping dma_top.$flatten\ctl_rf.\c0_rf.$verific$i268$dma_chrf.v:504$14572 ($and).
Mapping dma_top.$auto$ff.cc:262:slice$19362 ($adffe).
Mapping dma_top.$flatten\ctl_rf.\c0_rf.$verific$i270$dma_chrf.v:505$14574 ($and).
Mapping dma_top.$flatten\ctl_rf.\c0_rf.$verific$i272$dma_chrf.v:506$14576 ($and).
Mapping dma_top.$flatten\ctl_rf.\c0_rf.$verific$i274$dma_chrf.v:507$14578 ($and).
Mapping dma_top.$flatten\ctl_rf.\c0_rf.$verific$i28$dma_chrf.v:239$14428 ($mux).
Mapping dma_top.$flatten\ctl_rf.\c0_rf.$verific$i30$dma_chrf.v:258$14430 ($not).
Mapping dma_top.$flatten\ctl_rf.\c0_rf.$verific$i31$dma_chrf.v:258$14431 ($and).
Mapping dma_top.$flatten\ctl_rf.\c0_rf.$verific$i33$dma_chrf.v:258$14433 ($and).
Mapping dma_top.$flatten\ctl_rf.\c0_rf.$verific$i35$dma_chrf.v:259$14435 ($not).
Mapping dma_top.$flatten\ctl_rf.\c0_rf.$verific$i36$dma_chrf.v:259$14436 ($and).
Mapping dma_top.$flatten\ctl_rf.\c0_rf.$verific$i398$dma_chrf.v:544$14600 ($and).
Mapping dma_top.$flatten\ctl_rf.\c0_rf.$verific$i400$dma_chrf.v:545$14602 ($and).
Mapping dma_top.$flatten\ctl_rf.\c0_rf.$verific$i402$dma_chrf.v:546$14604 ($and).
Mapping dma_top.$flatten\ctl_rf.\c0_rf.$verific$i404$dma_chrf.v:547$14606 ($and).
Mapping dma_top.$auto$ff.cc:262:slice$19365 ($adffe).
Mapping dma_top.$flatten\ctl_rf.\c0_rf.$verific$i45$dma_chrf.v:267$14440 ($mux).
Mapping dma_top.$flatten\ctl_rf.\c0_rf.$verific$i48$dma_chrf.v:269$14442 ($and).
Mapping dma_top.$flatten\ctl_rf.\c0_rf.$verific$i49$dma_chrf.v:269$14443 ($and).
Mapping dma_top.$flatten\ctl_rf.\c0_rf.$verific$i51$dma_chrf.v:270$14445 ($and).
Mapping dma_top.$flatten\ctl_rf.\c0_rf.$verific$i52$dma_chrf.v:270$14446 ($and).
Mapping dma_top.$flatten\ctl_rf.\c0_rf.$verific$i528$dma_chrf.v:585$14623 ($and).
Mapping dma_top.$flatten\ctl_rf.\c0_rf.$verific$i530$dma_chrf.v:586$14625 ($and).
Mapping dma_top.$flatten\ctl_rf.\c0_rf.$verific$i532$dma_chrf.v:587$14627 ($and).
Mapping dma_top.$flatten\ctl_rf.\c0_rf.$verific$i534$dma_chrf.v:588$14629 ($and).
Mapping dma_top.$flatten\ctl_rf.\c0_rf.$verific$i54$dma_chrf.v:271$14448 ($or).
Mapping dma_top.$flatten\ctl_rf.\c0_rf.$verific$i55$dma_chrf.v:271$14449 ($and).
Mapping dma_top.$flatten\ctl_rf.\c0_rf.$verific$i658$dma_chrf.v:626$14646 ($and).
Mapping dma_top.$flatten\ctl_rf.\c0_rf.$verific$i660$dma_chrf.v:627$14648 ($and).
Mapping dma_top.$flatten\ctl_rf.\c0_rf.$verific$i67$dma_chrf.v:289$14457 ($and).
Mapping dma_top.$flatten\ctl_rf.\c0_rf.$verific$i69$dma_chrf.v:290$14459 ($and).
Mapping dma_top.$flatten\ctl_rf.\c0_rf.$verific$i7$dma_chrf.v:219$14411 ($and).
Mapping dma_top.$flatten\ctl_rf.\c0_rf.$verific$i71$dma_chrf.v:291$14461 ($and).
Mapping dma_top.$flatten\ctl_rf.\c0_rf.$verific$i713$dma_chrf.v:655$14660 ($and).
Mapping dma_top.$flatten\ctl_rf.\c0_rf.$verific$i73$dma_chrf.v:292$14463 ($and).
Mapping dma_top.$flatten\ctl_rf.\c0_rf.$verific$i79$dma_chrf.v:302$14465 ($not).
Mapping dma_top.$flatten\ctl_rf.\c0_rf.$verific$i8$dma_chrf.v:219$14412 ($and).
Mapping dma_top.$flatten\ctl_rf.\c0_rf.$verific$i80$dma_chrf.v:302$14466 ($and).
Mapping dma_top.$auto$ff.cc:262:slice$19372 ($adffe).
Mapping dma_top.$flatten\ctl_rf.\c0_rf.$verific$i9$dma_chrf.v:220$14413 ($not).
Mapping dma_top.$flatten\ctl_rf.\c0_rf.$verific$i92$dma_chrf.v:315$14474 ($and).
Mapping dma_top.$auto$ff.cc:262:slice$19374 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19375 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19371 ($adffe).
Mapping dma_top.$flatten\ctl_rf.\c0_rf.$verific$mux_64$dma_chrf.v:279$14455 ($mux).
Mapping dma_top.$auto$ff.cc:262:slice$19368 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19397 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19394 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19391 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19400 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19409 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19406 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19403 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19412 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19419 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19416 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19413 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19422 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19425 ($adffe).
Mapping dma_top.$flatten\ctl_rf.\c0_rf.$verific$reduce_or_31$dma_chrf.v:258$14432 ($reduce_or).
Mapping dma_top.$flatten\ctl_rf.\c1_rf.$verific$i10$dma_chrf.v:220$14865 ($not).
Mapping dma_top.$flatten\ctl_rf.\c1_rf.$verific$i11$dma_chrf.v:220$14866 ($and).
Mapping dma_top.$flatten\ctl_rf.\c1_rf.$verific$i12$dma_chrf.v:220$14867 ($or).
Mapping dma_top.$flatten\ctl_rf.\c1_rf.$verific$i13$dma_chrf.v:220$14868 ($and).
Mapping dma_top.$flatten\ctl_rf.\c1_rf.$verific$i132$dma_chrf.v:366$14945 ($and).
Mapping dma_top.$flatten\ctl_rf.\c1_rf.$verific$i134$dma_chrf.v:366$14946 ($or).
Mapping dma_top.$flatten\ctl_rf.\c1_rf.$verific$i135$dma_chrf.v:366$14947 ($and).
Mapping dma_top.$flatten\ctl_rf.\c1_rf.$verific$i136$dma_chrf.v:367$14948 ($or).
Mapping dma_top.$flatten\ctl_rf.\c1_rf.$verific$i137$dma_chrf.v:368$14949 ($or).
Mapping dma_top.$flatten\ctl_rf.\c1_rf.$verific$i138$dma_chrf.v:368$14950 ($and).
Mapping dma_top.$flatten\ctl_rf.\c1_rf.$verific$i14$dma_chrf.v:220$14869 ($or).
Mapping dma_top.$flatten\ctl_rf.\c1_rf.$verific$i140$dma_chrf.v:382$14952 ($and).
Mapping dma_top.$auto$ff.cc:262:slice$19299 ($adffe).
Mapping dma_top.$flatten\ctl_rf.\c1_rf.$verific$i149$dma_chrf.v:390$14956 ($mux).
Mapping dma_top.$flatten\ctl_rf.\c1_rf.$verific$i156$dma_chrf.v:399$14958 ($and).
Mapping dma_top.$flatten\ctl_rf.\c1_rf.$verific$i20$dma_chrf.v:234$14873 ($and).
Mapping dma_top.$flatten\ctl_rf.\c1_rf.$verific$i21$dma_chrf.v:234$14874 ($and).
Mapping dma_top.$auto$ff.cc:262:slice$19308 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19311 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19314 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19317 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19318 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19321 ($adffe).
Mapping dma_top.$flatten\ctl_rf.\c1_rf.$verific$i231$dma_chrf.v:467$15006 ($and).
Mapping dma_top.$flatten\ctl_rf.\c1_rf.$verific$i237$dma_chrf.v:468$15007 ($or).
Mapping dma_top.$flatten\ctl_rf.\c1_rf.$verific$i24$dma_chrf.v:234$14876 ($and).
Mapping dma_top.$flatten\ctl_rf.\c1_rf.$verific$i240$dma_chrf.v:470$15009 ($and).
Mapping dma_top.$auto$ff.cc:262:slice$19324 ($adffe).
Mapping dma_top.$flatten\ctl_rf.\c1_rf.$verific$i249$dma_chrf.v:480$15013 ($mux).
Mapping dma_top.$flatten\ctl_rf.\c1_rf.$verific$i251$dma_chrf.v:484$15015 ($and).
Mapping dma_top.$flatten\ctl_rf.\c1_rf.$verific$i268$dma_chrf.v:504$15023 ($and).
Mapping dma_top.$auto$ff.cc:262:slice$19286 ($adffe).
Mapping dma_top.$flatten\ctl_rf.\c1_rf.$verific$i270$dma_chrf.v:505$15025 ($and).
Mapping dma_top.$flatten\ctl_rf.\c1_rf.$verific$i272$dma_chrf.v:506$15027 ($and).
Mapping dma_top.$flatten\ctl_rf.\c1_rf.$verific$i274$dma_chrf.v:507$15029 ($and).
Mapping dma_top.$flatten\ctl_rf.\c1_rf.$verific$i28$dma_chrf.v:239$14879 ($mux).
Mapping dma_top.$flatten\ctl_rf.\c1_rf.$verific$i30$dma_chrf.v:258$14881 ($not).
Mapping dma_top.$flatten\ctl_rf.\c1_rf.$verific$i31$dma_chrf.v:258$14882 ($and).
Mapping dma_top.$flatten\ctl_rf.\c1_rf.$verific$i33$dma_chrf.v:258$14884 ($and).
Mapping dma_top.$flatten\ctl_rf.\c1_rf.$verific$i35$dma_chrf.v:259$14886 ($not).
Mapping dma_top.$flatten\ctl_rf.\c1_rf.$verific$i36$dma_chrf.v:259$14887 ($and).
Mapping dma_top.$flatten\ctl_rf.\c1_rf.$verific$i398$dma_chrf.v:544$15051 ($and).
Mapping dma_top.$flatten\ctl_rf.\c1_rf.$verific$i400$dma_chrf.v:545$15053 ($and).
Mapping dma_top.$flatten\ctl_rf.\c1_rf.$verific$i402$dma_chrf.v:546$15055 ($and).
Mapping dma_top.$flatten\ctl_rf.\c1_rf.$verific$i404$dma_chrf.v:547$15057 ($and).
Mapping dma_top.$auto$ff.cc:262:slice$19289 ($adffe).
Mapping dma_top.$flatten\ctl_rf.\c1_rf.$verific$i45$dma_chrf.v:267$14891 ($mux).
Mapping dma_top.$flatten\ctl_rf.\c1_rf.$verific$i48$dma_chrf.v:269$14893 ($and).
Mapping dma_top.$flatten\ctl_rf.\c1_rf.$verific$i49$dma_chrf.v:269$14894 ($and).
Mapping dma_top.$flatten\ctl_rf.\c1_rf.$verific$i51$dma_chrf.v:270$14896 ($and).
Mapping dma_top.$flatten\ctl_rf.\c1_rf.$verific$i52$dma_chrf.v:270$14897 ($and).
Mapping dma_top.$flatten\ctl_rf.\c1_rf.$verific$i528$dma_chrf.v:585$15074 ($and).
Mapping dma_top.$flatten\ctl_rf.\c1_rf.$verific$i530$dma_chrf.v:586$15076 ($and).
Mapping dma_top.$flatten\ctl_rf.\c1_rf.$verific$i532$dma_chrf.v:587$15078 ($and).
Mapping dma_top.$flatten\ctl_rf.\c1_rf.$verific$i534$dma_chrf.v:588$15080 ($and).
Mapping dma_top.$flatten\ctl_rf.\c1_rf.$verific$i54$dma_chrf.v:271$14899 ($or).
Mapping dma_top.$flatten\ctl_rf.\c1_rf.$verific$i55$dma_chrf.v:271$14900 ($and).
Mapping dma_top.$flatten\ctl_rf.\c1_rf.$verific$i658$dma_chrf.v:626$15097 ($and).
Mapping dma_top.$flatten\ctl_rf.\c1_rf.$verific$i660$dma_chrf.v:627$15099 ($and).
Mapping dma_top.$flatten\ctl_rf.\c1_rf.$verific$i67$dma_chrf.v:289$14908 ($and).
Mapping dma_top.$flatten\ctl_rf.\c1_rf.$verific$i69$dma_chrf.v:290$14910 ($and).
Mapping dma_top.$flatten\ctl_rf.\c1_rf.$verific$i7$dma_chrf.v:219$14862 ($and).
Mapping dma_top.$flatten\ctl_rf.\c1_rf.$verific$i71$dma_chrf.v:291$14912 ($and).
Mapping dma_top.$flatten\ctl_rf.\c1_rf.$verific$i713$dma_chrf.v:655$15111 ($and).
Mapping dma_top.$flatten\ctl_rf.\c1_rf.$verific$i73$dma_chrf.v:292$14914 ($and).
Mapping dma_top.$flatten\ctl_rf.\c1_rf.$verific$i79$dma_chrf.v:302$14916 ($not).
Mapping dma_top.$flatten\ctl_rf.\c1_rf.$verific$i8$dma_chrf.v:219$14863 ($and).
Mapping dma_top.$flatten\ctl_rf.\c1_rf.$verific$i80$dma_chrf.v:302$14917 ($and).
Mapping dma_top.$auto$ff.cc:262:slice$19296 ($adffe).
Mapping dma_top.$flatten\ctl_rf.\c1_rf.$verific$i92$dma_chrf.v:315$14925 ($and).
Mapping dma_top.$auto$ff.cc:262:slice$19302 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19305 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19293 ($adffe).
Mapping dma_top.$flatten\ctl_rf.\c1_rf.$verific$mux_64$dma_chrf.v:279$14906 ($mux).
Mapping dma_top.$auto$ff.cc:262:slice$19292 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19333 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19330 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19327 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19336 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19345 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19342 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19339 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19348 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19357 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19354 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19351 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19358 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19361 ($adffe).
Mapping dma_top.$flatten\ctl_rf.\c1_rf.$verific$reduce_or_31$dma_chrf.v:258$14883 ($reduce_or).
Mapping dma_top.$flatten\ctl_rf.\c2_rf.$verific$i10$dma_chrf.v:220$15316 ($not).
Mapping dma_top.$flatten\ctl_rf.\c2_rf.$verific$i11$dma_chrf.v:220$15317 ($and).
Mapping dma_top.$flatten\ctl_rf.\c2_rf.$verific$i12$dma_chrf.v:220$15318 ($or).
Mapping dma_top.$flatten\ctl_rf.\c2_rf.$verific$i13$dma_chrf.v:220$15319 ($and).
Mapping dma_top.$flatten\ctl_rf.\c2_rf.$verific$i132$dma_chrf.v:366$15396 ($and).
Mapping dma_top.$flatten\ctl_rf.\c2_rf.$verific$i134$dma_chrf.v:366$15397 ($or).
Mapping dma_top.$flatten\ctl_rf.\c2_rf.$verific$i135$dma_chrf.v:366$15398 ($and).
Mapping dma_top.$flatten\ctl_rf.\c2_rf.$verific$i136$dma_chrf.v:367$15399 ($or).
Mapping dma_top.$flatten\ctl_rf.\c2_rf.$verific$i137$dma_chrf.v:368$15400 ($or).
Mapping dma_top.$flatten\ctl_rf.\c2_rf.$verific$i138$dma_chrf.v:368$15401 ($and).
Mapping dma_top.$flatten\ctl_rf.\c2_rf.$verific$i14$dma_chrf.v:220$15320 ($or).
Mapping dma_top.$flatten\ctl_rf.\c2_rf.$verific$i140$dma_chrf.v:382$15403 ($and).
Mapping dma_top.$auto$ff.cc:262:slice$19235 ($adffe).
Mapping dma_top.$flatten\ctl_rf.\c2_rf.$verific$i149$dma_chrf.v:390$15407 ($mux).
Mapping dma_top.$flatten\ctl_rf.\c2_rf.$verific$i156$dma_chrf.v:399$15409 ($and).
Mapping dma_top.$flatten\ctl_rf.\c2_rf.$verific$i20$dma_chrf.v:234$15324 ($and).
Mapping dma_top.$flatten\ctl_rf.\c2_rf.$verific$i21$dma_chrf.v:234$15325 ($and).
Mapping dma_top.$auto$ff.cc:262:slice$19244 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19247 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19250 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19253 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19256 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19259 ($adffe).
Mapping dma_top.$flatten\ctl_rf.\c2_rf.$verific$i231$dma_chrf.v:467$15457 ($and).
Mapping dma_top.$flatten\ctl_rf.\c2_rf.$verific$i237$dma_chrf.v:468$15458 ($or).
Mapping dma_top.$flatten\ctl_rf.\c2_rf.$verific$i24$dma_chrf.v:234$15327 ($and).
Mapping dma_top.$flatten\ctl_rf.\c2_rf.$verific$i240$dma_chrf.v:470$15460 ($and).
Mapping dma_top.$auto$ff.cc:262:slice$19262 ($adffe).
Mapping dma_top.$flatten\ctl_rf.\c2_rf.$verific$i249$dma_chrf.v:480$15464 ($mux).
Mapping dma_top.$flatten\ctl_rf.\c2_rf.$verific$i251$dma_chrf.v:484$15466 ($and).
Mapping dma_top.$flatten\ctl_rf.\c2_rf.$verific$i268$dma_chrf.v:504$15474 ($and).
Mapping dma_top.$auto$ff.cc:262:slice$19222 ($adffe).
Mapping dma_top.$flatten\ctl_rf.\c2_rf.$verific$i270$dma_chrf.v:505$15476 ($and).
Mapping dma_top.$flatten\ctl_rf.\c2_rf.$verific$i272$dma_chrf.v:506$15478 ($and).
Mapping dma_top.$flatten\ctl_rf.\c2_rf.$verific$i274$dma_chrf.v:507$15480 ($and).
Mapping dma_top.$flatten\ctl_rf.\c2_rf.$verific$i28$dma_chrf.v:239$15330 ($mux).
Mapping dma_top.$flatten\ctl_rf.\c2_rf.$verific$i30$dma_chrf.v:258$15332 ($not).
Mapping dma_top.$flatten\ctl_rf.\c2_rf.$verific$i31$dma_chrf.v:258$15333 ($and).
Mapping dma_top.$flatten\ctl_rf.\c2_rf.$verific$i33$dma_chrf.v:258$15335 ($and).
Mapping dma_top.$flatten\ctl_rf.\c2_rf.$verific$i35$dma_chrf.v:259$15337 ($not).
Mapping dma_top.$flatten\ctl_rf.\c2_rf.$verific$i36$dma_chrf.v:259$15338 ($and).
Mapping dma_top.$flatten\ctl_rf.\c2_rf.$verific$i398$dma_chrf.v:544$15502 ($and).
Mapping dma_top.$flatten\ctl_rf.\c2_rf.$verific$i400$dma_chrf.v:545$15504 ($and).
Mapping dma_top.$flatten\ctl_rf.\c2_rf.$verific$i402$dma_chrf.v:546$15506 ($and).
Mapping dma_top.$flatten\ctl_rf.\c2_rf.$verific$i404$dma_chrf.v:547$15508 ($and).
Mapping dma_top.$auto$ff.cc:262:slice$19223 ($adffe).
Mapping dma_top.$flatten\ctl_rf.\c2_rf.$verific$i45$dma_chrf.v:267$15342 ($mux).
Mapping dma_top.$flatten\ctl_rf.\c2_rf.$verific$i48$dma_chrf.v:269$15344 ($and).
Mapping dma_top.$flatten\ctl_rf.\c2_rf.$verific$i49$dma_chrf.v:269$15345 ($and).
Mapping dma_top.$flatten\ctl_rf.\c2_rf.$verific$i51$dma_chrf.v:270$15347 ($and).
Mapping dma_top.$flatten\ctl_rf.\c2_rf.$verific$i52$dma_chrf.v:270$15348 ($and).
Mapping dma_top.$flatten\ctl_rf.\c2_rf.$verific$i528$dma_chrf.v:585$15525 ($and).
Mapping dma_top.$flatten\ctl_rf.\c2_rf.$verific$i530$dma_chrf.v:586$15527 ($and).
Mapping dma_top.$flatten\ctl_rf.\c2_rf.$verific$i532$dma_chrf.v:587$15529 ($and).
Mapping dma_top.$flatten\ctl_rf.\c2_rf.$verific$i534$dma_chrf.v:588$15531 ($and).
Mapping dma_top.$flatten\ctl_rf.\c2_rf.$verific$i54$dma_chrf.v:271$15350 ($or).
Mapping dma_top.$flatten\ctl_rf.\c2_rf.$verific$i55$dma_chrf.v:271$15351 ($and).
Mapping dma_top.$flatten\ctl_rf.\c2_rf.$verific$i658$dma_chrf.v:626$15548 ($and).
Mapping dma_top.$flatten\ctl_rf.\c2_rf.$verific$i660$dma_chrf.v:627$15550 ($and).
Mapping dma_top.$flatten\ctl_rf.\c2_rf.$verific$i67$dma_chrf.v:289$15359 ($and).
Mapping dma_top.$flatten\ctl_rf.\c2_rf.$verific$i69$dma_chrf.v:290$15361 ($and).
Mapping dma_top.$flatten\ctl_rf.\c2_rf.$verific$i7$dma_chrf.v:219$15313 ($and).
Mapping dma_top.$flatten\ctl_rf.\c2_rf.$verific$i71$dma_chrf.v:291$15363 ($and).
Mapping dma_top.$flatten\ctl_rf.\c2_rf.$verific$i713$dma_chrf.v:655$15562 ($and).
Mapping dma_top.$flatten\ctl_rf.\c2_rf.$verific$i73$dma_chrf.v:292$15365 ($and).
Mapping dma_top.$flatten\ctl_rf.\c2_rf.$verific$i79$dma_chrf.v:302$15367 ($not).
Mapping dma_top.$flatten\ctl_rf.\c2_rf.$verific$i8$dma_chrf.v:219$15314 ($and).
Mapping dma_top.$flatten\ctl_rf.\c2_rf.$verific$i80$dma_chrf.v:302$15368 ($and).
Mapping dma_top.$auto$ff.cc:262:slice$19232 ($adffe).
Mapping dma_top.$flatten\ctl_rf.\c2_rf.$verific$i92$dma_chrf.v:315$15376 ($and).
Mapping dma_top.$auto$ff.cc:262:slice$19238 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19241 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19229 ($adffe).
Mapping dma_top.$flatten\ctl_rf.\c2_rf.$verific$mux_64$dma_chrf.v:279$15357 ($mux).
Mapping dma_top.$auto$ff.cc:262:slice$19226 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19267 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19266 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19263 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19270 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19277 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19276 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19273 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19278 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19283 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19280 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19279 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19284 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19285 ($adffe).
Mapping dma_top.$flatten\ctl_rf.\c2_rf.$verific$reduce_or_31$dma_chrf.v:258$15334 ($reduce_or).
Mapping dma_top.$flatten\ctl_rf.\c3_rf.$verific$i10$dma_chrf.v:220$15767 ($not).
Mapping dma_top.$flatten\ctl_rf.\c3_rf.$verific$i11$dma_chrf.v:220$15768 ($and).
Mapping dma_top.$flatten\ctl_rf.\c3_rf.$verific$i12$dma_chrf.v:220$15769 ($or).
Mapping dma_top.$flatten\ctl_rf.\c3_rf.$verific$i13$dma_chrf.v:220$15770 ($and).
Mapping dma_top.$flatten\ctl_rf.\c3_rf.$verific$i132$dma_chrf.v:366$15847 ($and).
Mapping dma_top.$flatten\ctl_rf.\c3_rf.$verific$i134$dma_chrf.v:366$15848 ($or).
Mapping dma_top.$flatten\ctl_rf.\c3_rf.$verific$i135$dma_chrf.v:366$15849 ($and).
Mapping dma_top.$flatten\ctl_rf.\c3_rf.$verific$i136$dma_chrf.v:367$15850 ($or).
Mapping dma_top.$flatten\ctl_rf.\c3_rf.$verific$i137$dma_chrf.v:368$15851 ($or).
Mapping dma_top.$flatten\ctl_rf.\c3_rf.$verific$i138$dma_chrf.v:368$15852 ($and).
Mapping dma_top.$flatten\ctl_rf.\c3_rf.$verific$i14$dma_chrf.v:220$15771 ($or).
Mapping dma_top.$flatten\ctl_rf.\c3_rf.$verific$i140$dma_chrf.v:382$15854 ($and).
Mapping dma_top.$auto$ff.cc:262:slice$19171 ($adffe).
Mapping dma_top.$flatten\ctl_rf.\c3_rf.$verific$i149$dma_chrf.v:390$15858 ($mux).
Mapping dma_top.$flatten\ctl_rf.\c3_rf.$verific$i156$dma_chrf.v:399$15860 ($and).
Mapping dma_top.$flatten\ctl_rf.\c3_rf.$verific$i20$dma_chrf.v:234$15775 ($and).
Mapping dma_top.$flatten\ctl_rf.\c3_rf.$verific$i21$dma_chrf.v:234$15776 ($and).
Mapping dma_top.$auto$ff.cc:262:slice$19178 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19181 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19182 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19183 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19184 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19185 ($adffe).
Mapping dma_top.$flatten\ctl_rf.\c3_rf.$verific$i231$dma_chrf.v:467$15908 ($and).
Mapping dma_top.$flatten\ctl_rf.\c3_rf.$verific$i237$dma_chrf.v:468$15909 ($or).
Mapping dma_top.$flatten\ctl_rf.\c3_rf.$verific$i24$dma_chrf.v:234$15778 ($and).
Mapping dma_top.$flatten\ctl_rf.\c3_rf.$verific$i240$dma_chrf.v:470$15911 ($and).
Mapping dma_top.$auto$ff.cc:262:slice$19188 ($adffe).
Mapping dma_top.$flatten\ctl_rf.\c3_rf.$verific$i249$dma_chrf.v:480$15915 ($mux).
Mapping dma_top.$flatten\ctl_rf.\c3_rf.$verific$i251$dma_chrf.v:484$15917 ($and).
Mapping dma_top.$flatten\ctl_rf.\c3_rf.$verific$i268$dma_chrf.v:504$15925 ($and).
Mapping dma_top.$auto$ff.cc:262:slice$19158 ($adffe).
Mapping dma_top.$flatten\ctl_rf.\c3_rf.$verific$i270$dma_chrf.v:505$15927 ($and).
Mapping dma_top.$flatten\ctl_rf.\c3_rf.$verific$i272$dma_chrf.v:506$15929 ($and).
Mapping dma_top.$flatten\ctl_rf.\c3_rf.$verific$i274$dma_chrf.v:507$15931 ($and).
Mapping dma_top.$flatten\ctl_rf.\c3_rf.$verific$i28$dma_chrf.v:239$15781 ($mux).
Mapping dma_top.$flatten\ctl_rf.\c3_rf.$verific$i30$dma_chrf.v:258$15783 ($not).
Mapping dma_top.$flatten\ctl_rf.\c3_rf.$verific$i31$dma_chrf.v:258$15784 ($and).
Mapping dma_top.$flatten\ctl_rf.\c3_rf.$verific$i33$dma_chrf.v:258$15786 ($and).
Mapping dma_top.$flatten\ctl_rf.\c3_rf.$verific$i35$dma_chrf.v:259$15788 ($not).
Mapping dma_top.$flatten\ctl_rf.\c3_rf.$verific$i36$dma_chrf.v:259$15789 ($and).
Mapping dma_top.$flatten\ctl_rf.\c3_rf.$verific$i398$dma_chrf.v:544$15953 ($and).
Mapping dma_top.$flatten\ctl_rf.\c3_rf.$verific$i400$dma_chrf.v:545$15955 ($and).
Mapping dma_top.$flatten\ctl_rf.\c3_rf.$verific$i402$dma_chrf.v:546$15957 ($and).
Mapping dma_top.$flatten\ctl_rf.\c3_rf.$verific$i404$dma_chrf.v:547$15959 ($and).
Mapping dma_top.$auto$ff.cc:262:slice$19161 ($adffe).
Mapping dma_top.$flatten\ctl_rf.\c3_rf.$verific$i45$dma_chrf.v:267$15793 ($mux).
Mapping dma_top.$flatten\ctl_rf.\c3_rf.$verific$i48$dma_chrf.v:269$15795 ($and).
Mapping dma_top.$flatten\ctl_rf.\c3_rf.$verific$i49$dma_chrf.v:269$15796 ($and).
Mapping dma_top.$flatten\ctl_rf.\c3_rf.$verific$i51$dma_chrf.v:270$15798 ($and).
Mapping dma_top.$flatten\ctl_rf.\c3_rf.$verific$i52$dma_chrf.v:270$15799 ($and).
Mapping dma_top.$flatten\ctl_rf.\c3_rf.$verific$i528$dma_chrf.v:585$15976 ($and).
Mapping dma_top.$flatten\ctl_rf.\c3_rf.$verific$i530$dma_chrf.v:586$15978 ($and).
Mapping dma_top.$flatten\ctl_rf.\c3_rf.$verific$i532$dma_chrf.v:587$15980 ($and).
Mapping dma_top.$flatten\ctl_rf.\c3_rf.$verific$i534$dma_chrf.v:588$15982 ($and).
Mapping dma_top.$flatten\ctl_rf.\c3_rf.$verific$i54$dma_chrf.v:271$15801 ($or).
Mapping dma_top.$flatten\ctl_rf.\c3_rf.$verific$i55$dma_chrf.v:271$15802 ($and).
Mapping dma_top.$flatten\ctl_rf.\c3_rf.$verific$i658$dma_chrf.v:626$15999 ($and).
Mapping dma_top.$flatten\ctl_rf.\c3_rf.$verific$i660$dma_chrf.v:627$16001 ($and).
Mapping dma_top.$flatten\ctl_rf.\c3_rf.$verific$i67$dma_chrf.v:289$15810 ($and).
Mapping dma_top.$flatten\ctl_rf.\c3_rf.$verific$i69$dma_chrf.v:290$15812 ($and).
Mapping dma_top.$flatten\ctl_rf.\c3_rf.$verific$i7$dma_chrf.v:219$15764 ($and).
Mapping dma_top.$flatten\ctl_rf.\c3_rf.$verific$i71$dma_chrf.v:291$15814 ($and).
Mapping dma_top.$flatten\ctl_rf.\c3_rf.$verific$i713$dma_chrf.v:655$16013 ($and).
Mapping dma_top.$flatten\ctl_rf.\c3_rf.$verific$i73$dma_chrf.v:292$15816 ($and).
Mapping dma_top.$flatten\ctl_rf.\c3_rf.$verific$i79$dma_chrf.v:302$15818 ($not).
Mapping dma_top.$flatten\ctl_rf.\c3_rf.$verific$i8$dma_chrf.v:219$15765 ($and).
Mapping dma_top.$flatten\ctl_rf.\c3_rf.$verific$i80$dma_chrf.v:302$15819 ($and).
Mapping dma_top.$auto$ff.cc:262:slice$19168 ($adffe).
Mapping dma_top.$flatten\ctl_rf.\c3_rf.$verific$i92$dma_chrf.v:315$15827 ($and).
Mapping dma_top.$auto$ff.cc:262:slice$19172 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19175 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19167 ($adffe).
Mapping dma_top.$flatten\ctl_rf.\c3_rf.$verific$mux_64$dma_chrf.v:279$15808 ($mux).
Mapping dma_top.$auto$ff.cc:262:slice$19164 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19191 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19190 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19189 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19194 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19201 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19198 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19197 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19204 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19213 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19210 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19207 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19216 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19219 ($adffe).
Mapping dma_top.$flatten\ctl_rf.\c3_rf.$verific$reduce_or_31$dma_chrf.v:258$15785 ($reduce_or).
Mapping dma_top.$flatten\ctl_rf.\c4_rf.$verific$i10$dma_chrf.v:220$16218 ($not).
Mapping dma_top.$flatten\ctl_rf.\c4_rf.$verific$i11$dma_chrf.v:220$16219 ($and).
Mapping dma_top.$flatten\ctl_rf.\c4_rf.$verific$i12$dma_chrf.v:220$16220 ($or).
Mapping dma_top.$flatten\ctl_rf.\c4_rf.$verific$i13$dma_chrf.v:220$16221 ($and).
Mapping dma_top.$flatten\ctl_rf.\c4_rf.$verific$i132$dma_chrf.v:366$16298 ($and).
Mapping dma_top.$flatten\ctl_rf.\c4_rf.$verific$i134$dma_chrf.v:366$16299 ($or).
Mapping dma_top.$flatten\ctl_rf.\c4_rf.$verific$i135$dma_chrf.v:366$16300 ($and).
Mapping dma_top.$flatten\ctl_rf.\c4_rf.$verific$i136$dma_chrf.v:367$16301 ($or).
Mapping dma_top.$flatten\ctl_rf.\c4_rf.$verific$i137$dma_chrf.v:368$16302 ($or).
Mapping dma_top.$flatten\ctl_rf.\c4_rf.$verific$i138$dma_chrf.v:368$16303 ($and).
Mapping dma_top.$flatten\ctl_rf.\c4_rf.$verific$i14$dma_chrf.v:220$16222 ($or).
Mapping dma_top.$flatten\ctl_rf.\c4_rf.$verific$i140$dma_chrf.v:382$16305 ($and).
Mapping dma_top.$auto$ff.cc:262:slice$19095 ($adffe).
Mapping dma_top.$flatten\ctl_rf.\c4_rf.$verific$i149$dma_chrf.v:390$16309 ($mux).
Mapping dma_top.$flatten\ctl_rf.\c4_rf.$verific$i156$dma_chrf.v:399$16311 ($and).
Mapping dma_top.$flatten\ctl_rf.\c4_rf.$verific$i20$dma_chrf.v:234$16226 ($and).
Mapping dma_top.$flatten\ctl_rf.\c4_rf.$verific$i21$dma_chrf.v:234$16227 ($and).
Mapping dma_top.$auto$ff.cc:262:slice$19102 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19103 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19106 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19109 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19112 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19115 ($adffe).
Mapping dma_top.$flatten\ctl_rf.\c4_rf.$verific$i231$dma_chrf.v:467$16359 ($and).
Mapping dma_top.$flatten\ctl_rf.\c4_rf.$verific$i237$dma_chrf.v:468$16360 ($or).
Mapping dma_top.$flatten\ctl_rf.\c4_rf.$verific$i24$dma_chrf.v:234$16229 ($and).
Mapping dma_top.$flatten\ctl_rf.\c4_rf.$verific$i240$dma_chrf.v:470$16362 ($and).
Mapping dma_top.$auto$ff.cc:262:slice$19118 ($adffe).
Mapping dma_top.$flatten\ctl_rf.\c4_rf.$verific$i249$dma_chrf.v:480$16366 ($mux).
Mapping dma_top.$flatten\ctl_rf.\c4_rf.$verific$i251$dma_chrf.v:484$16368 ($and).
Mapping dma_top.$flatten\ctl_rf.\c4_rf.$verific$i268$dma_chrf.v:504$16376 ($and).
Mapping dma_top.$auto$ff.cc:262:slice$19088 ($adffe).
Mapping dma_top.$flatten\ctl_rf.\c4_rf.$verific$i270$dma_chrf.v:505$16378 ($and).
Mapping dma_top.$flatten\ctl_rf.\c4_rf.$verific$i272$dma_chrf.v:506$16380 ($and).
Mapping dma_top.$flatten\ctl_rf.\c4_rf.$verific$i274$dma_chrf.v:507$16382 ($and).
Mapping dma_top.$flatten\ctl_rf.\c4_rf.$verific$i28$dma_chrf.v:239$16232 ($mux).
Mapping dma_top.$flatten\ctl_rf.\c4_rf.$verific$i30$dma_chrf.v:258$16234 ($not).
Mapping dma_top.$flatten\ctl_rf.\c4_rf.$verific$i31$dma_chrf.v:258$16235 ($and).
Mapping dma_top.$flatten\ctl_rf.\c4_rf.$verific$i33$dma_chrf.v:258$16237 ($and).
Mapping dma_top.$flatten\ctl_rf.\c4_rf.$verific$i35$dma_chrf.v:259$16239 ($not).
Mapping dma_top.$flatten\ctl_rf.\c4_rf.$verific$i36$dma_chrf.v:259$16240 ($and).
Mapping dma_top.$flatten\ctl_rf.\c4_rf.$verific$i398$dma_chrf.v:544$16404 ($and).
Mapping dma_top.$flatten\ctl_rf.\c4_rf.$verific$i400$dma_chrf.v:545$16406 ($and).
Mapping dma_top.$flatten\ctl_rf.\c4_rf.$verific$i402$dma_chrf.v:546$16408 ($and).
Mapping dma_top.$flatten\ctl_rf.\c4_rf.$verific$i404$dma_chrf.v:547$16410 ($and).
Mapping dma_top.$auto$ff.cc:262:slice$19089 ($adffe).
Mapping dma_top.$flatten\ctl_rf.\c4_rf.$verific$i45$dma_chrf.v:267$16244 ($mux).
Mapping dma_top.$flatten\ctl_rf.\c4_rf.$verific$i48$dma_chrf.v:269$16246 ($and).
Mapping dma_top.$flatten\ctl_rf.\c4_rf.$verific$i49$dma_chrf.v:269$16247 ($and).
Mapping dma_top.$flatten\ctl_rf.\c4_rf.$verific$i51$dma_chrf.v:270$16249 ($and).
Mapping dma_top.$flatten\ctl_rf.\c4_rf.$verific$i52$dma_chrf.v:270$16250 ($and).
Mapping dma_top.$flatten\ctl_rf.\c4_rf.$verific$i528$dma_chrf.v:585$16427 ($and).
Mapping dma_top.$flatten\ctl_rf.\c4_rf.$verific$i530$dma_chrf.v:586$16429 ($and).
Mapping dma_top.$flatten\ctl_rf.\c4_rf.$verific$i532$dma_chrf.v:587$16431 ($and).
Mapping dma_top.$flatten\ctl_rf.\c4_rf.$verific$i534$dma_chrf.v:588$16433 ($and).
Mapping dma_top.$flatten\ctl_rf.\c4_rf.$verific$i54$dma_chrf.v:271$16252 ($or).
Mapping dma_top.$flatten\ctl_rf.\c4_rf.$verific$i55$dma_chrf.v:271$16253 ($and).
Mapping dma_top.$flatten\ctl_rf.\c4_rf.$verific$i658$dma_chrf.v:626$16450 ($and).
Mapping dma_top.$flatten\ctl_rf.\c4_rf.$verific$i660$dma_chrf.v:627$16452 ($and).
Mapping dma_top.$flatten\ctl_rf.\c4_rf.$verific$i67$dma_chrf.v:289$16261 ($and).
Mapping dma_top.$flatten\ctl_rf.\c4_rf.$verific$i69$dma_chrf.v:290$16263 ($and).
Mapping dma_top.$flatten\ctl_rf.\c4_rf.$verific$i7$dma_chrf.v:219$16215 ($and).
Mapping dma_top.$flatten\ctl_rf.\c4_rf.$verific$i71$dma_chrf.v:291$16265 ($and).
Mapping dma_top.$flatten\ctl_rf.\c4_rf.$verific$i713$dma_chrf.v:655$16464 ($and).
Mapping dma_top.$flatten\ctl_rf.\c4_rf.$verific$i73$dma_chrf.v:292$16267 ($and).
Mapping dma_top.$flatten\ctl_rf.\c4_rf.$verific$i79$dma_chrf.v:302$16269 ($not).
Mapping dma_top.$flatten\ctl_rf.\c4_rf.$verific$i8$dma_chrf.v:219$16216 ($and).
Mapping dma_top.$flatten\ctl_rf.\c4_rf.$verific$i80$dma_chrf.v:302$16270 ($and).
Mapping dma_top.$auto$ff.cc:262:slice$19094 ($adffe).
Mapping dma_top.$flatten\ctl_rf.\c4_rf.$verific$i92$dma_chrf.v:315$16278 ($and).
Mapping dma_top.$auto$ff.cc:262:slice$19096 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19099 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19093 ($adffe).
Mapping dma_top.$flatten\ctl_rf.\c4_rf.$verific$mux_64$dma_chrf.v:279$16259 ($mux).
Mapping dma_top.$auto$ff.cc:262:slice$19090 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19127 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19124 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19121 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19128 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19137 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19134 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19131 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19140 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19149 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19146 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19143 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19152 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19155 ($adffe).
Mapping dma_top.$flatten\ctl_rf.\c4_rf.$verific$reduce_or_31$dma_chrf.v:258$16236 ($reduce_or).
Mapping dma_top.$flatten\ctl_rf.\c5_rf.$verific$i10$dma_chrf.v:220$16669 ($not).
Mapping dma_top.$flatten\ctl_rf.\c5_rf.$verific$i11$dma_chrf.v:220$16670 ($and).
Mapping dma_top.$flatten\ctl_rf.\c5_rf.$verific$i12$dma_chrf.v:220$16671 ($or).
Mapping dma_top.$flatten\ctl_rf.\c5_rf.$verific$i13$dma_chrf.v:220$16672 ($and).
Mapping dma_top.$flatten\ctl_rf.\c5_rf.$verific$i132$dma_chrf.v:366$16749 ($and).
Mapping dma_top.$flatten\ctl_rf.\c5_rf.$verific$i134$dma_chrf.v:366$16750 ($or).
Mapping dma_top.$flatten\ctl_rf.\c5_rf.$verific$i135$dma_chrf.v:366$16751 ($and).
Mapping dma_top.$flatten\ctl_rf.\c5_rf.$verific$i136$dma_chrf.v:367$16752 ($or).
Mapping dma_top.$flatten\ctl_rf.\c5_rf.$verific$i137$dma_chrf.v:368$16753 ($or).
Mapping dma_top.$flatten\ctl_rf.\c5_rf.$verific$i138$dma_chrf.v:368$16754 ($and).
Mapping dma_top.$flatten\ctl_rf.\c5_rf.$verific$i14$dma_chrf.v:220$16673 ($or).
Mapping dma_top.$flatten\ctl_rf.\c5_rf.$verific$i140$dma_chrf.v:382$16756 ($and).
Mapping dma_top.$auto$ff.cc:262:slice$19029 ($adffe).
Mapping dma_top.$flatten\ctl_rf.\c5_rf.$verific$i149$dma_chrf.v:390$16760 ($mux).
Mapping dma_top.$flatten\ctl_rf.\c5_rf.$verific$i156$dma_chrf.v:399$16762 ($and).
Mapping dma_top.$flatten\ctl_rf.\c5_rf.$verific$i20$dma_chrf.v:234$16677 ($and).
Mapping dma_top.$flatten\ctl_rf.\c5_rf.$verific$i21$dma_chrf.v:234$16678 ($and).
Mapping dma_top.$auto$ff.cc:262:slice$19036 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19039 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19042 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19045 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19048 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19051 ($adffe).
Mapping dma_top.$flatten\ctl_rf.\c5_rf.$verific$i231$dma_chrf.v:467$16810 ($and).
Mapping dma_top.$flatten\ctl_rf.\c5_rf.$verific$i237$dma_chrf.v:468$16811 ($or).
Mapping dma_top.$flatten\ctl_rf.\c5_rf.$verific$i24$dma_chrf.v:234$16680 ($and).
Mapping dma_top.$flatten\ctl_rf.\c5_rf.$verific$i240$dma_chrf.v:470$16813 ($and).
Mapping dma_top.$auto$ff.cc:262:slice$19054 ($adffe).
Mapping dma_top.$flatten\ctl_rf.\c5_rf.$verific$i249$dma_chrf.v:480$16817 ($mux).
Mapping dma_top.$flatten\ctl_rf.\c5_rf.$verific$i251$dma_chrf.v:484$16819 ($and).
Mapping dma_top.$flatten\ctl_rf.\c5_rf.$verific$i268$dma_chrf.v:504$16827 ($and).
Mapping dma_top.$auto$ff.cc:262:slice$19014 ($adffe).
Mapping dma_top.$flatten\ctl_rf.\c5_rf.$verific$i270$dma_chrf.v:505$16829 ($and).
Mapping dma_top.$flatten\ctl_rf.\c5_rf.$verific$i272$dma_chrf.v:506$16831 ($and).
Mapping dma_top.$flatten\ctl_rf.\c5_rf.$verific$i274$dma_chrf.v:507$16833 ($and).
Mapping dma_top.$flatten\ctl_rf.\c5_rf.$verific$i28$dma_chrf.v:239$16683 ($mux).
Mapping dma_top.$flatten\ctl_rf.\c5_rf.$verific$i30$dma_chrf.v:258$16685 ($not).
Mapping dma_top.$flatten\ctl_rf.\c5_rf.$verific$i31$dma_chrf.v:258$16686 ($and).
Mapping dma_top.$flatten\ctl_rf.\c5_rf.$verific$i33$dma_chrf.v:258$16688 ($and).
Mapping dma_top.$flatten\ctl_rf.\c5_rf.$verific$i35$dma_chrf.v:259$16690 ($not).
Mapping dma_top.$flatten\ctl_rf.\c5_rf.$verific$i36$dma_chrf.v:259$16691 ($and).
Mapping dma_top.$flatten\ctl_rf.\c5_rf.$verific$i398$dma_chrf.v:544$16855 ($and).
Mapping dma_top.$flatten\ctl_rf.\c5_rf.$verific$i400$dma_chrf.v:545$16857 ($and).
Mapping dma_top.$flatten\ctl_rf.\c5_rf.$verific$i402$dma_chrf.v:546$16859 ($and).
Mapping dma_top.$flatten\ctl_rf.\c5_rf.$verific$i404$dma_chrf.v:547$16861 ($and).
Mapping dma_top.$auto$ff.cc:262:slice$19017 ($adffe).
Mapping dma_top.$flatten\ctl_rf.\c5_rf.$verific$i45$dma_chrf.v:267$16695 ($mux).
Mapping dma_top.$flatten\ctl_rf.\c5_rf.$verific$i48$dma_chrf.v:269$16697 ($and).
Mapping dma_top.$flatten\ctl_rf.\c5_rf.$verific$i49$dma_chrf.v:269$16698 ($and).
Mapping dma_top.$flatten\ctl_rf.\c5_rf.$verific$i51$dma_chrf.v:270$16700 ($and).
Mapping dma_top.$flatten\ctl_rf.\c5_rf.$verific$i52$dma_chrf.v:270$16701 ($and).
Mapping dma_top.$flatten\ctl_rf.\c5_rf.$verific$i528$dma_chrf.v:585$16878 ($and).
Mapping dma_top.$flatten\ctl_rf.\c5_rf.$verific$i530$dma_chrf.v:586$16880 ($and).
Mapping dma_top.$flatten\ctl_rf.\c5_rf.$verific$i532$dma_chrf.v:587$16882 ($and).
Mapping dma_top.$flatten\ctl_rf.\c5_rf.$verific$i534$dma_chrf.v:588$16884 ($and).
Mapping dma_top.$flatten\ctl_rf.\c5_rf.$verific$i54$dma_chrf.v:271$16703 ($or).
Mapping dma_top.$flatten\ctl_rf.\c5_rf.$verific$i55$dma_chrf.v:271$16704 ($and).
Mapping dma_top.$flatten\ctl_rf.\c5_rf.$verific$i658$dma_chrf.v:626$16901 ($and).
Mapping dma_top.$flatten\ctl_rf.\c5_rf.$verific$i660$dma_chrf.v:627$16903 ($and).
Mapping dma_top.$flatten\ctl_rf.\c5_rf.$verific$i67$dma_chrf.v:289$16712 ($and).
Mapping dma_top.$flatten\ctl_rf.\c5_rf.$verific$i69$dma_chrf.v:290$16714 ($and).
Mapping dma_top.$flatten\ctl_rf.\c5_rf.$verific$i7$dma_chrf.v:219$16666 ($and).
Mapping dma_top.$flatten\ctl_rf.\c5_rf.$verific$i71$dma_chrf.v:291$16716 ($and).
Mapping dma_top.$flatten\ctl_rf.\c5_rf.$verific$i713$dma_chrf.v:655$16915 ($and).
Mapping dma_top.$flatten\ctl_rf.\c5_rf.$verific$i73$dma_chrf.v:292$16718 ($and).
Mapping dma_top.$flatten\ctl_rf.\c5_rf.$verific$i79$dma_chrf.v:302$16720 ($not).
Mapping dma_top.$flatten\ctl_rf.\c5_rf.$verific$i8$dma_chrf.v:219$16667 ($and).
Mapping dma_top.$flatten\ctl_rf.\c5_rf.$verific$i80$dma_chrf.v:302$16721 ($and).
Mapping dma_top.$auto$ff.cc:262:slice$19026 ($adffe).
Mapping dma_top.$flatten\ctl_rf.\c5_rf.$verific$i92$dma_chrf.v:315$16729 ($and).
Mapping dma_top.$auto$ff.cc:262:slice$19032 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19033 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19023 ($adffe).
Mapping dma_top.$flatten\ctl_rf.\c5_rf.$verific$mux_64$dma_chrf.v:279$16710 ($mux).
Mapping dma_top.$auto$ff.cc:262:slice$19020 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19063 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19060 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19057 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19066 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19073 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19072 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19069 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19076 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19083 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19080 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19077 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19086 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19087 ($adffe).
Mapping dma_top.$flatten\ctl_rf.\c5_rf.$verific$reduce_or_31$dma_chrf.v:258$16687 ($reduce_or).
Mapping dma_top.$flatten\ctl_rf.\c6_rf.$verific$i10$dma_chrf.v:220$17120 ($not).
Mapping dma_top.$flatten\ctl_rf.\c6_rf.$verific$i11$dma_chrf.v:220$17121 ($and).
Mapping dma_top.$flatten\ctl_rf.\c6_rf.$verific$i12$dma_chrf.v:220$17122 ($or).
Mapping dma_top.$flatten\ctl_rf.\c6_rf.$verific$i13$dma_chrf.v:220$17123 ($and).
Mapping dma_top.$flatten\ctl_rf.\c6_rf.$verific$i132$dma_chrf.v:366$17200 ($and).
Mapping dma_top.$flatten\ctl_rf.\c6_rf.$verific$i134$dma_chrf.v:366$17201 ($or).
Mapping dma_top.$flatten\ctl_rf.\c6_rf.$verific$i135$dma_chrf.v:366$17202 ($and).
Mapping dma_top.$flatten\ctl_rf.\c6_rf.$verific$i136$dma_chrf.v:367$17203 ($or).
Mapping dma_top.$flatten\ctl_rf.\c6_rf.$verific$i137$dma_chrf.v:368$17204 ($or).
Mapping dma_top.$flatten\ctl_rf.\c6_rf.$verific$i138$dma_chrf.v:368$17205 ($and).
Mapping dma_top.$flatten\ctl_rf.\c6_rf.$verific$i14$dma_chrf.v:220$17124 ($or).
Mapping dma_top.$flatten\ctl_rf.\c6_rf.$verific$i140$dma_chrf.v:382$17207 ($and).
Mapping dma_top.$auto$ff.cc:262:slice$18965 ($adffe).
Mapping dma_top.$flatten\ctl_rf.\c6_rf.$verific$i149$dma_chrf.v:390$17211 ($mux).
Mapping dma_top.$flatten\ctl_rf.\c6_rf.$verific$i156$dma_chrf.v:399$17213 ($and).
Mapping dma_top.$flatten\ctl_rf.\c6_rf.$verific$i20$dma_chrf.v:234$17128 ($and).
Mapping dma_top.$flatten\ctl_rf.\c6_rf.$verific$i21$dma_chrf.v:234$17129 ($and).
Mapping dma_top.$auto$ff.cc:262:slice$18974 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$18977 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$18978 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$18981 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$18982 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$18985 ($adffe).
Mapping dma_top.$flatten\ctl_rf.\c6_rf.$verific$i231$dma_chrf.v:467$17261 ($and).
Mapping dma_top.$flatten\ctl_rf.\c6_rf.$verific$i237$dma_chrf.v:468$17262 ($or).
Mapping dma_top.$flatten\ctl_rf.\c6_rf.$verific$i24$dma_chrf.v:234$17131 ($and).
Mapping dma_top.$flatten\ctl_rf.\c6_rf.$verific$i240$dma_chrf.v:470$17264 ($and).
Mapping dma_top.$auto$ff.cc:262:slice$18988 ($adffe).
Mapping dma_top.$flatten\ctl_rf.\c6_rf.$verific$i249$dma_chrf.v:480$17268 ($mux).
Mapping dma_top.$flatten\ctl_rf.\c6_rf.$verific$i251$dma_chrf.v:484$17270 ($and).
Mapping dma_top.$flatten\ctl_rf.\c6_rf.$verific$i268$dma_chrf.v:504$17278 ($and).
Mapping dma_top.$auto$ff.cc:262:slice$18950 ($adffe).
Mapping dma_top.$flatten\ctl_rf.\c6_rf.$verific$i270$dma_chrf.v:505$17280 ($and).
Mapping dma_top.$flatten\ctl_rf.\c6_rf.$verific$i272$dma_chrf.v:506$17282 ($and).
Mapping dma_top.$flatten\ctl_rf.\c6_rf.$verific$i274$dma_chrf.v:507$17284 ($and).
Mapping dma_top.$flatten\ctl_rf.\c6_rf.$verific$i28$dma_chrf.v:239$17134 ($mux).
Mapping dma_top.$flatten\ctl_rf.\c6_rf.$verific$i30$dma_chrf.v:258$17136 ($not).
Mapping dma_top.$flatten\ctl_rf.\c6_rf.$verific$i31$dma_chrf.v:258$17137 ($and).
Mapping dma_top.$flatten\ctl_rf.\c6_rf.$verific$i33$dma_chrf.v:258$17139 ($and).
Mapping dma_top.$flatten\ctl_rf.\c6_rf.$verific$i35$dma_chrf.v:259$17141 ($not).
Mapping dma_top.$flatten\ctl_rf.\c6_rf.$verific$i36$dma_chrf.v:259$17142 ($and).
Mapping dma_top.$flatten\ctl_rf.\c6_rf.$verific$i398$dma_chrf.v:544$17306 ($and).
Mapping dma_top.$flatten\ctl_rf.\c6_rf.$verific$i400$dma_chrf.v:545$17308 ($and).
Mapping dma_top.$flatten\ctl_rf.\c6_rf.$verific$i402$dma_chrf.v:546$17310 ($and).
Mapping dma_top.$flatten\ctl_rf.\c6_rf.$verific$i404$dma_chrf.v:547$17312 ($and).
Mapping dma_top.$auto$ff.cc:262:slice$18953 ($adffe).
Mapping dma_top.$flatten\ctl_rf.\c6_rf.$verific$i45$dma_chrf.v:267$17146 ($mux).
Mapping dma_top.$flatten\ctl_rf.\c6_rf.$verific$i48$dma_chrf.v:269$17148 ($and).
Mapping dma_top.$flatten\ctl_rf.\c6_rf.$verific$i49$dma_chrf.v:269$17149 ($and).
Mapping dma_top.$flatten\ctl_rf.\c6_rf.$verific$i51$dma_chrf.v:270$17151 ($and).
Mapping dma_top.$flatten\ctl_rf.\c6_rf.$verific$i52$dma_chrf.v:270$17152 ($and).
Mapping dma_top.$flatten\ctl_rf.\c6_rf.$verific$i528$dma_chrf.v:585$17329 ($and).
Mapping dma_top.$flatten\ctl_rf.\c6_rf.$verific$i530$dma_chrf.v:586$17331 ($and).
Mapping dma_top.$flatten\ctl_rf.\c6_rf.$verific$i532$dma_chrf.v:587$17333 ($and).
Mapping dma_top.$flatten\ctl_rf.\c6_rf.$verific$i534$dma_chrf.v:588$17335 ($and).
Mapping dma_top.$flatten\ctl_rf.\c6_rf.$verific$i54$dma_chrf.v:271$17154 ($or).
Mapping dma_top.$flatten\ctl_rf.\c6_rf.$verific$i55$dma_chrf.v:271$17155 ($and).
Mapping dma_top.$flatten\ctl_rf.\c6_rf.$verific$i658$dma_chrf.v:626$17352 ($and).
Mapping dma_top.$flatten\ctl_rf.\c6_rf.$verific$i660$dma_chrf.v:627$17354 ($and).
Mapping dma_top.$flatten\ctl_rf.\c6_rf.$verific$i67$dma_chrf.v:289$17163 ($and).
Mapping dma_top.$flatten\ctl_rf.\c6_rf.$verific$i69$dma_chrf.v:290$17165 ($and).
Mapping dma_top.$flatten\ctl_rf.\c6_rf.$verific$i7$dma_chrf.v:219$17117 ($and).
Mapping dma_top.$flatten\ctl_rf.\c6_rf.$verific$i71$dma_chrf.v:291$17167 ($and).
Mapping dma_top.$flatten\ctl_rf.\c6_rf.$verific$i713$dma_chrf.v:655$17366 ($and).
Mapping dma_top.$flatten\ctl_rf.\c6_rf.$verific$i73$dma_chrf.v:292$17169 ($and).
Mapping dma_top.$flatten\ctl_rf.\c6_rf.$verific$i79$dma_chrf.v:302$17171 ($not).
Mapping dma_top.$flatten\ctl_rf.\c6_rf.$verific$i8$dma_chrf.v:219$17118 ($and).
Mapping dma_top.$flatten\ctl_rf.\c6_rf.$verific$i80$dma_chrf.v:302$17172 ($and).
Mapping dma_top.$auto$ff.cc:262:slice$18962 ($adffe).
Mapping dma_top.$flatten\ctl_rf.\c6_rf.$verific$i92$dma_chrf.v:315$17180 ($and).
Mapping dma_top.$auto$ff.cc:262:slice$18968 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$18971 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$18959 ($adffe).
Mapping dma_top.$flatten\ctl_rf.\c6_rf.$verific$mux_64$dma_chrf.v:279$17161 ($mux).
Mapping dma_top.$auto$ff.cc:262:slice$18956 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$18993 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$18992 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$18991 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$18994 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$18999 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$18998 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$18995 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19000 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19007 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19004 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19001 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19008 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$19011 ($adffe).
Mapping dma_top.$flatten\ctl_rf.\c6_rf.$verific$reduce_or_31$dma_chrf.v:258$17138 ($reduce_or).
Mapping dma_top.$flatten\ctl_rf.\c7_rf.$verific$i10$dma_chrf.v:220$17571 ($not).
Mapping dma_top.$flatten\ctl_rf.\c7_rf.$verific$i11$dma_chrf.v:220$17572 ($and).
Mapping dma_top.$flatten\ctl_rf.\c7_rf.$verific$i12$dma_chrf.v:220$17573 ($or).
Mapping dma_top.$flatten\ctl_rf.\c7_rf.$verific$i13$dma_chrf.v:220$17574 ($and).
Mapping dma_top.$flatten\ctl_rf.\c7_rf.$verific$i132$dma_chrf.v:366$17651 ($and).
Mapping dma_top.$flatten\ctl_rf.\c7_rf.$verific$i134$dma_chrf.v:366$17652 ($or).
Mapping dma_top.$flatten\ctl_rf.\c7_rf.$verific$i135$dma_chrf.v:366$17653 ($and).
Mapping dma_top.$flatten\ctl_rf.\c7_rf.$verific$i136$dma_chrf.v:367$17654 ($or).
Mapping dma_top.$flatten\ctl_rf.\c7_rf.$verific$i137$dma_chrf.v:368$17655 ($or).
Mapping dma_top.$flatten\ctl_rf.\c7_rf.$verific$i138$dma_chrf.v:368$17656 ($and).
Mapping dma_top.$flatten\ctl_rf.\c7_rf.$verific$i14$dma_chrf.v:220$17575 ($or).
Mapping dma_top.$flatten\ctl_rf.\c7_rf.$verific$i140$dma_chrf.v:382$17658 ($and).
Mapping dma_top.$auto$ff.cc:262:slice$18897 ($adffe).
Mapping dma_top.$flatten\ctl_rf.\c7_rf.$verific$i149$dma_chrf.v:390$17662 ($mux).
Mapping dma_top.$flatten\ctl_rf.\c7_rf.$verific$i156$dma_chrf.v:399$17664 ($and).
Mapping dma_top.$flatten\ctl_rf.\c7_rf.$verific$i20$dma_chrf.v:234$17579 ($and).
Mapping dma_top.$flatten\ctl_rf.\c7_rf.$verific$i21$dma_chrf.v:234$17580 ($and).
Mapping dma_top.$auto$ff.cc:262:slice$18900 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$18903 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$18904 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$18905 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$18906 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$18909 ($adffe).
Mapping dma_top.$flatten\ctl_rf.\c7_rf.$verific$i231$dma_chrf.v:467$17712 ($and).
Mapping dma_top.$flatten\ctl_rf.\c7_rf.$verific$i237$dma_chrf.v:468$17713 ($or).
Mapping dma_top.$flatten\ctl_rf.\c7_rf.$verific$i24$dma_chrf.v:234$17582 ($and).
Mapping dma_top.$flatten\ctl_rf.\c7_rf.$verific$i240$dma_chrf.v:470$17715 ($and).
Mapping dma_top.$auto$ff.cc:262:slice$18912 ($adffe).
Mapping dma_top.$flatten\ctl_rf.\c7_rf.$verific$i249$dma_chrf.v:480$17719 ($mux).
Mapping dma_top.$flatten\ctl_rf.\c7_rf.$verific$i251$dma_chrf.v:484$17721 ($and).
Mapping dma_top.$flatten\ctl_rf.\c7_rf.$verific$i268$dma_chrf.v:504$17729 ($and).
Mapping dma_top.$auto$ff.cc:262:slice$18886 ($adffe).
Mapping dma_top.$flatten\ctl_rf.\c7_rf.$verific$i270$dma_chrf.v:505$17731 ($and).
Mapping dma_top.$flatten\ctl_rf.\c7_rf.$verific$i272$dma_chrf.v:506$17733 ($and).
Mapping dma_top.$flatten\ctl_rf.\c7_rf.$verific$i274$dma_chrf.v:507$17735 ($and).
Mapping dma_top.$flatten\ctl_rf.\c7_rf.$verific$i28$dma_chrf.v:239$17585 ($mux).
Mapping dma_top.$flatten\ctl_rf.\c7_rf.$verific$i30$dma_chrf.v:258$17587 ($not).
Mapping dma_top.$flatten\ctl_rf.\c7_rf.$verific$i31$dma_chrf.v:258$17588 ($and).
Mapping dma_top.$flatten\ctl_rf.\c7_rf.$verific$i33$dma_chrf.v:258$17590 ($and).
Mapping dma_top.$flatten\ctl_rf.\c7_rf.$verific$i35$dma_chrf.v:259$17592 ($not).
Mapping dma_top.$flatten\ctl_rf.\c7_rf.$verific$i36$dma_chrf.v:259$17593 ($and).
Mapping dma_top.$flatten\ctl_rf.\c7_rf.$verific$i398$dma_chrf.v:544$17757 ($and).
Mapping dma_top.$flatten\ctl_rf.\c7_rf.$verific$i400$dma_chrf.v:545$17759 ($and).
Mapping dma_top.$flatten\ctl_rf.\c7_rf.$verific$i402$dma_chrf.v:546$17761 ($and).
Mapping dma_top.$flatten\ctl_rf.\c7_rf.$verific$i404$dma_chrf.v:547$17763 ($and).
Mapping dma_top.$auto$ff.cc:262:slice$18887 ($adffe).
Mapping dma_top.$flatten\ctl_rf.\c7_rf.$verific$i45$dma_chrf.v:267$17597 ($mux).
Mapping dma_top.$flatten\ctl_rf.\c7_rf.$verific$i48$dma_chrf.v:269$17599 ($and).
Mapping dma_top.$flatten\ctl_rf.\c7_rf.$verific$i49$dma_chrf.v:269$17600 ($and).
Mapping dma_top.$flatten\ctl_rf.\c7_rf.$verific$i51$dma_chrf.v:270$17602 ($and).
Mapping dma_top.$flatten\ctl_rf.\c7_rf.$verific$i52$dma_chrf.v:270$17603 ($and).
Mapping dma_top.$flatten\ctl_rf.\c7_rf.$verific$i528$dma_chrf.v:585$17780 ($and).
Mapping dma_top.$flatten\ctl_rf.\c7_rf.$verific$i530$dma_chrf.v:586$17782 ($and).
Mapping dma_top.$flatten\ctl_rf.\c7_rf.$verific$i532$dma_chrf.v:587$17784 ($and).
Mapping dma_top.$flatten\ctl_rf.\c7_rf.$verific$i534$dma_chrf.v:588$17786 ($and).
Mapping dma_top.$flatten\ctl_rf.\c7_rf.$verific$i54$dma_chrf.v:271$17605 ($or).
Mapping dma_top.$flatten\ctl_rf.\c7_rf.$verific$i55$dma_chrf.v:271$17606 ($and).
Mapping dma_top.$flatten\ctl_rf.\c7_rf.$verific$i658$dma_chrf.v:626$17803 ($and).
Mapping dma_top.$flatten\ctl_rf.\c7_rf.$verific$i660$dma_chrf.v:627$17805 ($and).
Mapping dma_top.$flatten\ctl_rf.\c7_rf.$verific$i67$dma_chrf.v:289$17614 ($and).
Mapping dma_top.$flatten\ctl_rf.\c7_rf.$verific$i69$dma_chrf.v:290$17616 ($and).
Mapping dma_top.$flatten\ctl_rf.\c7_rf.$verific$i7$dma_chrf.v:219$17568 ($and).
Mapping dma_top.$flatten\ctl_rf.\c7_rf.$verific$i71$dma_chrf.v:291$17618 ($and).
Mapping dma_top.$flatten\ctl_rf.\c7_rf.$verific$i713$dma_chrf.v:655$17817 ($and).
Mapping dma_top.$flatten\ctl_rf.\c7_rf.$verific$i73$dma_chrf.v:292$17620 ($and).
Mapping dma_top.$flatten\ctl_rf.\c7_rf.$verific$i79$dma_chrf.v:302$17622 ($not).
Mapping dma_top.$flatten\ctl_rf.\c7_rf.$verific$i8$dma_chrf.v:219$17569 ($and).
Mapping dma_top.$flatten\ctl_rf.\c7_rf.$verific$i80$dma_chrf.v:302$17623 ($and).
Mapping dma_top.$auto$ff.cc:262:slice$18896 ($adffe).
Mapping dma_top.$flatten\ctl_rf.\c7_rf.$verific$i92$dma_chrf.v:315$17631 ($and).
Mapping dma_top.$auto$ff.cc:262:slice$18898 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$18899 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$18893 ($adffe).
Mapping dma_top.$flatten\ctl_rf.\c7_rf.$verific$mux_64$dma_chrf.v:279$17612 ($mux).
Mapping dma_top.$auto$ff.cc:262:slice$18890 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$18919 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$18916 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$18913 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$18922 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$18931 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$18928 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$18925 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$18934 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$18941 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$18938 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$18937 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$18944 ($adffe).
Mapping dma_top.$auto$ff.cc:262:slice$18947 ($adffe).
Mapping dma_top.$flatten\ctl_rf.\c7_rf.$verific$reduce_or_31$dma_chrf.v:258$17589 ($reduce_or).
Mapping dma_top.$flatten\de.$verific$and_704$dma_engine.v:1576$7349 ($and).
Mapping dma_top.$flatten\de.$verific$and_707$dma_engine.v:1583$7365 ($and).
Mapping dma_top.$flatten\de.$verific$equal_209$dma_engine.v:924$7055 ($eq).
Mapping dma_top.$flatten\de.$verific$equal_210$dma_engine.v:941$7056 ($eq).
Mapping dma_top.$flatten\de.$verific$equal_211$dma_engine.v:952$7057 ($eq).
Mapping dma_top.$flatten\de.$verific$equal_214$dma_engine.v:973$7060 ($eq).
Mapping dma_top.$flatten\de.$verific$equal_215$dma_engine.v:976$7061 ($eq).
Mapping dma_top.$flatten\de.$verific$equal_398$dma_engine.v:1223$7198 ($logic_not).
Mapping dma_top.$flatten\de.$verific$equal_400$dma_engine.v:1224$7200 ($eq).
Mapping dma_top.$flatten\de.$verific$equal_572$dma_engine.v:1562$7336 ($logic_not).
Mapping dma_top.$flatten\de.$verific$equal_631$dma_engine.v:1599$7368 ($eq).
Mapping dma_top.$flatten\de.$verific$equal_632$dma_engine.v:1600$7369 ($eq).
Mapping dma_top.$flatten\de.$verific$equal_658$dma_engine.v:1643$7389 ($eq).
Mapping dma_top.$flatten\de.$verific$equal_660$dma_engine.v:1644$7391 ($eq).
Mapping dma_top.$flatten\de.$verific$equal_662$dma_engine.v:1645$7393 ($logic_not).
Mapping dma_top.$flatten\de.$verific$equal_664$dma_engine.v:1646$7395 ($eq).
Mapping dma_top.$flatten\de.$verific$equal_666$dma_engine.v:1647$7397 ($eq).
Mapping dma_top.$flatten\de.$verific$equal_668$dma_engine.v:1648$7399 ($logic_not).
Mapping dma_top.$flatten\de.$verific$equal_686$dma_engine.v:1664$7414 ($logic_not).
Mapping dma_top.$flatten\de.$verific$equal_688$dma_engine.v:1666$7416 ($logic_not).
Mapping dma_top.$flatten\de.$verific$equal_690$dma_engine.v:1667$7418 ($eq).
Mapping dma_top.$flatten\de.$verific$equal_692$dma_engine.v:1668$7420 ($eq).
Mapping dma_top.$flatten\de.$verific$equal_694$dma_engine.v:1669$7422 ($logic_not).
Mapping dma_top.$flatten\de.$verific$equal_696$dma_engine.v:1670$7424 ($eq).
Mapping dma_top.$flatten\de.$verific$i101$dma_engine.v:747$6966 ($and).
Mapping dma_top.$flatten\de.$verific$i103$dma_engine.v:748$6968 ($not).
Mapping dma_top.$flatten\de.$verific$i104$dma_engine.v:748$6969 ($and).
Mapping dma_top.$flatten\de.$verific$i106$dma_engine.v:765$6971 ($and).
Mapping dma_top.$flatten\de.$verific$i108$dma_engine.v:766$6973 ($not).
Mapping dma_top.$flatten\de.$verific$i109$dma_engine.v:766$6974 ($and).
Mapping dma_top.$flatten\de.$verific$i113$dma_engine.v:773$6976 ($and).
Mapping dma_top.$flatten\de.$verific$i120$dma_engine.v:793$6983 ($or).
Mapping dma_top.$flatten\de.$verific$i121$dma_engine.v:793$6984 ($and).
Mapping dma_top.$flatten\de.$verific$i126$dma_engine.v:794$6989 ($and).
Mapping dma_top.$flatten\de.$verific$i16$dma_engine.v:622$6889 ($and).
Mapping dma_top.$flatten\de.$verific$i225$dma_engine.v:1015$7072 ($not).
Mapping dma_top.$flatten\de.$verific$i226$dma_engine.v:1015$7073 ($and).
Mapping dma_top.$flatten\de.$verific$i227$dma_engine.v:1015$7074 ($not).
Mapping dma_top.$flatten\de.$verific$i228$dma_engine.v:1015$7075 ($and).
Mapping dma_top.$flatten\de.$verific$i230$dma_engine.v:1016$7077 ($and).
Mapping dma_top.$flatten\de.$verific$i233$dma_engine.v:1017$7079 ($and).
Mapping dma_top.$flatten\de.$verific$i235$dma_engine.v:1017$7080 ($and).
Mapping dma_top.$flatten\de.$verific$i241$dma_engine.v:1018$7086 ($not).
Mapping dma_top.$flatten\de.$verific$i26$dma_engine.v:641$6899 ($and).
Mapping dma_top.$flatten\de.$verific$i264$dma_engine.v:1028$7098 ($or).
Mapping dma_top.$flatten\de.$verific$i267$dma_engine.v:1028$7099 ($and).
Mapping dma_top.$flatten\de.$verific$i268$dma_engine.v:1028$7100 ($and).
Mapping dma_top.$flatten\de.$verific$i296$dma_engine.v:1041$7116 ($not).
Mapping dma_top.$flatten\de.$verific$i299$dma_engine.v:1043$7119 ($and).
Mapping dma_top.$flatten\de.$verific$i304$dma_engine.v:1045$7124 ($and).
Mapping dma_top.$flatten\de.$verific$i311$dma_engine.v:1050$7129 ($or).
Mapping dma_top.$flatten\de.$verific$i323$dma_engine.v:1075$7137 ($not).
Mapping dma_top.$flatten\de.$verific$i328$dma_engine.v:1081$7141 ($mux).
Mapping dma_top.$flatten\de.$verific$i338$dma_engine.v:1096$7145 ($mux).
Mapping dma_top.$flatten\de.$verific$i340$dma_engine.v:1106$7147 ($and).
Mapping dma_top.$flatten\de.$verific$i351$dma_engine.v:1113$7158 ($not).
Mapping dma_top.$flatten\de.$verific$i361$dma_engine.v:1122$7162 ($mux).
Mapping dma_top.$flatten\de.$verific$i363$dma_engine.v:1127$7164 ($and).
Mapping dma_top.$flatten\de.$verific$i376$dma_engine.v:1151$7177 ($and).
Mapping dma_top.$flatten\de.$verific$i507$dma_engine.v:1456$7289 ($not).
Mapping dma_top.$flatten\de.$verific$i508$dma_engine.v:1456$7290 ($and).
Mapping dma_top.$flatten\de.$verific$i509$dma_engine.v:1457$7291 ($or).
Mapping dma_top.$flatten\de.$verific$i510$dma_engine.v:1458$7292 ($and).
Mapping dma_top.$flatten\de.$verific$i539$dma_engine.v:1497$7310 ($and).
Mapping dma_top.$flatten\de.$verific$i541$dma_engine.v:1499$7311 ($not).
Mapping dma_top.$flatten\de.$verific$i542$dma_engine.v:1499$7312 ($and).
Mapping dma_top.$flatten\de.$verific$i545$dma_engine.v:1500$7314 ($mux).
Mapping dma_top.$flatten\de.$verific$i570$dma_engine.v:1560$7333 ($or).
Mapping dma_top.$flatten\de.$verific$i574$dma_engine.v:1562$7337 ($and).
Mapping dma_top.$flatten\de.$verific$i593$dma_engine.v:1577$7350 ($not).
Mapping dma_top.$flatten\de.$verific$i596$dma_engine.v:1578$7352 ($not).
Mapping dma_top.$flatten\de.$verific$i597$dma_engine.v:1578$7353 ($and).
Mapping dma_top.$flatten\de.$verific$i598$dma_engine.v:1578$7354 ($not).
Mapping dma_top.$flatten\de.$verific$i599$dma_engine.v:1578$7355 ($and).
Mapping dma_top.$flatten\de.$verific$i600$dma_engine.v:1578$7356 ($or).
Mapping dma_top.$flatten\de.$verific$i601$dma_engine.v:1578$7357 ($or).
Mapping dma_top.$flatten\de.$verific$i602$dma_engine.v:1578$7358 ($not).
Mapping dma_top.$flatten\de.$verific$i603$dma_engine.v:1578$7359 ($not).
Mapping dma_top.$flatten\de.$verific$i604$dma_engine.v:1578$7360 ($and).
Mapping dma_top.$flatten\de.$verific$i605$dma_engine.v:1578$7361 ($or).
Mapping dma_top.$flatten\de.$verific$i607$dma_engine.v:1579$7362 ($and).
Mapping dma_top.$flatten\de.$verific$i64$dma_engine.v:702$6934 ($and).
Mapping dma_top.$flatten\de.$verific$i65$dma_engine.v:702$6935 ($and).
Mapping dma_top.$flatten\de.$verific$i67$dma_engine.v:703$6937 ($and).
Mapping dma_top.$flatten\de.$verific$i671$dma_engine.v:1651$7401 ($not).
Mapping dma_top.$flatten\de.$verific$i672$dma_engine.v:1652$7402 ($and).
Mapping dma_top.$flatten\de.$verific$i674$dma_engine.v:1653$7404 ($not).
Mapping dma_top.$flatten\de.$verific$i675$dma_engine.v:1654$7405 ($and).
Mapping dma_top.$flatten\de.$verific$i678$dma_engine.v:1656$7407 ($not).
Mapping dma_top.$flatten\de.$verific$i679$dma_engine.v:1656$7408 ($and).
Mapping dma_top.$flatten\de.$verific$i68$dma_engine.v:703$6938 ($and).
Mapping dma_top.$flatten\de.$verific$i683$dma_engine.v:1658$7410 ($and).
Mapping dma_top.$flatten\de.$verific$i69$dma_engine.v:703$6939 ($or).
Mapping dma_top.$flatten\de.$verific$i710$dma_engine.v:940$7384 ($not).
Mapping dma_top.$flatten\de.$verific$i711$dma_engine.v:951$7043 ($not).
Mapping dma_top.$flatten\de.$verific$i72$dma_engine.v:704$6941 ($and).
Mapping dma_top.$flatten\de.$verific$i73$dma_engine.v:704$6942 ($and).
Mapping dma_top.$flatten\de.$verific$i75$dma_engine.v:705$6944 ($and).
Mapping dma_top.$flatten\de.$verific$i76$dma_engine.v:705$6945 ($and).
Mapping dma_top.$flatten\de.$verific$i77$dma_engine.v:705$6946 ($or).
Mapping dma_top.$flatten\de.$verific$inv_708$dma_engine.v:1583$7366 ($not).
Mapping dma_top.$flatten\de.$verific$inv_721$dma_engine.v:1576$7216 ($not).
Mapping dma_top.$flatten\de.$verific$m1_arb_st_reg$dma_engine.v:1269$7209 ($adff).
Mapping dma_top.$flatten\de.$verific$mux_191$dma_engine.v:940$7044 ($mux).
Mapping dma_top.$flatten\de.$verific$mux_192$dma_engine.v:940$7045 ($mux).
Mapping dma_top.$auto$ff.cc:262:slice$18828 ($adffe).
Mapping dma_top.$flatten\de.$verific$mux_414$dma_engine.v:1285$7211 ($mux).
Mapping dma_top.$flatten\de.$verific$mux_416$dma_engine.v:1293$7213 ($mux).
Mapping dma_top.$flatten\de.$verific$mux_421$dma_engine.v:1309$7218 ($bmux).
Mapping dma_top.$flatten\de.$verific$mux_548$dma_engine.v:1514$7317 ($bmux).
Mapping dma_top.$flatten\de.$verific$mux_646$dma_engine.v:1630$7381 ($mux).
Mapping dma_top.$flatten\de.$verific$mux_647$dma_engine.v:1630$7382 ($mux).
Mapping dma_top.$flatten\de.$verific$or_703$dma_engine.v:1576$7346 ($or).
Mapping dma_top.$flatten\de.$verific$or_706$dma_engine.v:1582$7348 ($or).
Mapping dma_top.$flatten\de.$verific$reduce_nor_220$dma_engine.v:1010$7066 ($not).
Mapping dma_top.$flatten\de.$verific$reduce_nor_220$dma_engine.v:1010$7067 ($reduce_or).
Mapping dma_top.$flatten\de.$verific$reduce_or_14$dma_engine.v:622$6888 ($reduce_or).
Mapping dma_top.$flatten\de.$verific$xor_702$dma_engine.v:1575$7054 ($xor).
Mapping dma_top.$flatten\m1_decoder.$verific$and_228$dma_ahbdec.v:420$18773 ($and).
Mapping dma_top.$flatten\m1_decoder.$verific$and_230$dma_ahbdec.v:467$18822 ($and).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_10$dma_ahbdec.v:211$18605 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_103$dma_ahbdec.v:378$18728 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_107$dma_ahbdec.v:382$18730 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_11$dma_ahbdec.v:212$18606 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_111$dma_ahbdec.v:383$18734 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_115$dma_ahbdec.v:388$18736 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_119$dma_ahbdec.v:389$18740 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_12$dma_ahbdec.v:213$18607 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_123$dma_ahbdec.v:394$18742 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_127$dma_ahbdec.v:395$18746 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_131$dma_ahbdec.v:400$18748 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_135$dma_ahbdec.v:401$18752 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_139$dma_ahbdec.v:406$18754 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_143$dma_ahbdec.v:407$18758 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_147$dma_ahbdec.v:412$18760 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_15$dma_ahbdec.v:221$18612 ($logic_not).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_151$dma_ahbdec.v:413$18764 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_155$dma_ahbdec.v:418$18766 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_159$dma_ahbdec.v:419$18770 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_16$dma_ahbdec.v:222$18613 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_163$dma_ahbdec.v:424$18774 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_167$dma_ahbdec.v:425$18778 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_17$dma_ahbdec.v:223$18614 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_171$dma_ahbdec.v:429$18780 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_175$dma_ahbdec.v:430$18784 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_179$dma_ahbdec.v:435$18786 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_18$dma_ahbdec.v:224$18615 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_183$dma_ahbdec.v:436$18790 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_187$dma_ahbdec.v:441$18792 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_191$dma_ahbdec.v:442$18796 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_195$dma_ahbdec.v:447$18798 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_199$dma_ahbdec.v:448$18802 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_203$dma_ahbdec.v:453$18804 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_207$dma_ahbdec.v:454$18808 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_21$dma_ahbdec.v:232$18620 ($logic_not).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_211$dma_ahbdec.v:459$18810 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_215$dma_ahbdec.v:460$18814 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_219$dma_ahbdec.v:465$18816 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_22$dma_ahbdec.v:233$18621 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_223$dma_ahbdec.v:466$18820 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_23$dma_ahbdec.v:234$18622 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_24$dma_ahbdec.v:235$18623 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_27$dma_ahbdec.v:243$18628 ($logic_not).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_28$dma_ahbdec.v:244$18629 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_29$dma_ahbdec.v:245$18630 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_3$dma_ahbdec.v:200$18596 ($logic_not).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_30$dma_ahbdec.v:246$18631 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_33$dma_ahbdec.v:254$18636 ($logic_not).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_34$dma_ahbdec.v:255$18637 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_35$dma_ahbdec.v:256$18638 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_36$dma_ahbdec.v:257$18639 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_39$dma_ahbdec.v:265$18644 ($logic_not).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_4$dma_ahbdec.v:201$18597 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_40$dma_ahbdec.v:266$18645 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_41$dma_ahbdec.v:267$18646 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_42$dma_ahbdec.v:268$18647 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_45$dma_ahbdec.v:276$18652 ($logic_not).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_46$dma_ahbdec.v:277$18653 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_47$dma_ahbdec.v:278$18654 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_48$dma_ahbdec.v:279$18655 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_5$dma_ahbdec.v:202$18598 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_51$dma_ahbdec.v:287$18660 ($logic_not).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_52$dma_ahbdec.v:288$18661 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_53$dma_ahbdec.v:289$18662 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_54$dma_ahbdec.v:290$18663 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_57$dma_ahbdec.v:297$18668 ($logic_not).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_58$dma_ahbdec.v:298$18669 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_59$dma_ahbdec.v:299$18670 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_6$dma_ahbdec.v:203$18599 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_60$dma_ahbdec.v:300$18671 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_63$dma_ahbdec.v:308$18676 ($logic_not).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_64$dma_ahbdec.v:309$18677 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_65$dma_ahbdec.v:310$18678 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_66$dma_ahbdec.v:311$18679 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_69$dma_ahbdec.v:319$18684 ($logic_not).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_70$dma_ahbdec.v:320$18685 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_71$dma_ahbdec.v:321$18686 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_72$dma_ahbdec.v:322$18687 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_75$dma_ahbdec.v:330$18692 ($logic_not).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_76$dma_ahbdec.v:331$18693 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_77$dma_ahbdec.v:332$18694 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_78$dma_ahbdec.v:333$18695 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_81$dma_ahbdec.v:341$18700 ($logic_not).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_82$dma_ahbdec.v:342$18701 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_83$dma_ahbdec.v:343$18702 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_84$dma_ahbdec.v:344$18703 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_87$dma_ahbdec.v:352$18708 ($logic_not).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_88$dma_ahbdec.v:353$18709 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_89$dma_ahbdec.v:354$18710 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_9$dma_ahbdec.v:210$18604 ($logic_not).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_90$dma_ahbdec.v:355$18711 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_93$dma_ahbdec.v:363$18716 ($logic_not).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_94$dma_ahbdec.v:364$18717 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_95$dma_ahbdec.v:365$18718 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_96$dma_ahbdec.v:366$18719 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$equal_99$dma_ahbdec.v:377$18724 ($eq).
Mapping dma_top.$flatten\m1_decoder.$verific$or_101$dma_ahbdec.v:378$18726 ($or).
Mapping dma_top.$flatten\m1_decoder.$verific$or_102$dma_ahbdec.v:378$18727 ($or).
Mapping dma_top.$flatten\m1_decoder.$verific$or_109$dma_ahbdec.v:383$18732 ($or).
Mapping dma_top.$flatten\m1_decoder.$verific$or_110$dma_ahbdec.v:383$18733 ($or).
Mapping dma_top.$flatten\m1_decoder.$verific$or_117$dma_ahbdec.v:389$18738 ($or).
Mapping dma_top.$flatten\m1_decoder.$verific$or_118$dma_ahbdec.v:389$18739 ($or).
Mapping dma_top.$flatten\m1_decoder.$verific$or_125$dma_ahbdec.v:395$18744 ($or).
Mapping dma_top.$flatten\m1_decoder.$verific$or_126$dma_ahbdec.v:395$18745 ($or).
Mapping dma_top.$flatten\m1_decoder.$verific$or_133$dma_ahbdec.v:401$18750 ($or).
Mapping dma_top.$flatten\m1_decoder.$verific$or_134$dma_ahbdec.v:401$18751 ($or).
Mapping dma_top.$flatten\m1_decoder.$verific$or_141$dma_ahbdec.v:407$18756 ($or).
Mapping dma_top.$flatten\m1_decoder.$verific$or_142$dma_ahbdec.v:407$18757 ($or).
Mapping dma_top.$flatten\m1_decoder.$verific$or_149$dma_ahbdec.v:413$18762 ($or).
Mapping dma_top.$flatten\m1_decoder.$verific$or_150$dma_ahbdec.v:413$18763 ($or).
Mapping dma_top.$flatten\m1_decoder.$verific$or_157$dma_ahbdec.v:419$18768 ($or).
Mapping dma_top.$flatten\m1_decoder.$verific$or_158$dma_ahbdec.v:419$18769 ($or).
Mapping dma_top.$flatten\m1_decoder.$verific$or_165$dma_ahbdec.v:425$18776 ($or).
Mapping dma_top.$flatten\m1_decoder.$verific$or_166$dma_ahbdec.v:425$18777 ($or).
Mapping dma_top.$flatten\m1_decoder.$verific$or_173$dma_ahbdec.v:430$18782 ($or).
Mapping dma_top.$flatten\m1_decoder.$verific$or_174$dma_ahbdec.v:430$18783 ($or).
Mapping dma_top.$flatten\m1_decoder.$verific$or_181$dma_ahbdec.v:436$18788 ($or).
Mapping dma_top.$flatten\m1_decoder.$verific$or_182$dma_ahbdec.v:436$18789 ($or).
Mapping dma_top.$flatten\m1_decoder.$verific$or_189$dma_ahbdec.v:442$18794 ($or).
Mapping dma_top.$flatten\m1_decoder.$verific$or_190$dma_ahbdec.v:442$18795 ($or).
Mapping dma_top.$flatten\m1_decoder.$verific$or_197$dma_ahbdec.v:448$18800 ($or).
Mapping dma_top.$flatten\m1_decoder.$verific$or_198$dma_ahbdec.v:448$18801 ($or).
Mapping dma_top.$flatten\m1_decoder.$verific$or_205$dma_ahbdec.v:454$18806 ($or).
Mapping dma_top.$flatten\m1_decoder.$verific$or_206$dma_ahbdec.v:454$18807 ($or).
Mapping dma_top.$flatten\m1_decoder.$verific$or_213$dma_ahbdec.v:460$18812 ($or).
Mapping dma_top.$flatten\m1_decoder.$verific$or_214$dma_ahbdec.v:460$18813 ($or).
Mapping dma_top.$flatten\m1_decoder.$verific$or_221$dma_ahbdec.v:466$18818 ($or).
Mapping dma_top.$flatten\m1_decoder.$verific$or_222$dma_ahbdec.v:466$18819 ($or).
Mapping dma_top.$flatten\m1_decoder.$verific$reduce_nor_13$dma_ahbdec.v:215$18608 ($not).
Mapping dma_top.$flatten\m1_decoder.$verific$reduce_nor_13$dma_ahbdec.v:215$18609 ($reduce_or).
Mapping dma_top.$flatten\m1_decoder.$verific$reduce_nor_19$dma_ahbdec.v:226$18616 ($not).
Mapping dma_top.$flatten\m1_decoder.$verific$reduce_nor_19$dma_ahbdec.v:226$18617 ($reduce_or).
Mapping dma_top.$flatten\m1_decoder.$verific$reduce_nor_25$dma_ahbdec.v:237$18624 ($not).
Mapping dma_top.$flatten\m1_decoder.$verific$reduce_nor_25$dma_ahbdec.v:237$18625 ($reduce_or).
Mapping dma_top.$flatten\m1_decoder.$verific$reduce_nor_31$dma_ahbdec.v:248$18632 ($not).
Mapping dma_top.$flatten\m1_decoder.$verific$reduce_nor_31$dma_ahbdec.v:248$18633 ($reduce_or).
Mapping dma_top.$flatten\m1_decoder.$verific$reduce_nor_37$dma_ahbdec.v:259$18640 ($not).
Mapping dma_top.$flatten\m1_decoder.$verific$reduce_nor_37$dma_ahbdec.v:259$18641 ($reduce_or).
Mapping dma_top.$flatten\m1_decoder.$verific$reduce_nor_43$dma_ahbdec.v:270$18648 ($not).
Mapping dma_top.$flatten\m1_decoder.$verific$reduce_nor_43$dma_ahbdec.v:270$18649 ($reduce_or).
Mapping dma_top.$flatten\m1_decoder.$verific$reduce_nor_49$dma_ahbdec.v:281$18656 ($not).
Mapping dma_top.$flatten\m1_decoder.$verific$reduce_nor_49$dma_ahbdec.v:281$18657 ($reduce_or).
Mapping dma_top.$flatten\m1_decoder.$verific$reduce_nor_55$dma_ahbdec.v:292$18664 ($not).
Mapping dma_top.$flatten\m1_decoder.$verific$reduce_nor_55$dma_ahbdec.v:292$18665 ($reduce_or).
Mapping dma_top.$flatten\m1_decoder.$verific$reduce_nor_61$dma_ahbdec.v:302$18672 ($not).
Mapping dma_top.$flatten\m1_decoder.$verific$reduce_nor_61$dma_ahbdec.v:302$18673 ($reduce_or).
Mapping dma_top.$flatten\m1_decoder.$verific$reduce_nor_67$dma_ahbdec.v:313$18680 ($not).
Mapping dma_top.$flatten\m1_decoder.$verific$reduce_nor_67$dma_ahbdec.v:313$18681 ($reduce_or).
Mapping dma_top.$flatten\m1_decoder.$verific$reduce_nor_7$dma_ahbdec.v:205$18600 ($not).
Mapping dma_top.$flatten\m1_decoder.$verific$reduce_nor_7$dma_ahbdec.v:205$18601 ($reduce_or).
Mapping dma_top.$flatten\m1_decoder.$verific$reduce_nor_73$dma_ahbdec.v:324$18688 ($not).
Mapping dma_top.$flatten\m1_decoder.$verific$reduce_nor_73$dma_ahbdec.v:324$18689 ($reduce_or).
Mapping dma_top.$flatten\m1_decoder.$verific$reduce_nor_79$dma_ahbdec.v:335$18696 ($not).
Mapping dma_top.$flatten\m1_decoder.$verific$reduce_nor_79$dma_ahbdec.v:335$18697 ($reduce_or).
Mapping dma_top.$flatten\m1_decoder.$verific$reduce_nor_85$dma_ahbdec.v:346$18704 ($not).
Mapping dma_top.$flatten\m1_decoder.$verific$reduce_nor_85$dma_ahbdec.v:346$18705 ($reduce_or).
Mapping dma_top.$flatten\m1_decoder.$verific$reduce_nor_91$dma_ahbdec.v:357$18712 ($not).
Mapping dma_top.$flatten\m1_decoder.$verific$reduce_nor_91$dma_ahbdec.v:357$18713 ($reduce_or).
Mapping dma_top.$flatten\m1_decoder.$verific$reduce_nor_97$dma_ahbdec.v:368$18720 ($not).
Mapping dma_top.$flatten\m1_decoder.$verific$reduce_nor_97$dma_ahbdec.v:368$18721 ($reduce_or).
Mapping dma_top.$flatten\m1_mux.$verific$Mux_127$dma_ahbmux.v:667$18442 ($bmux).
Mapping dma_top.$flatten\m1_mux.$verific$equal_10$dma_ahbmux.v:273$18369 ($eq).
Mapping dma_top.$flatten\m1_mux.$verific$equal_11$dma_ahbmux.v:276$18370 ($eq).
Mapping dma_top.$flatten\m1_mux.$verific$equal_12$dma_ahbmux.v:279$18371 ($eq).
Mapping dma_top.$flatten\m1_mux.$verific$equal_16$dma_ahbmux.v:288$18377 ($eq).
Mapping dma_top.$flatten\m1_mux.$verific$equal_17$dma_ahbmux.v:291$18378 ($eq).
Mapping dma_top.$flatten\m1_mux.$verific$equal_18$dma_ahbmux.v:294$18379 ($eq).
Mapping dma_top.$flatten\m1_mux.$verific$equal_19$dma_ahbmux.v:297$18380 ($eq).
Mapping dma_top.$flatten\m1_mux.$verific$equal_20$dma_ahbmux.v:300$18381 ($eq).
Mapping dma_top.$flatten\m1_mux.$verific$equal_21$dma_ahbmux.v:303$18382 ($eq).
Mapping dma_top.$flatten\m1_mux.$verific$equal_22$dma_ahbmux.v:306$18383 ($eq).
Mapping dma_top.$flatten\m1_mux.$verific$equal_3$dma_ahbmux.v:255$18362 ($logic_not).
Mapping dma_top.$flatten\m1_mux.$verific$equal_6$dma_ahbmux.v:261$18365 ($eq).
Mapping dma_top.$flatten\m1_mux.$verific$equal_7$dma_ahbmux.v:264$18366 ($eq).
Mapping dma_top.$flatten\m1_mux.$verific$equal_8$dma_ahbmux.v:267$18367 ($eq).
Mapping dma_top.$flatten\m1_mux.$verific$equal_9$dma_ahbmux.v:270$18368 ($eq).
Mapping dma_top.$flatten\m1_mux.$verific$hrdy_df_reg$dma_ahbmux.v:359$18415 ($adff).
Mapping dma_top.$flatten\m1_mux.$verific$i129$dma_ahbmux.v:670$18443 ($mux).
Mapping dma_top.$flatten\m1_mux.$verific$i30$dma_ahbmux.v:319$18392 ($not).
Mapping dma_top.$flatten\m1_mux.$verific$i31$dma_ahbmux.v:319$18393 ($and).
Mapping dma_top.$flatten\m1_mux.$verific$i42$dma_ahbmux.v:335$18401 ($or).
Mapping dma_top.$flatten\m1_mux.$verific$i43$dma_ahbmux.v:335$18402 ($not).
Mapping dma_top.$flatten\m1_mux.$verific$i53$dma_ahbmux.v:344$18408 ($and).
Mapping dma_top.$flatten\m1_mux.$verific$i61$dma_ahbmux.v:357$18411 ($not).
Mapping dma_top.$flatten\m1_mux.$verific$i66$dma_ahbmux.v:359$18414 ($mux).
Mapping dma_top.$flatten\m1_mux.$verific$mux_108$dma_ahbmux.v:566$18423 ($bmux).
Mapping dma_top.$flatten\m1_mux.$verific$mux_109$dma_ahbmux.v:569$18424 ($mux).
Mapping dma_top.$flatten\m1_mux.$verific$mux_27$dma_ahbmux.v:316$18390 ($mux).
Mapping dma_top.$flatten\m1_mux.$verific$mux_90$dma_ahbmux.v:466$18421 ($bmux).
Mapping dma_top.$flatten\m1_mux.$verific$reduce_or_25$dma_ahbmux.v:311$18388 ($reduce_or).
Mapping dma_top.$flatten\m1_mux.$verific$reduce_or_40$dma_ahbmux.v:335$18400 ($reduce_or).

24. Executing OPT_EXPR pass (perform const folding).
Optimizing module dma_top.
<suppressed ~2631 debug messages>

25. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\dma_top'.
<suppressed ~3708 debug messages>
Removed a total of 1236 cells.

26. Executing OPT_DFF pass (perform DFF optimizations).

27. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \dma_top..
Removed 146 unused cells and 1615 unused wires.
<suppressed ~176 debug messages>

28. Executing OPT pass (performing simple optimizations).

28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module dma_top.

28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\dma_top'.
Removed a total of 0 cells.

28.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \dma_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

28.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \dma_top.
Performed a total of 0 changes.

28.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\dma_top'.
Removed a total of 0 cells.

28.6. Executing OPT_DFF pass (perform DFF optimizations).

28.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \dma_top..

28.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module dma_top.

28.9. Finished OPT passes. (There is nothing left to do.)

29. Executing OPT pass (performing simple optimizations).

29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module dma_top.
<suppressed ~786 debug messages>

29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\dma_top'.
<suppressed ~24 debug messages>
Removed a total of 8 cells.

29.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$33566 ($_DFF_PN0_) from module dma_top (D = $auto$simplemap.cc:309:simplemap_bmux$33590 [0], Q = \de.m1_arb_st [0]).
Adding EN signal on $auto$ff.cc:262:slice$27414 ($_DFF_PN0_) from module dma_top (D = \ch_sel.dma_rrarb3.next_state [2], Q = \ch_sel.dma_rrarb3.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$27413 ($_DFF_PN0_) from module dma_top (D = \ch_sel.dma_rrarb3.next_state [1], Q = \ch_sel.dma_rrarb3.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$27412 ($_DFF_PN0_) from module dma_top (D = \ch_sel.dma_rrarb3.next_state [0], Q = \ch_sel.dma_rrarb3.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$27195 ($_DFF_PN0_) from module dma_top (D = \ch_sel.dma_rrarb2.next_state [2], Q = \ch_sel.dma_rrarb2.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$27194 ($_DFF_PN0_) from module dma_top (D = \ch_sel.dma_rrarb2.next_state [1], Q = \ch_sel.dma_rrarb2.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$27193 ($_DFF_PN0_) from module dma_top (D = \ch_sel.dma_rrarb2.next_state [0], Q = \ch_sel.dma_rrarb2.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$26976 ($_DFF_PN0_) from module dma_top (D = \ch_sel.dma_rrarb1.next_state [2], Q = \ch_sel.dma_rrarb1.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$26975 ($_DFF_PN0_) from module dma_top (D = \ch_sel.dma_rrarb1.next_state [1], Q = \ch_sel.dma_rrarb1.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$26974 ($_DFF_PN0_) from module dma_top (D = \ch_sel.dma_rrarb1.next_state [0], Q = \ch_sel.dma_rrarb1.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$26757 ($_DFF_PN0_) from module dma_top (D = \ch_sel.dma_rrarb0.next_state [2], Q = \ch_sel.dma_rrarb0.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$26756 ($_DFF_PN0_) from module dma_top (D = \ch_sel.dma_rrarb0.next_state [1], Q = \ch_sel.dma_rrarb0.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$26755 ($_DFF_PN0_) from module dma_top (D = \ch_sel.dma_rrarb0.next_state [0], Q = \ch_sel.dma_rrarb0.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$24145 ($_DFF_PN0_) from module dma_top (D = \ahb_mst1.mx_cmd_ns [1], Q = \ahb_mst1.mx_cmd_st [1]).
Adding EN signal on $auto$ff.cc:262:slice$24144 ($_DFF_PN0_) from module dma_top (D = \ahb_mst1.mx_cmd_ns [0], Q = \ahb_mst1.mx_cmd_st [0]).
Adding EN signal on $auto$ff.cc:262:slice$23638 ($_DFF_PN0_) from module dma_top (D = \ahb_mst0.mx_cmd_ns [1], Q = \ahb_mst0.mx_cmd_st [1]).
Adding EN signal on $auto$ff.cc:262:slice$23637 ($_DFF_PN0_) from module dma_top (D = \ahb_mst0.mx_cmd_ns [0], Q = \ahb_mst0.mx_cmd_st [0]).

29.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \dma_top..
Removed 1 unused cells and 120 unused wires.
<suppressed ~2 debug messages>

29.5. Rerunning OPT passes. (Removed registers in this run.)

29.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module dma_top.
<suppressed ~531 debug messages>

29.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\dma_top'.
<suppressed ~1260 debug messages>
Removed a total of 420 cells.

29.8. Executing OPT_DFF pass (perform DFF optimizations).

29.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \dma_top..
Removed 0 unused cells and 428 unused wires.
<suppressed ~1 debug messages>

29.10. Finished fast OPT passes.

30. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

31. Executing OPT pass (performing simple optimizations).

31.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module dma_top.

31.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\dma_top'.
Removed a total of 0 cells.

31.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \dma_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

31.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \dma_top.
Performed a total of 0 changes.

31.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\dma_top'.
Removed a total of 0 cells.

31.6. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$21679 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$23301
        $auto$simplemap.cc:86:simplemap_bitop$23299

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$21680 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$23300
        $auto$simplemap.cc:86:simplemap_bitop$23296

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$21837 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$23919
        $auto$simplemap.cc:86:simplemap_bitop$23916

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$21838 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$23918
        $auto$simplemap.cc:86:simplemap_bitop$23913

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$29701 in front of them:
        $auto$simplemap.cc:312:simplemap_bmux$29604
        $auto$simplemap.cc:312:simplemap_bmux$29572

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$29702 in front of them:
        $auto$simplemap.cc:312:simplemap_bmux$29605
        $auto$simplemap.cc:312:simplemap_bmux$29573

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$29703 in front of them:
        $auto$simplemap.cc:312:simplemap_bmux$29606
        $auto$simplemap.cc:312:simplemap_bmux$29574

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$29704 in front of them:
        $auto$simplemap.cc:312:simplemap_bmux$29607
        $auto$simplemap.cc:312:simplemap_bmux$29575

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$29705 in front of them:
        $auto$simplemap.cc:312:simplemap_bmux$29608
        $auto$simplemap.cc:312:simplemap_bmux$29576

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$29706 in front of them:
        $auto$simplemap.cc:312:simplemap_bmux$29609
        $auto$simplemap.cc:312:simplemap_bmux$29577

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$29707 in front of them:
        $auto$simplemap.cc:312:simplemap_bmux$29610
        $auto$simplemap.cc:312:simplemap_bmux$29578

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$29708 in front of them:
        $auto$simplemap.cc:312:simplemap_bmux$29611
        $auto$simplemap.cc:312:simplemap_bmux$29579

31.7. Executing OPT_DFF pass (perform DFF optimizations).

31.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \dma_top..

31.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module dma_top.
<suppressed ~18 debug messages>

31.10. Rerunning OPT passes. (Maybe there is more to do..)

31.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \dma_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~12 debug messages>

31.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \dma_top.
Performed a total of 0 changes.

31.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\dma_top'.
Removed a total of 0 cells.

31.14. Executing OPT_SHARE pass.

31.15. Executing OPT_DFF pass (perform DFF optimizations).

31.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \dma_top..

31.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module dma_top.

31.18. Finished OPT passes. (There is nothing left to do.)

32. Executing TECHMAP pass (map to technology primitives).

32.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

32.2. Continuing TECHMAP pass.
Using template $paramod$6df0329addda9228fcc2546de2aaf14ad26c98e1\_90_alu for cells of type $alu.
Using template $paramod$32a7b7b86c07519b7537abc18e96f0331f97914d\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $not.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010000 for cells of type $lcu.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $or.
No more expansions possible.
<suppressed ~649 debug messages>

33. Executing OPT pass (performing simple optimizations).

33.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module dma_top.
<suppressed ~208 debug messages>

33.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\dma_top'.
<suppressed ~60 debug messages>
Removed a total of 20 cells.

33.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \dma_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

33.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \dma_top.
Performed a total of 0 changes.

33.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\dma_top'.
Removed a total of 0 cells.

33.6. Executing OPT_DFF pass (perform DFF optimizations).

33.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \dma_top..
Removed 84 unused cells and 334 unused wires.
<suppressed ~85 debug messages>

33.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module dma_top.

33.9. Rerunning OPT passes. (Maybe there is more to do..)

33.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \dma_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

33.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \dma_top.
Performed a total of 0 changes.

33.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\dma_top'.
Removed a total of 0 cells.

33.13. Executing OPT_DFF pass (perform DFF optimizations).

33.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \dma_top..

33.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module dma_top.

33.16. Finished OPT passes. (There is nothing left to do.)

34. Executing ABC pass (technology mapping using ABC).

34.1. Extracting gate netlist of module `\dma_top' to `<abc-temp-dir>/input.blif'..
Extracted 8807 gates and 11102 wires to a netlist network with 2293 inputs and 767 outputs.

34.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/aram/Workspace/yosys_verific_rs/scripts/synth/abc/abc_base6.a21.scr 
ABC: netlist  : i/o =   2293/    767  and =   14956  lev =   30 (9.73)  mem = 0.25 MB
ABC: Mapping (K=6)  :  lut =   2454  edge =   12287  lev =   10 (3.75)  mem = 0.13 MB
ABC: netlist  : i/o =   2293/    767  and =   14836  lev =   29 (9.30)  mem = 0.25 MB
ABC: Mapping (K=6)  :  lut =   2481  edge =   12119  lev =    9 (3.75)  mem = 0.13 MB
ABC: netlist  : i/o =   2293/    767  and =   14847  lev =   25 (9.28)  mem = 0.25 MB
ABC: Mapping (K=6)  :  lut =   2444  edge =   12086  lev =   10 (3.48)  mem = 0.13 MB
ABC: netlist  : i/o =   2293/    767  and =   14853  lev =   25 (8.38)  mem = 0.25 MB
ABC: Mapping (K=6)  :  lut =   2422  edge =   12064  lev =   10 (3.47)  mem = 0.13 MB
ABC: netlist  : i/o =   2293/    767  and =   14817  lev =   29 (9.40)  mem = 0.25 MB
ABC: Mapping (K=6)  :  lut =   2447  edge =   12117  lev =   10 (3.47)  mem = 0.13 MB
ABC: netlist  : i/o =   2293/    767  and =   14734  lev =   26 (9.40)  mem = 0.31 MB
ABC: Mapping (K=6)  :  lut =   2396  edge =   11971  lev =   10 (3.46)  mem = 0.13 MB
ABC: netlist  : i/o =   2293/    767  and =   14785  lev =   27 (9.39)  mem = 0.32 MB
ABC: Mapping (K=6)  :  lut =   2394  edge =   12022  lev =   10 (3.47)  mem = 0.13 MB
ABC: netlist  : i/o =   2293/    767  and =   14780  lev =   26 (9.33)  mem = 0.32 MB
ABC: Mapping (K=6)  :  lut =   2396  edge =   11972  lev =   10 (3.46)  mem = 0.13 MB
ABC: netlist  : i/o =   2293/    767  and =   14832  lev =   28 (8.62)  mem = 0.32 MB
ABC: Mapping (K=6)  :  lut =   2389  edge =   12038  lev =    9 (3.30)  mem = 0.13 MB
ABC: netlist  : i/o =   2293/    767  and =   14752  lev =   27 (9.33)  mem = 0.32 MB
ABC: Mapping (K=6)  :  lut =   2368  edge =   11930  lev =   11 (3.40)  mem = 0.13 MB
ABC: netlist  : i/o =   2293/    767  and =   14808  lev =   25 (9.35)  mem = 0.32 MB
ABC: Mapping (K=6)  :  lut =   2379  edge =   11975  lev =   11 (3.40)  mem = 0.13 MB
ABC: netlist  : i/o =   2293/    767  and =   14821  lev =   27 (9.43)  mem = 0.32 MB
ABC: Mapping (K=6)  :  lut =   2359  edge =   11914  lev =   11 (3.42)  mem = 0.13 MB
ABC: netlist  : i/o =   2293/    767  and =   14819  lev =   26 (9.38)  mem = 0.32 MB
ABC: Mapping (K=6)  :  lut =   2355  edge =   11914  lev =   11 (3.42)  mem = 0.13 MB
ABC: netlist  : i/o =   2293/    767  and =   14819  lev =   26 (9.38)  mem = 0.25 MB
ABC: Mapping (K=6)  :  lut =   2355  edge =   11914  lev =   11 (3.42)  mem = 0.13 MB
ABC: netlist  : i/o =   2293/    767  and =   14819  lev =   26 (9.38)  mem = 0.32 MB
ABC: Mapping (K=6)  :  lut =   2355  edge =   11914  lev =   11 (3.42)  mem = 0.13 MB
ABC: netlist  : i/o =   2293/    767  and =   14836  lev =   25 (9.40)  mem = 0.25 MB
ABC: Mapping (K=6)  :  lut =   2355  edge =   11914  lev =   11 (3.42)  mem = 0.13 MB
ABC: + write_blif <abc-temp-dir>/output.blif 

34.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     2361
ABC RESULTS:        internal signals:     8042
ABC RESULTS:           input signals:     2293
ABC RESULTS:          output signals:      767
Removing temp directory.

35. Executing OPT pass (performing simple optimizations).

35.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module dma_top.

35.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\dma_top'.
Removed a total of 0 cells.

35.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \dma_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

35.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \dma_top.
Performed a total of 0 changes.

35.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\dma_top'.
Removed a total of 0 cells.

35.6. Executing OPT_DFF pass (perform DFF optimizations).
Handling always-active async load on $auto$ff.cc:262:slice$24800 ($_DLATCH_P_) from module dma_top (changing to combinatorial circuit).
Handling always-active async load on $auto$ff.cc:262:slice$24799 ($_DLATCH_P_) from module dma_top (changing to combinatorial circuit).
Handling always-active async load on $auto$ff.cc:262:slice$24798 ($_DLATCH_P_) from module dma_top (changing to combinatorial circuit).
Handling never-active EN on $auto$ff.cc:262:slice$21408 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$21407 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$21406 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$21405 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$21404 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$21403 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$21402 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$21401 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$21400 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$21399 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$21398 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$21397 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$21396 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$21395 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$21394 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$21393 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$21392 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$21391 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$21390 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$21389 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$21388 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$21387 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$21386 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$21385 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$21384 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$21383 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$21382 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$21381 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$21380 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$21379 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$21378 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$21377 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$21334 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$21333 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$21332 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$21331 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$21330 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$21329 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$21328 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$21327 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$21326 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$21325 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$21324 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$21323 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$21322 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$21321 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$21320 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$21319 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$21318 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$21317 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$21316 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$21315 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$21314 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$21313 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$21312 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$21311 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$21310 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$21309 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$21308 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$21307 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$21306 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$21305 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$21304 ($_DFFE_PN0P_) from module dma_top (removing D path).
Handling never-active EN on $auto$ff.cc:262:slice$21303 ($_DFFE_PN0P_) from module dma_top (removing D path).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$21303 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$21304 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$21305 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$21306 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$21307 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$21308 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$21309 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$21310 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$21311 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$21312 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$21313 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$21314 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$21315 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$21316 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$21317 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$21318 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$21319 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$21320 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$21321 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$21322 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$21323 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$21324 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$21325 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$21326 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$21327 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$21328 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$21329 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$21330 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$21331 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$21332 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$21333 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$21334 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$21377 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$21378 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$21379 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$21380 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$21381 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$21382 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$21383 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$21384 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$21385 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$21386 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$21387 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$21388 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$21389 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$21390 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$21391 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$21392 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$21393 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$21394 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$21395 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$21396 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$21397 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$21398 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$21399 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$21400 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$21401 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$21402 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$21403 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$21404 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$21405 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$21406 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$21407 ($_DLATCH_N_) from module dma_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$21408 ($_DLATCH_N_) from module dma_top.

35.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \dma_top..
Removed 431 unused cells and 6113 unused wires.
<suppressed ~1079 debug messages>

35.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module dma_top.

35.9. Rerunning OPT passes. (Maybe there is more to do..)

35.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \dma_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

35.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \dma_top.
Performed a total of 0 changes.

35.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\dma_top'.
Removed a total of 0 cells.

35.13. Executing OPT_DFF pass (perform DFF optimizations).

35.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \dma_top..

35.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module dma_top.

35.16. Finished OPT passes. (There is nothing left to do.)

36. Executing HIERARCHY pass (managing design hierarchy).

36.1. Analyzing design hierarchy..
Top module:  \dma_top

36.2. Analyzing design hierarchy..
Top module:  \dma_top
Removed 0 unused modules.

37. Printing statistics.

=== dma_top ===

   Number of wires:               3051
   Number of wire bits:          13109
   Number of public wires:        1587
   Number of public wire bits:   11645
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3702
     $_DFFE_PN0N_                    1
     $_DFFE_PN0P_                 1597
     $_DFFE_PN1P_                   47
     $_DFF_PN0_                     46
     $_DFF_PN1_                      4
     $_DFF_P_                       20
     $lut                         1987

38. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \dma_top..
Removed 0 unused cells and 974 unused wires.
<suppressed ~974 debug messages>

39. Executing BLIF backend.

Warnings: 17 unique messages, 32 total
End of script. Logfile hash: 129e18593a, CPU: user 49.20s system 0.13s, MEM: 96.85 MB peak
Yosys 0.14+36 (git sha1 15a4e900b, gcc 7.1.0 -fPIC -Os)
Time spent: 43% 1x abc (36 sec), 31% 22x opt_dff (26 sec), ...
