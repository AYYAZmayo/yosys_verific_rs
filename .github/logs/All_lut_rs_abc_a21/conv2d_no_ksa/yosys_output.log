
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.14+36 (git sha1 15a4e900b, gcc 7.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jan22_SW_Release, released at Sat Jan 29 02:42:49 2022.

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jan22_SW_Release, released at Sat Jan 29 02:42:49 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'adder.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'control.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'conv2d.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'fadder.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tfl.v'
VERIFIC-WARNING [VERI-1407] tfl.v:385: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:260: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:254: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:248: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:241: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:237: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:236: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:225: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:221: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:219: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:218: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:217: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:216: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:215: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:214: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:213: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:212: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:211: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:210: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:209: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:206: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:160: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:158: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:156: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:149: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:144: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:129: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:128: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:5: attribute target identifier 'pad' not found in this scope

3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] tfl.v:2: compiling module 'top'
VERIFIC-INFO [VERI-1018] control.v:1: compiling module 'CONTROL'
VERIFIC-WARNING [VERI-1209] control.v:155: expression size 32 truncated to fit in target size 16
VERIFIC-WARNING [VERI-1209] control.v:161: expression size 21 truncated to fit in target size 20
VERIFIC-WARNING [VERI-1209] control.v:166: expression size 21 truncated to fit in target size 20
VERIFIC-WARNING [VERI-1209] control.v:171: expression size 21 truncated to fit in target size 20
VERIFIC-WARNING [VERI-1209] control.v:205: expression size 21 truncated to fit in target size 20
VERIFIC-WARNING [VERI-1209] control.v:209: expression size 21 truncated to fit in target size 20
VERIFIC-WARNING [VERI-1209] control.v:213: expression size 21 truncated to fit in target size 20
VERIFIC-INFO [VERI-1018] conv2d.v:2: compiling module 'conv2d'
VERIFIC-INFO [VERI-1018] adder.v:1: compiling module 'myadder(WIDTH=20)'
VERIFIC-WARNING [VERI-1209] conv2d.v:418: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:435: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:442: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:449: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:456: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:463: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:470: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:477: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:540: expression size 14 truncated to fit in target size 13
VERIFIC-WARNING [VERI-1209] conv2d.v:606: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:630: expression size 21 truncated to fit in target size 20
VERIFIC-WARNING [VERI-1209] conv2d.v:638: expression size 10 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] conv2d.v:669: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:672: expression size 32 truncated to fit in target size 14
VERIFIC-WARNING [VERI-1209] conv2d.v:673: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:681: expression size 21 truncated to fit in target size 20
VERIFIC-WARNING [VERI-1209] conv2d.v:685: expression size 10 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] conv2d.v:687: expression size 32 truncated to fit in target size 13
VERIFIC-WARNING [VERI-1209] conv2d.v:688: expression size 10 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] conv2d.v:689: expression size 10 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] conv2d.v:717: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:720: expression size 32 truncated to fit in target size 14
VERIFIC-WARNING [VERI-1209] conv2d.v:721: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:729: expression size 21 truncated to fit in target size 20
VERIFIC-WARNING [VERI-1209] conv2d.v:733: expression size 10 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] conv2d.v:735: expression size 10 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] conv2d.v:736: expression size 10 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] conv2d.v:842: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:867: expression size 21 truncated to fit in target size 20
VERIFIC-WARNING [VERI-1209] conv2d.v:869: expression size 10 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] conv2d.v:874: expression size 17 truncated to fit in target size 16
VERIFIC-INFO [VERI-1018] adder.v:1: compiling module 'myadder(WIDTH=24)'
VERIFIC-INFO [VERI-1018] adder.v:1: compiling module 'myadder(WIDTH=16)'
VERIFIC-INFO [VERI-1018] adder.v:1: compiling module 'myadder(WIDTH=12)'
VERIFIC-INFO [VERI-1018] fadder.v:1: compiling module 'fadder(WIDTH=12)'
VERIFIC-WARNING [VERI-1209] conv2d.v:1119: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:1138: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:1153: expression size 3 truncated to fit in target size 2
VERIFIC-WARNING [VERI-1209] conv2d.v:1156: expression size 10 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] conv2d.v:1169: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:1173: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:1181: expression size 10 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] conv2d.v:1199: expression size 17 truncated to fit in target size 16
Importing module top.
Importing module CONTROL.
Importing module conv2d.
Importing module myadder(WIDTH=20).
Importing module myadder(WIDTH=24).
Importing module myadder(WIDTH=16).
Importing module myadder(WIDTH=12).
Importing module fadder(WIDTH=12).

3.1. Analyzing design hierarchy..
Top module:  \top
Used module:     \conv2d
Used module:         \fadder(WIDTH=12)
Used module:         \myadder(WIDTH=12)
Used module:         \myadder(WIDTH=16)
Used module:         \myadder(WIDTH=24)
Used module:         \myadder(WIDTH=20)
Used module:     \CONTROL

3.2. Analyzing design hierarchy..
Top module:  \top
Used module:     \conv2d
Used module:         \fadder(WIDTH=12)
Used module:         \myadder(WIDTH=12)
Used module:         \myadder(WIDTH=16)
Used module:         \myadder(WIDTH=24)
Used module:         \myadder(WIDTH=20)
Used module:     \CONTROL
Removed 0 unused modules.

4. Executing PROC pass (convert processes to netlists).

4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

4.4. Executing PROC_INIT pass (extract init attributes).

4.5. Executing PROC_ARST pass (detect async resets in processes).

4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

4.7. Executing PROC_DLATCH pass (convert process syncs to latches).

4.8. Executing PROC_DFF pass (convert process syncs to FFs).

4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module fadder(WIDTH=12).
Optimizing module myadder(WIDTH=12).
Optimizing module myadder(WIDTH=16).
Optimizing module myadder(WIDTH=24).
Optimizing module myadder(WIDTH=20).
Optimizing module conv2d.
<suppressed ~168 debug messages>
Optimizing module CONTROL.
<suppressed ~41 debug messages>
Optimizing module top.

5. Executing FLATTEN pass (flatten design).
Deleting now unused module fadder(WIDTH=12).
Deleting now unused module myadder(WIDTH=12).
Deleting now unused module myadder(WIDTH=16).
Deleting now unused module myadder(WIDTH=24).
Deleting now unused module myadder(WIDTH=20).
Deleting now unused module conv2d.
Deleting now unused module CONTROL.
<suppressed ~23 debug messages>

6. Executing TRIBUF pass.

7. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 8 unused cells and 2933 unused wires.
<suppressed ~273 debug messages>

9. Executing CHECK pass (checking for obvious problems).
Checking module top...
Found and reported 0 problems.

10. Executing DEMINOUT pass (demote inout ports to input or output).

11. Executing OPT pass (performing simple optimizations).

11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $flatten\u_conv2d.$verific$i1027$conv2d.v:1124$4260: \u_conv2d.filter_reload -> 1'0
      Replacing known input bits on port A of cell $flatten\u_conv2d.$verific$i1014$conv2d.v:1113$4251: \u_conv2d.filter_reload -> 1'1
      Replacing known input bits on port A of cell $flatten\u_conv2d.$verific$i357$conv2d.v:607$2825: \u_conv2d.i_bias_wen -> 1'0
      Replacing known input bits on port A of cell $flatten\u_conv2d.$verific$i727$conv2d.v:843$3047: \u_conv2d.i_pixel_wen -> 1'0
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~154 debug messages>

11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$Select_1181$conv2d.v:1245$4344: { $flatten\u_conv2d.$verific$n11580$1926 $flatten\u_conv2d.$verific$n11243$1911 $flatten\u_conv2d.$verific$n11249$1917 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$Select_1184$conv2d.v:1245$4347: { $flatten\u_conv2d.$verific$n11243$1911 $flatten\u_conv2d.$verific$n11249$1917 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$Select_1194$conv2d.v:1245$4356: { $flatten\u_conv2d.$verific$n11615$1934 $flatten\u_conv2d.$verific$n11256$1924 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$Select_1197$conv2d.v:1245$4359: { $flatten\u_conv2d.$verific$n11617$1936 $flatten\u_conv2d.$verific$n11618$1937 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$Select_1203$conv2d.v:1245$4363: { $flatten\u_conv2d.$verific$n11636$1940 $flatten\u_conv2d.$verific$n11249$1917 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$Select_632$conv2d.v:784$2969: { $flatten\u_conv2d.$verific$n6557$1815 $auto$opt_reduce.cc:134:opt_pmux$4439 $flatten\u_conv2d.$verific$n6560$1818 $flatten\u_conv2d.$verific$n6561$1819 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$Select_633$conv2d.v:784$2970: { $flatten\u_conv2d.$verific$n6557$1815 $auto$opt_reduce.cc:134:opt_pmux$4441 $flatten\u_conv2d.$verific$n6560$1818 $flatten\u_conv2d.$verific$n6561$1819 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$Select_638$conv2d.v:784$2975: $auto$opt_reduce.cc:134:opt_pmux$4443
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$Select_640$conv2d.v:784$2976: $auto$opt_reduce.cc:134:opt_pmux$4445
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$Select_643$conv2d.v:784$2979: { $flatten\u_conv2d.$verific$n6698$1825 $auto$opt_reduce.cc:134:opt_pmux$4447 $flatten\u_conv2d.$verific$n6560$1818 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$Select_826$conv2d.v:912$3107: { $flatten\u_conv2d.$verific$n8234$1854 $flatten\u_conv2d.$verific$n8268$1858 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$Select_828$conv2d.v:912$3108: { $flatten\u_conv2d.$verific$n8234$1854 $flatten\u_conv2d.$verific$n8268$1858 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_106$conv2d.v:223$2508: { $flatten\u_conv2d.$verific$n851$1736 $flatten\u_conv2d.$verific$n852$1737 $flatten\u_conv2d.$verific$n853$1738 $flatten\u_conv2d.$verific$n854$1739 $flatten\u_conv2d.$verific$n856$1741 $flatten\u_conv2d.$verific$n858$1743 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_1164$conv2d.v:1245$4327: { $flatten\u_conv2d.$verific$n11242$1910 $flatten\u_conv2d.$verific$n11251$1919 $flatten\u_conv2d.$verific$n11256$1924 $auto$opt_reduce.cc:134:opt_pmux$4449 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_1165$conv2d.v:1245$4328: { $auto$opt_reduce.cc:134:opt_pmux$4453 $flatten\u_conv2d.$verific$n11253$1921 $flatten\u_conv2d.$verific$n11254$1922 $auto$opt_reduce.cc:134:opt_pmux$4451 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_1166$conv2d.v:1245$4329: { $auto$opt_reduce.cc:134:opt_pmux$4457 $flatten\u_conv2d.$verific$n11253$1921 $flatten\u_conv2d.$verific$n11254$1922 $auto$opt_reduce.cc:134:opt_pmux$4455 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_1167$conv2d.v:1245$4330: { $auto$opt_reduce.cc:134:opt_pmux$4461 $flatten\u_conv2d.$verific$n11253$1921 $flatten\u_conv2d.$verific$n11254$1922 $auto$opt_reduce.cc:134:opt_pmux$4459 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_1168$conv2d.v:1245$4331: { $auto$opt_reduce.cc:134:opt_pmux$4465 $flatten\u_conv2d.$verific$n11253$1921 $flatten\u_conv2d.$verific$n11254$1922 $auto$opt_reduce.cc:134:opt_pmux$4463 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_1169$conv2d.v:1245$4332: { $auto$opt_reduce.cc:134:opt_pmux$4469 $flatten\u_conv2d.$verific$n11253$1921 $flatten\u_conv2d.$verific$n11254$1922 $auto$opt_reduce.cc:134:opt_pmux$4467 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_1170$conv2d.v:1245$4333: { $auto$opt_reduce.cc:134:opt_pmux$4473 $flatten\u_conv2d.$verific$n11253$1921 $flatten\u_conv2d.$verific$n11254$1922 $auto$opt_reduce.cc:134:opt_pmux$4471 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_1171$conv2d.v:1245$4334: { $auto$opt_reduce.cc:134:opt_pmux$4477 $flatten\u_conv2d.$verific$n11253$1921 $flatten\u_conv2d.$verific$n11254$1922 $auto$opt_reduce.cc:134:opt_pmux$4475 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_1172$conv2d.v:1245$4335: { $auto$opt_reduce.cc:134:opt_pmux$4481 $flatten\u_conv2d.$verific$n11253$1921 $flatten\u_conv2d.$verific$n11254$1922 $auto$opt_reduce.cc:134:opt_pmux$4479 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_1173$conv2d.v:1245$4336: { $flatten\u_conv2d.$verific$n11242$1910 $flatten\u_conv2d.$verific$n11243$1911 $flatten\u_conv2d.$verific$n11244$1912 $flatten\u_conv2d.$verific$n11245$1913 $auto$opt_reduce.cc:134:opt_pmux$4483 $flatten\u_conv2d.$verific$n11248$1916 $flatten\u_conv2d.$verific$n11249$1917 $flatten\u_conv2d.$verific$n11250$1918 $flatten\u_conv2d.$verific$n11251$1919 $flatten\u_conv2d.$verific$n11252$1920 $flatten\u_conv2d.$verific$n11253$1921 $flatten\u_conv2d.$verific$n11254$1922 $flatten\u_conv2d.$verific$n11255$1923 $flatten\u_conv2d.$verific$n11256$1924 $flatten\u_conv2d.$verific$n11257$1925 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_1174$conv2d.v:1245$4337: { $flatten\u_conv2d.$verific$n11243$1911 $flatten\u_conv2d.$verific$n11249$1917 $flatten\u_conv2d.$verific$n11251$1919 $flatten\u_conv2d.$verific$n11252$1920 $auto$opt_reduce.cc:134:opt_pmux$4485 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_1175$conv2d.v:1245$4338: { $auto$opt_reduce.cc:134:opt_pmux$4489 $auto$opt_reduce.cc:134:opt_pmux$4487 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_1176$conv2d.v:1245$4339: { $auto$opt_reduce.cc:134:opt_pmux$4493 $auto$opt_reduce.cc:134:opt_pmux$4491 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_1177$conv2d.v:1245$4340: { $flatten\u_conv2d.$verific$n11243$1911 $flatten\u_conv2d.$verific$n11251$1919 $auto$opt_reduce.cc:134:opt_pmux$4495 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_1178$conv2d.v:1245$4341: { $flatten\u_conv2d.$verific$n11243$1911 $flatten\u_conv2d.$verific$n11253$1921 $auto$opt_reduce.cc:134:opt_pmux$4497 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_1179$conv2d.v:1245$4342: { $flatten\u_conv2d.$verific$n11243$1911 $auto$opt_reduce.cc:134:opt_pmux$4499 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_1182$conv2d.v:1245$4345: { $flatten\u_conv2d.$verific$n11243$1911 $flatten\u_conv2d.$verific$n11249$1917 $flatten\u_conv2d.$verific$n11252$1920 $auto$opt_reduce.cc:134:opt_pmux$4501 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_1189$conv2d.v:1245$4352: { $flatten\u_conv2d.$verific$n11251$1919 $auto$opt_reduce.cc:134:opt_pmux$4503 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_1190$conv2d.v:1245$4353: { $flatten\u_conv2d.$verific$n11248$1916 $flatten\u_conv2d.$verific$n11249$1917 $flatten\u_conv2d.$verific$n11254$1922 $auto$opt_reduce.cc:134:opt_pmux$4507 $auto$opt_reduce.cc:134:opt_pmux$4505 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_1191$conv2d.v:1245$4354: { $flatten\u_conv2d.$verific$n11248$1916 $flatten\u_conv2d.$verific$n11251$1919 $auto$opt_reduce.cc:134:opt_pmux$4509 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_1201$conv2d.v:1245$4361: { $flatten\u_conv2d.$verific$n11249$1917 $flatten\u_conv2d.$verific$n11250$1918 $flatten\u_conv2d.$verific$n11251$1919 $flatten\u_conv2d.$verific$n11252$1920 $auto$opt_reduce.cc:134:opt_pmux$4511 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_409$conv2d.v:648$2862: { $flatten\u_conv2d.$verific$n5060$1775 $auto$opt_reduce.cc:134:opt_pmux$4513 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_410$conv2d.v:648$2863: $auto$opt_reduce.cc:134:opt_pmux$4515
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_411$conv2d.v:648$2864: { $flatten\u_conv2d.$verific$n5060$1775 $flatten\u_conv2d.$verific$n5061$1776 $auto$opt_reduce.cc:134:opt_pmux$4517 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_418$conv2d.v:648$2870: { $flatten\u_conv2d.$verific$n5061$1776 $auto$opt_reduce.cc:134:opt_pmux$4519 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_627$conv2d.v:784$2964: { $flatten\u_conv2d.$verific$n6558$1816 $flatten\u_conv2d.$verific$n6559$1817 $flatten\u_conv2d.$verific$n6560$1818 $flatten\u_conv2d.$verific$n6561$1819 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_629$conv2d.v:784$2966: { $flatten\u_conv2d.$verific$n6557$1815 $flatten\u_conv2d.$verific$n6558$1816 $auto$opt_reduce.cc:134:opt_pmux$4521 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_630$conv2d.v:784$2967: { $flatten\u_conv2d.$verific$n6558$1816 $flatten\u_conv2d.$verific$n6559$1817 $flatten\u_conv2d.$verific$n6560$1818 $flatten\u_conv2d.$verific$n6561$1819 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_631$conv2d.v:784$2968: { $flatten\u_conv2d.$verific$n6557$1815 $flatten\u_conv2d.$verific$n6558$1816 $flatten\u_conv2d.$verific$n6559$1817 $auto$opt_reduce.cc:134:opt_pmux$4523 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_636$conv2d.v:784$2973: { $flatten\u_conv2d.$verific$n6558$1816 $flatten\u_conv2d.$verific$n6559$1817 $auto$opt_reduce.cc:134:opt_pmux$4525 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_641$conv2d.v:784$2977: { $flatten\u_conv2d.$verific$n6558$1816 $flatten\u_conv2d.$verific$n6559$1817 $flatten\u_conv2d.$verific$n6560$1818 $auto$opt_reduce.cc:134:opt_pmux$4527 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_75$conv2d.v:164$2504: { $flatten\u_conv2d.$verific$n851$1736 $flatten\u_conv2d.$verific$n852$1737 $flatten\u_conv2d.$verific$n853$1738 $flatten\u_conv2d.$verific$n854$1739 $flatten\u_conv2d.$verific$n856$1741 $flatten\u_conv2d.$verific$n858$1743 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_823$conv2d.v:912$3104: { $flatten\u_conv2d.$verific$n8234$1854 $auto$opt_reduce.cc:134:opt_pmux$4529 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_824$conv2d.v:912$3105: { $flatten\u_conv2d.$verific$n8236$1856 $auto$opt_reduce.cc:134:opt_pmux$4531 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_829$conv2d.v:912$3109: { $flatten\u_conv2d.$verific$n8233$1853 $flatten\u_conv2d.$verific$n8234$1854 $auto$opt_reduce.cc:134:opt_pmux$4533 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_830$conv2d.v:912$3110: { $flatten\u_conv2d.$verific$n8234$1854 $flatten\u_conv2d.$verific$n8236$1856 $auto$opt_reduce.cc:134:opt_pmux$4535 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_836$conv2d.v:912$3115: { $flatten\u_conv2d.$verific$n8234$1854 $auto$opt_reduce.cc:134:opt_pmux$4537 }
    New ctrl vector for $pmux cell $flatten\u_conv2d.$verific$select_838$conv2d.v:912$3117: { $flatten\u_conv2d.$verific$n8234$1854 $auto$opt_reduce.cc:134:opt_pmux$4539 }
    New ctrl vector for $pmux cell $flatten\u_ctl.$verific$Select_225$control.v:223$1677: { $flatten\u_ctl.$verific$n2482$1443 $flatten\u_ctl.$verific$n2485$1446 $flatten\u_ctl.$verific$n2486$1447 }
    New ctrl vector for $pmux cell $flatten\u_ctl.$verific$select_144$control.v:185$1637: { $flatten\u_ctl.$verific$n1301$1414 $auto$opt_reduce.cc:134:opt_pmux$4541 }
    New ctrl vector for $pmux cell $flatten\u_ctl.$verific$select_145$control.v:185$1638: { $flatten\u_ctl.$verific$n1302$1415 $auto$opt_reduce.cc:134:opt_pmux$4543 }
    New ctrl vector for $pmux cell $flatten\u_ctl.$verific$select_146$control.v:185$1639: { $flatten\u_ctl.$verific$n1303$1416 $auto$opt_reduce.cc:134:opt_pmux$4545 }
    New ctrl vector for $pmux cell $flatten\u_ctl.$verific$select_147$control.v:185$1640: { $flatten\u_ctl.$verific$n1304$1417 $auto$opt_reduce.cc:134:opt_pmux$4547 }
    New ctrl vector for $pmux cell $flatten\u_ctl.$verific$select_148$control.v:185$1641: { $flatten\u_ctl.$verific$n1305$1418 $auto$opt_reduce.cc:134:opt_pmux$4549 }
    New ctrl vector for $pmux cell $flatten\u_ctl.$verific$select_149$control.v:185$1642: { $flatten\u_ctl.$verific$n1306$1419 $auto$opt_reduce.cc:134:opt_pmux$4551 }
    New ctrl vector for $pmux cell $flatten\u_ctl.$verific$select_150$control.v:185$1643: { $flatten\u_ctl.$verific$n1307$1420 $auto$opt_reduce.cc:134:opt_pmux$4553 }
    New ctrl vector for $pmux cell $flatten\u_ctl.$verific$select_151$control.v:185$1644: { $flatten\u_ctl.$verific$n1308$1421 $auto$opt_reduce.cc:134:opt_pmux$4555 }
    New ctrl vector for $pmux cell $flatten\u_ctl.$verific$select_152$control.v:185$1645: { $flatten\u_ctl.$verific$n1309$1422 $auto$opt_reduce.cc:134:opt_pmux$4557 }
    New ctrl vector for $pmux cell $flatten\u_ctl.$verific$select_153$control.v:185$1646: { $flatten\u_ctl.$verific$n1310$1423 $auto$opt_reduce.cc:134:opt_pmux$4559 }
    New ctrl vector for $pmux cell $flatten\u_ctl.$verific$select_156$control.v:185$1649: { $flatten\u_ctl.$verific$n1313$1426 $auto$opt_reduce.cc:134:opt_pmux$4563 $auto$opt_reduce.cc:134:opt_pmux$4561 }
    New ctrl vector for $pmux cell $flatten\u_ctl.$verific$select_161$control.v:185$1654: { $flatten\u_ctl.$verific$n1317$1430 $auto$opt_reduce.cc:134:opt_pmux$4565 }
    New ctrl vector for $pmux cell $flatten\u_ctl.$verific$select_162$control.v:185$1655: { $flatten\u_ctl.$verific$n1318$1431 $auto$opt_reduce.cc:134:opt_pmux$4567 }
    New ctrl vector for $pmux cell $flatten\u_ctl.$verific$select_163$control.v:185$1656: { $flatten\u_ctl.$verific$n1318$1431 $auto$opt_reduce.cc:134:opt_pmux$4569 }
    New ctrl vector for $pmux cell $flatten\u_ctl.$verific$select_216$control.v:220$1667: { $auto$opt_reduce.cc:134:opt_pmux$4573 $auto$opt_reduce.cc:134:opt_pmux$4571 }
    New ctrl vector for $pmux cell $flatten\u_ctl.$verific$select_223$control.v:223$1675: { $flatten\u_ctl.$verific$n2482$1443 $flatten\u_ctl.$verific$n2485$1446 $flatten\u_ctl.$verific$n2486$1447 }
    New ctrl vector for $pmux cell $flatten\u_ctl.$verific$select_226$control.v:223$1678: { $flatten\u_ctl.$verific$n2484$1445 $auto$opt_reduce.cc:134:opt_pmux$4575 }
    New ctrl vector for $pmux cell $flatten\u_ctl.$verific$select_227$control.v:223$1679: { $flatten\u_ctl.$verific$n2484$1445 $auto$opt_reduce.cc:134:opt_pmux$4577 }
    New ctrl vector for $pmux cell $flatten\u_ctl.$verific$select_228$control.v:223$1680: { $flatten\u_ctl.$verific$n2484$1445 $auto$opt_reduce.cc:134:opt_pmux$4579 }
    New ctrl vector for $pmux cell $flatten\u_ctl.$verific$select_229$control.v:223$1681: { $flatten\u_ctl.$verific$n2484$1445 $auto$opt_reduce.cc:134:opt_pmux$4581 }
    New ctrl vector for $pmux cell $flatten\u_ctl.$verific$select_230$control.v:223$1682: { $flatten\u_ctl.$verific$n2484$1445 $auto$opt_reduce.cc:134:opt_pmux$4583 }
    New ctrl vector for $pmux cell $flatten\u_ctl.$verific$select_231$control.v:223$1683: { $flatten\u_ctl.$verific$n2484$1445 $auto$opt_reduce.cc:134:opt_pmux$4585 }
    New ctrl vector for $pmux cell $flatten\u_ctl.$verific$select_232$control.v:223$1684: { $flatten\u_ctl.$verific$n2484$1445 $auto$opt_reduce.cc:134:opt_pmux$4587 }
    New ctrl vector for $pmux cell $flatten\u_ctl.$verific$select_233$control.v:223$1685: { $flatten\u_ctl.$verific$n2484$1445 $auto$opt_reduce.cc:134:opt_pmux$4589 }
    New ctrl vector for $pmux cell $flatten\u_ctl.$verific$select_234$control.v:223$1686: { $flatten\u_ctl.$verific$n2484$1445 $auto$opt_reduce.cc:134:opt_pmux$4591 }
    New ctrl vector for $pmux cell $flatten\u_ctl.$verific$select_235$control.v:223$1687: { $flatten\u_ctl.$verific$n2484$1445 $auto$opt_reduce.cc:134:opt_pmux$4593 }
    New ctrl vector for $pmux cell $flatten\u_ctl.$verific$select_238$control.v:223$1690: { $flatten\u_ctl.$verific$n2484$1445 $flatten\u_ctl.$verific$n2485$1446 $auto$opt_reduce.cc:134:opt_pmux$4595 }
    New ctrl vector for $pmux cell $flatten\u_ctl.$verific$select_243$control.v:223$1695: { $flatten\u_ctl.$verific$n2484$1445 $auto$opt_reduce.cc:134:opt_pmux$4597 }
    New ctrl vector for $pmux cell $flatten\u_ctl.$verific$select_244$control.v:223$1696: { $flatten\u_ctl.$verific$n2484$1445 $auto$opt_reduce.cc:134:opt_pmux$4599 }
    New ctrl vector for $pmux cell $flatten\u_ctl.$verific$select_245$control.v:223$1697: { $flatten\u_ctl.$verific$n2484$1445 $auto$opt_reduce.cc:134:opt_pmux$4601 }
    New ctrl vector for $pmux cell $flatten\u_ctl.$verific$select_248$control.v:223$1700: { $flatten\u_ctl.$verific$n2485$1446 $auto$opt_reduce.cc:134:opt_pmux$4603 }
  Optimizing cells in module \top.
Performed a total of 85 changes.

11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~120 debug messages>
Removed a total of 40 cells.

11.6. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $flatten\u_ctl.$verific$i_width_reg$control.v:224$1703 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_ctl.$verific$i_total_reg$control.v:224$1712 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_ctl.$verific$i_shift_reg$control.v:224$1725 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_ctl.$verific$i_sda_reg$control.v:224$1726 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_ctl.$verific$i_scl_reg$control.v:224$1727 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_ctl.$verific$i_result_base_reg$control.v:224$1711 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_ctl.$verific$i_ready_reg$control.v:224$1701 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_ctl.$verific$i_quant_reg$control.v:224$1724 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_ctl.$verific$i_pixel_base_reg$control.v:224$1709 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_ctl.$verific$i_intr_sts_reg$control.v:224$1723 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_ctl.$verific$i_intr_en_reg$control.v:224$1722 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_ctl.$verific$i_height_reg$control.v:224$1704 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_ctl.$verific$i_filters_reg$control.v:224$1706 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_ctl.$verific$i_filter_base_reg$control.v:224$1708 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_ctl.$verific$i_debug_mux_reg$control.v:224$1715 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_ctl.$verific$i_dataout_reg$control.v:224$1707 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_ctl.$verific$i_ctl_pwen_reg$control.v:224$1720 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_ctl.$verific$i_ctl_pfwaddr_reg$control.v:224$1718 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_ctl.$verific$i_ctl_fwen_reg$control.v:224$1719 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_ctl.$verific$i_ctl_bwen_reg$control.v:224$1721 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_ctl.$verific$i_channels_reg$control.v:224$1705 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_ctl.$verific$i_bias_base_reg$control.v:224$1710 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_ctl.$verific$i_addr_reg$control.v:224$1717 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_ctl.$verific$fsm_ctl_reg$control.v:224$1728 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_ctl.$verific$ctl_reg$control.v:224$1702 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_ctl.$verific$counter_reg$control.v:224$1713 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$write2_reg$conv2d.v:1246$4402 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$wdata2_reg$conv2d.v:785$3001 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$total_pixels_done_reg$conv2d.v:1246$4388 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$total_filters_done_reg$conv2d.v:1246$4382 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$sat37_reg$conv2d.v:92$2470 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$sat26_reg$conv2d.v:92$2469 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$sat15_reg$conv2d.v:92$2468 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$sat04_reg$conv2d.v:92$2467 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$running_reg$conv2d.v:1246$4384 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$result_base_reg$conv2d.v:785$2999 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$reset_bias_address_reg$conv2d.v:785$3024 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$pixels_read_reg$conv2d.v:913$3120 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$pixel_start_reg$conv2d.v:913$3127 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$pixel_select_reg$conv2d.v:1246$4400 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$p2_raddr_reg$conv2d.v:1246$4370 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$p1_raddr_reg$conv2d.v:1246$4369 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$next_buffer_reg$conv2d.v:1246$4399 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$load_more_pixels_reg$conv2d.v:1246$4387 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$load_more_filters_reg$conv2d.v:1246$4386 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$load_ext_acc_reg$conv2d.v:1246$4389 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$load_buffer_reg$conv2d.v:913$3129 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$last_start2d_reg$conv2d.v:785$3023 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i_tcdm3_wen_reg$conv2d.v:785$3010 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i_tcdm3_req_reg$conv2d.v:785$3009 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i_tcdm3_rdata_reg$conv2d.v:785$3026 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i_tcdm2_wreq_reg$conv2d.v:785$3008 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i_tcdm2_wen_reg$conv2d.v:785$3018 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i_tcdm2_wdata_reg$conv2d.v:785$3000 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i_tcdm2_rreq_reg$conv2d.v:785$3007 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i_tcdm2_rdata_reg$conv2d.v:785$3025 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i_tcdm1_wen_reg$conv2d.v:913$3122 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i_tcdm1_req_reg$conv2d.v:913$3123 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i_tcdm1_rdata_reg$conv2d.v:913$3130 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i_sat_reg$conv2d.v:1246$4373 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i_pixel_wen_reg$conv2d.v:913$3124 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i_pixel_wdata_reg$conv2d.v:913$3126 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i_pixel_waddr_reg$conv2d.v:913$3125 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i_pixel_raddr_reg$conv2d.v:1246$4378 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i_outsel_reg$conv2d.v:1246$4377 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i_mult2_coef_reg$conv2d.v:1246$4404 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i_mult1_coef_reg$conv2d.v:1246$4403 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i_math_mode_reg$conv2d.v:1246$4374 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i_mac_clr_reg$conv2d.v:1246$4375 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i_mac_clken_reg$conv2d.v:1246$4376 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i_filter_wdata_reg$conv2d.v:785$3014 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i_filter_waddr_reg$conv2d.v:785$3013 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i_filter_raddr_reg$conv2d.v:1246$4379 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i_filter2_wen_reg$conv2d.v:785$3016 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i_filter1_wen_reg$conv2d.v:785$3015 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i_done2d_reg$conv2d.v:1246$4383 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i_csel_reg$conv2d.v:1246$4372 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i_bias_wen_reg$conv2d.v:785$3011 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i_bias_wdata_reg$conv2d.v:785$3012 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i_bias_waddr_reg$conv2d.v:785$3004 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i_bias_raddr_reg$conv2d.v:785$3003 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i3_t2_waddr_reg$conv2d.v:785$2982 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i2_t2_waddr_reg$conv2d.v:785$2981 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$i1_t2_waddr_reg$conv2d.v:785$2980 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$fsm_writechannels_reg$conv2d.v:785$3022 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$fsm_loadacc_reg$conv2d.v:785$2988 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$fsm_getpixels_reg$conv2d.v:913$3118 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$fsm_getfilters_reg$conv2d.v:785$2986 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$fsm_getbias_reg$conv2d.v:785$2987 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$fsm_conv2d_reg$conv2d.v:1246$4371 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$fract_select_reg$conv2d.v:1246$4401 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$filters_loaded_reg$conv2d.v:785$2983 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$filters_done_reg$conv2d.v:1246$4381 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$filters_complete_reg$conv2d.v:785$3021 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$filter_stride_reg$conv2d.v:785$2984 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$filter_start_reg$conv2d.v:785$3019 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$filter_space_left_reg$conv2d.v:785$3020 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$filter_reload_reg$conv2d.v:1246$4385 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$filter_channels_reg$conv2d.v:785$3017 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$copy_acc_reg$conv2d.v:1246$4390 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$channels_loaded_reg$conv2d.v:913$3119 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$channels_done_reg$conv2d.v:1246$4380 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$buffers_used_reg$conv2d.v:913$3128 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$bias_loaded_reg$conv2d.v:785$3006 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$bias_base_addr_reg$conv2d.v:785$3005 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$bias7_reg$conv2d.v:785$2996 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$bias6_reg$conv2d.v:785$2995 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$bias5_reg$conv2d.v:785$2994 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$bias4_reg$conv2d.v:785$2993 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$bias3_reg$conv2d.v:785$2992 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$bias2_reg$conv2d.v:785$2991 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$bias1_reg$conv2d.v:785$2990 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$bias0_reg$conv2d.v:785$2989 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$add_stride_reg$conv2d.v:785$2985 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$acc7_reg$conv2d.v:1246$4398 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$acc6_reg$conv2d.v:1246$4397 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$acc5_reg$conv2d.v:1246$4396 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$acc4_reg$conv2d.v:1246$4395 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$acc3_reg$conv2d.v:1246$4394 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$acc2_reg$conv2d.v:1246$4393 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$acc1_reg$conv2d.v:1246$4392 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_conv2d.$verific$acc0_reg$conv2d.v:1246$4391 ($aldff) from module top.

11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 4 unused cells and 48 unused wires.
<suppressed ~5 debug messages>

11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

11.9. Rerunning OPT passes. (Maybe there is more to do..)

11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~152 debug messages>

11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

11.13. Executing OPT_DFF pass (perform DFF optimizations).

11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

11.16. Finished OPT passes. (There is nothing left to do.)

12. Executing FSM pass (extract and optimize FSM).

12.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking top.u_conv2d.fract_select as FSM state register:
    Users of register don't seem to benefit from recoding.
Found FSM state register top.u_conv2d.fsm_conv2d.
Found FSM state register top.u_conv2d.fsm_getbias.
Found FSM state register top.u_conv2d.fsm_getpixels.
Not marking top.u_conv2d.i_outsel as FSM state register:
    Register is connected to module port.
    Users of register don't seem to benefit from recoding.
Found FSM state register top.u_ctl.fsm_ctl.

12.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\u_conv2d.fsm_conv2d' from module `\top'.
  found $adff cell for state register: $flatten\u_conv2d.$verific$fsm_conv2d_reg$conv2d.v:1246$4371
  root of input selection tree: $flatten\u_conv2d.$verific$n11461$2435
  found reset state: 5'00000 (from async reset)
  found ctrl input: $flatten\u_conv2d.$verific$n11257$1925
  found ctrl input: $flatten\u_conv2d.$verific$n11256$1924
  found ctrl input: $flatten\u_conv2d.$verific$n11255$1923
  found ctrl input: $flatten\u_conv2d.$verific$n11254$1922
  found ctrl input: $flatten\u_conv2d.$verific$n11253$1921
  found ctrl input: $flatten\u_conv2d.$verific$n11252$1920
  found ctrl input: $flatten\u_conv2d.$verific$n11251$1919
  found ctrl input: $flatten\u_conv2d.$verific$n11250$1918
  found ctrl input: $flatten\u_conv2d.$verific$n11249$1917
  found ctrl input: $flatten\u_conv2d.$verific$n11248$1916
  found ctrl input: $auto$opt_reduce.cc:134:opt_pmux$4483
  found ctrl input: $flatten\u_conv2d.$verific$n11245$1913
  found ctrl input: $flatten\u_conv2d.$verific$n11244$1912
  found ctrl input: $flatten\u_conv2d.$verific$n11243$1911
  found ctrl input: $flatten\u_conv2d.$verific$n11242$1910
  found ctrl input: \u_ctl.ctl [0]
  found state code: 5'01100
  found ctrl input: $flatten\u_conv2d.$verific$n11095$1905
  found state code: 5'01001
  found state code: 5'01000
  found state code: 5'00100
  found state code: 5'00011
  found ctrl input: $flatten\u_conv2d.$verific$n10441$1895
  found ctrl input: $flatten\u_conv2d.$verific$n10472$1899
  found state code: 5'00010
  found state code: 5'00001
  found ctrl input: \u_conv2d.filter_reload
  found ctrl input: $flatten\u_conv2d.$verific$n10079$1885
  found ctrl input: $flatten\u_conv2d.$verific$n10042$1881
  found state code: 5'00110
  found state code: 5'00111
  found state code: 5'01111
  found ctrl input: $flatten\u_conv2d.$verific$n9562$1865
  found ctrl input: $flatten\u_conv2d.$verific$n9563$1866
  found ctrl input: $flatten\u_conv2d.$verific$n9583$1867
  found ctrl input: $flatten\u_conv2d.$verific$n9612$1868
  found state code: 5'00101
  found state code: 5'01010
  found ctrl output: $flatten\u_conv2d.$verific$n11256$1924
  found ctrl output: $flatten\u_conv2d.$verific$n11255$1923
  found ctrl output: $flatten\u_conv2d.$verific$n11254$1922
  found ctrl output: $flatten\u_conv2d.$verific$n11253$1921
  found ctrl output: $flatten\u_conv2d.$verific$n11252$1920
  found ctrl output: $flatten\u_conv2d.$verific$n11251$1919
  found ctrl output: $flatten\u_conv2d.$verific$n11250$1918
  found ctrl output: $flatten\u_conv2d.$verific$n11249$1917
  found ctrl output: $flatten\u_conv2d.$verific$n11248$1916
  found ctrl output: $flatten\u_conv2d.$verific$n11247$1915
  found ctrl output: $flatten\u_conv2d.$verific$n11246$1914
  found ctrl output: $flatten\u_conv2d.$verific$n11245$1913
  found ctrl output: $flatten\u_conv2d.$verific$n11244$1912
  found ctrl output: $flatten\u_conv2d.$verific$n11243$1911
  found ctrl output: $flatten\u_conv2d.$verific$n11242$1910
  ctrl inputs: { \u_conv2d.filter_reload $flatten\u_conv2d.$verific$n9562$1865 $flatten\u_conv2d.$verific$n9563$1866 $flatten\u_conv2d.$verific$n9583$1867 $flatten\u_conv2d.$verific$n9612$1868 $flatten\u_conv2d.$verific$n10042$1881 $flatten\u_conv2d.$verific$n10079$1885 $flatten\u_conv2d.$verific$n10441$1895 $flatten\u_conv2d.$verific$n10472$1899 $flatten\u_conv2d.$verific$n11095$1905 $flatten\u_conv2d.$verific$n11257$1925 $auto$opt_reduce.cc:134:opt_pmux$4483 \u_ctl.ctl [0] }
  ctrl outputs: { $flatten\u_conv2d.$verific$n11242$1910 $flatten\u_conv2d.$verific$n11243$1911 $flatten\u_conv2d.$verific$n11244$1912 $flatten\u_conv2d.$verific$n11245$1913 $flatten\u_conv2d.$verific$n11246$1914 $flatten\u_conv2d.$verific$n11247$1915 $flatten\u_conv2d.$verific$n11248$1916 $flatten\u_conv2d.$verific$n11249$1917 $flatten\u_conv2d.$verific$n11250$1918 $flatten\u_conv2d.$verific$n11251$1919 $flatten\u_conv2d.$verific$n11252$1920 $flatten\u_conv2d.$verific$n11253$1921 $flatten\u_conv2d.$verific$n11254$1922 $flatten\u_conv2d.$verific$n11255$1923 $flatten\u_conv2d.$verific$n11256$1924 $flatten\u_conv2d.$verific$n11461$2435 }
  transition:    5'00000 13'-----0------- ->    5'00000 20'00000010000000000000
  transition:    5'00000 13'-----1------- ->    5'00110 20'00000010000000000110
  transition:    5'01000 13'------------- ->    5'00001 20'00000000100000000001
  transition:    5'00100 13'---------0--- ->    5'01001 20'00000000000010001001
  transition:    5'00100 13'---------1--- ->    5'01000 20'00000000000010001000
  transition:    5'01100 13'------------0 ->    5'00000 20'00000000000000100000
  transition:    5'01100 13'------------1 ->    5'01100 20'00000000000000101100
  transition:    5'00010 13'------------- ->    5'00011 20'00000000001000000011
  transition:    5'01010 13'-0----------- ->    5'01010 20'01000000000000001010
  transition:    5'01010 13'-100--------- ->    5'00111 20'01000000000000000111
  transition:    5'01010 13'-1010-------- ->    5'00111 20'01000000000000000111
  transition:    5'01010 13'-1011-------- ->    5'00101 20'01000000000000000101
  transition:    5'01010 13'-11---------- ->    5'00111 20'01000000000000000111
  transition:    5'00110 13'0------------ ->    5'00001 20'00000001000000000001
  transition:    5'00110 13'1-----0------ ->    5'00110 20'00000001000000000110
  transition:    5'00110 13'1-----1------ ->    5'00000 20'00000001000000000000
  transition:    5'00001 13'-------0----- ->    5'00001 20'00000000010000000001
  transition:    5'00001 13'-------10---- ->    5'00001 20'00000000010000000001
  transition:    5'00001 13'-------11---- ->    5'00010 20'00000000010000000010
  transition:    5'01001 13'------------- ->    5'01010 20'10000000000000001010
  transition:    5'00101 13'------------- ->    5'01100 20'00000000000001001100
  transition:    5'00011 13'------------- ->    5'00100 20'00000000000100000100
  transition:    5'00111 13'------------- ->    5'00110 20'00001000000000000110
  transition:    5'01111 13'------------- ->    5'00111 20'00010000000000000111
Extracting FSM `\u_conv2d.fsm_getbias' from module `\top'.
  found $adff cell for state register: $flatten\u_conv2d.$verific$fsm_getbias_reg$conv2d.v:785$2987
  root of input selection tree: $flatten\u_conv2d.$verific$n5122$2153
  found reset state: 3'000 (from async reset)
  found ctrl input: $flatten\u_conv2d.$verific$n5063$1778
  found ctrl input: $flatten\u_conv2d.$verific$n5062$1777
  found ctrl input: $flatten\u_conv2d.$verific$n5061$1776
  found ctrl input: $flatten\u_conv2d.$verific$n5060$1775
  found ctrl input: \u_conv2d.i_done2d
  found ctrl input: \tcdm_valid_p3
  found ctrl input: $flatten\u_conv2d.$verific$n4916$1769
  found state code: 3'010
  found ctrl input: \u_ctl.ctl [0]
  found state code: 3'001
  found ctrl output: $flatten\u_conv2d.$verific$n5062$1777
  found ctrl output: $flatten\u_conv2d.$verific$n5061$1776
  found ctrl output: $flatten\u_conv2d.$verific$n5060$1775
  ctrl inputs: { \u_conv2d.i_done2d $flatten\u_conv2d.$verific$n4916$1769 $flatten\u_conv2d.$verific$n5063$1778 \u_ctl.ctl [0] \tcdm_valid_p3 }
  ctrl outputs: { $flatten\u_conv2d.$verific$n5060$1775 $flatten\u_conv2d.$verific$n5061$1776 $flatten\u_conv2d.$verific$n5062$1777 $flatten\u_conv2d.$verific$n5122$2153 }
  transition:      3'000 5'---0- ->      3'000 6'100000
  transition:      3'000 5'---1- ->      3'001 6'100001
  transition:      3'010 5'0---- ->      3'010 6'001010
  transition:      3'010 5'1---- ->      3'000 6'001000
  transition:      3'001 5'----0 ->      3'001 6'010001
  transition:      3'001 5'-0--1 ->      3'001 6'010001
  transition:      3'001 5'-1--1 ->      3'010 6'010010
Extracting FSM `\u_conv2d.fsm_getpixels' from module `\top'.
  found $adff cell for state register: $flatten\u_conv2d.$verific$fsm_getpixels_reg$conv2d.v:913$3118
  root of input selection tree: $flatten\u_conv2d.$verific$n8296$2272
  found reset state: 3'000 (from async reset)
  found ctrl input: $flatten\u_conv2d.$verific$n8237$1857
  found ctrl input: $flatten\u_conv2d.$verific$n8236$1856
  found ctrl input: $flatten\u_conv2d.$verific$n8235$1855
  found ctrl input: $flatten\u_conv2d.$verific$n8234$1854
  found ctrl input: $flatten\u_conv2d.$verific$n8233$1853
  found ctrl input: $flatten\u_conv2d.$verific$n8211$1849
  found state code: 3'001
  found ctrl input: \u_conv2d.i_done2d
  found ctrl input: \u_conv2d.load_more_filters
  found ctrl input: \tcdm_valid_p1
  found ctrl input: $flatten\u_conv2d.$verific$n7947$1834
  found ctrl input: $flatten\u_conv2d.$verific$n8018$1838
  found state code: 3'011
  found state code: 3'010
  found ctrl input: \u_ctl.ctl [0]
  found ctrl output: $flatten\u_conv2d.$verific$n8236$1856
  found ctrl output: $flatten\u_conv2d.$verific$n8235$1855
  found ctrl output: $flatten\u_conv2d.$verific$n8234$1854
  found ctrl output: $flatten\u_conv2d.$verific$n8233$1853
  ctrl inputs: { \u_conv2d.i_done2d \u_conv2d.load_more_filters $flatten\u_conv2d.$verific$n7947$1834 $flatten\u_conv2d.$verific$n8018$1838 $flatten\u_conv2d.$verific$n8211$1849 $flatten\u_conv2d.$verific$n8237$1857 \u_ctl.ctl [0] \tcdm_valid_p1 }
  ctrl outputs: { $flatten\u_conv2d.$verific$n8233$1853 $flatten\u_conv2d.$verific$n8234$1854 $flatten\u_conv2d.$verific$n8235$1855 $flatten\u_conv2d.$verific$n8236$1856 $flatten\u_conv2d.$verific$n8296$2272 }
  transition:      3'000 8'------0- ->      3'000 7'1000000
  transition:      3'000 8'------1- ->      3'001 7'1000001
  transition:      3'010 8'00------ ->      3'010 7'0010010
  transition:      3'010 8'01------ ->      3'000 7'0010000
  transition:      3'010 8'1------- ->      3'000 7'0010000
  transition:      3'001 8'-------0 ->      3'001 7'0100001
  transition:      3'001 8'--0----1 ->      3'001 7'0100001
  transition:      3'001 8'--10---1 ->      3'011 7'0100011
  transition:      3'001 8'--11---1 ->      3'010 7'0100010
  transition:      3'011 8'----0--- ->      3'001 7'0001001
  transition:      3'011 8'----1--- ->      3'011 7'0001011
Extracting FSM `\u_ctl.fsm_ctl' from module `\top'.
  found $adff cell for state register: $flatten\u_ctl.$verific$fsm_ctl_reg$control.v:224$1728
  root of input selection tree: $flatten\u_ctl.$verific$n2487$1532
  found reset state: 3'000 (from async reset)
  found ctrl input: $flatten\u_ctl.$verific$n2486$1447
  found ctrl input: $flatten\u_ctl.$verific$n2485$1446
  found ctrl input: $flatten\u_ctl.$verific$n2482$1443
  found state code: 3'011
  found ctrl input: $flatten\u_ctl.$verific$n828$1411
  found ctrl input: $flatten\u_ctl.$verific$n815$1408
  found state code: 3'001
  found state code: 3'010
  found ctrl output: $flatten\u_ctl.$verific$n2485$1446
  found ctrl output: $flatten\u_ctl.$verific$n2484$1445
  found ctrl output: $flatten\u_ctl.$verific$n2483$1444
  found ctrl output: $flatten\u_ctl.$verific$n2482$1443
  ctrl inputs: { $flatten\u_ctl.$verific$n815$1408 $flatten\u_ctl.$verific$n828$1411 $flatten\u_ctl.$verific$n2486$1447 }
  ctrl outputs: { $flatten\u_ctl.$verific$n2482$1443 $flatten\u_ctl.$verific$n2483$1444 $flatten\u_ctl.$verific$n2484$1445 $flatten\u_ctl.$verific$n2485$1446 $flatten\u_ctl.$verific$n2487$1532 }
  transition:      3'000 3'00- ->      3'000 7'1000000
  transition:      3'000 3'10- ->      3'001 7'1000001
  transition:      3'000 3'-1- ->      3'010 7'1000010
  transition:      3'010 3'--- ->      3'011 7'0001011
  transition:      3'001 3'--- ->      3'000 7'0010000
  transition:      3'011 3'--- ->      3'000 7'0100000

12.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\u_ctl.fsm_ctl$4632' from module `\top'.
  Removing unused input signal $flatten\u_ctl.$verific$n2486$1447.
Optimizing FSM `$fsm$\u_conv2d.fsm_getpixels$4626' from module `\top'.
  Removing unused input signal $flatten\u_conv2d.$verific$n8237$1857.
Optimizing FSM `$fsm$\u_conv2d.fsm_getbias$4621' from module `\top'.
  Removing unused input signal $flatten\u_conv2d.$verific$n5063$1778.
Optimizing FSM `$fsm$\u_conv2d.fsm_conv2d$4604' from module `\top'.
  Removing unreachable state 5'01111.
  Removing unused input signal $flatten\u_conv2d.$verific$n11257$1925.
  Removing unused input signal $auto$opt_reduce.cc:134:opt_pmux$4483.

12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 59 unused cells and 59 unused wires.
<suppressed ~60 debug messages>

12.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\u_conv2d.fsm_conv2d$4604' from module `\top'.
  Removing unused output signal $flatten\u_conv2d.$verific$n11461$2435 [0].
  Removing unused output signal $flatten\u_conv2d.$verific$n11461$2435 [1].
  Removing unused output signal $flatten\u_conv2d.$verific$n11461$2435 [2].
  Removing unused output signal $flatten\u_conv2d.$verific$n11461$2435 [3].
  Removing unused output signal $flatten\u_conv2d.$verific$n11461$2435 [4].
Optimizing FSM `$fsm$\u_conv2d.fsm_getbias$4621' from module `\top'.
  Removing unused output signal $flatten\u_conv2d.$verific$n5122$2153 [0].
  Removing unused output signal $flatten\u_conv2d.$verific$n5122$2153 [1].
  Removing unused output signal $flatten\u_conv2d.$verific$n5122$2153 [2].
Optimizing FSM `$fsm$\u_conv2d.fsm_getpixels$4626' from module `\top'.
  Removing unused output signal $flatten\u_conv2d.$verific$n8296$2272 [0].
  Removing unused output signal $flatten\u_conv2d.$verific$n8296$2272 [1].
  Removing unused output signal $flatten\u_conv2d.$verific$n8296$2272 [2].
Optimizing FSM `$fsm$\u_ctl.fsm_ctl$4632' from module `\top'.
  Removing unused output signal $flatten\u_ctl.$verific$n2487$1532 [0].
  Removing unused output signal $flatten\u_ctl.$verific$n2487$1532 [1].
  Removing unused output signal $flatten\u_ctl.$verific$n2487$1532 [2].

12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\u_conv2d.fsm_conv2d$4604' from module `\top' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00000 -> -----------1
  01000 -> ----------1-
  00100 -> ---------1--
  01100 -> --------1---
  00010 -> -------1----
  01010 -> ------1-----
  00110 -> -----1------
  00001 -> ----1-------
  01001 -> ---1--------
  00101 -> --1---------
  00011 -> -1----------
  00111 -> 1-----------
Recoding FSM `$fsm$\u_conv2d.fsm_getbias$4621' from module `\top' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  000 -> --1
  010 -> -1-
  001 -> 1--
Recoding FSM `$fsm$\u_conv2d.fsm_getpixels$4626' from module `\top' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  000 -> ---1
  010 -> --1-
  001 -> -1--
  011 -> 1---
Recoding FSM `$fsm$\u_ctl.fsm_ctl$4632' from module `\top' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  000 -> ---1
  010 -> --1-
  001 -> -1--
  011 -> 1---

12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\u_conv2d.fsm_conv2d$4604' from module `top':
-------------------------------------

  Information on FSM $fsm$\u_conv2d.fsm_conv2d$4604 (\u_conv2d.fsm_conv2d):

  Number of input signals:   11
  Number of output signals:  15
  Number of state bits:      12

  Input signals:
    0: \u_ctl.ctl [0]
    1: $flatten\u_conv2d.$verific$n11095$1905
    2: $flatten\u_conv2d.$verific$n10472$1899
    3: $flatten\u_conv2d.$verific$n10441$1895
    4: $flatten\u_conv2d.$verific$n10079$1885
    5: $flatten\u_conv2d.$verific$n10042$1881
    6: $flatten\u_conv2d.$verific$n9612$1868
    7: $flatten\u_conv2d.$verific$n9583$1867
    8: $flatten\u_conv2d.$verific$n9563$1866
    9: $flatten\u_conv2d.$verific$n9562$1865
   10: \u_conv2d.filter_reload

  Output signals:
    0: $flatten\u_conv2d.$verific$n11256$1924
    1: $flatten\u_conv2d.$verific$n11255$1923
    2: $flatten\u_conv2d.$verific$n11254$1922
    3: $flatten\u_conv2d.$verific$n11253$1921
    4: $flatten\u_conv2d.$verific$n11252$1920
    5: $flatten\u_conv2d.$verific$n11251$1919
    6: $flatten\u_conv2d.$verific$n11250$1918
    7: $flatten\u_conv2d.$verific$n11249$1917
    8: $flatten\u_conv2d.$verific$n11248$1916
    9: $flatten\u_conv2d.$verific$n11247$1915
   10: $flatten\u_conv2d.$verific$n11246$1914
   11: $flatten\u_conv2d.$verific$n11245$1913
   12: $flatten\u_conv2d.$verific$n11244$1912
   13: $flatten\u_conv2d.$verific$n11243$1911
   14: $flatten\u_conv2d.$verific$n11242$1910

  State encoding:
    0: 12'-----------1  <RESET STATE>
    1: 12'----------1-
    2: 12'---------1--
    3: 12'--------1---
    4: 12'-------1----
    5: 12'------1-----
    6: 12'-----1------
    7: 12'----1-------
    8: 12'---1--------
    9: 12'--1---------
   10: 12'-1----------
   11: 12'1-----------

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 11'-----0-----   ->     0 15'000000100000000
      1:     0 11'-----1-----   ->     6 15'000000100000000
      2:     1 11'-----------   ->     7 15'000000001000000
      3:     2 11'---------1-   ->     1 15'000000000000100
      4:     2 11'---------0-   ->     8 15'000000000000100
      5:     3 11'----------0   ->     0 15'000000000000001
      6:     3 11'----------1   ->     3 15'000000000000001
      7:     4 11'-----------   ->    10 15'000000000010000
      8:     5 11'-0---------   ->     5 15'010000000000000
      9:     5 11'-1011------   ->     9 15'010000000000000
     10:     5 11'-1010------   ->    11 15'010000000000000
     11:     5 11'-100-------   ->    11 15'010000000000000
     12:     5 11'-11--------   ->    11 15'010000000000000
     13:     6 11'1-----1----   ->     0 15'000000010000000
     14:     6 11'1-----0----   ->     6 15'000000010000000
     15:     6 11'0----------   ->     7 15'000000010000000
     16:     7 11'-------11--   ->     4 15'000000000100000
     17:     7 11'-------10--   ->     7 15'000000000100000
     18:     7 11'-------0---   ->     7 15'000000000100000
     19:     8 11'-----------   ->     5 15'100000000000000
     20:     9 11'-----------   ->     3 15'000000000000010
     21:    10 11'-----------   ->     2 15'000000000001000
     22:    11 11'-----------   ->     6 15'000010000000000

-------------------------------------

FSM `$fsm$\u_conv2d.fsm_getbias$4621' from module `top':
-------------------------------------

  Information on FSM $fsm$\u_conv2d.fsm_getbias$4621 (\u_conv2d.fsm_getbias):

  Number of input signals:    4
  Number of output signals:   3
  Number of state bits:       3

  Input signals:
    0: \tcdm_valid_p3
    1: \u_ctl.ctl [0]
    2: $flatten\u_conv2d.$verific$n4916$1769
    3: \u_conv2d.i_done2d

  Output signals:
    0: $flatten\u_conv2d.$verific$n5062$1777
    1: $flatten\u_conv2d.$verific$n5061$1776
    2: $flatten\u_conv2d.$verific$n5060$1775

  State encoding:
    0:      3'--1  <RESET STATE>
    1:      3'-1-
    2:      3'1--

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 4'--0-   ->     0 3'100
      1:     0 4'--1-   ->     2 3'100
      2:     1 4'1---   ->     0 3'001
      3:     1 4'0---   ->     1 3'001
      4:     2 4'-1-1   ->     1 3'010
      5:     2 4'---0   ->     2 3'010
      6:     2 4'-0-1   ->     2 3'010

-------------------------------------

FSM `$fsm$\u_conv2d.fsm_getpixels$4626' from module `top':
-------------------------------------

  Information on FSM $fsm$\u_conv2d.fsm_getpixels$4626 (\u_conv2d.fsm_getpixels):

  Number of input signals:    7
  Number of output signals:   4
  Number of state bits:       4

  Input signals:
    0: \tcdm_valid_p1
    1: \u_ctl.ctl [0]
    2: $flatten\u_conv2d.$verific$n8211$1849
    3: $flatten\u_conv2d.$verific$n8018$1838
    4: $flatten\u_conv2d.$verific$n7947$1834
    5: \u_conv2d.load_more_filters
    6: \u_conv2d.i_done2d

  Output signals:
    0: $flatten\u_conv2d.$verific$n8236$1856
    1: $flatten\u_conv2d.$verific$n8235$1855
    2: $flatten\u_conv2d.$verific$n8234$1854
    3: $flatten\u_conv2d.$verific$n8233$1853

  State encoding:
    0:     4'---1  <RESET STATE>
    1:     4'--1-
    2:     4'-1--
    3:     4'1---

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 7'-----0-   ->     0 4'1000
      1:     0 7'-----1-   ->     2 4'1000
      2:     1 7'01-----   ->     0 4'0010
      3:     1 7'1------   ->     0 4'0010
      4:     1 7'00-----   ->     1 4'0010
      5:     2 7'--11--1   ->     1 4'0100
      6:     2 7'------0   ->     2 4'0100
      7:     2 7'--0---1   ->     2 4'0100
      8:     2 7'--10--1   ->     3 4'0100
      9:     3 7'----0--   ->     2 4'0001
     10:     3 7'----1--   ->     3 4'0001

-------------------------------------

FSM `$fsm$\u_ctl.fsm_ctl$4632' from module `top':
-------------------------------------

  Information on FSM $fsm$\u_ctl.fsm_ctl$4632 (\u_ctl.fsm_ctl):

  Number of input signals:    2
  Number of output signals:   4
  Number of state bits:       4

  Input signals:
    0: $flatten\u_ctl.$verific$n828$1411
    1: $flatten\u_ctl.$verific$n815$1408

  Output signals:
    0: $flatten\u_ctl.$verific$n2485$1446
    1: $flatten\u_ctl.$verific$n2484$1445
    2: $flatten\u_ctl.$verific$n2483$1444
    3: $flatten\u_ctl.$verific$n2482$1443

  State encoding:
    0:     4'---1  <RESET STATE>
    1:     4'--1-
    2:     4'-1--
    3:     4'1---

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 2'00   ->     0 4'1000
      1:     0 2'-1   ->     1 4'1000
      2:     0 2'10   ->     2 4'1000
      3:     1 2'--   ->     3 4'0001
      4:     2 2'--   ->     0 4'0010
      5:     3 2'--   ->     0 4'0100

-------------------------------------

12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\u_conv2d.fsm_conv2d$4604' from module `\top'.
Mapping FSM `$fsm$\u_conv2d.fsm_getbias$4621' from module `\top'.
Mapping FSM `$fsm$\u_conv2d.fsm_getpixels$4626' from module `\top'.
Mapping FSM `$fsm$\u_ctl.fsm_ctl$4632' from module `\top'.

13. Executing OPT pass (performing simple optimizations).

13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~23 debug messages>

13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~148 debug messages>

13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New input vector for $reduce_or cell $flatten\u_conv2d.$verific$reduce_or_1206$conv2d.v:1245$4365: { \u_conv2d.fsm_conv2d [11:7] \u_conv2d.fsm_conv2d [5:4] \u_conv2d.fsm_conv2d [1:0] $flatten\u_conv2d.$verific$n11257$1925 }
    New input vector for $reduce_or cell $flatten\u_conv2d.$verific$reduce_or_1202$conv2d.v:1245$4362: { \u_conv2d.fsm_conv2d [11:7] \u_conv2d.fsm_conv2d [5:1] $flatten\u_conv2d.$verific$n11257$1925 }
    New input vector for $reduce_or cell $flatten\u_conv2d.$verific$reduce_or_1195$conv2d.v:1245$4357: { \u_conv2d.fsm_conv2d [11:8] \u_conv2d.fsm_conv2d [6:3] \u_conv2d.fsm_conv2d [1] $flatten\u_conv2d.$verific$n11257$1925 }
    New input vector for $reduce_or cell $flatten\u_conv2d.$verific$reduce_or_1193$conv2d.v:1245$4355: { \u_conv2d.fsm_conv2d [11:4] \u_conv2d.fsm_conv2d [2:1] $flatten\u_conv2d.$verific$n11257$1925 }
    New input vector for $reduce_or cell $flatten\u_conv2d.$verific$reduce_or_1185$conv2d.v:1245$4348: { \u_conv2d.fsm_conv2d [11:6] \u_conv2d.fsm_conv2d [4:1] $flatten\u_conv2d.$verific$n11257$1925 }
    New input vector for $reduce_or cell $flatten\u_conv2d.$verific$reduce_or_1180$conv2d.v:1245$4343: { \u_conv2d.fsm_conv2d [11:7] \u_conv2d.fsm_conv2d [4:1] $flatten\u_conv2d.$verific$n11257$1925 }
    New input vector for $reduce_or cell $flatten\u_conv2d.$verific$reduce_nor_1163$conv2d.v:1245$4325: \u_conv2d.fsm_conv2d
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4510: { \u_conv2d.fsm_conv2d [11:8] \u_conv2d.fsm_conv2d [5] \u_conv2d.fsm_conv2d [3:2] $flatten\u_conv2d.$verific$n11257$1925 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4508: { \u_conv2d.fsm_conv2d [10:8] \u_conv2d.fsm_conv2d [6:1] $flatten\u_conv2d.$verific$n11257$1925 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4504: { \u_conv2d.fsm_conv2d [10] \u_conv2d.fsm_conv2d [8:7] \u_conv2d.fsm_conv2d [5:3] \u_conv2d.fsm_conv2d [1] $flatten\u_conv2d.$verific$n11257$1925 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4500: { \u_conv2d.fsm_conv2d [11:10] \u_conv2d.fsm_conv2d [8:7] \u_conv2d.fsm_conv2d [3:0] $flatten\u_conv2d.$verific$n11257$1925 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4498: { \u_conv2d.fsm_conv2d [11:10] \u_conv2d.fsm_conv2d [8:6] \u_conv2d.fsm_conv2d [4:0] $flatten\u_conv2d.$verific$n11257$1925 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4496: { \u_conv2d.fsm_conv2d [11] \u_conv2d.fsm_conv2d [9:6] \u_conv2d.fsm_conv2d [4:0] $flatten\u_conv2d.$verific$n11257$1925 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4494: { \u_conv2d.fsm_conv2d [11:8] \u_conv2d.fsm_conv2d [6] \u_conv2d.fsm_conv2d [4:1] $flatten\u_conv2d.$verific$n11257$1925 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4490: { \u_conv2d.fsm_conv2d [10] \u_conv2d.fsm_conv2d [8:6] \u_conv2d.fsm_conv2d [4:0] $flatten\u_conv2d.$verific$n11257$1925 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4484: { \u_conv2d.fsm_conv2d [11] \u_conv2d.fsm_conv2d [9:8] \u_conv2d.fsm_conv2d [3:1] $flatten\u_conv2d.$verific$n11257$1925 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4478: { \u_conv2d.fsm_conv2d [11] \u_conv2d.fsm_conv2d [9] \u_conv2d.fsm_conv2d [7:3] \u_conv2d.fsm_conv2d [0] $flatten\u_conv2d.$verific$n11257$1925 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4448: { \u_conv2d.fsm_conv2d [11:9] \u_conv2d.fsm_conv2d [6:4] \u_conv2d.fsm_conv2d [2:0] $flatten\u_conv2d.$verific$n11257$1925 }
  Optimizing cells in module \top.
Performed a total of 18 changes.

13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\u_ctl.$verific$i_width_reg$control.v:224$1703 ($adff) from module top (D = $flatten\u_ctl.$verific$n2526$1534, Q = \u_ctl.i_width).
Adding EN signal on $flatten\u_ctl.$verific$i_total_reg$control.v:224$1712 ($adff) from module top (D = $flatten\u_ctl.$verific$n2650$1542, Q = \u_ctl.i_total).
Adding EN signal on $flatten\u_ctl.$verific$i_shift_reg$control.v:224$1725 ($adff) from module top (D = $flatten\u_ctl.$verific$n2752$1547, Q = \u_ctl.i_shift).
Adding EN signal on $flatten\u_ctl.$verific$i_sda_reg$control.v:224$1726 ($adff) from module top (D = \PWDATA [0], Q = \u_ctl.i_sda).
Adding EN signal on $flatten\u_ctl.$verific$i_scl_reg$control.v:224$1727 ($adff) from module top (D = \PWDATA [1], Q = \u_ctl.i_scl).
Adding EN signal on $flatten\u_ctl.$verific$i_result_base_reg$control.v:224$1711 ($adff) from module top (D = $flatten\u_ctl.$verific$n2629$1541, Q = \u_ctl.i_result_base).
Adding EN signal on $flatten\u_ctl.$verific$i_ready_reg$control.v:224$1701 ($adff) from module top (D = $flatten\u_ctl.$verific$n2492$1449, Q = \u_ctl.i_ready).
Adding EN signal on $flatten\u_ctl.$verific$i_quant_reg$control.v:224$1724 ($adff) from module top (D = $flatten\u_ctl.$verific$n2735$1546, Q = \u_ctl.i_quant).
Adding EN signal on $flatten\u_ctl.$verific$i_pixel_base_reg$control.v:224$1709 ($adff) from module top (D = $flatten\u_ctl.$verific$n2587$1539, Q = \u_ctl.i_pixel_base).
Adding EN signal on $flatten\u_ctl.$verific$i_intr_en_reg$control.v:224$1722 ($adff) from module top (D = \PWDATA [0], Q = \u_ctl.i_intr_en).
Adding EN signal on $flatten\u_ctl.$verific$i_height_reg$control.v:224$1704 ($adff) from module top (D = $flatten\u_ctl.$verific$n2536$1535, Q = \u_ctl.i_height).
Adding EN signal on $flatten\u_ctl.$verific$i_filters_reg$control.v:224$1706 ($adff) from module top (D = $flatten\u_ctl.$verific$n2556$1537, Q = \u_ctl.i_filters).
Adding EN signal on $flatten\u_ctl.$verific$i_filter_base_reg$control.v:224$1708 ($adff) from module top (D = $flatten\u_ctl.$verific$n2566$1538, Q = \u_ctl.i_filter_base).
Adding EN signal on $flatten\u_ctl.$verific$i_debug_mux_reg$control.v:224$1715 ($adff) from module top (D = $flatten\u_ctl.$verific$n2726$1545, Q = \u_ctl.i_debug_mux).
Adding EN signal on $flatten\u_ctl.$verific$i_dataout_reg$control.v:224$1707 ($adff) from module top (D = $flatten\u_ctl.$verific$n2758$1548, Q = \u_ctl.i_dataout).
Adding EN signal on $flatten\u_ctl.$verific$i_channels_reg$control.v:224$1705 ($adff) from module top (D = $flatten\u_ctl.$verific$n2546$1536, Q = \u_ctl.i_channels).
Adding EN signal on $flatten\u_ctl.$verific$i_bias_base_reg$control.v:224$1710 ($adff) from module top (D = $flatten\u_ctl.$verific$n2608$1540, Q = \u_ctl.i_bias_base).
Adding EN signal on $flatten\u_ctl.$verific$i_addr_reg$control.v:224$1717 ($adff) from module top (D = $flatten\u_ctl.$verific$n2669$1543 [1:0], Q = \u_ctl.i_addr [1:0]).
Adding EN signal on $flatten\u_ctl.$verific$i_addr_reg$control.v:224$1717 ($adff) from module top (D = $flatten\u_ctl.$verific$n2669$1543 [19:2], Q = \u_ctl.i_addr [19:2]).
Adding EN signal on $flatten\u_ctl.$verific$ctl_reg$control.v:224$1702 ($adff) from module top (D = $flatten\u_ctl.$verific$n2493$1533 [31:1], Q = \u_ctl.ctl [31:1]).
Adding EN signal on $flatten\u_conv2d.$verific$total_filters_done_reg$conv2d.v:1246$4382 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11570$2441, Q = \u_conv2d.total_filters_done).
Adding EN signal on $flatten\u_conv2d.$verific$running_reg$conv2d.v:1246$4384 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11639$1942, Q = \u_conv2d.running).
Adding EN signal on $flatten\u_conv2d.$verific$pixels_read_reg$conv2d.v:913$3120 ($adff) from module top (D = $flatten\u_conv2d.$verific$n8238$2268, Q = \u_conv2d.pixels_read).
Adding EN signal on $flatten\u_conv2d.$verific$pixel_start_reg$conv2d.v:913$3127 ($adff) from module top (D = $flatten\u_conv2d.$verific$n8271$1860, Q = \u_conv2d.pixel_start).
Adding EN signal on $flatten\u_conv2d.$verific$pixel_select_reg$conv2d.v:1246$4400 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11598$2443, Q = \u_conv2d.pixel_select).
Adding EN signal on $flatten\u_conv2d.$verific$next_buffer_reg$conv2d.v:1246$4399 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11595$1931, Q = \u_conv2d.next_buffer).
Adding EN signal on $flatten\u_conv2d.$verific$load_more_filters_reg$conv2d.v:1246$4386 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11637$1941, Q = \u_conv2d.load_more_filters).
Adding EN signal on $flatten\u_conv2d.$verific$load_buffer_reg$conv2d.v:913$3129 ($adff) from module top (D = $flatten\u_conv2d.$verific$n8269$1859, Q = \u_conv2d.load_buffer).
Adding EN signal on $flatten\u_conv2d.$verific$i_tcdm3_wen_reg$conv2d.v:785$3010 ($adff) from module top (D = $flatten\u_conv2d.$verific$n5111$1781, Q = \u_conv2d.i_tcdm3_wen).
Adding EN signal on $flatten\u_conv2d.$verific$i_tcdm3_req_reg$conv2d.v:785$3009 ($adff) from module top (D = $flatten\u_conv2d.$verific$n5109$1780, Q = \u_conv2d.i_tcdm3_req).
Adding EN signal on $flatten\u_conv2d.$verific$i_tcdm3_raddr_reg$conv2d.v:785$3002 ($aldff) from module top (D = $flatten\u_conv2d.$verific$n5087$2151 [1:0], Q = \u_conv2d.i_tcdm3_raddr [1:0]).
Adding EN signal on $flatten\u_conv2d.$verific$i_tcdm3_raddr_reg$conv2d.v:785$3002 ($aldff) from module top (D = $flatten\u_conv2d.$verific$n5087$2151 [19:2], Q = \u_conv2d.i_tcdm3_raddr [19:2]).
Adding EN signal on $flatten\u_conv2d.$verific$i_tcdm2_wen_reg$conv2d.v:785$3018 ($adff) from module top (D = $flatten\u_conv2d.$verific$n6636$1821, Q = \u_conv2d.i_tcdm2_wen).
Adding EN signal on $flatten\u_conv2d.$verific$i_tcdm2_rreq_reg$conv2d.v:785$3007 ($adff) from module top (D = $flatten\u_conv2d.$verific$n6635$1820, Q = \u_conv2d.i_tcdm2_rreq).
Adding EN signal on $flatten\u_conv2d.$verific$i_tcdm2_raddr_reg$conv2d.v:785$2997 ($aldff) from module top (D = $flatten\u_conv2d.$verific$n6614$2225 [1:0], Q = \u_conv2d.i_tcdm2_raddr [1:0]).
Adding EN signal on $flatten\u_conv2d.$verific$i_tcdm2_raddr_reg$conv2d.v:785$2997 ($aldff) from module top (D = $flatten\u_conv2d.$verific$n6614$2225 [19:2], Q = \u_conv2d.i_tcdm2_raddr [19:2]).
Adding EN signal on $flatten\u_conv2d.$verific$i_tcdm1_wen_reg$conv2d.v:913$3122 ($adff) from module top (D = $flatten\u_conv2d.$verific$n8303$1863, Q = \u_conv2d.i_tcdm1_wen).
Adding EN signal on $flatten\u_conv2d.$verific$i_tcdm1_req_reg$conv2d.v:913$3123 ($adff) from module top (D = $flatten\u_conv2d.$verific$n8301$1862, Q = \u_conv2d.i_tcdm1_req).
Adding EN signal on $flatten\u_conv2d.$verific$i_tcdm1_addr_reg$conv2d.v:913$3121 ($aldff) from module top (D = $flatten\u_conv2d.$verific$n8272$2270 [1:0], Q = \u_conv2d.i_tcdm1_addr [1:0]).
Adding EN signal on $flatten\u_conv2d.$verific$i_tcdm1_addr_reg$conv2d.v:913$3121 ($aldff) from module top (D = $flatten\u_conv2d.$verific$n8272$2270 [19:2], Q = \u_conv2d.i_tcdm1_addr [19:2]).
Adding EN signal on $flatten\u_conv2d.$verific$i_pixel_wdata_reg$conv2d.v:913$3126 ($adff) from module top (D = $flatten\u_conv2d.$verific$n8304$2273, Q = \u_conv2d.i_pixel_wdata).
Adding EN signal on $flatten\u_conv2d.$verific$i_pixel_raddr_reg$conv2d.v:1246$4378 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11540$2439, Q = \u_conv2d.i_pixel_raddr).
Adding EN signal on $flatten\u_conv2d.$verific$i_outsel_reg$conv2d.v:1246$4377 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11467$2436, Q = \u_conv2d.i_outsel).
Adding EN signal on $flatten\u_conv2d.$verific$i_mult2_coef_reg$conv2d.v:1246$4404 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11507$2438, Q = \u_conv2d.i_mult2_coef).
Adding EN signal on $flatten\u_conv2d.$verific$i_mult1_coef_reg$conv2d.v:1246$4403 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11474$2437, Q = \u_conv2d.i_mult1_coef).
Adding EN signal on $flatten\u_conv2d.$verific$i_math_mode_reg$conv2d.v:1246$4374 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11258$2426, Q = \u_conv2d.i_math_mode).
Adding EN signal on $flatten\u_conv2d.$verific$i_mac_clr_reg$conv2d.v:1246$4375 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11619$1938, Q = \u_conv2d.i_mac_clr).
Adding EN signal on $flatten\u_conv2d.$verific$i_mac_clken_reg$conv2d.v:1246$4376 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11622$1939, Q = \u_conv2d.i_mac_clken).
Adding EN signal on $flatten\u_conv2d.$verific$i_filter_wdata_reg$conv2d.v:785$3014 ($adff) from module top (D = $flatten\u_conv2d.$verific$n6651$2228, Q = \u_conv2d.i_filter_wdata).
Adding EN signal on $flatten\u_conv2d.$verific$i_filter_waddr_reg$conv2d.v:785$3013 ($adff) from module top (D = $flatten\u_conv2d.$verific$n6562$2221 [0], Q = \u_conv2d.i_filter_waddr [0]).
Adding EN signal on $flatten\u_conv2d.$verific$i_filter_waddr_reg$conv2d.v:785$3013 ($adff) from module top (D = $flatten\u_conv2d.$verific$n6562$2221 [11:1], Q = \u_conv2d.i_filter_waddr [11:1]).
Adding EN signal on $flatten\u_conv2d.$verific$i_filter_raddr_reg$conv2d.v:1246$4379 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11623$2446 [1:0], Q = \u_conv2d.i_filter_raddr [1:0]).
Adding EN signal on $flatten\u_conv2d.$verific$i_filter_raddr_reg$conv2d.v:1246$4379 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11623$2446 [11:2], Q = \u_conv2d.i_filter_raddr [11:2]).
Adding EN signal on $flatten\u_conv2d.$verific$i_done2d_reg$conv2d.v:1246$4383 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11616$1935, Q = \u_conv2d.i_done2d).
Adding EN signal on $flatten\u_conv2d.$verific$i_csel_reg$conv2d.v:1246$4372 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11641$1944, Q = \u_conv2d.i_csel).
Adding EN signal on $flatten\u_conv2d.$verific$i_bias_wdata_reg$conv2d.v:785$3012 ($adff) from module top (D = $flatten\u_conv2d.$verific$n5126$2154, Q = \u_conv2d.i_bias_wdata).
Adding EN signal on $flatten\u_conv2d.$verific$i_bias_waddr_reg$conv2d.v:785$3004 ($adff) from module top (D = $flatten\u_conv2d.$verific$n5064$2149 [11:2], Q = \u_conv2d.i_bias_waddr [11:2]).
Adding EN signal on $flatten\u_conv2d.$verific$i_bias_waddr_reg$conv2d.v:785$3004 ($adff) from module top (D = $flatten\u_conv2d.$verific$n5064$2149 [1:0], Q = \u_conv2d.i_bias_waddr [1:0]).
Adding EN signal on $flatten\u_conv2d.$verific$fsm_getfilters_reg$conv2d.v:785$2986 ($adff) from module top (D = $flatten\u_conv2d.$verific$n6647$2227, Q = \u_conv2d.fsm_getfilters).
Adding EN signal on $flatten\u_conv2d.$verific$fract_select_reg$conv2d.v:1246$4401 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11601$2444, Q = \u_conv2d.fract_select).
Adding EN signal on $flatten\u_conv2d.$verific$filters_loaded_reg$conv2d.v:785$2983 ($adff) from module top (D = $flatten\u_conv2d.$verific$n6604$2224, Q = \u_conv2d.filters_loaded).
Adding EN signal on $flatten\u_conv2d.$verific$filters_done_reg$conv2d.v:1246$4381 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11582$2442 [2:0], Q = \u_conv2d.filters_done [2:0]).
Adding EN signal on $flatten\u_conv2d.$verific$filters_done_reg$conv2d.v:1246$4381 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11582$2442 [8:3], Q = \u_conv2d.filters_done [8:3]).
Adding EN signal on $flatten\u_conv2d.$verific$filter_stride_reg$conv2d.v:785$2984 ($adff) from module top (D = $flatten\u_conv2d.$verific$n6590$2223, Q = \u_conv2d.filter_stride).
Adding EN signal on $flatten\u_conv2d.$verific$filter_start_reg$conv2d.v:785$3019 ($adff) from module top (D = $flatten\u_conv2d.$verific$n6699$1826, Q = \u_conv2d.filter_start).
Adding EN signal on $flatten\u_conv2d.$verific$filter_space_left_reg$conv2d.v:785$3020 ($adff) from module top (D = $flatten\u_conv2d.$verific$n6575$2222, Q = \u_conv2d.filter_space_left).
Adding EN signal on $flatten\u_conv2d.$verific$filter_reload_reg$conv2d.v:1246$4385 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11581$1927, Q = \u_conv2d.filter_reload).
Adding EN signal on $flatten\u_conv2d.$verific$filter_channels_reg$conv2d.v:785$3017 ($adff) from module top (D = $flatten\u_conv2d.$verific$n6637$2226, Q = \u_conv2d.filter_channels).
Adding EN signal on $flatten\u_conv2d.$verific$channels_loaded_reg$conv2d.v:913$3119 ($adff) from module top (D = $flatten\u_conv2d.$verific$n8338$2274 [1:0], Q = \u_conv2d.channels_loaded [1:0]).
Adding EN signal on $flatten\u_conv2d.$verific$channels_loaded_reg$conv2d.v:913$3119 ($adff) from module top (D = $flatten\u_conv2d.$verific$n8338$2274 [8:2], Q = \u_conv2d.channels_loaded [8:2]).
Adding EN signal on $flatten\u_conv2d.$verific$channels_done_reg$conv2d.v:1246$4380 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11604$2445 [1:0], Q = \u_conv2d.channels_done [1:0]).
Adding EN signal on $flatten\u_conv2d.$verific$channels_done_reg$conv2d.v:1246$4380 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11604$2445 [8:2], Q = \u_conv2d.channels_done [8:2]).
Adding EN signal on $flatten\u_conv2d.$verific$buffers_used_reg$conv2d.v:913$3128 ($adff) from module top (D = $flatten\u_conv2d.$verific$n8293$2271 [1], Q = \u_conv2d.buffers_used [1]).
Adding EN signal on $flatten\u_conv2d.$verific$buffers_used_reg$conv2d.v:913$3128 ($adff) from module top (D = $flatten\u_conv2d.$verific$n8293$2271 [0], Q = \u_conv2d.buffers_used [0]).
Adding EN signal on $flatten\u_conv2d.$verific$bias_loaded_reg$conv2d.v:785$3006 ($adff) from module top (D = $flatten\u_conv2d.$verific$n5112$2152, Q = \u_conv2d.bias_loaded).
Adding EN signal on $flatten\u_conv2d.$verific$acc7_reg$conv2d.v:1246$4398 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11436$2434 [7:0], Q = \u_conv2d.acc7 [7:0]).
Adding EN signal on $flatten\u_conv2d.$verific$acc7_reg$conv2d.v:1246$4398 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11436$2434 [15:8], Q = \u_conv2d.acc7 [15:8]).
Adding EN signal on $flatten\u_conv2d.$verific$acc7_reg$conv2d.v:1246$4398 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11436$2434 [23:16], Q = \u_conv2d.acc7 [23:16]).
Adding EN signal on $flatten\u_conv2d.$verific$acc6_reg$conv2d.v:1246$4397 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11411$2433 [7:0], Q = \u_conv2d.acc6 [7:0]).
Adding EN signal on $flatten\u_conv2d.$verific$acc6_reg$conv2d.v:1246$4397 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11411$2433 [15:8], Q = \u_conv2d.acc6 [15:8]).
Adding EN signal on $flatten\u_conv2d.$verific$acc6_reg$conv2d.v:1246$4397 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11411$2433 [23:16], Q = \u_conv2d.acc6 [23:16]).
Adding EN signal on $flatten\u_conv2d.$verific$acc5_reg$conv2d.v:1246$4396 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11386$2432 [7:0], Q = \u_conv2d.acc5 [7:0]).
Adding EN signal on $flatten\u_conv2d.$verific$acc5_reg$conv2d.v:1246$4396 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11386$2432 [15:8], Q = \u_conv2d.acc5 [15:8]).
Adding EN signal on $flatten\u_conv2d.$verific$acc5_reg$conv2d.v:1246$4396 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11386$2432 [23:16], Q = \u_conv2d.acc5 [23:16]).
Adding EN signal on $flatten\u_conv2d.$verific$acc4_reg$conv2d.v:1246$4395 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11361$2431 [7:0], Q = \u_conv2d.acc4 [7:0]).
Adding EN signal on $flatten\u_conv2d.$verific$acc4_reg$conv2d.v:1246$4395 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11361$2431 [15:8], Q = \u_conv2d.acc4 [15:8]).
Adding EN signal on $flatten\u_conv2d.$verific$acc4_reg$conv2d.v:1246$4395 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11361$2431 [23:16], Q = \u_conv2d.acc4 [23:16]).
Adding EN signal on $flatten\u_conv2d.$verific$acc3_reg$conv2d.v:1246$4394 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11336$2430 [7:0], Q = \u_conv2d.acc3 [7:0]).
Adding EN signal on $flatten\u_conv2d.$verific$acc3_reg$conv2d.v:1246$4394 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11336$2430 [15:8], Q = \u_conv2d.acc3 [15:8]).
Adding EN signal on $flatten\u_conv2d.$verific$acc3_reg$conv2d.v:1246$4394 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11336$2430 [23:16], Q = \u_conv2d.acc3 [23:16]).
Adding EN signal on $flatten\u_conv2d.$verific$acc2_reg$conv2d.v:1246$4393 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11311$2429 [7:0], Q = \u_conv2d.acc2 [7:0]).
Adding EN signal on $flatten\u_conv2d.$verific$acc2_reg$conv2d.v:1246$4393 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11311$2429 [15:8], Q = \u_conv2d.acc2 [15:8]).
Adding EN signal on $flatten\u_conv2d.$verific$acc2_reg$conv2d.v:1246$4393 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11311$2429 [23:16], Q = \u_conv2d.acc2 [23:16]).
Adding EN signal on $flatten\u_conv2d.$verific$acc1_reg$conv2d.v:1246$4392 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11286$2428 [7:0], Q = \u_conv2d.acc1 [7:0]).
Adding EN signal on $flatten\u_conv2d.$verific$acc1_reg$conv2d.v:1246$4392 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11286$2428 [15:8], Q = \u_conv2d.acc1 [15:8]).
Adding EN signal on $flatten\u_conv2d.$verific$acc1_reg$conv2d.v:1246$4392 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11286$2428 [23:16], Q = \u_conv2d.acc1 [23:16]).
Adding EN signal on $flatten\u_conv2d.$verific$acc0_reg$conv2d.v:1246$4391 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11261$2427 [7:0], Q = \u_conv2d.acc0 [7:0]).
Adding EN signal on $flatten\u_conv2d.$verific$acc0_reg$conv2d.v:1246$4391 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11261$2427 [15:8], Q = \u_conv2d.acc0 [15:8]).
Adding EN signal on $flatten\u_conv2d.$verific$acc0_reg$conv2d.v:1246$4391 ($adff) from module top (D = $flatten\u_conv2d.$verific$n11261$2427 [23:16], Q = \u_conv2d.acc0 [23:16]).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$5451 ($adffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$5451 ($adffe) from module top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$5435 ($adffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$5435 ($adffe) from module top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$5336 ($adffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$5336 ($adffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$5336 ($adffe) from module top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$5238 ($adffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$5238 ($adffe) from module top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$5208 ($adffe) from module top.
Setting constant 0-bit at position 0 on $flatten\u_conv2d.$verific$bias_base_addr_reg$conv2d.v:785$3005 ($adff) from module top.
Setting constant 0-bit at position 1 on $flatten\u_conv2d.$verific$bias_base_addr_reg$conv2d.v:785$3005 ($adff) from module top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$5398 ($adffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$5398 ($adffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$5398 ($adffe) from module top.
Setting constant 0-bit at position 0 on $flatten\u_conv2d.$verific$filters_complete_reg$conv2d.v:785$3021 ($adff) from module top.
Setting constant 0-bit at position 1 on $flatten\u_conv2d.$verific$filters_complete_reg$conv2d.v:785$3021 ($adff) from module top.
Setting constant 0-bit at position 2 on $flatten\u_conv2d.$verific$filters_complete_reg$conv2d.v:785$3021 ($adff) from module top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$5325 ($adffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$5325 ($adffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$5325 ($adffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$5303 ($adffe) from module top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$5296 ($adffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$5296 ($adffe) from module top.
Setting constant 0-bit at position 0 on $flatten\u_conv2d.$verific$i_pixel_waddr_reg$conv2d.v:913$3125 ($adff) from module top.
Setting constant 0-bit at position 1 on $flatten\u_conv2d.$verific$i_pixel_waddr_reg$conv2d.v:913$3125 ($adff) from module top.

13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 46 unused cells and 95 unused wires.
<suppressed ~47 debug messages>

13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~135 debug messages>

13.9. Rerunning OPT passes. (Maybe there is more to do..)

13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~145 debug messages>

13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~519 debug messages>
Removed a total of 173 cells.

13.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4957 ($adffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4957 ($adffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4957 ($adffe) from module top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$5666 ($adff) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$5666 ($adff) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$5666 ($adff) from module top.
Setting constant 0-bit at position 0 on $flatten\u_conv2d.$verific$i_bias_raddr_reg$conv2d.v:785$3003 ($adff) from module top.
Setting constant 0-bit at position 1 on $flatten\u_conv2d.$verific$i_bias_raddr_reg$conv2d.v:785$3003 ($adff) from module top.

13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1 unused cells and 182 unused wires.
<suppressed ~2 debug messages>

13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

13.16. Rerunning OPT passes. (Maybe there is more to do..)

13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~149 debug messages>

13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

13.20. Executing OPT_DFF pass (perform DFF optimizations).

13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

13.23. Finished OPT passes. (There is nothing left to do.)

14. Executing WREDUCE pass (reducing word size of cells).
Removed top 7 bits (of 20) from FF cell top.$flatten\u_ctl.$verific$i_ctl_pfwaddr_reg$control.v:224$1718 ($adff).
Removed top 2 bits (of 7) from port B of cell top.$flatten\u_ctl.$verific$equal_211$control.v:216$1662 ($eq).
Removed top 2 bits (of 7) from port B of cell top.$flatten\u_ctl.$verific$equal_142$control.v:181$1633 ($eq).
Removed top 2 bits (of 7) from port B of cell top.$flatten\u_ctl.$verific$equal_141$control.v:177$1632 ($eq).
Removed top 2 bits (of 7) from port B of cell top.$flatten\u_ctl.$verific$equal_140$control.v:174$1631 ($eq).
Removed top 3 bits (of 7) from port B of cell top.$flatten\u_ctl.$verific$equal_139$control.v:169$1630 ($eq).
Removed top 3 bits (of 7) from port B of cell top.$flatten\u_ctl.$verific$equal_138$control.v:164$1629 ($eq).
Removed top 3 bits (of 7) from port B of cell top.$flatten\u_ctl.$verific$equal_137$control.v:159$1628 ($eq).
Removed top 3 bits (of 7) from port B of cell top.$flatten\u_ctl.$verific$equal_136$control.v:158$1627 ($eq).
Removed top 3 bits (of 7) from port B of cell top.$flatten\u_ctl.$verific$equal_135$control.v:157$1626 ($eq).
Removed top 3 bits (of 7) from port B of cell top.$flatten\u_ctl.$verific$equal_134$control.v:156$1625 ($eq).
Removed top 3 bits (of 7) from port B of cell top.$flatten\u_ctl.$verific$equal_133$control.v:155$1624 ($eq).
Removed top 3 bits (of 7) from port B of cell top.$flatten\u_ctl.$verific$equal_132$control.v:154$1623 ($eq).
Removed top 4 bits (of 7) from port B of cell top.$flatten\u_ctl.$verific$equal_131$control.v:153$1622 ($eq).
Removed top 4 bits (of 7) from port B of cell top.$flatten\u_ctl.$verific$equal_130$control.v:152$1621 ($eq).
Removed top 4 bits (of 7) from port B of cell top.$flatten\u_ctl.$verific$equal_129$control.v:151$1620 ($eq).
Removed top 4 bits (of 7) from port B of cell top.$flatten\u_ctl.$verific$equal_128$control.v:150$1619 ($eq).
Removed top 5 bits (of 7) from port B of cell top.$flatten\u_ctl.$verific$equal_127$control.v:149$1618 ($eq).
Removed top 5 bits (of 7) from port B of cell top.$flatten\u_ctl.$verific$equal_126$control.v:148$1617 ($eq).
Removed top 6 bits (of 7) from port B of cell top.$flatten\u_ctl.$verific$equal_125$control.v:147$1616 ($eq).
Removed top 17 bits (of 18) from port B of cell top.$flatten\u_ctl.$verific$add_108$control.v:161$1611 ($add).
Removed top 23 bits (of 24) from port B of cell top.$flatten\u_ctl.$verific$add_69$control.v:118$1593 ($add).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$5509 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$5483 ($ne).
Removed top 1 bits (of 4) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$5477 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$5406 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$5404 ($ne).
Removed top 1 bits (of 3) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$5391 ($ne).
Removed top 1 bits (of 3) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$5378 ($ne).
Removed top 2 bits (of 3) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$5313 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$5295 ($ne).
Removed top 2 bits (of 3) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$5235 ($ne).
Removed top 2 bits (of 3) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$5233 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$5231 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$5069 ($ne).
Removed top 1 bits (of 3) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$5063 ($ne).
Removed top 1 bits (of 3) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$5031 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$5017 ($ne).
Removed top 1 bits (of 3) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$4983 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$4760 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$4782 ($eq).
Removed top 12 bits (of 13) from port B of cell top.$flatten\u_conv2d.\pk2.$verific$add_4$fadder.v:9$4436 ($add).
Removed top 1 bits (of 13) from port Y of cell top.$flatten\u_conv2d.\pk2.$verific$add_4$fadder.v:9$4436 ($add).
Removed top 1 bits (of 13) from port A of cell top.$flatten\u_conv2d.\pk2.$verific$add_4$fadder.v:9$4436 ($add).
Removed top 1 bits (of 2) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$4743 ($eq).
Removed top 15 bits (of 16) from port B of cell top.$flatten\u_conv2d.$verific$add_1110$conv2d.v:1199$4296 ($add).
Removed top 1 bits (of 7) from port B of cell top.$flatten\u_conv2d.$verific$equal_1094$conv2d.v:1182$4292 ($eq).
Removed top 5 bits (of 6) from port B of cell top.$flatten\u_conv2d.$verific$add_1091$conv2d.v:1181$4290 ($add).
Removed top 1 bits (of 10) from port B of cell top.$flatten\u_conv2d.$verific$equal_1069$conv2d.v:1157$4276 ($eq).
Removed top 6 bits (of 7) from port B of cell top.$flatten\u_conv2d.$verific$add_1066$conv2d.v:1156$4274 ($add).
Removed top 1 bits (of 2) from port B of cell top.$flatten\u_conv2d.$verific$add_1063$conv2d.v:1153$4272 ($add).
Removed top 9 bits (of 10) from port B of cell top.$flatten\u_conv2d.$verific$add_1018$conv2d.v:1119$4253 ($add).
Removed top 1 bits (of 13) from port Y of cell top.$flatten\u_conv2d.\pk2.$verific$add_3$fadder.v:9$4435 ($add).
Removed top 9 bits (of 12) from port B of cell top.$flatten\u_conv2d.\pk1.$verific$add_3$adder.v:8$4428 ($add).
Removed top 1 bits (of 13) from port Y of cell top.$flatten\u_conv2d.\pk1.$verific$add_3$adder.v:8$4428 ($add).
Removed top 8 bits (of 16) from port B of cell top.$flatten\u_conv2d.\k16_7.$verific$add_3$adder.v:8$4422 ($add).
Removed top 1 bits (of 17) from port Y of cell top.$flatten\u_conv2d.\k16_7.$verific$add_3$adder.v:8$4422 ($add).
Removed top 8 bits (of 16) from port B of cell top.$flatten\u_conv2d.\k16_6.$verific$add_3$adder.v:8$4422 ($add).
Removed top 1 bits (of 17) from port Y of cell top.$flatten\u_conv2d.\k16_6.$verific$add_3$adder.v:8$4422 ($add).
Removed top 8 bits (of 16) from port B of cell top.$flatten\u_conv2d.\k16_5.$verific$add_3$adder.v:8$4422 ($add).
Removed top 1 bits (of 17) from port Y of cell top.$flatten\u_conv2d.\k16_5.$verific$add_3$adder.v:8$4422 ($add).
Removed top 8 bits (of 16) from port B of cell top.$flatten\u_conv2d.\k16_4.$verific$add_3$adder.v:8$4422 ($add).
Removed top 1 bits (of 17) from port Y of cell top.$flatten\u_conv2d.\k16_4.$verific$add_3$adder.v:8$4422 ($add).
Removed top 8 bits (of 16) from port B of cell top.$flatten\u_conv2d.\k16_3.$verific$add_3$adder.v:8$4422 ($add).
Removed top 1 bits (of 17) from port Y of cell top.$flatten\u_conv2d.\k16_3.$verific$add_3$adder.v:8$4422 ($add).
Removed top 8 bits (of 16) from port B of cell top.$flatten\u_conv2d.\k16_2.$verific$add_3$adder.v:8$4422 ($add).
Removed top 1 bits (of 17) from port Y of cell top.$flatten\u_conv2d.\k16_2.$verific$add_3$adder.v:8$4422 ($add).
Removed top 8 bits (of 16) from port B of cell top.$flatten\u_conv2d.\k16_1.$verific$add_3$adder.v:8$4422 ($add).
Removed top 1 bits (of 17) from port Y of cell top.$flatten\u_conv2d.\k16_1.$verific$add_3$adder.v:8$4422 ($add).
Removed top 8 bits (of 16) from port B of cell top.$flatten\u_conv2d.\k16_0.$verific$add_3$adder.v:8$4422 ($add).
Removed top 1 bits (of 17) from port Y of cell top.$flatten\u_conv2d.\k16_0.$verific$add_3$adder.v:8$4422 ($add).
Removed top 16 bits (of 24) from port B of cell top.$flatten\u_conv2d.\k7.$verific$add_3$adder.v:8$4416 ($add).
Removed top 1 bits (of 25) from port Y of cell top.$flatten\u_conv2d.\k7.$verific$add_3$adder.v:8$4416 ($add).
Removed top 16 bits (of 24) from port B of cell top.$flatten\u_conv2d.\k6.$verific$add_3$adder.v:8$4416 ($add).
Removed top 1 bits (of 25) from port Y of cell top.$flatten\u_conv2d.\k6.$verific$add_3$adder.v:8$4416 ($add).
Removed top 16 bits (of 24) from port B of cell top.$flatten\u_conv2d.\k5.$verific$add_3$adder.v:8$4416 ($add).
Removed top 1 bits (of 25) from port Y of cell top.$flatten\u_conv2d.\k5.$verific$add_3$adder.v:8$4416 ($add).
Removed top 16 bits (of 24) from port B of cell top.$flatten\u_conv2d.\k4.$verific$add_3$adder.v:8$4416 ($add).
Removed top 1 bits (of 25) from port Y of cell top.$flatten\u_conv2d.\k4.$verific$add_3$adder.v:8$4416 ($add).
Removed top 16 bits (of 24) from port B of cell top.$flatten\u_conv2d.\k3.$verific$add_3$adder.v:8$4416 ($add).
Removed top 1 bits (of 25) from port Y of cell top.$flatten\u_conv2d.\k3.$verific$add_3$adder.v:8$4416 ($add).
Removed top 16 bits (of 24) from port B of cell top.$flatten\u_conv2d.\k2.$verific$add_3$adder.v:8$4416 ($add).
Removed top 1 bits (of 25) from port Y of cell top.$flatten\u_conv2d.\k2.$verific$add_3$adder.v:8$4416 ($add).
Removed top 16 bits (of 24) from port B of cell top.$flatten\u_conv2d.\k1.$verific$add_3$adder.v:8$4416 ($add).
Removed top 1 bits (of 25) from port Y of cell top.$flatten\u_conv2d.\k1.$verific$add_3$adder.v:8$4416 ($add).
Removed top 16 bits (of 24) from port B of cell top.$flatten\u_conv2d.\k0.$verific$add_3$adder.v:8$4416 ($add).
Removed top 1 bits (of 25) from port Y of cell top.$flatten\u_conv2d.\k0.$verific$add_3$adder.v:8$4416 ($add).
Removed top 1 bits (of 17) from port B of cell top.$flatten\u_conv2d.$verific$equal_768$conv2d.v:876$3066 ($eq).
Removed top 15 bits (of 16) from port B of cell top.$flatten\u_conv2d.$verific$add_764$conv2d.v:874$3064 ($add).
Removed top 1 bits (of 10) from port B of cell top.$flatten\u_conv2d.$verific$equal_756$conv2d.v:870$3060 ($eq).
Removed top 6 bits (of 7) from port B of cell top.$flatten\u_conv2d.$verific$add_753$conv2d.v:869$3058 ($add).
Removed top 17 bits (of 18) from port B of cell top.$flatten\u_conv2d.$verific$add_750$conv2d.v:867$3056 ($add).
Removed top 9 bits (of 10) from port B of cell top.$flatten\u_conv2d.$verific$add_724$conv2d.v:842$3045 ($add).
Removed top 1 bits (of 3) from mux cell top.$flatten\u_conv2d.$verific$select_635$conv2d.v:784$2972 ($pmux).
Removed top 1 bits (of 2) from port B of cell top.$flatten\u_conv2d.$verific$equal_623$conv2d.v:667$2958 ($eq).
Removed top 1 bits (of 3) from mux cell top.$flatten\u_conv2d.$verific$mux_621$conv2d.v:782$2956 ($mux).
Removed top 1 bits (of 3) from mux cell top.$flatten\u_conv2d.$verific$mux_617$conv2d.v:779$2954 ($mux).
Removed top 1 bits (of 3) from mux cell top.$flatten\u_conv2d.$verific$mux_486$conv2d.v:702$2913 ($mux).
Removed top 2 bits (of 14) from port A of cell top.$flatten\u_conv2d.$verific$LessThan_472$conv2d.v:691$2908 ($le).
Removed top 1 bits (of 10) from port B of cell top.$flatten\u_conv2d.$verific$LessThan_471$conv2d.v:690$2907 ($lt).
Removed top 5 bits (of 6) from port B of cell top.$flatten\u_conv2d.$verific$add_468$conv2d.v:689$2905 ($add).
Removed top 5 bits (of 6) from port B of cell top.$flatten\u_conv2d.$verific$add_466$conv2d.v:688$2903 ($add).
Removed top 1 bits (of 14) from port A of cell top.$flatten\u_conv2d.$verific$sub_464$conv2d.v:687$2900 ($sub).
Removed top 10 bits (of 14) from port B of cell top.$flatten\u_conv2d.$verific$sub_464$conv2d.v:687$2900 ($sub).
Removed top 1 bits (of 14) from port Y of cell top.$flatten\u_conv2d.$verific$sub_464$conv2d.v:687$2900 ($sub).
Removed top 1 bits (of 10) from port B of cell top.$flatten\u_conv2d.$verific$equal_463$conv2d.v:686$2899 ($eq).
Removed top 8 bits (of 9) from port B of cell top.$flatten\u_conv2d.$verific$add_460$conv2d.v:685$2897 ($add).
Removed top 17 bits (of 18) from port B of cell top.$flatten\u_conv2d.$verific$add_454$conv2d.v:681$2891 ($add).
Removed top 1 bits (of 15) from port A of cell top.$flatten\u_conv2d.$verific$sub_439$conv2d.v:672$2881 ($sub).
Removed top 11 bits (of 15) from port B of cell top.$flatten\u_conv2d.$verific$sub_439$conv2d.v:672$2881 ($sub).
Removed top 1 bits (of 15) from port Y of cell top.$flatten\u_conv2d.$verific$sub_439$conv2d.v:672$2881 ($sub).
Removed top 10 bits (of 11) from port B of cell top.$flatten\u_conv2d.$verific$add_436$conv2d.v:669$2879 ($add).
Removed top 1 bits (of 3) from mux cell top.$flatten\u_conv2d.$verific$mux_435$conv2d.v:665$2878 ($mux).
Removed top 8 bits (of 9) from port B of cell top.$flatten\u_conv2d.$verific$add_387$conv2d.v:638$2841 ($add).
Removed top 17 bits (of 18) from port B of cell top.$flatten\u_conv2d.$verific$add_381$conv2d.v:630$2837 ($add).
Removed top 9 bits (of 10) from port B of cell top.$flatten\u_conv2d.$verific$add_354$conv2d.v:606$2823 ($add).
Removed top 1 bits (of 4) from mux cell top.$flatten\u_conv2d.$verific$mux_324$conv2d.v:579$2806 ($mux).
Removed top 10 bits (of 11) from port B of cell top.$flatten\u_conv2d.$verific$add_291$conv2d.v:540$2788 ($add).
Removed top 9 bits (of 10) from port B of cell top.$flatten\u_conv2d.$verific$add_202$conv2d.v:418$2738 ($add).
Removed top 1 bits (of 10) from port B of cell top.$flatten\u_conv2d.$verific$add_190$conv2d.v:409$2729 ($add).
Removed top 7 bits (of 20) from port B of cell top.$flatten\u_conv2d.\t2_3.$verific$add_3$adder.v:8$4410 ($add).
Removed top 1 bits (of 21) from port Y of cell top.$flatten\u_conv2d.\t2_3.$verific$add_3$adder.v:8$4410 ($add).
Removed top 17 bits (of 20) from port B of cell top.$flatten\u_conv2d.\t2_2.$verific$add_3$adder.v:8$4410 ($add).
Removed top 1 bits (of 21) from port Y of cell top.$flatten\u_conv2d.\t2_2.$verific$add_3$adder.v:8$4410 ($add).
Removed top 11 bits (of 20) from port B of cell top.$flatten\u_conv2d.\t2_1.$verific$add_3$adder.v:8$4410 ($add).
Removed top 1 bits (of 21) from port Y of cell top.$flatten\u_conv2d.\t2_1.$verific$add_3$adder.v:8$4410 ($add).
Removed top 2 bits (of 4) from port B of cell top.$flatten\u_conv2d.$verific$equal_69$conv2d.v:123$2492 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$flatten\u_conv2d.$verific$equal_68$conv2d.v:122$2491 ($eq).
Removed top 3 bits (of 4) from port B of cell top.$flatten\u_conv2d.$verific$equal_67$conv2d.v:121$2490 ($eq).
Removed top 1 bits (of 6) from mux cell top.$flatten\u_conv2d.$verific$mux_1278$conv2d.v:713$4197 ($mux).
Removed top 1 bits (of 4) from wire top.$flatten\u_conv2d.$verific$n4415$2110.
Removed top 1 bits (of 20) from wire top.$flatten\u_conv2d.$verific$n4420$2111.
Removed top 1 bits (of 3) from wire top.$flatten\u_conv2d.$verific$n5316$2159.
Removed top 1 bits (of 15) from wire top.$flatten\u_conv2d.$verific$n5359$2163.
Removed top 6 bits (of 14) from wire top.$flatten\u_conv2d.$verific$n5416$2165.
Removed top 1 bits (of 14) from wire top.$flatten\u_conv2d.$verific$n5563$2172.
Removed top 1 bits (of 3) from wire top.$flatten\u_conv2d.$verific$n5681$2178.
Removed top 1 bits (of 13) from wire top.$flatten\u_conv2d.$verific$n5687$2179.
Removed top 7 bits (of 9) from wire top.$flatten\u_conv2d.$verific$n5701$2180.
Removed top 1 bits (of 9) from wire top.$flatten\u_conv2d.$verific$n5711$2181.
Removed top 3 bits (of 9) from wire top.$flatten\u_conv2d.$verific$n5723$2182.
Removed top 1 bits (of 3) from wire top.$flatten\u_conv2d.$verific$n5734$2183.
Removed top 2 bits (of 9) from wire top.$flatten\u_conv2d.$verific$n5740$2184.
Removed top 2 bits (of 13) from wire top.$flatten\u_conv2d.$verific$n5750$2185.
Removed top 1 bits (of 9) from wire top.$flatten\u_conv2d.$verific$n5764$2186.
Removed top 1 bits (of 3) from wire top.$flatten\u_conv2d.$verific$n5894$2195.
Removed top 1 bits (of 12) from wire top.$flatten\u_conv2d.$verific$n5924$2197.
Removed top 1 bits (of 14) from wire top.$flatten\u_conv2d.$verific$n5994$2199.
Removed top 3 bits (of 12) from wire top.$flatten\u_conv2d.$verific$n6009$2200.
Removed top 1 bits (of 3) from wire top.$flatten\u_conv2d.$verific$n6534$2218.
Removed top 1 bits (of 3) from wire top.$flatten\u_conv2d.$verific$n6553$2220.
Removed top 1 bits (of 12) from wire top.$flatten\u_conv2d.$verific$n6562$2221.
Removed top 2 bits (of 14) from wire top.$flatten\u_conv2d.$verific$n6575$2222.
Removed top 3 bits (of 13) from wire top.$flatten\u_conv2d.$verific$n6590$2223.
Removed top 1 bits (of 3) from wire top.$flatten\u_conv2d.$verific$n6647$2227.
Removed top 7 bits (of 20) from wire top.ctl_pfwaddr.

15. Executing PEEPOPT pass (run peephole optimizers).

16. Executing PMUXTREE pass.

17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 180 unused cells and 320 unused wires.
<suppressed ~202 debug messages>

18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module top:
  creating $macc model for $flatten\u_conv2d.$verific$add_1018$conv2d.v:1119$4253 ($add).
  creating $macc model for $flatten\u_conv2d.$verific$add_1063$conv2d.v:1153$4272 ($add).
  creating $macc model for $flatten\u_conv2d.$verific$add_1066$conv2d.v:1156$4274 ($add).
  creating $macc model for $flatten\u_conv2d.$verific$add_1091$conv2d.v:1181$4290 ($add).
  creating $macc model for $flatten\u_conv2d.$verific$add_1110$conv2d.v:1199$4296 ($add).
  creating $macc model for $flatten\u_conv2d.$verific$add_190$conv2d.v:409$2729 ($add).
  creating $macc model for $flatten\u_conv2d.$verific$add_202$conv2d.v:418$2738 ($add).
  creating $macc model for $flatten\u_conv2d.$verific$add_291$conv2d.v:540$2788 ($add).
  creating $macc model for $flatten\u_conv2d.$verific$add_354$conv2d.v:606$2823 ($add).
  creating $macc model for $flatten\u_conv2d.$verific$add_381$conv2d.v:630$2837 ($add).
  creating $macc model for $flatten\u_conv2d.$verific$add_387$conv2d.v:638$2841 ($add).
  creating $macc model for $flatten\u_conv2d.$verific$add_436$conv2d.v:669$2879 ($add).
  creating $macc model for $flatten\u_conv2d.$verific$add_454$conv2d.v:681$2891 ($add).
  creating $macc model for $flatten\u_conv2d.$verific$add_460$conv2d.v:685$2897 ($add).
  creating $macc model for $flatten\u_conv2d.$verific$add_466$conv2d.v:688$2903 ($add).
  creating $macc model for $flatten\u_conv2d.$verific$add_468$conv2d.v:689$2905 ($add).
  creating $macc model for $flatten\u_conv2d.$verific$add_724$conv2d.v:842$3045 ($add).
  creating $macc model for $flatten\u_conv2d.$verific$add_750$conv2d.v:867$3056 ($add).
  creating $macc model for $flatten\u_conv2d.$verific$add_753$conv2d.v:869$3058 ($add).
  creating $macc model for $flatten\u_conv2d.$verific$add_764$conv2d.v:874$3064 ($add).
  creating $macc model for $flatten\u_conv2d.$verific$add_903$conv2d.v:1018$4179 ($add).
  creating $macc model for $flatten\u_conv2d.$verific$add_905$conv2d.v:1019$4181 ($add).
  creating $macc model for $flatten\u_conv2d.$verific$add_907$conv2d.v:1020$4183 ($add).
  creating $macc model for $flatten\u_conv2d.$verific$add_909$conv2d.v:1021$4185 ($add).
  creating $macc model for $flatten\u_conv2d.$verific$add_911$conv2d.v:1022$4187 ($add).
  creating $macc model for $flatten\u_conv2d.$verific$add_913$conv2d.v:1023$4189 ($add).
  creating $macc model for $flatten\u_conv2d.$verific$add_915$conv2d.v:1024$4191 ($add).
  creating $macc model for $flatten\u_conv2d.$verific$add_917$conv2d.v:1025$4193 ($add).
  creating $macc model for $flatten\u_conv2d.$verific$add_929$conv2d.v:1041$4203 ($add).
  creating $macc model for $flatten\u_conv2d.$verific$sub_439$conv2d.v:672$2881 ($sub).
  creating $macc model for $flatten\u_conv2d.$verific$sub_464$conv2d.v:687$2900 ($sub).
  creating $macc model for $flatten\u_conv2d.$verific$sub_697$conv2d.v:804$3033 ($sub).
  creating $macc model for $flatten\u_conv2d.$verific$sub_699$conv2d.v:805$3035 ($sub).
  creating $macc model for $flatten\u_conv2d.$verific$sub_701$conv2d.v:806$3037 ($sub).
  creating $macc model for $flatten\u_conv2d.$verific$sub_703$conv2d.v:807$3039 ($sub).
  creating $macc model for $flatten\u_conv2d.\k0.$verific$add_3$adder.v:8$4416 ($add).
  creating $macc model for $flatten\u_conv2d.\k1.$verific$add_3$adder.v:8$4416 ($add).
  creating $macc model for $flatten\u_conv2d.\k16_0.$verific$add_3$adder.v:8$4422 ($add).
  creating $macc model for $flatten\u_conv2d.\k16_1.$verific$add_3$adder.v:8$4422 ($add).
  creating $macc model for $flatten\u_conv2d.\k16_2.$verific$add_3$adder.v:8$4422 ($add).
  creating $macc model for $flatten\u_conv2d.\k16_3.$verific$add_3$adder.v:8$4422 ($add).
  creating $macc model for $flatten\u_conv2d.\k16_4.$verific$add_3$adder.v:8$4422 ($add).
  creating $macc model for $flatten\u_conv2d.\k16_5.$verific$add_3$adder.v:8$4422 ($add).
  creating $macc model for $flatten\u_conv2d.\k16_6.$verific$add_3$adder.v:8$4422 ($add).
  creating $macc model for $flatten\u_conv2d.\k16_7.$verific$add_3$adder.v:8$4422 ($add).
  creating $macc model for $flatten\u_conv2d.\k2.$verific$add_3$adder.v:8$4416 ($add).
  creating $macc model for $flatten\u_conv2d.\k3.$verific$add_3$adder.v:8$4416 ($add).
  creating $macc model for $flatten\u_conv2d.\k4.$verific$add_3$adder.v:8$4416 ($add).
  creating $macc model for $flatten\u_conv2d.\k5.$verific$add_3$adder.v:8$4416 ($add).
  creating $macc model for $flatten\u_conv2d.\k6.$verific$add_3$adder.v:8$4416 ($add).
  creating $macc model for $flatten\u_conv2d.\k7.$verific$add_3$adder.v:8$4416 ($add).
  creating $macc model for $flatten\u_conv2d.\pk1.$verific$add_3$adder.v:8$4428 ($add).
  creating $macc model for $flatten\u_conv2d.\pk2.$verific$add_3$fadder.v:9$4435 ($add).
  creating $macc model for $flatten\u_conv2d.\pk2.$verific$add_4$fadder.v:9$4436 ($add).
  creating $macc model for $flatten\u_conv2d.\t2_1.$verific$add_3$adder.v:8$4410 ($add).
  creating $macc model for $flatten\u_conv2d.\t2_2.$verific$add_3$adder.v:8$4410 ($add).
  creating $macc model for $flatten\u_conv2d.\t2_3.$verific$add_3$adder.v:8$4410 ($add).
  creating $macc model for $flatten\u_ctl.$verific$add_108$control.v:161$1611 ($add).
  creating $macc model for $flatten\u_ctl.$verific$add_69$control.v:118$1593 ($add).
  merging $macc model for $flatten\u_conv2d.\pk2.$verific$add_3$fadder.v:9$4435 into $flatten\u_conv2d.\pk2.$verific$add_4$fadder.v:9$4436.
  creating $alu model for $macc $flatten\u_ctl.$verific$add_108$control.v:161$1611.
  creating $alu model for $macc $flatten\u_conv2d.\t2_3.$verific$add_3$adder.v:8$4410.
  creating $alu model for $macc $flatten\u_conv2d.\t2_2.$verific$add_3$adder.v:8$4410.
  creating $alu model for $macc $flatten\u_conv2d.\t2_1.$verific$add_3$adder.v:8$4410.
  creating $alu model for $macc $flatten\u_conv2d.\pk2.$verific$add_4$fadder.v:9$4436.
  creating $alu model for $macc $flatten\u_ctl.$verific$add_69$control.v:118$1593.
  creating $alu model for $macc $flatten\u_conv2d.\pk1.$verific$add_3$adder.v:8$4428.
  creating $alu model for $macc $flatten\u_conv2d.\k7.$verific$add_3$adder.v:8$4416.
  creating $alu model for $macc $flatten\u_conv2d.\k6.$verific$add_3$adder.v:8$4416.
  creating $alu model for $macc $flatten\u_conv2d.\k5.$verific$add_3$adder.v:8$4416.
  creating $alu model for $macc $flatten\u_conv2d.\k4.$verific$add_3$adder.v:8$4416.
  creating $alu model for $macc $flatten\u_conv2d.\k3.$verific$add_3$adder.v:8$4416.
  creating $alu model for $macc $flatten\u_conv2d.\k2.$verific$add_3$adder.v:8$4416.
  creating $alu model for $macc $flatten\u_conv2d.\k16_7.$verific$add_3$adder.v:8$4422.
  creating $alu model for $macc $flatten\u_conv2d.\k16_6.$verific$add_3$adder.v:8$4422.
  creating $alu model for $macc $flatten\u_conv2d.\k16_5.$verific$add_3$adder.v:8$4422.
  creating $alu model for $macc $flatten\u_conv2d.\k16_4.$verific$add_3$adder.v:8$4422.
  creating $alu model for $macc $flatten\u_conv2d.\k16_3.$verific$add_3$adder.v:8$4422.
  creating $alu model for $macc $flatten\u_conv2d.\k16_2.$verific$add_3$adder.v:8$4422.
  creating $alu model for $macc $flatten\u_conv2d.\k16_1.$verific$add_3$adder.v:8$4422.
  creating $alu model for $macc $flatten\u_conv2d.\k16_0.$verific$add_3$adder.v:8$4422.
  creating $alu model for $macc $flatten\u_conv2d.\k1.$verific$add_3$adder.v:8$4416.
  creating $alu model for $macc $flatten\u_conv2d.\k0.$verific$add_3$adder.v:8$4416.
  creating $alu model for $macc $flatten\u_conv2d.$verific$sub_703$conv2d.v:807$3039.
  creating $alu model for $macc $flatten\u_conv2d.$verific$sub_701$conv2d.v:806$3037.
  creating $alu model for $macc $flatten\u_conv2d.$verific$sub_699$conv2d.v:805$3035.
  creating $alu model for $macc $flatten\u_conv2d.$verific$sub_697$conv2d.v:804$3033.
  creating $alu model for $macc $flatten\u_conv2d.$verific$sub_464$conv2d.v:687$2900.
  creating $alu model for $macc $flatten\u_conv2d.$verific$sub_439$conv2d.v:672$2881.
  creating $alu model for $macc $flatten\u_conv2d.$verific$add_929$conv2d.v:1041$4203.
  creating $alu model for $macc $flatten\u_conv2d.$verific$add_917$conv2d.v:1025$4193.
  creating $alu model for $macc $flatten\u_conv2d.$verific$add_915$conv2d.v:1024$4191.
  creating $alu model for $macc $flatten\u_conv2d.$verific$add_913$conv2d.v:1023$4189.
  creating $alu model for $macc $flatten\u_conv2d.$verific$add_911$conv2d.v:1022$4187.
  creating $alu model for $macc $flatten\u_conv2d.$verific$add_909$conv2d.v:1021$4185.
  creating $alu model for $macc $flatten\u_conv2d.$verific$add_907$conv2d.v:1020$4183.
  creating $alu model for $macc $flatten\u_conv2d.$verific$add_905$conv2d.v:1019$4181.
  creating $alu model for $macc $flatten\u_conv2d.$verific$add_903$conv2d.v:1018$4179.
  creating $alu model for $macc $flatten\u_conv2d.$verific$add_764$conv2d.v:874$3064.
  creating $alu model for $macc $flatten\u_conv2d.$verific$add_753$conv2d.v:869$3058.
  creating $alu model for $macc $flatten\u_conv2d.$verific$add_750$conv2d.v:867$3056.
  creating $alu model for $macc $flatten\u_conv2d.$verific$add_724$conv2d.v:842$3045.
  creating $alu model for $macc $flatten\u_conv2d.$verific$add_468$conv2d.v:689$2905.
  creating $alu model for $macc $flatten\u_conv2d.$verific$add_466$conv2d.v:688$2903.
  creating $alu model for $macc $flatten\u_conv2d.$verific$add_460$conv2d.v:685$2897.
  creating $alu model for $macc $flatten\u_conv2d.$verific$add_454$conv2d.v:681$2891.
  creating $alu model for $macc $flatten\u_conv2d.$verific$add_436$conv2d.v:669$2879.
  creating $alu model for $macc $flatten\u_conv2d.$verific$add_387$conv2d.v:638$2841.
  creating $alu model for $macc $flatten\u_conv2d.$verific$add_381$conv2d.v:630$2837.
  creating $alu model for $macc $flatten\u_conv2d.$verific$add_354$conv2d.v:606$2823.
  creating $alu model for $macc $flatten\u_conv2d.$verific$add_291$conv2d.v:540$2788.
  creating $alu model for $macc $flatten\u_conv2d.$verific$add_202$conv2d.v:418$2738.
  creating $alu model for $macc $flatten\u_conv2d.$verific$add_190$conv2d.v:409$2729.
  creating $alu model for $macc $flatten\u_conv2d.$verific$add_1110$conv2d.v:1199$4296.
  creating $alu model for $macc $flatten\u_conv2d.$verific$add_1091$conv2d.v:1181$4290.
  creating $alu model for $macc $flatten\u_conv2d.$verific$add_1066$conv2d.v:1156$4274.
  creating $alu model for $macc $flatten\u_conv2d.$verific$add_1063$conv2d.v:1153$4272.
  creating $alu model for $macc $flatten\u_conv2d.$verific$add_1018$conv2d.v:1119$4253.
  creating $alu model for $flatten\u_conv2d.$verific$LessThan_471$conv2d.v:690$2907 ($lt): new $alu
  creating $alu model for $flatten\u_conv2d.$verific$LessThan_472$conv2d.v:691$2908 ($le): new $alu
  creating $alu model for $flatten\u_conv2d.$verific$LessThan_924$conv2d.v:1033$4199 ($lt): new $alu
  creating $alu cell for $flatten\u_conv2d.$verific$LessThan_924$conv2d.v:1033$4199: $auto$alumacc.cc:485:replace_alu$6740
  creating $alu cell for $flatten\u_conv2d.$verific$LessThan_472$conv2d.v:691$2908: $auto$alumacc.cc:485:replace_alu$6751
  creating $alu cell for $flatten\u_conv2d.$verific$LessThan_471$conv2d.v:690$2907: $auto$alumacc.cc:485:replace_alu$6760
  creating $alu cell for $flatten\u_conv2d.$verific$add_1018$conv2d.v:1119$4253: $auto$alumacc.cc:485:replace_alu$6771
  creating $alu cell for $flatten\u_conv2d.$verific$add_1063$conv2d.v:1153$4272: $auto$alumacc.cc:485:replace_alu$6774
  creating $alu cell for $flatten\u_conv2d.$verific$add_1066$conv2d.v:1156$4274: $auto$alumacc.cc:485:replace_alu$6777
  creating $alu cell for $flatten\u_conv2d.$verific$add_1091$conv2d.v:1181$4290: $auto$alumacc.cc:485:replace_alu$6780
  creating $alu cell for $flatten\u_conv2d.$verific$add_1110$conv2d.v:1199$4296: $auto$alumacc.cc:485:replace_alu$6783
  creating $alu cell for $flatten\u_conv2d.$verific$add_190$conv2d.v:409$2729: $auto$alumacc.cc:485:replace_alu$6786
  creating $alu cell for $flatten\u_conv2d.$verific$add_202$conv2d.v:418$2738: $auto$alumacc.cc:485:replace_alu$6789
  creating $alu cell for $flatten\u_conv2d.$verific$add_291$conv2d.v:540$2788: $auto$alumacc.cc:485:replace_alu$6792
  creating $alu cell for $flatten\u_conv2d.$verific$add_354$conv2d.v:606$2823: $auto$alumacc.cc:485:replace_alu$6795
  creating $alu cell for $flatten\u_conv2d.$verific$add_381$conv2d.v:630$2837: $auto$alumacc.cc:485:replace_alu$6798
  creating $alu cell for $flatten\u_conv2d.$verific$add_387$conv2d.v:638$2841: $auto$alumacc.cc:485:replace_alu$6801
  creating $alu cell for $flatten\u_conv2d.$verific$add_436$conv2d.v:669$2879: $auto$alumacc.cc:485:replace_alu$6804
  creating $alu cell for $flatten\u_conv2d.$verific$add_454$conv2d.v:681$2891: $auto$alumacc.cc:485:replace_alu$6807
  creating $alu cell for $flatten\u_conv2d.$verific$add_460$conv2d.v:685$2897: $auto$alumacc.cc:485:replace_alu$6810
  creating $alu cell for $flatten\u_conv2d.$verific$add_466$conv2d.v:688$2903: $auto$alumacc.cc:485:replace_alu$6813
  creating $alu cell for $flatten\u_conv2d.$verific$add_468$conv2d.v:689$2905: $auto$alumacc.cc:485:replace_alu$6816
  creating $alu cell for $flatten\u_conv2d.$verific$add_724$conv2d.v:842$3045: $auto$alumacc.cc:485:replace_alu$6819
  creating $alu cell for $flatten\u_conv2d.$verific$add_750$conv2d.v:867$3056: $auto$alumacc.cc:485:replace_alu$6822
  creating $alu cell for $flatten\u_conv2d.$verific$add_753$conv2d.v:869$3058: $auto$alumacc.cc:485:replace_alu$6825
  creating $alu cell for $flatten\u_conv2d.$verific$add_764$conv2d.v:874$3064: $auto$alumacc.cc:485:replace_alu$6828
  creating $alu cell for $flatten\u_conv2d.$verific$add_903$conv2d.v:1018$4179: $auto$alumacc.cc:485:replace_alu$6831
  creating $alu cell for $flatten\u_conv2d.$verific$add_905$conv2d.v:1019$4181: $auto$alumacc.cc:485:replace_alu$6834
  creating $alu cell for $flatten\u_conv2d.$verific$add_907$conv2d.v:1020$4183: $auto$alumacc.cc:485:replace_alu$6837
  creating $alu cell for $flatten\u_conv2d.$verific$add_909$conv2d.v:1021$4185: $auto$alumacc.cc:485:replace_alu$6840
  creating $alu cell for $flatten\u_conv2d.$verific$add_911$conv2d.v:1022$4187: $auto$alumacc.cc:485:replace_alu$6843
  creating $alu cell for $flatten\u_conv2d.$verific$add_913$conv2d.v:1023$4189: $auto$alumacc.cc:485:replace_alu$6846
  creating $alu cell for $flatten\u_conv2d.$verific$add_915$conv2d.v:1024$4191: $auto$alumacc.cc:485:replace_alu$6849
  creating $alu cell for $flatten\u_conv2d.$verific$add_917$conv2d.v:1025$4193: $auto$alumacc.cc:485:replace_alu$6852
  creating $alu cell for $flatten\u_conv2d.$verific$add_929$conv2d.v:1041$4203: $auto$alumacc.cc:485:replace_alu$6855
  creating $alu cell for $flatten\u_conv2d.$verific$sub_439$conv2d.v:672$2881: $auto$alumacc.cc:485:replace_alu$6858
  creating $alu cell for $flatten\u_conv2d.$verific$sub_464$conv2d.v:687$2900: $auto$alumacc.cc:485:replace_alu$6861
  creating $alu cell for $flatten\u_conv2d.$verific$sub_697$conv2d.v:804$3033: $auto$alumacc.cc:485:replace_alu$6864
  creating $alu cell for $flatten\u_conv2d.$verific$sub_699$conv2d.v:805$3035: $auto$alumacc.cc:485:replace_alu$6867
  creating $alu cell for $flatten\u_conv2d.$verific$sub_701$conv2d.v:806$3037: $auto$alumacc.cc:485:replace_alu$6870
  creating $alu cell for $flatten\u_conv2d.$verific$sub_703$conv2d.v:807$3039: $auto$alumacc.cc:485:replace_alu$6873
  creating $alu cell for $flatten\u_conv2d.\k0.$verific$add_3$adder.v:8$4416: $auto$alumacc.cc:485:replace_alu$6876
  creating $alu cell for $flatten\u_conv2d.\k1.$verific$add_3$adder.v:8$4416: $auto$alumacc.cc:485:replace_alu$6879
  creating $alu cell for $flatten\u_conv2d.\k16_0.$verific$add_3$adder.v:8$4422: $auto$alumacc.cc:485:replace_alu$6882
  creating $alu cell for $flatten\u_conv2d.\k16_1.$verific$add_3$adder.v:8$4422: $auto$alumacc.cc:485:replace_alu$6885
  creating $alu cell for $flatten\u_conv2d.\k16_2.$verific$add_3$adder.v:8$4422: $auto$alumacc.cc:485:replace_alu$6888
  creating $alu cell for $flatten\u_conv2d.\k16_3.$verific$add_3$adder.v:8$4422: $auto$alumacc.cc:485:replace_alu$6891
  creating $alu cell for $flatten\u_conv2d.\k16_4.$verific$add_3$adder.v:8$4422: $auto$alumacc.cc:485:replace_alu$6894
  creating $alu cell for $flatten\u_conv2d.\k16_5.$verific$add_3$adder.v:8$4422: $auto$alumacc.cc:485:replace_alu$6897
  creating $alu cell for $flatten\u_conv2d.\k16_6.$verific$add_3$adder.v:8$4422: $auto$alumacc.cc:485:replace_alu$6900
  creating $alu cell for $flatten\u_conv2d.\k16_7.$verific$add_3$adder.v:8$4422: $auto$alumacc.cc:485:replace_alu$6903
  creating $alu cell for $flatten\u_conv2d.\k2.$verific$add_3$adder.v:8$4416: $auto$alumacc.cc:485:replace_alu$6906
  creating $alu cell for $flatten\u_conv2d.\k3.$verific$add_3$adder.v:8$4416: $auto$alumacc.cc:485:replace_alu$6909
  creating $alu cell for $flatten\u_conv2d.\k4.$verific$add_3$adder.v:8$4416: $auto$alumacc.cc:485:replace_alu$6912
  creating $alu cell for $flatten\u_conv2d.\k5.$verific$add_3$adder.v:8$4416: $auto$alumacc.cc:485:replace_alu$6915
  creating $alu cell for $flatten\u_conv2d.\k6.$verific$add_3$adder.v:8$4416: $auto$alumacc.cc:485:replace_alu$6918
  creating $alu cell for $flatten\u_conv2d.\k7.$verific$add_3$adder.v:8$4416: $auto$alumacc.cc:485:replace_alu$6921
  creating $alu cell for $flatten\u_conv2d.\pk1.$verific$add_3$adder.v:8$4428: $auto$alumacc.cc:485:replace_alu$6924
  creating $alu cell for $flatten\u_ctl.$verific$add_69$control.v:118$1593: $auto$alumacc.cc:485:replace_alu$6927
  creating $alu cell for $flatten\u_conv2d.\pk2.$verific$add_4$fadder.v:9$4436: $auto$alumacc.cc:485:replace_alu$6930
  creating $alu cell for $flatten\u_conv2d.\t2_1.$verific$add_3$adder.v:8$4410: $auto$alumacc.cc:485:replace_alu$6933
  creating $alu cell for $flatten\u_conv2d.\t2_2.$verific$add_3$adder.v:8$4410: $auto$alumacc.cc:485:replace_alu$6936
  creating $alu cell for $flatten\u_conv2d.\t2_3.$verific$add_3$adder.v:8$4410: $auto$alumacc.cc:485:replace_alu$6939
  creating $alu cell for $flatten\u_ctl.$verific$add_108$control.v:161$1611: $auto$alumacc.cc:485:replace_alu$6942
  created 61 $alu and 0 $macc cells.

19. Executing OPT pass (performing simple optimizations).

19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~21 debug messages>

19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~57 debug messages>
Removed a total of 19 cells.

19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~158 debug messages>

19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$6601: { $auto$rtlil.cc:2393:Or$6556 $flatten\u_ctl.$verific$n1311$1424 $flatten\u_ctl.$verific$n1312$1425 $flatten\u_ctl.$verific$n1313$1426 $flatten\u_ctl.$verific$n1314$1427 $flatten\u_ctl.$verific$n1315$1428 $flatten\u_ctl.$verific$n1316$1429 $flatten\u_ctl.$verific$n1317$1430 $flatten\u_ctl.$verific$n1318$1431 $flatten\u_ctl.$verific$n2420$1441 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$6167: { \u_conv2d.fsm_conv2d [11:7] \u_conv2d.fsm_conv2d [5:2] $flatten\u_conv2d.$verific$n11257$1925 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$6061: { \u_conv2d.fsm_conv2d [11] \u_conv2d.fsm_conv2d [9:7] \u_conv2d.fsm_conv2d [4:1] $flatten\u_conv2d.$verific$n11257$1925 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$6139: { \u_conv2d.fsm_conv2d [11:7] \u_conv2d.fsm_conv2d [5:1] $flatten\u_conv2d.$verific$n11257$1925 }
  Optimizing cells in module \top.
Performed a total of 4 changes.

19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~33 debug messages>
Removed a total of 11 cells.

19.6. Executing OPT_DFF pass (perform DFF optimizations).

19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1 unused cells and 34 unused wires.
<suppressed ~2 debug messages>

19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

19.9. Rerunning OPT passes. (Maybe there is more to do..)

19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~164 debug messages>

19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

19.13. Executing OPT_DFF pass (perform DFF optimizations).

19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

19.16. Finished OPT passes. (There is nothing left to do.)

20. Executing MEMORY pass.

20.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

20.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

20.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

20.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

20.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

20.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

20.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

20.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

20.9. Executing MEMORY_COLLECT pass (generating $mem cells).

21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~181 debug messages>

23. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping top.$auto$fsm_map.cc:121:implement_pattern_cache$4698 ($and).
Mapping top.$auto$fsm_map.cc:121:implement_pattern_cache$4702 ($and).
Mapping top.$auto$fsm_map.cc:121:implement_pattern_cache$4706 ($and).
Mapping top.$auto$fsm_map.cc:121:implement_pattern_cache$4710 ($and).
Mapping top.$auto$fsm_map.cc:121:implement_pattern_cache$4714 ($and).
Mapping top.$auto$fsm_map.cc:121:implement_pattern_cache$4723 ($and).
Mapping top.$auto$fsm_map.cc:121:implement_pattern_cache$4727 ($and).
Mapping top.$auto$fsm_map.cc:121:implement_pattern_cache$4732 ($and).
Mapping top.$auto$fsm_map.cc:121:implement_pattern_cache$4736 ($and).
Mapping top.$auto$fsm_map.cc:121:implement_pattern_cache$4741 ($and).
Mapping top.$auto$fsm_map.cc:121:implement_pattern_cache$4745 ($and).
Mapping top.$auto$fsm_map.cc:121:implement_pattern_cache$4749 ($and).
Mapping top.$auto$fsm_map.cc:121:implement_pattern_cache$4758 ($and).
Mapping top.$auto$fsm_map.cc:121:implement_pattern_cache$4762 ($and).
Mapping top.$auto$fsm_map.cc:121:implement_pattern_cache$4766 ($and).
Mapping top.$auto$fsm_map.cc:121:implement_pattern_cache$4771 ($and).
Mapping top.$auto$fsm_map.cc:121:implement_pattern_cache$4775 ($and).
Mapping top.$auto$fsm_map.cc:121:implement_pattern_cache$4780 ($and).
Mapping top.$auto$fsm_map.cc:121:implement_pattern_cache$4784 ($and).
Mapping top.$auto$fsm_map.cc:121:implement_pattern_cache$4788 ($and).
Mapping top.$auto$fsm_map.cc:121:implement_pattern_cache$4792 ($and).
Mapping top.$auto$fsm_map.cc:121:implement_pattern_cache$4797 ($and).
Mapping top.$auto$fsm_map.cc:121:implement_pattern_cache$4801 ($and).
Mapping top.$auto$fsm_map.cc:121:implement_pattern_cache$4810 ($and).
Mapping top.$auto$fsm_map.cc:121:implement_pattern_cache$4815 ($and).
Mapping top.$auto$fsm_map.cc:121:implement_pattern_cache$4819 ($and).
Mapping top.$auto$fsm_map.cc:144:implement_pattern_cache$4654 ($reduce_or).
Mapping top.$auto$fsm_map.cc:144:implement_pattern_cache$4663 ($reduce_or).
Mapping top.$auto$fsm_map.cc:144:implement_pattern_cache$4672 ($reduce_or).
Mapping top.$auto$fsm_map.cc:144:implement_pattern_cache$4681 ($reduce_or).
Mapping top.$auto$fsm_map.cc:144:implement_pattern_cache$4694 ($reduce_or).
Mapping top.$auto$fsm_map.cc:144:implement_pattern_cache$4715 ($reduce_or).
Mapping top.$auto$fsm_map.cc:144:implement_pattern_cache$4728 ($reduce_or).
Mapping top.$auto$fsm_map.cc:144:implement_pattern_cache$4737 ($reduce_or).
Mapping top.$auto$fsm_map.cc:144:implement_pattern_cache$4750 ($reduce_or).
Mapping top.$auto$fsm_map.cc:144:implement_pattern_cache$4767 ($reduce_or).
Mapping top.$auto$fsm_map.cc:144:implement_pattern_cache$4776 ($reduce_or).
Mapping top.$auto$fsm_map.cc:144:implement_pattern_cache$4793 ($reduce_or).
Mapping top.$auto$fsm_map.cc:144:implement_pattern_cache$4802 ($reduce_or).
Mapping top.$auto$fsm_map.cc:144:implement_pattern_cache$4811 ($reduce_or).
Mapping top.$auto$fsm_map.cc:172:map_fsm$4639 ($adff).
Mapping top.$auto$fsm_map.cc:172:map_fsm$4717 ($adff).
Mapping top.$auto$fsm_map.cc:172:map_fsm$4752 ($adff).
Mapping top.$auto$fsm_map.cc:172:map_fsm$4804 ($adff).
Mapping top.$auto$fsm_map.cc:77:implement_pattern_cache$4647 ($eq).
Mapping top.$auto$fsm_map.cc:77:implement_pattern_cache$4651 ($not).
Mapping top.$auto$fsm_map.cc:77:implement_pattern_cache$4665 ($eq).
Mapping top.$auto$fsm_map.cc:77:implement_pattern_cache$4669 ($not).
Mapping top.$auto$fsm_map.cc:77:implement_pattern_cache$4674 ($eq).
Mapping top.$auto$fsm_map.cc:77:implement_pattern_cache$4683 ($eq).
Mapping top.$auto$fsm_map.cc:77:implement_pattern_cache$4687 ($not).
Mapping top.$auto$fsm_map.cc:77:implement_pattern_cache$4691 ($not).
Mapping top.$auto$fsm_map.cc:77:implement_pattern_cache$4696 ($not).
Mapping top.$auto$fsm_map.cc:77:implement_pattern_cache$4700 ($eq).
Mapping top.$auto$fsm_map.cc:77:implement_pattern_cache$4704 ($eq).
Mapping top.$auto$fsm_map.cc:77:implement_pattern_cache$4708 ($eq).
Mapping top.$auto$fsm_map.cc:77:implement_pattern_cache$4712 ($eq).
Mapping top.$auto$fsm_map.cc:77:implement_pattern_cache$4730 ($eq).
Mapping top.$auto$fsm_map.cc:77:implement_pattern_cache$4734 ($not).
Mapping top.$auto$fsm_map.cc:77:implement_pattern_cache$4739 ($not).
Mapping top.$auto$fsm_map.cc:77:implement_pattern_cache$4743 ($eq).
Mapping top.$auto$fsm_map.cc:77:implement_pattern_cache$4756 ($not).
Mapping top.$auto$fsm_map.cc:77:implement_pattern_cache$4760 ($eq).
Mapping top.$auto$fsm_map.cc:77:implement_pattern_cache$4769 ($eq).
Mapping top.$auto$fsm_map.cc:77:implement_pattern_cache$4773 ($logic_not).
Mapping top.$auto$fsm_map.cc:77:implement_pattern_cache$4778 ($not).
Mapping top.$auto$fsm_map.cc:77:implement_pattern_cache$4782 ($eq).
Mapping top.$auto$fsm_map.cc:77:implement_pattern_cache$4790 ($not).
Mapping top.$auto$fsm_map.cc:77:implement_pattern_cache$4795 ($eq).
Mapping top.$auto$fsm_map.cc:77:implement_pattern_cache$4808 ($logic_not).
Mapping top.$auto$fsm_map.cc:77:implement_pattern_cache$4817 ($eq).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$4822 ($not).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$4824 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$4831 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$4838 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$4851 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$4858 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$4872 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$4882 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$4889 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$4896 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$4903 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$4908 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$4910 ($not).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$4917 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$4924 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$4929 ($not).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$4931 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$4933 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$4935 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$4937 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$4953 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$4959 ($not).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$4961 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$4963 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$4965 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$4967 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$4972 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$4974 ($not).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$4976 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$4981 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$4983 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$4985 ($not).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$4999 ($not).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5002 ($not).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5004 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5013 ($not).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5015 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5017 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5031 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5033 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5035 ($not).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5047 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5049 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5051 ($not).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5063 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5065 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5069 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5085 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5087 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5089 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5091 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5095 ($not).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5111 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5113 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5115 ($not).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5131 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5147 ($not).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5152 ($not).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5154 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5156 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5165 ($not).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5167 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5169 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5171 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5184 ($not).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5189 ($not).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5205 ($not).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5231 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5233 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5235 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5261 ($not).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5263 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5265 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5267 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5279 ($not).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5281 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5290 ($not).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5295 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5313 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5318 ($not).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5357 ($not).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5376 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5378 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5380 ($not).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5385 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5387 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5389 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5391 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5393 ($not).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5404 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5406 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5411 ($not).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5477 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5479 ($not).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5481 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5483 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5492 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5496 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5505 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5509 ($ne).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5516 ($not).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5518 ($not).
Mapping top.$auto$opt_dff.cc:195:make_patterns_logic$5520 ($not).
Mapping top.$auto$opt_dff.cc:220:make_patterns_logic$4826 ($reduce_and).
Mapping top.$auto$opt_dff.cc:220:make_patterns_logic$4833 ($reduce_and).
Mapping top.$auto$opt_dff.cc:220:make_patterns_logic$4840 ($reduce_and).
Mapping top.$auto$opt_dff.cc:220:make_patterns_logic$4843 ($reduce_and).
Mapping top.$auto$opt_dff.cc:220:make_patterns_logic$4853 ($reduce_and).
Mapping top.$auto$opt_dff.cc:220:make_patterns_logic$4860 ($reduce_and).
Mapping top.$auto$opt_dff.cc:220:make_patterns_logic$4874 ($reduce_and).
Mapping top.$auto$opt_dff.cc:220:make_patterns_logic$4877 ($reduce_and).
Mapping top.$auto$opt_dff.cc:220:make_patterns_logic$4884 ($reduce_and).
Mapping top.$auto$opt_dff.cc:220:make_patterns_logic$4891 ($reduce_and).
Mapping top.$auto$opt_dff.cc:220:make_patterns_logic$4898 ($reduce_and).
Mapping top.$auto$opt_dff.cc:220:make_patterns_logic$4905 ($reduce_and).
Mapping top.$auto$opt_dff.cc:220:make_patterns_logic$4912 ($reduce_and).
Mapping top.$auto$opt_dff.cc:220:make_patterns_logic$4919 ($reduce_and).
Mapping top.$auto$opt_dff.cc:220:make_patterns_logic$4926 ($reduce_and).
Mapping top.$auto$opt_dff.cc:220:make_patterns_logic$4939 ($reduce_and).
Mapping top.$auto$opt_dff.cc:220:make_patterns_logic$4948 ($reduce_and).
Mapping top.$auto$opt_dff.cc:220:make_patterns_logic$4955 ($reduce_and).
Mapping top.$auto$opt_dff.cc:220:make_patterns_logic$4969 ($reduce_and).
Mapping top.$auto$opt_dff.cc:220:make_patterns_logic$4978 ($reduce_and).
Mapping top.$auto$opt_dff.cc:220:make_patterns_logic$4987 ($reduce_and).
Mapping top.$auto$opt_dff.cc:220:make_patterns_logic$5010 ($reduce_and).
Mapping top.$auto$opt_dff.cc:220:make_patterns_logic$5019 ($reduce_and).
Mapping top.$auto$opt_dff.cc:220:make_patterns_logic$5037 ($reduce_and).
Mapping top.$auto$opt_dff.cc:220:make_patterns_logic$5044 ($reduce_and).
Mapping top.$auto$opt_dff.cc:220:make_patterns_logic$5053 ($reduce_and).
Mapping top.$auto$opt_dff.cc:220:make_patterns_logic$5060 ($reduce_and).
Mapping top.$auto$opt_dff.cc:220:make_patterns_logic$5071 ($reduce_and).
Mapping top.$auto$opt_dff.cc:220:make_patterns_logic$5097 ($reduce_and).
Mapping top.$auto$opt_dff.cc:220:make_patterns_logic$5108 ($reduce_and).
Mapping top.$auto$opt_dff.cc:220:make_patterns_logic$5117 ($reduce_and).
Mapping top.$auto$opt_dff.cc:220:make_patterns_logic$5135 ($reduce_and).
Mapping top.$auto$opt_dff.cc:220:make_patterns_logic$5142 ($reduce_and).
Mapping top.$auto$opt_dff.cc:220:make_patterns_logic$5149 ($reduce_and).
Mapping top.$auto$opt_dff.cc:220:make_patterns_logic$5162 ($reduce_and).
Mapping top.$auto$opt_dff.cc:220:make_patterns_logic$5173 ($reduce_and).
Mapping top.$auto$opt_dff.cc:220:make_patterns_logic$5186 ($reduce_and).
Mapping top.$auto$opt_dff.cc:220:make_patterns_logic$5198 ($reduce_and).
Mapping top.$auto$opt_dff.cc:220:make_patterns_logic$5207 ($reduce_and).
Mapping top.$auto$opt_dff.cc:220:make_patterns_logic$5237 ($reduce_and).
Mapping top.$auto$opt_dff.cc:220:make_patterns_logic$5271 ($reduce_and).
Mapping top.$auto$opt_dff.cc:220:make_patterns_logic$5285 ($reduce_and).
Mapping top.$auto$opt_dff.cc:220:make_patterns_logic$5292 ($reduce_and).
Mapping top.$auto$opt_dff.cc:220:make_patterns_logic$5315 ($reduce_and).
Mapping top.$auto$opt_dff.cc:220:make_patterns_logic$5324 ($reduce_and).
Mapping top.$auto$opt_dff.cc:220:make_patterns_logic$5335 ($reduce_and).
Mapping top.$auto$opt_dff.cc:220:make_patterns_logic$5371 ($reduce_and).
Mapping top.$auto$opt_dff.cc:220:make_patterns_logic$5382 ($reduce_and).
Mapping top.$auto$opt_dff.cc:220:make_patterns_logic$5397 ($reduce_and).
Mapping top.$auto$opt_dff.cc:220:make_patterns_logic$5408 ($reduce_and).
Mapping top.$auto$opt_dff.cc:220:make_patterns_logic$5421 ($reduce_and).
Mapping top.$auto$opt_dff.cc:220:make_patterns_logic$5434 ($reduce_and).
Mapping top.$auto$opt_dff.cc:220:make_patterns_logic$5470 ($reduce_and).
Mapping top.$auto$opt_dff.cc:220:make_patterns_logic$5485 ($reduce_and).
Mapping top.$auto$opt_dff.cc:220:make_patterns_logic$5500 ($reduce_and).
Mapping top.$auto$opt_dff.cc:220:make_patterns_logic$5513 ($reduce_and).
Mapping top.$auto$opt_dff.cc:220:make_patterns_logic$5522 ($reduce_and).
Mapping top.$auto$opt_dff.cc:220:make_patterns_logic$5529 ($reduce_and).
Mapping top.$auto$opt_reduce.cc:128:opt_pmux$4442 ($reduce_or).
Mapping top.$auto$opt_reduce.cc:128:opt_pmux$4448 ($reduce_or).
Mapping top.$auto$opt_reduce.cc:128:opt_pmux$4478 ($reduce_or).
Mapping top.$auto$opt_reduce.cc:128:opt_pmux$4480 ($reduce_or).
Mapping top.$auto$opt_reduce.cc:128:opt_pmux$4484 ($reduce_or).
Mapping top.$auto$opt_reduce.cc:128:opt_pmux$4490 ($reduce_or).
Mapping top.$auto$opt_reduce.cc:128:opt_pmux$4492 ($reduce_or).
Mapping top.$auto$opt_reduce.cc:128:opt_pmux$4494 ($reduce_or).
Mapping top.$auto$opt_reduce.cc:128:opt_pmux$4496 ($reduce_or).
Mapping top.$auto$opt_reduce.cc:128:opt_pmux$4498 ($reduce_or).
Mapping top.$auto$opt_reduce.cc:128:opt_pmux$4500 ($reduce_or).
Mapping top.$auto$opt_reduce.cc:128:opt_pmux$4504 ($reduce_or).
Mapping top.$auto$opt_reduce.cc:128:opt_pmux$4506 ($reduce_or).
Mapping top.$auto$opt_reduce.cc:128:opt_pmux$4508 ($reduce_or).
Mapping top.$auto$opt_reduce.cc:128:opt_pmux$4510 ($reduce_or).
Mapping top.$auto$opt_reduce.cc:128:opt_pmux$4514 ($reduce_or).
Mapping top.$auto$opt_reduce.cc:128:opt_pmux$4516 ($reduce_or).
Mapping top.$auto$opt_reduce.cc:128:opt_pmux$4518 ($reduce_or).
Mapping top.$auto$opt_reduce.cc:128:opt_pmux$4520 ($reduce_or).
Mapping top.$auto$opt_reduce.cc:128:opt_pmux$4522 ($reduce_or).
Mapping top.$auto$opt_reduce.cc:128:opt_pmux$4524 ($reduce_or).
Mapping top.$auto$opt_reduce.cc:128:opt_pmux$4526 ($reduce_or).
Mapping top.$auto$opt_reduce.cc:128:opt_pmux$4530 ($reduce_or).
Mapping top.$auto$opt_reduce.cc:128:opt_pmux$4532 ($reduce_or).
Mapping top.$auto$opt_reduce.cc:128:opt_pmux$4534 ($reduce_or).
Mapping top.$auto$opt_reduce.cc:128:opt_pmux$4538 ($reduce_or).
Mapping top.$auto$opt_reduce.cc:128:opt_pmux$4540 ($reduce_or).
Mapping top.$auto$opt_reduce.cc:128:opt_pmux$4542 ($reduce_or).
Mapping top.$auto$opt_reduce.cc:128:opt_pmux$4544 ($reduce_or).
Mapping top.$auto$opt_reduce.cc:128:opt_pmux$4546 ($reduce_or).
Mapping top.$auto$opt_reduce.cc:128:opt_pmux$4548 ($reduce_or).
Mapping top.$auto$opt_reduce.cc:128:opt_pmux$4550 ($reduce_or).
Mapping top.$auto$opt_reduce.cc:128:opt_pmux$4552 ($reduce_or).
Mapping top.$auto$opt_reduce.cc:128:opt_pmux$4554 ($reduce_or).
Mapping top.$auto$opt_reduce.cc:128:opt_pmux$4556 ($reduce_or).
Mapping top.$auto$opt_reduce.cc:128:opt_pmux$4558 ($reduce_or).
Mapping top.$auto$opt_reduce.cc:128:opt_pmux$4560 ($reduce_or).
Mapping top.$auto$opt_reduce.cc:128:opt_pmux$4564 ($reduce_or).
Mapping top.$auto$opt_reduce.cc:128:opt_pmux$4568 ($reduce_or).
Mapping top.$auto$opt_reduce.cc:128:opt_pmux$4570 ($reduce_or).
Mapping top.$auto$opt_reduce.cc:128:opt_pmux$4572 ($reduce_or).
Mapping top.$auto$opt_reduce.cc:128:opt_pmux$4594 ($reduce_or).
Mapping top.$auto$opt_reduce.cc:128:opt_pmux$4600 ($reduce_or).
Mapping top.$auto$opt_reduce.cc:128:opt_pmux$4602 ($reduce_or).
Mapping top.$auto$pmuxtree.cc:35:or_generator$5709 ($or).
Mapping top.$auto$pmuxtree.cc:35:or_generator$5729 ($or).
Mapping top.$auto$pmuxtree.cc:35:or_generator$5757 ($or).
Mapping top.$auto$pmuxtree.cc:35:or_generator$5777 ($or).
Mapping top.$auto$pmuxtree.cc:35:or_generator$5791 ($or).
Mapping top.$auto$pmuxtree.cc:35:or_generator$5803 ($or).
Mapping top.$auto$pmuxtree.cc:35:or_generator$5829 ($or).
Mapping top.$auto$pmuxtree.cc:35:or_generator$5855 ($or).
Mapping top.$auto$pmuxtree.cc:35:or_generator$5885 ($or).
Mapping top.$auto$pmuxtree.cc:35:or_generator$5915 ($or).
Mapping top.$auto$pmuxtree.cc:35:or_generator$5933 ($or).
Mapping top.$auto$pmuxtree.cc:35:or_generator$5947 ($or).
Mapping top.$auto$pmuxtree.cc:35:or_generator$6081 ($or).
Mapping top.$auto$pmuxtree.cc:35:or_generator$6093 ($or).
Mapping top.$auto$pmuxtree.cc:35:or_generator$6115 ($or).
Mapping top.$auto$pmuxtree.cc:35:or_generator$6151 ($or).
Mapping top.$auto$pmuxtree.cc:35:or_generator$6187 ($or).
Mapping top.$auto$pmuxtree.cc:35:or_generator$6201 ($or).
Mapping top.$auto$pmuxtree.cc:35:or_generator$6251 ($or).
Mapping top.$auto$pmuxtree.cc:35:or_generator$6279 ($or).
Mapping top.$auto$pmuxtree.cc:35:or_generator$6323 ($or).
Mapping top.$auto$pmuxtree.cc:35:or_generator$6337 ($or).
Mapping top.$auto$pmuxtree.cc:35:or_generator$6385 ($or).
Mapping top.$auto$pmuxtree.cc:35:or_generator$6397 ($or).
Mapping top.$auto$pmuxtree.cc:35:or_generator$6425 ($or).
Mapping top.$auto$pmuxtree.cc:35:or_generator$6517 ($or).
Mapping top.$auto$pmuxtree.cc:35:or_generator$6555 ($or).
Mapping top.$auto$pmuxtree.cc:35:or_generator$6581 ($or).
Mapping top.$auto$pmuxtree.cc:35:or_generator$6701 ($or).
Mapping top.$auto$pmuxtree.cc:37:or_generator$5919 ($reduce_or).
Mapping top.$auto$pmuxtree.cc:37:or_generator$6061 ($reduce_or).
Mapping top.$auto$pmuxtree.cc:37:or_generator$6139 ($reduce_or).
Mapping top.$auto$pmuxtree.cc:37:or_generator$6167 ($reduce_or).
Mapping top.$auto$pmuxtree.cc:37:or_generator$6571 ($reduce_or).
Mapping top.$auto$pmuxtree.cc:37:or_generator$6593 ($reduce_or).
Mapping top.$auto$pmuxtree.cc:37:or_generator$6597 ($reduce_or).
Mapping top.$auto$pmuxtree.cc:37:or_generator$6601 ($reduce_or).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$5705 ($mux).
Mapping top.$auto$ff.cc:262:slice$5637 ($adffe).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$5711 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$5717 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$5719 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$5725 ($mux).
Mapping top.$auto$ff.cc:262:slice$5599 ($adffe).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$5731 ($mux).
Mapping top.$auto$ff.cc:262:slice$5127 ($aldffe).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$5739 ($mux).
Mapping top.$auto$ff.cc:262:slice$5272 ($adffe).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$5747 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$5753 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$5759 ($mux).
Mapping top.$auto$ff.cc:262:slice$5187 ($adffe).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$5767 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$5773 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$5779 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$5785 ($mux).
Mapping top.$auto$ff.cc:262:slice$5054 ($aldffe).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$5789 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$5793 ($mux).
Mapping top.$auto$ff.cc:262:slice$5029 ($adffe).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$5801 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$5805 ($mux).
Mapping top.$auto$ff.cc:262:slice$5000 ($adffe).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$5817 ($mux).
Mapping top.$auto$ff.cc:262:slice$4906 ($adffe).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$5825 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$5827 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$5831 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$5841 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$5845 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$5851 ($mux).
Mapping top.$auto$ff.cc:262:slice$4927 ($adffe).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$5857 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$5863 ($mux).
Mapping top.$auto$ff.cc:262:slice$5671 ($adff).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$5871 ($mux).
Mapping top.$auto$fsm_map.cc:121:implement_pattern_cache$4693 ($and).
Mapping top.$auto$ff.cc:262:slice$4920 ($adffe).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$5881 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$5883 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$5887 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$5897 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$5901 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$5907 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$5909 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$5911 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$5913 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$5917 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$5921 ($mux).
Mapping top.$auto$ff.cc:262:slice$5020 ($adffe).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$5929 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$5931 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$5935 ($mux).
Mapping top.$auto$ff.cc:262:slice$5045 ($aldffe).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$5943 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$5945 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$5949 ($mux).
Mapping top.$auto$ff.cc:262:slice$5098 ($aldffe).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$5957 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$5959 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$5963 ($mux).
Mapping top.$auto$ff.cc:262:slice$5163 ($adffe).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$5971 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$5973 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$5977 ($mux).
Mapping top.$auto$ff.cc:262:slice$5275 ($adffe).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$5985 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$5987 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$5991 ($mux).
Mapping top.$auto$ff.cc:262:slice$5501 ($adffe).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$5999 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6001 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6005 ($mux).
Mapping top.$auto$ff.cc:262:slice$5625 ($adffe).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6013 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6015 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6019 ($mux).
Mapping top.$auto$ff.cc:262:slice$5667 ($adffe).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6027 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6029 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6033 ($mux).
Mapping top.$auto$ff.cc:262:slice$5668 ($adff).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6041 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6043 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6047 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6053 ($mux).
Mapping top.$auto$ff.cc:262:slice$5471 ($adffe).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6057 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6059 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6063 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6069 ($mux).
Mapping top.$auto$ff.cc:262:slice$5136 ($aldffe).
Mapping top.$auto$ff.cc:262:slice$5180 ($adffe).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6079 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6083 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6089 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6091 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6095 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6101 ($mux).
Mapping top.$auto$ff.cc:262:slice$5552 ($adffe).
Mapping top.$auto$ff.cc:262:slice$5587 ($adffe).
Mapping top.$auto$ff.cc:262:slice$5590 ($adffe).
Mapping top.$auto$ff.cc:262:slice$5674 ($adff).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6117 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6123 ($mux).
Mapping top.$auto$fsm_map.cc:121:implement_pattern_cache$4685 ($and).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6131 ($mux).
Mapping top.$auto$fsm_map.cc:121:implement_pattern_cache$4662 ($and).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6135 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6137 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6141 ($mux).
Mapping top.$auto$fsm_map.cc:121:implement_pattern_cache$4649 ($and).
Mapping top.$auto$fsm_map.cc:121:implement_pattern_cache$4671 ($and).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6153 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6159 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6163 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6165 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6169 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6175 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6177 ($mux).
Mapping top.$auto$ff.cc:262:slice$5523 ($adffe).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6185 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6189 ($mux).
Mapping top.$auto$ff.cc:262:slice$5422 ($adffe).
Mapping top.$auto$ff.cc:262:slice$5355 ($adffe).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6199 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6203 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6209 ($mux).
Mapping top.$auto$ff.cc:262:slice$5150 ($adffe).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6219 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6221 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6225 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6231 ($mux).
Mapping top.$auto$ff.cc:262:slice$4875 ($adffe).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6235 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6237 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6241 ($mux).
Mapping top.$auto$ff.cc:262:slice$4854 ($adffe).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6249 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6253 ($mux).
Mapping top.$auto$ff.cc:262:slice$4834 ($adffe).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6261 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6263 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6267 ($mux).
Mapping top.$auto$ff.cc:262:slice$4820 ($adffe).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6275 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6277 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6281 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6287 ($mux).
Mapping top.$auto$alumacc.cc:89:get_cf$6743 ($not).
Mapping top.$auto$alumacc.cc:75:get_eq$6745 ($reduce_and).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6293 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6297 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6303 ($mux).
Mapping top.$auto$alumacc.cc:68:get_gt$6749 ($not).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6307 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6309 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6313 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6321 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6325 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6331 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6333 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6335 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6339 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6345 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6347 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6359 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6365 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6373 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6375 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6383 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6387 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6395 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6399 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6405 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6413 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6423 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6427 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6433 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6435 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6441 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6449 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6457 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6465 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6473 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6481 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6489 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6497 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6505 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6515 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6519 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6525 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6533 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6541 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6551 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6553 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6557 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6559 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6561 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6563 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6565 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6569 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6573 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6575 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6577 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6579 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6583 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6585 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6587 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6589 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6591 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6595 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6599 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6603 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6609 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6617 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6619 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6625 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6633 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6641 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6649 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6657 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6665 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6673 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6681 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6689 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6699 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6703 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6709 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6717 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6725 ($mux).
Mapping top.$auto$pmuxtree.cc:65:recursive_mux_generator$6733 ($mux).
Mapping top.$flatten\u_conv2d.$verific$Mux_269$conv2d.v:523$2773 ($bmux).
Mapping top.$flatten\u_conv2d.$verific$Mux_351$conv2d.v:601$2821 ($bmux).
Mapping top.$flatten\u_conv2d.$verific$Select_638$conv2d.v:784$2975 ($mux).
Mapping top.$flatten\u_conv2d.$verific$Select_640$conv2d.v:784$2976 ($mux).
Mapping top.$flatten\u_conv2d.$verific$add_stride_reg$conv2d.v:785$2985 ($adff).
Mapping top.$flatten\u_conv2d.$verific$bias0_reg$conv2d.v:785$2989 ($adff).
Mapping top.$flatten\u_conv2d.$verific$bias1_reg$conv2d.v:785$2990 ($adff).
Mapping top.$flatten\u_conv2d.$verific$bias2_reg$conv2d.v:785$2991 ($adff).
Mapping top.$flatten\u_conv2d.$verific$bias3_reg$conv2d.v:785$2992 ($adff).
Mapping top.$flatten\u_conv2d.$verific$bias4_reg$conv2d.v:785$2993 ($adff).
Mapping top.$flatten\u_conv2d.$verific$bias5_reg$conv2d.v:785$2994 ($adff).
Mapping top.$flatten\u_conv2d.$verific$bias6_reg$conv2d.v:785$2995 ($adff).
Mapping top.$flatten\u_conv2d.$verific$bias7_reg$conv2d.v:785$2996 ($adff).
Mapping top.$flatten\u_conv2d.$verific$copy_acc_reg$conv2d.v:1246$4390 ($adff).
Mapping top.$flatten\u_conv2d.$verific$equal_1002$conv2d.v:1107$4245 ($eq).
Mapping top.$flatten\u_conv2d.$verific$equal_1060$conv2d.v:1149$4269 ($eq).
Mapping top.$flatten\u_conv2d.$verific$equal_1065$conv2d.v:1155$4273 ($eq).
Mapping top.$flatten\u_conv2d.$verific$equal_1069$conv2d.v:1157$4276 ($eq).
Mapping top.$flatten\u_conv2d.$verific$equal_1070$conv2d.v:1157$4277 ($eq).
Mapping top.$flatten\u_conv2d.$verific$equal_1094$conv2d.v:1182$4292 ($eq).
Mapping top.$flatten\u_conv2d.$verific$equal_1109$conv2d.v:1198$4295 ($eq).
Mapping top.$flatten\u_conv2d.$verific$equal_383$conv2d.v:632$2839 ($eq).
Mapping top.$flatten\u_conv2d.$verific$equal_463$conv2d.v:686$2899 ($eq).
Mapping top.$flatten\u_conv2d.$verific$equal_609$conv2d.v:776$2947 ($eq).
Mapping top.$flatten\u_conv2d.$verific$equal_622$conv2d.v:654$2957 ($logic_not).
Mapping top.$flatten\u_conv2d.$verific$equal_623$conv2d.v:667$2958 ($eq).
Mapping top.$flatten\u_conv2d.$verific$equal_624$conv2d.v:715$2959 ($eq).
Mapping top.$flatten\u_conv2d.$verific$equal_625$conv2d.v:763$2960 ($eq).
Mapping top.$flatten\u_conv2d.$verific$equal_66$conv2d.v:120$2489 ($logic_not).
Mapping top.$flatten\u_conv2d.$verific$equal_67$conv2d.v:121$2490 ($eq).
Mapping top.$flatten\u_conv2d.$verific$equal_68$conv2d.v:122$2491 ($eq).
Mapping top.$flatten\u_conv2d.$verific$equal_69$conv2d.v:123$2492 ($eq).
Mapping top.$flatten\u_conv2d.$verific$equal_756$conv2d.v:870$3060 ($eq).
Mapping top.$flatten\u_conv2d.$verific$equal_768$conv2d.v:876$3066 ($eq).
Mapping top.$flatten\u_conv2d.$verific$equal_923$conv2d.v:1032$4198 ($eq).
Mapping top.$flatten\u_conv2d.$verific$equal_927$conv2d.v:1039$4202 ($eq).
Mapping top.$flatten\u_conv2d.$verific$equal_930$conv2d.v:1041$4204 ($eq).
Mapping top.$flatten\u_conv2d.$verific$fsm_loadacc_reg$conv2d.v:785$2988 ($adff).
Mapping top.$flatten\u_conv2d.$verific$fsm_writechannels_reg$conv2d.v:785$3022 ($adff).
Mapping top.$auto$ff.cc:262:slice$5118 ($adffe).
Mapping top.$flatten\u_conv2d.$verific$i1004$conv2d.v:1107$4246 ($not).
Mapping top.$flatten\u_conv2d.$verific$i1005$conv2d.v:1107$4247 ($and).
Mapping top.$auto$ff.cc:262:slice$5628 ($adffe).
Mapping top.$auto$ff.cc:262:slice$5190 ($adffe).
Mapping top.$flatten\u_conv2d.$verific$i1014$conv2d.v:1113$4251 ($mux).
Mapping top.$flatten\u_conv2d.$verific$i1024$conv2d.v:1124$4257 ($mux).
Mapping top.$auto$ff.cc:262:slice$5199 ($adffe).
Mapping top.$flatten\u_conv2d.$verific$i1027$conv2d.v:1124$4260 ($mux).
Mapping top.$auto$ff.cc:262:slice$5061 ($adffe).
Mapping top.$flatten\u_conv2d.$verific$i1033$conv2d.v:1124$4265 ($mux).
Mapping top.$flatten\u_conv2d.$verific$i1072$conv2d.v:1157$4278 ($or).
Mapping top.$auto$ff.cc:262:slice$5227 ($adffe).
Mapping top.$auto$ff.cc:262:slice$5259 ($adffe).
Mapping top.$auto$ff.cc:262:slice$5083 ($aldffe).
Mapping top.$auto$ff.cc:262:slice$5072 ($adffe).
Mapping top.$auto$ff.cc:262:slice$5109 ($adffe).
Mapping top.$flatten\u_conv2d.$verific$i116$conv2d.v:309$2697 ($or).
Mapping top.$flatten\u_conv2d.$verific$i1188$conv2d.v:1245$4350 ($or).
Mapping top.$auto$fsm_map.cc:121:implement_pattern_cache$4676 ($and).
Mapping top.$flatten\u_conv2d.$verific$i1197$conv2d.v:1245$4358 ($or).
Mapping top.$flatten\u_conv2d.$verific$i1209$conv2d.v:1245$4367 ($mux).
Mapping top.$auto$fsm_map.cc:121:implement_pattern_cache$4680 ($and).
Mapping top.$flatten\u_conv2d.$verific$i179$conv2d.v:391$2723 ($not).
Mapping top.$flatten\u_conv2d.$verific$i180$conv2d.v:391$2724 ($and).
Mapping top.$flatten\u_conv2d.$verific$i184$conv2d.v:396$2726 ($mux).
Mapping top.$flatten\u_conv2d.$verific$i198$conv2d.v:415$2733 ($mux).
Mapping top.$flatten\u_conv2d.$verific$i1_t2_waddr_reg$conv2d.v:785$2980 ($adff).
Mapping top.$flatten\u_conv2d.$verific$i201$conv2d.v:415$2736 ($mux).
Mapping top.$flatten\u_conv2d.$verific$i2_t2_waddr_reg$conv2d.v:785$2981 ($adff).
Mapping top.$flatten\u_conv2d.$verific$i310$conv2d.v:563$2799 ($mux).
Mapping top.$flatten\u_conv2d.$verific$i312$conv2d.v:566$2800 ($and).
Mapping top.$flatten\u_conv2d.$verific$i315$conv2d.v:569$2802 ($mux).
Mapping top.$flatten\u_conv2d.$verific$i324$conv2d.v:579$2805 ($mux).
Mapping top.$flatten\u_conv2d.$verific$i327$conv2d.v:580$2807 ($mux).
Mapping top.$auto$ff.cc:262:slice$4878 ($adffe).
Mapping top.$flatten\u_conv2d.$verific$i374$conv2d.v:623$2833 ($and).
Mapping top.$flatten\u_conv2d.$verific$i377$conv2d.v:626$2834 ($mux).
Mapping top.$auto$ff.cc:262:slice$4988 ($adffe).
Mapping top.$flatten\u_conv2d.$verific$i391$conv2d.v:639$2844 ($mux).
Mapping top.$flatten\u_conv2d.$verific$i392$conv2d.v:639$2845 ($mux).
Mapping top.$auto$ff.cc:262:slice$4997 ($adffe).
Mapping top.$flatten\u_conv2d.$verific$i398$conv2d.v:640$2851 ($mux).
Mapping top.$flatten\u_conv2d.$verific$i399$conv2d.v:640$2852 ($mux).
Mapping top.$flatten\u_conv2d.$verific$i3_t2_waddr_reg$conv2d.v:785$2982 ($adff).
Mapping top.$flatten\u_conv2d.$verific$i420$conv2d.v:648$2871 ($mux).
Mapping top.$flatten\u_conv2d.$verific$i448$conv2d.v:675$2887 ($and).
Mapping top.$auto$ff.cc:262:slice$4892 ($adffe).
Mapping top.$auto$ff.cc:262:slice$5038 ($adffe).
Mapping top.$flatten\u_conv2d.$verific$i457$conv2d.v:682$2893 ($not).
Mapping top.$flatten\u_conv2d.$verific$i460$conv2d.v:684$2896 ($xor).
Mapping top.$flatten\u_conv2d.$verific$i474$conv2d.v:691$2909 ($and).
Mapping top.$auto$ff.cc:262:slice$4885 ($adffe).
Mapping top.$auto$ff.cc:262:slice$4949 ($adffe).
Mapping top.$flatten\u_conv2d.$verific$i493$conv2d.v:707$2917 ($mux).
Mapping top.$auto$ff.cc:262:slice$4956 ($adff).
Mapping top.$flatten\u_conv2d.$verific$i504$conv2d.v:712$2925 ($mux).
Mapping top.$auto$ff.cc:262:slice$4970 ($adffe).
Mapping top.$flatten\u_conv2d.$verific$i510$conv2d.v:713$2930 ($mux).
Mapping top.$flatten\u_conv2d.$verific$i511$conv2d.v:713$2931 ($mux).
Mapping top.$flatten\u_conv2d.$verific$i516$conv2d.v:713$2935 ($mux).
Mapping top.$flatten\u_conv2d.$verific$i517$conv2d.v:713$2936 ($mux).
Mapping top.$auto$ff.cc:262:slice$4979 ($adffe).
Mapping top.$auto$ff.cc:262:slice$4940 ($adffe).
Mapping top.$flatten\u_conv2d.$verific$i602$conv2d.v:768$2944 ($not).
Mapping top.$flatten\u_conv2d.$verific$i603$conv2d.v:768$2945 ($and).
Mapping top.$auto$ff.cc:262:slice$4899 ($adffe).
Mapping top.$flatten\u_conv2d.$verific$i643$conv2d.v:784$2978 ($or).
Mapping top.$flatten\u_conv2d.$verific$i71$conv2d.v:124$2493 ($not).
Mapping top.$flatten\u_conv2d.$verific$i73$conv2d.v:143$2497 ($not).
Mapping top.$flatten\u_conv2d.$verific$i744$conv2d.v:861$3052 ($and).
Mapping top.$flatten\u_conv2d.$verific$i747$conv2d.v:864$3053 ($mux).
Mapping top.$flatten\u_conv2d.$verific$i748$conv2d.v:864$3054 ($mux).
Mapping top.$flatten\u_conv2d.$verific$i762$conv2d.v:872$3062 ($not).
Mapping top.$flatten\u_conv2d.$verific$i774$conv2d.v:882$3068 ($mux).
Mapping top.$auto$ff.cc:262:slice$5669 ($adffe).
Mapping top.$flatten\u_conv2d.$verific$i783$conv2d.v:888$3075 ($mux).
Mapping top.$flatten\u_conv2d.$verific$i784$conv2d.v:888$3076 ($mux).
Mapping top.$auto$fsm_map.cc:121:implement_pattern_cache$4689 ($and).
Mapping top.$auto$ff.cc:262:slice$5670 ($adffe).
Mapping top.$flatten\u_conv2d.$verific$i794$conv2d.v:889$3086 ($mux).
Mapping top.$flatten\u_conv2d.$verific$i795$conv2d.v:889$3087 ($mux).
Mapping top.$flatten\u_conv2d.$verific$i805$conv2d.v:903$3091 ($mux).
Mapping top.$auto$ff.cc:262:slice$4913 ($adffe).
Mapping top.$flatten\u_conv2d.$verific$i833$conv2d.v:912$3112 ($or).
Mapping top.$flatten\u_conv2d.$verific$i838$conv2d.v:912$3116 ($mux).
Mapping top.$auto$ff.cc:262:slice$5644 ($adffe).
Mapping top.$flatten\u_conv2d.$verific$i945$conv2d.v:1057$4211 ($not).
Mapping top.$auto$ff.cc:262:slice$5647 ($adffe).
Mapping top.$flatten\u_conv2d.$verific$i954$conv2d.v:1059$4219 ($mux).
Mapping top.$auto$ff.cc:262:slice$5606 ($adffe).
Mapping top.$auto$ff.cc:262:slice$5656 ($adffe).
Mapping top.$flatten\u_conv2d.$verific$i962$conv2d.v:1060$4227 ($mux).
Mapping top.$auto$ff.cc:262:slice$5609 ($adffe).
Mapping top.$auto$ff.cc:262:slice$5663 ($adffe).
Mapping top.$flatten\u_conv2d.$verific$i970$conv2d.v:1061$4235 ($mux).
Mapping top.$auto$ff.cc:262:slice$5618 ($adffe).
Mapping top.$flatten\u_conv2d.$verific$i996$conv2d.v:1097$4240 ($and).
Mapping top.$flatten\u_conv2d.$verific$i_bias_wen_reg$conv2d.v:785$3011 ($adff).
Mapping top.$flatten\u_conv2d.$verific$i_filter1_wen_reg$conv2d.v:785$3015 ($adff).
Mapping top.$flatten\u_conv2d.$verific$i_filter2_wen_reg$conv2d.v:785$3016 ($adff).
Mapping top.$flatten\u_conv2d.$verific$i_pixel_wen_reg$conv2d.v:913$3124 ($adff).
Mapping top.$flatten\u_conv2d.$verific$i_sat_reg$conv2d.v:1246$4373 ($adff).
Mapping top.$flatten\u_conv2d.$verific$i_tcdm1_rdata_reg$conv2d.v:913$3130 ($adff).
Mapping top.$flatten\u_conv2d.$verific$i_tcdm2_rdata_reg$conv2d.v:785$3025 ($adff).
Mapping top.$flatten\u_conv2d.$verific$i_tcdm2_waddr_reg$conv2d.v:785$2998 ($aldff).
Mapping top.$flatten\u_conv2d.$verific$i_tcdm2_wdata_reg$conv2d.v:785$3000 ($adff).
Mapping top.$flatten\u_conv2d.$verific$i_tcdm2_wreq_reg$conv2d.v:785$3008 ($adff).
Mapping top.$flatten\u_conv2d.$verific$i_tcdm3_rdata_reg$conv2d.v:785$3026 ($adff).
Mapping top.$flatten\u_conv2d.$verific$inv_30$conv2d.v:96$2471 ($not).
Mapping top.$flatten\u_conv2d.$verific$inv_33$conv2d.v:97$2474 ($not).
Mapping top.$flatten\u_conv2d.$verific$inv_852$conv2d.v:961$4164 ($not).
Mapping top.$flatten\u_conv2d.$verific$last_start2d_reg$conv2d.v:785$3023 ($adff).
Mapping top.$flatten\u_conv2d.$verific$load_ext_acc_reg$conv2d.v:1246$4389 ($adff).
Mapping top.$flatten\u_conv2d.$verific$load_more_pixels_reg$conv2d.v:1246$4387 ($adff).
Mapping top.$auto$fsm_map.cc:121:implement_pattern_cache$4667 ($and).
Mapping top.$auto$ff.cc:262:slice$5672 ($adffe).
Mapping top.$auto$ff.cc:262:slice$5673 ($adff).
Mapping top.$auto$fsm_map.cc:121:implement_pattern_cache$4653 ($and).
Mapping top.$auto$ff.cc:262:slice$5486 ($adffe).
Mapping top.$flatten\u_conv2d.$verific$mux_1058$conv2d.v:1147$4268 ($bmux).
Mapping top.$auto$ff.cc:262:slice$5174 ($adffe).
Mapping top.$auto$ff.cc:262:slice$5444 ($adffe).
Mapping top.$auto$fsm_map.cc:121:implement_pattern_cache$4645 ($and).
Mapping top.$auto$ff.cc:262:slice$5462 ($adffe).
Mapping top.$flatten\u_conv2d.$verific$mux_11$conv2d.v:88$2452 ($mux).
Mapping top.$flatten\u_conv2d.$verific$mux_1112$conv2d.v:1200$4298 ($mux).
Mapping top.$auto$fsm_map.cc:121:implement_pattern_cache$4658 ($and).
Mapping top.$auto$ff.cc:262:slice$5011 ($adffe).
Mapping top.$flatten\u_conv2d.$verific$mux_118$conv2d.v:311$2700 ($mux).
Mapping top.$flatten\u_conv2d.$verific$mux_12$conv2d.v:88$2453 ($mux).
Mapping top.$flatten\u_conv2d.$verific$mux_1248$conv2d.v:139$2486 ($bmux).
Mapping top.$flatten\u_conv2d.$verific$mux_1251$conv2d.v:197$2505 ($bmux).
Mapping top.$flatten\u_conv2d.$verific$mux_1273$conv2d.v:713$4267 ($mux).
Mapping top.$auto$ff.cc:262:slice$4827 ($adffe).
Mapping top.$auto$alumacc.cc:67:get_gt$6747 ($or).
Mapping top.$flatten\u_conv2d.$verific$mux_1279$conv2d.v:543$2938 ($mux).
Mapping top.$flatten\u_conv2d.$verific$mux_1281$conv2d.v:599$2794 ($mux).
Mapping top.$auto$alumacc.cc:89:get_cf$6763 ($not).
Mapping top.$flatten\u_conv2d.$verific$mux_1288$conv2d.v:599$2892 ($mux).
Mapping top.$auto$ff.cc:262:slice$4861 ($adffe).
Mapping top.$auto$alumacc.cc:75:get_eq$6756 ($reduce_and).
Mapping top.$auto$ff.cc:262:slice$5580 ($adffe).
Mapping top.$flatten\u_conv2d.$verific$mux_1300$conv2d.v:586$4234 ($mux).
Mapping top.$flatten\u_conv2d.$verific$mux_1302$conv2d.v:871$2808 ($mux).
Mapping top.$flatten\u_conv2d.$verific$mux_1303$conv2d.v:909$3061 ($mux).
Mapping top.$flatten\u_conv2d.$verific$mux_15$conv2d.v:89$2456 ($mux).
Mapping top.$flatten\u_conv2d.$verific$mux_16$conv2d.v:89$2457 ($mux).
Mapping top.$flatten\u_conv2d.$verific$mux_181$conv2d.v:393$2725 ($mux).
Mapping top.$flatten\u_conv2d.$verific$mux_188$conv2d.v:405$2728 ($mux).
Mapping top.$flatten\u_conv2d.$verific$mux_19$conv2d.v:90$2460 ($mux).
Mapping top.$flatten\u_conv2d.$verific$mux_196$conv2d.v:415$2732 ($mux).
Mapping top.$flatten\u_conv2d.$verific$mux_198$conv2d.v:415$2734 ($mux).
Mapping top.$flatten\u_conv2d.$verific$mux_199$conv2d.v:415$2735 ($mux).
Mapping top.$flatten\u_conv2d.$verific$mux_20$conv2d.v:90$2461 ($mux).
Mapping top.$flatten\u_conv2d.$verific$mux_212$conv2d.v:429$2748 ($mux).
Mapping top.$flatten\u_conv2d.$verific$mux_213$conv2d.v:429$2749 ($mux).
Mapping top.$flatten\u_conv2d.$verific$mux_214$conv2d.v:429$2750 ($mux).
Mapping top.$flatten\u_conv2d.$verific$mux_215$conv2d.v:429$2751 ($mux).
Mapping top.$flatten\u_conv2d.$verific$mux_216$conv2d.v:429$2752 ($mux).
Mapping top.$flatten\u_conv2d.$verific$mux_217$conv2d.v:429$2753 ($mux).
Mapping top.$flatten\u_conv2d.$verific$mux_218$conv2d.v:429$2754 ($mux).
Mapping top.$flatten\u_conv2d.$verific$mux_219$conv2d.v:429$2755 ($mux).
Mapping top.$flatten\u_conv2d.$verific$mux_220$conv2d.v:429$2756 ($mux).
Mapping top.$flatten\u_conv2d.$verific$mux_221$conv2d.v:429$2757 ($mux).
Mapping top.$flatten\u_conv2d.$verific$mux_222$conv2d.v:429$2758 ($mux).
Mapping top.$flatten\u_conv2d.$verific$mux_223$conv2d.v:429$2759 ($mux).
Mapping top.$flatten\u_conv2d.$verific$mux_224$conv2d.v:429$2760 ($mux).
Mapping top.$flatten\u_conv2d.$verific$mux_225$conv2d.v:429$2761 ($mux).
Mapping top.$flatten\u_conv2d.$verific$mux_226$conv2d.v:429$2762 ($mux).
Mapping top.$flatten\u_conv2d.$verific$mux_227$conv2d.v:429$2763 ($mux).
Mapping top.$flatten\u_conv2d.$verific$mux_228$conv2d.v:429$2764 ($mux).
Mapping top.$flatten\u_conv2d.$verific$mux_229$conv2d.v:429$2765 ($mux).
Mapping top.$flatten\u_conv2d.$verific$mux_23$conv2d.v:91$2464 ($mux).
Mapping top.$flatten\u_conv2d.$verific$mux_232$conv2d.v:432$2766 ($mux).
Mapping top.$flatten\u_conv2d.$verific$mux_24$conv2d.v:91$2465 ($mux).
Mapping top.$flatten\u_conv2d.$verific$mux_264$conv2d.v:489$2769 ($mux).
Mapping top.$flatten\u_conv2d.$verific$mux_267$conv2d.v:523$2771 ($bmux).
Mapping top.$flatten\u_conv2d.$verific$mux_268$conv2d.v:523$2772 ($bmux).
Mapping top.$flatten\u_conv2d.$verific$mux_270$conv2d.v:523$2774 ($bmux).
Mapping top.$flatten\u_conv2d.$verific$mux_271$conv2d.v:523$2775 ($bmux).
Mapping top.$flatten\u_conv2d.$verific$mux_272$conv2d.v:523$2776 ($bmux).
Mapping top.$flatten\u_conv2d.$verific$mux_273$conv2d.v:523$2777 ($bmux).
Mapping top.$flatten\u_conv2d.$verific$mux_274$conv2d.v:523$2778 ($bmux).
Mapping top.$flatten\u_conv2d.$verific$mux_275$conv2d.v:523$2779 ($bmux).
Mapping top.$flatten\u_conv2d.$verific$mux_276$conv2d.v:523$2780 ($bmux).
Mapping top.$flatten\u_conv2d.$verific$mux_277$conv2d.v:523$2781 ($bmux).
Mapping top.$flatten\u_conv2d.$verific$mux_278$conv2d.v:523$2782 ($bmux).
Mapping top.$flatten\u_conv2d.$verific$mux_293$conv2d.v:540$2790 ($mux).
Mapping top.$flatten\u_conv2d.$verific$mux_294$conv2d.v:540$2791 ($mux).
Mapping top.$flatten\u_conv2d.$verific$mux_295$conv2d.v:540$2792 ($mux).
Mapping top.$flatten\u_conv2d.$verific$mux_296$conv2d.v:540$2793 ($mux).
Mapping top.$flatten\u_conv2d.$verific$mux_31$conv2d.v:96$2472 ($mux).
Mapping top.$flatten\u_conv2d.$verific$mux_315$conv2d.v:569$2803 ($mux).
Mapping top.$flatten\u_conv2d.$verific$mux_324$conv2d.v:579$2806 ($mux).
Mapping top.$flatten\u_conv2d.$verific$mux_34$conv2d.v:97$2475 ($mux).
Mapping top.$flatten\u_conv2d.$verific$mux_342$conv2d.v:598$2812 ($mux).
Mapping top.$flatten\u_conv2d.$verific$mux_344$conv2d.v:599$2814 ($mux).
Mapping top.$flatten\u_conv2d.$verific$mux_346$conv2d.v:601$2816 ($bmux).
Mapping top.$flatten\u_conv2d.$verific$mux_347$conv2d.v:601$2817 ($bmux).
Mapping top.$flatten\u_conv2d.$verific$mux_348$conv2d.v:601$2818 ($bmux).
Mapping top.$flatten\u_conv2d.$verific$mux_349$conv2d.v:601$2819 ($bmux).
Mapping top.$flatten\u_conv2d.$verific$mux_350$conv2d.v:601$2820 ($bmux).
Mapping top.$flatten\u_conv2d.$verific$mux_352$conv2d.v:601$2822 ($bmux).
Mapping top.$auto$ff.cc:262:slice$5561 ($adffe).
Mapping top.$auto$alumacc.cc:68:get_gt$6769 ($not).
Mapping top.$auto$ff.cc:262:slice$5372 ($adffe).
Mapping top.$auto$ff.cc:262:slice$5143 ($adffe).
Mapping top.$auto$ff.cc:262:slice$5514 ($adffe).
Mapping top.$auto$ff.cc:262:slice$5383 ($adffe).
Mapping top.$auto$ff.cc:262:slice$5409 ($adffe).
Mapping top.$auto$alumacc.cc:89:get_cf$6754 ($not).
Mapping top.$auto$alumacc.cc:520:replace_alu$6758 ($reduce_or).
Mapping top.$flatten\u_conv2d.$verific$mux_486$conv2d.v:702$2913 ($mux).
Mapping top.$auto$ff.cc:262:slice$4841 ($adffe).
Mapping top.$flatten\u_conv2d.$verific$mux_490$conv2d.v:707$2915 ($mux).
Mapping top.$flatten\u_conv2d.$verific$mux_491$conv2d.v:707$2916 ($mux).
Mapping top.$flatten\u_conv2d.$verific$mux_494$conv2d.v:707$2918 ($mux).
Mapping top.$flatten\u_conv2d.$verific$mux_496$conv2d.v:707$2920 ($mux).
Mapping top.$flatten\u_conv2d.$verific$mux_499$conv2d.v:712$2921 ($mux).
Mapping top.$auto$ff.cc:262:slice$4844 ($adffe).
Mapping top.$flatten\u_conv2d.$verific$mux_501$conv2d.v:712$2923 ($mux).
Mapping top.$flatten\u_conv2d.$verific$mux_502$conv2d.v:712$2924 ($mux).
Mapping top.$flatten\u_conv2d.$verific$mux_506$conv2d.v:712$2927 ($mux).
Mapping top.$auto$ff.cc:262:slice$4847 ($adffe).
Mapping top.$flatten\u_conv2d.$verific$mux_611$conv2d.v:778$2948 ($mux).
Mapping top.$auto$ff.cc:262:slice$4868 ($adffe).
Mapping top.$auto$alumacc.cc:75:get_eq$6765 ($reduce_and).
Mapping top.$auto$alumacc.cc:67:get_gt$6767 ($or).
Mapping top.$flatten\u_conv2d.$verific$mux_618$conv2d.v:779$2955 ($mux).
Mapping top.$flatten\u_conv2d.$verific$mux_621$conv2d.v:782$2956 ($mux).
Mapping top.$flatten\u_conv2d.$verific$mux_727$conv2d.v:843$3048 ($mux).
Mapping top.$flatten\u_conv2d.$verific$mux_778$conv2d.v:888$3071 ($mux).
Mapping top.$flatten\u_conv2d.$verific$mux_803$conv2d.v:902$3090 ($mux).
Mapping top.$flatten\u_conv2d.$verific$mux_901$conv2d.v:1013$4177 ($mux).
Mapping top.$auto$ff.cc:262:slice$5530 ($adffe).
Mapping top.$auto$ff.cc:262:slice$5286 ($adffe).
Mapping top.$flatten\u_conv2d.$verific$mux_947$conv2d.v:1059$4213 ($mux).
Mapping top.$auto$ff.cc:262:slice$5533 ($adffe).
Mapping top.$auto$ff.cc:262:slice$5293 ($adffe).
Mapping top.$auto$ff.cc:262:slice$5568 ($adffe).
Mapping top.$flatten\u_conv2d.$verific$mux_955$conv2d.v:1060$4221 ($mux).
Mapping top.$flatten\u_conv2d.$verific$mux_957$conv2d.v:1060$4223 ($mux).
Mapping top.$auto$ff.cc:262:slice$5542 ($adffe).
Mapping top.$auto$ff.cc:262:slice$5571 ($adffe).
Mapping top.$auto$ff.cc:262:slice$5316 ($adffe).
Mapping top.$flatten\u_conv2d.$verific$mux_965$conv2d.v:1061$4231 ($mux).
Mapping top.$auto$ff.cc:262:slice$5549 ($adffe).
Mapping top.$flatten\u_conv2d.$verific$not_equal_1123$conv2d.v:1215$4299 ($ne).
Mapping top.$flatten\u_conv2d.$verific$p1_raddr_reg$conv2d.v:1246$4369 ($adff).
Mapping top.$flatten\u_conv2d.$verific$p2_raddr_reg$conv2d.v:1246$4370 ($adff).
Mapping top.$flatten\u_conv2d.$verific$reduce_nor_1163$conv2d.v:1245$4324 ($not).
Mapping top.$flatten\u_conv2d.$verific$reduce_nor_1163$conv2d.v:1245$4325 ($reduce_or).
Mapping top.$flatten\u_conv2d.$verific$reduce_nor_408$conv2d.v:648$2859 ($not).
Mapping top.$flatten\u_conv2d.$verific$reduce_nor_408$conv2d.v:648$2860 ($reduce_or).
Mapping top.$flatten\u_conv2d.$verific$reduce_nor_626$conv2d.v:784$2961 ($not).
Mapping top.$flatten\u_conv2d.$verific$reduce_nor_626$conv2d.v:784$2962 ($reduce_or).
Mapping top.$flatten\u_conv2d.$verific$reduce_nor_71$conv2d.v:124$2494 ($not).
Mapping top.$flatten\u_conv2d.$verific$reduce_nor_71$conv2d.v:124$2495 ($reduce_or).
Mapping top.$flatten\u_conv2d.$verific$reduce_nor_73$conv2d.v:143$2498 ($not).
Mapping top.$flatten\u_conv2d.$verific$reduce_nor_73$conv2d.v:143$2499 ($reduce_or).
Mapping top.$flatten\u_conv2d.$verific$reduce_nor_822$conv2d.v:912$3101 ($not).
Mapping top.$flatten\u_conv2d.$verific$reduce_nor_822$conv2d.v:912$3102 ($reduce_or).
Mapping top.$flatten\u_conv2d.$verific$reduce_or_10$conv2d.v:88$2451 ($reduce_or).
Mapping top.$flatten\u_conv2d.$verific$reduce_or_1180$conv2d.v:1245$4343 ($reduce_or).
Mapping top.$flatten\u_conv2d.$verific$reduce_or_1185$conv2d.v:1245$4348 ($reduce_or).
Mapping top.$flatten\u_conv2d.$verific$reduce_or_1193$conv2d.v:1245$4355 ($reduce_or).
Mapping top.$flatten\u_conv2d.$verific$reduce_or_1195$conv2d.v:1245$4357 ($reduce_or).
Mapping top.$flatten\u_conv2d.$verific$reduce_or_1206$conv2d.v:1245$4365 ($reduce_or).
Mapping top.$flatten\u_conv2d.$verific$reduce_or_14$conv2d.v:89$2455 ($reduce_or).
Mapping top.$flatten\u_conv2d.$verific$reduce_or_18$conv2d.v:90$2459 ($reduce_or).
Mapping top.$flatten\u_conv2d.$verific$reduce_or_22$conv2d.v:91$2463 ($reduce_or).
Mapping top.$flatten\u_conv2d.$verific$reset_bias_address_reg$conv2d.v:785$3024 ($adff).
Mapping top.$flatten\u_conv2d.$verific$result_base_reg$conv2d.v:785$2999 ($adff).
Mapping top.$flatten\u_conv2d.$verific$sat04_reg$conv2d.v:92$2467 ($adff).
Mapping top.$flatten\u_conv2d.$verific$sat15_reg$conv2d.v:92$2468 ($adff).
Mapping top.$flatten\u_conv2d.$verific$sat26_reg$conv2d.v:92$2469 ($adff).
Mapping top.$flatten\u_conv2d.$verific$sat37_reg$conv2d.v:92$2470 ($adff).
Mapping top.$flatten\u_conv2d.$verific$select_410$conv2d.v:648$2863 ($mux).
Mapping top.$flatten\u_conv2d.$verific$total_pixels_done_reg$conv2d.v:1246$4388 ($adff).
Mapping top.$flatten\u_conv2d.$verific$wdata2_reg$conv2d.v:785$3001 ($adff).
Mapping top.$flatten\u_conv2d.$verific$write2_reg$conv2d.v:1246$4402 ($adff).
Mapping top.$flatten\u_ctl.$verific$counter_reg$control.v:224$1713 ($adff).
Mapping top.$flatten\u_ctl.$verific$equal_124$control.v:146$1615 ($logic_not).
Mapping top.$flatten\u_ctl.$verific$equal_125$control.v:147$1616 ($eq).
Mapping top.$flatten\u_ctl.$verific$equal_126$control.v:148$1617 ($eq).
Mapping top.$flatten\u_ctl.$verific$equal_127$control.v:149$1618 ($eq).
Mapping top.$flatten\u_ctl.$verific$equal_128$control.v:150$1619 ($eq).
Mapping top.$flatten\u_ctl.$verific$equal_129$control.v:151$1620 ($eq).
Mapping top.$flatten\u_ctl.$verific$equal_130$control.v:152$1621 ($eq).
Mapping top.$flatten\u_ctl.$verific$equal_131$control.v:153$1622 ($eq).
Mapping top.$flatten\u_ctl.$verific$equal_132$control.v:154$1623 ($eq).
Mapping top.$flatten\u_ctl.$verific$equal_133$control.v:155$1624 ($eq).
Mapping top.$flatten\u_ctl.$verific$equal_134$control.v:156$1625 ($eq).
Mapping top.$flatten\u_ctl.$verific$equal_135$control.v:157$1626 ($eq).
Mapping top.$flatten\u_ctl.$verific$equal_136$control.v:158$1627 ($eq).
Mapping top.$flatten\u_ctl.$verific$equal_137$control.v:159$1628 ($eq).
Mapping top.$flatten\u_ctl.$verific$equal_138$control.v:164$1629 ($eq).
Mapping top.$flatten\u_ctl.$verific$equal_139$control.v:169$1630 ($eq).
Mapping top.$flatten\u_ctl.$verific$equal_140$control.v:174$1631 ($eq).
Mapping top.$flatten\u_ctl.$verific$equal_141$control.v:177$1632 ($eq).
Mapping top.$flatten\u_ctl.$verific$equal_142$control.v:181$1633 ($eq).
Mapping top.$flatten\u_ctl.$verific$equal_211$control.v:216$1662 ($eq).
Mapping top.$flatten\u_ctl.$verific$i156$control.v:185$1648 ($mux).
Mapping top.$flatten\u_ctl.$verific$i238$control.v:223$1689 ($mux).
Mapping top.$flatten\u_ctl.$verific$i241$control.v:223$1692 ($mux).
Mapping top.$flatten\u_ctl.$verific$i242$control.v:223$1693 ($mux).
Mapping top.$flatten\u_ctl.$verific$i243$control.v:223$1694 ($mux).
Mapping top.$flatten\u_ctl.$verific$i4$control.v:46$1551 ($and).
Mapping top.$flatten\u_ctl.$verific$i63$control.v:111$1588 ($mux).
Mapping top.$flatten\u_ctl.$verific$i64$control.v:111$1589 ($mux).
Mapping top.$flatten\u_ctl.$verific$i81$control.v:130$1596 ($and).
Mapping top.$flatten\u_ctl.$verific$i87$control.v:134$1600 ($not).
Mapping top.$flatten\u_ctl.$verific$i88$control.v:134$1601 ($and).
Mapping top.$flatten\u_ctl.$verific$i_ctl_bwen_reg$control.v:224$1721 ($adff).
Mapping top.$flatten\u_ctl.$verific$i_ctl_fwen_reg$control.v:224$1719 ($adff).
Mapping top.$flatten\u_ctl.$verific$i_ctl_pfwaddr_reg$control.v:224$1718 ($adff).
Mapping top.$flatten\u_ctl.$verific$i_ctl_pwen_reg$control.v:224$1720 ($adff).
Mapping top.$flatten\u_ctl.$verific$i_intr_sts_reg$control.v:224$1723 ($adff).
Mapping top.$flatten\u_ctl.$verific$mux_183$control.v:208$1661 ($mux).
Mapping top.$flatten\u_ctl.$verific$mux_71$control.v:119$1594 ($mux).
Mapping top.$flatten\u_ctl.$verific$reduce_nor_143$control.v:185$1634 ($not).
Mapping top.$flatten\u_ctl.$verific$reduce_nor_143$control.v:185$1635 ($reduce_or).
Mapping top.$flatten\u_ctl.$verific$reduce_nor_214$control.v:220$1663 ($not).
Mapping top.$flatten\u_ctl.$verific$reduce_nor_214$control.v:220$1664 ($reduce_or).
Mapping top.$flatten\u_ctl.$verific$reduce_nor_222$control.v:223$1672 ($not).
Mapping top.$flatten\u_ctl.$verific$reduce_nor_222$control.v:223$1673 ($reduce_or).
Mapping top.$verific$i28$tfl.v:165$43 ($mux).
Mapping top.$verific$i30$tfl.v:166$45 ($not).
Mapping top.$verific$i31$tfl.v:166$46 ($and).
Mapping top.$verific$i32$tfl.v:167$47 ($mux).
Mapping top.$verific$i34$tfl.v:168$49 ($and).
Mapping top.$verific$i35$tfl.v:169$50 ($mux).
Mapping top.$verific$i37$tfl.v:171$52 ($mux).
Mapping top.$verific$mux_15$tfl.v:155$33 ($mux).
Mapping top.$verific$mux_17$tfl.v:157$35 ($mux).
Mapping top.$verific$mux_21$tfl.v:161$38 ($mux).
Mapping top.$verific$mux_23$tfl.v:162$40 ($mux).
Mapping top.$verific$mux_38$tfl.v:173$54 ($mux).
Mapping top.$verific$mux_40$tfl.v:174$56 ($mux).
Mapping top.$verific$mux_42$tfl.v:176$58 ($mux).
Mapping top.$verific$mux_44$tfl.v:179$60 ($mux).
Mapping top.$verific$mux_46$tfl.v:181$62 ($mux).

24. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~4580 debug messages>

25. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~2508 debug messages>
Removed a total of 836 cells.

26. Executing OPT_DFF pass (perform DFF optimizations).

27. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 42 unused cells and 899 unused wires.
<suppressed ~43 debug messages>

28. Executing OPT pass (performing simple optimizations).

28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1 debug messages>

28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

28.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

28.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

28.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

28.6. Executing OPT_DFF pass (perform DFF optimizations).

28.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

28.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

28.9. Finished OPT passes. (There is nothing left to do.)

29. Executing OPT pass (performing simple optimizations).

29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1114 debug messages>

29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

29.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$11986 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15151 [13], Q = \u_conv2d.bias0 [13]).
Adding EN signal on $auto$ff.cc:262:slice$11985 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15151 [12], Q = \u_conv2d.bias0 [12]).
Adding EN signal on $auto$ff.cc:262:slice$11984 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15151 [11], Q = \u_conv2d.bias0 [11]).
Adding EN signal on $auto$ff.cc:262:slice$11982 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15151 [9], Q = \u_conv2d.bias0 [9]).
Adding EN signal on $auto$ff.cc:262:slice$11981 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15151 [8], Q = \u_conv2d.bias0 [8]).
Adding EN signal on $auto$ff.cc:262:slice$11980 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15151 [7], Q = \u_conv2d.bias0 [7]).
Adding EN signal on $auto$ff.cc:262:slice$11979 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15151 [6], Q = \u_conv2d.bias0 [6]).
Adding EN signal on $auto$ff.cc:262:slice$11978 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15151 [5], Q = \u_conv2d.bias0 [5]).
Adding EN signal on $auto$ff.cc:262:slice$11974 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15151 [1], Q = \u_conv2d.bias0 [1]).
Adding EN signal on $auto$ff.cc:262:slice$11960 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$18659 [0], Q = \u_conv2d.add_stride [0]).
Adding EN signal on $auto$ff.cc:262:slice$11962 ($_DFF_PN1_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$18659 [2], Q = \u_conv2d.add_stride [2]).
Adding EN signal on $auto$ff.cc:262:slice$11964 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$18659 [4], Q = \u_conv2d.add_stride [4]).
Adding EN signal on $auto$ff.cc:262:slice$11966 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$18659 [6], Q = \u_conv2d.add_stride [6]).
Adding EN signal on $auto$ff.cc:262:slice$11968 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$18659 [8], Q = \u_conv2d.add_stride [8]).
Adding EN signal on $auto$ff.cc:262:slice$11970 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$18659 [10], Q = \u_conv2d.add_stride [10]).
Adding EN signal on $auto$ff.cc:262:slice$11972 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$18659 [12], Q = \u_conv2d.add_stride [12]).
Adding EN signal on $auto$ff.cc:262:slice$11961 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$18659 [1], Q = \u_conv2d.add_stride [1]).
Adding EN signal on $auto$ff.cc:262:slice$11963 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$18659 [3], Q = \u_conv2d.add_stride [3]).
Adding EN signal on $auto$ff.cc:262:slice$11965 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$18659 [5], Q = \u_conv2d.add_stride [5]).
Adding EN signal on $auto$ff.cc:262:slice$11967 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$18659 [7], Q = \u_conv2d.add_stride [7]).
Adding EN signal on $auto$ff.cc:262:slice$11969 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$18659 [9], Q = \u_conv2d.add_stride [9]).
Adding EN signal on $auto$ff.cc:262:slice$11971 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$18659 [11], Q = \u_conv2d.add_stride [11]).
Adding EN signal on $auto$ff.cc:262:slice$11973 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15151 [0], Q = \u_conv2d.bias0 [0]).
Adding EN signal on $auto$ff.cc:262:slice$11975 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15151 [2], Q = \u_conv2d.bias0 [2]).
Adding EN signal on $auto$ff.cc:262:slice$11977 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15151 [4], Q = \u_conv2d.bias0 [4]).
Adding EN signal on $auto$ff.cc:262:slice$11976 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15151 [3], Q = \u_conv2d.bias0 [3]).
Adding EN signal on $auto$ff.cc:262:slice$11983 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15151 [10], Q = \u_conv2d.bias0 [10]).
Adding EN signal on $auto$ff.cc:262:slice$9881 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$14735 [11], Q = \u_conv2d.i_bias_raddr [11]).
Adding EN signal on $auto$ff.cc:262:slice$9880 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$14735 [10], Q = \u_conv2d.i_bias_raddr [10]).
Adding EN signal on $auto$ff.cc:262:slice$9879 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$14735 [9], Q = \u_conv2d.i_bias_raddr [9]).
Adding EN signal on $auto$ff.cc:262:slice$9878 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$14735 [8], Q = \u_conv2d.i_bias_raddr [8]).
Adding EN signal on $auto$ff.cc:262:slice$9877 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$14735 [7], Q = \u_conv2d.i_bias_raddr [7]).
Adding EN signal on $auto$ff.cc:262:slice$9876 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$14735 [6], Q = \u_conv2d.i_bias_raddr [6]).
Adding EN signal on $auto$ff.cc:262:slice$9875 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$14735 [5], Q = \u_conv2d.i_bias_raddr [5]).
Adding EN signal on $auto$ff.cc:262:slice$9874 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$14735 [4], Q = \u_conv2d.i_bias_raddr [4]).
Adding EN signal on $auto$ff.cc:262:slice$9873 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$14735 [3], Q = \u_conv2d.i_bias_raddr [3]).
Adding EN signal on $auto$ff.cc:262:slice$9872 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$14735 [2], Q = \u_conv2d.i_bias_raddr [2]).
Adding EN signal on $auto$ff.cc:262:slice$20390 ($_DFF_PN0_) from module top (D = \u_conv2d.sat04 [7], Q = \u_conv2d.wdata2 [31]).
Adding EN signal on $auto$ff.cc:262:slice$20389 ($_DFF_PN0_) from module top (D = \u_conv2d.sat04 [6], Q = \u_conv2d.wdata2 [30]).
Adding EN signal on $auto$ff.cc:262:slice$20388 ($_DFF_PN0_) from module top (D = \u_conv2d.sat04 [5], Q = \u_conv2d.wdata2 [29]).
Adding EN signal on $auto$ff.cc:262:slice$20387 ($_DFF_PN0_) from module top (D = \u_conv2d.sat04 [4], Q = \u_conv2d.wdata2 [28]).
Adding EN signal on $auto$ff.cc:262:slice$20386 ($_DFF_PN0_) from module top (D = \u_conv2d.sat04 [3], Q = \u_conv2d.wdata2 [27]).
Adding EN signal on $auto$ff.cc:262:slice$20385 ($_DFF_PN0_) from module top (D = \u_conv2d.sat04 [2], Q = \u_conv2d.wdata2 [26]).
Adding EN signal on $auto$ff.cc:262:slice$20384 ($_DFF_PN0_) from module top (D = \u_conv2d.sat04 [1], Q = \u_conv2d.wdata2 [25]).
Adding EN signal on $auto$ff.cc:262:slice$20383 ($_DFF_PN0_) from module top (D = \u_conv2d.sat04 [0], Q = \u_conv2d.wdata2 [24]).
Adding EN signal on $auto$ff.cc:262:slice$20382 ($_DFF_PN0_) from module top (D = \u_conv2d.sat15 [7], Q = \u_conv2d.wdata2 [23]).
Adding EN signal on $auto$ff.cc:262:slice$20381 ($_DFF_PN0_) from module top (D = \u_conv2d.sat15 [6], Q = \u_conv2d.wdata2 [22]).
Adding EN signal on $auto$ff.cc:262:slice$20380 ($_DFF_PN0_) from module top (D = \u_conv2d.sat15 [5], Q = \u_conv2d.wdata2 [21]).
Adding EN signal on $auto$ff.cc:262:slice$20379 ($_DFF_PN0_) from module top (D = \u_conv2d.sat15 [4], Q = \u_conv2d.wdata2 [20]).
Adding EN signal on $auto$ff.cc:262:slice$20378 ($_DFF_PN0_) from module top (D = \u_conv2d.sat15 [3], Q = \u_conv2d.wdata2 [19]).
Adding EN signal on $auto$ff.cc:262:slice$20377 ($_DFF_PN0_) from module top (D = \u_conv2d.sat15 [2], Q = \u_conv2d.wdata2 [18]).
Adding EN signal on $auto$ff.cc:262:slice$20376 ($_DFF_PN0_) from module top (D = \u_conv2d.sat15 [1], Q = \u_conv2d.wdata2 [17]).
Adding EN signal on $auto$ff.cc:262:slice$20375 ($_DFF_PN0_) from module top (D = \u_conv2d.sat15 [0], Q = \u_conv2d.wdata2 [16]).
Adding EN signal on $auto$ff.cc:262:slice$20374 ($_DFF_PN0_) from module top (D = \u_conv2d.sat26 [7], Q = \u_conv2d.wdata2 [15]).
Adding EN signal on $auto$ff.cc:262:slice$20373 ($_DFF_PN0_) from module top (D = \u_conv2d.sat26 [6], Q = \u_conv2d.wdata2 [14]).
Adding EN signal on $auto$ff.cc:262:slice$20372 ($_DFF_PN0_) from module top (D = \u_conv2d.sat26 [5], Q = \u_conv2d.wdata2 [13]).
Adding EN signal on $auto$ff.cc:262:slice$20371 ($_DFF_PN0_) from module top (D = \u_conv2d.sat26 [4], Q = \u_conv2d.wdata2 [12]).
Adding EN signal on $auto$ff.cc:262:slice$20370 ($_DFF_PN0_) from module top (D = \u_conv2d.sat26 [3], Q = \u_conv2d.wdata2 [11]).
Adding EN signal on $auto$ff.cc:262:slice$20369 ($_DFF_PN0_) from module top (D = \u_conv2d.sat26 [2], Q = \u_conv2d.wdata2 [10]).
Adding EN signal on $auto$ff.cc:262:slice$20368 ($_DFF_PN0_) from module top (D = \u_conv2d.sat26 [1], Q = \u_conv2d.wdata2 [9]).
Adding EN signal on $auto$ff.cc:262:slice$20367 ($_DFF_PN0_) from module top (D = \u_conv2d.sat26 [0], Q = \u_conv2d.wdata2 [8]).
Adding EN signal on $auto$ff.cc:262:slice$20366 ($_DFF_PN0_) from module top (D = \u_conv2d.sat37 [7], Q = \u_conv2d.wdata2 [7]).
Adding EN signal on $auto$ff.cc:262:slice$20365 ($_DFF_PN0_) from module top (D = \u_conv2d.sat37 [6], Q = \u_conv2d.wdata2 [6]).
Adding EN signal on $auto$ff.cc:262:slice$20364 ($_DFF_PN0_) from module top (D = \u_conv2d.sat37 [5], Q = \u_conv2d.wdata2 [5]).
Adding EN signal on $auto$ff.cc:262:slice$20363 ($_DFF_PN0_) from module top (D = \u_conv2d.sat37 [4], Q = \u_conv2d.wdata2 [4]).
Adding EN signal on $auto$ff.cc:262:slice$20362 ($_DFF_PN0_) from module top (D = \u_conv2d.sat37 [3], Q = \u_conv2d.wdata2 [3]).
Adding EN signal on $auto$ff.cc:262:slice$20361 ($_DFF_PN0_) from module top (D = \u_conv2d.sat37 [2], Q = \u_conv2d.wdata2 [2]).
Adding EN signal on $auto$ff.cc:262:slice$20360 ($_DFF_PN0_) from module top (D = \u_conv2d.sat37 [1], Q = \u_conv2d.wdata2 [1]).
Adding EN signal on $auto$ff.cc:262:slice$20359 ($_DFF_PN0_) from module top (D = \u_conv2d.sat37 [0], Q = \u_conv2d.wdata2 [0]).
Adding EN signal on $auto$ff.cc:262:slice$20301 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$18453 [19], Q = \u_conv2d.result_base [19]).
Adding EN signal on $auto$ff.cc:262:slice$20300 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$18453 [18], Q = \u_conv2d.result_base [18]).
Adding EN signal on $auto$ff.cc:262:slice$20299 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$18453 [17], Q = \u_conv2d.result_base [17]).
Adding EN signal on $auto$ff.cc:262:slice$20298 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$18453 [16], Q = \u_conv2d.result_base [16]).
Adding EN signal on $auto$ff.cc:262:slice$20297 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$18453 [15], Q = \u_conv2d.result_base [15]).
Adding EN signal on $auto$ff.cc:262:slice$20296 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$18453 [14], Q = \u_conv2d.result_base [14]).
Adding EN signal on $auto$ff.cc:262:slice$20295 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$18453 [13], Q = \u_conv2d.result_base [13]).
Adding EN signal on $auto$ff.cc:262:slice$20294 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$18453 [12], Q = \u_conv2d.result_base [12]).
Adding EN signal on $auto$ff.cc:262:slice$20293 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$18453 [11], Q = \u_conv2d.result_base [11]).
Adding EN signal on $auto$ff.cc:262:slice$20292 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$18453 [10], Q = \u_conv2d.result_base [10]).
Adding EN signal on $auto$ff.cc:262:slice$20291 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$18453 [9], Q = \u_conv2d.result_base [9]).
Adding EN signal on $auto$ff.cc:262:slice$20290 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$18453 [8], Q = \u_conv2d.result_base [8]).
Adding EN signal on $auto$ff.cc:262:slice$20289 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$18453 [7], Q = \u_conv2d.result_base [7]).
Adding EN signal on $auto$ff.cc:262:slice$20288 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$18453 [6], Q = \u_conv2d.result_base [6]).
Adding EN signal on $auto$ff.cc:262:slice$20287 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$18453 [5], Q = \u_conv2d.result_base [5]).
Adding EN signal on $auto$ff.cc:262:slice$20286 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$18453 [4], Q = \u_conv2d.result_base [4]).
Adding EN signal on $auto$ff.cc:262:slice$20285 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$18453 [3], Q = \u_conv2d.result_base [3]).
Adding EN signal on $auto$ff.cc:262:slice$20284 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$18453 [2], Q = \u_conv2d.result_base [2]).
Adding EN signal on $auto$ff.cc:262:slice$20283 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$18453 [1], Q = \u_conv2d.result_base [1]).
Adding EN signal on $auto$ff.cc:262:slice$20282 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$18453 [0], Q = \u_conv2d.result_base [0]).
Adding EN signal on $auto$ff.cc:262:slice$19716 ($_DFFE_PN0P_) from module top (D = $auto$rtlil.cc:2459:Mux$6254 [2], Q = \u_conv2d.filter_stride [2]).
Adding EN signal on $auto$ff.cc:262:slice$19715 ($_DFFE_PN0P_) from module top (D = $auto$rtlil.cc:2459:Mux$6254 [1], Q = \u_conv2d.filter_stride [1]).
Adding EN signal on $auto$ff.cc:262:slice$19714 ($_DFFE_PN0P_) from module top (D = $auto$rtlil.cc:2459:Mux$6254 [0], Q = \u_conv2d.filter_stride [0]).
Adding EN signal on $auto$ff.cc:262:slice$13211 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$14551 [11], Q = \u_conv2d.bias_base_addr [11]).
Adding EN signal on $auto$ff.cc:262:slice$13210 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$14551 [10], Q = \u_conv2d.bias_base_addr [10]).
Adding EN signal on $auto$ff.cc:262:slice$13209 ($_DFF_PN1_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$14551 [9], Q = \u_conv2d.bias_base_addr [9]).
Adding EN signal on $auto$ff.cc:262:slice$13208 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$14551 [8], Q = \u_conv2d.bias_base_addr [8]).
Adding EN signal on $auto$ff.cc:262:slice$13207 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$14551 [7], Q = \u_conv2d.bias_base_addr [7]).
Adding EN signal on $auto$ff.cc:262:slice$13206 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$14551 [6], Q = \u_conv2d.bias_base_addr [6]).
Adding EN signal on $auto$ff.cc:262:slice$13205 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$14551 [5], Q = \u_conv2d.bias_base_addr [5]).
Adding EN signal on $auto$ff.cc:262:slice$13129 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$11953 [0], Q = \u_conv2d.i_tcdm2_wreq).
Adding EN signal on $auto$ff.cc:262:slice$13128 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$19607 [31], Q = \u_conv2d.i_tcdm2_wdata [31]).
Adding EN signal on $auto$ff.cc:262:slice$13127 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$19607 [30], Q = \u_conv2d.i_tcdm2_wdata [30]).
Adding EN signal on $auto$ff.cc:262:slice$13126 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$19607 [29], Q = \u_conv2d.i_tcdm2_wdata [29]).
Adding EN signal on $auto$ff.cc:262:slice$13125 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$19607 [28], Q = \u_conv2d.i_tcdm2_wdata [28]).
Adding EN signal on $auto$ff.cc:262:slice$13124 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$19607 [27], Q = \u_conv2d.i_tcdm2_wdata [27]).
Adding EN signal on $auto$ff.cc:262:slice$13123 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$19607 [26], Q = \u_conv2d.i_tcdm2_wdata [26]).
Adding EN signal on $auto$ff.cc:262:slice$13122 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$19607 [25], Q = \u_conv2d.i_tcdm2_wdata [25]).
Adding EN signal on $auto$ff.cc:262:slice$13121 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$19607 [24], Q = \u_conv2d.i_tcdm2_wdata [24]).
Adding EN signal on $auto$ff.cc:262:slice$13120 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$19607 [23], Q = \u_conv2d.i_tcdm2_wdata [23]).
Adding EN signal on $auto$ff.cc:262:slice$13119 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$19607 [22], Q = \u_conv2d.i_tcdm2_wdata [22]).
Adding EN signal on $auto$ff.cc:262:slice$13118 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$19607 [21], Q = \u_conv2d.i_tcdm2_wdata [21]).
Adding EN signal on $auto$ff.cc:262:slice$13117 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$19607 [20], Q = \u_conv2d.i_tcdm2_wdata [20]).
Adding EN signal on $auto$ff.cc:262:slice$13116 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$19607 [19], Q = \u_conv2d.i_tcdm2_wdata [19]).
Adding EN signal on $auto$ff.cc:262:slice$13115 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$19607 [18], Q = \u_conv2d.i_tcdm2_wdata [18]).
Adding EN signal on $auto$ff.cc:262:slice$13114 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$19607 [17], Q = \u_conv2d.i_tcdm2_wdata [17]).
Adding EN signal on $auto$ff.cc:262:slice$13113 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$19607 [16], Q = \u_conv2d.i_tcdm2_wdata [16]).
Adding EN signal on $auto$ff.cc:262:slice$13112 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$19607 [15], Q = \u_conv2d.i_tcdm2_wdata [15]).
Adding EN signal on $auto$ff.cc:262:slice$13111 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$19607 [14], Q = \u_conv2d.i_tcdm2_wdata [14]).
Adding EN signal on $auto$ff.cc:262:slice$13110 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$19607 [13], Q = \u_conv2d.i_tcdm2_wdata [13]).
Adding EN signal on $auto$ff.cc:262:slice$13109 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$19607 [12], Q = \u_conv2d.i_tcdm2_wdata [12]).
Adding EN signal on $auto$ff.cc:262:slice$13108 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$19607 [11], Q = \u_conv2d.i_tcdm2_wdata [11]).
Adding EN signal on $auto$ff.cc:262:slice$13107 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$19607 [10], Q = \u_conv2d.i_tcdm2_wdata [10]).
Adding EN signal on $auto$ff.cc:262:slice$13106 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$19607 [9], Q = \u_conv2d.i_tcdm2_wdata [9]).
Adding EN signal on $auto$ff.cc:262:slice$13105 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$19607 [8], Q = \u_conv2d.i_tcdm2_wdata [8]).
Adding EN signal on $auto$ff.cc:262:slice$13104 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$19607 [7], Q = \u_conv2d.i_tcdm2_wdata [7]).
Adding EN signal on $auto$ff.cc:262:slice$13103 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$19607 [6], Q = \u_conv2d.i_tcdm2_wdata [6]).
Adding EN signal on $auto$ff.cc:262:slice$13102 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$19607 [5], Q = \u_conv2d.i_tcdm2_wdata [5]).
Adding EN signal on $auto$ff.cc:262:slice$13101 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$19607 [4], Q = \u_conv2d.i_tcdm2_wdata [4]).
Adding EN signal on $auto$ff.cc:262:slice$13100 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$19607 [3], Q = \u_conv2d.i_tcdm2_wdata [3]).
Adding EN signal on $auto$ff.cc:262:slice$13099 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$19607 [2], Q = \u_conv2d.i_tcdm2_wdata [2]).
Adding EN signal on $auto$ff.cc:262:slice$13098 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$19607 [1], Q = \u_conv2d.i_tcdm2_wdata [1]).
Adding EN signal on $auto$ff.cc:262:slice$13097 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$19607 [0], Q = \u_conv2d.i_tcdm2_wdata [0]).
Adding EN signal on $auto$ff.cc:262:slice$12626 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$18732 [3], Q = \u_conv2d.fsm_writechannels [3]).
Adding EN signal on $auto$ff.cc:262:slice$12625 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$18732 [2], Q = \u_conv2d.fsm_writechannels [2]).
Adding EN signal on $auto$ff.cc:262:slice$12624 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$18732 [1], Q = \u_conv2d.fsm_writechannels [1]).
Adding EN signal on $auto$ff.cc:262:slice$12623 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$18732 [0], Q = \u_conv2d.fsm_writechannels [0]).
Adding EN signal on $auto$ff.cc:262:slice$12622 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$14807 [3], Q = \u_conv2d.fsm_loadacc [3]).
Adding EN signal on $auto$ff.cc:262:slice$12621 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$14807 [2], Q = \u_conv2d.fsm_loadacc [2]).
Adding EN signal on $auto$ff.cc:262:slice$12620 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$14807 [1], Q = \u_conv2d.fsm_loadacc [1]).
Adding EN signal on $auto$ff.cc:262:slice$12619 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$14807 [0], Q = \u_conv2d.fsm_loadacc [0]).
Adding EN signal on $auto$ff.cc:262:slice$12164 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$17650 [47], Q = \u_conv2d.bias7 [23]).
Adding EN signal on $auto$ff.cc:262:slice$12163 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$17650 [46], Q = \u_conv2d.bias7 [22]).
Adding EN signal on $auto$ff.cc:262:slice$12162 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$17650 [45], Q = \u_conv2d.bias7 [21]).
Adding EN signal on $auto$ff.cc:262:slice$12161 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$17650 [44], Q = \u_conv2d.bias7 [20]).
Adding EN signal on $auto$ff.cc:262:slice$12160 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$17650 [43], Q = \u_conv2d.bias7 [19]).
Adding EN signal on $auto$ff.cc:262:slice$12159 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$17650 [42], Q = \u_conv2d.bias7 [18]).
Adding EN signal on $auto$ff.cc:262:slice$12158 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$17650 [41], Q = \u_conv2d.bias7 [17]).
Adding EN signal on $auto$ff.cc:262:slice$12157 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$17650 [40], Q = \u_conv2d.bias7 [16]).
Adding EN signal on $auto$ff.cc:262:slice$12156 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$17650 [39], Q = \u_conv2d.bias7 [15]).
Adding EN signal on $auto$ff.cc:262:slice$12155 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$17650 [38], Q = \u_conv2d.bias7 [14]).
Adding EN signal on $auto$ff.cc:262:slice$12154 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$17650 [37], Q = \u_conv2d.bias7 [13]).
Adding EN signal on $auto$ff.cc:262:slice$12153 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$17650 [36], Q = \u_conv2d.bias7 [12]).
Adding EN signal on $auto$ff.cc:262:slice$12152 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$17650 [35], Q = \u_conv2d.bias7 [11]).
Adding EN signal on $auto$ff.cc:262:slice$12151 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$17650 [34], Q = \u_conv2d.bias7 [10]).
Adding EN signal on $auto$ff.cc:262:slice$12150 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$17650 [33], Q = \u_conv2d.bias7 [9]).
Adding EN signal on $auto$ff.cc:262:slice$12149 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$17650 [32], Q = \u_conv2d.bias7 [8]).
Adding EN signal on $auto$ff.cc:262:slice$12148 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$17650 [31], Q = \u_conv2d.bias7 [7]).
Adding EN signal on $auto$ff.cc:262:slice$12147 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$17650 [30], Q = \u_conv2d.bias7 [6]).
Adding EN signal on $auto$ff.cc:262:slice$12146 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$17650 [29], Q = \u_conv2d.bias7 [5]).
Adding EN signal on $auto$ff.cc:262:slice$12145 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$17650 [28], Q = \u_conv2d.bias7 [4]).
Adding EN signal on $auto$ff.cc:262:slice$12144 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$17650 [27], Q = \u_conv2d.bias7 [3]).
Adding EN signal on $auto$ff.cc:262:slice$12143 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$17650 [26], Q = \u_conv2d.bias7 [2]).
Adding EN signal on $auto$ff.cc:262:slice$12142 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$17650 [25], Q = \u_conv2d.bias7 [1]).
Adding EN signal on $auto$ff.cc:262:slice$12141 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$17650 [24], Q = \u_conv2d.bias7 [0]).
Adding EN signal on $auto$ff.cc:262:slice$12140 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$17335 [23], Q = \u_conv2d.bias6 [23]).
Adding EN signal on $auto$ff.cc:262:slice$12139 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$17335 [22], Q = \u_conv2d.bias6 [22]).
Adding EN signal on $auto$ff.cc:262:slice$12138 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$17335 [21], Q = \u_conv2d.bias6 [21]).
Adding EN signal on $auto$ff.cc:262:slice$12137 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$17335 [20], Q = \u_conv2d.bias6 [20]).
Adding EN signal on $auto$ff.cc:262:slice$12136 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$17335 [19], Q = \u_conv2d.bias6 [19]).
Adding EN signal on $auto$ff.cc:262:slice$12135 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$17335 [18], Q = \u_conv2d.bias6 [18]).
Adding EN signal on $auto$ff.cc:262:slice$12134 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$17335 [17], Q = \u_conv2d.bias6 [17]).
Adding EN signal on $auto$ff.cc:262:slice$12133 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$17335 [16], Q = \u_conv2d.bias6 [16]).
Adding EN signal on $auto$ff.cc:262:slice$12132 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$17335 [15], Q = \u_conv2d.bias6 [15]).
Adding EN signal on $auto$ff.cc:262:slice$12131 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$17335 [14], Q = \u_conv2d.bias6 [14]).
Adding EN signal on $auto$ff.cc:262:slice$12130 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$17335 [13], Q = \u_conv2d.bias6 [13]).
Adding EN signal on $auto$ff.cc:262:slice$12129 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$17335 [12], Q = \u_conv2d.bias6 [12]).
Adding EN signal on $auto$ff.cc:262:slice$12128 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$17335 [11], Q = \u_conv2d.bias6 [11]).
Adding EN signal on $auto$ff.cc:262:slice$12127 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$17335 [10], Q = \u_conv2d.bias6 [10]).
Adding EN signal on $auto$ff.cc:262:slice$12126 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$17335 [9], Q = \u_conv2d.bias6 [9]).
Adding EN signal on $auto$ff.cc:262:slice$12125 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$17335 [8], Q = \u_conv2d.bias6 [8]).
Adding EN signal on $auto$ff.cc:262:slice$12124 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$17335 [7], Q = \u_conv2d.bias6 [7]).
Adding EN signal on $auto$ff.cc:262:slice$12123 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$17335 [6], Q = \u_conv2d.bias6 [6]).
Adding EN signal on $auto$ff.cc:262:slice$12122 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$17335 [5], Q = \u_conv2d.bias6 [5]).
Adding EN signal on $auto$ff.cc:262:slice$12121 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$17335 [4], Q = \u_conv2d.bias6 [4]).
Adding EN signal on $auto$ff.cc:262:slice$12120 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$17335 [3], Q = \u_conv2d.bias6 [3]).
Adding EN signal on $auto$ff.cc:262:slice$12119 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$17335 [2], Q = \u_conv2d.bias6 [2]).
Adding EN signal on $auto$ff.cc:262:slice$12118 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$17335 [1], Q = \u_conv2d.bias6 [1]).
Adding EN signal on $auto$ff.cc:262:slice$12117 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$17335 [0], Q = \u_conv2d.bias6 [0]).
Adding EN signal on $auto$ff.cc:262:slice$12116 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16971 [23], Q = \u_conv2d.bias5 [23]).
Adding EN signal on $auto$ff.cc:262:slice$12115 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16971 [22], Q = \u_conv2d.bias5 [22]).
Adding EN signal on $auto$ff.cc:262:slice$12114 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16971 [21], Q = \u_conv2d.bias5 [21]).
Adding EN signal on $auto$ff.cc:262:slice$12113 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16971 [20], Q = \u_conv2d.bias5 [20]).
Adding EN signal on $auto$ff.cc:262:slice$12112 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16971 [19], Q = \u_conv2d.bias5 [19]).
Adding EN signal on $auto$ff.cc:262:slice$12111 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16971 [18], Q = \u_conv2d.bias5 [18]).
Adding EN signal on $auto$ff.cc:262:slice$12110 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16971 [17], Q = \u_conv2d.bias5 [17]).
Adding EN signal on $auto$ff.cc:262:slice$12109 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16971 [16], Q = \u_conv2d.bias5 [16]).
Adding EN signal on $auto$ff.cc:262:slice$12108 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16971 [15], Q = \u_conv2d.bias5 [15]).
Adding EN signal on $auto$ff.cc:262:slice$12107 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16971 [14], Q = \u_conv2d.bias5 [14]).
Adding EN signal on $auto$ff.cc:262:slice$12106 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16971 [13], Q = \u_conv2d.bias5 [13]).
Adding EN signal on $auto$ff.cc:262:slice$12105 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16971 [12], Q = \u_conv2d.bias5 [12]).
Adding EN signal on $auto$ff.cc:262:slice$12104 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16971 [11], Q = \u_conv2d.bias5 [11]).
Adding EN signal on $auto$ff.cc:262:slice$12103 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16971 [10], Q = \u_conv2d.bias5 [10]).
Adding EN signal on $auto$ff.cc:262:slice$12102 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16971 [9], Q = \u_conv2d.bias5 [9]).
Adding EN signal on $auto$ff.cc:262:slice$12101 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16971 [8], Q = \u_conv2d.bias5 [8]).
Adding EN signal on $auto$ff.cc:262:slice$12100 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16971 [7], Q = \u_conv2d.bias5 [7]).
Adding EN signal on $auto$ff.cc:262:slice$12099 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16971 [6], Q = \u_conv2d.bias5 [6]).
Adding EN signal on $auto$ff.cc:262:slice$12098 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16971 [5], Q = \u_conv2d.bias5 [5]).
Adding EN signal on $auto$ff.cc:262:slice$12097 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16971 [4], Q = \u_conv2d.bias5 [4]).
Adding EN signal on $auto$ff.cc:262:slice$12096 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16971 [3], Q = \u_conv2d.bias5 [3]).
Adding EN signal on $auto$ff.cc:262:slice$12095 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16971 [2], Q = \u_conv2d.bias5 [2]).
Adding EN signal on $auto$ff.cc:262:slice$12094 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16971 [1], Q = \u_conv2d.bias5 [1]).
Adding EN signal on $auto$ff.cc:262:slice$12093 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16971 [0], Q = \u_conv2d.bias5 [0]).
Adding EN signal on $auto$ff.cc:262:slice$12092 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16607 [23], Q = \u_conv2d.bias4 [23]).
Adding EN signal on $auto$ff.cc:262:slice$12091 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16607 [22], Q = \u_conv2d.bias4 [22]).
Adding EN signal on $auto$ff.cc:262:slice$12090 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16607 [21], Q = \u_conv2d.bias4 [21]).
Adding EN signal on $auto$ff.cc:262:slice$12089 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16607 [20], Q = \u_conv2d.bias4 [20]).
Adding EN signal on $auto$ff.cc:262:slice$12088 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16607 [19], Q = \u_conv2d.bias4 [19]).
Adding EN signal on $auto$ff.cc:262:slice$12087 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16607 [18], Q = \u_conv2d.bias4 [18]).
Adding EN signal on $auto$ff.cc:262:slice$12086 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16607 [17], Q = \u_conv2d.bias4 [17]).
Adding EN signal on $auto$ff.cc:262:slice$12085 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16607 [16], Q = \u_conv2d.bias4 [16]).
Adding EN signal on $auto$ff.cc:262:slice$12084 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16607 [15], Q = \u_conv2d.bias4 [15]).
Adding EN signal on $auto$ff.cc:262:slice$12083 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16607 [14], Q = \u_conv2d.bias4 [14]).
Adding EN signal on $auto$ff.cc:262:slice$12082 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16607 [13], Q = \u_conv2d.bias4 [13]).
Adding EN signal on $auto$ff.cc:262:slice$12081 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16607 [12], Q = \u_conv2d.bias4 [12]).
Adding EN signal on $auto$ff.cc:262:slice$12080 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16607 [11], Q = \u_conv2d.bias4 [11]).
Adding EN signal on $auto$ff.cc:262:slice$12079 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16607 [10], Q = \u_conv2d.bias4 [10]).
Adding EN signal on $auto$ff.cc:262:slice$12078 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16607 [9], Q = \u_conv2d.bias4 [9]).
Adding EN signal on $auto$ff.cc:262:slice$12077 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16607 [8], Q = \u_conv2d.bias4 [8]).
Adding EN signal on $auto$ff.cc:262:slice$12076 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16607 [7], Q = \u_conv2d.bias4 [7]).
Adding EN signal on $auto$ff.cc:262:slice$12075 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16607 [6], Q = \u_conv2d.bias4 [6]).
Adding EN signal on $auto$ff.cc:262:slice$12074 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16607 [5], Q = \u_conv2d.bias4 [5]).
Adding EN signal on $auto$ff.cc:262:slice$12073 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16607 [4], Q = \u_conv2d.bias4 [4]).
Adding EN signal on $auto$ff.cc:262:slice$12072 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16607 [3], Q = \u_conv2d.bias4 [3]).
Adding EN signal on $auto$ff.cc:262:slice$12071 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16607 [2], Q = \u_conv2d.bias4 [2]).
Adding EN signal on $auto$ff.cc:262:slice$12070 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16607 [1], Q = \u_conv2d.bias4 [1]).
Adding EN signal on $auto$ff.cc:262:slice$12069 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16607 [0], Q = \u_conv2d.bias4 [0]).
Adding EN signal on $auto$ff.cc:262:slice$12068 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16243 [23], Q = \u_conv2d.bias3 [23]).
Adding EN signal on $auto$ff.cc:262:slice$12067 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16243 [22], Q = \u_conv2d.bias3 [22]).
Adding EN signal on $auto$ff.cc:262:slice$12066 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16243 [21], Q = \u_conv2d.bias3 [21]).
Adding EN signal on $auto$ff.cc:262:slice$12065 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16243 [20], Q = \u_conv2d.bias3 [20]).
Adding EN signal on $auto$ff.cc:262:slice$12064 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16243 [19], Q = \u_conv2d.bias3 [19]).
Adding EN signal on $auto$ff.cc:262:slice$12063 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16243 [18], Q = \u_conv2d.bias3 [18]).
Adding EN signal on $auto$ff.cc:262:slice$12062 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16243 [17], Q = \u_conv2d.bias3 [17]).
Adding EN signal on $auto$ff.cc:262:slice$12061 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16243 [16], Q = \u_conv2d.bias3 [16]).
Adding EN signal on $auto$ff.cc:262:slice$12060 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16243 [15], Q = \u_conv2d.bias3 [15]).
Adding EN signal on $auto$ff.cc:262:slice$12059 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16243 [14], Q = \u_conv2d.bias3 [14]).
Adding EN signal on $auto$ff.cc:262:slice$12058 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16243 [13], Q = \u_conv2d.bias3 [13]).
Adding EN signal on $auto$ff.cc:262:slice$12057 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16243 [12], Q = \u_conv2d.bias3 [12]).
Adding EN signal on $auto$ff.cc:262:slice$12056 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16243 [11], Q = \u_conv2d.bias3 [11]).
Adding EN signal on $auto$ff.cc:262:slice$12055 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16243 [10], Q = \u_conv2d.bias3 [10]).
Adding EN signal on $auto$ff.cc:262:slice$12054 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16243 [9], Q = \u_conv2d.bias3 [9]).
Adding EN signal on $auto$ff.cc:262:slice$12053 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16243 [8], Q = \u_conv2d.bias3 [8]).
Adding EN signal on $auto$ff.cc:262:slice$12052 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16243 [7], Q = \u_conv2d.bias3 [7]).
Adding EN signal on $auto$ff.cc:262:slice$12051 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16243 [6], Q = \u_conv2d.bias3 [6]).
Adding EN signal on $auto$ff.cc:262:slice$12050 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16243 [5], Q = \u_conv2d.bias3 [5]).
Adding EN signal on $auto$ff.cc:262:slice$12049 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16243 [4], Q = \u_conv2d.bias3 [4]).
Adding EN signal on $auto$ff.cc:262:slice$12048 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16243 [3], Q = \u_conv2d.bias3 [3]).
Adding EN signal on $auto$ff.cc:262:slice$12047 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16243 [2], Q = \u_conv2d.bias3 [2]).
Adding EN signal on $auto$ff.cc:262:slice$12046 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16243 [1], Q = \u_conv2d.bias3 [1]).
Adding EN signal on $auto$ff.cc:262:slice$12045 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$16243 [0], Q = \u_conv2d.bias3 [0]).
Adding EN signal on $auto$ff.cc:262:slice$12044 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15879 [23], Q = \u_conv2d.bias2 [23]).
Adding EN signal on $auto$ff.cc:262:slice$12043 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15879 [22], Q = \u_conv2d.bias2 [22]).
Adding EN signal on $auto$ff.cc:262:slice$12042 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15879 [21], Q = \u_conv2d.bias2 [21]).
Adding EN signal on $auto$ff.cc:262:slice$12041 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15879 [20], Q = \u_conv2d.bias2 [20]).
Adding EN signal on $auto$ff.cc:262:slice$12040 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15879 [19], Q = \u_conv2d.bias2 [19]).
Adding EN signal on $auto$ff.cc:262:slice$12039 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15879 [18], Q = \u_conv2d.bias2 [18]).
Adding EN signal on $auto$ff.cc:262:slice$12038 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15879 [17], Q = \u_conv2d.bias2 [17]).
Adding EN signal on $auto$ff.cc:262:slice$12037 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15879 [16], Q = \u_conv2d.bias2 [16]).
Adding EN signal on $auto$ff.cc:262:slice$12036 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15879 [15], Q = \u_conv2d.bias2 [15]).
Adding EN signal on $auto$ff.cc:262:slice$12035 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15879 [14], Q = \u_conv2d.bias2 [14]).
Adding EN signal on $auto$ff.cc:262:slice$12034 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15879 [13], Q = \u_conv2d.bias2 [13]).
Adding EN signal on $auto$ff.cc:262:slice$12033 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15879 [12], Q = \u_conv2d.bias2 [12]).
Adding EN signal on $auto$ff.cc:262:slice$12032 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15879 [11], Q = \u_conv2d.bias2 [11]).
Adding EN signal on $auto$ff.cc:262:slice$12031 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15879 [10], Q = \u_conv2d.bias2 [10]).
Adding EN signal on $auto$ff.cc:262:slice$12030 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15879 [9], Q = \u_conv2d.bias2 [9]).
Adding EN signal on $auto$ff.cc:262:slice$12029 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15879 [8], Q = \u_conv2d.bias2 [8]).
Adding EN signal on $auto$ff.cc:262:slice$12028 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15879 [7], Q = \u_conv2d.bias2 [7]).
Adding EN signal on $auto$ff.cc:262:slice$12027 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15879 [6], Q = \u_conv2d.bias2 [6]).
Adding EN signal on $auto$ff.cc:262:slice$12026 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15879 [5], Q = \u_conv2d.bias2 [5]).
Adding EN signal on $auto$ff.cc:262:slice$12025 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15879 [4], Q = \u_conv2d.bias2 [4]).
Adding EN signal on $auto$ff.cc:262:slice$12024 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15879 [3], Q = \u_conv2d.bias2 [3]).
Adding EN signal on $auto$ff.cc:262:slice$12023 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15879 [2], Q = \u_conv2d.bias2 [2]).
Adding EN signal on $auto$ff.cc:262:slice$12022 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15879 [1], Q = \u_conv2d.bias2 [1]).
Adding EN signal on $auto$ff.cc:262:slice$12021 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15879 [0], Q = \u_conv2d.bias2 [0]).
Adding EN signal on $auto$ff.cc:262:slice$12020 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15515 [23], Q = \u_conv2d.bias1 [23]).
Adding EN signal on $auto$ff.cc:262:slice$12019 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15515 [22], Q = \u_conv2d.bias1 [22]).
Adding EN signal on $auto$ff.cc:262:slice$12018 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15515 [21], Q = \u_conv2d.bias1 [21]).
Adding EN signal on $auto$ff.cc:262:slice$12017 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15515 [20], Q = \u_conv2d.bias1 [20]).
Adding EN signal on $auto$ff.cc:262:slice$12016 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15515 [19], Q = \u_conv2d.bias1 [19]).
Adding EN signal on $auto$ff.cc:262:slice$12015 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15515 [18], Q = \u_conv2d.bias1 [18]).
Adding EN signal on $auto$ff.cc:262:slice$12014 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15515 [17], Q = \u_conv2d.bias1 [17]).
Adding EN signal on $auto$ff.cc:262:slice$12013 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15515 [16], Q = \u_conv2d.bias1 [16]).
Adding EN signal on $auto$ff.cc:262:slice$12012 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15515 [15], Q = \u_conv2d.bias1 [15]).
Adding EN signal on $auto$ff.cc:262:slice$12011 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15515 [14], Q = \u_conv2d.bias1 [14]).
Adding EN signal on $auto$ff.cc:262:slice$12010 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15515 [13], Q = \u_conv2d.bias1 [13]).
Adding EN signal on $auto$ff.cc:262:slice$12009 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15515 [12], Q = \u_conv2d.bias1 [12]).
Adding EN signal on $auto$ff.cc:262:slice$12008 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15515 [11], Q = \u_conv2d.bias1 [11]).
Adding EN signal on $auto$ff.cc:262:slice$12007 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15515 [10], Q = \u_conv2d.bias1 [10]).
Adding EN signal on $auto$ff.cc:262:slice$12006 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15515 [9], Q = \u_conv2d.bias1 [9]).
Adding EN signal on $auto$ff.cc:262:slice$12005 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15515 [8], Q = \u_conv2d.bias1 [8]).
Adding EN signal on $auto$ff.cc:262:slice$12004 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15515 [7], Q = \u_conv2d.bias1 [7]).
Adding EN signal on $auto$ff.cc:262:slice$12003 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15515 [6], Q = \u_conv2d.bias1 [6]).
Adding EN signal on $auto$ff.cc:262:slice$12002 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15515 [5], Q = \u_conv2d.bias1 [5]).
Adding EN signal on $auto$ff.cc:262:slice$12001 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15515 [4], Q = \u_conv2d.bias1 [4]).
Adding EN signal on $auto$ff.cc:262:slice$12000 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15515 [3], Q = \u_conv2d.bias1 [3]).
Adding EN signal on $auto$ff.cc:262:slice$11999 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15515 [2], Q = \u_conv2d.bias1 [2]).
Adding EN signal on $auto$ff.cc:262:slice$11998 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15515 [1], Q = \u_conv2d.bias1 [1]).
Adding EN signal on $auto$ff.cc:262:slice$11997 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15515 [0], Q = \u_conv2d.bias1 [0]).
Adding EN signal on $auto$ff.cc:262:slice$11996 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15151 [23], Q = \u_conv2d.bias0 [23]).
Adding EN signal on $auto$ff.cc:262:slice$11995 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15151 [22], Q = \u_conv2d.bias0 [22]).
Adding EN signal on $auto$ff.cc:262:slice$11994 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15151 [21], Q = \u_conv2d.bias0 [21]).
Adding EN signal on $auto$ff.cc:262:slice$11993 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15151 [20], Q = \u_conv2d.bias0 [20]).
Adding EN signal on $auto$ff.cc:262:slice$11992 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15151 [19], Q = \u_conv2d.bias0 [19]).
Adding EN signal on $auto$ff.cc:262:slice$11991 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15151 [18], Q = \u_conv2d.bias0 [18]).
Adding EN signal on $auto$ff.cc:262:slice$11990 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15151 [17], Q = \u_conv2d.bias0 [17]).
Adding EN signal on $auto$ff.cc:262:slice$11989 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15151 [16], Q = \u_conv2d.bias0 [16]).
Adding EN signal on $auto$ff.cc:262:slice$11988 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15151 [15], Q = \u_conv2d.bias0 [15]).
Adding EN signal on $auto$ff.cc:262:slice$11987 ($_DFF_PN0_) from module top (D = $auto$simplemap.cc:309:simplemap_bmux$15151 [14], Q = \u_conv2d.bias0 [14]).

29.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 216 unused cells and 2415 unused wires.
<suppressed ~217 debug messages>

29.5. Rerunning OPT passes. (Removed registers in this run.)

29.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~9359 debug messages>

29.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~32214 debug messages>
Removed a total of 10738 cells.

29.8. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:262:slice$12698 ($_ALDFFE_PNP_) from module top (D = \u_ctl.i_filter_base [0], Q = \u_conv2d.i_tcdm2_raddr [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$12699 ($_ALDFFE_PNP_) from module top (D = \u_ctl.i_filter_base [1], Q = \u_conv2d.i_tcdm2_raddr [1], rval = 1'0).

29.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 2 unused cells and 10745 unused wires.
<suppressed ~3 debug messages>

29.10. Rerunning OPT passes. (Removed registers in this run.)

29.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~22 debug messages>

29.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

29.13. Executing OPT_DFF pass (perform DFF optimizations).

29.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

29.15. Finished fast OPT passes.

30. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

31. Executing OPT pass (performing simple optimizations).

31.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

31.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

31.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

31.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

31.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

31.6. Executing OPT_SHARE pass.

31.7. Executing OPT_DFF pass (perform DFF optimizations).

31.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

31.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

31.10. Finished OPT passes. (There is nothing left to do.)

32. Executing TECHMAP pass (map to technology primitives).

32.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

32.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $not.
Using template $paramod$ee3d784672cdb1cb32d9a801a3af776716f16b74\_90_alu for cells of type $alu.
Using template $paramod$00298f3f8094950cb9a5ff2fda48d0d8bde8806c\_90_alu for cells of type $alu.
Using template $paramod$6909d61d78ee2d4698244dc3ef4dd45862ec0ee0\_90_alu for cells of type $alu.
Using template $paramod$c4905825bb8ecc38b98eb4167e8b007447af7884\_90_alu for cells of type $alu.
Using template $paramod$2af30114e9bd4ccb04dad757b3f0a8f6bf0615b0\_90_alu for cells of type $alu.
Using template $paramod$f28fc3f2e267d7716249e826e8c90c34ca9542c1\_90_alu for cells of type $alu.
Using template $paramod$0a77e3c00010cb33e399decd813a7380c6e25cba\_90_alu for cells of type $alu.
Using template $paramod$175e67c02b86e96b1288b9dc100122520d7240d8\_90_alu for cells of type $alu.
Using template $paramod$d4fbf181fbf74ad2c33c84c81168c20bdbe88f93\_90_alu for cells of type $alu.
Using template $paramod$8fc04fdd16a9929ec08bc9962c2522fe8f7f851f\_90_alu for cells of type $alu.
Using template $paramod$a1bc51c02ce12ac21eb18988e83292af48ed7d72\_90_alu for cells of type $alu.
Using template $paramod$79aa992f2eb7f354d4aaf651790713cf239111fa\_90_alu for cells of type $alu.
Using template $paramod$29d3d723e2c9a54df62a83d5064c4f03fe8f57c9\_90_alu for cells of type $alu.
Using template $paramod$1f812f0514ea3255703342654e053e2c502325cc\_90_alu for cells of type $alu.
Using template $paramod$754650b284649a026620fc6856e5b6886cbfe794\_90_alu for cells of type $alu.
Using template $paramod$f30f8fc2e30bd83d28cb1ad43b9d9ec083109075\_90_alu for cells of type $alu.
Using template $paramod$ea402187f386206c0840504755479bf827f47707\_90_alu for cells of type $alu.
Using template $paramod$fc972a7a46956c1788f3cb5257b53c8f1df2d0cc\_90_alu for cells of type $alu.
Using template $paramod$32efbfac1c4dc57230cf86180788fdfd12e3b511\_90_alu for cells of type $alu.
Using template $paramod$b2626aff51a34e60b9c57dceb41667aaf5650a38\_90_alu for cells of type $alu.
Using template $paramod$1eb759649286d7485bd82f4dfc30385bade4b4b3\_90_alu for cells of type $alu.
Using template $paramod$2f5fb04daf2da94d981bf9455fa4454c6ec8b705\_90_alu for cells of type $alu.
Using template $paramod$53700bbee849b2010ad0b60a61ccd204a10e24ca\_90_alu for cells of type $alu.
Using template $paramod$c59fff10bfbf6a909195f2d154211eac024f754f\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $and.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000111 for cells of type $lcu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000011000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000110 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001100 for cells of type $lcu.
Using extmapper simplemap for cells of type $or.
No more expansions possible.
<suppressed ~5613 debug messages>

33. Executing OPT pass (performing simple optimizations).

33.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~3249 debug messages>

33.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~414 debug messages>
Removed a total of 138 cells.

33.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

33.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

33.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

33.6. Executing OPT_DFF pass (perform DFF optimizations).

33.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1520 unused cells and 3051 unused wires.
<suppressed ~1521 debug messages>

33.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

33.9. Rerunning OPT passes. (Maybe there is more to do..)

33.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

33.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

33.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

33.13. Executing OPT_DFF pass (perform DFF optimizations).

33.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

33.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

33.16. Finished OPT passes. (There is nothing left to do.)

34. Executing ABC pass (technology mapping using ABC).

34.1. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Extracted 7284 gates and 8785 wires to a netlist network with 1499 inputs and 1534 outputs.

34.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/aram/Workspace/yosys_verific_rs/scripts/synth/abc/abc_base6.a21.scr 
ABC: netlist  : i/o =   1499/   1534  and =   12539  lev =   35 (7.78)  mem = 0.22 MB
ABC: Mapping (K=6)  :  lut =   2388  edge =    9782  lev =   13 (3.08)  mem = 0.11 MB
ABC: netlist  : i/o =   1499/   1534  and =   12680  lev =   32 (7.72)  mem = 0.22 MB
ABC: Mapping (K=6)  :  lut =   2355  edge =    9746  lev =   11 (2.95)  mem = 0.12 MB
ABC: netlist  : i/o =   1499/   1534  and =   12710  lev =   32 (7.67)  mem = 0.22 MB
ABC: Mapping (K=6)  :  lut =   2351  edge =    9762  lev =   11 (2.88)  mem = 0.12 MB
ABC: netlist  : i/o =   1499/   1534  and =   12990  lev =   32 (7.03)  mem = 0.22 MB
ABC: Mapping (K=6)  :  lut =   2358  edge =    9780  lev =   10 (2.85)  mem = 0.12 MB
ABC: netlist  : i/o =   1499/   1534  and =   12602  lev =   33 (7.70)  mem = 0.22 MB
ABC: Mapping (K=6)  :  lut =   2371  edge =    9754  lev =   11 (2.88)  mem = 0.11 MB
ABC: netlist  : i/o =   1499/   1534  and =   12597  lev =   33 (7.70)  mem = 0.28 MB
ABC: Mapping (K=6)  :  lut =   2322  edge =    9746  lev =   10 (2.79)  mem = 0.11 MB
ABC: netlist  : i/o =   1499/   1534  and =   12757  lev =   33 (7.65)  mem = 0.28 MB
ABC: Mapping (K=6)  :  lut =   2322  edge =    9790  lev =   10 (2.78)  mem = 0.12 MB
ABC: netlist  : i/o =   1499/   1534  and =   12792  lev =   33 (7.71)  mem = 0.28 MB
ABC: Mapping (K=6)  :  lut =   2326  edge =    9785  lev =    9 (2.81)  mem = 0.12 MB
ABC: netlist  : i/o =   1499/   1534  and =   12856  lev =   33 (7.14)  mem = 0.28 MB
ABC: Mapping (K=6)  :  lut =   2358  edge =    9716  lev =   10 (2.90)  mem = 0.12 MB
ABC: netlist  : i/o =   1499/   1534  and =   12759  lev =   33 (7.61)  mem = 0.28 MB
ABC: Mapping (K=6)  :  lut =   2355  edge =    9727  lev =   10 (2.84)  mem = 0.12 MB
ABC: netlist  : i/o =   1499/   1534  and =   12782  lev =   33 (7.69)  mem = 0.28 MB
ABC: Mapping (K=6)  :  lut =   2357  edge =    9713  lev =   10 (2.83)  mem = 0.12 MB
ABC: netlist  : i/o =   1499/   1534  and =   12754  lev =   33 (7.68)  mem = 0.28 MB
ABC: Mapping (K=6)  :  lut =   2327  edge =    9653  lev =   10 (2.81)  mem = 0.11 MB
ABC: netlist  : i/o =   1499/   1534  and =   12760  lev =   33 (7.68)  mem = 0.28 MB
ABC: Mapping (K=6)  :  lut =   2333  edge =    9654  lev =   10 (2.81)  mem = 0.11 MB
ABC: netlist  : i/o =   1499/   1534  and =   12597  lev =   33 (7.70)  mem = 0.22 MB
ABC: Mapping (K=6)  :  lut =   2322  edge =    9746  lev =   10 (2.79)  mem = 0.11 MB
ABC: netlist  : i/o =   1499/   1534  and =   12597  lev =   33 (7.70)  mem = 0.28 MB
ABC: Mapping (K=6)  :  lut =   2322  edge =    9746  lev =   10 (2.79)  mem = 0.11 MB
ABC: netlist  : i/o =   1499/   1534  and =   12668  lev =   35 (7.71)  mem = 0.22 MB
ABC: Mapping (K=6)  :  lut =   2322  edge =    9746  lev =   10 (2.79)  mem = 0.11 MB
ABC: + write_blif <abc-temp-dir>/output.blif 

34.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     2361
ABC RESULTS:        internal signals:     5752
ABC RESULTS:           input signals:     1499
ABC RESULTS:          output signals:     1534
Removing temp directory.

35. Executing OPT pass (performing simple optimizations).

35.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

35.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

35.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

35.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

35.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

35.6. Executing OPT_DFF pass (perform DFF optimizations).

35.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 4008 unused wires.
<suppressed ~33 debug messages>

35.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

35.9. Rerunning OPT passes. (Maybe there is more to do..)

35.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

35.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

35.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

35.13. Executing OPT_DFF pass (perform DFF optimizations).

35.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

35.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

35.16. Finished OPT passes. (There is nothing left to do.)

36. Executing HIERARCHY pass (managing design hierarchy).

36.1. Analyzing design hierarchy..
Top module:  \top

36.2. Analyzing design hierarchy..
Top module:  \top
Removed 0 unused modules.

37. Printing statistics.

=== top ===

   Number of wires:               2420
   Number of wire bits:           7182
   Number of public wires:         431
   Number of public wire bits:    5193
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3674
     $_ALDFFE_PNP_                  60
     $_ALDFF_PN_                    20
     $_DFFE_PN0N_                   43
     $_DFFE_PN0P_                  879
     $_DFFE_PN1N_                    1
     $_DFFE_PN1P_                   26
     $_DFF_PN0_                    315
     $_DFF_PN1_                      5
     $lut                         2325

38. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 223 unused wires.
<suppressed ~223 debug messages>

39. Executing BLIF backend.

Warnings: 75 unique messages, 75 total
End of script. Logfile hash: f19a8f4866, CPU: user 28.23s system 0.14s, MEM: 85.76 MB peak
Yosys 0.14+36 (git sha1 15a4e900b, gcc 7.1.0 -fPIC -Os)
Time spent: 47% 1x abc (24 sec), 23% 31x opt_dff (11 sec), ...
