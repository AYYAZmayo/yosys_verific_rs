
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.14+36 (git sha1 15a4e900b, gcc 7.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jan22_SW_Release, released at Sat Jan 29 02:42:49 2022.

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jan22_SW_Release, released at Sat Jan 29 02:42:49 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbf_crc16.v'
VERIFIC-INFO [VERI-1328] usbf_crc16.v:76: analyzing included file 'usbf_defines.v'
VERIFIC-INFO [VERI-2320] usbf_crc16.v:76: back to file 'usbf_crc16.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbf_crc5.v'
VERIFIC-INFO [VERI-1328] usbf_crc5.v:76: analyzing included file 'usbf_defines.v'
VERIFIC-INFO [VERI-2320] usbf_crc5.v:76: back to file 'usbf_crc5.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbf_defines.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbf_ep_rf.v'
VERIFIC-INFO [VERI-1328] usbf_ep_rf.v:93: analyzing included file 'usbf_defines.v'
VERIFIC-INFO [VERI-2320] usbf_ep_rf.v:93: back to file 'usbf_ep_rf.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbf_ep_rf_dummy.v'
VERIFIC-INFO [VERI-1328] usbf_ep_rf_dummy.v:76: analyzing included file 'usbf_defines.v'
VERIFIC-INFO [VERI-2320] usbf_ep_rf_dummy.v:76: back to file 'usbf_ep_rf_dummy.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbf_idma.v'
VERIFIC-INFO [VERI-1328] usbf_idma.v:110: analyzing included file 'usbf_defines.v'
VERIFIC-INFO [VERI-2320] usbf_idma.v:110: back to file 'usbf_idma.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbf_mem_arb.v'
VERIFIC-INFO [VERI-1328] usbf_mem_arb.v:90: analyzing included file 'usbf_defines.v'
VERIFIC-INFO [VERI-2320] usbf_mem_arb.v:90: back to file 'usbf_mem_arb.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbf_pa.v'
VERIFIC-INFO [VERI-1328] usbf_pa.v:94: analyzing included file 'usbf_defines.v'
VERIFIC-INFO [VERI-2320] usbf_pa.v:94: back to file 'usbf_pa.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbf_pd.v'
VERIFIC-INFO [VERI-1328] usbf_pd.v:101: analyzing included file 'usbf_defines.v'
VERIFIC-INFO [VERI-2320] usbf_pd.v:101: back to file 'usbf_pd.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbf_pe.v'
VERIFIC-INFO [VERI-1328] usbf_pe.v:116: analyzing included file 'usbf_defines.v'
VERIFIC-INFO [VERI-2320] usbf_pe.v:116: back to file 'usbf_pe.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbf_pl.v'
VERIFIC-INFO [VERI-1328] usbf_pl.v:100: analyzing included file 'usbf_defines.v'
VERIFIC-INFO [VERI-2320] usbf_pl.v:100: back to file 'usbf_pl.v'
VERIFIC-INFO [VERI-2561] usbf_pl.v:384: undeclared symbol 'send_zero_length', assumed default net type 'wire'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbf_rf.v'
VERIFIC-INFO [VERI-1328] usbf_rf.v:108: analyzing included file 'usbf_defines.v'
VERIFIC-INFO [VERI-2320] usbf_rf.v:108: back to file 'usbf_rf.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbf_top.v'
VERIFIC-INFO [VERI-1328] usbf_top.v:110: analyzing included file 'usbf_defines.v'
VERIFIC-INFO [VERI-2320] usbf_top.v:110: back to file 'usbf_top.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbf_utmi_if.v'
VERIFIC-INFO [VERI-1328] usbf_utmi_if.v:101: analyzing included file 'usbf_defines.v'
VERIFIC-INFO [VERI-2320] usbf_utmi_if.v:101: back to file 'usbf_utmi_if.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbf_utmi_ls.v'
VERIFIC-INFO [VERI-1328] usbf_utmi_ls.v:99: analyzing included file 'usbf_defines.v'
VERIFIC-INFO [VERI-2320] usbf_utmi_ls.v:99: back to file 'usbf_utmi_ls.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbf_wb.v'
VERIFIC-INFO [VERI-1328] usbf_wb.v:95: analyzing included file 'usbf_defines.v'
VERIFIC-INFO [VERI-2320] usbf_wb.v:95: back to file 'usbf_wb.v'

3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] usbf_top.v:112: compiling module 'usbf_top'
VERIFIC-INFO [VERI-1018] usbf_utmi_if.v:103: compiling module 'usbf_utmi_if'
VERIFIC-INFO [VERI-1018] usbf_utmi_ls.v:101: compiling module 'usbf_utmi_ls'
VERIFIC-WARNING [VERI-1173] usbf_utmi_ls.v:448: synthesis - simulation differences may occur when using full_case directive
VERIFIC-INFO [VERI-1018] usbf_pl.v:102: compiling module 'usbf_pl'
VERIFIC-INFO [VERI-1018] usbf_pd.v:103: compiling module 'usbf_pd'
VERIFIC-INFO [VERI-1018] usbf_crc5.v:84: compiling module 'usbf_crc5'
VERIFIC-INFO [VERI-1018] usbf_crc16.v:84: compiling module 'usbf_crc16'
VERIFIC-WARNING [VERI-1173] usbf_pd.v:373: synthesis - simulation differences may occur when using full_case directive
VERIFIC-INFO [VERI-1018] usbf_pa.v:96: compiling module 'usbf_pa'
VERIFIC-WARNING [VERI-1173] usbf_pa.v:314: synthesis - simulation differences may occur when using full_case directive
VERIFIC-INFO [VERI-1018] usbf_idma.v:112: compiling module 'usbf_idma'
VERIFIC-WARNING [VERI-1209] usbf_idma.v:289: expression size 17 truncated to fit in target size 15
VERIFIC-WARNING [VERI-1173] usbf_idma.v:462: synthesis - simulation differences may occur when using full_case directive
VERIFIC-INFO [VERI-1018] usbf_pe.v:118: compiling module 'usbf_pe'
VERIFIC-WARNING [VERI-1173] usbf_pe.v:438: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-1173] usbf_pe.v:446: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-1173] usbf_pe.v:453: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-1173] usbf_pe.v:460: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-1173] usbf_pe.v:479: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-1173] usbf_pe.v:424: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-1173] usbf_pe.v:493: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-1173] usbf_pe.v:532: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-1173] usbf_pe.v:501: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-1173] usbf_pe.v:845: synthesis - simulation differences may occur when using full_case directive
VERIFIC-INFO [VERI-1018] usbf_mem_arb.v:92: compiling module 'usbf_mem_arb'
VERIFIC-INFO [VERI-1018] usbf_rf.v:111: compiling module 'usbf_rf'
VERIFIC-WARNING [VERI-1173] usbf_rf.v:307: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-1173] usbf_rf.v:391: synthesis - simulation differences may occur when using full_case directive
VERIFIC-INFO [VERI-1018] usbf_ep_rf.v:96: compiling module 'usbf_ep_rf'
VERIFIC-INFO [VERI-1018] usbf_ep_rf_dummy.v:79: compiling module 'usbf_ep_rf_dummy'
VERIFIC-INFO [VERI-1018] usbf_wb.v:97: compiling module 'usbf_wb'
VERIFIC-WARNING [VERI-1173] usbf_wb.v:209: synthesis - simulation differences may occur when using full_case directive
Importing module usbf_top.
Importing module usbf_utmi_if.
Importing module usbf_pl.
Importing module usbf_utmi_ls.
Importing module usbf_pd.
Importing module usbf_crc5.
Importing module usbf_idma.
Importing module usbf_crc16.
Importing module usbf_pa.
Importing module usbf_pe.
Importing module usbf_mem_arb.
Importing module usbf_rf.
Importing module usbf_ep_rf.
Importing module usbf_wb.
Importing module usbf_ep_rf_dummy.

3.1. Analyzing design hierarchy..
Top module:  \usbf_top
Used module:     \usbf_wb
Used module:     \usbf_rf
Used module:         \usbf_ep_rf_dummy
Used module:         \usbf_ep_rf
Used module:     \usbf_mem_arb
Used module:     \usbf_pl
Used module:         \usbf_pe
Used module:         \usbf_idma
Used module:         \usbf_pa
Used module:             \usbf_crc16
Used module:         \usbf_pd
Used module:             \usbf_crc5
Used module:     \usbf_utmi_if
Used module:         \usbf_utmi_ls

3.2. Analyzing design hierarchy..
Top module:  \usbf_top
Used module:     \usbf_wb
Used module:     \usbf_rf
Used module:         \usbf_ep_rf_dummy
Used module:         \usbf_ep_rf
Used module:     \usbf_mem_arb
Used module:     \usbf_pl
Used module:         \usbf_pe
Used module:         \usbf_idma
Used module:         \usbf_pa
Used module:             \usbf_crc16
Used module:         \usbf_pd
Used module:             \usbf_crc5
Used module:     \usbf_utmi_if
Used module:         \usbf_utmi_ls
Removed 0 unused modules.

4. Executing PROC pass (convert processes to netlists).

4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

4.4. Executing PROC_INIT pass (extract init attributes).

4.5. Executing PROC_ARST pass (detect async resets in processes).

4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

4.7. Executing PROC_DLATCH pass (convert process syncs to latches).

4.8. Executing PROC_DFF pass (convert process syncs to FFs).

4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_ep_rf_dummy.
<suppressed ~4 debug messages>
Optimizing module usbf_wb.
<suppressed ~1 debug messages>
Optimizing module usbf_ep_rf.
<suppressed ~15 debug messages>
Optimizing module usbf_rf.
<suppressed ~5 debug messages>
Optimizing module usbf_mem_arb.
Optimizing module usbf_pe.
<suppressed ~10 debug messages>
Optimizing module usbf_pa.
<suppressed ~1 debug messages>
Optimizing module usbf_crc16.
Optimizing module usbf_idma.
<suppressed ~7 debug messages>
Optimizing module usbf_crc5.
Optimizing module usbf_pd.
<suppressed ~3 debug messages>
Optimizing module usbf_utmi_ls.
<suppressed ~6 debug messages>
Optimizing module usbf_pl.
<suppressed ~4 debug messages>
Optimizing module usbf_utmi_if.
<suppressed ~1 debug messages>
Optimizing module usbf_top.

5. Executing FLATTEN pass (flatten design).
Deleting now unused module usbf_ep_rf_dummy.
Deleting now unused module usbf_wb.
Deleting now unused module usbf_ep_rf.
Deleting now unused module usbf_rf.
Deleting now unused module usbf_mem_arb.
Deleting now unused module usbf_pe.
Deleting now unused module usbf_pa.
Deleting now unused module usbf_crc16.
Deleting now unused module usbf_idma.
Deleting now unused module usbf_crc5.
Deleting now unused module usbf_pd.
Deleting now unused module usbf_utmi_ls.
Deleting now unused module usbf_pl.
Deleting now unused module usbf_utmi_if.
<suppressed ~29 debug messages>

6. Executing TRIBUF pass.

7. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.
<suppressed ~36 debug messages>

8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..
Removed 62 unused cells and 6319 unused wires.
<suppressed ~812 debug messages>

9. Executing CHECK pass (checking for obvious problems).
Checking module usbf_top...
Found and reported 0 problems.

10. Executing DEMINOUT pass (demote inout ports to input or output).

11. Executing OPT pass (performing simple optimizations).

11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.
<suppressed ~97 debug messages>

11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
<suppressed ~99 debug messages>
Removed a total of 33 cells.

11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbf_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~216 debug messages>

11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbf_top.
    New ctrl vector for $pmux cell $flatten\u1.\u0.$verific$Select_213$usbf_pd.v:433$2702: { $flatten\u1.\u0.$verific$n584$2448 $flatten\u1.\u0.$verific$n586$2450 }
    New ctrl vector for $pmux cell $flatten\u1.\u1.$verific$Select_148$usbf_pa.v:382$3374: { $flatten\u1.\u1.$verific$n401$3218 $flatten\u1.\u1.$verific$n406$3223 }
    New ctrl vector for $pmux cell $flatten\u1.\u1.$verific$Select_154$usbf_pa.v:382$3380: { $flatten\u1.\u1.$verific$n402$3219 $flatten\u1.\u1.$verific$n403$3220 $flatten\u1.\u1.$verific$n404$3221 }
    New ctrl vector for $pmux cell $flatten\u1.\u1.$verific$Select_156$usbf_pa.v:382$3382: { $flatten\u1.\u1.$verific$n404$3221 $flatten\u1.\u1.$verific$n405$3222 }
    New ctrl vector for $pmux cell $flatten\u1.\u1.$verific$Select_158$usbf_pa.v:382$3383: { $flatten\u1.\u1.$verific$n404$3221 $flatten\u1.\u1.$verific$n405$3222 }
    New ctrl vector for $pmux cell $flatten\u1.\u2.$verific$Select_273$usbf_idma.v:631$3061: { $flatten\u1.\u2.$verific$n1445$2802 $flatten\u1.\u2.$verific$n1463$2810 }
    New ctrl vector for $pmux cell $flatten\u1.\u2.$verific$Select_277$usbf_idma.v:631$3065: { $flatten\u1.\u2.$verific$n1446$2803 $flatten\u1.\u2.$verific$n1447$2804 }
    New ctrl vector for $pmux cell $flatten\u1.\u3.$verific$Select_688$usbf_pe.v:1091$4223: { $flatten\u1.\u3.$verific$n1654$3635 $flatten\u1.\u3.$verific$n1660$3641 }
    New ctrl vector for $pmux cell $flatten\u1.\u3.$verific$select_115$usbf_pe.v:485$3842: { $flatten\u1.\u3.$verific$n253$3420 $auto$opt_reduce.cc:134:opt_pmux$9185 $flatten\u1.\u3.$verific$n258$3424 }
    New ctrl vector for $pmux cell $flatten\u1.\u3.$verific$select_166$usbf_pe.v:487$3896: { $flatten\u1.\u3.$verific$n275$3432 $flatten\u1.\u3.$verific$n283$3436 $flatten\u1.\u3.$verific$n285$3438 $auto$opt_reduce.cc:134:opt_pmux$9189 $auto$opt_reduce.cc:134:opt_pmux$9187 $flatten\u1.\u3.$verific$n311$3449 }
    New ctrl vector for $pmux cell $flatten\u1.\u3.$verific$select_172$usbf_pe.v:498$3902: { $flatten\u1.\u3.$verific$n319$3451 $flatten\u1.\u3.$verific$n320$3452 $flatten\u1.\u3.$verific$n321$3453 }
    New ctrl vector for $pmux cell $flatten\u1.\u3.$verific$select_207$usbf_pe.v:538$3905: $auto$opt_reduce.cc:134:opt_pmux$9191
    New ctrl vector for $pmux cell $flatten\u1.\u3.$verific$select_267$usbf_pe.v:539$3919: { $flatten\u1.\u3.$verific$n423$3454 $auto$opt_reduce.cc:134:opt_pmux$9197 $auto$opt_reduce.cc:134:opt_pmux$9195 $auto$opt_reduce.cc:134:opt_pmux$9193 $flatten\u1.\u3.$verific$n311$3449 }
    New ctrl vector for $pmux cell $flatten\u1.\u3.$verific$select_686$usbf_pe.v:1091$4221: { $flatten\u1.\u3.$verific$n1654$3635 $flatten\u1.\u3.$verific$n1660$3641 }
    New ctrl vector for $pmux cell $flatten\u1.\u3.$verific$select_689$usbf_pe.v:1091$4224: { $flatten\u1.\u3.$verific$n1654$3635 $flatten\u1.\u3.$verific$n1656$3637 $flatten\u1.\u3.$verific$n1657$3638 $flatten\u1.\u3.$verific$n1658$3639 $flatten\u1.\u3.$verific$n1659$3640 $flatten\u1.\u3.$verific$n1660$3641 $flatten\u1.\u3.$verific$n1661$3642 $flatten\u1.\u3.$verific$n1662$3643 $auto$opt_reduce.cc:134:opt_pmux$9199 }
    New ctrl vector for $pmux cell $flatten\u1.\u3.$verific$select_725$usbf_pe.v:449$4215: $flatten\u1.\u3.$verific$n194$3415
    New ctrl vector for $pmux cell $flatten\u1.\u3.$verific$select_79$usbf_pe.v:441$3820: $flatten\u1.\u3.$verific$n183$3413
    New ctrl vector for $pmux cell $flatten\u0.\u0.$verific$Select_358$usbf_utmi_ls.v:650$2359: { $flatten\u0.\u0.$verific$n1015$2016 $flatten\u0.\u0.$verific$n1024$2025 }
    New ctrl vector for $pmux cell $flatten\u0.\u0.$verific$Select_360$usbf_utmi_ls.v:650$2361: { $flatten\u0.\u0.$verific$n1017$2018 $flatten\u0.\u0.$verific$n1020$2021 }
    New ctrl vector for $pmux cell $flatten\u0.\u0.$verific$Select_367$usbf_utmi_ls.v:650$2368: { $flatten\u0.\u0.$verific$n1022$2023 $flatten\u0.\u0.$verific$n1023$2024 }
    New ctrl vector for $pmux cell $flatten\u0.\u0.$verific$Select_333$usbf_utmi_ls.v:650$2335: { $flatten\u0.\u0.$verific$n1011$2012 $flatten\u0.\u0.$verific$n1012$2013 $flatten\u0.\u0.$verific$n1013$2014 $flatten\u0.\u0.$verific$n1014$2015 $flatten\u0.\u0.$verific$n1015$2016 $flatten\u0.\u0.$verific$n1017$2018 $flatten\u0.\u0.$verific$n1020$2021 }
    New ctrl vector for $pmux cell $flatten\u0.\u0.$verific$Select_336$usbf_utmi_ls.v:650$2338: { $flatten\u0.\u0.$verific$n1028$2028 $flatten\u0.\u0.$verific$n1012$2013 }
    New ctrl vector for $pmux cell $flatten\u0.\u0.$verific$Select_339$usbf_utmi_ls.v:650$2341: { $flatten\u0.\u0.$verific$n1031$2030 $flatten\u0.\u0.$verific$n1012$2013 $flatten\u0.\u0.$verific$n1017$2018 }
    New ctrl vector for $pmux cell $flatten\u0.\u0.$verific$Select_345$usbf_utmi_ls.v:650$2346: { $flatten\u0.\u0.$verific$n1015$2016 $flatten\u0.\u0.$verific$n1038$2033 }
    New ctrl vector for $pmux cell $flatten\u0.\u0.$verific$Select_348$usbf_utmi_ls.v:650$2349: { $flatten\u0.\u0.$verific$n1040$2034 $flatten\u0.\u0.$verific$n1014$2015 }
    New ctrl vector for $pmux cell $flatten\u0.\u0.$verific$Select_351$usbf_utmi_ls.v:650$2352: { $flatten\u0.\u0.$verific$n1012$2013 $flatten\u0.\u0.$verific$n1013$2014 $flatten\u0.\u0.$verific$n1019$2020 }
    New ctrl vector for $pmux cell $flatten\u0.\u0.$verific$Select_353$usbf_utmi_ls.v:650$2354: { $flatten\u0.\u0.$verific$n1012$2013 $flatten\u0.\u0.$verific$n1013$2014 }
    New ctrl vector for $pmux cell $flatten\u0.\u0.$verific$Select_356$usbf_utmi_ls.v:650$2357: { $flatten\u0.\u0.$verific$n1015$2016 $flatten\u0.\u0.$verific$n1064$2039 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_77$usbf_wb.v:278$9161: { $flatten\u5.$verific$n347$9090 $auto$opt_reduce.cc:134:opt_pmux$9201 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_79$usbf_wb.v:278$9163: { $flatten\u5.$verific$n347$9090 $flatten\u5.$verific$n348$9091 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_84$usbf_wb.v:278$9168: { $auto$opt_reduce.cc:134:opt_pmux$9203 $flatten\u5.$verific$n350$9093 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$select_80$usbf_wb.v:278$9164: { $flatten\u5.$verific$n347$9090 $auto$opt_reduce.cc:134:opt_pmux$9205 $flatten\u5.$verific$n350$9093 $flatten\u5.$verific$n351$9094 $flatten\u5.$verific$n352$9095 }
  Optimizing cells in module \usbf_top.
Performed a total of 32 changes.

11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

11.6. Executing OPT_DFF pass (perform DFF optimizations).
Removing never-active async load on $verific$VStatus_r_reg$usbf_top.v:269$24 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u5.$verific$wb_data_o_reg$usbf_wb.v:166$9118 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u5.$verific$state_reg$usbf_wb.v:198$9137 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u3.$verific$uc_dpd_reg$usbf_ep_rf.v:350$8937 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u3.$verific$uc_bsel_reg$usbf_ep_rf.v:360$8942 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u3.$verific$int_stat_reg$usbf_ep_rf.v:340$8931 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u3.$verific$ienb_reg$usbf_ep_rf.v:268$8890 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u3.$verific$iena_reg$usbf_ep_rf.v:268$8891 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u3.$verific$dma_out_left_reg$usbf_ep_rf.v:433$9010 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u3.$verific$dma_out_cnt_reg$usbf_ep_rf.v:397$8984 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u3.$verific$dma_in_cnt_reg$usbf_ep_rf.v:422$9002 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u3.$verific$csr1_reg$usbf_ep_rf.v:250$8881 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u3.$verific$csr0_reg$usbf_ep_rf.v:250$8880 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u3.$verific$buf1_reg$usbf_ep_rf.v:294$8908 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u3.$verific$buf0_reg$usbf_ep_rf.v:282$8902 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u3.$verific$buf0_orig_reg$usbf_ep_rf.v:303$8911 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u3.$verific$buf0_orig_m3_reg$usbf_ep_rf.v:449$9025 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u2.$verific$uc_dpd_reg$usbf_ep_rf.v:350$8937 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u2.$verific$uc_bsel_reg$usbf_ep_rf.v:360$8942 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u2.$verific$int_stat_reg$usbf_ep_rf.v:340$8931 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u2.$verific$ienb_reg$usbf_ep_rf.v:268$8890 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u2.$verific$iena_reg$usbf_ep_rf.v:268$8891 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u2.$verific$dma_out_left_reg$usbf_ep_rf.v:433$9010 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u2.$verific$dma_out_cnt_reg$usbf_ep_rf.v:397$8984 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u2.$verific$dma_in_cnt_reg$usbf_ep_rf.v:422$9002 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u2.$verific$csr1_reg$usbf_ep_rf.v:250$8881 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u2.$verific$csr0_reg$usbf_ep_rf.v:250$8880 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u2.$verific$buf1_reg$usbf_ep_rf.v:294$8908 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u2.$verific$buf0_reg$usbf_ep_rf.v:282$8902 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u2.$verific$buf0_orig_reg$usbf_ep_rf.v:303$8911 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u2.$verific$buf0_orig_m3_reg$usbf_ep_rf.v:449$9025 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u1.$verific$uc_dpd_reg$usbf_ep_rf.v:350$8937 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u1.$verific$uc_bsel_reg$usbf_ep_rf.v:360$8942 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u1.$verific$int_stat_reg$usbf_ep_rf.v:340$8931 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u1.$verific$ienb_reg$usbf_ep_rf.v:268$8890 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u1.$verific$iena_reg$usbf_ep_rf.v:268$8891 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u1.$verific$dma_out_left_reg$usbf_ep_rf.v:433$9010 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u1.$verific$dma_out_cnt_reg$usbf_ep_rf.v:397$8984 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u1.$verific$dma_in_cnt_reg$usbf_ep_rf.v:422$9002 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u1.$verific$csr1_reg$usbf_ep_rf.v:250$8881 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u1.$verific$csr0_reg$usbf_ep_rf.v:250$8880 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u1.$verific$buf1_reg$usbf_ep_rf.v:294$8908 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u1.$verific$buf0_reg$usbf_ep_rf.v:282$8902 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u1.$verific$buf0_orig_reg$usbf_ep_rf.v:303$8911 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u1.$verific$buf0_orig_m3_reg$usbf_ep_rf.v:449$9025 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u0.$verific$uc_dpd_reg$usbf_ep_rf.v:350$8937 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u0.$verific$uc_bsel_reg$usbf_ep_rf.v:360$8942 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u0.$verific$int_stat_reg$usbf_ep_rf.v:340$8931 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u0.$verific$ienb_reg$usbf_ep_rf.v:268$8890 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u0.$verific$iena_reg$usbf_ep_rf.v:268$8891 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u0.$verific$dma_out_left_reg$usbf_ep_rf.v:433$9010 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u0.$verific$dma_out_cnt_reg$usbf_ep_rf.v:397$8984 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u0.$verific$dma_in_cnt_reg$usbf_ep_rf.v:422$9002 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u0.$verific$csr1_reg$usbf_ep_rf.v:250$8881 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u0.$verific$csr0_reg$usbf_ep_rf.v:250$8880 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u0.$verific$buf1_reg$usbf_ep_rf.v:294$8908 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u0.$verific$buf0_reg$usbf_ep_rf.v:282$8902 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u0.$verific$buf0_orig_reg$usbf_ep_rf.v:303$8911 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u0.$verific$buf0_orig_m3_reg$usbf_ep_rf.v:449$9025 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.$verific$utmi_vend_stat_r_reg$usbf_rf.v:322$4712 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.$verific$utmi_vend_ctrl_reg$usbf_rf.v:345$4727 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.$verific$utmi_vend_ctrl_r_reg$usbf_rf.v:342$4725 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u0.\u0.$verific$chirp_cnt_reg$usbf_utmi_ls.v:399$2272 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.$verific$intb_msk_reg$usbf_rf.v:388$4755 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.$verific$inta_msk_reg$usbf_rf.v:388$4754 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.$verific$int_srcb_reg$usbf_rf.v:673$4756 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.$verific$int_srca_reg$usbf_rf.v:781$5065 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u0.$verific$rx_data_reg$usbf_utmi_if.v:204$1241 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u0.\u0.$verific$OpMode_reg$usbf_utmi_ls.v:256$2139 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.$verific$funct_adr_reg$usbf_rf.v:370$4743 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.$verific$dout_reg$usbf_rf.v:412$4758 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.$verific$csr_reg$usbf_rf.v:492$4889 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.$verific$buf1_reg$usbf_rf.v:558$4955 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.$verific$buf0_reg$usbf_rf.v:525$4922 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u3.$verific$tx_data_to_cnt_reg$usbf_pe.v:768$4091 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u3.$verific$token_pid_sel_reg$usbf_pe.v:414$3814 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u3.$verific$this_dpid_reg$usbf_pe.v:539$3920 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u3.$verific$state_reg$usbf_pe.v:823$4145 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u3.$verific$size_next_r_reg$usbf_pe.v:665$4019 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u3.$verific$rx_ack_to_cnt_reg$usbf_pe.v:751$4081 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u3.$verific$next_dpid_reg$usbf_pe.v:487$3897 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u3.$verific$new_sizeb_reg$usbf_pe.v:654$4012 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u3.$verific$new_size_reg$usbf_pe.v:657$4015 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u3.$verific$idin_reg$usbf_pe.v:704$4053 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u3.$verific$adr_reg$usbf_pe.v:605$3965 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u3.$verific$adr_r_reg$usbf_pe.v:662$4017 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u2.$verific$state_reg$usbf_idma.v:449$3028 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u2.$verific$sizu_c_reg$usbf_idma.v:346$2964 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u2.$verific$sizd_c_reg$usbf_idma.v:326$2948 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u2.$verific$rx_data_st_r_reg$usbf_idma.v:265$2901 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u2.$verific$rd_buf1_reg$usbf_idma.v:403$3007 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u2.$verific$rd_buf0_reg$usbf_idma.v:400$3005 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u2.$verific$last_buf_adr_reg$usbf_idma.v:289$2919 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u0.$verific$DataOut_reg$usbf_utmi_if.v:214$1247 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u2.$verific$dtmp_r_reg$usbf_idma.v:372$2983 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u2.$verific$dout_r_reg$usbf_idma.v:382$2994 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u2.$verific$adr_cw_reg$usbf_idma.v:286$2915 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u2.$verific$adr_cb_reg$usbf_idma.v:307$2931 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u1.$verific$state_reg$usbf_pa.v:303$3355 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u1.$verific$crc16_reg$usbf_pa.v:264$3311 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u0.$verific$token1_reg$usbf_pd.v:251$2541 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u0.$verific$token0_reg$usbf_pd.v:248$2539 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u0.$verific$state_reg$usbf_pd.v:360$2657 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u0.$verific$pid_reg$usbf_pd.v:221$2492 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u0.$verific$d2_reg$usbf_pd.v:321$2599 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u0.$verific$d1_reg$usbf_pd.v:321$2598 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u0.$verific$d0_reg$usbf_pd.v:321$2597 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u0.$verific$crc16_sum_reg$usbf_pd.v:338$2612 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.$verific$sof_time_reg$usbf_pl.v:308$1382 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.$verific$mfm_cnt_reg$usbf_pl.v:299$1375 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.$verific$hms_cnt_reg$usbf_pl.v:321$1389 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.$verific$frame_no_r_reg$usbf_pl.v:283$1362 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u0.\u0.$verific$state_reg$usbf_utmi_ls.v:417$2280 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u0.\u0.$verific$ps_cnt_reg$usbf_utmi_ls.v:320$2184 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u0.\u0.$verific$me_ps_reg$usbf_utmi_ls.v:358$2227 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u0.\u0.$verific$me_ps2_reg$usbf_utmi_ls.v:367$2236 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u0.\u0.$verific$me_cnt_reg$usbf_utmi_ls.v:376$2248 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u0.\u0.$verific$line_state_r_reg$usbf_utmi_ls.v:265$2143 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u0.\u0.$verific$idle_cnt1_reg$usbf_utmi_ls.v:329$2196 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u0.\u0.$verific$idle_cnt1_next_reg$usbf_utmi_ls.v:332$2199 ($aldff) from module usbf_top.

11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..
Removed 33 unused cells and 158 unused wires.
<suppressed ~34 debug messages>

11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.

11.9. Rerunning OPT passes. (Maybe there is more to do..)

11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbf_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~216 debug messages>

11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbf_top.
Performed a total of 0 changes.

11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

11.13. Executing OPT_DFF pass (perform DFF optimizations).

11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..

11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.

11.16. Finished OPT passes. (There is nothing left to do.)

12. Executing FSM pass (extract and optimize FSM).

12.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking usbf_top.u0.u0.OpMode as FSM state register:
    Register is connected to module port.
    Users of register don't seem to benefit from recoding.
Found FSM state register usbf_top.u1.u0.state.
Not marking usbf_top.u1.u3.next_dpid as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking usbf_top.u1.u3.this_dpid as FSM state register:
    Users of register don't seem to benefit from recoding.
Found FSM state register usbf_top.u5.state.

12.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\u1.u0.state' from module `\usbf_top'.
  found $dff cell for state register: $flatten\u1.\u0.$verific$state_reg$usbf_pd.v:360$2657
  root of input selection tree: $flatten\u1.\u0.$verific$n458$2472
  found reset state: 4'0001 (guessed from mux tree)
  found ctrl input: \rst_i
  found state code: 4'0001
  found ctrl input: $flatten\u1.\u0.$verific$n586$2450
  found ctrl input: $flatten\u1.\u0.$verific$n585$2449
  found ctrl input: $flatten\u1.\u0.$verific$n584$2448
  found ctrl input: $flatten\u1.\u0.$verific$n583$2447
  found state code: 4'0000
  found ctrl input: $flatten\u1.\u0.$verific$n496$2431
  found ctrl input: \u0.rx_active
  found ctrl input: $flatten\u1.\u0.$verific$n541$2444
  found ctrl input: $flatten\u1.\u0.$verific$n480$2423
  found ctrl input: $flatten\u1.\u0.$verific$n490$2426
  found ctrl input: $flatten\u1.\u0.$verific$n494$2429
  found ctrl input: $flatten\u1.\u0.$verific$n500$2435
  found state code: 4'1000
  found state code: 4'0100
  found ctrl input: $flatten\u1.\u0.$verific$n473$2421
  found state code: 4'0010
  found ctrl output: $flatten\u1.\u0.$verific$n583$2447
  found ctrl output: $flatten\u1.\u0.$verific$n584$2448
  found ctrl output: $flatten\u1.\u0.$verific$n585$2449
  found ctrl output: $flatten\u1.\u0.$verific$n586$2450
  ctrl inputs: { $flatten\u1.\u0.$verific$n541$2444 $flatten\u1.\u0.$verific$n500$2435 $flatten\u1.\u0.$verific$n496$2431 $flatten\u1.\u0.$verific$n494$2429 $flatten\u1.\u0.$verific$n490$2426 $flatten\u1.\u0.$verific$n480$2423 $flatten\u1.\u0.$verific$n473$2421 \u0.rx_active \rst_i }
  ctrl outputs: { $flatten\u1.\u0.$verific$n458$2472 $flatten\u1.\u0.$verific$n586$2450 $flatten\u1.\u0.$verific$n585$2449 $flatten\u1.\u0.$verific$n584$2448 $flatten\u1.\u0.$verific$n583$2447 }
  transition:     4'0000 9'--------0 ->     4'0001 8'00010000
  transition:     4'0000 9'--------1 ->     4'0000 8'00000000
  transition:     4'1000 9'--------0 ->     4'0001 8'00011000
  transition:     4'1000 9'--0-----1 ->     4'1000 8'10001000
  transition:     4'1000 9'--1----01 ->     4'0001 8'00011000
  transition:     4'1000 9'--1----11 ->     4'1000 8'10001000
  transition:     4'0100 9'--------0 ->     4'0001 8'00010100
  transition:     4'0100 9'0-0-----1 ->     4'0100 8'01000100
  transition:     4'0100 9'0-1----01 ->     4'0001 8'00010100
  transition:     4'0100 9'0-1----11 ->     4'0100 8'01000100
  transition:     4'0100 9'1-------1 ->     4'0001 8'00010100
  transition:     4'0010 9'--------0 ->     4'0001 8'00010010
  transition:     4'0010 9'-0-000--1 ->     4'0010 8'00100010
  transition:     4'0010 9'-1-000-01 ->     4'0001 8'00010010
  transition:     4'0010 9'-1-000-11 ->     4'0010 8'00100010
  transition:     4'0010 9'---100--1 ->     4'1000 8'10000010
  transition:     4'0010 9'----10--1 ->     4'0100 8'01000010
  transition:     4'0010 9'-----1-01 ->     4'0001 8'00010010
  transition:     4'0010 9'-----1-11 ->     4'0010 8'00100010
  transition:     4'0001 9'--------0 ->     4'0001 8'00010001
  transition:     4'0001 9'------0-1 ->     4'0001 8'00010001
  transition:     4'0001 9'------1-1 ->     4'0010 8'00100001
Extracting FSM `\u5.state' from module `\usbf_top'.
  found $dff cell for state register: $flatten\u5.$verific$state_reg$usbf_wb.v:198$9137
  root of input selection tree: $flatten\u5.$verific$n260$9104
  found reset state: 6'000001 (guessed from mux tree)
  found ctrl input: \rst_i
  found state code: 6'000001
  found ctrl input: $flatten\u5.$verific$n352$9095
  found ctrl input: $flatten\u5.$verific$n351$9094
  found ctrl input: $flatten\u5.$verific$n350$9093
  found ctrl input: $auto$opt_reduce.cc:134:opt_pmux$9201
  found ctrl input: $flatten\u5.$verific$n347$9090
  found state code: 6'000000
  found state code: 6'100000
  found state code: 6'010000
  found ctrl input: \u2.wack
  found ctrl input: $flatten\u5.$verific$n317$9088
  found ctrl input: $flatten\u5.$verific$n305$9087
  found ctrl input: $flatten\u5.$verific$n294$9083
  found ctrl input: $flatten\u5.$verific$n282$9081
  found state code: 6'000010
  found state code: 6'000100
  found state code: 6'001000
  found ctrl output: $flatten\u5.$verific$n352$9095
  found ctrl output: $flatten\u5.$verific$n351$9094
  found ctrl output: $flatten\u5.$verific$n350$9093
  found ctrl output: $flatten\u5.$verific$n349$9092
  found ctrl output: $flatten\u5.$verific$n348$9091
  found ctrl output: $flatten\u5.$verific$n347$9090
  ctrl inputs: { $auto$opt_reduce.cc:134:opt_pmux$9201 $flatten\u5.$verific$n317$9088 $flatten\u5.$verific$n305$9087 $flatten\u5.$verific$n294$9083 $flatten\u5.$verific$n282$9081 \u2.wack \rst_i }
  ctrl outputs: { $flatten\u5.$verific$n260$9104 $flatten\u5.$verific$n352$9095 $flatten\u5.$verific$n351$9094 $flatten\u5.$verific$n350$9093 $flatten\u5.$verific$n349$9092 $flatten\u5.$verific$n348$9091 $flatten\u5.$verific$n347$9090 }
  transition:   6'000000 7'------0 ->   6'000001 12'000001000000
  transition:   6'000000 7'------1 ->   6'000000 12'000000000000
  transition:   6'100000 7'------0 ->   6'000001 12'000001100000
  transition:   6'100000 7'------1 ->   6'000001 12'000001100000
  transition:   6'010000 7'------0 ->   6'000001 12'000001010000
  transition:   6'010000 7'------1 ->   6'100000 12'100000010000
  transition:   6'001000 7'------0 ->   6'000001 12'000001001000
  transition:   6'001000 7'------1 ->   6'010000 12'010000001000
  transition:   6'000100 7'------0 ->   6'000001 12'000001000100
  transition:   6'000100 7'-----01 ->   6'000100 12'000100000100
  transition:   6'000100 7'-----11 ->   6'010000 12'010000000100
  transition:   6'000010 7'------0 ->   6'000001 12'000001000010
  transition:   6'000010 7'-----01 ->   6'000010 12'000010000010
  transition:   6'000010 7'-----11 ->   6'010000 12'010000000010
  transition:   6'000001 7'------0 ->   6'000001 12'000001000001
  transition:   6'000001 7'-0000-1 ->   6'000001 12'000001000001
  transition:   6'000001 7'-0001-1 ->   6'000010 12'000010000001
  transition:   6'000001 7'-001--1 ->   6'000100 12'000100000001
  transition:   6'000001 7'-01---1 ->   6'001000 12'001000000001
  transition:   6'000001 7'-1----1 ->   6'001000 12'001000000001

12.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\u5.state$9212' from module `\usbf_top'.
  Merging pattern 7'------0 and 7'------1 from group (1 6 12'000001100000).
  Merging pattern 7'------1 and 7'------0 from group (1 6 12'000001100000).
  Removing unused input signal $auto$opt_reduce.cc:134:opt_pmux$9201.
Optimizing FSM `$fsm$\u1.u0.state$9206' from module `\usbf_top'.

12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..
Removed 29 unused cells and 29 unused wires.
<suppressed ~32 debug messages>

12.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\u1.u0.state$9206' from module `\usbf_top'.
  Removing unused output signal $flatten\u1.\u0.$verific$n458$2472 [0].
  Removing unused output signal $flatten\u1.\u0.$verific$n458$2472 [1].
  Removing unused output signal $flatten\u1.\u0.$verific$n458$2472 [2].
  Removing unused output signal $flatten\u1.\u0.$verific$n458$2472 [3].
Optimizing FSM `$fsm$\u5.state$9212' from module `\usbf_top'.
  Removing unused output signal $flatten\u5.$verific$n351$9094.
  Removing unused output signal $flatten\u5.$verific$n352$9095.
  Removing unused output signal $flatten\u5.$verific$n260$9104 [0].
  Removing unused output signal $flatten\u5.$verific$n260$9104 [1].
  Removing unused output signal $flatten\u5.$verific$n260$9104 [2].
  Removing unused output signal $flatten\u5.$verific$n260$9104 [3].
  Removing unused output signal $flatten\u5.$verific$n260$9104 [4].
  Removing unused output signal $flatten\u5.$verific$n260$9104 [5].

12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\u1.u0.state$9206' from module `\usbf_top' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  0000 -> ---1-
  1000 -> --1--
  0100 -> -1---
  0010 -> 1----
  0001 -> ----1
Recoding FSM `$fsm$\u5.state$9212' from module `\usbf_top' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  000000 -> -----1-
  100000 -> ----1--
  010000 -> ---1---
  001000 -> --1----
  000100 -> -1-----
  000010 -> 1------
  000001 -> ------1

12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\u1.u0.state$9206' from module `usbf_top':
-------------------------------------

  Information on FSM $fsm$\u1.u0.state$9206 (\u1.u0.state):

  Number of input signals:    9
  Number of output signals:   4
  Number of state bits:       5

  Input signals:
    0: \rst_i
    1: \u0.rx_active
    2: $flatten\u1.\u0.$verific$n473$2421
    3: $flatten\u1.\u0.$verific$n480$2423
    4: $flatten\u1.\u0.$verific$n490$2426
    5: $flatten\u1.\u0.$verific$n494$2429
    6: $flatten\u1.\u0.$verific$n496$2431
    7: $flatten\u1.\u0.$verific$n500$2435
    8: $flatten\u1.\u0.$verific$n541$2444

  Output signals:
    0: $flatten\u1.\u0.$verific$n583$2447
    1: $flatten\u1.\u0.$verific$n584$2448
    2: $flatten\u1.\u0.$verific$n585$2449
    3: $flatten\u1.\u0.$verific$n586$2450

  State encoding:
    0:    5'---1-
    1:    5'--1--
    2:    5'-1---
    3:    5'1----
    4:    5'----1  <RESET STATE>

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 9'--------1   ->     0 4'0000
      1:     0 9'--------0   ->     4 4'0000
      2:     1 9'--1----11   ->     1 4'1000
      3:     1 9'--0-----1   ->     1 4'1000
      4:     1 9'--------0   ->     4 4'1000
      5:     1 9'--1----01   ->     4 4'1000
      6:     2 9'0-1----11   ->     2 4'0100
      7:     2 9'0-0-----1   ->     2 4'0100
      8:     2 9'--------0   ->     4 4'0100
      9:     2 9'0-1----01   ->     4 4'0100
     10:     2 9'1-------1   ->     4 4'0100
     11:     3 9'---100--1   ->     1 4'0010
     12:     3 9'----10--1   ->     2 4'0010
     13:     3 9'-1-000-11   ->     3 4'0010
     14:     3 9'-----1-11   ->     3 4'0010
     15:     3 9'-0-000--1   ->     3 4'0010
     16:     3 9'--------0   ->     4 4'0010
     17:     3 9'-1-000-01   ->     4 4'0010
     18:     3 9'-----1-01   ->     4 4'0010
     19:     4 9'------1-1   ->     3 4'0001
     20:     4 9'--------0   ->     4 4'0001
     21:     4 9'------0-1   ->     4 4'0001

-------------------------------------

FSM `$fsm$\u5.state$9212' from module `usbf_top':
-------------------------------------

  Information on FSM $fsm$\u5.state$9212 (\u5.state):

  Number of input signals:    6
  Number of output signals:   4
  Number of state bits:       7

  Input signals:
    0: \rst_i
    1: \u2.wack
    2: $flatten\u5.$verific$n282$9081
    3: $flatten\u5.$verific$n294$9083
    4: $flatten\u5.$verific$n305$9087
    5: $flatten\u5.$verific$n317$9088

  Output signals:
    0: $flatten\u5.$verific$n347$9090
    1: $flatten\u5.$verific$n348$9091
    2: $flatten\u5.$verific$n349$9092
    3: $flatten\u5.$verific$n350$9093

  State encoding:
    0:  7'-----1-
    1:  7'----1--
    2:  7'---1---
    3:  7'--1----
    4:  7'-1-----
    5:  7'1------
    6:  7'------1  <RESET STATE>

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 6'-----1   ->     0 4'0000
      1:     0 6'-----0   ->     6 4'0000
      2:     1 6'------   ->     6 4'0000
      3:     2 6'-----1   ->     1 4'0000
      4:     2 6'-----0   ->     6 4'0000
      5:     3 6'-----1   ->     2 4'1000
      6:     3 6'-----0   ->     6 4'1000
      7:     4 6'----11   ->     2 4'0100
      8:     4 6'----01   ->     4 4'0100
      9:     4 6'-----0   ->     6 4'0100
     10:     5 6'----11   ->     2 4'0010
     11:     5 6'----01   ->     5 4'0010
     12:     5 6'-----0   ->     6 4'0010
     13:     6 6'01---1   ->     3 4'0001
     14:     6 6'1----1   ->     3 4'0001
     15:     6 6'001--1   ->     4 4'0001
     16:     6 6'0001-1   ->     5 4'0001
     17:     6 6'-----0   ->     6 4'0001
     18:     6 6'0000-1   ->     6 4'0001

-------------------------------------

12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\u1.u0.state$9206' from module `\usbf_top'.
Mapping FSM `$fsm$\u5.state$9212' from module `\usbf_top'.

13. Executing OPT pass (performing simple optimizations).

13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.
<suppressed ~6 debug messages>

13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbf_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~212 debug messages>

13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbf_top.
Performed a total of 0 changes.

13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $verific$resume_req_r_reg$usbf_top.v:292$32 ($dff) from module usbf_top (D = $verific$n44$8, Q = \resume_req_r, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9355 ($sdff) from module usbf_top (D = 1'1, Q = \resume_req_r).
Adding SRST signal on $flatten\u4.\u3.$verific$uc_dpd_reg$usbf_ep_rf.v:350$8937 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n1275$8816, Q = \u4.u3.uc_dpd, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$9361 ($sdff) from module usbf_top (D = \u1.u3.idin [3:2], Q = \u4.u3.uc_dpd).
Adding SRST signal on $flatten\u4.\u3.$verific$uc_bsel_reg$usbf_ep_rf.v:360$8942 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n1293$8819, Q = \u4.u3.uc_bsel, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$9363 ($sdff) from module usbf_top (D = \u1.u3.idin [1:0], Q = \u4.u3.uc_bsel).
Adding SRST signal on $flatten\u4.\u3.$verific$r2_reg$usbf_ep_rf.v:487$9055 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n1732$8771, Q = \u4.u3.r2, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9365 ($sdff) from module usbf_top (D = $flatten\u4.\u3.$verific$n1732$8771, Q = \u4.u3.r2).
Adding SRST signal on $flatten\u4.\u3.$verific$ots_stop_reg$usbf_ep_rf.v:250$8882 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n344$8680, Q = \u4.u3.ots_stop, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9369 ($sdff) from module usbf_top (D = \wb_data_i [13], Q = \u4.u3.ots_stop).
Adding SRST signal on $flatten\u4.\u3.$verific$int_stat_reg$usbf_ep_rf.v:340$8931 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n1234$8811, Q = \u4.u3.int_stat, rval = 7'0000000).
Adding EN signal on $auto$ff.cc:262:slice$9371 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u3.int_stat [2]).
Adding EN signal on $auto$ff.cc:262:slice$9371 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u3.int_stat [5]).
Adding EN signal on $auto$ff.cc:262:slice$9371 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u3.int_stat [6]).
Adding EN signal on $auto$ff.cc:262:slice$9371 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u3.int_stat [4]).
Adding EN signal on $auto$ff.cc:262:slice$9371 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u3.int_stat [3]).
Adding EN signal on $auto$ff.cc:262:slice$9371 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u3.int_stat [1]).
Adding EN signal on $auto$ff.cc:262:slice$9371 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u3.int_stat [0]).
Adding SRST signal on $flatten\u4.\u3.$verific$ienb_reg$usbf_ep_rf.v:268$8890 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n447$8793, Q = \u4.u3.ienb, rval = 6'000000).
Adding EN signal on $auto$ff.cc:262:slice$9397 ($sdff) from module usbf_top (D = \wb_data_i [21:16], Q = \u4.u3.ienb).
Adding SRST signal on $flatten\u4.\u3.$verific$iena_reg$usbf_ep_rf.v:268$8891 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n454$8794, Q = \u4.u3.iena, rval = 6'000000).
Adding EN signal on $auto$ff.cc:262:slice$9399 ($sdff) from module usbf_top (D = \wb_data_i [29:24], Q = \u4.u3.iena).
Adding SRST signal on $flatten\u4.\u3.$verific$dma_req_r_reg$usbf_ep_rf.v:473$9044 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n1714$8762, Q = \u4.u3.dma_req_r, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9401 ($sdff) from module usbf_top (D = $flatten\u4.\u3.$verific$n1714$8762, Q = \u4.u3.dma_req_r).
Adding SRST signal on $flatten\u4.\u3.$verific$dma_out_cnt_reg$usbf_ep_rf.v:397$8984 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n1418$8827, Q = \u4.u3.dma_out_cnt, rval = 12'000000000000).
Adding EN signal on $auto$ff.cc:262:slice$9405 ($sdff) from module usbf_top (D = $flatten\u4.\u3.$verific$n1418$8827, Q = \u4.u3.dma_out_cnt).
Adding SRST signal on $flatten\u4.\u3.$verific$dma_in_cnt_reg$usbf_ep_rf.v:422$9002 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n1553$8834, Q = \u4.u3.dma_in_cnt, rval = 12'000000000000).
Adding EN signal on $auto$ff.cc:262:slice$9409 ($sdff) from module usbf_top (D = $flatten\u4.\u3.$verific$n1553$8834, Q = \u4.u3.dma_in_cnt).
Adding SRST signal on $flatten\u4.\u3.$verific$dma_ack_wr1_reg$usbf_ep_rf.v:502$9059 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n1741$8774, Q = \u4.u3.dma_ack_wr1, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9413 ($sdff) from module usbf_top (D = $flatten\u4.\u3.$verific$n1741$8774, Q = \u4.u3.dma_ack_wr1).
Adding SRST signal on $flatten\u4.\u3.$verific$csr1_reg$usbf_ep_rf.v:250$8881 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n345$8787, Q = \u4.u3.csr1, rval = 13'0000000000000).
Adding EN signal on $auto$ff.cc:262:slice$9417 ($sdff) from module usbf_top (D = { \wb_data_i [27:24] \wb_data_i [21:15] }, Q = { \u4.u3.csr1 [12:9] \u4.u3.csr1 [6:0] }).
Adding EN signal on $auto$ff.cc:262:slice$9417 ($sdff) from module usbf_top (D = $flatten\u4.\u3.$verific$n345$8787 [8:7], Q = \u4.u3.csr1 [8:7]).
Adding SRST signal on $flatten\u4.\u3.$verific$csr0_reg$usbf_ep_rf.v:250$8880 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n330$8786, Q = \u4.u3.csr0, rval = 13'0000000000000).
Adding EN signal on $auto$ff.cc:262:slice$9422 ($sdff) from module usbf_top (D = \wb_data_i [12:0], Q = \u4.u3.csr0).
Adding SRST signal on $flatten\u4.\u3.$verific$buf1_reg$usbf_ep_rf.v:294$8908 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n926$8806, Q = \u4.u3.buf1, rval = 32'11111111111111111111111111111111).
Adding EN signal on $auto$ff.cc:262:slice$9424 ($sdff) from module usbf_top (D = $flatten\u4.\u3.$verific$n926$8806, Q = \u4.u3.buf1).
Adding SRST signal on $flatten\u4.\u3.$verific$buf0_reg$usbf_ep_rf.v:282$8902 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n691$8803, Q = \u4.u3.buf0, rval = 32'11111111111111111111111111111111).
Adding EN signal on $auto$ff.cc:262:slice$9428 ($sdff) from module usbf_top (D = $flatten\u4.\u3.$verific$n691$8803, Q = \u4.u3.buf0).
Adding SRST signal on $flatten\u4.\u3.$verific$buf0_orig_reg$usbf_ep_rf.v:303$8911 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n1093$8808, Q = \u4.u3.buf0_orig, rval = 32'11111111111111111111111111111111).
Adding EN signal on $auto$ff.cc:262:slice$9432 ($sdff) from module usbf_top (D = \wb_data_i, Q = \u4.u3.buf0_orig).
Adding SRST signal on $flatten\u4.\u2.$verific$uc_dpd_reg$usbf_ep_rf.v:350$8937 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n1275$8816, Q = \u4.u2.uc_dpd, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$9434 ($sdff) from module usbf_top (D = \u1.u3.idin [3:2], Q = \u4.u2.uc_dpd).
Adding SRST signal on $flatten\u4.\u2.$verific$uc_bsel_reg$usbf_ep_rf.v:360$8942 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n1293$8819, Q = \u4.u2.uc_bsel, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$9436 ($sdff) from module usbf_top (D = \u1.u3.idin [1:0], Q = \u4.u2.uc_bsel).
Adding SRST signal on $flatten\u4.\u2.$verific$r2_reg$usbf_ep_rf.v:487$9055 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n1732$8771, Q = \u4.u2.r2, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9438 ($sdff) from module usbf_top (D = $flatten\u4.\u2.$verific$n1732$8771, Q = \u4.u2.r2).
Adding SRST signal on $flatten\u4.\u2.$verific$ots_stop_reg$usbf_ep_rf.v:250$8882 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n344$8680, Q = \u4.u2.ots_stop, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9442 ($sdff) from module usbf_top (D = \wb_data_i [13], Q = \u4.u2.ots_stop).
Adding SRST signal on $flatten\u4.\u2.$verific$int_stat_reg$usbf_ep_rf.v:340$8931 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n1234$8811, Q = \u4.u2.int_stat, rval = 7'0000000).
Adding EN signal on $auto$ff.cc:262:slice$9444 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u2.int_stat [2]).
Adding EN signal on $auto$ff.cc:262:slice$9444 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u2.int_stat [5]).
Adding EN signal on $auto$ff.cc:262:slice$9444 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u2.int_stat [6]).
Adding EN signal on $auto$ff.cc:262:slice$9444 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u2.int_stat [4]).
Adding EN signal on $auto$ff.cc:262:slice$9444 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u2.int_stat [3]).
Adding EN signal on $auto$ff.cc:262:slice$9444 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u2.int_stat [1]).
Adding EN signal on $auto$ff.cc:262:slice$9444 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u2.int_stat [0]).
Adding SRST signal on $flatten\u4.\u2.$verific$ienb_reg$usbf_ep_rf.v:268$8890 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n447$8793, Q = \u4.u2.ienb, rval = 6'000000).
Adding EN signal on $auto$ff.cc:262:slice$9470 ($sdff) from module usbf_top (D = \wb_data_i [21:16], Q = \u4.u2.ienb).
Adding SRST signal on $flatten\u4.\u2.$verific$iena_reg$usbf_ep_rf.v:268$8891 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n454$8794, Q = \u4.u2.iena, rval = 6'000000).
Adding EN signal on $auto$ff.cc:262:slice$9472 ($sdff) from module usbf_top (D = \wb_data_i [29:24], Q = \u4.u2.iena).
Adding SRST signal on $flatten\u4.\u2.$verific$dma_req_r_reg$usbf_ep_rf.v:473$9044 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n1714$8762, Q = \u4.u2.dma_req_r, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9474 ($sdff) from module usbf_top (D = $flatten\u4.\u2.$verific$n1714$8762, Q = \u4.u2.dma_req_r).
Adding SRST signal on $flatten\u4.\u2.$verific$dma_out_cnt_reg$usbf_ep_rf.v:397$8984 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n1418$8827, Q = \u4.u2.dma_out_cnt, rval = 12'000000000000).
Adding EN signal on $auto$ff.cc:262:slice$9478 ($sdff) from module usbf_top (D = $flatten\u4.\u2.$verific$n1418$8827, Q = \u4.u2.dma_out_cnt).
Adding SRST signal on $flatten\u4.\u2.$verific$dma_in_cnt_reg$usbf_ep_rf.v:422$9002 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n1553$8834, Q = \u4.u2.dma_in_cnt, rval = 12'000000000000).
Adding EN signal on $auto$ff.cc:262:slice$9482 ($sdff) from module usbf_top (D = $flatten\u4.\u2.$verific$n1553$8834, Q = \u4.u2.dma_in_cnt).
Adding SRST signal on $flatten\u4.\u2.$verific$dma_ack_wr1_reg$usbf_ep_rf.v:502$9059 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n1741$8774, Q = \u4.u2.dma_ack_wr1, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9486 ($sdff) from module usbf_top (D = $flatten\u4.\u2.$verific$n1741$8774, Q = \u4.u2.dma_ack_wr1).
Adding SRST signal on $flatten\u4.\u2.$verific$csr1_reg$usbf_ep_rf.v:250$8881 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n345$8787, Q = \u4.u2.csr1, rval = 13'0000000000000).
Adding EN signal on $auto$ff.cc:262:slice$9490 ($sdff) from module usbf_top (D = { \wb_data_i [27:24] \wb_data_i [21:15] }, Q = { \u4.u2.csr1 [12:9] \u4.u2.csr1 [6:0] }).
Adding EN signal on $auto$ff.cc:262:slice$9490 ($sdff) from module usbf_top (D = $flatten\u4.\u2.$verific$n345$8787 [8:7], Q = \u4.u2.csr1 [8:7]).
Adding SRST signal on $flatten\u4.\u2.$verific$csr0_reg$usbf_ep_rf.v:250$8880 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n330$8786, Q = \u4.u2.csr0, rval = 13'0000000000000).
Adding EN signal on $auto$ff.cc:262:slice$9495 ($sdff) from module usbf_top (D = \wb_data_i [12:0], Q = \u4.u2.csr0).
Adding SRST signal on $flatten\u4.\u2.$verific$buf1_reg$usbf_ep_rf.v:294$8908 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n926$8806, Q = \u4.u2.buf1, rval = 32'11111111111111111111111111111111).
Adding EN signal on $auto$ff.cc:262:slice$9497 ($sdff) from module usbf_top (D = $flatten\u4.\u2.$verific$n926$8806, Q = \u4.u2.buf1).
Adding SRST signal on $flatten\u4.\u2.$verific$buf0_reg$usbf_ep_rf.v:282$8902 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n691$8803, Q = \u4.u2.buf0, rval = 32'11111111111111111111111111111111).
Adding EN signal on $auto$ff.cc:262:slice$9501 ($sdff) from module usbf_top (D = $flatten\u4.\u2.$verific$n691$8803, Q = \u4.u2.buf0).
Adding SRST signal on $flatten\u4.\u2.$verific$buf0_orig_reg$usbf_ep_rf.v:303$8911 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n1093$8808, Q = \u4.u2.buf0_orig, rval = 32'11111111111111111111111111111111).
Adding EN signal on $auto$ff.cc:262:slice$9505 ($sdff) from module usbf_top (D = \wb_data_i, Q = \u4.u2.buf0_orig).
Adding SRST signal on $flatten\u4.\u1.$verific$uc_dpd_reg$usbf_ep_rf.v:350$8937 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n1275$8816, Q = \u4.u1.uc_dpd, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$9507 ($sdff) from module usbf_top (D = \u1.u3.idin [3:2], Q = \u4.u1.uc_dpd).
Adding SRST signal on $flatten\u4.\u1.$verific$uc_bsel_reg$usbf_ep_rf.v:360$8942 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n1293$8819, Q = \u4.u1.uc_bsel, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$9509 ($sdff) from module usbf_top (D = \u1.u3.idin [1:0], Q = \u4.u1.uc_bsel).
Adding SRST signal on $flatten\u4.\u1.$verific$r2_reg$usbf_ep_rf.v:487$9055 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n1732$8771, Q = \u4.u1.r2, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9511 ($sdff) from module usbf_top (D = $flatten\u4.\u1.$verific$n1732$8771, Q = \u4.u1.r2).
Adding SRST signal on $flatten\u4.\u1.$verific$ots_stop_reg$usbf_ep_rf.v:250$8882 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n344$8680, Q = \u4.u1.ots_stop, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9515 ($sdff) from module usbf_top (D = \wb_data_i [13], Q = \u4.u1.ots_stop).
Adding SRST signal on $flatten\u4.\u1.$verific$int_stat_reg$usbf_ep_rf.v:340$8931 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n1234$8811, Q = \u4.u1.int_stat, rval = 7'0000000).
Adding EN signal on $auto$ff.cc:262:slice$9517 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u1.int_stat [2]).
Adding EN signal on $auto$ff.cc:262:slice$9517 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u1.int_stat [5]).
Adding EN signal on $auto$ff.cc:262:slice$9517 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u1.int_stat [6]).
Adding EN signal on $auto$ff.cc:262:slice$9517 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u1.int_stat [4]).
Adding EN signal on $auto$ff.cc:262:slice$9517 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u1.int_stat [3]).
Adding EN signal on $auto$ff.cc:262:slice$9517 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u1.int_stat [1]).
Adding EN signal on $auto$ff.cc:262:slice$9517 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u1.int_stat [0]).
Adding SRST signal on $flatten\u4.\u1.$verific$ienb_reg$usbf_ep_rf.v:268$8890 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n447$8793, Q = \u4.u1.ienb, rval = 6'000000).
Adding EN signal on $auto$ff.cc:262:slice$9543 ($sdff) from module usbf_top (D = \wb_data_i [21:16], Q = \u4.u1.ienb).
Adding SRST signal on $flatten\u4.\u1.$verific$iena_reg$usbf_ep_rf.v:268$8891 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n454$8794, Q = \u4.u1.iena, rval = 6'000000).
Adding EN signal on $auto$ff.cc:262:slice$9545 ($sdff) from module usbf_top (D = \wb_data_i [29:24], Q = \u4.u1.iena).
Adding SRST signal on $flatten\u4.\u1.$verific$dma_req_r_reg$usbf_ep_rf.v:473$9044 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n1714$8762, Q = \u4.u1.dma_req_r, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9547 ($sdff) from module usbf_top (D = $flatten\u4.\u1.$verific$n1714$8762, Q = \u4.u1.dma_req_r).
Adding SRST signal on $flatten\u4.\u1.$verific$dma_out_cnt_reg$usbf_ep_rf.v:397$8984 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n1418$8827, Q = \u4.u1.dma_out_cnt, rval = 12'000000000000).
Adding EN signal on $auto$ff.cc:262:slice$9551 ($sdff) from module usbf_top (D = $flatten\u4.\u1.$verific$n1418$8827, Q = \u4.u1.dma_out_cnt).
Adding SRST signal on $flatten\u4.\u1.$verific$dma_in_cnt_reg$usbf_ep_rf.v:422$9002 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n1553$8834, Q = \u4.u1.dma_in_cnt, rval = 12'000000000000).
Adding EN signal on $auto$ff.cc:262:slice$9555 ($sdff) from module usbf_top (D = $flatten\u4.\u1.$verific$n1553$8834, Q = \u4.u1.dma_in_cnt).
Adding SRST signal on $flatten\u4.\u1.$verific$dma_ack_wr1_reg$usbf_ep_rf.v:502$9059 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n1741$8774, Q = \u4.u1.dma_ack_wr1, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9559 ($sdff) from module usbf_top (D = $flatten\u4.\u1.$verific$n1741$8774, Q = \u4.u1.dma_ack_wr1).
Adding SRST signal on $flatten\u4.\u1.$verific$csr1_reg$usbf_ep_rf.v:250$8881 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n345$8787, Q = \u4.u1.csr1, rval = 13'0000000000000).
Adding EN signal on $auto$ff.cc:262:slice$9563 ($sdff) from module usbf_top (D = { \wb_data_i [27:24] \wb_data_i [21:15] }, Q = { \u4.u1.csr1 [12:9] \u4.u1.csr1 [6:0] }).
Adding EN signal on $auto$ff.cc:262:slice$9563 ($sdff) from module usbf_top (D = $flatten\u4.\u1.$verific$n345$8787 [8:7], Q = \u4.u1.csr1 [8:7]).
Adding SRST signal on $flatten\u4.\u1.$verific$csr0_reg$usbf_ep_rf.v:250$8880 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n330$8786, Q = \u4.u1.csr0, rval = 13'0000000000000).
Adding EN signal on $auto$ff.cc:262:slice$9568 ($sdff) from module usbf_top (D = \wb_data_i [12:0], Q = \u4.u1.csr0).
Adding SRST signal on $flatten\u4.\u1.$verific$buf1_reg$usbf_ep_rf.v:294$8908 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n926$8806, Q = \u4.u1.buf1, rval = 32'11111111111111111111111111111111).
Adding EN signal on $auto$ff.cc:262:slice$9570 ($sdff) from module usbf_top (D = $flatten\u4.\u1.$verific$n926$8806, Q = \u4.u1.buf1).
Adding SRST signal on $flatten\u4.\u1.$verific$buf0_reg$usbf_ep_rf.v:282$8902 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n691$8803, Q = \u4.u1.buf0, rval = 32'11111111111111111111111111111111).
Adding EN signal on $auto$ff.cc:262:slice$9574 ($sdff) from module usbf_top (D = $flatten\u4.\u1.$verific$n691$8803, Q = \u4.u1.buf0).
Adding SRST signal on $flatten\u4.\u1.$verific$buf0_orig_reg$usbf_ep_rf.v:303$8911 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n1093$8808, Q = \u4.u1.buf0_orig, rval = 32'11111111111111111111111111111111).
Adding EN signal on $auto$ff.cc:262:slice$9578 ($sdff) from module usbf_top (D = \wb_data_i, Q = \u4.u1.buf0_orig).
Adding SRST signal on $flatten\u4.\u0.$verific$uc_dpd_reg$usbf_ep_rf.v:350$8937 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n1275$8816, Q = \u4.u0.uc_dpd, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$9580 ($sdff) from module usbf_top (D = \u1.u3.idin [3:2], Q = \u4.u0.uc_dpd).
Adding SRST signal on $flatten\u4.\u0.$verific$uc_bsel_reg$usbf_ep_rf.v:360$8942 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n1293$8819, Q = \u4.u0.uc_bsel, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$9582 ($sdff) from module usbf_top (D = \u1.u3.idin [1:0], Q = \u4.u0.uc_bsel).
Adding SRST signal on $flatten\u4.\u0.$verific$r2_reg$usbf_ep_rf.v:487$9055 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n1732$8771, Q = \u4.u0.r2, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9584 ($sdff) from module usbf_top (D = $flatten\u4.\u0.$verific$n1732$8771, Q = \u4.u0.r2).
Adding SRST signal on $flatten\u4.\u0.$verific$ots_stop_reg$usbf_ep_rf.v:250$8882 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n344$8680, Q = \u4.u0.ots_stop, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9588 ($sdff) from module usbf_top (D = \wb_data_i [13], Q = \u4.u0.ots_stop).
Adding SRST signal on $flatten\u4.\u0.$verific$int_stat_reg$usbf_ep_rf.v:340$8931 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n1234$8811, Q = \u4.u0.int_stat, rval = 7'0000000).
Adding EN signal on $auto$ff.cc:262:slice$9590 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u0.int_stat [2]).
Adding EN signal on $auto$ff.cc:262:slice$9590 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u0.int_stat [5]).
Adding EN signal on $auto$ff.cc:262:slice$9590 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u0.int_stat [6]).
Adding EN signal on $auto$ff.cc:262:slice$9590 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u0.int_stat [4]).
Adding EN signal on $auto$ff.cc:262:slice$9590 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u0.int_stat [3]).
Adding EN signal on $auto$ff.cc:262:slice$9590 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u0.int_stat [1]).
Adding EN signal on $auto$ff.cc:262:slice$9590 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u0.int_stat [0]).
Adding SRST signal on $flatten\u4.\u0.$verific$ienb_reg$usbf_ep_rf.v:268$8890 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n447$8793, Q = \u4.u0.ienb, rval = 6'000000).
Adding EN signal on $auto$ff.cc:262:slice$9616 ($sdff) from module usbf_top (D = \wb_data_i [21:16], Q = \u4.u0.ienb).
Adding SRST signal on $flatten\u4.\u0.$verific$iena_reg$usbf_ep_rf.v:268$8891 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n454$8794, Q = \u4.u0.iena, rval = 6'000000).
Adding EN signal on $auto$ff.cc:262:slice$9618 ($sdff) from module usbf_top (D = \wb_data_i [29:24], Q = \u4.u0.iena).
Adding SRST signal on $flatten\u4.\u0.$verific$dma_req_r_reg$usbf_ep_rf.v:473$9044 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n1714$8762, Q = \u4.u0.dma_req_r, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9620 ($sdff) from module usbf_top (D = $flatten\u4.\u0.$verific$n1714$8762, Q = \u4.u0.dma_req_r).
Adding SRST signal on $flatten\u4.\u0.$verific$dma_out_cnt_reg$usbf_ep_rf.v:397$8984 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n1418$8827, Q = \u4.u0.dma_out_cnt, rval = 12'000000000000).
Adding EN signal on $auto$ff.cc:262:slice$9624 ($sdff) from module usbf_top (D = $flatten\u4.\u0.$verific$n1418$8827, Q = \u4.u0.dma_out_cnt).
Adding SRST signal on $flatten\u4.\u0.$verific$dma_in_cnt_reg$usbf_ep_rf.v:422$9002 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n1553$8834, Q = \u4.u0.dma_in_cnt, rval = 12'000000000000).
Adding EN signal on $auto$ff.cc:262:slice$9628 ($sdff) from module usbf_top (D = $flatten\u4.\u0.$verific$n1553$8834, Q = \u4.u0.dma_in_cnt).
Adding SRST signal on $flatten\u4.\u0.$verific$dma_ack_wr1_reg$usbf_ep_rf.v:502$9059 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n1741$8774, Q = \u4.u0.dma_ack_wr1, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9632 ($sdff) from module usbf_top (D = $flatten\u4.\u0.$verific$n1741$8774, Q = \u4.u0.dma_ack_wr1).
Adding SRST signal on $flatten\u4.\u0.$verific$csr1_reg$usbf_ep_rf.v:250$8881 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n345$8787, Q = \u4.u0.csr1, rval = 13'0000000000000).
Adding EN signal on $auto$ff.cc:262:slice$9636 ($sdff) from module usbf_top (D = { \wb_data_i [27:24] \wb_data_i [21:15] }, Q = { \u4.u0.csr1 [12:9] \u4.u0.csr1 [6:0] }).
Adding EN signal on $auto$ff.cc:262:slice$9636 ($sdff) from module usbf_top (D = $flatten\u4.\u0.$verific$n345$8787 [8:7], Q = \u4.u0.csr1 [8:7]).
Adding SRST signal on $flatten\u4.\u0.$verific$csr0_reg$usbf_ep_rf.v:250$8880 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n330$8786, Q = \u4.u0.csr0, rval = 13'0000000000000).
Adding EN signal on $auto$ff.cc:262:slice$9641 ($sdff) from module usbf_top (D = \wb_data_i [12:0], Q = \u4.u0.csr0).
Adding SRST signal on $flatten\u4.\u0.$verific$buf1_reg$usbf_ep_rf.v:294$8908 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n926$8806, Q = \u4.u0.buf1, rval = 32'11111111111111111111111111111111).
Adding EN signal on $auto$ff.cc:262:slice$9643 ($sdff) from module usbf_top (D = $flatten\u4.\u0.$verific$n926$8806, Q = \u4.u0.buf1).
Adding SRST signal on $flatten\u4.\u0.$verific$buf0_reg$usbf_ep_rf.v:282$8902 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n691$8803, Q = \u4.u0.buf0, rval = 32'11111111111111111111111111111111).
Adding EN signal on $auto$ff.cc:262:slice$9647 ($sdff) from module usbf_top (D = $flatten\u4.\u0.$verific$n691$8803, Q = \u4.u0.buf0).
Adding SRST signal on $flatten\u4.\u0.$verific$buf0_orig_reg$usbf_ep_rf.v:303$8911 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n1093$8808, Q = \u4.u0.buf0_orig, rval = 32'11111111111111111111111111111111).
Adding EN signal on $auto$ff.cc:262:slice$9651 ($sdff) from module usbf_top (D = \wb_data_i, Q = \u4.u0.buf0_orig).
Adding SRST signal on $flatten\u4.$verific$utmi_vend_wr_r_reg$usbf_rf.v:334$4720 ($dff) from module usbf_top (D = $flatten\u4.$verific$n226$4356, Q = \u4.utmi_vend_wr_r, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9653 ($sdff) from module usbf_top (D = $flatten\u4.$verific$n226$4356, Q = \u4.utmi_vend_wr_r).
Adding EN signal on $flatten\u4.$verific$utmi_vend_ctrl_r_reg$usbf_rf.v:342$4725 ($dff) from module usbf_top (D = \wb_data_i [3:0], Q = \u4.utmi_vend_ctrl_r).
Adding SRST signal on $flatten\u4.$verific$intb_msk_reg$usbf_rf.v:388$4755 ($dff) from module usbf_top (D = $flatten\u4.$verific$n363$4574, Q = \u4.intb_msk, rval = 9'000000000).
Adding EN signal on $auto$ff.cc:262:slice$9658 ($sdff) from module usbf_top (D = \wb_data_i [24:16], Q = \u4.intb_msk).
Adding SRST signal on $flatten\u4.$verific$inta_msk_reg$usbf_rf.v:388$4754 ($dff) from module usbf_top (D = $flatten\u4.$verific$n373$4575, Q = \u4.inta_msk, rval = 9'000000000).
Adding EN signal on $auto$ff.cc:262:slice$9660 ($sdff) from module usbf_top (D = \wb_data_i [8:0], Q = \u4.inta_msk).
Adding SRST signal on $flatten\u4.$verific$int_srcb_reg$usbf_rf.v:673$4756 ($dff) from module usbf_top (D = { $flatten\u4.$verific$n4647$4516 $flatten\u4.$verific$n4656$4517 $flatten\u4.$verific$n4665$4518 $flatten\u4.$verific$n4674$4519 $flatten\u4.$verific$n4683$4520 $flatten\u4.$verific$n4692$4521 $flatten\u4.$verific$n4701$4522 $flatten\u4.$verific$n4710$4523 $flatten\u4.$verific$n4719$4524 }, Q = \u4.int_srcb, rval = 9'000000000).
Adding EN signal on $auto$ff.cc:262:slice$9662 ($sdff) from module usbf_top (D = 1'1, Q = \u4.int_srcb [0]).
Adding EN signal on $auto$ff.cc:262:slice$9662 ($sdff) from module usbf_top (D = 1'1, Q = \u4.int_srcb [1]).
Adding EN signal on $auto$ff.cc:262:slice$9662 ($sdff) from module usbf_top (D = 1'1, Q = \u4.int_srcb [2]).
Adding EN signal on $auto$ff.cc:262:slice$9662 ($sdff) from module usbf_top (D = 1'1, Q = \u4.int_srcb [7]).
Adding EN signal on $auto$ff.cc:262:slice$9662 ($sdff) from module usbf_top (D = 1'1, Q = \u4.int_srcb [8]).
Adding EN signal on $auto$ff.cc:262:slice$9662 ($sdff) from module usbf_top (D = 1'1, Q = \u4.int_srcb [4]).
Adding EN signal on $auto$ff.cc:262:slice$9662 ($sdff) from module usbf_top (D = 1'1, Q = \u4.int_srcb [3]).
Adding EN signal on $auto$ff.cc:262:slice$9662 ($sdff) from module usbf_top (D = 1'1, Q = \u4.int_srcb [6]).
Adding EN signal on $auto$ff.cc:262:slice$9662 ($sdff) from module usbf_top (D = 1'1, Q = \u4.int_srcb [5]).
Adding SRST signal on $flatten\u4.$verific$funct_adr_reg$usbf_rf.v:370$4743 ($dff) from module usbf_top (D = $flatten\u4.$verific$n295$4569, Q = \u4.funct_adr, rval = 7'0000000).
Adding EN signal on $auto$ff.cc:262:slice$9676 ($sdff) from module usbf_top (D = \wb_data_i [6:0], Q = \u4.funct_adr).
Adding EN signal on $flatten\u4.$verific$dma_out_buf_avail_reg$usbf_rf.v:624$5021 ($dff) from module usbf_top (D = $flatten\u4.$verific$n4601$4498, Q = \u4.dma_out_buf_avail).
Adding EN signal on $flatten\u4.$verific$dma_in_buf_sz1_reg$usbf_rf.v:591$4988 ($dff) from module usbf_top (D = $flatten\u4.$verific$n4567$4466, Q = \u4.dma_in_buf_sz1).
Adding SRST signal on $flatten\u4.$verific$csr_reg$usbf_rf.v:492$4889 ($dff) from module usbf_top (D = $flatten\u4.$verific$n2190$4627 [14], Q = \u4.csr [14], rval = 1'0).
Adding EN signal on $flatten\u4.$verific$csr_reg$usbf_rf.v:492$4889 ($dff) from module usbf_top (D = { $flatten\u4.$verific$n2289$4630 [31:15] $flatten\u4.$verific$n2289$4630 [13:0] }, Q = { \u4.csr [31:15] \u4.csr [13:0] }).
Adding EN signal on $auto$ff.cc:262:slice$9684 ($sdff) from module usbf_top (D = 1'0, Q = \u4.csr [14]).
Adding EN signal on $flatten\u4.$verific$buf1_reg$usbf_rf.v:558$4955 ($dff) from module usbf_top (D = $flatten\u4.$verific$n4469$4694, Q = \u4.buf1).
Adding EN signal on $flatten\u4.$verific$buf0_reg$usbf_rf.v:525$4922 ($dff) from module usbf_top (D = $flatten\u4.$verific$n3379$4662, Q = \u4.buf0).
Adding SRST signal on $flatten\u2.$verific$wack_r_reg$usbf_mem_arb.v:193$4285 ($dff) from module usbf_top (D = $flatten\u2.$verific$n238$4250, Q = \u2.wack_r, rval = 1'0).
Adding SRST signal on $flatten\u1.\u3.$verific$tx_data_to_cnt_reg$usbf_pe.v:768$4091 ($dff) from module usbf_top (D = $flatten\u1.\u3.$verific$n1216$3727, Q = \u1.u3.tx_data_to_cnt, rval = 8'00000000).
Adding SRST signal on $flatten\u1.\u3.$verific$state_reg$usbf_pe.v:823$4145 ($dff) from module usbf_top (D = \u1.u3.next_state, Q = \u1.u3.state, rval = 10'0000000001).
Adding EN signal on $auto$ff.cc:262:slice$9700 ($sdff) from module usbf_top (D = \u1.u3.next_state, Q = \u1.u3.state).
Adding SRST signal on $flatten\u1.\u3.$verific$setup_token_reg$usbf_pe.v:592$3950 ($dff) from module usbf_top (D = $flatten\u1.\u3.$verific$n516$3482, Q = \u1.u3.setup_token, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9718 ($sdff) from module usbf_top (D = $flatten\u1.\u3.$verific$n516$3482, Q = \u1.u3.setup_token).
Adding SRST signal on $flatten\u1.\u3.$verific$rx_ack_to_cnt_reg$usbf_pe.v:751$4081 ($dff) from module usbf_top (D = $flatten\u1.\u3.$verific$n1148$3723, Q = \u1.u3.rx_ack_to_cnt, rval = 8'00000000).
Adding SRST signal on $flatten\u1.\u3.$verific$out_token_reg$usbf_pe.v:581$3946 ($dff) from module usbf_top (D = $flatten\u1.\u3.$verific$n506$3479, Q = \u1.u3.out_token, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9723 ($sdff) from module usbf_top (D = $flatten\u1.\u3.$verific$n506$3479, Q = \u1.u3.out_token).
Adding SRST signal on $flatten\u1.\u3.$verific$new_sizeb_reg$usbf_pe.v:654$4012 ($dff) from module usbf_top (D = \u1.u3.size_next [13:11], Q = \u1.u3.new_sizeb [13:11], rval = 3'000).
Adding SRST signal on $flatten\u1.\u3.$verific$int_seqerr_set_reg$usbf_pe.v:808$4140 ($dff) from module usbf_top (D = \u1.u3.pid_seq_err, Q = \u1.u3.int_seqerr_set, rval = 1'0).
Adding SRST signal on $flatten\u1.\u3.$verific$in_token_reg$usbf_pe.v:570$3942 ($dff) from module usbf_top (D = $flatten\u1.\u3.$verific$n496$3476, Q = \u1.u3.in_token, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9742 ($sdff) from module usbf_top (D = $flatten\u1.\u3.$verific$n496$3476, Q = \u1.u3.in_token).
Adding SRST signal on $flatten\u1.\u3.$verific$idin_reg$usbf_pe.v:704$4053 ($dff) from module usbf_top (D = { \u1.u3.buffer_done \u1.u3.new_size [13:11] }, Q = \u1.u3.idin [31:28], rval = 4'0000).
Adding SRST signal on $flatten\u1.\u3.$verific$buf0_rl_reg$usbf_pe.v:729$4067 ($dff) from module usbf_top (D = $flatten\u1.\u3.$verific$n1651$3633, Q = \u1.u3.buf0_rl, rval = 1'0).
Adding SRST signal on $flatten\u1.\u2.$verific$state_reg$usbf_idma.v:449$3028 ($dff) from module usbf_top (D = \u1.u2.next_state, Q = \u1.u2.state, rval = 8'00000001).
Adding EN signal on $auto$ff.cc:262:slice$9749 ($sdff) from module usbf_top (D = \u1.u2.next_state, Q = \u1.u2.state).
Adding SRST signal on $flatten\u1.\u2.$verific$sizu_c_reg$usbf_idma.v:346$2964 ($dff) from module usbf_top (D = $flatten\u1.\u2.$verific$n551$2841, Q = \u1.u2.sizu_c, rval = 11'00000000000).
Adding EN signal on $auto$ff.cc:262:slice$9769 ($sdff) from module usbf_top (D = $flatten\u1.\u2.$verific$n527$2839, Q = \u1.u2.sizu_c).
Adding SRST signal on $flatten\u1.\u2.$verific$sizd_c_reg$usbf_idma.v:326$2948 ($dff) from module usbf_top (D = $flatten\u1.\u2.$verific$n445$2836, Q = \u1.u2.sizd_c, rval = 14'11111111111111).
Adding EN signal on $auto$ff.cc:262:slice$9775 ($sdff) from module usbf_top (D = $flatten\u1.\u2.$verific$n445$2836, Q = \u1.u2.sizd_c).
Adding SRST signal on $flatten\u1.\u2.$verific$send_data_r_reg$usbf_idma.v:431$3023 ($dff) from module usbf_top (D = $flatten\u1.\u2.$verific$n1233$2789, Q = \u1.u2.send_data_r, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9779 ($sdff) from module usbf_top (D = $flatten\u1.\u2.$verific$n1233$2789, Q = \u1.u2.send_data_r).
Adding SRST signal on $flatten\u1.\u2.$verific$rx_dma_en_r_reg$usbf_idma.v:278$2909 ($dff) from module usbf_top (D = $flatten\u1.\u3.$verific$n1422$3605, Q = \u1.u2.rx_dma_en_r, rval = 1'0).
Adding EN signal on $flatten\u1.\u2.$verific$rd_buf1_reg$usbf_idma.v:403$3007 ($dff) from module usbf_top (D = \sram_data_i, Q = \u1.u2.rd_buf1).
Adding EN signal on $flatten\u1.\u2.$verific$rd_buf0_reg$usbf_idma.v:400$3005 ($dff) from module usbf_top (D = \sram_data_i, Q = \u1.u2.rd_buf0).
Adding SRST signal on $flatten\u1.\u2.$verific$dtmp_sel_r_reg$usbf_idma.v:360$2970 ($dff) from module usbf_top (D = $flatten\u1.\u2.$verific$n1329$2797, Q = \u1.u2.dtmp_sel_r, rval = 1'0).
Adding EN signal on $flatten\u1.\u2.$verific$dtmp_r_reg$usbf_idma.v:372$2983 ($dff) from module usbf_top (D = $flatten\u1.\u2.$verific$n746$2847 [31:24], Q = \u1.u2.dtmp_r [31:24]).
Adding EN signal on $flatten\u1.\u2.$verific$dtmp_r_reg$usbf_idma.v:372$2983 ($dff) from module usbf_top (D = $flatten\u1.\u2.$verific$n746$2847 [7:0], Q = \u1.u2.dtmp_r [7:0]).
Adding EN signal on $flatten\u1.\u2.$verific$dtmp_r_reg$usbf_idma.v:372$2983 ($dff) from module usbf_top (D = $flatten\u1.\u2.$verific$n746$2847 [15:8], Q = \u1.u2.dtmp_r [15:8]).
Adding EN signal on $flatten\u1.\u2.$verific$dtmp_r_reg$usbf_idma.v:372$2983 ($dff) from module usbf_top (D = $flatten\u1.\u2.$verific$n746$2847 [23:16], Q = \u1.u2.dtmp_r [23:16]).
Adding EN signal on $flatten\u1.\u2.$verific$dout_r_reg$usbf_idma.v:382$2994 ($dff) from module usbf_top (D = \u1.u2.dtmp_r, Q = \u1.u2.dout_r).
Adding SRST signal on $flatten\u1.\u2.$verific$adr_cb_reg$usbf_idma.v:307$2931 ($dff) from module usbf_top (D = $flatten\u1.\u2.$verific$n333$2826, Q = \u1.u2.adr_cb, rval = 3'000).
Adding SRST signal on $flatten\u1.\u1.$verific$zero_length_r_reg$usbf_pa.v:187$3259 ($dff) from module usbf_top (D = $flatten\u1.\u1.$verific$n12$3183, Q = \u1.u1.zero_length_r, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9823 ($sdff) from module usbf_top (D = \u1.u1.send_zero_length_r, Q = \u1.u1.zero_length_r).
Adding SRST signal on $flatten\u1.\u1.$verific$state_reg$usbf_pa.v:303$3355 ($dff) from module usbf_top (D = \u1.u1.next_state, Q = \u1.u1.state, rval = 5'00001).
Adding EN signal on $auto$ff.cc:262:slice$9829 ($sdff) from module usbf_top (D = \u1.u1.next_state, Q = \u1.u1.state).
Adding SRST signal on $flatten\u1.\u1.$verific$send_zero_length_r_reg$usbf_pa.v:176$3253 ($dff) from module usbf_top (D = $flatten\u1.\u3.$verific$n1419$3603, Q = \u1.u1.send_zero_length_r, rval = 1'0).
Adding SRST signal on $flatten\u1.\u1.$verific$send_token_r_reg$usbf_pa.v:204$3268 ($dff) from module usbf_top (D = $flatten\u1.\u1.$verific$n28$3190, Q = \u1.u1.send_token_r, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9850 ($sdff) from module usbf_top (D = $flatten\u1.\u1.$verific$n28$3190, Q = \u1.u1.send_token_r).
Adding SRST signal on $flatten\u1.\u1.$verific$crc16_reg$usbf_pa.v:264$3311 ($dff) from module usbf_top (D = $flatten\u1.\u1.$verific$n224$3237, Q = \u1.u1.crc16, rval = 16'1111111111111111).
Adding EN signal on $auto$ff.cc:262:slice$9854 ($sdff) from module usbf_top (D = { \u1.u1.crc16_next [15] \u1.u1.crc16 [6:2] \u1.u1.crc16_next [9:0] }, Q = \u1.u1.crc16).
Adding EN signal on $flatten\u1.\u0.$verific$token1_reg$usbf_pd.v:251$2541 ($dff) from module usbf_top (D = \u0.rx_data, Q = \u1.u0.token1).
Adding EN signal on $flatten\u1.\u0.$verific$token0_reg$usbf_pd.v:248$2539 ($dff) from module usbf_top (D = \u0.rx_data, Q = \u1.u0.token0).
Adding SRST signal on $flatten\u1.\u0.$verific$rxv2_reg$usbf_pd.v:311$2588 ($dff) from module usbf_top (D = $flatten\u1.\u0.$verific$n235$2412, Q = \u1.u0.rxv2, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9858 ($sdff) from module usbf_top (D = $flatten\u1.\u0.$verific$n235$2412, Q = \u1.u0.rxv2).
Adding SRST signal on $flatten\u1.\u0.$verific$rxv1_reg$usbf_pd.v:300$2583 ($dff) from module usbf_top (D = $flatten\u1.\u0.$verific$n225$2408, Q = \u1.u0.rxv1, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9862 ($sdff) from module usbf_top (D = $flatten\u1.\u0.$verific$n225$2408, Q = \u1.u0.rxv1).
Adding SRST signal on $flatten\u1.\u0.$verific$pid_reg$usbf_pd.v:221$2492 ($dff) from module usbf_top (D = $flatten\u1.\u0.$verific$n27$2455, Q = \u1.u0.pid, rval = 8'11110000).
Adding EN signal on $auto$ff.cc:262:slice$9866 ($sdff) from module usbf_top (D = \u0.rx_data, Q = \u1.u0.pid).
Adding EN signal on $flatten\u1.\u0.$verific$d2_reg$usbf_pd.v:321$2599 ($dff) from module usbf_top (D = \u1.u0.d1, Q = \u1.u0.d2).
Adding EN signal on $flatten\u1.\u0.$verific$d1_reg$usbf_pd.v:321$2598 ($dff) from module usbf_top (D = \u1.u0.d0, Q = \u1.u0.d1).
Adding EN signal on $flatten\u1.\u0.$verific$d0_reg$usbf_pd.v:321$2597 ($dff) from module usbf_top (D = \u0.rx_data, Q = \u1.u0.d0).
Adding SRST signal on $flatten\u1.\u0.$verific$crc16_sum_reg$usbf_pd.v:338$2612 ($dff) from module usbf_top (D = $flatten\u1.\u0.$verific$n376$2468, Q = \u1.u0.crc16_sum, rval = 16'1111111111111111).
Adding EN signal on $auto$ff.cc:262:slice$9871 ($sdff) from module usbf_top (D = { \u1.u0.crc16_out [15] \u1.u0.crc16_sum [6:2] \u1.u0.crc16_out [9:0] }, Q = \u1.u0.crc16_sum).
Adding SRST signal on $flatten\u1.$verific$sof_time_reg$usbf_pl.v:308$1382 ($dff) from module usbf_top (D = $flatten\u1.$verific$n186$1323, Q = \u1.sof_time, rval = 12'000000000000).
Adding EN signal on $auto$ff.cc:262:slice$9873 ($sdff) from module usbf_top (D = $flatten\u1.$verific$n160$1321, Q = \u1.sof_time).
Adding SRST signal on $flatten\u1.$verific$mfm_cnt_reg$usbf_pl.v:299$1375 ($dff) from module usbf_top (D = $flatten\u1.$verific$n122$1317, Q = \u1.mfm_cnt, rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$9875 ($sdff) from module usbf_top (D = $flatten\u1.$verific$n112$1315, Q = \u1.mfm_cnt).
Adding SRST signal on $flatten\u1.$verific$hms_cnt_reg$usbf_pl.v:321$1389 ($dff) from module usbf_top (D = $flatten\u1.$verific$n274$1327, Q = \u1.hms_cnt, rval = 5'00000).
Adding SRST signal on $flatten\u1.$verific$frame_no_r_reg$usbf_pl.v:283$1362 ($dff) from module usbf_top (D = $flatten\u1.$verific$n56$1312, Q = \u1.frame_no_r, rval = 11'00000000000).
Adding EN signal on $auto$ff.cc:262:slice$9886 ($sdff) from module usbf_top (D = { \u1.u0.token1 [2:0] \u1.u0.token0 }, Q = \u1.frame_no_r).
Adding SRST signal on $flatten\u0.\u0.$verific$usb_suspend_reg$usbf_utmi_ls.v:236$2125 ($dff) from module usbf_top (D = $flatten\u0.\u0.$verific$n27$1914, Q = \u0.u0.usb_suspend, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9888 ($sdff) from module usbf_top (D = 1'1, Q = \u0.u0.usb_suspend).
Adding SRST signal on $flatten\u0.\u0.$verific$usb_attached_reg$usbf_utmi_ls.v:241$2128 ($dff) from module usbf_top (D = $flatten\u0.\u0.$verific$n33$1916, Q = \u0.u0.usb_attached, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9890 ($sdff) from module usbf_top (D = 1'1, Q = \u0.u0.usb_attached).
Adding SRST signal on $flatten\u0.\u0.$verific$state_reg$usbf_utmi_ls.v:417$2280 ($dff) from module usbf_top (D = \u0.u0.next_state, Q = \u0.u0.state, rval = 15'000000000000001).
Adding EN signal on $auto$ff.cc:262:slice$9892 ($sdff) from module usbf_top (D = \u0.u0.next_state, Q = \u0.u0.state).
Adding SRST signal on $flatten\u0.\u0.$verific$ps_cnt_reg$usbf_utmi_ls.v:320$2184 ($dff) from module usbf_top (D = $flatten\u0.\u0.$verific$n127$2050, Q = \u0.u0.ps_cnt, rval = 4'0000).
Adding SRST signal on $flatten\u0.\u0.$verific$mode_hs_reg$usbf_utmi_ls.v:231$2122 ($dff) from module usbf_top (D = $flatten\u0.\u0.$verific$n21$1912, Q = \u0.u0.mode_hs, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9927 ($sdff) from module usbf_top (D = 1'1, Q = \u0.u0.mode_hs).
Adding SRST signal on $flatten\u0.\u0.$verific$me_ps_reg$usbf_utmi_ls.v:358$2227 ($dff) from module usbf_top (D = $flatten\u0.\u0.$verific$n277$2060, Q = \u0.u0.me_ps, rval = 8'00000000).
Adding SRST signal on $flatten\u0.\u0.$verific$me_ps2_reg$usbf_utmi_ls.v:367$2236 ($dff) from module usbf_top (D = $flatten\u0.\u0.$verific$n347$2065, Q = \u0.u0.me_ps2, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:262:slice$9930 ($sdff) from module usbf_top (D = $flatten\u0.\u0.$verific$n329$2063, Q = \u0.u0.me_ps2).
Adding SRST signal on $flatten\u0.\u0.$verific$me_cnt_reg$usbf_utmi_ls.v:376$2248 ($dff) from module usbf_top (D = $flatten\u0.\u0.$verific$n411$2069, Q = \u0.u0.me_cnt, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:262:slice$9932 ($sdff) from module usbf_top (D = $flatten\u0.\u0.$verific$n393$2067, Q = \u0.u0.me_cnt).
Adding SRST signal on $flatten\u0.\u0.$verific$idle_long_reg$usbf_utmi_ls.v:292$2165 ($dff) from module usbf_top (D = $flatten\u0.\u0.$verific$n98$1933, Q = \u0.u0.idle_long, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9934 ($sdff) from module usbf_top (D = 1'1, Q = \u0.u0.idle_long).
Adding SRST signal on $flatten\u0.\u0.$verific$idle_cnt1_reg$usbf_utmi_ls.v:329$2196 ($dff) from module usbf_top (D = $flatten\u0.\u0.$verific$n175$2055, Q = \u0.u0.idle_cnt1, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:262:slice$9940 ($sdff) from module usbf_top (D = \u0.u0.idle_cnt1_next, Q = \u0.u0.idle_cnt1).
Adding SRST signal on $flatten\u0.\u0.$verific$chirp_cnt_reg$usbf_utmi_ls.v:399$2272 ($dff) from module usbf_top (D = $flatten\u0.\u0.$verific$n482$2074, Q = \u0.u0.chirp_cnt, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$9942 ($sdff) from module usbf_top (D = $flatten\u0.\u0.$verific$n474$2072, Q = \u0.u0.chirp_cnt).
Adding SRST signal on $flatten\u0.\u0.$verific$XcvSelect_reg$usbf_utmi_ls.v:251$2134 ($dff) from module usbf_top (D = $flatten\u0.\u0.$verific$n45$1920, Q = \u0.u0.XcvSelect, rval = 1'1).
Adding EN signal on $auto$ff.cc:262:slice$9944 ($sdff) from module usbf_top (D = 1'0, Q = \u0.u0.XcvSelect).
Adding SRST signal on $flatten\u0.\u0.$verific$TermSel_reg$usbf_utmi_ls.v:246$2131 ($dff) from module usbf_top (D = $flatten\u0.\u0.$verific$n39$1918, Q = \u0.u0.TermSel, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9946 ($sdff) from module usbf_top (D = 1'1, Q = \u0.u0.TermSel).
Adding SRST signal on $flatten\u0.\u0.$verific$OpMode_reg$usbf_utmi_ls.v:256$2139 ($dff) from module usbf_top (D = $flatten\u0.\u0.$verific$n55$2046, Q = \u0.u0.OpMode, rval = 2'10).
Adding EN signal on $auto$ff.cc:262:slice$9948 ($sdff) from module usbf_top (D = 2'00, Q = \u0.u0.OpMode).
Adding SRST signal on $flatten\u0.$verific$rx_valid_reg$usbf_utmi_if.v:185$1233 ($dff) from module usbf_top (D = \RxValid_pad_i, Q = \u0.rx_valid, rval = 1'0).
Adding SRST signal on $flatten\u0.$verific$rx_err_reg$usbf_utmi_if.v:201$1239 ($dff) from module usbf_top (D = \RxError_pad_i, Q = \u0.rx_err, rval = 1'0).
Adding SRST signal on $flatten\u0.$verific$rx_active_reg$usbf_utmi_if.v:193$1236 ($dff) from module usbf_top (D = \RxActive_pad_i, Q = \u0.rx_active, rval = 1'0).
Adding SRST signal on $flatten\u0.$verific$TxValid_reg$usbf_utmi_if.v:230$1260 ($dff) from module usbf_top (D = $flatten\u0.$verific$n102$1220, Q = \u0.TxValid, rval = 1'0).
Adding EN signal on $flatten\u0.$verific$DataOut_reg$usbf_utmi_if.v:214$1247 ($dff) from module usbf_top (D = $flatten\u0.$verific$n70$1227, Q = \u0.DataOut).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$9691 ($sdffe) from module usbf_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$9949 ($sdffe) from module usbf_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$9727 ($sdff) from module usbf_top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$9727 ($sdff) from module usbf_top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$9727 ($sdff) from module usbf_top.

13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..
Removed 247 unused cells and 275 unused wires.
<suppressed ~258 debug messages>

13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.
<suppressed ~51 debug messages>

13.9. Rerunning OPT passes. (Maybe there is more to do..)

13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbf_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~132 debug messages>

13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbf_top.
Performed a total of 0 changes.

13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
<suppressed ~87 debug messages>
Removed a total of 29 cells.

13.13. Executing OPT_DFF pass (perform DFF optimizations).

13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..
Removed 0 unused cells and 29 unused wires.
<suppressed ~1 debug messages>

13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.

13.16. Rerunning OPT passes. (Maybe there is more to do..)

13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbf_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~133 debug messages>

13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbf_top.
Performed a total of 0 changes.

13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

13.20. Executing OPT_DFF pass (perform DFF optimizations).

13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..

13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.

13.23. Finished OPT passes. (There is nothing left to do.)

14. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 2) from port B of cell usbf_top.$flatten\u0.\u0.$verific$equal_61$usbf_utmi_ls.v:268$2146 ($eq).
Removed top 3 bits (of 4) from port B of cell usbf_top.$flatten\u0.\u0.$verific$add_107$usbf_utmi_ls.v:320$2181 ($add).
Removed top 7 bits (of 8) from port B of cell usbf_top.$flatten\u0.\u0.$verific$add_127$usbf_utmi_ls.v:332$2197 ($add).
Removed top 4 bits (of 8) from port A of cell usbf_top.$flatten\u0.\u0.$verific$LessThan_136$usbf_utmi_ls.v:338$2204 ($lt).
Removed top 2 bits (of 8) from port B of cell usbf_top.$flatten\u0.\u0.$verific$LessThan_142$usbf_utmi_ls.v:341$2208 ($lt).
Removed top 2 bits (of 8) from port A of cell usbf_top.$flatten\u0.\u0.$verific$LessThan_148$usbf_utmi_ls.v:344$2212 ($lt).
Removed top 1 bits (of 8) from port A of cell usbf_top.$flatten\u0.\u0.$verific$LessThan_160$usbf_utmi_ls.v:350$2220 ($lt).
Removed top 7 bits (of 8) from port B of cell usbf_top.$flatten\u0.\u0.$verific$add_167$usbf_utmi_ls.v:358$2225 ($add).
Removed top 7 bits (of 8) from port B of cell usbf_top.$flatten\u0.\u0.$verific$add_178$usbf_utmi_ls.v:367$2232 ($add).
Removed top 7 bits (of 8) from port B of cell usbf_top.$flatten\u0.\u0.$verific$add_193$usbf_utmi_ls.v:376$2244 ($add).
Removed top 2 bits (of 8) from port A of cell usbf_top.$flatten\u0.\u0.$verific$LessThan_200$usbf_utmi_ls.v:379$2250 ($lt).
Removed top 4 bits (of 8) from port A of cell usbf_top.$flatten\u0.\u0.$verific$LessThan_206$usbf_utmi_ls.v:382$2254 ($lt).
Removed top 6 bits (of 8) from port A of cell usbf_top.$flatten\u0.\u0.$verific$LessThan_212$usbf_utmi_ls.v:385$2258 ($lt).
Removed top 2 bits (of 3) from port B of cell usbf_top.$flatten\u0.\u0.$verific$add_230$usbf_utmi_ls.v:399$2268 ($add).
Removed top 14 bits (of 15) from port B of cell usbf_top.$flatten\u0.\u0.$verific$equal_317$usbf_utmi_ls.v:449$2319 ($eq).
Removed top 13 bits (of 15) from port B of cell usbf_top.$flatten\u0.\u0.$verific$equal_318$usbf_utmi_ls.v:461$2320 ($eq).
Removed top 12 bits (of 15) from port B of cell usbf_top.$flatten\u0.\u0.$verific$equal_319$usbf_utmi_ls.v:486$2321 ($eq).
Removed top 11 bits (of 15) from port B of cell usbf_top.$flatten\u0.\u0.$verific$equal_320$usbf_utmi_ls.v:502$2322 ($eq).
Removed top 10 bits (of 15) from port B of cell usbf_top.$flatten\u0.\u0.$verific$equal_321$usbf_utmi_ls.v:518$2323 ($eq).
Removed top 8 bits (of 15) from port B of cell usbf_top.$flatten\u0.\u0.$verific$equal_322$usbf_utmi_ls.v:534$2324 ($eq).
Removed top 9 bits (of 15) from port B of cell usbf_top.$flatten\u0.\u0.$verific$equal_323$usbf_utmi_ls.v:539$2325 ($eq).
Removed top 7 bits (of 15) from port B of cell usbf_top.$flatten\u0.\u0.$verific$equal_324$usbf_utmi_ls.v:552$2326 ($eq).
Removed top 6 bits (of 15) from port B of cell usbf_top.$flatten\u0.\u0.$verific$equal_325$usbf_utmi_ls.v:560$2327 ($eq).
Removed top 5 bits (of 15) from port B of cell usbf_top.$flatten\u0.\u0.$verific$equal_326$usbf_utmi_ls.v:579$2328 ($eq).
Removed top 4 bits (of 15) from port B of cell usbf_top.$flatten\u0.\u0.$verific$equal_327$usbf_utmi_ls.v:594$2329 ($eq).
Removed top 3 bits (of 15) from port B of cell usbf_top.$flatten\u0.\u0.$verific$equal_328$usbf_utmi_ls.v:602$2330 ($eq).
Removed top 2 bits (of 15) from port B of cell usbf_top.$flatten\u0.\u0.$verific$equal_329$usbf_utmi_ls.v:617$2331 ($eq).
Removed top 1 bits (of 15) from port B of cell usbf_top.$flatten\u0.\u0.$verific$equal_330$usbf_utmi_ls.v:632$2332 ($eq).
Removed top 1 bits (of 2) from port B of cell usbf_top.$auto$fsm_map.cc:77:implement_pattern_cache$9237 ($eq).
Removed top 1 bits (of 4) from port B of cell usbf_top.$auto$fsm_map.cc:77:implement_pattern_cache$9282 ($eq).
Removed top 1 bits (of 2) from port B of cell usbf_top.$auto$fsm_map.cc:77:implement_pattern_cache$9290 ($eq).
Removed top 3 bits (of 4) from port B of cell usbf_top.$flatten\u1.\u0.$verific$equal_16$usbf_pd.v:225$2496 ($eq).
Removed top 1 bits (of 4) from port B of cell usbf_top.$flatten\u1.\u0.$verific$equal_20$usbf_pd.v:227$2500 ($eq).
Removed top 2 bits (of 4) from port B of cell usbf_top.$flatten\u1.\u0.$verific$equal_24$usbf_pd.v:229$2504 ($eq).
Removed top 1 bits (of 4) from port B of cell usbf_top.$flatten\u1.\u0.$verific$equal_28$usbf_pd.v:231$2508 ($eq).
Removed top 2 bits (of 4) from port B of cell usbf_top.$flatten\u1.\u0.$verific$equal_32$usbf_pd.v:233$2512 ($eq).
Removed top 1 bits (of 4) from port B of cell usbf_top.$flatten\u1.\u0.$verific$equal_38$usbf_pd.v:236$2518 ($eq).
Removed top 1 bits (of 4) from port B of cell usbf_top.$flatten\u1.\u0.$verific$equal_46$usbf_pd.v:240$2525 ($eq).
Removed top 4 bits (of 5) from port B of cell usbf_top.$auto$fsm_map.cc:77:implement_pattern_cache$9267 ($eq).
Removed top 4 bits (of 5) from port B of cell usbf_top.$flatten\u1.\u1.$verific$equal_142$usbf_pa.v:315$3368 ($eq).
Removed top 3 bits (of 5) from port B of cell usbf_top.$flatten\u1.\u1.$verific$equal_143$usbf_pa.v:331$3369 ($eq).
Removed top 2 bits (of 5) from port B of cell usbf_top.$flatten\u1.\u1.$verific$equal_145$usbf_pa.v:351$3371 ($eq).
Removed top 1 bits (of 5) from port B of cell usbf_top.$flatten\u1.\u1.$verific$equal_146$usbf_pa.v:368$3372 ($eq).
Removed top 3 bits (of 17) from port B of cell usbf_top.$flatten\u1.\u2.$verific$add_44$usbf_idma.v:289$2916 ($add).
Removed top 2 bits (of 17) from port Y of cell usbf_top.$flatten\u1.\u2.$verific$add_44$usbf_idma.v:289$2916 ($add).
Removed top 2 bits (of 17) from port A of cell usbf_top.$flatten\u1.\u2.$verific$add_44$usbf_idma.v:289$2916 ($add).
Removed top 14 bits (of 15) from port B of cell usbf_top.$flatten\u1.\u2.$verific$add_51$usbf_idma.v:296$2924 ($add).
Removed top 2 bits (of 3) from port B of cell usbf_top.$flatten\u1.\u2.$verific$add_64$usbf_idma.v:310$2932 ($add).
Removed top 13 bits (of 14) from port B of cell usbf_top.$flatten\u1.\u2.$verific$sub_78$usbf_idma.v:326$2943 ($sub).
Removed top 10 bits (of 11) from port B of cell usbf_top.$flatten\u1.\u2.$verific$add_98$usbf_idma.v:346$2959 ($add).
Removed top 1 bits (of 2) from port B of cell usbf_top.$flatten\u1.\u2.$verific$equal_124$usbf_idma.v:369$2975 ($eq).
Removed top 13 bits (of 14) from port B of cell usbf_top.$flatten\u1.\u2.$verific$equal_213$usbf_idma.v:431$3017 ($eq).
Removed top 7 bits (of 8) from port B of cell usbf_top.$flatten\u1.\u2.$verific$equal_261$usbf_idma.v:463$3049 ($eq).
Removed top 6 bits (of 8) from port B of cell usbf_top.$flatten\u1.\u2.$verific$equal_262$usbf_idma.v:490$3050 ($eq).
Removed top 5 bits (of 8) from port B of cell usbf_top.$flatten\u1.\u2.$verific$equal_263$usbf_idma.v:513$3051 ($eq).
Removed top 4 bits (of 8) from port B of cell usbf_top.$flatten\u1.\u2.$verific$equal_264$usbf_idma.v:536$3052 ($eq).
Removed top 3 bits (of 8) from port B of cell usbf_top.$flatten\u1.\u2.$verific$equal_265$usbf_idma.v:559$3053 ($eq).
Removed top 2 bits (of 8) from port B of cell usbf_top.$flatten\u1.\u2.$verific$equal_266$usbf_idma.v:575$3054 ($eq).
Removed top 1 bits (of 8) from port B of cell usbf_top.$flatten\u1.\u2.$verific$equal_267$usbf_idma.v:594$3055 ($eq).
Removed top 1 bits (of 2) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_9$usbf_pe.v:367$3769 ($eq).
Removed top 1 bits (of 2) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_13$usbf_pe.v:370$3773 ($eq).
Removed top 1 bits (of 2) from mux cell usbf_top.$flatten\u1.\u3.$verific$select_79$usbf_pe.v:441$3820 ($mux).
Removed top 1 bits (of 4) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_169$usbf_pe.v:495$3899 ($eq).
Removed top 2 bits (of 4) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_170$usbf_pe.v:496$3900 ($eq).
Removed top 3 bits (of 4) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_171$usbf_pe.v:497$3901 ($eq).
Removed top 1 bits (of 2) from mux cell usbf_top.$flatten\u1.\u3.$verific$select_207$usbf_pe.v:538$3905 ($mux).
Removed top 1 bits (of 2) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_273$usbf_pe.v:547$3924 ($eq).
Removed top 3 bits (of 14) from port B of cell usbf_top.$flatten\u1.\u3.$verific$LessThan_333$usbf_pe.v:611$3968 ($lt).
Removed top 3 bits (of 14) from port B of cell usbf_top.$flatten\u1.\u3.$verific$LessThan_339$usbf_pe.v:622$3973 ($lt).
Removed top 3 bits (of 14) from port B of cell usbf_top.$flatten\u1.\u3.$verific$LessThan_358$usbf_pe.v:638$3989 ($lt).
Removed top 3 bits (of 14) from port B of cell usbf_top.$flatten\u1.\u3.$verific$LessThan_362$usbf_pe.v:641$3992 ($lt).
Removed top 3 bits (of 14) from mux cell usbf_top.$flatten\u1.\u3.$verific$mux_383$usbf_pe.v:654$4010 ($mux).
Removed top 3 bits (of 14) from port B of cell usbf_top.$flatten\u1.\u3.$verific$sub_387$usbf_pe.v:657$4013 ($sub).
Removed top 3 bits (of 17) from port B of cell usbf_top.$flatten\u1.\u3.$verific$add_399$usbf_pe.v:670$4022 ($add).
Removed top 3 bits (of 14) from port B of cell usbf_top.$flatten\u1.\u3.$verific$LessThan_402$usbf_pe.v:674$4024 ($lt).
Removed top 1 bits (of 2) from port B of cell usbf_top.$flatten\u1.\u3.$verific$add_428$usbf_pe.v:701$4046 ($add).
Removed top 4 bits (of 28) from mux cell usbf_top.$flatten\u1.\u3.$verific$mux_713$usbf_pe.v:704$4051 ($mux).
Removed top 9 bits (of 10) from port B of cell usbf_top.$flatten\u1.\u3.$verific$not_equal_501$usbf_pe.v:733$4068 ($ne).
Removed top 7 bits (of 8) from port B of cell usbf_top.$flatten\u1.\u3.$verific$add_514$usbf_pe.v:751$4078 ($add).
Removed top 2 bits (of 8) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_519$usbf_pe.v:754$4082 ($eq).
Removed top 7 bits (of 8) from port B of cell usbf_top.$flatten\u1.\u3.$verific$add_527$usbf_pe.v:768$4088 ($add).
Removed top 2 bits (of 8) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_532$usbf_pe.v:771$4092 ($eq).
Removed top 6 bits (of 10) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_578$usbf_pe.v:803$4131 ($eq).
Removed top 5 bits (of 10) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_580$usbf_pe.v:803$4133 ($eq).
Removed top 9 bits (of 10) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_676$usbf_pe.v:846$4212 ($eq).
Removed top 8 bits (of 10) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_677$usbf_pe.v:915$4213 ($eq).
Removed top 7 bits (of 10) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_678$usbf_pe.v:925$4214 ($eq).
Removed top 1 bits (of 4) from mux cell usbf_top.$flatten\u1.\u3.$verific$select_725$usbf_pe.v:449$4215 ($mux).
Removed top 4 bits (of 10) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_681$usbf_pe.v:995$4216 ($eq).
Removed top 3 bits (of 10) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_682$usbf_pe.v:1009$4217 ($eq).
Removed top 2 bits (of 10) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_683$usbf_pe.v:1047$4218 ($eq).
Removed top 1 bits (of 10) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_684$usbf_pe.v:1056$4219 ($eq).
Removed top 4 bits (of 5) from port B of cell usbf_top.$flatten\u1.$verific$add_69$usbf_pl.v:321$1386 ($add).
Removed top 11 bits (of 12) from port B of cell usbf_top.$flatten\u1.$verific$add_58$usbf_pl.v:308$1378 ($add).
Removed top 3 bits (of 4) from port B of cell usbf_top.$flatten\u1.$verific$add_47$usbf_pl.v:299$1370 ($add).
Removed top 1 bits (of 2) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_3$usbf_pe.v:363$3763 ($eq).
Removed top 1 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9758 ($ne).
Removed top 1 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9756 ($ne).
Removed top 1 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9752 ($ne).
Removed top 1 bits (of 4) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9760 ($ne).
Removed top 3 bits (of 5) from port B of cell usbf_top.$auto$fsm_map.cc:77:implement_pattern_cache$9344 ($eq).
Removed top 1 bits (of 2) from port B of cell usbf_top.$auto$fsm_map.cc:77:implement_pattern_cache$9340 ($eq).
Removed top 2 bits (of 4) from port B of cell usbf_top.$auto$fsm_map.cc:77:implement_pattern_cache$9335 ($eq).
Removed top 1 bits (of 3) from port B of cell usbf_top.$auto$fsm_map.cc:77:implement_pattern_cache$9322 ($eq).
Removed top 4 bits (of 5) from port B of cell usbf_top.$auto$fsm_map.cc:77:implement_pattern_cache$9351 ($eq).
Removed top 1 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9818 ($ne).
Removed top 1 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9811 ($ne).
Removed top 1 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9804 ($ne).
Removed top 1 bits (of 4) from port B of cell usbf_top.$auto$fsm_map.cc:77:implement_pattern_cache$9242 ($eq).
Removed top 1 bits (of 2) from port B of cell usbf_top.$flatten\u4.\u3.$verific$equal_7$usbf_ep_rf.v:208$8848 ($eq).
Removed top 4 bits (of 13) from mux cell usbf_top.$flatten\u4.\u3.$verific$mux_42$usbf_ep_rf.v:250$8876 ($mux).
Removed top 11 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u3.$verific$sub_175$usbf_ep_rf.v:394$8974 ($sub).
Removed top 3 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u3.$verific$add_180$usbf_ep_rf.v:397$8979 ($add).
Removed top 11 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u3.$verific$add_201$usbf_ep_rf.v:419$8995 ($add).
Removed top 3 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u3.$verific$sub_206$usbf_ep_rf.v:422$8997 ($sub).
Removed top 3 bits (of 12) from port A of cell usbf_top.$flatten\u4.\u3.$verific$LessThan_213$usbf_ep_rf.v:427$9003 ($le).
Removed top 3 bits (of 12) from port A of cell usbf_top.$flatten\u4.\u3.$verific$LessThan_223$usbf_ep_rf.v:436$9011 ($le).
Removed top 10 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u3.$verific$sub_236$usbf_ep_rf.v:449$9023 ($sub).
Removed top 1 bits (of 2) from port B of cell usbf_top.$flatten\u4.\u2.$verific$equal_7$usbf_ep_rf.v:208$8848 ($eq).
Removed top 4 bits (of 13) from mux cell usbf_top.$flatten\u4.\u2.$verific$mux_42$usbf_ep_rf.v:250$8876 ($mux).
Removed top 11 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u2.$verific$sub_175$usbf_ep_rf.v:394$8974 ($sub).
Removed top 3 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u2.$verific$add_180$usbf_ep_rf.v:397$8979 ($add).
Removed top 11 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u2.$verific$add_201$usbf_ep_rf.v:419$8995 ($add).
Removed top 3 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u2.$verific$sub_206$usbf_ep_rf.v:422$8997 ($sub).
Removed top 3 bits (of 12) from port A of cell usbf_top.$flatten\u4.\u2.$verific$LessThan_213$usbf_ep_rf.v:427$9003 ($le).
Removed top 3 bits (of 12) from port A of cell usbf_top.$flatten\u4.\u2.$verific$LessThan_223$usbf_ep_rf.v:436$9011 ($le).
Removed top 10 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u2.$verific$sub_236$usbf_ep_rf.v:449$9023 ($sub).
Removed top 1 bits (of 2) from port B of cell usbf_top.$flatten\u4.\u1.$verific$equal_7$usbf_ep_rf.v:208$8848 ($eq).
Removed top 4 bits (of 13) from mux cell usbf_top.$flatten\u4.\u1.$verific$mux_42$usbf_ep_rf.v:250$8876 ($mux).
Removed top 11 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u1.$verific$sub_175$usbf_ep_rf.v:394$8974 ($sub).
Removed top 3 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u1.$verific$add_180$usbf_ep_rf.v:397$8979 ($add).
Removed top 11 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u1.$verific$add_201$usbf_ep_rf.v:419$8995 ($add).
Removed top 3 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u1.$verific$sub_206$usbf_ep_rf.v:422$8997 ($sub).
Removed top 3 bits (of 12) from port A of cell usbf_top.$flatten\u4.\u1.$verific$LessThan_213$usbf_ep_rf.v:427$9003 ($le).
Removed top 3 bits (of 12) from port A of cell usbf_top.$flatten\u4.\u1.$verific$LessThan_223$usbf_ep_rf.v:436$9011 ($le).
Removed top 10 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u1.$verific$sub_236$usbf_ep_rf.v:449$9023 ($sub).
Removed top 1 bits (of 2) from port B of cell usbf_top.$flatten\u4.\u0.$verific$equal_7$usbf_ep_rf.v:208$8848 ($eq).
Removed top 1 bits (of 2) from port B of cell usbf_top.$flatten\u4.\u0.$verific$equal_19$usbf_ep_rf.v:225$8857 ($eq).
Removed top 4 bits (of 13) from mux cell usbf_top.$flatten\u4.\u0.$verific$mux_42$usbf_ep_rf.v:250$8876 ($mux).
Removed top 11 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u0.$verific$sub_175$usbf_ep_rf.v:394$8974 ($sub).
Removed top 3 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u0.$verific$add_180$usbf_ep_rf.v:397$8979 ($add).
Removed top 11 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u0.$verific$add_201$usbf_ep_rf.v:419$8995 ($add).
Removed top 3 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u0.$verific$sub_206$usbf_ep_rf.v:422$8997 ($sub).
Removed top 3 bits (of 12) from port A of cell usbf_top.$flatten\u4.\u0.$verific$LessThan_213$usbf_ep_rf.v:427$9003 ($le).
Removed top 3 bits (of 12) from port A of cell usbf_top.$flatten\u4.\u0.$verific$LessThan_223$usbf_ep_rf.v:436$9011 ($le).
Removed top 10 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u0.$verific$sub_236$usbf_ep_rf.v:449$9023 ($sub).
Removed top 12 bits (of 16) from port A of cell usbf_top.$flatten\u4.$verific$or_645$usbf_rf.v:765$5064 ($or).
Removed top 12 bits (of 16) from port B of cell usbf_top.$flatten\u4.$verific$or_645$usbf_rf.v:765$5064 ($or).
Removed top 12 bits (of 16) from port Y of cell usbf_top.$flatten\u4.$verific$or_645$usbf_rf.v:765$5064 ($or).
Removed top 2 bits (of 5) from port B of cell usbf_top.$flatten\u4.$verific$equal_165$usbf_rf.v:417$4768 ($eq).
Removed top 2 bits (of 5) from port B of cell usbf_top.$flatten\u4.$verific$equal_162$usbf_rf.v:416$4765 ($eq).
Removed top 2 bits (of 5) from port B of cell usbf_top.$flatten\u4.$verific$equal_159$usbf_rf.v:415$4762 ($eq).
Removed top 2 bits (of 5) from port B of cell usbf_top.$flatten\u4.$verific$equal_156$usbf_rf.v:414$4759 ($eq).
Removed top 5 bits (of 7) from port B of cell usbf_top.$flatten\u4.$verific$equal_123$usbf_rf.v:384$4746 ($eq).
Removed top 6 bits (of 7) from port B of cell usbf_top.$flatten\u4.$verific$equal_113$usbf_rf.v:370$4738 ($eq).
Removed top 4 bits (of 7) from port B of cell usbf_top.$flatten\u4.$verific$equal_76$usbf_rf.v:332$4714 ($eq).
Removed top 5 bits (of 7) from port B of cell usbf_top.$flatten\u4.$verific$equal_66$usbf_rf.v:318$4707 ($eq).
Removed top 1 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9762 ($ne).
Removed top 2 bits (of 3) from port B of cell usbf_top.$auto$fsm_map.cc:77:implement_pattern_cache$9250 ($eq).
Removed top 3 bits (of 14) from mux cell usbf_top.$flatten\u1.\u3.$verific$mux_382$usbf_pe.v:654$4009 ($mux).
Removed top 2 bits (of 17) from wire usbf_top.$flatten\u1.\u2.$verific$n169$2817.
Removed top 4 bits (of 15) from wire usbf_top.$flatten\u1.\u3.$verific$n1006$3716.
Removed top 1 bits (of 2) from wire usbf_top.$flatten\u1.\u3.$verific$n185$3658.
Removed top 1 bits (of 2) from wire usbf_top.$flatten\u1.\u3.$verific$n403$3696.
Removed top 3 bits (of 14) from wire usbf_top.$flatten\u1.\u3.$verific$n707$3702.
Removed top 3 bits (of 14) from wire usbf_top.$flatten\u1.\u3.$verific$n722$3703.
Removed top 12 bits (of 16) from wire usbf_top.$flatten\u4.$verific$n6984$4699.
Removed top 4 bits (of 13) from wire usbf_top.$flatten\u4.\u0.$verific$n345$8787.
Removed top 4 bits (of 13) from wire usbf_top.$flatten\u4.\u1.$verific$n345$8787.
Removed top 4 bits (of 13) from wire usbf_top.$flatten\u4.\u2.$verific$n345$8787.
Removed top 4 bits (of 13) from wire usbf_top.$flatten\u4.\u3.$verific$n345$8787.

15. Executing PEEPOPT pass (run peephole optimizers).

16. Executing PMUXTREE pass.

17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..
Removed 64 unused cells and 108 unused wires.
<suppressed ~65 debug messages>

18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module usbf_top:
  creating $macc model for $flatten\u0.\u0.$verific$add_107$usbf_utmi_ls.v:320$2181 ($add).
  creating $macc model for $flatten\u0.\u0.$verific$add_127$usbf_utmi_ls.v:332$2197 ($add).
  creating $macc model for $flatten\u0.\u0.$verific$add_167$usbf_utmi_ls.v:358$2225 ($add).
  creating $macc model for $flatten\u0.\u0.$verific$add_178$usbf_utmi_ls.v:367$2232 ($add).
  creating $macc model for $flatten\u0.\u0.$verific$add_193$usbf_utmi_ls.v:376$2244 ($add).
  creating $macc model for $flatten\u0.\u0.$verific$add_230$usbf_utmi_ls.v:399$2268 ($add).
  creating $macc model for $flatten\u1.$verific$add_47$usbf_pl.v:299$1370 ($add).
  creating $macc model for $flatten\u1.$verific$add_58$usbf_pl.v:308$1378 ($add).
  creating $macc model for $flatten\u1.$verific$add_69$usbf_pl.v:321$1386 ($add).
  creating $macc model for $flatten\u1.\u2.$verific$add_44$usbf_idma.v:289$2916 ($add).
  creating $macc model for $flatten\u1.\u2.$verific$add_51$usbf_idma.v:296$2924 ($add).
  creating $macc model for $flatten\u1.\u2.$verific$add_64$usbf_idma.v:310$2932 ($add).
  creating $macc model for $flatten\u1.\u2.$verific$add_98$usbf_idma.v:346$2959 ($add).
  creating $macc model for $flatten\u1.\u2.$verific$sub_78$usbf_idma.v:326$2943 ($sub).
  creating $macc model for $flatten\u1.\u3.$verific$add_399$usbf_pe.v:670$4022 ($add).
  creating $macc model for $flatten\u1.\u3.$verific$add_428$usbf_pe.v:701$4046 ($add).
  creating $macc model for $flatten\u1.\u3.$verific$add_514$usbf_pe.v:751$4078 ($add).
  creating $macc model for $flatten\u1.\u3.$verific$add_527$usbf_pe.v:768$4088 ($add).
  creating $macc model for $flatten\u1.\u3.$verific$sub_387$usbf_pe.v:657$4013 ($sub).
  creating $macc model for $flatten\u4.\u0.$verific$add_180$usbf_ep_rf.v:397$8979 ($add).
  creating $macc model for $flatten\u4.\u0.$verific$add_201$usbf_ep_rf.v:419$8995 ($add).
  creating $macc model for $flatten\u4.\u0.$verific$sub_175$usbf_ep_rf.v:394$8974 ($sub).
  creating $macc model for $flatten\u4.\u0.$verific$sub_206$usbf_ep_rf.v:422$8997 ($sub).
  creating $macc model for $flatten\u4.\u0.$verific$sub_219$usbf_ep_rf.v:433$9008 ($sub).
  creating $macc model for $flatten\u4.\u0.$verific$sub_236$usbf_ep_rf.v:449$9023 ($sub).
  creating $macc model for $flatten\u4.\u1.$verific$add_180$usbf_ep_rf.v:397$8979 ($add).
  creating $macc model for $flatten\u4.\u1.$verific$add_201$usbf_ep_rf.v:419$8995 ($add).
  creating $macc model for $flatten\u4.\u1.$verific$sub_175$usbf_ep_rf.v:394$8974 ($sub).
  creating $macc model for $flatten\u4.\u1.$verific$sub_206$usbf_ep_rf.v:422$8997 ($sub).
  creating $macc model for $flatten\u4.\u1.$verific$sub_219$usbf_ep_rf.v:433$9008 ($sub).
  creating $macc model for $flatten\u4.\u1.$verific$sub_236$usbf_ep_rf.v:449$9023 ($sub).
  creating $macc model for $flatten\u4.\u2.$verific$add_180$usbf_ep_rf.v:397$8979 ($add).
  creating $macc model for $flatten\u4.\u2.$verific$add_201$usbf_ep_rf.v:419$8995 ($add).
  creating $macc model for $flatten\u4.\u2.$verific$sub_175$usbf_ep_rf.v:394$8974 ($sub).
  creating $macc model for $flatten\u4.\u2.$verific$sub_206$usbf_ep_rf.v:422$8997 ($sub).
  creating $macc model for $flatten\u4.\u2.$verific$sub_219$usbf_ep_rf.v:433$9008 ($sub).
  creating $macc model for $flatten\u4.\u2.$verific$sub_236$usbf_ep_rf.v:449$9023 ($sub).
  creating $macc model for $flatten\u4.\u3.$verific$add_180$usbf_ep_rf.v:397$8979 ($add).
  creating $macc model for $flatten\u4.\u3.$verific$add_201$usbf_ep_rf.v:419$8995 ($add).
  creating $macc model for $flatten\u4.\u3.$verific$sub_175$usbf_ep_rf.v:394$8974 ($sub).
  creating $macc model for $flatten\u4.\u3.$verific$sub_206$usbf_ep_rf.v:422$8997 ($sub).
  creating $macc model for $flatten\u4.\u3.$verific$sub_219$usbf_ep_rf.v:433$9008 ($sub).
  creating $macc model for $flatten\u4.\u3.$verific$sub_236$usbf_ep_rf.v:449$9023 ($sub).
  creating $alu model for $macc $flatten\u4.\u3.$verific$sub_236$usbf_ep_rf.v:449$9023.
  creating $alu model for $macc $flatten\u4.\u3.$verific$sub_219$usbf_ep_rf.v:433$9008.
  creating $alu model for $macc $flatten\u4.\u3.$verific$sub_206$usbf_ep_rf.v:422$8997.
  creating $alu model for $macc $flatten\u4.\u3.$verific$sub_175$usbf_ep_rf.v:394$8974.
  creating $alu model for $macc $flatten\u4.\u3.$verific$add_201$usbf_ep_rf.v:419$8995.
  creating $alu model for $macc $flatten\u4.\u3.$verific$add_180$usbf_ep_rf.v:397$8979.
  creating $alu model for $macc $flatten\u4.\u2.$verific$sub_236$usbf_ep_rf.v:449$9023.
  creating $alu model for $macc $flatten\u4.\u2.$verific$sub_219$usbf_ep_rf.v:433$9008.
  creating $alu model for $macc $flatten\u4.\u2.$verific$sub_206$usbf_ep_rf.v:422$8997.
  creating $alu model for $macc $flatten\u4.\u2.$verific$sub_175$usbf_ep_rf.v:394$8974.
  creating $alu model for $macc $flatten\u4.\u2.$verific$add_201$usbf_ep_rf.v:419$8995.
  creating $alu model for $macc $flatten\u4.\u2.$verific$add_180$usbf_ep_rf.v:397$8979.
  creating $alu model for $macc $flatten\u4.\u1.$verific$sub_236$usbf_ep_rf.v:449$9023.
  creating $alu model for $macc $flatten\u4.\u1.$verific$sub_219$usbf_ep_rf.v:433$9008.
  creating $alu model for $macc $flatten\u4.\u1.$verific$sub_206$usbf_ep_rf.v:422$8997.
  creating $alu model for $macc $flatten\u4.\u1.$verific$sub_175$usbf_ep_rf.v:394$8974.
  creating $alu model for $macc $flatten\u4.\u1.$verific$add_201$usbf_ep_rf.v:419$8995.
  creating $alu model for $macc $flatten\u4.\u1.$verific$add_180$usbf_ep_rf.v:397$8979.
  creating $alu model for $macc $flatten\u4.\u0.$verific$sub_236$usbf_ep_rf.v:449$9023.
  creating $alu model for $macc $flatten\u4.\u0.$verific$sub_219$usbf_ep_rf.v:433$9008.
  creating $alu model for $macc $flatten\u4.\u0.$verific$sub_206$usbf_ep_rf.v:422$8997.
  creating $alu model for $macc $flatten\u4.\u0.$verific$sub_175$usbf_ep_rf.v:394$8974.
  creating $alu model for $macc $flatten\u4.\u0.$verific$add_201$usbf_ep_rf.v:419$8995.
  creating $alu model for $macc $flatten\u4.\u0.$verific$add_180$usbf_ep_rf.v:397$8979.
  creating $alu model for $macc $flatten\u1.\u3.$verific$sub_387$usbf_pe.v:657$4013.
  creating $alu model for $macc $flatten\u1.\u3.$verific$add_527$usbf_pe.v:768$4088.
  creating $alu model for $macc $flatten\u1.\u3.$verific$add_514$usbf_pe.v:751$4078.
  creating $alu model for $macc $flatten\u1.\u3.$verific$add_428$usbf_pe.v:701$4046.
  creating $alu model for $macc $flatten\u1.\u3.$verific$add_399$usbf_pe.v:670$4022.
  creating $alu model for $macc $flatten\u1.\u2.$verific$sub_78$usbf_idma.v:326$2943.
  creating $alu model for $macc $flatten\u1.\u2.$verific$add_98$usbf_idma.v:346$2959.
  creating $alu model for $macc $flatten\u1.\u2.$verific$add_64$usbf_idma.v:310$2932.
  creating $alu model for $macc $flatten\u1.\u2.$verific$add_51$usbf_idma.v:296$2924.
  creating $alu model for $macc $flatten\u1.\u2.$verific$add_44$usbf_idma.v:289$2916.
  creating $alu model for $macc $flatten\u1.$verific$add_69$usbf_pl.v:321$1386.
  creating $alu model for $macc $flatten\u1.$verific$add_58$usbf_pl.v:308$1378.
  creating $alu model for $macc $flatten\u1.$verific$add_47$usbf_pl.v:299$1370.
  creating $alu model for $macc $flatten\u0.\u0.$verific$add_230$usbf_utmi_ls.v:399$2268.
  creating $alu model for $macc $flatten\u0.\u0.$verific$add_193$usbf_utmi_ls.v:376$2244.
  creating $alu model for $macc $flatten\u0.\u0.$verific$add_178$usbf_utmi_ls.v:367$2232.
  creating $alu model for $macc $flatten\u0.\u0.$verific$add_167$usbf_utmi_ls.v:358$2225.
  creating $alu model for $macc $flatten\u0.\u0.$verific$add_127$usbf_utmi_ls.v:332$2197.
  creating $alu model for $macc $flatten\u0.\u0.$verific$add_107$usbf_utmi_ls.v:320$2181.
  creating $alu model for $flatten\u0.\u0.$verific$LessThan_136$usbf_utmi_ls.v:338$2204 ($lt): new $alu
  creating $alu model for $flatten\u0.\u0.$verific$LessThan_142$usbf_utmi_ls.v:341$2208 ($lt): new $alu
  creating $alu model for $flatten\u0.\u0.$verific$LessThan_148$usbf_utmi_ls.v:344$2212 ($lt): merged with $flatten\u0.\u0.$verific$LessThan_142$usbf_utmi_ls.v:341$2208.
  creating $alu model for $flatten\u0.\u0.$verific$LessThan_160$usbf_utmi_ls.v:350$2220 ($lt): new $alu
  creating $alu model for $flatten\u0.\u0.$verific$LessThan_200$usbf_utmi_ls.v:379$2250 ($lt): new $alu
  creating $alu model for $flatten\u0.\u0.$verific$LessThan_206$usbf_utmi_ls.v:382$2254 ($lt): new $alu
  creating $alu model for $flatten\u0.\u0.$verific$LessThan_212$usbf_utmi_ls.v:385$2258 ($lt): new $alu
  creating $alu model for $flatten\u1.\u3.$verific$LessThan_333$usbf_pe.v:611$3968 ($lt): new $alu
  creating $alu model for $flatten\u1.\u3.$verific$LessThan_339$usbf_pe.v:622$3973 ($lt): new $alu
  creating $alu model for $flatten\u1.\u3.$verific$LessThan_358$usbf_pe.v:638$3989 ($lt): new $alu
  creating $alu model for $flatten\u1.\u3.$verific$LessThan_362$usbf_pe.v:641$3992 ($lt): new $alu
  creating $alu model for $flatten\u1.\u3.$verific$LessThan_402$usbf_pe.v:674$4024 ($lt): new $alu
  creating $alu model for $flatten\u1.\u3.$verific$LessThan_418$usbf_pe.v:691$4037 ($lt): new $alu
  creating $alu model for $flatten\u1.\u3.$verific$LessThan_424$usbf_pe.v:694$4042 ($lt): merged with $flatten\u1.\u3.$verific$LessThan_418$usbf_pe.v:691$4037.
  creating $alu model for $flatten\u4.\u0.$verific$LessThan_213$usbf_ep_rf.v:427$9003 ($le): new $alu
  creating $alu model for $flatten\u4.\u0.$verific$LessThan_223$usbf_ep_rf.v:436$9011 ($le): new $alu
  creating $alu model for $flatten\u4.\u0.$verific$LessThan_232$usbf_ep_rf.v:445$9020 ($lt): new $alu
  creating $alu model for $flatten\u4.\u0.$verific$LessThan_240$usbf_ep_rf.v:454$9026 ($lt): new $alu
  creating $alu model for $flatten\u4.\u1.$verific$LessThan_213$usbf_ep_rf.v:427$9003 ($le): new $alu
  creating $alu model for $flatten\u4.\u1.$verific$LessThan_223$usbf_ep_rf.v:436$9011 ($le): new $alu
  creating $alu model for $flatten\u4.\u1.$verific$LessThan_232$usbf_ep_rf.v:445$9020 ($lt): new $alu
  creating $alu model for $flatten\u4.\u1.$verific$LessThan_240$usbf_ep_rf.v:454$9026 ($lt): new $alu
  creating $alu model for $flatten\u4.\u2.$verific$LessThan_213$usbf_ep_rf.v:427$9003 ($le): new $alu
  creating $alu model for $flatten\u4.\u2.$verific$LessThan_223$usbf_ep_rf.v:436$9011 ($le): new $alu
  creating $alu model for $flatten\u4.\u2.$verific$LessThan_232$usbf_ep_rf.v:445$9020 ($lt): new $alu
  creating $alu model for $flatten\u4.\u2.$verific$LessThan_240$usbf_ep_rf.v:454$9026 ($lt): new $alu
  creating $alu model for $flatten\u4.\u3.$verific$LessThan_213$usbf_ep_rf.v:427$9003 ($le): new $alu
  creating $alu model for $flatten\u4.\u3.$verific$LessThan_223$usbf_ep_rf.v:436$9011 ($le): new $alu
  creating $alu model for $flatten\u4.\u3.$verific$LessThan_232$usbf_ep_rf.v:445$9020 ($lt): new $alu
  creating $alu model for $flatten\u4.\u3.$verific$LessThan_240$usbf_ep_rf.v:454$9026 ($lt): new $alu
  creating $alu model for $flatten\u1.\u3.$verific$not_equal_409$usbf_pe.v:679$4030 ($ne): merged with $flatten\u1.\u3.$verific$LessThan_418$usbf_pe.v:691$4037.
  creating $alu cell for $flatten\u4.\u3.$verific$LessThan_240$usbf_ep_rf.v:454$9026: $auto$alumacc.cc:485:replace_alu$10399
  creating $alu cell for $flatten\u4.\u3.$verific$LessThan_232$usbf_ep_rf.v:445$9020: $auto$alumacc.cc:485:replace_alu$10410
  creating $alu cell for $flatten\u4.\u3.$verific$LessThan_223$usbf_ep_rf.v:436$9011: $auto$alumacc.cc:485:replace_alu$10421
  creating $alu cell for $flatten\u4.\u3.$verific$LessThan_213$usbf_ep_rf.v:427$9003: $auto$alumacc.cc:485:replace_alu$10430
  creating $alu cell for $flatten\u4.\u2.$verific$LessThan_240$usbf_ep_rf.v:454$9026: $auto$alumacc.cc:485:replace_alu$10439
  creating $alu cell for $flatten\u4.\u2.$verific$LessThan_232$usbf_ep_rf.v:445$9020: $auto$alumacc.cc:485:replace_alu$10450
  creating $alu cell for $flatten\u4.\u2.$verific$LessThan_223$usbf_ep_rf.v:436$9011: $auto$alumacc.cc:485:replace_alu$10455
  creating $alu cell for $flatten\u4.\u2.$verific$LessThan_213$usbf_ep_rf.v:427$9003: $auto$alumacc.cc:485:replace_alu$10464
  creating $alu cell for $flatten\u4.\u1.$verific$LessThan_240$usbf_ep_rf.v:454$9026: $auto$alumacc.cc:485:replace_alu$10473
  creating $alu cell for $flatten\u4.\u1.$verific$LessThan_232$usbf_ep_rf.v:445$9020: $auto$alumacc.cc:485:replace_alu$10478
  creating $alu cell for $flatten\u4.\u1.$verific$LessThan_223$usbf_ep_rf.v:436$9011: $auto$alumacc.cc:485:replace_alu$10489
  creating $alu cell for $flatten\u4.\u1.$verific$LessThan_213$usbf_ep_rf.v:427$9003: $auto$alumacc.cc:485:replace_alu$10498
  creating $alu cell for $flatten\u4.\u0.$verific$LessThan_240$usbf_ep_rf.v:454$9026: $auto$alumacc.cc:485:replace_alu$10507
  creating $alu cell for $flatten\u4.\u0.$verific$LessThan_232$usbf_ep_rf.v:445$9020: $auto$alumacc.cc:485:replace_alu$10518
  creating $alu cell for $flatten\u4.\u0.$verific$LessThan_223$usbf_ep_rf.v:436$9011: $auto$alumacc.cc:485:replace_alu$10523
  creating $alu cell for $flatten\u4.\u0.$verific$LessThan_213$usbf_ep_rf.v:427$9003: $auto$alumacc.cc:485:replace_alu$10532
  creating $alu cell for $flatten\u1.\u3.$verific$LessThan_418$usbf_pe.v:691$4037, $flatten\u1.\u3.$verific$LessThan_424$usbf_pe.v:694$4042, $flatten\u1.\u3.$verific$not_equal_409$usbf_pe.v:679$4030: $auto$alumacc.cc:485:replace_alu$10541
  creating $alu cell for $flatten\u1.\u3.$verific$LessThan_402$usbf_pe.v:674$4024: $auto$alumacc.cc:485:replace_alu$10554
  creating $alu cell for $flatten\u1.\u3.$verific$LessThan_362$usbf_pe.v:641$3992: $auto$alumacc.cc:485:replace_alu$10565
  creating $alu cell for $flatten\u1.\u3.$verific$LessThan_358$usbf_pe.v:638$3989: $auto$alumacc.cc:485:replace_alu$10576
  creating $alu cell for $flatten\u1.\u3.$verific$LessThan_339$usbf_pe.v:622$3973: $auto$alumacc.cc:485:replace_alu$10587
  creating $alu cell for $flatten\u1.\u3.$verific$LessThan_333$usbf_pe.v:611$3968: $auto$alumacc.cc:485:replace_alu$10598
  creating $alu cell for $flatten\u0.\u0.$verific$LessThan_212$usbf_utmi_ls.v:385$2258: $auto$alumacc.cc:485:replace_alu$10609
  creating $alu cell for $flatten\u0.\u0.$verific$LessThan_206$usbf_utmi_ls.v:382$2254: $auto$alumacc.cc:485:replace_alu$10614
  creating $alu cell for $flatten\u0.\u0.$verific$LessThan_200$usbf_utmi_ls.v:379$2250: $auto$alumacc.cc:485:replace_alu$10619
  creating $alu cell for $flatten\u0.\u0.$verific$LessThan_160$usbf_utmi_ls.v:350$2220: $auto$alumacc.cc:485:replace_alu$10624
  creating $alu cell for $flatten\u0.\u0.$verific$LessThan_142$usbf_utmi_ls.v:341$2208, $flatten\u0.\u0.$verific$LessThan_148$usbf_utmi_ls.v:344$2212: $auto$alumacc.cc:485:replace_alu$10629
  creating $alu cell for $flatten\u0.\u0.$verific$LessThan_136$usbf_utmi_ls.v:338$2204: $auto$alumacc.cc:485:replace_alu$10640
  creating $alu cell for $flatten\u0.\u0.$verific$add_107$usbf_utmi_ls.v:320$2181: $auto$alumacc.cc:485:replace_alu$10645
  creating $alu cell for $flatten\u0.\u0.$verific$add_127$usbf_utmi_ls.v:332$2197: $auto$alumacc.cc:485:replace_alu$10648
  creating $alu cell for $flatten\u0.\u0.$verific$add_167$usbf_utmi_ls.v:358$2225: $auto$alumacc.cc:485:replace_alu$10651
  creating $alu cell for $flatten\u0.\u0.$verific$add_178$usbf_utmi_ls.v:367$2232: $auto$alumacc.cc:485:replace_alu$10654
  creating $alu cell for $flatten\u0.\u0.$verific$add_193$usbf_utmi_ls.v:376$2244: $auto$alumacc.cc:485:replace_alu$10657
  creating $alu cell for $flatten\u0.\u0.$verific$add_230$usbf_utmi_ls.v:399$2268: $auto$alumacc.cc:485:replace_alu$10660
  creating $alu cell for $flatten\u1.$verific$add_47$usbf_pl.v:299$1370: $auto$alumacc.cc:485:replace_alu$10663
  creating $alu cell for $flatten\u1.$verific$add_58$usbf_pl.v:308$1378: $auto$alumacc.cc:485:replace_alu$10666
  creating $alu cell for $flatten\u1.$verific$add_69$usbf_pl.v:321$1386: $auto$alumacc.cc:485:replace_alu$10669
  creating $alu cell for $flatten\u1.\u2.$verific$add_44$usbf_idma.v:289$2916: $auto$alumacc.cc:485:replace_alu$10672
  creating $alu cell for $flatten\u1.\u2.$verific$add_51$usbf_idma.v:296$2924: $auto$alumacc.cc:485:replace_alu$10675
  creating $alu cell for $flatten\u1.\u2.$verific$add_64$usbf_idma.v:310$2932: $auto$alumacc.cc:485:replace_alu$10678
  creating $alu cell for $flatten\u1.\u2.$verific$add_98$usbf_idma.v:346$2959: $auto$alumacc.cc:485:replace_alu$10681
  creating $alu cell for $flatten\u1.\u2.$verific$sub_78$usbf_idma.v:326$2943: $auto$alumacc.cc:485:replace_alu$10684
  creating $alu cell for $flatten\u1.\u3.$verific$add_399$usbf_pe.v:670$4022: $auto$alumacc.cc:485:replace_alu$10687
  creating $alu cell for $flatten\u1.\u3.$verific$add_428$usbf_pe.v:701$4046: $auto$alumacc.cc:485:replace_alu$10690
  creating $alu cell for $flatten\u1.\u3.$verific$add_514$usbf_pe.v:751$4078: $auto$alumacc.cc:485:replace_alu$10693
  creating $alu cell for $flatten\u1.\u3.$verific$add_527$usbf_pe.v:768$4088: $auto$alumacc.cc:485:replace_alu$10696
  creating $alu cell for $flatten\u1.\u3.$verific$sub_387$usbf_pe.v:657$4013: $auto$alumacc.cc:485:replace_alu$10699
  creating $alu cell for $flatten\u4.\u0.$verific$add_180$usbf_ep_rf.v:397$8979: $auto$alumacc.cc:485:replace_alu$10702
  creating $alu cell for $flatten\u4.\u0.$verific$add_201$usbf_ep_rf.v:419$8995: $auto$alumacc.cc:485:replace_alu$10705
  creating $alu cell for $flatten\u4.\u0.$verific$sub_175$usbf_ep_rf.v:394$8974: $auto$alumacc.cc:485:replace_alu$10708
  creating $alu cell for $flatten\u4.\u0.$verific$sub_206$usbf_ep_rf.v:422$8997: $auto$alumacc.cc:485:replace_alu$10711
  creating $alu cell for $flatten\u4.\u0.$verific$sub_219$usbf_ep_rf.v:433$9008: $auto$alumacc.cc:485:replace_alu$10714
  creating $alu cell for $flatten\u4.\u0.$verific$sub_236$usbf_ep_rf.v:449$9023: $auto$alumacc.cc:485:replace_alu$10717
  creating $alu cell for $flatten\u4.\u1.$verific$add_180$usbf_ep_rf.v:397$8979: $auto$alumacc.cc:485:replace_alu$10720
  creating $alu cell for $flatten\u4.\u1.$verific$add_201$usbf_ep_rf.v:419$8995: $auto$alumacc.cc:485:replace_alu$10723
  creating $alu cell for $flatten\u4.\u1.$verific$sub_175$usbf_ep_rf.v:394$8974: $auto$alumacc.cc:485:replace_alu$10726
  creating $alu cell for $flatten\u4.\u1.$verific$sub_206$usbf_ep_rf.v:422$8997: $auto$alumacc.cc:485:replace_alu$10729
  creating $alu cell for $flatten\u4.\u1.$verific$sub_219$usbf_ep_rf.v:433$9008: $auto$alumacc.cc:485:replace_alu$10732
  creating $alu cell for $flatten\u4.\u1.$verific$sub_236$usbf_ep_rf.v:449$9023: $auto$alumacc.cc:485:replace_alu$10735
  creating $alu cell for $flatten\u4.\u2.$verific$add_180$usbf_ep_rf.v:397$8979: $auto$alumacc.cc:485:replace_alu$10738
  creating $alu cell for $flatten\u4.\u2.$verific$add_201$usbf_ep_rf.v:419$8995: $auto$alumacc.cc:485:replace_alu$10741
  creating $alu cell for $flatten\u4.\u2.$verific$sub_175$usbf_ep_rf.v:394$8974: $auto$alumacc.cc:485:replace_alu$10744
  creating $alu cell for $flatten\u4.\u2.$verific$sub_206$usbf_ep_rf.v:422$8997: $auto$alumacc.cc:485:replace_alu$10747
  creating $alu cell for $flatten\u4.\u2.$verific$sub_219$usbf_ep_rf.v:433$9008: $auto$alumacc.cc:485:replace_alu$10750
  creating $alu cell for $flatten\u4.\u2.$verific$sub_236$usbf_ep_rf.v:449$9023: $auto$alumacc.cc:485:replace_alu$10753
  creating $alu cell for $flatten\u4.\u3.$verific$add_180$usbf_ep_rf.v:397$8979: $auto$alumacc.cc:485:replace_alu$10756
  creating $alu cell for $flatten\u4.\u3.$verific$add_201$usbf_ep_rf.v:419$8995: $auto$alumacc.cc:485:replace_alu$10759
  creating $alu cell for $flatten\u4.\u3.$verific$sub_175$usbf_ep_rf.v:394$8974: $auto$alumacc.cc:485:replace_alu$10762
  creating $alu cell for $flatten\u4.\u3.$verific$sub_206$usbf_ep_rf.v:422$8997: $auto$alumacc.cc:485:replace_alu$10765
  creating $alu cell for $flatten\u4.\u3.$verific$sub_219$usbf_ep_rf.v:433$9008: $auto$alumacc.cc:485:replace_alu$10768
  creating $alu cell for $flatten\u4.\u3.$verific$sub_236$usbf_ep_rf.v:449$9023: $auto$alumacc.cc:485:replace_alu$10771
  created 71 $alu and 0 $macc cells.

19. Executing OPT pass (performing simple optimizations).

19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.
<suppressed ~6 debug messages>

19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbf_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~137 debug messages>

19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbf_top.
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$10307: { $flatten\u1.\u3.$verific$n436$3458 $flatten\u1.\u3.$verific$n311$3449 $flatten\u1.\u3.$verific$n310$3448 $flatten\u1.\u3.$verific$n306$3447 $flatten\u1.\u3.$verific$n296$3443 $flatten\u1.\u3.$verific$n293$3442 $flatten\u1.\u3.$verific$n286$3439 $flatten\u1.\u3.$verific$n275$3432 $flatten\u1.\u3.$verific$n274$3431 $flatten\u1.\u3.$verific$n268$3429 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$10125: { $auto$rtlil.cc:2393:Or$10090 $auto$rtlil.cc:2393:Or$10098 $flatten\u0.\u0.$verific$n1023$2024 $flatten\u0.\u0.$verific$n1022$2023 $flatten\u0.\u0.$verific$n1019$2020 $flatten\u0.\u0.$verific$n1018$2019 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$10279: { $flatten\u1.\u3.$verific$n311$3449 $flatten\u1.\u3.$verific$n302$3446 $flatten\u1.\u3.$verific$n299$3445 $flatten\u1.\u3.$verific$n290$3441 $flatten\u1.\u3.$verific$n288$3440 $flatten\u1.\u3.$verific$n286$3439 $flatten\u1.\u3.$verific$n284$3437 $flatten\u1.\u3.$verific$n274$3431 $flatten\u1.\u3.$verific$n268$3429 }
  Optimizing cells in module \usbf_top.
Performed a total of 3 changes.

19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
<suppressed ~18 debug messages>
Removed a total of 6 cells.

19.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $flatten\u5.$verific$wb_ack_s1_reg$usbf_wb.v:174$9123 ($dff) from module usbf_top (D = $auto$rtlil.cc:2459:Mux$10368, Q = \u5.wb_ack_s1, rval = 1'1).
Setting constant 0-bit at position 4 on $flatten\u4.$verific$int_srca_reg$usbf_rf.v:781$5065 ($dff) from module usbf_top.
Setting constant 0-bit at position 5 on $flatten\u4.$verific$int_srca_reg$usbf_rf.v:781$5065 ($dff) from module usbf_top.
Setting constant 0-bit at position 6 on $flatten\u4.$verific$int_srca_reg$usbf_rf.v:781$5065 ($dff) from module usbf_top.
Setting constant 0-bit at position 7 on $flatten\u4.$verific$int_srca_reg$usbf_rf.v:781$5065 ($dff) from module usbf_top.
Setting constant 0-bit at position 8 on $flatten\u4.$verific$int_srca_reg$usbf_rf.v:781$5065 ($dff) from module usbf_top.
Setting constant 0-bit at position 9 on $flatten\u4.$verific$int_srca_reg$usbf_rf.v:781$5065 ($dff) from module usbf_top.
Setting constant 0-bit at position 10 on $flatten\u4.$verific$int_srca_reg$usbf_rf.v:781$5065 ($dff) from module usbf_top.
Setting constant 0-bit at position 11 on $flatten\u4.$verific$int_srca_reg$usbf_rf.v:781$5065 ($dff) from module usbf_top.
Setting constant 0-bit at position 12 on $flatten\u4.$verific$int_srca_reg$usbf_rf.v:781$5065 ($dff) from module usbf_top.
Setting constant 0-bit at position 13 on $flatten\u4.$verific$int_srca_reg$usbf_rf.v:781$5065 ($dff) from module usbf_top.
Setting constant 0-bit at position 14 on $flatten\u4.$verific$int_srca_reg$usbf_rf.v:781$5065 ($dff) from module usbf_top.
Setting constant 0-bit at position 15 on $flatten\u4.$verific$int_srca_reg$usbf_rf.v:781$5065 ($dff) from module usbf_top.

19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..
Removed 5 unused cells and 45 unused wires.
<suppressed ~8 debug messages>

19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.

19.9. Rerunning OPT passes. (Maybe there is more to do..)

19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbf_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~138 debug messages>

19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbf_top.
Performed a total of 0 changes.

19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

19.13. Executing OPT_DFF pass (perform DFF optimizations).

19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..

19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.

19.16. Finished OPT passes. (There is nothing left to do.)

20. Executing MEMORY pass.

20.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

20.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

20.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

20.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

20.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..

20.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

20.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

20.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..

20.9. Executing MEMORY_COLLECT pass (generating $mem cells).

21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..

22. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.
<suppressed ~91 debug messages>

23. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping usbf_top.$auto$alumacc.cc:68:get_gt$10408 ($not).
Mapping usbf_top.$auto$alumacc.cc:68:get_gt$10419 ($not).
Mapping usbf_top.$auto$alumacc.cc:68:get_gt$10448 ($not).
Mapping usbf_top.$auto$alumacc.cc:68:get_gt$10487 ($not).
Mapping usbf_top.$auto$alumacc.cc:68:get_gt$10516 ($not).
Mapping usbf_top.$auto$alumacc.cc:68:get_gt$10550 ($not).
Mapping usbf_top.$auto$alumacc.cc:68:get_gt$10563 ($not).
Mapping usbf_top.$auto$alumacc.cc:68:get_gt$10574 ($not).
Mapping usbf_top.$auto$alumacc.cc:68:get_gt$10585 ($not).
Mapping usbf_top.$auto$alumacc.cc:68:get_gt$10596 ($not).
Mapping usbf_top.$auto$alumacc.cc:68:get_gt$10638 ($not).
Mapping usbf_top.$auto$alumacc.cc:75:get_eq$10404 ($reduce_and).
Mapping usbf_top.$auto$alumacc.cc:75:get_eq$10415 ($reduce_and).
Mapping usbf_top.$auto$alumacc.cc:75:get_eq$10426 ($reduce_and).
Mapping usbf_top.$auto$alumacc.cc:75:get_eq$10435 ($reduce_and).
Mapping usbf_top.$auto$alumacc.cc:75:get_eq$10444 ($reduce_and).
Mapping usbf_top.$auto$alumacc.cc:75:get_eq$10460 ($reduce_and).
Mapping usbf_top.$auto$alumacc.cc:75:get_eq$10469 ($reduce_and).
Mapping usbf_top.$auto$alumacc.cc:75:get_eq$10483 ($reduce_and).
Mapping usbf_top.$auto$alumacc.cc:75:get_eq$10494 ($reduce_and).
Mapping usbf_top.$auto$alumacc.cc:75:get_eq$10503 ($reduce_and).
Mapping usbf_top.$auto$alumacc.cc:75:get_eq$10512 ($reduce_and).
Mapping usbf_top.$auto$alumacc.cc:75:get_eq$10528 ($reduce_and).
Mapping usbf_top.$auto$alumacc.cc:75:get_eq$10537 ($reduce_and).
Mapping usbf_top.$auto$alumacc.cc:75:get_eq$10546 ($reduce_and).
Mapping usbf_top.$auto$alumacc.cc:75:get_eq$10559 ($reduce_and).
Mapping usbf_top.$auto$alumacc.cc:75:get_eq$10570 ($reduce_and).
Mapping usbf_top.$auto$alumacc.cc:75:get_eq$10581 ($reduce_and).
Mapping usbf_top.$auto$alumacc.cc:75:get_eq$10592 ($reduce_and).
Mapping usbf_top.$auto$alumacc.cc:75:get_eq$10603 ($reduce_and).
Mapping usbf_top.$auto$alumacc.cc:75:get_eq$10634 ($reduce_and).
Mapping usbf_top.$auto$alumacc.cc:81:get_ne$10552 ($not).
Mapping usbf_top.$auto$alumacc.cc:89:get_cf$10402 ($not).
Mapping usbf_top.$auto$alumacc.cc:89:get_cf$10413 ($not).
Mapping usbf_top.$auto$alumacc.cc:89:get_cf$10424 ($not).
Mapping usbf_top.$auto$alumacc.cc:89:get_cf$10433 ($not).
Mapping usbf_top.$auto$alumacc.cc:89:get_cf$10442 ($not).
Mapping usbf_top.$auto$alumacc.cc:89:get_cf$10453 ($not).
Mapping usbf_top.$auto$alumacc.cc:89:get_cf$10458 ($not).
Mapping usbf_top.$auto$alumacc.cc:89:get_cf$10467 ($not).
Mapping usbf_top.$auto$alumacc.cc:89:get_cf$10476 ($not).
Mapping usbf_top.$auto$alumacc.cc:89:get_cf$10481 ($not).
Mapping usbf_top.$auto$alumacc.cc:89:get_cf$10492 ($not).
Mapping usbf_top.$auto$alumacc.cc:89:get_cf$10501 ($not).
Mapping usbf_top.$auto$alumacc.cc:89:get_cf$10510 ($not).
Mapping usbf_top.$auto$alumacc.cc:89:get_cf$10521 ($not).
Mapping usbf_top.$auto$alumacc.cc:89:get_cf$10526 ($not).
Mapping usbf_top.$auto$alumacc.cc:89:get_cf$10535 ($not).
Mapping usbf_top.$auto$alumacc.cc:89:get_cf$10544 ($not).
Mapping usbf_top.$auto$alumacc.cc:89:get_cf$10557 ($not).
Mapping usbf_top.$auto$alumacc.cc:89:get_cf$10568 ($not).
Mapping usbf_top.$auto$alumacc.cc:89:get_cf$10579 ($not).
Mapping usbf_top.$auto$alumacc.cc:89:get_cf$10590 ($not).
Mapping usbf_top.$auto$alumacc.cc:89:get_cf$10601 ($not).
Mapping usbf_top.$auto$alumacc.cc:89:get_cf$10612 ($not).
Mapping usbf_top.$auto$alumacc.cc:89:get_cf$10617 ($not).
Mapping usbf_top.$auto$alumacc.cc:89:get_cf$10622 ($not).
Mapping usbf_top.$auto$alumacc.cc:89:get_cf$10627 ($not).
Mapping usbf_top.$auto$alumacc.cc:89:get_cf$10632 ($not).
Mapping usbf_top.$auto$alumacc.cc:89:get_cf$10643 ($not).
Mapping usbf_top.$auto$ff.cc:262:slice$10774 ($sdff).
Mapping usbf_top.$auto$ff.cc:262:slice$10775 ($dff).
Mapping usbf_top.$auto$ff.cc:262:slice$9360 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9362 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9364 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9366 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9370 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9376 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9379 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9382 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9385 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9388 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9391 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9394 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9398 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9400 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9402 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9406 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9410 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9414 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9418 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9419 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9423 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9425 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9429 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9433 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9435 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9437 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9439 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9443 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9449 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9452 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9455 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9458 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9461 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9464 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9467 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9471 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9473 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9475 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9479 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9483 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9487 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9491 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9492 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9496 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9498 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9502 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9506 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9508 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9510 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9512 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9516 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9522 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9525 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9528 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9531 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9534 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9537 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9540 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9544 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9546 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9548 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9552 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9556 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9560 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9564 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9565 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9569 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9571 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9575 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9579 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9581 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9583 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9585 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9589 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9595 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9598 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9601 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9604 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9607 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9610 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9613 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9617 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9619 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9621 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9625 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9629 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9633 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9637 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9638 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9642 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9644 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9648 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9652 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9654 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9657 ($dffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9659 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9661 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9667 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9668 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9669 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9670 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9671 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9672 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9673 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9674 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9675 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9677 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9678 ($dffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9681 ($dffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9688 ($dffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9692 ($dffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9695 ($dffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9698 ($sdff).
Mapping usbf_top.$auto$ff.cc:262:slice$9699 ($sdff).
Mapping usbf_top.$auto$ff.cc:262:slice$9705 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9719 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9722 ($sdff).
Mapping usbf_top.$auto$ff.cc:262:slice$9724 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9732 ($dff).
Mapping usbf_top.$auto$ff.cc:262:slice$9733 ($sdff).
Mapping usbf_top.$auto$ff.cc:262:slice$9743 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9746 ($sdff).
Mapping usbf_top.$auto$ff.cc:262:slice$9747 ($dff).
Mapping usbf_top.$auto$ff.cc:262:slice$9748 ($sdff).
Mapping usbf_top.$auto$ff.cc:262:slice$9750 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9774 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9776 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9780 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9783 ($sdff).
Mapping usbf_top.$auto$ff.cc:262:slice$9790 ($dffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9791 ($dffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9792 ($sdff).
Mapping usbf_top.$auto$ff.cc:262:slice$9793 ($dffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9800 ($dffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9807 ($dffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9814 ($dffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9821 ($dffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9822 ($sdff).
Mapping usbf_top.$auto$ff.cc:262:slice$9828 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9830 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9841 ($sdff).
Mapping usbf_top.$auto$ff.cc:262:slice$9851 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9855 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9856 ($dffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9857 ($dffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9859 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9863 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9867 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9868 ($dffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9869 ($dffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9870 ($dffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9872 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9874 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9880 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9881 ($sdff).
Mapping usbf_top.$auto$ff.cc:262:slice$9887 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9889 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9891 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9897 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9926 ($sdff).
Mapping usbf_top.$auto$ff.cc:262:slice$9928 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9929 ($sdff).
Mapping usbf_top.$auto$ff.cc:262:slice$9931 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9933 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9939 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9941 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9943 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9945 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9947 ($sdffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9950 ($sdff).
Mapping usbf_top.$auto$ff.cc:262:slice$9951 ($sdff).
Mapping usbf_top.$auto$ff.cc:262:slice$9952 ($sdff).
Mapping usbf_top.$auto$ff.cc:262:slice$9953 ($sdff).
Mapping usbf_top.$auto$ff.cc:262:slice$9954 ($dffe).
Mapping usbf_top.$auto$ff.cc:262:slice$9957 ($sdffe).
Mapping usbf_top.$auto$fsm_map.cc:105:implement_pattern_cache$9313 ($reduce_or).
Mapping usbf_top.$auto$fsm_map.cc:121:implement_pattern_cache$9227 ($and).
Mapping usbf_top.$auto$fsm_map.cc:121:implement_pattern_cache$9231 ($and).
Mapping usbf_top.$auto$fsm_map.cc:121:implement_pattern_cache$9235 ($and).
Mapping usbf_top.$auto$fsm_map.cc:121:implement_pattern_cache$9239 ($and).
Mapping usbf_top.$auto$fsm_map.cc:121:implement_pattern_cache$9244 ($and).
Mapping usbf_top.$auto$fsm_map.cc:121:implement_pattern_cache$9248 ($and).
Mapping usbf_top.$auto$fsm_map.cc:121:implement_pattern_cache$9252 ($and).
Mapping usbf_top.$auto$fsm_map.cc:121:implement_pattern_cache$9257 ($and).
Mapping usbf_top.$auto$fsm_map.cc:121:implement_pattern_cache$9261 ($and).
Mapping usbf_top.$auto$fsm_map.cc:121:implement_pattern_cache$9265 ($and).
Mapping usbf_top.$auto$fsm_map.cc:121:implement_pattern_cache$9269 ($and).
Mapping usbf_top.$auto$fsm_map.cc:121:implement_pattern_cache$9276 ($and).
Mapping usbf_top.$auto$fsm_map.cc:121:implement_pattern_cache$9280 ($and).
Mapping usbf_top.$auto$fsm_map.cc:121:implement_pattern_cache$9284 ($and).
Mapping usbf_top.$auto$fsm_map.cc:121:implement_pattern_cache$9288 ($and).
Mapping usbf_top.$auto$fsm_map.cc:121:implement_pattern_cache$9292 ($and).
Mapping usbf_top.$auto$fsm_map.cc:121:implement_pattern_cache$9296 ($and).
Mapping usbf_top.$auto$fsm_map.cc:121:implement_pattern_cache$9305 ($and).
Mapping usbf_top.$auto$fsm_map.cc:121:implement_pattern_cache$9309 ($and).
Mapping usbf_top.$auto$fsm_map.cc:121:implement_pattern_cache$9315 ($and).
Mapping usbf_top.$auto$fsm_map.cc:121:implement_pattern_cache$9319 ($and).
Mapping usbf_top.$auto$fsm_map.cc:121:implement_pattern_cache$9324 ($and).
Mapping usbf_top.$auto$fsm_map.cc:121:implement_pattern_cache$9328 ($and).
Mapping usbf_top.$auto$fsm_map.cc:121:implement_pattern_cache$9333 ($and).
Mapping usbf_top.$auto$fsm_map.cc:121:implement_pattern_cache$9337 ($and).
Mapping usbf_top.$auto$fsm_map.cc:121:implement_pattern_cache$9342 ($and).
Mapping usbf_top.$auto$fsm_map.cc:121:implement_pattern_cache$9346 ($and).
Mapping usbf_top.$auto$fsm_map.cc:121:implement_pattern_cache$9353 ($and).
Mapping usbf_top.$auto$fsm_map.cc:144:implement_pattern_cache$9240 ($reduce_or).
Mapping usbf_top.$auto$fsm_map.cc:144:implement_pattern_cache$9253 ($reduce_or).
Mapping usbf_top.$auto$fsm_map.cc:144:implement_pattern_cache$9270 ($reduce_or).
Mapping usbf_top.$auto$fsm_map.cc:144:implement_pattern_cache$9297 ($reduce_or).
Mapping usbf_top.$auto$fsm_map.cc:144:implement_pattern_cache$9320 ($reduce_or).
Mapping usbf_top.$auto$fsm_map.cc:144:implement_pattern_cache$9329 ($reduce_or).
Mapping usbf_top.$auto$fsm_map.cc:144:implement_pattern_cache$9338 ($reduce_or).
Mapping usbf_top.$auto$fsm_map.cc:144:implement_pattern_cache$9347 ($reduce_or).
Mapping usbf_top.$auto$fsm_map.cc:144:implement_pattern_cache$9354 ($reduce_or).
Mapping usbf_top.$auto$fsm_map.cc:172:map_fsm$9221 ($dff).
Mapping usbf_top.$auto$fsm_map.cc:172:map_fsm$9299 ($dff).
Mapping usbf_top.$auto$fsm_map.cc:77:implement_pattern_cache$9229 ($eq).
Mapping usbf_top.$auto$fsm_map.cc:77:implement_pattern_cache$9233 ($eq).
Mapping usbf_top.$auto$fsm_map.cc:77:implement_pattern_cache$9237 ($eq).
Mapping usbf_top.$auto$fsm_map.cc:77:implement_pattern_cache$9242 ($eq).
Mapping usbf_top.$auto$fsm_map.cc:77:implement_pattern_cache$9246 ($eq).
Mapping usbf_top.$auto$fsm_map.cc:77:implement_pattern_cache$9250 ($eq).
Mapping usbf_top.$auto$fsm_map.cc:77:implement_pattern_cache$9255 ($eq).
Mapping usbf_top.$auto$fsm_map.cc:77:implement_pattern_cache$9259 ($eq).
Mapping usbf_top.$auto$fsm_map.cc:77:implement_pattern_cache$9263 ($eq).
Mapping usbf_top.$auto$fsm_map.cc:77:implement_pattern_cache$9267 ($eq).
Mapping usbf_top.$auto$fsm_map.cc:77:implement_pattern_cache$9274 ($eq).
Mapping usbf_top.$auto$fsm_map.cc:77:implement_pattern_cache$9278 ($eq).
Mapping usbf_top.$auto$fsm_map.cc:77:implement_pattern_cache$9282 ($eq).
Mapping usbf_top.$auto$fsm_map.cc:77:implement_pattern_cache$9286 ($eq).
Mapping usbf_top.$auto$fsm_map.cc:77:implement_pattern_cache$9290 ($eq).
Mapping usbf_top.$auto$fsm_map.cc:77:implement_pattern_cache$9294 ($eq).
Mapping usbf_top.$auto$fsm_map.cc:77:implement_pattern_cache$9311 ($eq).
Mapping usbf_top.$auto$fsm_map.cc:77:implement_pattern_cache$9322 ($eq).
Mapping usbf_top.$auto$fsm_map.cc:77:implement_pattern_cache$9326 ($eq).
Mapping usbf_top.$auto$fsm_map.cc:77:implement_pattern_cache$9335 ($eq).
Mapping usbf_top.$auto$fsm_map.cc:77:implement_pattern_cache$9340 ($eq).
Mapping usbf_top.$auto$fsm_map.cc:77:implement_pattern_cache$9344 ($eq).
Mapping usbf_top.$auto$fsm_map.cc:77:implement_pattern_cache$9349 ($not).
Mapping usbf_top.$auto$fsm_map.cc:77:implement_pattern_cache$9351 ($eq).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9368 ($reduce_bool).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9404 ($reduce_bool).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9408 ($reduce_bool).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9416 ($reduce_bool).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9421 ($reduce_bool).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9427 ($reduce_bool).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9431 ($reduce_bool).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9441 ($reduce_bool).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9477 ($reduce_bool).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9481 ($reduce_bool).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9489 ($reduce_bool).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9494 ($reduce_bool).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9500 ($reduce_bool).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9504 ($reduce_bool).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9514 ($reduce_bool).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9550 ($reduce_bool).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9554 ($reduce_bool).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9562 ($reduce_bool).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9567 ($reduce_bool).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9573 ($reduce_bool).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9577 ($reduce_bool).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9587 ($reduce_bool).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9623 ($reduce_bool).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9627 ($reduce_bool).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9635 ($reduce_bool).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9640 ($reduce_bool).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9646 ($reduce_bool).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9650 ($reduce_bool).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9656 ($reduce_bool).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9680 ($reduce_bool).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9707 ($ne).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9709 ($ne).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9711 ($ne).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9713 ($ne).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9715 ($ne).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9721 ($reduce_bool).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9726 ($reduce_bool).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9752 ($ne).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9754 ($ne).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9756 ($ne).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9758 ($ne).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9760 ($ne).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9762 ($ne).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9764 ($ne).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9766 ($ne).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9778 ($reduce_bool).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9782 ($reduce_bool).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9795 ($ne).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9797 ($reduce_bool).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9804 ($ne).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9811 ($ne).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9818 ($ne).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9832 ($ne).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9834 ($ne).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9836 ($ne).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9838 ($ne).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9853 ($reduce_bool).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9861 ($reduce_bool).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9865 ($reduce_bool).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9899 ($ne).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9901 ($ne).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9903 ($ne).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9905 ($ne).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9907 ($ne).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9909 ($ne).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9911 ($ne).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9913 ($ne).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9915 ($ne).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9917 ($ne).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9919 ($ne).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9921 ($ne).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9923 ($ne).
Mapping usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9956 ($reduce_bool).
Mapping usbf_top.$auto$opt_dff.cc:220:make_patterns_logic$9378 ($reduce_and).
Mapping usbf_top.$auto$opt_dff.cc:220:make_patterns_logic$9381 ($reduce_and).
Mapping usbf_top.$auto$opt_dff.cc:220:make_patterns_logic$9384 ($reduce_and).
Mapping usbf_top.$auto$opt_dff.cc:220:make_patterns_logic$9387 ($reduce_and).
Mapping usbf_top.$auto$opt_dff.cc:220:make_patterns_logic$9390 ($reduce_and).
Mapping usbf_top.$auto$opt_dff.cc:220:make_patterns_logic$9393 ($reduce_and).
Mapping usbf_top.$auto$opt_dff.cc:220:make_patterns_logic$9396 ($reduce_and).
Mapping usbf_top.$auto$opt_dff.cc:220:make_patterns_logic$9451 ($reduce_and).
Mapping usbf_top.$auto$opt_dff.cc:220:make_patterns_logic$9454 ($reduce_and).
Mapping usbf_top.$auto$opt_dff.cc:220:make_patterns_logic$9457 ($reduce_and).
Mapping usbf_top.$auto$opt_dff.cc:220:make_patterns_logic$9460 ($reduce_and).
Mapping usbf_top.$auto$opt_dff.cc:220:make_patterns_logic$9463 ($reduce_and).
Mapping usbf_top.$auto$opt_dff.cc:220:make_patterns_logic$9466 ($reduce_and).
Mapping usbf_top.$auto$opt_dff.cc:220:make_patterns_logic$9469 ($reduce_and).
Mapping usbf_top.$auto$opt_dff.cc:220:make_patterns_logic$9524 ($reduce_and).
Mapping usbf_top.$auto$opt_dff.cc:220:make_patterns_logic$9527 ($reduce_and).
Mapping usbf_top.$auto$opt_dff.cc:220:make_patterns_logic$9530 ($reduce_and).
Mapping usbf_top.$auto$opt_dff.cc:220:make_patterns_logic$9533 ($reduce_and).
Mapping usbf_top.$auto$opt_dff.cc:220:make_patterns_logic$9536 ($reduce_and).
Mapping usbf_top.$auto$opt_dff.cc:220:make_patterns_logic$9539 ($reduce_and).
Mapping usbf_top.$auto$opt_dff.cc:220:make_patterns_logic$9542 ($reduce_and).
Mapping usbf_top.$auto$opt_dff.cc:220:make_patterns_logic$9597 ($reduce_and).
Mapping usbf_top.$auto$opt_dff.cc:220:make_patterns_logic$9600 ($reduce_and).
Mapping usbf_top.$auto$opt_dff.cc:220:make_patterns_logic$9603 ($reduce_and).
Mapping usbf_top.$auto$opt_dff.cc:220:make_patterns_logic$9606 ($reduce_and).
Mapping usbf_top.$auto$opt_dff.cc:220:make_patterns_logic$9609 ($reduce_and).
Mapping usbf_top.$auto$opt_dff.cc:220:make_patterns_logic$9612 ($reduce_and).
Mapping usbf_top.$auto$opt_dff.cc:220:make_patterns_logic$9615 ($reduce_and).
Mapping usbf_top.$auto$opt_dff.cc:220:make_patterns_logic$9717 ($reduce_and).
Mapping usbf_top.$auto$opt_dff.cc:220:make_patterns_logic$9768 ($reduce_and).
Mapping usbf_top.$auto$opt_dff.cc:220:make_patterns_logic$9799 ($reduce_and).
Mapping usbf_top.$auto$opt_dff.cc:220:make_patterns_logic$9806 ($reduce_and).
Mapping usbf_top.$auto$opt_dff.cc:220:make_patterns_logic$9813 ($reduce_and).
Mapping usbf_top.$auto$opt_dff.cc:220:make_patterns_logic$9820 ($reduce_and).
Mapping usbf_top.$auto$opt_dff.cc:220:make_patterns_logic$9840 ($reduce_and).
Mapping usbf_top.$auto$opt_dff.cc:220:make_patterns_logic$9925 ($reduce_and).
Mapping usbf_top.$auto$opt_dff.cc:250:combine_resets$9734 ($not).
Mapping usbf_top.$auto$opt_dff.cc:250:combine_resets$9736 ($not).
Mapping usbf_top.$auto$opt_dff.cc:250:combine_resets$9738 ($not).
Mapping usbf_top.$auto$opt_dff.cc:250:combine_resets$9784 ($not).
Mapping usbf_top.$auto$opt_dff.cc:250:combine_resets$9786 ($not).
Mapping usbf_top.$auto$opt_dff.cc:250:combine_resets$9844 ($not).
Mapping usbf_top.$auto$opt_dff.cc:254:combine_resets$9359 ($reduce_or).
Mapping usbf_top.$auto$opt_dff.cc:254:combine_resets$9375 ($reduce_or).
Mapping usbf_top.$auto$opt_dff.cc:254:combine_resets$9448 ($reduce_or).
Mapping usbf_top.$auto$opt_dff.cc:254:combine_resets$9521 ($reduce_or).
Mapping usbf_top.$auto$opt_dff.cc:254:combine_resets$9594 ($reduce_or).
Mapping usbf_top.$auto$opt_dff.cc:254:combine_resets$9666 ($reduce_or).
Mapping usbf_top.$auto$opt_dff.cc:254:combine_resets$9704 ($reduce_or).
Mapping usbf_top.$auto$opt_dff.cc:254:combine_resets$9741 ($reduce_or).
Mapping usbf_top.$auto$opt_dff.cc:254:combine_resets$9773 ($reduce_or).
Mapping usbf_top.$auto$opt_dff.cc:254:combine_resets$9789 ($reduce_or).
Mapping usbf_top.$auto$opt_dff.cc:254:combine_resets$9827 ($reduce_or).
Mapping usbf_top.$auto$opt_dff.cc:254:combine_resets$9849 ($reduce_or).
Mapping usbf_top.$auto$opt_dff.cc:254:combine_resets$9879 ($reduce_or).
Mapping usbf_top.$auto$opt_dff.cc:254:combine_resets$9885 ($reduce_or).
Mapping usbf_top.$auto$opt_dff.cc:254:combine_resets$9896 ($reduce_or).
Mapping usbf_top.$auto$opt_dff.cc:254:combine_resets$9938 ($reduce_or).
Mapping usbf_top.$auto$opt_reduce.cc:128:opt_pmux$9184 ($reduce_or).
Mapping usbf_top.$auto$opt_reduce.cc:128:opt_pmux$9186 ($reduce_or).
Mapping usbf_top.$auto$opt_reduce.cc:128:opt_pmux$9190 ($reduce_or).
Mapping usbf_top.$auto$opt_reduce.cc:128:opt_pmux$9192 ($reduce_or).
Mapping usbf_top.$auto$opt_reduce.cc:128:opt_pmux$9196 ($reduce_or).
Mapping usbf_top.$auto$opt_reduce.cc:128:opt_pmux$9198 ($reduce_or).
Mapping usbf_top.$auto$pmuxtree.cc:35:or_generator$10009 ($or).
Mapping usbf_top.$auto$pmuxtree.cc:35:or_generator$10037 ($or).
Mapping usbf_top.$auto$pmuxtree.cc:35:or_generator$10089 ($or).
Mapping usbf_top.$auto$pmuxtree.cc:35:or_generator$10097 ($or).
Mapping usbf_top.$auto$pmuxtree.cc:35:or_generator$10109 ($or).
Mapping usbf_top.$auto$pmuxtree.cc:35:or_generator$10117 ($or).
Mapping usbf_top.$auto$pmuxtree.cc:35:or_generator$10153 ($or).
Mapping usbf_top.$auto$pmuxtree.cc:35:or_generator$10165 ($or).
Mapping usbf_top.$auto$pmuxtree.cc:35:or_generator$10225 ($or).
Mapping usbf_top.$auto$pmuxtree.cc:35:or_generator$10235 ($or).
Mapping usbf_top.$auto$pmuxtree.cc:35:or_generator$10259 ($or).
Mapping usbf_top.$auto$pmuxtree.cc:35:or_generator$10275 ($or).
Mapping usbf_top.$auto$pmuxtree.cc:35:or_generator$10291 ($or).
Mapping usbf_top.$auto$pmuxtree.cc:35:or_generator$10329 ($or).
Mapping usbf_top.$auto$pmuxtree.cc:35:or_generator$10339 ($or).
Mapping usbf_top.$auto$pmuxtree.cc:35:or_generator$9977 ($or).
Mapping usbf_top.$auto$pmuxtree.cc:37:or_generator$10101 ($reduce_or).
Mapping usbf_top.$auto$pmuxtree.cc:37:or_generator$10121 ($reduce_or).
Mapping usbf_top.$auto$pmuxtree.cc:37:or_generator$10125 ($reduce_or).
Mapping usbf_top.$auto$pmuxtree.cc:37:or_generator$10197 ($reduce_or).
Mapping usbf_top.$auto$pmuxtree.cc:37:or_generator$10239 ($reduce_or).
Mapping usbf_top.$auto$pmuxtree.cc:37:or_generator$10279 ($reduce_or).
Mapping usbf_top.$auto$pmuxtree.cc:37:or_generator$10307 ($reduce_or).
Mapping usbf_top.$auto$pmuxtree.cc:37:or_generator$10343 ($reduce_or).
Mapping usbf_top.$auto$pmuxtree.cc:37:or_generator$9989 ($reduce_or).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10005 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10011 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10017 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10019 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10027 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10033 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10035 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10039 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10047 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10053 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10055 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10063 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10069 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10071 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10077 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10079 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10087 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10091 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10093 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10095 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10099 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10103 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10105 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10107 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10111 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10113 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10115 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10119 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10123 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10127 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10133 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10135 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10141 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10143 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10149 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10155 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10161 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10163 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10167 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10173 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10175 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10183 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10189 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10191 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10193 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10195 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10199 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10205 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10207 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10213 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10215 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10221 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10223 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10227 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10229 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10231 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10233 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10237 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10241 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10247 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10249 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10255 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10257 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10261 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10267 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10269 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10271 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10273 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10277 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10281 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10287 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10289 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10293 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10299 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10301 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10303 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10305 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10309 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10315 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10317 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10323 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10325 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10327 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10331 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10333 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10335 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10337 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10341 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10345 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10351 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10353 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10359 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10361 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10367 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$9973 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$9975 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$9979 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$9981 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$9987 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$9991 ($mux).
Mapping usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$9999 ($mux).
Mapping usbf_top.$flatten\u0.$verific$drive_k_r_reg$usbf_utmi_if.v:220$1251 ($dff).
Mapping usbf_top.$flatten\u0.$verific$i26$usbf_utmi_if.v:212$1242 ($or).
Mapping usbf_top.$flatten\u0.$verific$i41$usbf_utmi_if.v:230$1252 ($or).
Mapping usbf_top.$flatten\u0.$verific$i42$usbf_utmi_if.v:230$1253 ($or).
Mapping usbf_top.$flatten\u0.$verific$i43$usbf_utmi_if.v:230$1254 ($or).
Mapping usbf_top.$flatten\u0.$verific$i44$usbf_utmi_if.v:230$1255 ($not).
Mapping usbf_top.$flatten\u0.$verific$i45$usbf_utmi_if.v:230$1256 ($and).
Mapping usbf_top.$flatten\u0.$verific$i46$usbf_utmi_if.v:230$1257 ($or).
Mapping usbf_top.$flatten\u0.$verific$mux_29$usbf_utmi_if.v:214$1246 ($mux).
Mapping usbf_top.$flatten\u0.$verific$rx_data_reg$usbf_utmi_if.v:204$1241 ($dff).
Mapping usbf_top.$flatten\u0.$verific$tx_ready_reg$usbf_utmi_if.v:217$1249 ($dff).
Mapping usbf_top.$flatten\u0.\u0.$verific$T1_gt_2_5_uS_reg$usbf_utmi_ls.v:338$2207 ($dff).
Mapping usbf_top.$flatten\u0.\u0.$verific$T1_gt_3_0_mS_reg$usbf_utmi_ls.v:344$2215 ($dff).
Mapping usbf_top.$flatten\u0.\u0.$verific$T1_gt_5_0_mS_reg$usbf_utmi_ls.v:350$2223 ($dff).
Mapping usbf_top.$flatten\u0.\u0.$verific$T1_st_3_0_mS_reg$usbf_utmi_ls.v:341$2211 ($dff).
Mapping usbf_top.$flatten\u0.\u0.$verific$T2_gt_100_uS_reg$usbf_utmi_ls.v:379$2253 ($dff).
Mapping usbf_top.$flatten\u0.\u0.$verific$T2_gt_1_0_mS_reg$usbf_utmi_ls.v:385$2261 ($dff).
Mapping usbf_top.$flatten\u0.\u0.$verific$T2_wakeup_reg$usbf_utmi_ls.v:382$2257 ($dff).
Mapping usbf_top.$flatten\u0.\u0.$verific$chirp_cnt_is_6_reg$usbf_utmi_ls.v:402$2275 ($dff).
Mapping usbf_top.$flatten\u0.\u0.$verific$drive_k_reg$usbf_utmi_ls.v:216$2108 ($dff).
Mapping usbf_top.$flatten\u0.\u0.$verific$equal_112$usbf_utmi_ls.v:323$2185 ($eq).
Mapping usbf_top.$flatten\u0.\u0.$verific$equal_131$usbf_utmi_ls.v:335$2200 ($eq).
Mapping usbf_top.$flatten\u0.\u0.$verific$equal_172$usbf_utmi_ls.v:361$2228 ($eq).
Mapping usbf_top.$flatten\u0.\u0.$verific$equal_184$usbf_utmi_ls.v:370$2237 ($eq).
Mapping usbf_top.$flatten\u0.\u0.$verific$equal_224$usbf_utmi_ls.v:391$2263 ($eq).
Mapping usbf_top.$flatten\u0.\u0.$verific$equal_236$usbf_utmi_ls.v:402$2273 ($eq).
Mapping usbf_top.$flatten\u0.\u0.$verific$equal_317$usbf_utmi_ls.v:449$2319 ($eq).
Mapping usbf_top.$flatten\u0.\u0.$verific$equal_318$usbf_utmi_ls.v:461$2320 ($eq).
Mapping usbf_top.$flatten\u0.\u0.$verific$equal_319$usbf_utmi_ls.v:486$2321 ($eq).
Mapping usbf_top.$flatten\u0.\u0.$verific$equal_320$usbf_utmi_ls.v:502$2322 ($eq).
Mapping usbf_top.$flatten\u0.\u0.$verific$equal_321$usbf_utmi_ls.v:518$2323 ($eq).
Mapping usbf_top.$flatten\u0.\u0.$verific$equal_322$usbf_utmi_ls.v:534$2324 ($eq).
Mapping usbf_top.$flatten\u0.\u0.$verific$equal_323$usbf_utmi_ls.v:539$2325 ($eq).
Mapping usbf_top.$flatten\u0.\u0.$verific$equal_324$usbf_utmi_ls.v:552$2326 ($eq).
Mapping usbf_top.$flatten\u0.\u0.$verific$equal_325$usbf_utmi_ls.v:560$2327 ($eq).
Mapping usbf_top.$flatten\u0.\u0.$verific$equal_326$usbf_utmi_ls.v:579$2328 ($eq).
Mapping usbf_top.$flatten\u0.\u0.$verific$equal_327$usbf_utmi_ls.v:594$2329 ($eq).
Mapping usbf_top.$flatten\u0.\u0.$verific$equal_328$usbf_utmi_ls.v:602$2330 ($eq).
Mapping usbf_top.$flatten\u0.\u0.$verific$equal_329$usbf_utmi_ls.v:617$2331 ($eq).
Mapping usbf_top.$flatten\u0.\u0.$verific$equal_330$usbf_utmi_ls.v:632$2332 ($eq).
Mapping usbf_top.$flatten\u0.\u0.$verific$equal_331$usbf_utmi_ls.v:641$2333 ($eq).
Mapping usbf_top.$flatten\u0.\u0.$verific$equal_59$usbf_utmi_ls.v:267$2144 ($logic_not).
Mapping usbf_top.$flatten\u0.\u0.$verific$equal_61$usbf_utmi_ls.v:268$2146 ($eq).
Mapping usbf_top.$flatten\u0.\u0.$verific$equal_63$usbf_utmi_ls.v:269$2148 ($eq).
Mapping usbf_top.$flatten\u0.\u0.$verific$equal_8$usbf_utmi_ls.v:218$2111 ($eq).
Mapping usbf_top.$flatten\u0.\u0.$verific$i10$usbf_utmi_ls.v:218$2112 ($or).
Mapping usbf_top.$flatten\u0.\u0.$verific$i101$usbf_utmi_ls.v:306$2176 ($and).
Mapping usbf_top.$flatten\u0.\u0.$verific$i104$usbf_utmi_ls.v:319$2178 ($not).
Mapping usbf_top.$flatten\u0.\u0.$verific$i105$usbf_utmi_ls.v:319$2179 ($or).
Mapping usbf_top.$flatten\u0.\u0.$verific$i106$usbf_utmi_ls.v:319$2180 ($or).
Mapping usbf_top.$flatten\u0.\u0.$verific$i118$usbf_utmi_ls.v:327$2188 ($or).
Mapping usbf_top.$flatten\u0.\u0.$verific$i119$usbf_utmi_ls.v:327$2189 ($or).
Mapping usbf_top.$flatten\u0.\u0.$verific$i121$usbf_utmi_ls.v:329$2191 ($not).
Mapping usbf_top.$flatten\u0.\u0.$verific$i122$usbf_utmi_ls.v:329$2192 ($and).
Mapping usbf_top.$flatten\u0.\u0.$verific$i136$usbf_utmi_ls.v:338$2203 ($not).
Mapping usbf_top.$flatten\u0.\u0.$verific$i138$usbf_utmi_ls.v:338$2205 ($and).
Mapping usbf_top.$flatten\u0.\u0.$verific$i144$usbf_utmi_ls.v:341$2209 ($and).
Mapping usbf_top.$flatten\u0.\u0.$verific$i150$usbf_utmi_ls.v:344$2213 ($and).
Mapping usbf_top.$flatten\u0.\u0.$verific$i162$usbf_utmi_ls.v:350$2221 ($and).
Mapping usbf_top.$flatten\u0.\u0.$verific$i166$usbf_utmi_ls.v:357$2224 ($or).
Mapping usbf_top.$flatten\u0.\u0.$verific$i177$usbf_utmi_ls.v:365$2231 ($or).
Mapping usbf_top.$flatten\u0.\u0.$verific$i186$usbf_utmi_ls.v:370$2238 ($not).
Mapping usbf_top.$flatten\u0.\u0.$verific$i187$usbf_utmi_ls.v:370$2239 ($and).
Mapping usbf_top.$flatten\u0.\u0.$verific$i192$usbf_utmi_ls.v:376$2242 ($not).
Mapping usbf_top.$flatten\u0.\u0.$verific$i193$usbf_utmi_ls.v:376$2243 ($and).
Mapping usbf_top.$flatten\u0.\u0.$verific$i200$usbf_utmi_ls.v:379$2249 ($not).
Mapping usbf_top.$flatten\u0.\u0.$verific$i202$usbf_utmi_ls.v:379$2251 ($and).
Mapping usbf_top.$flatten\u0.\u0.$verific$i208$usbf_utmi_ls.v:382$2255 ($and).
Mapping usbf_top.$flatten\u0.\u0.$verific$i214$usbf_utmi_ls.v:385$2259 ($and).
Mapping usbf_top.$flatten\u0.\u0.$verific$i226$usbf_utmi_ls.v:391$2264 ($and).
Mapping usbf_top.$flatten\u0.\u0.$verific$i249$usbf_utmi_ls.v:463$2282 ($not).
Mapping usbf_top.$flatten\u0.\u0.$verific$i250$usbf_utmi_ls.v:463$2283 ($and).
Mapping usbf_top.$flatten\u0.\u0.$verific$i251$usbf_utmi_ls.v:463$2284 ($and).
Mapping usbf_top.$flatten\u0.\u0.$verific$i253$usbf_utmi_ls.v:463$2285 ($and).
Mapping usbf_top.$flatten\u0.\u0.$verific$i255$usbf_utmi_ls.v:469$2286 ($and).
Mapping usbf_top.$flatten\u0.\u0.$verific$i256$usbf_utmi_ls.v:476$2287 ($and).
Mapping usbf_top.$flatten\u0.\u0.$verific$i264$usbf_utmi_ls.v:483$2290 ($mux).
Mapping usbf_top.$flatten\u0.\u0.$verific$i267$usbf_utmi_ls.v:483$2291 ($mux).
Mapping usbf_top.$flatten\u0.\u0.$verific$i269$usbf_utmi_ls.v:483$2293 ($mux).
Mapping usbf_top.$flatten\u0.\u0.$verific$i271$usbf_utmi_ls.v:483$2294 ($mux).
Mapping usbf_top.$flatten\u0.\u0.$verific$i273$usbf_utmi_ls.v:488$2295 ($and).
Mapping usbf_top.$flatten\u0.\u0.$verific$i274$usbf_utmi_ls.v:494$2296 ($and).
Mapping usbf_top.$flatten\u0.\u0.$verific$i280$usbf_utmi_ls.v:499$2299 ($mux).
Mapping usbf_top.$flatten\u0.\u0.$verific$i282$usbf_utmi_ls.v:504$2300 ($and).
Mapping usbf_top.$flatten\u0.\u0.$verific$i283$usbf_utmi_ls.v:514$2301 ($and).
Mapping usbf_top.$flatten\u0.\u0.$verific$i291$usbf_utmi_ls.v:531$2305 ($mux).
Mapping usbf_top.$flatten\u0.\u0.$verific$i311$usbf_utmi_ls.v:614$2315 ($mux).
Mapping usbf_top.$flatten\u0.\u0.$verific$i316$usbf_utmi_ls.v:629$2317 ($mux).
Mapping usbf_top.$flatten\u0.\u0.$verific$i335$usbf_utmi_ls.v:650$2336 ($or).
Mapping usbf_top.$flatten\u0.\u0.$verific$i356$usbf_utmi_ls.v:650$2356 ($or).
Mapping usbf_top.$flatten\u0.\u0.$verific$i362$usbf_utmi_ls.v:650$2362 ($or).
Mapping usbf_top.$flatten\u0.\u0.$verific$i364$usbf_utmi_ls.v:650$2364 ($mux).
Mapping usbf_top.$flatten\u0.\u0.$verific$i68$usbf_utmi_ls.v:272$2152 ($mux).
Mapping usbf_top.$flatten\u0.\u0.$verific$i7$usbf_utmi_ls.v:218$2109 ($not).
Mapping usbf_top.$flatten\u0.\u0.$verific$i73$usbf_utmi_ls.v:280$2156 ($and).
Mapping usbf_top.$flatten\u0.\u0.$verific$i75$usbf_utmi_ls.v:281$2158 ($not).
Mapping usbf_top.$flatten\u0.\u0.$verific$i76$usbf_utmi_ls.v:281$2159 ($not).
Mapping usbf_top.$flatten\u0.\u0.$verific$i77$usbf_utmi_ls.v:281$2160 ($and).
Mapping usbf_top.$flatten\u0.\u0.$verific$i8$usbf_utmi_ls.v:218$2110 ($and).
Mapping usbf_top.$flatten\u0.\u0.$verific$i97$usbf_utmi_ls.v:304$2172 ($and).
Mapping usbf_top.$flatten\u0.\u0.$verific$i99$usbf_utmi_ls.v:305$2174 ($and).
Mapping usbf_top.$flatten\u0.\u0.$verific$idle_cnt1_clr_reg$usbf_utmi_ls.v:335$2202 ($dff).
Mapping usbf_top.$flatten\u0.\u0.$verific$idle_cnt1_next_reg$usbf_utmi_ls.v:332$2199 ($dff).
Mapping usbf_top.$flatten\u0.\u0.$verific$line_state_r_reg$usbf_utmi_ls.v:265$2143 ($dff).
Mapping usbf_top.$flatten\u0.\u0.$verific$ls_idle_r_reg$usbf_utmi_ls.v:278$2155 ($dff).
Mapping usbf_top.$flatten\u0.\u0.$verific$ls_j_r_reg$usbf_utmi_ls.v:299$2169 ($dff).
Mapping usbf_top.$flatten\u0.\u0.$verific$ls_k_r_reg$usbf_utmi_ls.v:296$2167 ($dff).
Mapping usbf_top.$flatten\u0.\u0.$verific$ls_se0_r_reg$usbf_utmi_ls.v:302$2171 ($dff).
Mapping usbf_top.$flatten\u0.\u0.$verific$me_cnt_100_ms_reg$usbf_utmi_ls.v:391$2266 ($dff).
Mapping usbf_top.$flatten\u0.\u0.$verific$me_ps2_0_5_ms_reg$usbf_utmi_ls.v:370$2241 ($dff).
Mapping usbf_top.$flatten\u0.\u0.$verific$me_ps_2_5_us_reg$usbf_utmi_ls.v:361$2230 ($dff).
Mapping usbf_top.$flatten\u0.\u0.$verific$mux_262$usbf_utmi_ls.v:483$2289 ($mux).
Mapping usbf_top.$flatten\u0.\u0.$verific$mux_267$usbf_utmi_ls.v:483$2292 ($mux).
Mapping usbf_top.$flatten\u0.\u0.$verific$mux_278$usbf_utmi_ls.v:499$2298 ($mux).
Mapping usbf_top.$flatten\u0.\u0.$verific$mux_284$usbf_utmi_ls.v:515$2303 ($mux).
Mapping usbf_top.$flatten\u0.\u0.$verific$mux_287$usbf_utmi_ls.v:515$2304 ($mux).
Mapping usbf_top.$flatten\u0.\u0.$verific$mux_371$usbf_utmi_ls.v:614$2309 ($mux).
Mapping usbf_top.$flatten\u0.\u0.$verific$mux_372$usbf_utmi_ls.v:613$2314 ($mux).
Mapping usbf_top.$flatten\u0.\u0.$verific$ps_cnt_clr_reg$usbf_utmi_ls.v:323$2187 ($dff).
Mapping usbf_top.$flatten\u0.\u0.$verific$reduce_or_337$usbf_utmi_ls.v:650$2339 ($reduce_or).
Mapping usbf_top.$flatten\u0.\u0.$verific$reduce_or_346$usbf_utmi_ls.v:650$2347 ($reduce_or).
Mapping usbf_top.$flatten\u0.\u0.$verific$resume_req_s1_reg$usbf_utmi_ls.v:221$2115 ($dff).
Mapping usbf_top.$flatten\u0.\u0.$verific$resume_req_s_reg$usbf_utmi_ls.v:224$2117 ($dff).
Mapping usbf_top.$flatten\u0.\u0.$verific$usb_reset_reg$usbf_utmi_ls.v:259$2141 ($dff).
Mapping usbf_top.$flatten\u1.$verific$clr_sof_time_reg$usbf_pl.v:303$1376 ($dff).
Mapping usbf_top.$flatten\u1.$verific$equal_37$usbf_pl.v:287$1363 ($eq).
Mapping usbf_top.$flatten\u1.$verific$equal_75$usbf_pl.v:324$1390 ($eq).
Mapping usbf_top.$flatten\u1.$verific$equal_78$usbf_pl.v:329$1393 ($eq).
Mapping usbf_top.$flatten\u1.$verific$frame_no_same_reg$usbf_pl.v:287$1366 ($dff).
Mapping usbf_top.$flatten\u1.$verific$hms_clk_reg$usbf_pl.v:324$1392 ($dff).
Mapping usbf_top.$flatten\u1.$verific$i12$usbf_pl.v:263$1342 ($and).
Mapping usbf_top.$flatten\u1.$verific$i14$usbf_pl.v:266$1344 ($or).
Mapping usbf_top.$flatten\u1.$verific$i16$usbf_pl.v:268$1346 ($not).
Mapping usbf_top.$flatten\u1.$verific$i17$usbf_pl.v:268$1347 ($and).
Mapping usbf_top.$flatten\u1.$verific$i18$usbf_pl.v:268$1348 ($and).
Mapping usbf_top.$flatten\u1.$verific$i19$usbf_pl.v:268$1349 ($and).
Mapping usbf_top.$flatten\u1.$verific$i20$usbf_pl.v:268$1350 ($not).
Mapping usbf_top.$flatten\u1.$verific$i21$usbf_pl.v:268$1351 ($and).
Mapping usbf_top.$flatten\u1.$verific$i24$usbf_pl.v:271$1353 ($and).
Mapping usbf_top.$flatten\u1.$verific$i25$usbf_pl.v:271$1354 ($and).
Mapping usbf_top.$flatten\u1.$verific$i39$usbf_pl.v:287$1364 ($and).
Mapping usbf_top.$flatten\u1.$verific$i4$usbf_pl.v:259$1334 ($or).
Mapping usbf_top.$flatten\u1.$verific$i45$usbf_pl.v:296$1368 ($not).
Mapping usbf_top.$flatten\u1.$verific$i46$usbf_pl.v:296$1369 ($and).
Mapping usbf_top.$flatten\u1.$verific$i5$usbf_pl.v:259$1335 ($or).
Mapping usbf_top.$flatten\u1.$verific$i6$usbf_pl.v:259$1336 ($or).
Mapping usbf_top.$flatten\u1.$verific$i68$usbf_pl.v:320$1385 ($or).
Mapping usbf_top.$flatten\u1.$verific$i7$usbf_pl.v:259$1337 ($or).
Mapping usbf_top.$flatten\u1.$verific$i8$usbf_pl.v:260$1338 ($or).
Mapping usbf_top.$flatten\u1.$verific$i9$usbf_pl.v:260$1339 ($or).
Mapping usbf_top.$flatten\u1.\u0.$verific$data_valid0_reg$usbf_pd.v:314$2591 ($dff).
Mapping usbf_top.$flatten\u1.\u0.$verific$equal_16$usbf_pd.v:225$2496 ($eq).
Mapping usbf_top.$flatten\u1.\u0.$verific$equal_18$usbf_pd.v:226$2498 ($eq).
Mapping usbf_top.$flatten\u1.\u0.$verific$equal_20$usbf_pd.v:227$2500 ($eq).
Mapping usbf_top.$flatten\u1.\u0.$verific$equal_22$usbf_pd.v:228$2502 ($eq).
Mapping usbf_top.$flatten\u1.\u0.$verific$equal_24$usbf_pd.v:229$2504 ($eq).
Mapping usbf_top.$flatten\u1.\u0.$verific$equal_26$usbf_pd.v:230$2506 ($eq).
Mapping usbf_top.$flatten\u1.\u0.$verific$equal_28$usbf_pd.v:231$2508 ($eq).
Mapping usbf_top.$flatten\u1.\u0.$verific$equal_30$usbf_pd.v:232$2510 ($eq).
Mapping usbf_top.$flatten\u1.\u0.$verific$equal_32$usbf_pd.v:233$2512 ($eq).
Mapping usbf_top.$flatten\u1.\u0.$verific$equal_34$usbf_pd.v:234$2514 ($eq).
Mapping usbf_top.$flatten\u1.\u0.$verific$equal_36$usbf_pd.v:235$2516 ($eq).
Mapping usbf_top.$flatten\u1.\u0.$verific$equal_38$usbf_pd.v:236$2518 ($eq).
Mapping usbf_top.$flatten\u1.\u0.$verific$equal_40$usbf_pd.v:237$2520 ($eq).
Mapping usbf_top.$flatten\u1.\u0.$verific$equal_44$usbf_pd.v:239$2523 ($eq).
Mapping usbf_top.$flatten\u1.\u0.$verific$equal_46$usbf_pd.v:240$2525 ($eq).
Mapping usbf_top.$flatten\u1.\u0.$verific$i101$usbf_pd.v:311$2586 ($mux).
Mapping usbf_top.$flatten\u1.\u0.$verific$i105$usbf_pd.v:314$2589 ($and).
Mapping usbf_top.$flatten\u1.\u0.$verific$i124$usbf_pd.v:333$2605 ($not).
Mapping usbf_top.$flatten\u1.\u0.$verific$i125$usbf_pd.v:333$2606 ($and).
Mapping usbf_top.$flatten\u1.\u0.$verific$i134$usbf_pd.v:347$2654 ($and).
Mapping usbf_top.$flatten\u1.\u0.$verific$i143$usbf_pd.v:377$2659 ($and).
Mapping usbf_top.$flatten\u1.\u0.$verific$i145$usbf_pd.v:382$2661 ($not).
Mapping usbf_top.$flatten\u1.\u0.$verific$i146$usbf_pd.v:382$2662 ($and).
Mapping usbf_top.$flatten\u1.\u0.$verific$i149$usbf_pd.v:389$2664 ($and).
Mapping usbf_top.$flatten\u1.\u0.$verific$i150$usbf_pd.v:389$2665 ($and).
Mapping usbf_top.$flatten\u1.\u0.$verific$i152$usbf_pd.v:389$2666 ($and).
Mapping usbf_top.$flatten\u1.\u0.$verific$i153$usbf_pd.v:396$2667 ($and).
Mapping usbf_top.$flatten\u1.\u0.$verific$i154$usbf_pd.v:396$2668 ($and).
Mapping usbf_top.$flatten\u1.\u0.$verific$i156$usbf_pd.v:396$2669 ($and).
Mapping usbf_top.$flatten\u1.\u0.$verific$i157$usbf_pd.v:402$2670 ($not).
Mapping usbf_top.$flatten\u1.\u0.$verific$i158$usbf_pd.v:402$2671 ($or).
Mapping usbf_top.$flatten\u1.\u0.$verific$i159$usbf_pd.v:403$2672 ($or).
Mapping usbf_top.$flatten\u1.\u0.$verific$i160$usbf_pd.v:403$2673 ($not).
Mapping usbf_top.$flatten\u1.\u0.$verific$i161$usbf_pd.v:403$2674 ($and).
Mapping usbf_top.$flatten\u1.\u0.$verific$i162$usbf_pd.v:403$2675 ($or).
Mapping usbf_top.$flatten\u1.\u0.$verific$i174$usbf_pd.v:407$2682 ($mux).
Mapping usbf_top.$flatten\u1.\u0.$verific$i178$usbf_pd.v:407$2685 ($mux).
Mapping usbf_top.$flatten\u1.\u0.$verific$i179$usbf_pd.v:407$2686 ($mux).
Mapping usbf_top.$flatten\u1.\u0.$verific$i183$usbf_pd.v:411$2688 ($and).
Mapping usbf_top.$flatten\u1.\u0.$verific$i211$usbf_pd.v:433$2699 ($mux).
Mapping usbf_top.$flatten\u1.\u0.$verific$i212$usbf_pd.v:433$2700 ($mux).
Mapping usbf_top.$flatten\u1.\u0.$verific$i217$usbf_pd.v:433$2705 ($mux).
Mapping usbf_top.$flatten\u1.\u0.$verific$i218$usbf_pd.v:433$2706 ($mux).
Mapping usbf_top.$flatten\u1.\u0.$verific$i4$usbf_pd.v:212$2485 ($and).
Mapping usbf_top.$flatten\u1.\u0.$verific$i5$usbf_pd.v:212$2486 ($and).
Mapping usbf_top.$flatten\u1.\u0.$verific$i51$usbf_pd.v:243$2529 ($or).
Mapping usbf_top.$flatten\u1.\u0.$verific$i52$usbf_pd.v:243$2530 ($or).
Mapping usbf_top.$flatten\u1.\u0.$verific$i53$usbf_pd.v:243$2531 ($or).
Mapping usbf_top.$flatten\u1.\u0.$verific$i54$usbf_pd.v:243$2532 ($or).
Mapping usbf_top.$flatten\u1.\u0.$verific$i56$usbf_pd.v:244$2534 ($or).
Mapping usbf_top.$flatten\u1.\u0.$verific$i57$usbf_pd.v:244$2535 ($or).
Mapping usbf_top.$flatten\u1.\u0.$verific$i58$usbf_pd.v:244$2536 ($or).
Mapping usbf_top.$flatten\u1.\u0.$verific$i72$usbf_pd.v:257$2544 ($or).
Mapping usbf_top.$flatten\u1.\u0.$verific$i77$usbf_pd.v:263$2549 ($and).
Mapping usbf_top.$flatten\u1.\u0.$verific$i91$usbf_pd.v:300$2581 ($mux).
Mapping usbf_top.$flatten\u1.\u0.$verific$i97$usbf_pd.v:309$2584 ($and).
Mapping usbf_top.$flatten\u1.\u0.$verific$inv_13$usbf_pd.v:223$2493 ($not).
Mapping usbf_top.$flatten\u1.\u0.$verific$inv_78$usbf_pd.v:282$2572 ($not).
Mapping usbf_top.$flatten\u1.\u0.$verific$not_equal_132$usbf_pd.v:347$2653 ($ne).
Mapping usbf_top.$flatten\u1.\u0.$verific$not_equal_14$usbf_pd.v:223$2494 ($ne).
Mapping usbf_top.$flatten\u1.\u0.$verific$not_equal_75$usbf_pd.v:263$2548 ($ne).
Mapping usbf_top.$flatten\u1.\u0.$verific$rx_active_r_reg$usbf_pd.v:331$2604 ($dff).
Mapping usbf_top.$flatten\u1.\u0.$verific$token_valid_r1_reg$usbf_pd.v:254$2543 ($dff).
Mapping usbf_top.$flatten\u1.\u0.$verific$token_valid_str1_reg$usbf_pd.v:257$2546 ($dff).
Mapping usbf_top.$flatten\u1.\u0.\u0.$verific$i22$usbf_crc5.v:95$2721 ($xor).
Mapping usbf_top.$flatten\u1.\u0.\u0.$verific$i23$usbf_crc5.v:95$2722 ($xor).
Mapping usbf_top.$flatten\u1.\u0.\u0.$verific$i24$usbf_crc5.v:95$2723 ($xor).
Mapping usbf_top.$flatten\u1.\u0.\u0.$verific$i25$usbf_crc5.v:96$2724 ($xor).
Mapping usbf_top.$flatten\u1.\u0.\u0.$verific$i4$usbf_crc5.v:89$2720 ($xor).
Mapping usbf_top.$flatten\u1.\u0.\u0.$verific$xor_54$usbf_crc5.v:103$2731 ($xor).
Mapping usbf_top.$flatten\u1.\u0.\u0.$verific$xor_55$usbf_crc5.v:103$2730 ($xor).
Mapping usbf_top.$flatten\u1.\u0.\u0.$verific$xor_56$usbf_crc5.v:103$2729 ($xor).
Mapping usbf_top.$flatten\u1.\u0.\u0.$verific$xor_57$usbf_crc5.v:102$2728 ($xor).
Mapping usbf_top.$flatten\u1.\u0.\u0.$verific$xor_58$usbf_crc5.v:102$2727 ($xor).
Mapping usbf_top.$flatten\u1.\u0.\u0.$verific$xor_59$usbf_crc5.v:102$2726 ($xor).
Mapping usbf_top.$flatten\u1.\u0.\u0.$verific$xor_60$usbf_crc5.v:102$2725 ($xor).
Mapping usbf_top.$flatten\u1.\u0.\u1.$verific$i10$usbf_crc16.v:90$3128 ($xor).
Mapping usbf_top.$flatten\u1.\u0.\u1.$verific$i11$usbf_crc16.v:90$3129 ($xor).
Mapping usbf_top.$flatten\u1.\u0.\u1.$verific$i12$usbf_crc16.v:90$3130 ($xor).
Mapping usbf_top.$flatten\u1.\u0.\u1.$verific$i13$usbf_crc16.v:91$3131 ($xor).
Mapping usbf_top.$flatten\u1.\u0.\u1.$verific$i14$usbf_crc16.v:91$3132 ($xor).
Mapping usbf_top.$flatten\u1.\u0.\u1.$verific$i15$usbf_crc16.v:91$3133 ($xor).
Mapping usbf_top.$flatten\u1.\u0.\u1.$verific$i16$usbf_crc16.v:91$3134 ($xor).
Mapping usbf_top.$flatten\u1.\u0.\u1.$verific$i17$usbf_crc16.v:92$3135 ($xor).
Mapping usbf_top.$flatten\u1.\u0.\u1.$verific$i18$usbf_crc16.v:92$3136 ($xor).
Mapping usbf_top.$flatten\u1.\u0.\u1.$verific$i26$usbf_crc16.v:94$3137 ($xor).
Mapping usbf_top.$flatten\u1.\u0.\u1.$verific$i27$usbf_crc16.v:94$3138 ($xor).
Mapping usbf_top.$flatten\u1.\u0.\u1.$verific$i28$usbf_crc16.v:94$3139 ($xor).
Mapping usbf_top.$flatten\u1.\u0.\u1.$verific$i29$usbf_crc16.v:95$3140 ($xor).
Mapping usbf_top.$flatten\u1.\u0.\u1.$verific$i30$usbf_crc16.v:95$3141 ($xor).
Mapping usbf_top.$flatten\u1.\u0.\u1.$verific$i31$usbf_crc16.v:95$3142 ($xor).
Mapping usbf_top.$flatten\u1.\u0.\u1.$verific$i32$usbf_crc16.v:95$3143 ($xor).
Mapping usbf_top.$flatten\u1.\u0.\u1.$verific$i34$usbf_crc16.v:96$3144 ($xor).
Mapping usbf_top.$flatten\u1.\u0.\u1.$verific$i35$usbf_crc16.v:96$3145 ($xor).
Mapping usbf_top.$flatten\u1.\u0.\u1.$verific$i36$usbf_crc16.v:96$3146 ($xor).
Mapping usbf_top.$flatten\u1.\u0.\u1.$verific$i38$usbf_crc16.v:97$3147 ($xor).
Mapping usbf_top.$flatten\u1.\u0.\u1.$verific$i39$usbf_crc16.v:97$3148 ($xor).
Mapping usbf_top.$flatten\u1.\u0.\u1.$verific$i4$usbf_crc16.v:89$3122 ($xor).
Mapping usbf_top.$flatten\u1.\u0.\u1.$verific$i40$usbf_crc16.v:97$3149 ($xor).
Mapping usbf_top.$flatten\u1.\u0.\u1.$verific$i42$usbf_crc16.v:98$3150 ($xor).
Mapping usbf_top.$flatten\u1.\u0.\u1.$verific$i43$usbf_crc16.v:98$3151 ($xor).
Mapping usbf_top.$flatten\u1.\u0.\u1.$verific$i44$usbf_crc16.v:98$3152 ($xor).
Mapping usbf_top.$flatten\u1.\u0.\u1.$verific$i46$usbf_crc16.v:99$3153 ($xor).
Mapping usbf_top.$flatten\u1.\u0.\u1.$verific$i47$usbf_crc16.v:99$3154 ($xor).
Mapping usbf_top.$flatten\u1.\u0.\u1.$verific$i48$usbf_crc16.v:99$3155 ($xor).
Mapping usbf_top.$flatten\u1.\u0.\u1.$verific$i5$usbf_crc16.v:89$3123 ($xor).
Mapping usbf_top.$flatten\u1.\u0.\u1.$verific$i50$usbf_crc16.v:100$3156 ($xor).
Mapping usbf_top.$flatten\u1.\u0.\u1.$verific$i51$usbf_crc16.v:100$3157 ($xor).
Mapping usbf_top.$flatten\u1.\u0.\u1.$verific$i52$usbf_crc16.v:100$3158 ($xor).
Mapping usbf_top.$flatten\u1.\u0.\u1.$verific$i54$usbf_crc16.v:101$3159 ($xor).
Mapping usbf_top.$flatten\u1.\u0.\u1.$verific$i55$usbf_crc16.v:101$3160 ($xor).
Mapping usbf_top.$flatten\u1.\u0.\u1.$verific$i56$usbf_crc16.v:101$3161 ($xor).
Mapping usbf_top.$flatten\u1.\u0.\u1.$verific$i59$usbf_crc16.v:102$3162 ($xor).
Mapping usbf_top.$flatten\u1.\u0.\u1.$verific$i6$usbf_crc16.v:89$3124 ($xor).
Mapping usbf_top.$flatten\u1.\u0.\u1.$verific$i60$usbf_crc16.v:102$3163 ($xor).
Mapping usbf_top.$flatten\u1.\u0.\u1.$verific$i61$usbf_crc16.v:102$3164 ($xor).
Mapping usbf_top.$flatten\u1.\u0.\u1.$verific$i63$usbf_crc16.v:103$3165 ($xor).
Mapping usbf_top.$flatten\u1.\u0.\u1.$verific$i64$usbf_crc16.v:103$3166 ($xor).
Mapping usbf_top.$flatten\u1.\u0.\u1.$verific$i7$usbf_crc16.v:89$3125 ($xor).
Mapping usbf_top.$flatten\u1.\u0.\u1.$verific$i78$usbf_crc16.v:110$3167 ($xor).
Mapping usbf_top.$flatten\u1.\u0.\u1.$verific$i79$usbf_crc16.v:110$3168 ($xor).
Mapping usbf_top.$flatten\u1.\u0.\u1.$verific$i8$usbf_crc16.v:90$3126 ($xor).
Mapping usbf_top.$flatten\u1.\u0.\u1.$verific$i80$usbf_crc16.v:110$3169 ($xor).
Mapping usbf_top.$flatten\u1.\u0.\u1.$verific$i81$usbf_crc16.v:111$3170 ($xor).
Mapping usbf_top.$flatten\u1.\u0.\u1.$verific$i82$usbf_crc16.v:111$3171 ($xor).
Mapping usbf_top.$flatten\u1.\u0.\u1.$verific$i83$usbf_crc16.v:111$3172 ($xor).
Mapping usbf_top.$flatten\u1.\u0.\u1.$verific$i84$usbf_crc16.v:111$3173 ($xor).
Mapping usbf_top.$flatten\u1.\u0.\u1.$verific$i85$usbf_crc16.v:112$3174 ($xor).
Mapping usbf_top.$flatten\u1.\u0.\u1.$verific$i86$usbf_crc16.v:112$3175 ($xor).
Mapping usbf_top.$flatten\u1.\u0.\u1.$verific$i9$usbf_crc16.v:90$3127 ($xor).
Mapping usbf_top.$flatten\u1.\u1.$verific$equal_142$usbf_pa.v:315$3368 ($eq).
Mapping usbf_top.$flatten\u1.\u1.$verific$equal_143$usbf_pa.v:331$3369 ($eq).
Mapping usbf_top.$flatten\u1.\u1.$verific$equal_144$usbf_pa.v:344$3370 ($eq).
Mapping usbf_top.$flatten\u1.\u1.$verific$equal_145$usbf_pa.v:351$3371 ($eq).
Mapping usbf_top.$flatten\u1.\u1.$verific$equal_146$usbf_pa.v:368$3372 ($eq).
Mapping usbf_top.$flatten\u1.\u1.$verific$i122$usbf_pa.v:317$3357 ($and).
Mapping usbf_top.$flatten\u1.\u1.$verific$i126$usbf_pa.v:329$3359 ($mux).
Mapping usbf_top.$flatten\u1.\u1.$verific$i129$usbf_pa.v:333$3361 ($and).
Mapping usbf_top.$flatten\u1.\u1.$verific$i131$usbf_pa.v:337$3362 ($not).
Mapping usbf_top.$flatten\u1.\u1.$verific$i132$usbf_pa.v:337$3363 ($and).
Mapping usbf_top.$flatten\u1.\u1.$verific$i133$usbf_pa.v:337$3364 ($and).
Mapping usbf_top.$flatten\u1.\u1.$verific$i153$usbf_pa.v:382$3378 ($mux).
Mapping usbf_top.$flatten\u1.\u1.$verific$i167$usbf_pa.v:365$3366 ($not).
Mapping usbf_top.$flatten\u1.\u1.$verific$i28$usbf_pa.v:204$3266 ($mux).
Mapping usbf_top.$flatten\u1.\u1.$verific$i33$usbf_pa.v:226$3271 ($or).
Mapping usbf_top.$flatten\u1.\u1.$verific$i40$usbf_pa.v:234$3276 ($not).
Mapping usbf_top.$flatten\u1.\u1.$verific$i41$usbf_pa.v:234$3277 ($not).
Mapping usbf_top.$flatten\u1.\u1.$verific$i42$usbf_pa.v:234$3278 ($and).
Mapping usbf_top.$flatten\u1.\u1.$verific$i49$usbf_pa.v:242$3284 ($or).
Mapping usbf_top.$flatten\u1.\u1.$verific$i53$usbf_pa.v:246$3287 ($or).
Mapping usbf_top.$flatten\u1.\u1.$verific$i57$usbf_pa.v:248$3290 ($not).
Mapping usbf_top.$flatten\u1.\u1.$verific$i58$usbf_pa.v:248$3291 ($and).
Mapping usbf_top.$flatten\u1.\u1.$verific$i66$usbf_pa.v:257$3297 ($not).
Mapping usbf_top.$flatten\u1.\u1.$verific$i67$usbf_pa.v:257$3298 ($and).
Mapping usbf_top.$flatten\u1.\u1.$verific$i69$usbf_pa.v:259$3300 ($not).
Mapping usbf_top.$flatten\u1.\u1.$verific$i70$usbf_pa.v:259$3301 ($not).
Mapping usbf_top.$flatten\u1.\u1.$verific$i71$usbf_pa.v:259$3302 ($and).
Mapping usbf_top.$flatten\u1.\u1.$verific$i72$usbf_pa.v:259$3303 ($and).
Mapping usbf_top.$flatten\u1.\u1.$verific$i74$usbf_pa.v:259$3304 ($and).
Mapping usbf_top.$flatten\u1.\u1.$verific$i75$usbf_pa.v:259$3305 ($or).
Mapping usbf_top.$flatten\u1.\u1.$verific$inv_165$usbf_pa.v:275$3352 ($not).
Mapping usbf_top.$flatten\u1.\u1.$verific$mux_126$usbf_pa.v:329$3360 ($mux).
Mapping usbf_top.$flatten\u1.\u1.$verific$mux_30$usbf_pa.v:213$3269 ($bmux).
Mapping usbf_top.$flatten\u1.\u1.$verific$mux_31$usbf_pa.v:221$3270 ($bmux).
Mapping usbf_top.$flatten\u1.\u1.$verific$mux_35$usbf_pa.v:227$3273 ($mux).
Mapping usbf_top.$flatten\u1.\u1.$verific$mux_38$usbf_pa.v:231$3275 ($mux).
Mapping usbf_top.$flatten\u1.\u1.$verific$mux_45$usbf_pa.v:237$3281 ($mux).
Mapping usbf_top.$flatten\u1.\u1.$verific$mux_46$usbf_pa.v:237$3282 ($mux).
Mapping usbf_top.$flatten\u1.\u1.$verific$reduce_or_147$usbf_pa.v:382$3373 ($reduce_or).
Mapping usbf_top.$flatten\u1.\u1.$verific$send_data_r2_reg$usbf_pa.v:255$3296 ($dff).
Mapping usbf_top.$flatten\u1.\u1.$verific$send_data_r_reg$usbf_pa.v:252$3294 ($dff).
Mapping usbf_top.$flatten\u1.\u1.$verific$tx_first_r_reg$usbf_pa.v:246$3289 ($dff).
Mapping usbf_top.$flatten\u1.\u1.$verific$tx_valid_r1_reg$usbf_pa.v:190$3261 ($dff).
Mapping usbf_top.$flatten\u1.\u1.$verific$tx_valid_r_reg$usbf_pa.v:193$3263 ($dff).
Mapping usbf_top.$flatten\u1.\u1.\u1.$verific$i10$usbf_crc16.v:90$3128 ($xor).
Mapping usbf_top.$flatten\u1.\u1.\u1.$verific$i11$usbf_crc16.v:90$3129 ($xor).
Mapping usbf_top.$flatten\u1.\u1.\u1.$verific$i12$usbf_crc16.v:90$3130 ($xor).
Mapping usbf_top.$flatten\u1.\u1.\u1.$verific$i13$usbf_crc16.v:91$3131 ($xor).
Mapping usbf_top.$flatten\u1.\u1.\u1.$verific$i14$usbf_crc16.v:91$3132 ($xor).
Mapping usbf_top.$flatten\u1.\u1.\u1.$verific$i15$usbf_crc16.v:91$3133 ($xor).
Mapping usbf_top.$flatten\u1.\u1.\u1.$verific$i16$usbf_crc16.v:91$3134 ($xor).
Mapping usbf_top.$flatten\u1.\u1.\u1.$verific$i17$usbf_crc16.v:92$3135 ($xor).
Mapping usbf_top.$flatten\u1.\u1.\u1.$verific$i18$usbf_crc16.v:92$3136 ($xor).
Mapping usbf_top.$flatten\u1.\u1.\u1.$verific$i26$usbf_crc16.v:94$3137 ($xor).
Mapping usbf_top.$flatten\u1.\u1.\u1.$verific$i27$usbf_crc16.v:94$3138 ($xor).
Mapping usbf_top.$flatten\u1.\u1.\u1.$verific$i28$usbf_crc16.v:94$3139 ($xor).
Mapping usbf_top.$flatten\u1.\u1.\u1.$verific$i29$usbf_crc16.v:95$3140 ($xor).
Mapping usbf_top.$flatten\u1.\u1.\u1.$verific$i30$usbf_crc16.v:95$3141 ($xor).
Mapping usbf_top.$flatten\u1.\u1.\u1.$verific$i31$usbf_crc16.v:95$3142 ($xor).
Mapping usbf_top.$flatten\u1.\u1.\u1.$verific$i32$usbf_crc16.v:95$3143 ($xor).
Mapping usbf_top.$flatten\u1.\u1.\u1.$verific$i34$usbf_crc16.v:96$3144 ($xor).
Mapping usbf_top.$flatten\u1.\u1.\u1.$verific$i35$usbf_crc16.v:96$3145 ($xor).
Mapping usbf_top.$flatten\u1.\u1.\u1.$verific$i36$usbf_crc16.v:96$3146 ($xor).
Mapping usbf_top.$flatten\u1.\u1.\u1.$verific$i38$usbf_crc16.v:97$3147 ($xor).
Mapping usbf_top.$flatten\u1.\u1.\u1.$verific$i39$usbf_crc16.v:97$3148 ($xor).
Mapping usbf_top.$flatten\u1.\u1.\u1.$verific$i4$usbf_crc16.v:89$3122 ($xor).
Mapping usbf_top.$flatten\u1.\u1.\u1.$verific$i40$usbf_crc16.v:97$3149 ($xor).
Mapping usbf_top.$flatten\u1.\u1.\u1.$verific$i42$usbf_crc16.v:98$3150 ($xor).
Mapping usbf_top.$flatten\u1.\u1.\u1.$verific$i43$usbf_crc16.v:98$3151 ($xor).
Mapping usbf_top.$flatten\u1.\u1.\u1.$verific$i44$usbf_crc16.v:98$3152 ($xor).
Mapping usbf_top.$flatten\u1.\u1.\u1.$verific$i46$usbf_crc16.v:99$3153 ($xor).
Mapping usbf_top.$flatten\u1.\u1.\u1.$verific$i47$usbf_crc16.v:99$3154 ($xor).
Mapping usbf_top.$flatten\u1.\u1.\u1.$verific$i48$usbf_crc16.v:99$3155 ($xor).
Mapping usbf_top.$flatten\u1.\u1.\u1.$verific$i5$usbf_crc16.v:89$3123 ($xor).
Mapping usbf_top.$flatten\u1.\u1.\u1.$verific$i50$usbf_crc16.v:100$3156 ($xor).
Mapping usbf_top.$flatten\u1.\u1.\u1.$verific$i51$usbf_crc16.v:100$3157 ($xor).
Mapping usbf_top.$flatten\u1.\u1.\u1.$verific$i52$usbf_crc16.v:100$3158 ($xor).
Mapping usbf_top.$flatten\u1.\u1.\u1.$verific$i54$usbf_crc16.v:101$3159 ($xor).
Mapping usbf_top.$flatten\u1.\u1.\u1.$verific$i55$usbf_crc16.v:101$3160 ($xor).
Mapping usbf_top.$flatten\u1.\u1.\u1.$verific$i56$usbf_crc16.v:101$3161 ($xor).
Mapping usbf_top.$flatten\u1.\u1.\u1.$verific$i59$usbf_crc16.v:102$3162 ($xor).
Mapping usbf_top.$flatten\u1.\u1.\u1.$verific$i6$usbf_crc16.v:89$3124 ($xor).
Mapping usbf_top.$flatten\u1.\u1.\u1.$verific$i60$usbf_crc16.v:102$3163 ($xor).
Mapping usbf_top.$flatten\u1.\u1.\u1.$verific$i61$usbf_crc16.v:102$3164 ($xor).
Mapping usbf_top.$flatten\u1.\u1.\u1.$verific$i63$usbf_crc16.v:103$3165 ($xor).
Mapping usbf_top.$flatten\u1.\u1.\u1.$verific$i64$usbf_crc16.v:103$3166 ($xor).
Mapping usbf_top.$flatten\u1.\u1.\u1.$verific$i7$usbf_crc16.v:89$3125 ($xor).
Mapping usbf_top.$flatten\u1.\u1.\u1.$verific$i78$usbf_crc16.v:110$3167 ($xor).
Mapping usbf_top.$flatten\u1.\u1.\u1.$verific$i79$usbf_crc16.v:110$3168 ($xor).
Mapping usbf_top.$flatten\u1.\u1.\u1.$verific$i8$usbf_crc16.v:90$3126 ($xor).
Mapping usbf_top.$flatten\u1.\u1.\u1.$verific$i80$usbf_crc16.v:110$3169 ($xor).
Mapping usbf_top.$flatten\u1.\u1.\u1.$verific$i81$usbf_crc16.v:111$3170 ($xor).
Mapping usbf_top.$flatten\u1.\u1.\u1.$verific$i82$usbf_crc16.v:111$3171 ($xor).
Mapping usbf_top.$flatten\u1.\u1.\u1.$verific$i83$usbf_crc16.v:111$3172 ($xor).
Mapping usbf_top.$flatten\u1.\u1.\u1.$verific$i84$usbf_crc16.v:111$3173 ($xor).
Mapping usbf_top.$flatten\u1.\u1.\u1.$verific$i85$usbf_crc16.v:112$3174 ($xor).
Mapping usbf_top.$flatten\u1.\u1.\u1.$verific$i86$usbf_crc16.v:112$3175 ($xor).
Mapping usbf_top.$flatten\u1.\u1.\u1.$verific$i9$usbf_crc16.v:90$3127 ($xor).
Mapping usbf_top.$flatten\u1.\u2.$verific$adr_cw_reg$usbf_idma.v:286$2915 ($dff).
Mapping usbf_top.$flatten\u1.\u2.$verific$equal_114$usbf_idma.v:368$2972 ($logic_not).
Mapping usbf_top.$flatten\u1.\u2.$verific$equal_124$usbf_idma.v:369$2975 ($eq).
Mapping usbf_top.$flatten\u1.\u2.$verific$equal_134$usbf_idma.v:370$2977 ($eq).
Mapping usbf_top.$flatten\u1.\u2.$verific$equal_144$usbf_idma.v:371$2979 ($eq).
Mapping usbf_top.$flatten\u1.\u2.$verific$equal_213$usbf_idma.v:431$3017 ($eq).
Mapping usbf_top.$flatten\u1.\u2.$verific$equal_261$usbf_idma.v:463$3049 ($eq).
Mapping usbf_top.$flatten\u1.\u2.$verific$equal_262$usbf_idma.v:490$3050 ($eq).
Mapping usbf_top.$flatten\u1.\u2.$verific$equal_263$usbf_idma.v:513$3051 ($eq).
Mapping usbf_top.$flatten\u1.\u2.$verific$equal_264$usbf_idma.v:536$3052 ($eq).
Mapping usbf_top.$flatten\u1.\u2.$verific$equal_265$usbf_idma.v:559$3053 ($eq).
Mapping usbf_top.$flatten\u1.\u2.$verific$equal_266$usbf_idma.v:575$3054 ($eq).
Mapping usbf_top.$flatten\u1.\u2.$verific$equal_267$usbf_idma.v:594$3055 ($eq).
Mapping usbf_top.$flatten\u1.\u2.$verific$equal_268$usbf_idma.v:612$3056 ($eq).
Mapping usbf_top.$flatten\u1.\u2.$verific$equal_47$usbf_idma.v:292$2920 ($eq).
Mapping usbf_top.$flatten\u1.\u2.$verific$equal_89$usbf_idma.v:330$2954 ($logic_not).
Mapping usbf_top.$flatten\u1.\u2.$verific$i107$usbf_idma.v:352$2966 ($or).
Mapping usbf_top.$flatten\u1.\u2.$verific$i160$usbf_idma.v:375$2984 ($and).
Mapping usbf_top.$flatten\u1.\u2.$verific$i161$usbf_idma.v:375$2985 ($or).
Mapping usbf_top.$flatten\u1.\u2.$verific$i165$usbf_idma.v:378$2988 ($not).
Mapping usbf_top.$flatten\u1.\u2.$verific$i166$usbf_idma.v:378$2989 ($and).
Mapping usbf_top.$flatten\u1.\u2.$verific$i175$usbf_idma.v:385$2996 ($not).
Mapping usbf_top.$flatten\u1.\u2.$verific$i176$usbf_idma.v:385$2997 ($and).
Mapping usbf_top.$flatten\u1.\u2.$verific$i177$usbf_idma.v:385$2998 ($and).
Mapping usbf_top.$flatten\u1.\u2.$verific$i203$usbf_idma.v:417$3009 ($not).
Mapping usbf_top.$flatten\u1.\u2.$verific$i204$usbf_idma.v:417$3010 ($and).
Mapping usbf_top.$flatten\u1.\u2.$verific$i206$usbf_idma.v:418$3012 ($and).
Mapping usbf_top.$flatten\u1.\u2.$verific$i215$usbf_idma.v:431$3018 ($and).
Mapping usbf_top.$flatten\u1.\u2.$verific$i216$usbf_idma.v:431$3019 ($or).
Mapping usbf_top.$flatten\u1.\u2.$verific$i219$usbf_idma.v:431$3021 ($mux).
Mapping usbf_top.$flatten\u1.\u2.$verific$i222$usbf_idma.v:433$3024 ($or).
Mapping usbf_top.$flatten\u1.\u2.$verific$i231$usbf_idma.v:480$3030 ($not).
Mapping usbf_top.$flatten\u1.\u2.$verific$i232$usbf_idma.v:480$3031 ($and).
Mapping usbf_top.$flatten\u1.\u2.$verific$i235$usbf_idma.v:484$3033 ($and).
Mapping usbf_top.$flatten\u1.\u2.$verific$i236$usbf_idma.v:484$3034 ($not).
Mapping usbf_top.$flatten\u1.\u2.$verific$i237$usbf_idma.v:484$3035 ($and).
Mapping usbf_top.$flatten\u1.\u2.$verific$i243$usbf_idma.v:510$3039 ($mux).
Mapping usbf_top.$flatten\u1.\u2.$verific$i248$usbf_idma.v:533$3041 ($mux).
Mapping usbf_top.$flatten\u1.\u2.$verific$i258$usbf_idma.v:627$3045 ($or).
Mapping usbf_top.$flatten\u1.\u2.$verific$i259$usbf_idma.v:629$3046 ($and).
Mapping usbf_top.$flatten\u1.\u2.$verific$i273$usbf_idma.v:631$3060 ($or).
Mapping usbf_top.$flatten\u1.\u2.$verific$i279$usbf_idma.v:631$3066 ($mux).
Mapping usbf_top.$flatten\u1.\u2.$verific$i39$usbf_idma.v:285$2912 ($or).
Mapping usbf_top.$flatten\u1.\u2.$verific$i4$usbf_idma.v:242$2887 ($not).
Mapping usbf_top.$flatten\u1.\u2.$verific$i49$usbf_idma.v:292$2921 ($and).
Mapping usbf_top.$flatten\u1.\u2.$verific$i5$usbf_idma.v:242$2888 ($and).
Mapping usbf_top.$flatten\u1.\u2.$verific$i6$usbf_idma.v:242$2889 ($or).
Mapping usbf_top.$flatten\u1.\u2.$verific$i69$usbf_idma.v:313$2935 ($or).
Mapping usbf_top.$flatten\u1.\u2.$verific$i71$usbf_idma.v:314$2937 ($not).
Mapping usbf_top.$flatten\u1.\u2.$verific$i72$usbf_idma.v:314$2938 ($and).
Mapping usbf_top.$flatten\u1.\u2.$verific$i77$usbf_idma.v:324$2941 ($or).
Mapping usbf_top.$flatten\u1.\u2.$verific$i85$usbf_idma.v:328$2949 ($and).
Mapping usbf_top.$flatten\u1.\u2.$verific$i87$usbf_idma.v:328$2951 ($and).
Mapping usbf_top.$flatten\u1.\u2.$verific$i88$usbf_idma.v:328$2952 ($or).
Mapping usbf_top.$flatten\u1.\u2.$verific$idma_done_reg$usbf_idma.v:352$2968 ($dff).
Mapping usbf_top.$flatten\u1.\u2.$verific$last_buf_adr_reg$usbf_idma.v:289$2919 ($dff).
Mapping usbf_top.$flatten\u1.\u2.$verific$mack_r_reg$usbf_idma.v:254$2897 ($dff).
Mapping usbf_top.$flatten\u1.\u2.$verific$mux_155$usbf_idma.v:372$2982 ($mux).
Mapping usbf_top.$flatten\u1.\u2.$verific$mux_201$usbf_idma.v:415$3008 ($bmux).
Mapping usbf_top.$flatten\u1.\u2.$verific$mux_237$usbf_idma.v:487$3036 ($mux).
Mapping usbf_top.$flatten\u1.\u2.$verific$mux_249$usbf_idma.v:556$3043 ($mux).
Mapping usbf_top.$flatten\u1.\u2.$verific$mux_260$usbf_idma.v:629$3048 ($mux).
Mapping usbf_top.$flatten\u1.\u2.$verific$mux_280$usbf_idma.v:510$3026 ($mux).
Mapping usbf_top.$flatten\u1.\u2.$verific$mux_41$usbf_idma.v:286$2914 ($mux).
Mapping usbf_top.$flatten\u1.\u2.$verific$mux_50$usbf_idma.v:293$2923 ($mux).
Mapping usbf_top.$flatten\u1.\u2.$verific$mux_54$usbf_idma.v:297$2926 ($mux).
Mapping usbf_top.$flatten\u1.\u2.$verific$mux_61$usbf_idma.v:307$2929 ($mux).
Mapping usbf_top.$flatten\u1.\u2.$verific$mux_67$usbf_idma.v:311$2934 ($mux).
Mapping usbf_top.$flatten\u1.\u2.$verific$mux_81$usbf_idma.v:326$2946 ($mux).
Mapping usbf_top.$flatten\u1.\u2.$verific$mwe_reg$usbf_idma.v:251$2894 ($dff).
Mapping usbf_top.$flatten\u1.\u2.$verific$not_equal_173$usbf_idma.v:385$2995 ($reduce_bool).
Mapping usbf_top.$flatten\u1.\u2.$verific$not_equal_85$usbf_idma.v:328$2950 ($reduce_bool).
Mapping usbf_top.$flatten\u1.\u2.$verific$reduce_or_274$usbf_idma.v:631$3062 ($reduce_or).
Mapping usbf_top.$flatten\u1.\u2.$verific$rx_data_done_r2_reg$usbf_idma.v:271$2905 ($dff).
Mapping usbf_top.$flatten\u1.\u2.$verific$rx_data_done_r_reg$usbf_idma.v:268$2903 ($dff).
Mapping usbf_top.$flatten\u1.\u2.$verific$rx_data_st_r_reg$usbf_idma.v:265$2901 ($dff).
Mapping usbf_top.$flatten\u1.\u2.$verific$rx_data_valid_r_reg$usbf_idma.v:262$2899 ($dff).
Mapping usbf_top.$flatten\u1.\u2.$verific$sizd_is_zero_reg$usbf_idma.v:333$2957 ($dff).
Mapping usbf_top.$flatten\u1.\u2.$verific$tx_dma_en_r_reg$usbf_idma.v:275$2907 ($dff).
Mapping usbf_top.$flatten\u1.\u2.$verific$word_done_r_reg$usbf_idma.v:378$2991 ($dff).
Mapping usbf_top.$flatten\u1.\u2.$verific$word_done_reg$usbf_idma.v:375$2987 ($dff).
Mapping usbf_top.$flatten\u1.\u2.$verific$wr_done_reg$usbf_idma.v:391$3003 ($dff).
Mapping usbf_top.$flatten\u1.\u2.$verific$wr_last_reg$usbf_idma.v:385$3000 ($dff).
Mapping usbf_top.$flatten\u1.\u3.$verific$abort_reg$usbf_pe.v:733$4074 ($dff).
Mapping usbf_top.$flatten\u1.\u3.$verific$adr_r_reg$usbf_pe.v:662$4017 ($dff).
Mapping usbf_top.$flatten\u1.\u3.$verific$adr_reg$usbf_pe.v:605$3965 ($dff).
Mapping usbf_top.$flatten\u1.\u3.$verific$buf0_na_reg$usbf_pe.v:391$3793 ($dff).
Mapping usbf_top.$flatten\u1.\u3.$verific$buf0_not_aloc_reg$usbf_pe.v:398$3799 ($dff).
Mapping usbf_top.$flatten\u1.\u3.$verific$buf0_set_reg$usbf_pe.v:717$4059 ($dff).
Mapping usbf_top.$flatten\u1.\u3.$verific$buf0_st_max_reg$usbf_pe.v:638$3991 ($dff).
Mapping usbf_top.$flatten\u1.\u3.$verific$buf1_na_reg$usbf_pe.v:394$3797 ($dff).
Mapping usbf_top.$flatten\u1.\u3.$verific$buf1_not_aloc_reg$usbf_pe.v:401$3801 ($dff).
Mapping usbf_top.$flatten\u1.\u3.$verific$buf1_set_reg$usbf_pe.v:720$4062 ($dff).
Mapping usbf_top.$flatten\u1.\u3.$verific$buf1_st_max_reg$usbf_pe.v:641$3994 ($dff).
Mapping usbf_top.$flatten\u1.\u3.$verific$buffer_done_reg$usbf_pe.v:631$3981 ($dff).
Mapping usbf_top.$flatten\u1.\u3.$verific$buffer_empty_reg$usbf_pe.v:627$3978 ($dff).
Mapping usbf_top.$flatten\u1.\u3.$verific$buffer_full_reg$usbf_pe.v:622$3975 ($dff).
Mapping usbf_top.$flatten\u1.\u3.$verific$buffer_overflow_reg$usbf_pe.v:674$4027 ($dff).
Mapping usbf_top.$flatten\u1.\u3.$verific$equal_128$usbf_pe.v:430$3855 ($eq).
Mapping usbf_top.$flatten\u1.\u3.$verific$equal_129$usbf_pe.v:431$3856 ($eq).
Mapping usbf_top.$flatten\u1.\u3.$verific$equal_13$usbf_pe.v:370$3773 ($eq).
Mapping usbf_top.$flatten\u1.\u3.$verific$equal_138$usbf_pe.v:444$3865 ($eq).
Mapping usbf_top.$flatten\u1.\u3.$verific$equal_139$usbf_pe.v:451$3866 ($eq).
Mapping usbf_top.$flatten\u1.\u3.$verific$equal_140$usbf_pe.v:458$3867 ($eq).
Mapping usbf_top.$flatten\u1.\u3.$verific$equal_15$usbf_pe.v:371$3775 ($eq).
Mapping usbf_top.$flatten\u1.\u3.$verific$equal_169$usbf_pe.v:495$3899 ($eq).
Mapping usbf_top.$flatten\u1.\u3.$verific$equal_170$usbf_pe.v:496$3900 ($eq).
Mapping usbf_top.$flatten\u1.\u3.$verific$equal_171$usbf_pe.v:497$3901 ($eq).
Mapping usbf_top.$flatten\u1.\u3.$verific$equal_271$usbf_pe.v:546$3922 ($logic_not).
Mapping usbf_top.$flatten\u1.\u3.$verific$equal_273$usbf_pe.v:547$3924 ($eq).
Mapping usbf_top.$flatten\u1.\u3.$verific$equal_276$usbf_pe.v:548$3927 ($eq).
Mapping usbf_top.$flatten\u1.\u3.$verific$equal_279$usbf_pe.v:549$3930 ($eq).
Mapping usbf_top.$flatten\u1.\u3.$verific$equal_3$usbf_pe.v:363$3763 ($eq).
Mapping usbf_top.$flatten\u1.\u3.$verific$equal_343$usbf_pe.v:627$3976 ($logic_not).
Mapping usbf_top.$flatten\u1.\u3.$verific$equal_5$usbf_pe.v:364$3765 ($eq).
Mapping usbf_top.$flatten\u1.\u3.$verific$equal_519$usbf_pe.v:754$4082 ($eq).
Mapping usbf_top.$flatten\u1.\u3.$verific$equal_532$usbf_pe.v:771$4092 ($eq).
Mapping usbf_top.$flatten\u1.\u3.$verific$equal_578$usbf_pe.v:803$4131 ($eq).
Mapping usbf_top.$flatten\u1.\u3.$verific$equal_580$usbf_pe.v:803$4133 ($eq).
Mapping usbf_top.$flatten\u1.\u3.$verific$equal_613$usbf_pe.v:902$4160 ($logic_not).
Mapping usbf_top.$flatten\u1.\u3.$verific$equal_676$usbf_pe.v:846$4212 ($eq).
Mapping usbf_top.$flatten\u1.\u3.$verific$equal_677$usbf_pe.v:915$4213 ($eq).
Mapping usbf_top.$flatten\u1.\u3.$verific$equal_678$usbf_pe.v:925$4214 ($eq).
Mapping usbf_top.$flatten\u1.\u3.$verific$equal_681$usbf_pe.v:995$4216 ($eq).
Mapping usbf_top.$flatten\u1.\u3.$verific$equal_682$usbf_pe.v:1009$4217 ($eq).
Mapping usbf_top.$flatten\u1.\u3.$verific$equal_683$usbf_pe.v:1047$4218 ($eq).
Mapping usbf_top.$flatten\u1.\u3.$verific$equal_684$usbf_pe.v:1056$4219 ($eq).
Mapping usbf_top.$flatten\u1.\u3.$verific$equal_685$usbf_pe.v:1080$4220 ($eq).
Mapping usbf_top.$flatten\u1.\u3.$verific$equal_7$usbf_pe.v:365$3767 ($logic_not).
Mapping usbf_top.$flatten\u1.\u3.$verific$equal_77$usbf_pe.v:439$3818 ($eq).
Mapping usbf_top.$flatten\u1.\u3.$verific$equal_82$usbf_pe.v:447$3822 ($eq).
Mapping usbf_top.$flatten\u1.\u3.$verific$equal_9$usbf_pe.v:367$3769 ($eq).
Mapping usbf_top.$flatten\u1.\u3.$verific$i106$usbf_pe.v:481$3826 ($not).
Mapping usbf_top.$flatten\u1.\u3.$verific$i108$usbf_pe.v:482$3830 ($not).
Mapping usbf_top.$flatten\u1.\u3.$verific$i111$usbf_pe.v:483$3834 ($not).
Mapping usbf_top.$flatten\u1.\u3.$verific$i113$usbf_pe.v:484$3838 ($not).
Mapping usbf_top.$flatten\u1.\u3.$verific$i117$usbf_pe.v:425$3843 ($not).
Mapping usbf_top.$flatten\u1.\u3.$verific$i118$usbf_pe.v:425$3844 ($not).
Mapping usbf_top.$flatten\u1.\u3.$verific$i122$usbf_pe.v:427$3848 ($not).
Mapping usbf_top.$flatten\u1.\u3.$verific$i133$usbf_pe.v:434$3858 ($not).
Mapping usbf_top.$flatten\u1.\u3.$verific$i152$usbf_pe.v:472$3880 ($not).
Mapping usbf_top.$flatten\u1.\u3.$verific$i20$usbf_pe.v:375$3779 ($not).
Mapping usbf_top.$flatten\u1.\u3.$verific$i21$usbf_pe.v:375$3780 ($and).
Mapping usbf_top.$flatten\u1.\u3.$verific$i273$usbf_pe.v:546$3923 ($and).
Mapping usbf_top.$flatten\u1.\u3.$verific$i275$usbf_pe.v:547$3925 ($and).
Mapping usbf_top.$flatten\u1.\u3.$verific$i276$usbf_pe.v:547$3926 ($or).
Mapping usbf_top.$flatten\u1.\u3.$verific$i278$usbf_pe.v:548$3928 ($and).
Mapping usbf_top.$flatten\u1.\u3.$verific$i279$usbf_pe.v:548$3929 ($or).
Mapping usbf_top.$flatten\u1.\u3.$verific$i281$usbf_pe.v:549$3931 ($and).
Mapping usbf_top.$flatten\u1.\u3.$verific$i282$usbf_pe.v:549$3932 ($or).
Mapping usbf_top.$flatten\u1.\u3.$verific$i283$usbf_pe.v:549$3933 ($not).
Mapping usbf_top.$flatten\u1.\u3.$verific$i290$usbf_pe.v:570$3938 ($or).
Mapping usbf_top.$flatten\u1.\u3.$verific$i293$usbf_pe.v:570$3940 ($mux).
Mapping usbf_top.$flatten\u1.\u3.$verific$i303$usbf_pe.v:581$3944 ($mux).
Mapping usbf_top.$flatten\u1.\u3.$verific$i313$usbf_pe.v:592$3948 ($mux).
Mapping usbf_top.$flatten\u1.\u3.$verific$i316$usbf_pe.v:595$3951 ($and).
Mapping usbf_top.$flatten\u1.\u3.$verific$i317$usbf_pe.v:595$3952 ($or).
Mapping usbf_top.$flatten\u1.\u3.$verific$i319$usbf_pe.v:598$3954 ($and).
Mapping usbf_top.$flatten\u1.\u3.$verific$i320$usbf_pe.v:598$3955 ($or).
Mapping usbf_top.$flatten\u1.\u3.$verific$i322$usbf_pe.v:601$3957 ($or).
Mapping usbf_top.$flatten\u1.\u3.$verific$i323$usbf_pe.v:601$3958 ($not).
Mapping usbf_top.$flatten\u1.\u3.$verific$i324$usbf_pe.v:601$3959 ($and).
Mapping usbf_top.$flatten\u1.\u3.$verific$i325$usbf_pe.v:601$3960 ($mux).
Mapping usbf_top.$flatten\u1.\u3.$verific$i326$usbf_pe.v:601$3961 ($mux).
Mapping usbf_top.$flatten\u1.\u3.$verific$i33$usbf_pe.v:391$3791 ($or).
Mapping usbf_top.$flatten\u1.\u3.$verific$i348$usbf_pe.v:631$3979 ($mux).
Mapping usbf_top.$flatten\u1.\u3.$verific$i351$usbf_pe.v:635$3982 ($not).
Mapping usbf_top.$flatten\u1.\u3.$verific$i352$usbf_pe.v:635$3983 ($and).
Mapping usbf_top.$flatten\u1.\u3.$verific$i353$usbf_pe.v:635$3984 ($not).
Mapping usbf_top.$flatten\u1.\u3.$verific$i354$usbf_pe.v:635$3985 ($and).
Mapping usbf_top.$flatten\u1.\u3.$verific$i355$usbf_pe.v:635$3986 ($or).
Mapping usbf_top.$flatten\u1.\u3.$verific$i356$usbf_pe.v:635$3987 ($and).
Mapping usbf_top.$flatten\u1.\u3.$verific$i367$usbf_pe.v:644$3995 ($or).
Mapping usbf_top.$flatten\u1.\u3.$verific$i368$usbf_pe.v:645$3996 ($not).
Mapping usbf_top.$flatten\u1.\u3.$verific$i369$usbf_pe.v:645$3997 ($and).
Mapping usbf_top.$flatten\u1.\u3.$verific$i370$usbf_pe.v:645$3998 ($mux).
Mapping usbf_top.$flatten\u1.\u3.$verific$i371$usbf_pe.v:645$3999 ($or).
Mapping usbf_top.$flatten\u1.\u3.$verific$i375$usbf_pe.v:648$4002 ($mux).
Mapping usbf_top.$flatten\u1.\u3.$verific$i376$usbf_pe.v:648$4003 ($or).
Mapping usbf_top.$flatten\u1.\u3.$verific$i379$usbf_pe.v:650$4006 ($and).
Mapping usbf_top.$flatten\u1.\u3.$verific$i38$usbf_pe.v:394$3795 ($or).
Mapping usbf_top.$flatten\u1.\u3.$verific$i382$usbf_pe.v:654$4008 ($and).
Mapping usbf_top.$flatten\u1.\u3.$verific$i404$usbf_pe.v:674$4025 ($and).
Mapping usbf_top.$flatten\u1.\u3.$verific$i408$usbf_pe.v:679$4028 ($and).
Mapping usbf_top.$flatten\u1.\u3.$verific$i409$usbf_pe.v:679$4029 ($and).
Mapping usbf_top.$flatten\u1.\u3.$verific$i411$usbf_pe.v:679$4031 ($and).
Mapping usbf_top.$flatten\u1.\u3.$verific$i418$usbf_pe.v:691$4036 ($not).
Mapping usbf_top.$flatten\u1.\u3.$verific$i420$usbf_pe.v:691$4038 ($and).
Mapping usbf_top.$flatten\u1.\u3.$verific$i424$usbf_pe.v:694$4041 ($not).
Mapping usbf_top.$flatten\u1.\u3.$verific$i426$usbf_pe.v:694$4043 ($and).
Mapping usbf_top.$flatten\u1.\u3.$verific$i484$usbf_pe.v:717$4056 ($not).
Mapping usbf_top.$flatten\u1.\u3.$verific$i485$usbf_pe.v:717$4057 ($and).
Mapping usbf_top.$flatten\u1.\u3.$verific$i489$usbf_pe.v:720$4060 ($and).
Mapping usbf_top.$flatten\u1.\u3.$verific$i503$usbf_pe.v:733$4069 ($and).
Mapping usbf_top.$flatten\u1.\u3.$verific$i504$usbf_pe.v:733$4070 ($or).
Mapping usbf_top.$flatten\u1.\u3.$verific$i505$usbf_pe.v:733$4071 ($and).
Mapping usbf_top.$flatten\u1.\u3.$verific$i506$usbf_pe.v:733$4072 ($or).
Mapping usbf_top.$flatten\u1.\u3.$verific$i510$usbf_pe.v:747$4075 ($or).
Mapping usbf_top.$flatten\u1.\u3.$verific$i539$usbf_pe.v:781$4096 ($and).
Mapping usbf_top.$flatten\u1.\u3.$verific$i54$usbf_pe.v:408$3805 ($or).
Mapping usbf_top.$flatten\u1.\u3.$verific$i540$usbf_pe.v:781$4097 ($and).
Mapping usbf_top.$flatten\u1.\u3.$verific$i541$usbf_pe.v:781$4098 ($not).
Mapping usbf_top.$flatten\u1.\u3.$verific$i542$usbf_pe.v:781$4099 ($and).
Mapping usbf_top.$flatten\u1.\u3.$verific$i544$usbf_pe.v:782$4101 ($and).
Mapping usbf_top.$flatten\u1.\u3.$verific$i545$usbf_pe.v:782$4102 ($and).
Mapping usbf_top.$flatten\u1.\u3.$verific$i546$usbf_pe.v:782$4103 ($not).
Mapping usbf_top.$flatten\u1.\u3.$verific$i547$usbf_pe.v:782$4104 ($and).
Mapping usbf_top.$flatten\u1.\u3.$verific$i55$usbf_pe.v:408$3806 ($and).
Mapping usbf_top.$flatten\u1.\u3.$verific$i56$usbf_pe.v:408$3807 ($not).
Mapping usbf_top.$flatten\u1.\u3.$verific$i562$usbf_pe.v:797$4114 ($not).
Mapping usbf_top.$flatten\u1.\u3.$verific$i563$usbf_pe.v:797$4115 ($and).
Mapping usbf_top.$flatten\u1.\u3.$verific$i564$usbf_pe.v:798$4116 ($or).
Mapping usbf_top.$flatten\u1.\u3.$verific$i565$usbf_pe.v:798$4117 ($not).
Mapping usbf_top.$flatten\u1.\u3.$verific$i566$usbf_pe.v:798$4118 ($and).
Mapping usbf_top.$flatten\u1.\u3.$verific$i567$usbf_pe.v:799$4119 ($not).
Mapping usbf_top.$flatten\u1.\u3.$verific$i568$usbf_pe.v:799$4120 ($and).
Mapping usbf_top.$flatten\u1.\u3.$verific$i569$usbf_pe.v:799$4121 ($or).
Mapping usbf_top.$flatten\u1.\u3.$verific$i57$usbf_pe.v:408$3808 ($and).
Mapping usbf_top.$flatten\u1.\u3.$verific$i570$usbf_pe.v:800$4122 ($or).
Mapping usbf_top.$flatten\u1.\u3.$verific$i571$usbf_pe.v:800$4123 ($or).
Mapping usbf_top.$flatten\u1.\u3.$verific$i572$usbf_pe.v:800$4124 ($or).
Mapping usbf_top.$flatten\u1.\u3.$verific$i573$usbf_pe.v:800$4125 ($not).
Mapping usbf_top.$flatten\u1.\u3.$verific$i574$usbf_pe.v:800$4126 ($and).
Mapping usbf_top.$flatten\u1.\u3.$verific$i575$usbf_pe.v:801$4127 ($or).
Mapping usbf_top.$flatten\u1.\u3.$verific$i576$usbf_pe.v:801$4128 ($and).
Mapping usbf_top.$flatten\u1.\u3.$verific$i580$usbf_pe.v:803$4132 ($and).
Mapping usbf_top.$flatten\u1.\u3.$verific$i582$usbf_pe.v:803$4134 ($and).
Mapping usbf_top.$flatten\u1.\u3.$verific$i583$usbf_pe.v:803$4135 ($or).
Mapping usbf_top.$flatten\u1.\u3.$verific$i585$usbf_pe.v:805$4137 ($and).
Mapping usbf_top.$flatten\u1.\u3.$verific$i599$usbf_pe.v:874$4147 ($not).
Mapping usbf_top.$flatten\u1.\u3.$verific$i600$usbf_pe.v:874$4148 ($and).
Mapping usbf_top.$flatten\u1.\u3.$verific$i602$usbf_pe.v:874$4149 ($and).
Mapping usbf_top.$flatten\u1.\u3.$verific$i603$usbf_pe.v:883$4150 ($and).
Mapping usbf_top.$flatten\u1.\u3.$verific$i604$usbf_pe.v:883$4151 ($or).
Mapping usbf_top.$flatten\u1.\u3.$verific$i605$usbf_pe.v:884$4152 ($and).
Mapping usbf_top.$flatten\u1.\u3.$verific$i606$usbf_pe.v:884$4153 ($and).
Mapping usbf_top.$flatten\u1.\u3.$verific$i607$usbf_pe.v:884$4154 ($or).
Mapping usbf_top.$flatten\u1.\u3.$verific$i608$usbf_pe.v:885$4155 ($and).
Mapping usbf_top.$flatten\u1.\u3.$verific$i609$usbf_pe.v:885$4156 ($and).
Mapping usbf_top.$flatten\u1.\u3.$verific$i610$usbf_pe.v:885$4157 ($or).
Mapping usbf_top.$flatten\u1.\u3.$verific$i611$usbf_pe.v:893$4158 ($and).
Mapping usbf_top.$flatten\u1.\u3.$verific$i613$usbf_pe.v:900$4159 ($or).
Mapping usbf_top.$flatten\u1.\u3.$verific$i617$usbf_pe.v:907$4161 ($and).
Mapping usbf_top.$flatten\u1.\u3.$verific$i618$usbf_pe.v:907$4162 ($or).
Mapping usbf_top.$flatten\u1.\u3.$verific$i628$usbf_pe.v:911$4169 ($mux).
Mapping usbf_top.$flatten\u1.\u3.$verific$i631$usbf_pe.v:911$4172 ($mux).
Mapping usbf_top.$flatten\u1.\u3.$verific$i634$usbf_pe.v:911$4175 ($mux).
Mapping usbf_top.$flatten\u1.\u3.$verific$i637$usbf_pe.v:911$4178 ($mux).
Mapping usbf_top.$flatten\u1.\u3.$verific$i640$usbf_pe.v:911$4181 ($mux).
Mapping usbf_top.$flatten\u1.\u3.$verific$i643$usbf_pe.v:912$4184 ($mux).
Mapping usbf_top.$flatten\u1.\u3.$verific$i646$usbf_pe.v:912$4187 ($mux).
Mapping usbf_top.$flatten\u1.\u3.$verific$i650$usbf_pe.v:960$4190 ($and).
Mapping usbf_top.$flatten\u1.\u3.$verific$i653$usbf_pe.v:981$4193 ($or).
Mapping usbf_top.$flatten\u1.\u3.$verific$i654$usbf_pe.v:981$4194 ($or).
Mapping usbf_top.$flatten\u1.\u3.$verific$i663$usbf_pe.v:1026$4201 ($or).
Mapping usbf_top.$flatten\u1.\u3.$verific$i664$usbf_pe.v:1040$4202 ($and).
Mapping usbf_top.$flatten\u1.\u3.$verific$i673$usbf_pe.v:1044$4209 ($mux).
Mapping usbf_top.$flatten\u1.\u3.$verific$i674$usbf_pe.v:1070$4210 ($and).
Mapping usbf_top.$flatten\u1.\u3.$verific$i692$usbf_pe.v:1091$4226 ($mux).
Mapping usbf_top.$flatten\u1.\u3.$verific$i694$usbf_pe.v:1091$4228 ($or).
Mapping usbf_top.$flatten\u1.\u3.$verific$i695$usbf_pe.v:1091$4229 ($mux).
Mapping usbf_top.$flatten\u1.\u3.$verific$i699$usbf_pe.v:1091$4233 ($mux).
Mapping usbf_top.$flatten\u1.\u3.$verific$i723$usbf_pe.v:1044$4203 ($not).
Mapping usbf_top.$flatten\u1.\u3.$verific$i724$usbf_pe.v:1044$4205 ($not).
Mapping usbf_top.$flatten\u1.\u3.$verific$i725$usbf_pe.v:1077$4211 ($not).
Mapping usbf_top.$flatten\u1.\u3.$verific$int_upid_set_reg$usbf_pe.v:801$4130 ($dff).
Mapping usbf_top.$flatten\u1.\u3.$verific$match_r_reg$usbf_pe.v:404$3803 ($dff).
Mapping usbf_top.$flatten\u1.\u3.$verific$mux_328$usbf_pe.v:605$3963 ($mux).
Mapping usbf_top.$flatten\u1.\u3.$verific$mux_331$usbf_pe.v:608$3966 ($mux).
Mapping usbf_top.$flatten\u1.\u3.$verific$mux_335$usbf_pe.v:615$3970 ($mux).
Mapping usbf_top.$flatten\u1.\u3.$verific$mux_382$usbf_pe.v:654$4009 ($mux).
Mapping usbf_top.$flatten\u1.\u3.$verific$mux_383$usbf_pe.v:654$4010 ($mux).
Mapping usbf_top.$flatten\u1.\u3.$verific$mux_397$usbf_pe.v:670$4020 ($mux).
Mapping usbf_top.$flatten\u1.\u3.$verific$mux_398$usbf_pe.v:670$4021 ($mux).
Mapping usbf_top.$flatten\u1.\u3.$verific$mux_429$usbf_pe.v:701$4047 ($mux).
Mapping usbf_top.$flatten\u1.\u3.$verific$mux_430$usbf_pe.v:701$4048 ($mux).
Mapping usbf_top.$flatten\u1.\u3.$verific$mux_622$usbf_pe.v:911$4165 ($mux).
Mapping usbf_top.$flatten\u1.\u3.$verific$mux_625$usbf_pe.v:911$4167 ($mux).
Mapping usbf_top.$flatten\u1.\u3.$verific$mux_631$usbf_pe.v:911$4173 ($mux).
Mapping usbf_top.$flatten\u1.\u3.$verific$mux_635$usbf_pe.v:911$4177 ($mux).
Mapping usbf_top.$flatten\u1.\u3.$verific$mux_637$usbf_pe.v:911$4179 ($mux).
Mapping usbf_top.$flatten\u1.\u3.$verific$mux_641$usbf_pe.v:912$4183 ($mux).
Mapping usbf_top.$flatten\u1.\u3.$verific$mux_65$usbf_pe.v:421$3815 ($mux).
Mapping usbf_top.$flatten\u1.\u3.$verific$mux_651$usbf_pe.v:963$4192 ($mux).
Mapping usbf_top.$flatten\u1.\u3.$verific$mux_659$usbf_pe.v:992$4198 ($mux).
Mapping usbf_top.$flatten\u1.\u3.$verific$mux_665$usbf_pe.v:1044$4204 ($mux).
Mapping usbf_top.$flatten\u1.\u3.$verific$mux_667$usbf_pe.v:1044$4206 ($mux).
Mapping usbf_top.$flatten\u1.\u3.$verific$mux_668$usbf_pe.v:1044$4207 ($mux).
Mapping usbf_top.$flatten\u1.\u3.$verific$mux_671$usbf_pe.v:1044$4208 ($mux).
Mapping usbf_top.$flatten\u1.\u3.$verific$mux_701$usbf_pe.v:1007$4142 ($mux).
Mapping usbf_top.$flatten\u1.\u3.$verific$mux_713$usbf_pe.v:704$4051 ($mux).
Mapping usbf_top.$flatten\u1.\u3.$verific$mux_714$usbf_pe.v:714$4050 ($mux).
Mapping usbf_top.$flatten\u1.\u3.$verific$mux_715$usbf_pe.v:714$4055 ($mux).
Mapping usbf_top.$flatten\u1.\u3.$verific$new_size_reg$usbf_pe.v:657$4015 ($dff).
Mapping usbf_top.$flatten\u1.\u3.$verific$next_dpid_reg$usbf_pe.v:487$3897 ($dff).
Mapping usbf_top.$flatten\u1.\u3.$verific$no_bufs0_reg$usbf_pe.v:645$4001 ($dff).
Mapping usbf_top.$flatten\u1.\u3.$verific$no_bufs1_reg$usbf_pe.v:648$4005 ($dff).
Mapping usbf_top.$flatten\u1.\u3.$verific$not_equal_501$usbf_pe.v:733$4068 ($ne).
Mapping usbf_top.$flatten\u1.\u3.$verific$nse_err_reg$usbf_pe.v:408$3810 ($dff).
Mapping usbf_top.$flatten\u1.\u3.$verific$out_to_small_r_reg$usbf_pe.v:679$4033 ($dff).
Mapping usbf_top.$flatten\u1.\u3.$verific$out_to_small_reg$usbf_pe.v:682$4035 ($dff).
Mapping usbf_top.$flatten\u1.\u3.$verific$pid_IN_r_reg$usbf_pe.v:788$4109 ($dff).
Mapping usbf_top.$flatten\u1.\u3.$verific$pid_OUT_r_reg$usbf_pe.v:785$4107 ($dff).
Mapping usbf_top.$flatten\u1.\u3.$verific$pid_PING_r_reg$usbf_pe.v:791$4111 ($dff).
Mapping usbf_top.$flatten\u1.\u3.$verific$pid_SETUP_r_reg$usbf_pe.v:794$4113 ($dff).
Mapping usbf_top.$flatten\u1.\u3.$verific$pid_seq_err_reg$usbf_pe.v:549$3935 ($dff).
Mapping usbf_top.$flatten\u1.\u3.$verific$reduce_and_31$usbf_pe.v:391$3790 ($reduce_and).
Mapping usbf_top.$flatten\u1.\u3.$verific$reduce_and_36$usbf_pe.v:394$3794 ($reduce_and).
Mapping usbf_top.$flatten\u1.\u3.$verific$reduce_nor_106$usbf_pe.v:481$3827 ($not).
Mapping usbf_top.$flatten\u1.\u3.$verific$reduce_nor_106$usbf_pe.v:481$3828 ($reduce_or).
Mapping usbf_top.$flatten\u1.\u3.$verific$reduce_nor_109$usbf_pe.v:482$3831 ($not).
Mapping usbf_top.$flatten\u1.\u3.$verific$reduce_nor_109$usbf_pe.v:482$3832 ($reduce_or).
Mapping usbf_top.$flatten\u1.\u3.$verific$reduce_nor_111$usbf_pe.v:483$3835 ($not).
Mapping usbf_top.$flatten\u1.\u3.$verific$reduce_nor_111$usbf_pe.v:483$3836 ($reduce_or).
Mapping usbf_top.$flatten\u1.\u3.$verific$reduce_nor_114$usbf_pe.v:484$3839 ($not).
Mapping usbf_top.$flatten\u1.\u3.$verific$reduce_nor_114$usbf_pe.v:484$3840 ($reduce_or).
Mapping usbf_top.$flatten\u1.\u3.$verific$reduce_nor_122$usbf_pe.v:427$3849 ($not).
Mapping usbf_top.$flatten\u1.\u3.$verific$reduce_nor_122$usbf_pe.v:427$3850 ($reduce_or).
Mapping usbf_top.$flatten\u1.\u3.$verific$reduce_nor_137$usbf_pe.v:436$3862 ($not).
Mapping usbf_top.$flatten\u1.\u3.$verific$reduce_nor_137$usbf_pe.v:436$3863 ($reduce_or).
Mapping usbf_top.$flatten\u1.\u3.$verific$reduce_nor_142$usbf_pe.v:466$3868 ($not).
Mapping usbf_top.$flatten\u1.\u3.$verific$reduce_nor_142$usbf_pe.v:466$3869 ($reduce_or).
Mapping usbf_top.$flatten\u1.\u3.$verific$reduce_nor_144$usbf_pe.v:466$3871 ($not).
Mapping usbf_top.$flatten\u1.\u3.$verific$reduce_nor_144$usbf_pe.v:466$3872 ($reduce_or).
Mapping usbf_top.$flatten\u1.\u3.$verific$reduce_nor_147$usbf_pe.v:469$3874 ($not).
Mapping usbf_top.$flatten\u1.\u3.$verific$reduce_nor_147$usbf_pe.v:469$3875 ($reduce_or).
Mapping usbf_top.$flatten\u1.\u3.$verific$reduce_nor_150$usbf_pe.v:469$3877 ($not).
Mapping usbf_top.$flatten\u1.\u3.$verific$reduce_nor_150$usbf_pe.v:469$3878 ($reduce_or).
Mapping usbf_top.$flatten\u1.\u3.$verific$reduce_nor_153$usbf_pe.v:472$3881 ($not).
Mapping usbf_top.$flatten\u1.\u3.$verific$reduce_nor_153$usbf_pe.v:472$3882 ($reduce_or).
Mapping usbf_top.$flatten\u1.\u3.$verific$reduce_nor_156$usbf_pe.v:472$3884 ($not).
Mapping usbf_top.$flatten\u1.\u3.$verific$reduce_nor_156$usbf_pe.v:472$3885 ($reduce_or).
Mapping usbf_top.$flatten\u1.\u3.$verific$reduce_nor_160$usbf_pe.v:475$3887 ($not).
Mapping usbf_top.$flatten\u1.\u3.$verific$reduce_nor_160$usbf_pe.v:475$3888 ($reduce_or).
Mapping usbf_top.$flatten\u1.\u3.$verific$reduce_nor_164$usbf_pe.v:475$3890 ($not).
Mapping usbf_top.$flatten\u1.\u3.$verific$reduce_nor_164$usbf_pe.v:475$3891 ($reduce_or).
Mapping usbf_top.$flatten\u1.\u3.$verific$reduce_nor_165$usbf_pe.v:478$3893 ($not).
Mapping usbf_top.$flatten\u1.\u3.$verific$reduce_nor_165$usbf_pe.v:478$3894 ($reduce_or).
Mapping usbf_top.$flatten\u1.\u3.$verific$reduce_nor_225$usbf_pe.v:511$3907 ($reduce_or).
Mapping usbf_top.$flatten\u1.\u3.$verific$reduce_nor_233$usbf_pe.v:514$3913 ($not).
Mapping usbf_top.$flatten\u1.\u3.$verific$reduce_nor_233$usbf_pe.v:514$3914 ($reduce_or).
Mapping usbf_top.$flatten\u1.\u3.$verific$reduce_nor_238$usbf_pe.v:515$3916 ($not).
Mapping usbf_top.$flatten\u1.\u3.$verific$reduce_nor_238$usbf_pe.v:515$3917 ($reduce_or).
Mapping usbf_top.$flatten\u1.\u3.$verific$rx_ack_to_clr_reg$usbf_pe.v:747$4077 ($dff).
Mapping usbf_top.$flatten\u1.\u3.$verific$rx_ack_to_reg$usbf_pe.v:754$4084 ($dff).
Mapping usbf_top.$flatten\u1.\u3.$verific$select_725$usbf_pe.v:449$4215 ($mux).
Mapping usbf_top.$flatten\u1.\u3.$verific$send_token_reg$usbf_pe.v:411$3812 ($dff).
Mapping usbf_top.$flatten\u1.\u3.$verific$size_next_r_reg$usbf_pe.v:665$4019 ($dff).
Mapping usbf_top.$flatten\u1.\u3.$verific$this_dpid_reg$usbf_pe.v:539$3920 ($dff).
Mapping usbf_top.$flatten\u1.\u3.$verific$to_large_reg$usbf_pe.v:694$4045 ($dff).
Mapping usbf_top.$flatten\u1.\u3.$verific$to_small_reg$usbf_pe.v:691$4040 ($dff).
Mapping usbf_top.$flatten\u1.\u3.$verific$token_pid_sel_reg$usbf_pe.v:414$3814 ($dff).
Mapping usbf_top.$flatten\u1.\u3.$verific$tx_data_to_reg$usbf_pe.v:771$4094 ($dff).
Mapping usbf_top.$flatten\u1.\u3.$verific$uc_bsel_set_reg$usbf_pe.v:723$4064 ($dff).
Mapping usbf_top.$flatten\u2.$verific$i14$usbf_mem_arb.v:167$4267 ($and).
Mapping usbf_top.$flatten\u2.$verific$i16$usbf_mem_arb.v:168$4269 ($and).
Mapping usbf_top.$flatten\u2.$verific$i18$usbf_mem_arb.v:168$4271 ($mux).
Mapping usbf_top.$flatten\u2.$verific$i25$usbf_mem_arb.v:185$4277 ($and).
Mapping usbf_top.$flatten\u2.$verific$i31$usbf_mem_arb.v:193$4280 ($and).
Mapping usbf_top.$flatten\u2.$verific$i32$usbf_mem_arb.v:193$4281 ($not).
Mapping usbf_top.$flatten\u2.$verific$i33$usbf_mem_arb.v:193$4282 ($and).
Mapping usbf_top.$flatten\u2.$verific$i4$usbf_mem_arb.v:151$4260 ($or).
Mapping usbf_top.$flatten\u2.$verific$i5$usbf_mem_arb.v:151$4261 ($not).
Mapping usbf_top.$flatten\u2.$verific$i6$usbf_mem_arb.v:151$4262 ($and).
Mapping usbf_top.$flatten\u2.$verific$mux_12$usbf_mem_arb.v:163$4266 ($mux).
Mapping usbf_top.$flatten\u2.$verific$mux_9$usbf_mem_arb.v:158$4264 ($mux).
Mapping usbf_top.$flatten\u4.$verific$and_627$usbf_rf.v:793$5098 ($and).
Mapping usbf_top.$flatten\u4.$verific$and_630$usbf_rf.v:794$5101 ($and).
Mapping usbf_top.$flatten\u4.$verific$attach_r1_reg$usbf_rf.v:636$5025 ($dff).
Mapping usbf_top.$flatten\u4.$verific$attach_r_reg$usbf_rf.v:633$5023 ($dff).
Mapping usbf_top.$flatten\u4.$verific$crc5_err_r_reg$usbf_rf.v:657$5039 ($dff).
Mapping usbf_top.$flatten\u4.$verific$dout_reg$usbf_rf.v:412$4758 ($dff).
Mapping usbf_top.$flatten\u4.$verific$equal_113$usbf_rf.v:370$4738 ($eq).
Mapping usbf_top.$flatten\u4.$verific$equal_123$usbf_rf.v:384$4746 ($eq).
Mapping usbf_top.$flatten\u4.$verific$equal_156$usbf_rf.v:414$4759 ($eq).
Mapping usbf_top.$flatten\u4.$verific$equal_159$usbf_rf.v:415$4762 ($eq).
Mapping usbf_top.$flatten\u4.$verific$equal_162$usbf_rf.v:416$4765 ($eq).
Mapping usbf_top.$flatten\u4.$verific$equal_165$usbf_rf.v:417$4768 ($eq).
Mapping usbf_top.$flatten\u4.$verific$equal_66$usbf_rf.v:318$4707 ($eq).
Mapping usbf_top.$flatten\u4.$verific$equal_76$usbf_rf.v:332$4714 ($eq).
Mapping usbf_top.$flatten\u4.$verific$i115$usbf_rf.v:370$4739 ($and).
Mapping usbf_top.$flatten\u4.$verific$i125$usbf_rf.v:384$4747 ($and).
Mapping usbf_top.$flatten\u4.$verific$i158$usbf_rf.v:414$4760 ($and).
Mapping usbf_top.$flatten\u4.$verific$i161$usbf_rf.v:415$4763 ($and).
Mapping usbf_top.$flatten\u4.$verific$i164$usbf_rf.v:416$4766 ($and).
Mapping usbf_top.$flatten\u4.$verific$i167$usbf_rf.v:417$4769 ($and).
Mapping usbf_top.$flatten\u4.$verific$i206$usbf_rf.v:431$4807 ($and).
Mapping usbf_top.$flatten\u4.$verific$i209$usbf_rf.v:432$4809 ($and).
Mapping usbf_top.$flatten\u4.$verific$i212$usbf_rf.v:433$4811 ($and).
Mapping usbf_top.$flatten\u4.$verific$i215$usbf_rf.v:434$4813 ($and).
Mapping usbf_top.$flatten\u4.$verific$i255$usbf_rf.v:456$4840 ($or).
Mapping usbf_top.$flatten\u4.$verific$i256$usbf_rf.v:456$4841 ($or).
Mapping usbf_top.$flatten\u4.$verific$i257$usbf_rf.v:456$4842 ($or).
Mapping usbf_top.$auto$alumacc.cc:67:get_gt$10583 ($or).
Mapping usbf_top.$flatten\u4.$verific$i404$usbf_rf.v:591$4985 ($mux).
Mapping usbf_top.$flatten\u4.$verific$i405$usbf_rf.v:591$4986 ($mux).
Mapping usbf_top.$flatten\u4.$verific$i406$usbf_rf.v:591$4987 ($mux).
Mapping usbf_top.$auto$alumacc.cc:67:get_gt$10572 ($or).
Mapping usbf_top.$flatten\u4.$verific$i438$usbf_rf.v:624$5018 ($mux).
Mapping usbf_top.$flatten\u4.$verific$i439$usbf_rf.v:624$5019 ($mux).
Mapping usbf_top.$flatten\u4.$verific$i440$usbf_rf.v:624$5020 ($mux).
Mapping usbf_top.$flatten\u4.$verific$i469$usbf_rf.v:659$5040 ($not).
Mapping usbf_top.$flatten\u4.$verific$i470$usbf_rf.v:659$5041 ($and).
Mapping usbf_top.$flatten\u4.$verific$i472$usbf_rf.v:660$5043 ($not).
Mapping usbf_top.$flatten\u4.$verific$i473$usbf_rf.v:660$5044 ($and).
Mapping usbf_top.$flatten\u4.$verific$i475$usbf_rf.v:661$5046 ($not).
Mapping usbf_top.$flatten\u4.$verific$i476$usbf_rf.v:661$5047 ($and).
Mapping usbf_top.$flatten\u4.$verific$i478$usbf_rf.v:662$5049 ($not).
Mapping usbf_top.$flatten\u4.$verific$i479$usbf_rf.v:662$5050 ($and).
Mapping usbf_top.$flatten\u4.$verific$i596$usbf_rf.v:783$5066 ($or).
Mapping usbf_top.$flatten\u4.$verific$i597$usbf_rf.v:783$5067 ($or).
Mapping usbf_top.$flatten\u4.$verific$i598$usbf_rf.v:783$5068 ($or).
Mapping usbf_top.$flatten\u4.$verific$i612$usbf_rf.v:788$5082 ($or).
Mapping usbf_top.$flatten\u4.$verific$i613$usbf_rf.v:788$5083 ($or).
Mapping usbf_top.$flatten\u4.$verific$i614$usbf_rf.v:788$5084 ($or).
Mapping usbf_top.$flatten\u4.$verific$i635$usbf_rf.v:797$5104 ($or).
Mapping usbf_top.$flatten\u4.$verific$i639$usbf_rf.v:800$5107 ($or).
Mapping usbf_top.$flatten\u4.$verific$i68$usbf_rf.v:318$4708 ($and).
Mapping usbf_top.$flatten\u4.$verific$i78$usbf_rf.v:332$4715 ($and).
Mapping usbf_top.$auto$alumacc.cc:67:get_gt$10636 ($or).
Mapping usbf_top.$flatten\u4.$verific$i82$usbf_rf.v:334$4718 ($mux).
Mapping usbf_top.$flatten\u4.$verific$int_src_re_reg$usbf_rf.v:318$4710 ($dff).
Mapping usbf_top.$flatten\u4.$verific$inta_reg$usbf_rf.v:797$5106 ($dff).
Mapping usbf_top.$flatten\u4.$verific$intb_reg$usbf_rf.v:800$5109 ($dff).
Mapping usbf_top.$flatten\u4.$verific$match_r1_reg$usbf_rf.v:459$4856 ($dff).
Mapping usbf_top.$flatten\u4.$verific$mux_154$usbf_rf.v:412$4757 ($bmux).
Mapping usbf_top.$flatten\u4.$verific$mux_300$usbf_rf.v:492$4885 ($mux).
Mapping usbf_top.$flatten\u4.$verific$mux_301$usbf_rf.v:492$4886 ($mux).
Mapping usbf_top.$flatten\u4.$verific$mux_302$usbf_rf.v:492$4887 ($mux).
Mapping usbf_top.$flatten\u4.$verific$mux_303$usbf_rf.v:492$4888 ($mux).
Mapping usbf_top.$auto$alumacc.cc:67:get_gt$10605 ($or).
Mapping usbf_top.$flatten\u4.$verific$mux_335$usbf_rf.v:525$4919 ($mux).
Mapping usbf_top.$flatten\u4.$verific$mux_336$usbf_rf.v:525$4920 ($mux).
Mapping usbf_top.$flatten\u4.$verific$mux_337$usbf_rf.v:525$4921 ($mux).
Mapping usbf_top.$auto$alumacc.cc:67:get_gt$10594 ($or).
Mapping usbf_top.$flatten\u4.$verific$mux_369$usbf_rf.v:558$4952 ($mux).
Mapping usbf_top.$flatten\u4.$verific$mux_370$usbf_rf.v:558$4953 ($mux).
Mapping usbf_top.$flatten\u4.$verific$mux_371$usbf_rf.v:558$4954 ($mux).
Mapping usbf_top.$flatten\u4.$verific$mux_64$usbf_rf.v:314$4706 ($bmux).
Mapping usbf_top.$flatten\u4.$verific$nse_err_r_reg$usbf_rf.v:651$5035 ($dff).
Mapping usbf_top.$flatten\u4.$verific$or_645$usbf_rf.v:765$5064 ($or).
Mapping usbf_top.$flatten\u4.$verific$pid_cs_err_r_reg$usbf_rf.v:654$5037 ($dff).
Mapping usbf_top.$flatten\u4.$verific$reduce_or_628$usbf_rf.v:793$5099 ($reduce_or).
Mapping usbf_top.$flatten\u4.$verific$reduce_or_631$usbf_rf.v:794$5102 ($reduce_or).
Mapping usbf_top.$flatten\u4.$verific$rx_err_r_reg$usbf_rf.v:648$5033 ($dff).
Mapping usbf_top.$flatten\u4.$verific$suspend_r1_reg$usbf_rf.v:642$5029 ($dff).
Mapping usbf_top.$flatten\u4.$verific$suspend_r_reg$usbf_rf.v:639$5027 ($dff).
Mapping usbf_top.$flatten\u4.$verific$usb_reset_r_reg$usbf_rf.v:645$5031 ($dff).
Mapping usbf_top.$flatten\u4.$verific$utmi_vend_ctrl_reg$usbf_rf.v:345$4727 ($dff).
Mapping usbf_top.$flatten\u4.$verific$utmi_vend_stat_r_reg$usbf_rf.v:322$4712 ($dff).
Mapping usbf_top.$flatten\u4.$verific$utmi_vend_wr_reg$usbf_rf.v:337$4722 ($dff).
Mapping usbf_top.$flatten\u4.\u0.$verific$buf0_orig_m3_reg$usbf_ep_rf.v:449$9025 ($dff).
Mapping usbf_top.$flatten\u4.\u0.$verific$dma_ack_clr1_reg$usbf_ep_rf.v:505$9061 ($dff).
Mapping usbf_top.$flatten\u4.\u0.$verific$dma_in_buf_sz1_reg$usbf_ep_rf.v:428$9007 ($dff).
Mapping usbf_top.$flatten\u4.\u0.$verific$dma_out_buf_avail_reg$usbf_ep_rf.v:436$9013 ($dff).
Mapping usbf_top.$flatten\u4.\u0.$verific$dma_out_left_reg$usbf_ep_rf.v:433$9010 ($dff).
Mapping usbf_top.$flatten\u4.\u0.$verific$dma_req_in_hold2_reg$usbf_ep_rf.v:454$9028 ($dff).
Mapping usbf_top.$flatten\u4.\u0.$verific$dma_req_in_hold_reg$usbf_ep_rf.v:457$9032 ($dff).
Mapping usbf_top.$flatten\u4.\u0.$verific$dma_req_out_hold_reg$usbf_ep_rf.v:411$8992 ($dff).
Mapping usbf_top.$flatten\u4.\u0.$verific$ep_match_r_reg$usbf_ep_rf.v:316$8915 ($dff).
Mapping usbf_top.$flatten\u4.\u0.$verific$equal_16$usbf_ep_rf.v:224$8854 ($logic_not).
Mapping usbf_top.$flatten\u4.\u0.$verific$equal_19$usbf_ep_rf.v:225$8857 ($eq).
Mapping usbf_top.$flatten\u4.\u0.$verific$equal_196$usbf_ep_rf.v:413$8993 ($logic_not).
Mapping usbf_top.$flatten\u4.\u0.$verific$equal_22$usbf_ep_rf.v:226$8860 ($eq).
Mapping usbf_top.$flatten\u4.\u0.$verific$equal_25$usbf_ep_rf.v:227$8863 ($eq).
Mapping usbf_top.$flatten\u4.\u0.$verific$equal_7$usbf_ep_rf.v:208$8848 ($eq).
Mapping usbf_top.$flatten\u4.\u0.$verific$equal_9$usbf_ep_rf.v:209$8850 ($eq).
Mapping usbf_top.$flatten\u4.\u0.$verific$equal_92$usbf_ep_rf.v:313$8912 ($eq).
Mapping usbf_top.$flatten\u4.\u0.$verific$i100$usbf_ep_rf.v:319$8916 ($and).
Mapping usbf_top.$flatten\u4.\u0.$verific$i128$usbf_ep_rf.v:350$8933 ($and).
Mapping usbf_top.$flatten\u4.\u0.$verific$i142$usbf_ep_rf.v:368$8943 ($and).
Mapping usbf_top.$flatten\u4.\u0.$verific$i143$usbf_ep_rf.v:369$8944 ($and).
Mapping usbf_top.$flatten\u4.\u0.$verific$i144$usbf_ep_rf.v:369$8945 ($or).
Mapping usbf_top.$flatten\u4.\u0.$verific$i145$usbf_ep_rf.v:370$8946 ($and).
Mapping usbf_top.$flatten\u4.\u0.$verific$i146$usbf_ep_rf.v:370$8947 ($or).
Mapping usbf_top.$flatten\u4.\u0.$verific$i147$usbf_ep_rf.v:371$8948 ($and).
Mapping usbf_top.$flatten\u4.\u0.$verific$i148$usbf_ep_rf.v:371$8949 ($or).
Mapping usbf_top.$flatten\u4.\u0.$verific$i149$usbf_ep_rf.v:372$8950 ($and).
Mapping usbf_top.$flatten\u4.\u0.$verific$i150$usbf_ep_rf.v:372$8951 ($or).
Mapping usbf_top.$flatten\u4.\u0.$verific$i151$usbf_ep_rf.v:373$8952 ($and).
Mapping usbf_top.$flatten\u4.\u0.$verific$i152$usbf_ep_rf.v:373$8953 ($or).
Mapping usbf_top.$flatten\u4.\u0.$verific$i153$usbf_ep_rf.v:374$8954 ($and).
Mapping usbf_top.$flatten\u4.\u0.$verific$i154$usbf_ep_rf.v:374$8955 ($or).
Mapping usbf_top.$flatten\u4.\u0.$verific$i158$usbf_ep_rf.v:377$8958 ($and).
Mapping usbf_top.$flatten\u4.\u0.$verific$i159$usbf_ep_rf.v:378$8959 ($and).
Mapping usbf_top.$flatten\u4.\u0.$verific$i160$usbf_ep_rf.v:378$8960 ($or).
Mapping usbf_top.$flatten\u4.\u0.$verific$i161$usbf_ep_rf.v:379$8961 ($and).
Mapping usbf_top.$flatten\u4.\u0.$verific$i162$usbf_ep_rf.v:379$8962 ($or).
Mapping usbf_top.$flatten\u4.\u0.$verific$i163$usbf_ep_rf.v:380$8963 ($and).
Mapping usbf_top.$flatten\u4.\u0.$verific$i164$usbf_ep_rf.v:380$8964 ($or).
Mapping usbf_top.$flatten\u4.\u0.$verific$i165$usbf_ep_rf.v:381$8965 ($and).
Mapping usbf_top.$flatten\u4.\u0.$verific$i166$usbf_ep_rf.v:381$8966 ($or).
Mapping usbf_top.$flatten\u4.\u0.$verific$i167$usbf_ep_rf.v:382$8967 ($and).
Mapping usbf_top.$flatten\u4.\u0.$verific$i168$usbf_ep_rf.v:382$8968 ($or).
Mapping usbf_top.$flatten\u4.\u0.$verific$i169$usbf_ep_rf.v:383$8969 ($and).
Mapping usbf_top.$flatten\u4.\u0.$verific$i170$usbf_ep_rf.v:383$8970 ($or).
Mapping usbf_top.$flatten\u4.\u0.$verific$i178$usbf_ep_rf.v:396$8976 ($or).
Mapping usbf_top.$flatten\u4.\u0.$verific$i179$usbf_ep_rf.v:396$8977 ($or).
Mapping usbf_top.$flatten\u4.\u0.$verific$i18$usbf_ep_rf.v:224$8855 ($and).
Mapping usbf_top.$flatten\u4.\u0.$verific$i180$usbf_ep_rf.v:396$8978 ($and).
Mapping usbf_top.$flatten\u4.\u0.$verific$i188$usbf_ep_rf.v:402$8985 ($or).
Mapping usbf_top.$flatten\u4.\u0.$verific$i189$usbf_ep_rf.v:402$8986 ($and).
Mapping usbf_top.$flatten\u4.\u0.$verific$i194$usbf_ep_rf.v:411$8990 ($and).
Mapping usbf_top.$flatten\u4.\u0.$verific$i21$usbf_ep_rf.v:225$8858 ($and).
Mapping usbf_top.$flatten\u4.\u0.$verific$i216$usbf_ep_rf.v:428$9005 ($and).
Mapping usbf_top.$flatten\u4.\u0.$verific$i227$usbf_ep_rf.v:439$9014 ($or).
Mapping usbf_top.$flatten\u4.\u0.$verific$i228$usbf_ep_rf.v:439$9015 ($and).
Mapping usbf_top.$flatten\u4.\u0.$verific$i230$usbf_ep_rf.v:442$9017 ($not).
Mapping usbf_top.$flatten\u4.\u0.$verific$i231$usbf_ep_rf.v:442$9018 ($and).
Mapping usbf_top.$flatten\u4.\u0.$verific$i234$usbf_ep_rf.v:445$9021 ($and).
Mapping usbf_top.$flatten\u4.\u0.$verific$i24$usbf_ep_rf.v:226$8861 ($and).
Mapping usbf_top.$flatten\u4.\u0.$verific$i246$usbf_ep_rf.v:457$9030 ($and).
Mapping usbf_top.$flatten\u4.\u0.$verific$i249$usbf_ep_rf.v:459$9033 ($and).
Mapping usbf_top.$flatten\u4.\u0.$verific$i250$usbf_ep_rf.v:459$9034 ($mux).
Mapping usbf_top.$flatten\u4.\u0.$verific$i256$usbf_ep_rf.v:471$9037 ($not).
Mapping usbf_top.$flatten\u4.\u0.$verific$i257$usbf_ep_rf.v:471$9038 ($and).
Mapping usbf_top.$flatten\u4.\u0.$verific$i259$usbf_ep_rf.v:473$9039 ($not).
Mapping usbf_top.$flatten\u4.\u0.$verific$i260$usbf_ep_rf.v:473$9040 ($and).
Mapping usbf_top.$auto$alumacc.cc:67:get_gt$10514 ($or).
Mapping usbf_top.$flatten\u4.\u0.$verific$i263$usbf_ep_rf.v:473$9042 ($mux).
Mapping usbf_top.$flatten\u4.\u0.$verific$i268$usbf_ep_rf.v:476$9045 ($and).
Mapping usbf_top.$flatten\u4.\u0.$verific$i269$usbf_ep_rf.v:476$9046 ($not).
Mapping usbf_top.$flatten\u4.\u0.$verific$i27$usbf_ep_rf.v:227$8864 ($and).
Mapping usbf_top.$flatten\u4.\u0.$verific$i270$usbf_ep_rf.v:476$9047 ($and).
Mapping usbf_top.$flatten\u4.\u0.$verific$i271$usbf_ep_rf.v:476$9048 ($not).
Mapping usbf_top.$flatten\u4.\u0.$verific$i272$usbf_ep_rf.v:476$9049 ($and).
Mapping usbf_top.$auto$alumacc.cc:67:get_gt$10548 ($or).
Mapping usbf_top.$flatten\u4.\u0.$verific$i281$usbf_ep_rf.v:487$9053 ($mux).
Mapping usbf_top.$auto$alumacc.cc:67:get_gt$10561 ($or).
Mapping usbf_top.$flatten\u4.\u0.$verific$i290$usbf_ep_rf.v:502$9057 ($mux).
Mapping usbf_top.$flatten\u4.\u0.$verific$i37$usbf_ep_rf.v:249$8872 ($and).
Mapping usbf_top.$flatten\u4.\u0.$verific$i66$usbf_ep_rf.v:280$8894 ($and).
Mapping usbf_top.$flatten\u4.\u0.$verific$i68$usbf_ep_rf.v:282$8896 ($and).
Mapping usbf_top.$flatten\u4.\u0.$verific$i79$usbf_ep_rf.v:294$8903 ($or).
Mapping usbf_top.$flatten\u4.\u0.$verific$i80$usbf_ep_rf.v:294$8904 ($and).
Mapping usbf_top.$flatten\u4.\u0.$verific$int_re_reg$usbf_ep_rf.v:319$8918 ($dff).
Mapping usbf_top.$flatten\u4.\u0.$verific$inta_reg$usbf_ep_rf.v:374$8957 ($dff).
Mapping usbf_top.$flatten\u4.\u0.$verific$intb_reg$usbf_ep_rf.v:383$8972 ($dff).
Mapping usbf_top.$flatten\u4.\u0.$verific$mux_15$usbf_ep_rf.v:222$8853 ($bmux).
Mapping usbf_top.$auto$alumacc.cc:67:get_gt$10446 ($or).
Mapping usbf_top.$flatten\u4.\u0.$verific$mux_183$usbf_ep_rf.v:397$8982 ($mux).
Mapping usbf_top.$auto$alumacc.cc:67:get_gt$10485 ($or).
Mapping usbf_top.$flatten\u4.\u0.$verific$mux_209$usbf_ep_rf.v:422$9000 ($mux).
Mapping usbf_top.$auto$alumacc.cc:520:replace_alu$10539 ($reduce_or).
Mapping usbf_top.$flatten\u4.\u0.$verific$mux_42$usbf_ep_rf.v:250$8876 ($mux).
Mapping usbf_top.$auto$alumacc.cc:67:get_gt$10406 ($or).
Mapping usbf_top.$flatten\u4.\u0.$verific$mux_70$usbf_ep_rf.v:282$8899 ($mux).
Mapping usbf_top.$flatten\u4.\u0.$verific$mux_71$usbf_ep_rf.v:282$8900 ($mux).
Mapping usbf_top.$auto$alumacc.cc:67:get_gt$10417 ($or).
Mapping usbf_top.$flatten\u4.\u0.$verific$mux_82$usbf_ep_rf.v:294$8906 ($mux).
Mapping usbf_top.$flatten\u4.\u0.$verific$not_equal_214$usbf_ep_rf.v:428$9004 ($reduce_bool).
Mapping usbf_top.$flatten\u4.\u0.$verific$r1_reg$usbf_ep_rf.v:476$9051 ($dff).
Mapping usbf_top.$flatten\u4.\u0.$verific$r4_reg$usbf_ep_rf.v:508$9063 ($dff).
Mapping usbf_top.$flatten\u4.\u0.$verific$r5_reg$usbf_ep_rf.v:511$9064 ($dff).
Mapping usbf_top.$flatten\u4.\u0.$verific$reduce_or_192$usbf_ep_rf.v:411$8989 ($reduce_or).
Mapping usbf_top.$flatten\u4.\u0.$verific$reduce_or_244$usbf_ep_rf.v:457$9029 ($reduce_or).
Mapping usbf_top.$flatten\u4.\u0.$verific$set_r_reg$usbf_ep_rf.v:402$8988 ($dff).
Mapping usbf_top.$flatten\u4.\u1.$verific$buf0_orig_m3_reg$usbf_ep_rf.v:449$9025 ($dff).
Mapping usbf_top.$flatten\u4.\u1.$verific$dma_ack_clr1_reg$usbf_ep_rf.v:505$9061 ($dff).
Mapping usbf_top.$flatten\u4.\u1.$verific$dma_in_buf_sz1_reg$usbf_ep_rf.v:428$9007 ($dff).
Mapping usbf_top.$flatten\u4.\u1.$verific$dma_out_buf_avail_reg$usbf_ep_rf.v:436$9013 ($dff).
Mapping usbf_top.$flatten\u4.\u1.$verific$dma_out_left_reg$usbf_ep_rf.v:433$9010 ($dff).
Mapping usbf_top.$flatten\u4.\u1.$verific$dma_req_in_hold2_reg$usbf_ep_rf.v:454$9028 ($dff).
Mapping usbf_top.$flatten\u4.\u1.$verific$dma_req_in_hold_reg$usbf_ep_rf.v:457$9032 ($dff).
Mapping usbf_top.$flatten\u4.\u1.$verific$dma_req_out_hold_reg$usbf_ep_rf.v:411$8992 ($dff).
Mapping usbf_top.$flatten\u4.\u1.$verific$ep_match_r_reg$usbf_ep_rf.v:316$8915 ($dff).
Mapping usbf_top.$flatten\u4.\u1.$verific$equal_196$usbf_ep_rf.v:413$8993 ($logic_not).
Mapping usbf_top.$flatten\u4.\u1.$verific$equal_7$usbf_ep_rf.v:208$8848 ($eq).
Mapping usbf_top.$flatten\u4.\u1.$verific$equal_9$usbf_ep_rf.v:209$8850 ($eq).
Mapping usbf_top.$flatten\u4.\u1.$verific$equal_92$usbf_ep_rf.v:313$8912 ($eq).
Mapping usbf_top.$flatten\u4.\u1.$verific$i100$usbf_ep_rf.v:319$8916 ($and).
Mapping usbf_top.$flatten\u4.\u1.$verific$i128$usbf_ep_rf.v:350$8933 ($and).
Mapping usbf_top.$flatten\u4.\u1.$verific$i142$usbf_ep_rf.v:368$8943 ($and).
Mapping usbf_top.$flatten\u4.\u1.$verific$i143$usbf_ep_rf.v:369$8944 ($and).
Mapping usbf_top.$flatten\u4.\u1.$verific$i144$usbf_ep_rf.v:369$8945 ($or).
Mapping usbf_top.$flatten\u4.\u1.$verific$i145$usbf_ep_rf.v:370$8946 ($and).
Mapping usbf_top.$flatten\u4.\u1.$verific$i146$usbf_ep_rf.v:370$8947 ($or).
Mapping usbf_top.$flatten\u4.\u1.$verific$i147$usbf_ep_rf.v:371$8948 ($and).
Mapping usbf_top.$flatten\u4.\u1.$verific$i148$usbf_ep_rf.v:371$8949 ($or).
Mapping usbf_top.$flatten\u4.\u1.$verific$i149$usbf_ep_rf.v:372$8950 ($and).
Mapping usbf_top.$flatten\u4.\u1.$verific$i150$usbf_ep_rf.v:372$8951 ($or).
Mapping usbf_top.$flatten\u4.\u1.$verific$i151$usbf_ep_rf.v:373$8952 ($and).
Mapping usbf_top.$flatten\u4.\u1.$verific$i152$usbf_ep_rf.v:373$8953 ($or).
Mapping usbf_top.$flatten\u4.\u1.$verific$i153$usbf_ep_rf.v:374$8954 ($and).
Mapping usbf_top.$flatten\u4.\u1.$verific$i154$usbf_ep_rf.v:374$8955 ($or).
Mapping usbf_top.$flatten\u4.\u1.$verific$i158$usbf_ep_rf.v:377$8958 ($and).
Mapping usbf_top.$flatten\u4.\u1.$verific$i159$usbf_ep_rf.v:378$8959 ($and).
Mapping usbf_top.$flatten\u4.\u1.$verific$i160$usbf_ep_rf.v:378$8960 ($or).
Mapping usbf_top.$flatten\u4.\u1.$verific$i161$usbf_ep_rf.v:379$8961 ($and).
Mapping usbf_top.$flatten\u4.\u1.$verific$i162$usbf_ep_rf.v:379$8962 ($or).
Mapping usbf_top.$flatten\u4.\u1.$verific$i163$usbf_ep_rf.v:380$8963 ($and).
Mapping usbf_top.$flatten\u4.\u1.$verific$i164$usbf_ep_rf.v:380$8964 ($or).
Mapping usbf_top.$flatten\u4.\u1.$verific$i165$usbf_ep_rf.v:381$8965 ($and).
Mapping usbf_top.$flatten\u4.\u1.$verific$i166$usbf_ep_rf.v:381$8966 ($or).
Mapping usbf_top.$flatten\u4.\u1.$verific$i167$usbf_ep_rf.v:382$8967 ($and).
Mapping usbf_top.$flatten\u4.\u1.$verific$i168$usbf_ep_rf.v:382$8968 ($or).
Mapping usbf_top.$flatten\u4.\u1.$verific$i169$usbf_ep_rf.v:383$8969 ($and).
Mapping usbf_top.$flatten\u4.\u1.$verific$i170$usbf_ep_rf.v:383$8970 ($or).
Mapping usbf_top.$flatten\u4.\u1.$verific$i178$usbf_ep_rf.v:396$8976 ($or).
Mapping usbf_top.$flatten\u4.\u1.$verific$i179$usbf_ep_rf.v:396$8977 ($or).
Mapping usbf_top.$flatten\u4.\u1.$verific$i18$usbf_ep_rf.v:224$8855 ($and).
Mapping usbf_top.$flatten\u4.\u1.$verific$i180$usbf_ep_rf.v:396$8978 ($and).
Mapping usbf_top.$flatten\u4.\u1.$verific$i189$usbf_ep_rf.v:402$8986 ($and).
Mapping usbf_top.$flatten\u4.\u1.$verific$i194$usbf_ep_rf.v:411$8990 ($and).
Mapping usbf_top.$flatten\u4.\u1.$verific$i21$usbf_ep_rf.v:225$8858 ($and).
Mapping usbf_top.$flatten\u4.\u1.$verific$i216$usbf_ep_rf.v:428$9005 ($and).
Mapping usbf_top.$flatten\u4.\u1.$verific$i227$usbf_ep_rf.v:439$9014 ($or).
Mapping usbf_top.$flatten\u4.\u1.$verific$i228$usbf_ep_rf.v:439$9015 ($and).
Mapping usbf_top.$flatten\u4.\u1.$verific$i230$usbf_ep_rf.v:442$9017 ($not).
Mapping usbf_top.$flatten\u4.\u1.$verific$i231$usbf_ep_rf.v:442$9018 ($and).
Mapping usbf_top.$flatten\u4.\u1.$verific$i234$usbf_ep_rf.v:445$9021 ($and).
Mapping usbf_top.$flatten\u4.\u1.$verific$i24$usbf_ep_rf.v:226$8861 ($and).
Mapping usbf_top.$flatten\u4.\u1.$verific$i246$usbf_ep_rf.v:457$9030 ($and).
Mapping usbf_top.$flatten\u4.\u1.$verific$i249$usbf_ep_rf.v:459$9033 ($and).
Mapping usbf_top.$flatten\u4.\u1.$verific$i250$usbf_ep_rf.v:459$9034 ($mux).
Mapping usbf_top.$flatten\u4.\u1.$verific$i256$usbf_ep_rf.v:471$9037 ($not).
Mapping usbf_top.$flatten\u4.\u1.$verific$i257$usbf_ep_rf.v:471$9038 ($and).
Mapping usbf_top.$flatten\u4.\u1.$verific$i259$usbf_ep_rf.v:473$9039 ($not).
Mapping usbf_top.$flatten\u4.\u1.$verific$i260$usbf_ep_rf.v:473$9040 ($and).
Mapping usbf_top.$auto$alumacc.cc:520:replace_alu$10496 ($reduce_or).
Mapping usbf_top.$flatten\u4.\u1.$verific$i263$usbf_ep_rf.v:473$9042 ($mux).
Mapping usbf_top.$flatten\u4.\u1.$verific$i268$usbf_ep_rf.v:476$9045 ($and).
Mapping usbf_top.$flatten\u4.\u1.$verific$i269$usbf_ep_rf.v:476$9046 ($not).
Mapping usbf_top.$flatten\u4.\u1.$verific$i27$usbf_ep_rf.v:227$8864 ($and).
Mapping usbf_top.$flatten\u4.\u1.$verific$i270$usbf_ep_rf.v:476$9047 ($and).
Mapping usbf_top.$flatten\u4.\u1.$verific$i271$usbf_ep_rf.v:476$9048 ($not).
Mapping usbf_top.$flatten\u4.\u1.$verific$i272$usbf_ep_rf.v:476$9049 ($and).
Mapping usbf_top.$auto$alumacc.cc:520:replace_alu$10505 ($reduce_or).
Mapping usbf_top.$flatten\u4.\u1.$verific$i281$usbf_ep_rf.v:487$9053 ($mux).
Mapping usbf_top.$auto$alumacc.cc:520:replace_alu$10530 ($reduce_or).
Mapping usbf_top.$flatten\u4.\u1.$verific$i290$usbf_ep_rf.v:502$9057 ($mux).
Mapping usbf_top.$flatten\u4.\u1.$verific$i37$usbf_ep_rf.v:249$8872 ($and).
Mapping usbf_top.$flatten\u4.\u1.$verific$i66$usbf_ep_rf.v:280$8894 ($and).
Mapping usbf_top.$flatten\u4.\u1.$verific$i68$usbf_ep_rf.v:282$8896 ($and).
Mapping usbf_top.$flatten\u4.\u1.$verific$i80$usbf_ep_rf.v:294$8904 ($and).
Mapping usbf_top.$flatten\u4.\u1.$verific$int_re_reg$usbf_ep_rf.v:319$8918 ($dff).
Mapping usbf_top.$flatten\u4.\u1.$verific$inta_reg$usbf_ep_rf.v:374$8957 ($dff).
Mapping usbf_top.$flatten\u4.\u1.$verific$intb_reg$usbf_ep_rf.v:383$8972 ($dff).
Mapping usbf_top.$flatten\u4.\u1.$verific$mux_15$usbf_ep_rf.v:222$8853 ($bmux).
Mapping usbf_top.$auto$alumacc.cc:520:replace_alu$10462 ($reduce_or).
Mapping usbf_top.$flatten\u4.\u1.$verific$mux_183$usbf_ep_rf.v:397$8982 ($mux).
Mapping usbf_top.$auto$alumacc.cc:520:replace_alu$10471 ($reduce_or).
Mapping usbf_top.$flatten\u4.\u1.$verific$mux_209$usbf_ep_rf.v:422$9000 ($mux).
Mapping usbf_top.$flatten\u4.\u1.$verific$mux_42$usbf_ep_rf.v:250$8876 ($mux).
Mapping usbf_top.$auto$alumacc.cc:520:replace_alu$10428 ($reduce_or).
Mapping usbf_top.$flatten\u4.\u1.$verific$mux_70$usbf_ep_rf.v:282$8899 ($mux).
Mapping usbf_top.$flatten\u4.\u1.$verific$mux_71$usbf_ep_rf.v:282$8900 ($mux).
Mapping usbf_top.$auto$alumacc.cc:520:replace_alu$10437 ($reduce_or).
Mapping usbf_top.$flatten\u4.\u1.$verific$mux_82$usbf_ep_rf.v:294$8906 ($mux).
Mapping usbf_top.$flatten\u4.\u1.$verific$not_equal_214$usbf_ep_rf.v:428$9004 ($reduce_bool).
Mapping usbf_top.$flatten\u4.\u1.$verific$r1_reg$usbf_ep_rf.v:476$9051 ($dff).
Mapping usbf_top.$flatten\u4.\u1.$verific$r4_reg$usbf_ep_rf.v:508$9063 ($dff).
Mapping usbf_top.$flatten\u4.\u1.$verific$r5_reg$usbf_ep_rf.v:511$9064 ($dff).
Mapping usbf_top.$flatten\u4.\u1.$verific$reduce_or_192$usbf_ep_rf.v:411$8989 ($reduce_or).
Mapping usbf_top.$flatten\u4.\u1.$verific$reduce_or_244$usbf_ep_rf.v:457$9029 ($reduce_or).
Mapping usbf_top.$flatten\u4.\u1.$verific$set_r_reg$usbf_ep_rf.v:402$8988 ($dff).
Mapping usbf_top.$flatten\u4.\u2.$verific$buf0_orig_m3_reg$usbf_ep_rf.v:449$9025 ($dff).
Mapping usbf_top.$flatten\u4.\u2.$verific$dma_ack_clr1_reg$usbf_ep_rf.v:505$9061 ($dff).
Mapping usbf_top.$flatten\u4.\u2.$verific$dma_in_buf_sz1_reg$usbf_ep_rf.v:428$9007 ($dff).
Mapping usbf_top.$flatten\u4.\u2.$verific$dma_out_buf_avail_reg$usbf_ep_rf.v:436$9013 ($dff).
Mapping usbf_top.$flatten\u4.\u2.$verific$dma_out_left_reg$usbf_ep_rf.v:433$9010 ($dff).
Mapping usbf_top.$flatten\u4.\u2.$verific$dma_req_in_hold2_reg$usbf_ep_rf.v:454$9028 ($dff).
Mapping usbf_top.$flatten\u4.\u2.$verific$dma_req_in_hold_reg$usbf_ep_rf.v:457$9032 ($dff).
Mapping usbf_top.$flatten\u4.\u2.$verific$dma_req_out_hold_reg$usbf_ep_rf.v:411$8992 ($dff).
Mapping usbf_top.$flatten\u4.\u2.$verific$ep_match_r_reg$usbf_ep_rf.v:316$8915 ($dff).
Mapping usbf_top.$flatten\u4.\u2.$verific$equal_196$usbf_ep_rf.v:413$8993 ($logic_not).
Mapping usbf_top.$flatten\u4.\u2.$verific$equal_7$usbf_ep_rf.v:208$8848 ($eq).
Mapping usbf_top.$flatten\u4.\u2.$verific$equal_9$usbf_ep_rf.v:209$8850 ($eq).
Mapping usbf_top.$flatten\u4.\u2.$verific$equal_92$usbf_ep_rf.v:313$8912 ($eq).
Mapping usbf_top.$flatten\u4.\u2.$verific$i100$usbf_ep_rf.v:319$8916 ($and).
Mapping usbf_top.$flatten\u4.\u2.$verific$i128$usbf_ep_rf.v:350$8933 ($and).
Mapping usbf_top.$flatten\u4.\u2.$verific$i142$usbf_ep_rf.v:368$8943 ($and).
Mapping usbf_top.$flatten\u4.\u2.$verific$i143$usbf_ep_rf.v:369$8944 ($and).
Mapping usbf_top.$flatten\u4.\u2.$verific$i144$usbf_ep_rf.v:369$8945 ($or).
Mapping usbf_top.$flatten\u4.\u2.$verific$i145$usbf_ep_rf.v:370$8946 ($and).
Mapping usbf_top.$flatten\u4.\u2.$verific$i146$usbf_ep_rf.v:370$8947 ($or).
Mapping usbf_top.$flatten\u4.\u2.$verific$i147$usbf_ep_rf.v:371$8948 ($and).
Mapping usbf_top.$flatten\u4.\u2.$verific$i148$usbf_ep_rf.v:371$8949 ($or).
Mapping usbf_top.$flatten\u4.\u2.$verific$i149$usbf_ep_rf.v:372$8950 ($and).
Mapping usbf_top.$flatten\u4.\u2.$verific$i150$usbf_ep_rf.v:372$8951 ($or).
Mapping usbf_top.$flatten\u4.\u2.$verific$i151$usbf_ep_rf.v:373$8952 ($and).
Mapping usbf_top.$flatten\u4.\u2.$verific$i152$usbf_ep_rf.v:373$8953 ($or).
Mapping usbf_top.$flatten\u4.\u2.$verific$i153$usbf_ep_rf.v:374$8954 ($and).
Mapping usbf_top.$flatten\u4.\u2.$verific$i154$usbf_ep_rf.v:374$8955 ($or).
Mapping usbf_top.$flatten\u4.\u2.$verific$i158$usbf_ep_rf.v:377$8958 ($and).
Mapping usbf_top.$flatten\u4.\u2.$verific$i159$usbf_ep_rf.v:378$8959 ($and).
Mapping usbf_top.$flatten\u4.\u2.$verific$i160$usbf_ep_rf.v:378$8960 ($or).
Mapping usbf_top.$flatten\u4.\u2.$verific$i161$usbf_ep_rf.v:379$8961 ($and).
Mapping usbf_top.$flatten\u4.\u2.$verific$i162$usbf_ep_rf.v:379$8962 ($or).
Mapping usbf_top.$flatten\u4.\u2.$verific$i163$usbf_ep_rf.v:380$8963 ($and).
Mapping usbf_top.$flatten\u4.\u2.$verific$i164$usbf_ep_rf.v:380$8964 ($or).
Mapping usbf_top.$flatten\u4.\u2.$verific$i165$usbf_ep_rf.v:381$8965 ($and).
Mapping usbf_top.$flatten\u4.\u2.$verific$i166$usbf_ep_rf.v:381$8966 ($or).
Mapping usbf_top.$flatten\u4.\u2.$verific$i167$usbf_ep_rf.v:382$8967 ($and).
Mapping usbf_top.$flatten\u4.\u2.$verific$i168$usbf_ep_rf.v:382$8968 ($or).
Mapping usbf_top.$flatten\u4.\u2.$verific$i169$usbf_ep_rf.v:383$8969 ($and).
Mapping usbf_top.$flatten\u4.\u2.$verific$i170$usbf_ep_rf.v:383$8970 ($or).
Mapping usbf_top.$flatten\u4.\u2.$verific$i178$usbf_ep_rf.v:396$8976 ($or).
Mapping usbf_top.$flatten\u4.\u2.$verific$i179$usbf_ep_rf.v:396$8977 ($or).
Mapping usbf_top.$flatten\u4.\u2.$verific$i18$usbf_ep_rf.v:224$8855 ($and).
Mapping usbf_top.$flatten\u4.\u2.$verific$i180$usbf_ep_rf.v:396$8978 ($and).
Mapping usbf_top.$flatten\u4.\u2.$verific$i189$usbf_ep_rf.v:402$8986 ($and).
Mapping usbf_top.$flatten\u4.\u2.$verific$i194$usbf_ep_rf.v:411$8990 ($and).
Mapping usbf_top.$flatten\u4.\u2.$verific$i21$usbf_ep_rf.v:225$8858 ($and).
Mapping usbf_top.$flatten\u4.\u2.$verific$i216$usbf_ep_rf.v:428$9005 ($and).
Mapping usbf_top.$flatten\u4.\u2.$verific$i227$usbf_ep_rf.v:439$9014 ($or).
Mapping usbf_top.$flatten\u4.\u2.$verific$i228$usbf_ep_rf.v:439$9015 ($and).
Mapping usbf_top.$flatten\u4.\u2.$verific$i230$usbf_ep_rf.v:442$9017 ($not).
Mapping usbf_top.$flatten\u4.\u2.$verific$i231$usbf_ep_rf.v:442$9018 ($and).
Mapping usbf_top.$flatten\u4.\u2.$verific$i234$usbf_ep_rf.v:445$9021 ($and).
Mapping usbf_top.$flatten\u4.\u2.$verific$i24$usbf_ep_rf.v:226$8861 ($and).
Mapping usbf_top.$flatten\u4.\u2.$verific$i246$usbf_ep_rf.v:457$9030 ($and).
Mapping usbf_top.$flatten\u4.\u2.$verific$i249$usbf_ep_rf.v:459$9033 ($and).
Mapping usbf_top.$flatten\u4.\u2.$verific$i250$usbf_ep_rf.v:459$9034 ($mux).
Mapping usbf_top.$flatten\u4.\u2.$verific$i256$usbf_ep_rf.v:471$9037 ($not).
Mapping usbf_top.$flatten\u4.\u2.$verific$i257$usbf_ep_rf.v:471$9038 ($and).
Mapping usbf_top.$flatten\u4.\u2.$verific$i259$usbf_ep_rf.v:473$9039 ($not).
Mapping usbf_top.$flatten\u4.\u2.$verific$i260$usbf_ep_rf.v:473$9040 ($and).
Mapping usbf_top.$flatten\u4.\u2.$verific$i263$usbf_ep_rf.v:473$9042 ($mux).
Mapping usbf_top.$flatten\u4.\u2.$verific$i268$usbf_ep_rf.v:476$9045 ($and).
Mapping usbf_top.$flatten\u4.\u2.$verific$i269$usbf_ep_rf.v:476$9046 ($not).
Mapping usbf_top.$flatten\u4.\u2.$verific$i27$usbf_ep_rf.v:227$8864 ($and).
Mapping usbf_top.$flatten\u4.\u2.$verific$i270$usbf_ep_rf.v:476$9047 ($and).
Mapping usbf_top.$flatten\u4.\u2.$verific$i271$usbf_ep_rf.v:476$9048 ($not).
Mapping usbf_top.$flatten\u4.\u2.$verific$i272$usbf_ep_rf.v:476$9049 ($and).
Mapping usbf_top.$flatten\u4.\u2.$verific$i281$usbf_ep_rf.v:487$9053 ($mux).
Mapping usbf_top.$flatten\u4.\u2.$verific$i290$usbf_ep_rf.v:502$9057 ($mux).
Mapping usbf_top.$flatten\u4.\u2.$verific$i37$usbf_ep_rf.v:249$8872 ($and).
Mapping usbf_top.$flatten\u4.\u2.$verific$i66$usbf_ep_rf.v:280$8894 ($and).
Mapping usbf_top.$flatten\u4.\u2.$verific$i68$usbf_ep_rf.v:282$8896 ($and).
Mapping usbf_top.$flatten\u4.\u2.$verific$i80$usbf_ep_rf.v:294$8904 ($and).
Mapping usbf_top.$flatten\u4.\u2.$verific$int_re_reg$usbf_ep_rf.v:319$8918 ($dff).
Mapping usbf_top.$flatten\u4.\u2.$verific$inta_reg$usbf_ep_rf.v:374$8957 ($dff).
Mapping usbf_top.$flatten\u4.\u2.$verific$intb_reg$usbf_ep_rf.v:383$8972 ($dff).
Mapping usbf_top.$flatten\u4.\u2.$verific$mux_15$usbf_ep_rf.v:222$8853 ($bmux).
Mapping usbf_top.$flatten\u4.\u2.$verific$mux_183$usbf_ep_rf.v:397$8982 ($mux).
Mapping usbf_top.$flatten\u4.\u2.$verific$mux_209$usbf_ep_rf.v:422$9000 ($mux).
Mapping usbf_top.$flatten\u4.\u2.$verific$mux_42$usbf_ep_rf.v:250$8876 ($mux).
Mapping usbf_top.$flatten\u4.\u2.$verific$mux_70$usbf_ep_rf.v:282$8899 ($mux).
Mapping usbf_top.$flatten\u4.\u2.$verific$mux_71$usbf_ep_rf.v:282$8900 ($mux).
Mapping usbf_top.$flatten\u4.\u2.$verific$mux_82$usbf_ep_rf.v:294$8906 ($mux).
Mapping usbf_top.$flatten\u4.\u2.$verific$not_equal_214$usbf_ep_rf.v:428$9004 ($reduce_bool).
Mapping usbf_top.$flatten\u4.\u2.$verific$r1_reg$usbf_ep_rf.v:476$9051 ($dff).
Mapping usbf_top.$flatten\u4.\u2.$verific$r4_reg$usbf_ep_rf.v:508$9063 ($dff).
Mapping usbf_top.$flatten\u4.\u2.$verific$r5_reg$usbf_ep_rf.v:511$9064 ($dff).
Mapping usbf_top.$flatten\u4.\u2.$verific$reduce_or_192$usbf_ep_rf.v:411$8989 ($reduce_or).
Mapping usbf_top.$flatten\u4.\u2.$verific$reduce_or_244$usbf_ep_rf.v:457$9029 ($reduce_or).
Mapping usbf_top.$flatten\u4.\u2.$verific$set_r_reg$usbf_ep_rf.v:402$8988 ($dff).
Mapping usbf_top.$flatten\u4.\u3.$verific$buf0_orig_m3_reg$usbf_ep_rf.v:449$9025 ($dff).
Mapping usbf_top.$flatten\u4.\u3.$verific$dma_ack_clr1_reg$usbf_ep_rf.v:505$9061 ($dff).
Mapping usbf_top.$flatten\u4.\u3.$verific$dma_in_buf_sz1_reg$usbf_ep_rf.v:428$9007 ($dff).
Mapping usbf_top.$flatten\u4.\u3.$verific$dma_out_buf_avail_reg$usbf_ep_rf.v:436$9013 ($dff).
Mapping usbf_top.$flatten\u4.\u3.$verific$dma_out_left_reg$usbf_ep_rf.v:433$9010 ($dff).
Mapping usbf_top.$flatten\u4.\u3.$verific$dma_req_in_hold2_reg$usbf_ep_rf.v:454$9028 ($dff).
Mapping usbf_top.$flatten\u4.\u3.$verific$dma_req_in_hold_reg$usbf_ep_rf.v:457$9032 ($dff).
Mapping usbf_top.$flatten\u4.\u3.$verific$dma_req_out_hold_reg$usbf_ep_rf.v:411$8992 ($dff).
Mapping usbf_top.$flatten\u4.\u3.$verific$ep_match_r_reg$usbf_ep_rf.v:316$8915 ($dff).
Mapping usbf_top.$flatten\u4.\u3.$verific$equal_196$usbf_ep_rf.v:413$8993 ($logic_not).
Mapping usbf_top.$flatten\u4.\u3.$verific$equal_7$usbf_ep_rf.v:208$8848 ($eq).
Mapping usbf_top.$flatten\u4.\u3.$verific$equal_9$usbf_ep_rf.v:209$8850 ($eq).
Mapping usbf_top.$flatten\u4.\u3.$verific$equal_92$usbf_ep_rf.v:313$8912 ($eq).
Mapping usbf_top.$flatten\u4.\u3.$verific$i100$usbf_ep_rf.v:319$8916 ($and).
Mapping usbf_top.$flatten\u4.\u3.$verific$i128$usbf_ep_rf.v:350$8933 ($and).
Mapping usbf_top.$flatten\u4.\u3.$verific$i142$usbf_ep_rf.v:368$8943 ($and).
Mapping usbf_top.$flatten\u4.\u3.$verific$i143$usbf_ep_rf.v:369$8944 ($and).
Mapping usbf_top.$flatten\u4.\u3.$verific$i144$usbf_ep_rf.v:369$8945 ($or).
Mapping usbf_top.$flatten\u4.\u3.$verific$i145$usbf_ep_rf.v:370$8946 ($and).
Mapping usbf_top.$flatten\u4.\u3.$verific$i146$usbf_ep_rf.v:370$8947 ($or).
Mapping usbf_top.$flatten\u4.\u3.$verific$i147$usbf_ep_rf.v:371$8948 ($and).
Mapping usbf_top.$flatten\u4.\u3.$verific$i148$usbf_ep_rf.v:371$8949 ($or).
Mapping usbf_top.$flatten\u4.\u3.$verific$i149$usbf_ep_rf.v:372$8950 ($and).
Mapping usbf_top.$flatten\u4.\u3.$verific$i150$usbf_ep_rf.v:372$8951 ($or).
Mapping usbf_top.$flatten\u4.\u3.$verific$i151$usbf_ep_rf.v:373$8952 ($and).
Mapping usbf_top.$flatten\u4.\u3.$verific$i152$usbf_ep_rf.v:373$8953 ($or).
Mapping usbf_top.$flatten\u4.\u3.$verific$i153$usbf_ep_rf.v:374$8954 ($and).
Mapping usbf_top.$flatten\u4.\u3.$verific$i154$usbf_ep_rf.v:374$8955 ($or).
Mapping usbf_top.$flatten\u4.\u3.$verific$i158$usbf_ep_rf.v:377$8958 ($and).
Mapping usbf_top.$flatten\u4.\u3.$verific$i159$usbf_ep_rf.v:378$8959 ($and).
Mapping usbf_top.$flatten\u4.\u3.$verific$i160$usbf_ep_rf.v:378$8960 ($or).
Mapping usbf_top.$flatten\u4.\u3.$verific$i161$usbf_ep_rf.v:379$8961 ($and).
Mapping usbf_top.$flatten\u4.\u3.$verific$i162$usbf_ep_rf.v:379$8962 ($or).
Mapping usbf_top.$flatten\u4.\u3.$verific$i163$usbf_ep_rf.v:380$8963 ($and).
Mapping usbf_top.$flatten\u4.\u3.$verific$i164$usbf_ep_rf.v:380$8964 ($or).
Mapping usbf_top.$flatten\u4.\u3.$verific$i165$usbf_ep_rf.v:381$8965 ($and).
Mapping usbf_top.$flatten\u4.\u3.$verific$i166$usbf_ep_rf.v:381$8966 ($or).
Mapping usbf_top.$flatten\u4.\u3.$verific$i167$usbf_ep_rf.v:382$8967 ($and).
Mapping usbf_top.$flatten\u4.\u3.$verific$i168$usbf_ep_rf.v:382$8968 ($or).
Mapping usbf_top.$flatten\u4.\u3.$verific$i169$usbf_ep_rf.v:383$8969 ($and).
Mapping usbf_top.$flatten\u4.\u3.$verific$i170$usbf_ep_rf.v:383$8970 ($or).
Mapping usbf_top.$flatten\u4.\u3.$verific$i178$usbf_ep_rf.v:396$8976 ($or).
Mapping usbf_top.$flatten\u4.\u3.$verific$i179$usbf_ep_rf.v:396$8977 ($or).
Mapping usbf_top.$flatten\u4.\u3.$verific$i18$usbf_ep_rf.v:224$8855 ($and).
Mapping usbf_top.$flatten\u4.\u3.$verific$i180$usbf_ep_rf.v:396$8978 ($and).
Mapping usbf_top.$flatten\u4.\u3.$verific$i189$usbf_ep_rf.v:402$8986 ($and).
Mapping usbf_top.$flatten\u4.\u3.$verific$i194$usbf_ep_rf.v:411$8990 ($and).
Mapping usbf_top.$flatten\u4.\u3.$verific$i21$usbf_ep_rf.v:225$8858 ($and).
Mapping usbf_top.$flatten\u4.\u3.$verific$i216$usbf_ep_rf.v:428$9005 ($and).
Mapping usbf_top.$flatten\u4.\u3.$verific$i227$usbf_ep_rf.v:439$9014 ($or).
Mapping usbf_top.$flatten\u4.\u3.$verific$i228$usbf_ep_rf.v:439$9015 ($and).
Mapping usbf_top.$flatten\u4.\u3.$verific$i230$usbf_ep_rf.v:442$9017 ($not).
Mapping usbf_top.$flatten\u4.\u3.$verific$i231$usbf_ep_rf.v:442$9018 ($and).
Mapping usbf_top.$flatten\u4.\u3.$verific$i234$usbf_ep_rf.v:445$9021 ($and).
Mapping usbf_top.$flatten\u4.\u3.$verific$i24$usbf_ep_rf.v:226$8861 ($and).
Mapping usbf_top.$flatten\u4.\u3.$verific$i246$usbf_ep_rf.v:457$9030 ($and).
Mapping usbf_top.$flatten\u4.\u3.$verific$i249$usbf_ep_rf.v:459$9033 ($and).
Mapping usbf_top.$flatten\u4.\u3.$verific$i250$usbf_ep_rf.v:459$9034 ($mux).
Mapping usbf_top.$flatten\u4.\u3.$verific$i256$usbf_ep_rf.v:471$9037 ($not).
Mapping usbf_top.$flatten\u4.\u3.$verific$i257$usbf_ep_rf.v:471$9038 ($and).
Mapping usbf_top.$flatten\u4.\u3.$verific$i259$usbf_ep_rf.v:473$9039 ($not).
Mapping usbf_top.$flatten\u4.\u3.$verific$i260$usbf_ep_rf.v:473$9040 ($and).
Mapping usbf_top.$flatten\u4.\u3.$verific$i263$usbf_ep_rf.v:473$9042 ($mux).
Mapping usbf_top.$flatten\u4.\u3.$verific$i268$usbf_ep_rf.v:476$9045 ($and).
Mapping usbf_top.$flatten\u4.\u3.$verific$i269$usbf_ep_rf.v:476$9046 ($not).
Mapping usbf_top.$flatten\u4.\u3.$verific$i27$usbf_ep_rf.v:227$8864 ($and).
Mapping usbf_top.$flatten\u4.\u3.$verific$i270$usbf_ep_rf.v:476$9047 ($and).
Mapping usbf_top.$flatten\u4.\u3.$verific$i271$usbf_ep_rf.v:476$9048 ($not).
Mapping usbf_top.$flatten\u4.\u3.$verific$i272$usbf_ep_rf.v:476$9049 ($and).
Mapping usbf_top.$flatten\u4.\u3.$verific$i281$usbf_ep_rf.v:487$9053 ($mux).
Mapping usbf_top.$flatten\u4.\u3.$verific$i290$usbf_ep_rf.v:502$9057 ($mux).
Mapping usbf_top.$flatten\u4.\u3.$verific$i37$usbf_ep_rf.v:249$8872 ($and).
Mapping usbf_top.$flatten\u4.\u3.$verific$i66$usbf_ep_rf.v:280$8894 ($and).
Mapping usbf_top.$flatten\u4.\u3.$verific$i68$usbf_ep_rf.v:282$8896 ($and).
Mapping usbf_top.$flatten\u4.\u3.$verific$i80$usbf_ep_rf.v:294$8904 ($and).
Mapping usbf_top.$flatten\u4.\u3.$verific$int_re_reg$usbf_ep_rf.v:319$8918 ($dff).
Mapping usbf_top.$flatten\u4.\u3.$verific$inta_reg$usbf_ep_rf.v:374$8957 ($dff).
Mapping usbf_top.$flatten\u4.\u3.$verific$intb_reg$usbf_ep_rf.v:383$8972 ($dff).
Mapping usbf_top.$flatten\u4.\u3.$verific$mux_15$usbf_ep_rf.v:222$8853 ($bmux).
Mapping usbf_top.$flatten\u4.\u3.$verific$mux_183$usbf_ep_rf.v:397$8982 ($mux).
Mapping usbf_top.$flatten\u4.\u3.$verific$mux_209$usbf_ep_rf.v:422$9000 ($mux).
Mapping usbf_top.$flatten\u4.\u3.$verific$mux_42$usbf_ep_rf.v:250$8876 ($mux).
Mapping usbf_top.$flatten\u4.\u3.$verific$mux_70$usbf_ep_rf.v:282$8899 ($mux).
Mapping usbf_top.$flatten\u4.\u3.$verific$mux_71$usbf_ep_rf.v:282$8900 ($mux).
Mapping usbf_top.$flatten\u4.\u3.$verific$mux_82$usbf_ep_rf.v:294$8906 ($mux).
Mapping usbf_top.$flatten\u4.\u3.$verific$not_equal_214$usbf_ep_rf.v:428$9004 ($reduce_bool).
Mapping usbf_top.$flatten\u4.\u3.$verific$r1_reg$usbf_ep_rf.v:476$9051 ($dff).
Mapping usbf_top.$flatten\u4.\u3.$verific$r4_reg$usbf_ep_rf.v:508$9063 ($dff).
Mapping usbf_top.$flatten\u4.\u3.$verific$r5_reg$usbf_ep_rf.v:511$9064 ($dff).
Mapping usbf_top.$flatten\u4.\u3.$verific$reduce_or_192$usbf_ep_rf.v:411$8989 ($reduce_or).
Mapping usbf_top.$flatten\u4.\u3.$verific$reduce_or_244$usbf_ep_rf.v:457$9029 ($reduce_or).
Mapping usbf_top.$flatten\u4.\u3.$verific$set_r_reg$usbf_ep_rf.v:402$8988 ($dff).
Mapping usbf_top.$flatten\u5.$verific$i14$usbf_wb.v:170$9119 ($and).
Mapping usbf_top.$flatten\u5.$verific$i21$usbf_wb.v:177$9124 ($not).
Mapping usbf_top.$flatten\u5.$verific$i22$usbf_wb.v:177$9125 ($and).
Mapping usbf_top.$flatten\u5.$verific$i23$usbf_wb.v:177$9126 ($not).
Mapping usbf_top.$flatten\u5.$verific$i24$usbf_wb.v:177$9127 ($and).
Mapping usbf_top.$flatten\u5.$verific$i41$usbf_wb.v:212$9139 ($and).
Mapping usbf_top.$flatten\u5.$verific$i42$usbf_wb.v:212$9140 ($and).
Mapping usbf_top.$flatten\u5.$verific$i47$usbf_wb.v:218$9142 ($not).
Mapping usbf_top.$flatten\u5.$verific$i48$usbf_wb.v:218$9143 ($and).
Mapping usbf_top.$flatten\u5.$verific$i49$usbf_wb.v:222$9144 ($mux).
Mapping usbf_top.$flatten\u5.$verific$i51$usbf_wb.v:223$9146 ($not).
Mapping usbf_top.$flatten\u5.$verific$i52$usbf_wb.v:223$9147 ($and).
Mapping usbf_top.$flatten\u5.$verific$i53$usbf_wb.v:223$9148 ($and).
Mapping usbf_top.$flatten\u5.$verific$i59$usbf_wb.v:228$9150 ($and).
Mapping usbf_top.$flatten\u5.$verific$i82$usbf_wb.v:278$9165 ($mux).
Mapping usbf_top.$flatten\u5.$verific$i83$usbf_wb.v:278$9166 ($mux).
Mapping usbf_top.$flatten\u5.$verific$mux_10$usbf_wb.v:166$9117 ($mux).
Mapping usbf_top.$flatten\u5.$verific$wb_ack_o_reg$usbf_wb.v:177$9129 ($dff).
Mapping usbf_top.$flatten\u5.$verific$wb_ack_s1a_reg$usbf_wb.v:180$9131 ($dff).
Mapping usbf_top.$flatten\u5.$verific$wb_ack_s2_reg$usbf_wb.v:183$9133 ($dff).
Mapping usbf_top.$flatten\u5.$verific$wb_data_o_reg$usbf_wb.v:166$9118 ($dff).
Mapping usbf_top.$flatten\u5.$verific$wb_req_s1_reg$usbf_wb.v:170$9121 ($dff).
Mapping usbf_top.$verific$VStatus_r_reg$usbf_top.v:269$24 ($dff).
Mapping usbf_top.$verific$suspend_clr_wr_reg$usbf_top.v:281$26 ($dff).

24. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.
<suppressed ~2940 debug messages>

25. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
<suppressed ~1791 debug messages>
Removed a total of 597 cells.

26. Executing OPT_DFF pass (perform DFF optimizations).

27. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..
Removed 70 unused cells and 919 unused wires.
<suppressed ~76 debug messages>

28. Executing OPT pass (performing simple optimizations).

28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.
<suppressed ~2 debug messages>

28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

28.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbf_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

28.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbf_top.
Performed a total of 0 changes.

28.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

28.6. Executing OPT_DFF pass (perform DFF optimizations).

28.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

28.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.

28.9. Rerunning OPT passes. (Maybe there is more to do..)

28.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbf_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

28.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbf_top.
Performed a total of 0 changes.

28.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

28.13. Executing OPT_DFF pass (perform DFF optimizations).

28.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..

28.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.

28.16. Finished OPT passes. (There is nothing left to do.)

29. Executing OPT pass (performing simple optimizations).

29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.
<suppressed ~212 debug messages>

29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

29.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:262:slice$17803 ($_DFF_P_) from module usbf_top (D = $auto$simplemap.cc:309:simplemap_bmux$18779 [31], Q = \u4.dout [31], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$17802 ($_DFF_P_) from module usbf_top (D = $auto$simplemap.cc:309:simplemap_bmux$18779 [30], Q = \u4.dout [30], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$17801 ($_DFF_P_) from module usbf_top (D = $auto$simplemap.cc:309:simplemap_bmux$18779 [29], Q = \u4.dout [29], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$17800 ($_DFF_P_) from module usbf_top (D = $auto$simplemap.cc:309:simplemap_bmux$18779 [28], Q = \u4.dout [28], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$17799 ($_DFF_P_) from module usbf_top (D = $auto$simplemap.cc:309:simplemap_bmux$18779 [27], Q = \u4.dout [27], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$17798 ($_DFF_P_) from module usbf_top (D = $auto$simplemap.cc:309:simplemap_bmux$18779 [26], Q = \u4.dout [26], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$17797 ($_DFF_P_) from module usbf_top (D = $auto$simplemap.cc:309:simplemap_bmux$18779 [25], Q = \u4.dout [25], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$17796 ($_DFF_P_) from module usbf_top (D = $auto$simplemap.cc:309:simplemap_bmux$18779 [24], Q = \u4.dout [24], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$17795 ($_DFF_P_) from module usbf_top (D = $auto$simplemap.cc:309:simplemap_bmux$18779 [23], Q = \u4.dout [23], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$17794 ($_DFF_P_) from module usbf_top (D = $auto$simplemap.cc:309:simplemap_bmux$18779 [22], Q = \u4.dout [22], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$17793 ($_DFF_P_) from module usbf_top (D = $auto$simplemap.cc:309:simplemap_bmux$18779 [21], Q = \u4.dout [21], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$17792 ($_DFF_P_) from module usbf_top (D = $auto$simplemap.cc:309:simplemap_bmux$18779 [20], Q = \u4.dout [20], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$17791 ($_DFF_P_) from module usbf_top (D = $auto$simplemap.cc:309:simplemap_bmux$18779 [19], Q = \u4.dout [19], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$17790 ($_DFF_P_) from module usbf_top (D = $auto$simplemap.cc:309:simplemap_bmux$18779 [18], Q = \u4.dout [18], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$17789 ($_DFF_P_) from module usbf_top (D = $auto$simplemap.cc:309:simplemap_bmux$18779 [17], Q = \u4.dout [17], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$17788 ($_DFF_P_) from module usbf_top (D = $auto$simplemap.cc:309:simplemap_bmux$18779 [16], Q = \u4.dout [16], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$17787 ($_DFF_P_) from module usbf_top (D = $auto$simplemap.cc:309:simplemap_bmux$18522 [47], Q = \u4.dout [15], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$17786 ($_DFF_P_) from module usbf_top (D = $auto$simplemap.cc:309:simplemap_bmux$18522 [46], Q = \u4.dout [14], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$17785 ($_DFF_P_) from module usbf_top (D = $auto$simplemap.cc:309:simplemap_bmux$18522 [45], Q = \u4.dout [13], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$17784 ($_DFF_P_) from module usbf_top (D = $auto$simplemap.cc:309:simplemap_bmux$18522 [44], Q = \u4.dout [12], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$17783 ($_DFF_P_) from module usbf_top (D = $auto$simplemap.cc:309:simplemap_bmux$18779 [11], Q = \u4.dout [11], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$17782 ($_DFF_P_) from module usbf_top (D = $auto$simplemap.cc:309:simplemap_bmux$18779 [10], Q = \u4.dout [10], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$17781 ($_DFF_P_) from module usbf_top (D = $auto$simplemap.cc:309:simplemap_bmux$18779 [9], Q = \u4.dout [9], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$17780 ($_DFF_P_) from module usbf_top (D = $auto$simplemap.cc:309:simplemap_bmux$18779 [8], Q = \u4.dout [8], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$17779 ($_DFF_P_) from module usbf_top (D = $auto$simplemap.cc:309:simplemap_bmux$18779 [7], Q = \u4.dout [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$17778 ($_DFF_P_) from module usbf_top (D = $auto$simplemap.cc:309:simplemap_bmux$18779 [6], Q = \u4.dout [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$17777 ($_DFF_P_) from module usbf_top (D = $auto$simplemap.cc:309:simplemap_bmux$18779 [5], Q = \u4.dout [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$17776 ($_DFF_P_) from module usbf_top (D = $auto$simplemap.cc:309:simplemap_bmux$18779 [4], Q = \u4.dout [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$17775 ($_DFF_P_) from module usbf_top (D = $auto$simplemap.cc:309:simplemap_bmux$18779 [3], Q = \u4.dout [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$17774 ($_DFF_P_) from module usbf_top (D = $auto$simplemap.cc:309:simplemap_bmux$18779 [2], Q = \u4.dout [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$17773 ($_DFF_P_) from module usbf_top (D = $auto$simplemap.cc:309:simplemap_bmux$18779 [1], Q = \u4.dout [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$17772 ($_DFF_P_) from module usbf_top (D = $auto$simplemap.cc:309:simplemap_bmux$18779 [0], Q = \u4.dout [0], rval = 1'0).

29.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..
Removed 68 unused cells and 37 unused wires.
<suppressed ~69 debug messages>

29.5. Rerunning OPT passes. (Removed registers in this run.)

29.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.

29.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
<suppressed ~114 debug messages>
Removed a total of 38 cells.

29.8. Executing OPT_DFF pass (perform DFF optimizations).

29.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..
Removed 0 unused cells and 38 unused wires.
<suppressed ~1 debug messages>

29.10. Finished fast OPT passes.

30. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

31. Executing OPT pass (performing simple optimizations).

31.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.

31.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

31.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbf_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

31.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbf_top.
Performed a total of 0 changes.

31.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

31.6. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$18088 in front of them:
        $auto$simplemap.cc:312:simplemap_bmux$20297
        $auto$simplemap.cc:312:simplemap_bmux$19867

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$18120 in front of them:
        $auto$simplemap.cc:312:simplemap_bmux$21141
        $auto$simplemap.cc:312:simplemap_bmux$20723

31.7. Executing OPT_DFF pass (perform DFF optimizations).

31.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..

31.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.
<suppressed ~6 debug messages>

31.10. Rerunning OPT passes. (Maybe there is more to do..)

31.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbf_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

31.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbf_top.
Performed a total of 0 changes.

31.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

31.14. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$18569 in front of them:
        $auto$simplemap.cc:312:simplemap_bmux$21141
        $auto$simplemap.cc:312:simplemap_bmux$20297

31.15. Executing OPT_DFF pass (perform DFF optimizations).

31.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

31.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.
<suppressed ~1 debug messages>

31.18. Rerunning OPT passes. (Maybe there is more to do..)

31.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbf_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

31.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbf_top.
Performed a total of 0 changes.

31.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

31.22. Executing OPT_SHARE pass.

31.23. Executing OPT_DFF pass (perform DFF optimizations).

31.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..

31.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.

31.26. Finished OPT passes. (There is nothing left to do.)

32. Executing TECHMAP pass (map to technology primitives).

32.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

32.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using template $paramod$c3cd1564c35d873179656addd6052d7ea8b6d991\_90_alu for cells of type $alu.
Using template $paramod$32a7b7b86c07519b7537abc18e96f0331f97914d\_90_alu for cells of type $alu.
Using template $paramod$b9513f2555ba02118b069422fea717af39120cf7\_90_alu for cells of type $alu.
Using template $paramod$150d098cb9cca1819459bc5073194c8c53d2862d\_90_alu for cells of type $alu.
Using template $paramod$3ef7d3dd227da7627a99c5e5a6a4deb817573e39\_90_alu for cells of type $alu.
Using template $paramod$dfca81329cbbac01700318224209a5f2318c7128\_90_alu for cells of type $alu.
Using template $paramod$3b7577489eb4433b1d5620cab7f3794743dee5ea\_90_alu for cells of type $alu.
Using template $paramod$2f5fb04daf2da94d981bf9455fa4454c6ec8b705\_90_alu for cells of type $alu.
Using template $paramod$bd964c14a1a0bc7ccb7c2d6ad481cc2be21f5ec0\_90_alu for cells of type $alu.
Using template $paramod$1ed7ec530b1ba361931392f2f8504f82ccdfecaa\_90_alu for cells of type $alu.
Using template $paramod$a950948e19702336540a1f557d0a91306bdb9188\_90_alu for cells of type $alu.
Using template $paramod$dffbee7ee942d66441f7a53b64a65f15e3631443\_90_alu for cells of type $alu.
Using template $paramod$7ec5e66ab88c9f51d035070dfe0a06ec346d1216\_90_alu for cells of type $alu.
Using template $paramod$175e67c02b86e96b1288b9dc100122520d7240d8\_90_alu for cells of type $alu.
Using template $paramod$75d4465b5362f47f8faf1498769b32af049430ad\_90_alu for cells of type $alu.
Using template $paramod$fc69e1e055122f161e82f14586c9accf99d83cb8\_90_alu for cells of type $alu.
Using template $paramod$672a140277c71df8314410f22acc08d55222c3c7\_90_alu for cells of type $alu.
Using template $paramod$8f780356cb6cdb52f6a744190131b65634639c4e\_90_alu for cells of type $alu.
Using template $paramod$ee3d784672cdb1cb32d9a801a3af776716f16b74\_90_alu for cells of type $alu.
Using template $paramod$b2cd65b42e0277574bcf6ce63cb040566ad68684\_90_alu for cells of type $alu.
Using template $paramod$6831557730818fb92b11a295f9eb33ff8fa62af1\_90_alu for cells of type $alu.
Using template $paramod$ef65f5ca875905bb4cb2e7b079483d1c2cdf9c89\_90_alu for cells of type $alu.
Using template $paramod$ec32b97001540459632a2df9accd677d3703ea0f\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001100 for cells of type $lcu.
Using extmapper simplemap for cells of type $and.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000101 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001110 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001111 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010001 for cells of type $lcu.
Using extmapper simplemap for cells of type $or.
No more expansions possible.
<suppressed ~5086 debug messages>

33. Executing OPT pass (performing simple optimizations).

33.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.
<suppressed ~2385 debug messages>

33.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
<suppressed ~1599 debug messages>
Removed a total of 533 cells.

33.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbf_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

33.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbf_top.
Performed a total of 0 changes.

33.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

33.6. Executing OPT_DFF pass (perform DFF optimizations).

33.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..
Removed 918 unused cells and 2942 unused wires.
<suppressed ~919 debug messages>

33.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.

33.9. Rerunning OPT passes. (Maybe there is more to do..)

33.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbf_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

33.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbf_top.
Performed a total of 0 changes.

33.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

33.13. Executing OPT_DFF pass (perform DFF optimizations).

33.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..

33.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.

33.16. Finished OPT passes. (There is nothing left to do.)

34. Executing ABC pass (technology mapping using ABC).

34.1. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Extracted 7585 gates and 9267 wires to a netlist network with 1680 inputs and 1279 outputs.

34.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/aram/Workspace/yosys_verific_rs/scripts/synth/abc/abc_base6.a21.scr 
ABC: netlist  : i/o =   1680/   1279  and =   12655  lev =   44 (9.60)  mem = 0.23 MB
ABC: Mapping (K=6)  :  lut =   2269  edge =    9374  lev =   15 (4.08)  mem = 0.11 MB
ABC: netlist  : i/o =   1680/   1279  and =   12438  lev =   44 (10.02)  mem = 0.23 MB
ABC: Mapping (K=6)  :  lut =   2218  edge =    9308  lev =   16 (4.02)  mem = 0.11 MB
ABC: netlist  : i/o =   1680/   1279  and =   12372  lev =   42 (9.97)  mem = 0.22 MB
ABC: Mapping (K=6)  :  lut =   2209  edge =    9285  lev =   17 (4.04)  mem = 0.11 MB
ABC: netlist  : i/o =   1680/   1279  and =   12699  lev =   43 (9.37)  mem = 0.23 MB
ABC: Mapping (K=6)  :  lut =   2204  edge =    9267  lev =   16 (4.01)  mem = 0.11 MB
ABC: netlist  : i/o =   1680/   1279  and =   12234  lev =   42 (10.16)  mem = 0.22 MB
ABC: Mapping (K=6)  :  lut =   2208  edge =    9205  lev =   16 (4.09)  mem = 0.11 MB
ABC: netlist  : i/o =   1680/   1279  and =   12199  lev =   43 (10.17)  mem = 0.28 MB
ABC: Mapping (K=6)  :  lut =   2141  edge =    9197  lev =   15 (3.92)  mem = 0.11 MB
ABC: netlist  : i/o =   1680/   1279  and =   12234  lev =   42 (10.28)  mem = 0.28 MB
ABC: Mapping (K=6)  :  lut =   2142  edge =    9172  lev =   14 (3.91)  mem = 0.11 MB
ABC: netlist  : i/o =   1680/   1279  and =   12271  lev =   43 (9.88)  mem = 0.28 MB
ABC: Mapping (K=6)  :  lut =   2141  edge =    9168  lev =   15 (3.76)  mem = 0.11 MB
ABC: netlist  : i/o =   1680/   1279  and =   11531  lev =   40 (9.59)  mem = 0.27 MB
ABC: Mapping (K=6)  :  lut =   2138  edge =    9181  lev =   15 (3.75)  mem = 0.11 MB
ABC: netlist  : i/o =   1680/   1279  and =   12444  lev =   43 (9.62)  mem = 0.28 MB
ABC: Mapping (K=6)  :  lut =   2124  edge =    9135  lev =   15 (3.93)  mem = 0.11 MB
ABC: netlist  : i/o =   1680/   1279  and =   12188  lev =   43 (10.29)  mem = 0.28 MB
ABC: Mapping (K=6)  :  lut =   2132  edge =    9132  lev =   14 (3.95)  mem = 0.11 MB
ABC: netlist  : i/o =   1680/   1279  and =   12282  lev =   43 (10.41)  mem = 0.28 MB
ABC: Mapping (K=6)  :  lut =   2127  edge =    9150  lev =   14 (3.90)  mem = 0.11 MB
ABC: netlist  : i/o =   1680/   1279  and =   12302  lev =   42 (10.42)  mem = 0.28 MB
ABC: Mapping (K=6)  :  lut =   2125  edge =    9145  lev =   14 (3.90)  mem = 0.11 MB
ABC: netlist  : i/o =   1680/   1279  and =   12444  lev =   43 (9.62)  mem = 0.23 MB
ABC: Mapping (K=6)  :  lut =   2124  edge =    9135  lev =   15 (3.93)  mem = 0.11 MB
ABC: netlist  : i/o =   1680/   1279  and =   12444  lev =   43 (9.62)  mem = 0.28 MB
ABC: Mapping (K=6)  :  lut =   2121  edge =    9140  lev =   15 (3.93)  mem = 0.11 MB
ABC: netlist  : i/o =   1680/   1279  and =   12379  lev =   43 (10.33)  mem = 0.22 MB
ABC: Mapping (K=6)  :  lut =   2121  edge =    9140  lev =   15 (3.93)  mem = 0.11 MB
ABC: + write_blif <abc-temp-dir>/output.blif 

34.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     2143
ABC RESULTS:        internal signals:     6308
ABC RESULTS:           input signals:     1680
ABC RESULTS:          output signals:     1279
Removing temp directory.

35. Executing OPT pass (performing simple optimizations).

35.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.

35.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

35.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbf_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

35.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbf_top.
Performed a total of 0 changes.

35.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

35.6. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$17683 ($_DFF_P_) from module usbf_top.

35.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..
Removed 0 unused cells and 5310 unused wires.
<suppressed ~152 debug messages>

35.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.

35.9. Rerunning OPT passes. (Maybe there is more to do..)

35.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbf_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

35.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbf_top.
Performed a total of 0 changes.

35.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

35.13. Executing OPT_DFF pass (perform DFF optimizations).

35.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..

35.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.

35.16. Finished OPT passes. (There is nothing left to do.)

36. Executing HIERARCHY pass (managing design hierarchy).

36.1. Analyzing design hierarchy..
Top module:  \usbf_top

36.2. Analyzing design hierarchy..
Top module:  \usbf_top
Removed 0 unused modules.

37. Printing statistics.

=== usbf_top ===

   Number of wires:               3155
   Number of wire bits:          11947
   Number of public wires:        1376
   Number of public wire bits:    9867
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3871
     $_DFFE_PP_                    272
     $_DFF_P_                      476
     $_SDFFE_PN0P_                 343
     $_SDFFE_PN1P_                 404
     $_SDFFE_PP0N_                   1
     $_SDFFE_PP0P_                 116
     $_SDFFE_PP1P_                  36
     $_SDFF_PN0_                     8
     $_SDFF_PP0_                    74
     $_SDFF_PP1_                     1
     $lut                         2140

38. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..
Removed 0 unused cells and 962 unused wires.
<suppressed ~962 debug messages>

39. Executing BLIF backend.

Warnings: 18 unique messages, 18 total
End of script. Logfile hash: db0b55f292, CPU: user 18.77s system 0.08s, MEM: 82.53 MB peak
Yosys 0.14+36 (git sha1 15a4e900b, gcc 7.1.0 -fPIC -Os)
Time spent: 58% 1x abc (24 sec), 14% 49x opt_expr (6 sec), ...
