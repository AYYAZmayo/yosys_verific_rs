
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.14+36 (git sha1 15a4e900b, gcc 7.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jan22_SW_Release, released at Sat Jan 29 02:42:49 2022.

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jan22_SW_Release, released at Sat Jan 29 02:42:49 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'atahost.v'
VERIFIC-INFO [VERI-2561] atahost.v:192: undeclared symbol 'PIOsel', assumed default net type 'wire'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'atahost_controller.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'atahost_pio_tctrl.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'atahost_top.v'
VERIFIC-INFO [VERI-2561] atahost_top.v:191: undeclared symbol 'PIOsel', assumed default net type 'wire'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'atahost_wb_slave.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'ro_cnt.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'timescale.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'ud_cnt.v'

3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] atahost_top.v:83: compiling module 'atahost_top'
VERIFIC-INFO [VERI-1018] atahost_wb_slave.v:52: compiling module 'atahost_wb_slave(DeviceId=4'b01,DMA_mode0_Tm=0,DMA_mode0_Td=0,DMA_mode0_Teoc=0)'
VERIFIC-WARNING [VERI-2371] atahost_wb_slave.v:241: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_wb_slave.v:265: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_wb_slave.v:266: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_wb_slave.v:270: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_wb_slave.v:271: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_wb_slave.v:274: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_wb_slave.v:297: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_wb_slave.v:298: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_wb_slave.v:302: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_wb_slave.v:303: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_wb_slave.v:307: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_wb_slave.v:308: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_wb_slave.v:330: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_wb_slave.v:331: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_wb_slave.v:332: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_wb_slave.v:333: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_wb_slave.v:337: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_wb_slave.v:338: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_wb_slave.v:339: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_wb_slave.v:340: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_wb_slave.v:344: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_wb_slave.v:345: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_wb_slave.v:346: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_wb_slave.v:347: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_wb_slave.v:354: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_wb_slave.v:355: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_wb_slave.v:356: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_wb_slave.v:357: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_wb_slave.v:361: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_wb_slave.v:362: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_wb_slave.v:363: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_wb_slave.v:364: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_wb_slave.v:368: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_wb_slave.v:369: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_wb_slave.v:370: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_wb_slave.v:371: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_wb_slave.v:378: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_wb_slave.v:379: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_wb_slave.v:380: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_wb_slave.v:381: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_wb_slave.v:385: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_wb_slave.v:386: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_wb_slave.v:387: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_wb_slave.v:388: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_wb_slave.v:392: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_wb_slave.v:393: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_wb_slave.v:394: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_wb_slave.v:395: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_wb_slave.v:402: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_wb_slave.v:403: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_wb_slave.v:404: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_wb_slave.v:408: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_wb_slave.v:409: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_wb_slave.v:410: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_wb_slave.v:414: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_wb_slave.v:415: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_wb_slave.v:416: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_wb_slave.v:423: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_wb_slave.v:424: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_wb_slave.v:425: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_wb_slave.v:429: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_wb_slave.v:430: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_wb_slave.v:431: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_wb_slave.v:435: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_wb_slave.v:436: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_wb_slave.v:437: delay control is not supported for synthesis
VERIFIC-INFO [VERI-1018] atahost_controller.v:63: compiling module 'atahost_controller'
VERIFIC-WARNING [VERI-2371] atahost_controller.v:161: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_controller.v:162: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_controller.v:164: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_controller.v:165: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_controller.v:172: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_controller.v:173: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_controller.v:174: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_controller.v:175: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_controller.v:176: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_controller.v:177: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_controller.v:178: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_controller.v:179: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_controller.v:183: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_controller.v:184: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_controller.v:185: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_controller.v:186: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_controller.v:187: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_controller.v:188: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_controller.v:189: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_controller.v:190: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_controller.v:194: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_controller.v:195: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_controller.v:196: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_controller.v:197: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_controller.v:199: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_controller.v:200: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_controller.v:201: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_controller.v:202: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_controller.v:214: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_controller.v:220: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_controller.v:221: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_controller.v:225: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_controller.v:226: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_controller.v:230: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_controller.v:231: delay control is not supported for synthesis
VERIFIC-INFO [VERI-1018] atahost_pio_tctrl.v:91: compiling module 'atahost_pio_tctrl'
VERIFIC-WARNING [VERI-2371] atahost_pio_tctrl.v:156: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_pio_tctrl.v:157: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_pio_tctrl.v:161: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_pio_tctrl.v:162: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_pio_tctrl.v:166: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_pio_tctrl.v:167: delay control is not supported for synthesis
VERIFIC-INFO [VERI-1018] ro_cnt.v:57: compiling module 'ro_cnt(ID=6)'
VERIFIC-WARNING [VERI-2371] ro_cnt.v:85: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] ro_cnt.v:87: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] ro_cnt.v:89: delay control is not supported for synthesis
VERIFIC-INFO [VERI-1018] ud_cnt.v:55: compiling module 'ud_cnt(RESD=6)'
VERIFIC-WARNING [VERI-2371] ud_cnt.v:85: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] ud_cnt.v:87: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] ud_cnt.v:89: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] ud_cnt.v:91: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_pio_tctrl.v:189: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_pio_tctrl.v:190: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_pio_tctrl.v:191: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_pio_tctrl.v:195: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_pio_tctrl.v:196: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_pio_tctrl.v:197: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_pio_tctrl.v:201: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_pio_tctrl.v:202: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_pio_tctrl.v:203: delay control is not supported for synthesis
VERIFIC-INFO [VERI-1018] ro_cnt.v:57: compiling module 'ro_cnt(ID=28)'
VERIFIC-WARNING [VERI-2371] ro_cnt.v:85: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] ro_cnt.v:87: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] ro_cnt.v:89: delay control is not supported for synthesis
VERIFIC-INFO [VERI-1018] ud_cnt.v:55: compiling module 'ud_cnt(RESD=28)'
VERIFIC-WARNING [VERI-2371] ud_cnt.v:85: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] ud_cnt.v:87: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] ud_cnt.v:89: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] ud_cnt.v:91: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_pio_tctrl.v:223: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_pio_tctrl.v:225: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_pio_tctrl.v:227: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_pio_tctrl.v:233: delay control is not supported for synthesis
VERIFIC-INFO [VERI-1018] ro_cnt.v:57: compiling module 'ro_cnt(ID=2)'
VERIFIC-WARNING [VERI-2371] ro_cnt.v:85: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] ro_cnt.v:87: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] ro_cnt.v:89: delay control is not supported for synthesis
VERIFIC-INFO [VERI-1018] ud_cnt.v:55: compiling module 'ud_cnt(RESD=2)'
VERIFIC-WARNING [VERI-2371] ud_cnt.v:85: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] ud_cnt.v:87: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] ud_cnt.v:89: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] ud_cnt.v:91: delay control is not supported for synthesis
VERIFIC-INFO [VERI-1018] ro_cnt.v:57: compiling module 'ro_cnt(ID=23)'
VERIFIC-WARNING [VERI-2371] ro_cnt.v:85: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] ro_cnt.v:87: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] ro_cnt.v:89: delay control is not supported for synthesis
VERIFIC-INFO [VERI-1018] ud_cnt.v:55: compiling module 'ud_cnt(RESD=23)'
VERIFIC-WARNING [VERI-2371] ud_cnt.v:85: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] ud_cnt.v:87: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] ud_cnt.v:89: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] ud_cnt.v:91: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] atahost_controller.v:263: delay control is not supported for synthesis
Importing module atahost_top.
Importing module atahost_wb_slave(DeviceId=4'b01,DMA_mode0_Tm=0,DMA_mode0_Td=0,DMA_mode0_Teoc=0).
Importing module atahost_controller.
Importing module atahost_pio_tctrl.
Importing module ro_cnt(ID=6).
Importing module ud_cnt(RESD=6).
Importing module ro_cnt(ID=2).
Importing module ro_cnt(ID=28).
Importing module ud_cnt(RESD=28).
Importing module ud_cnt(RESD=2).
Importing module ro_cnt(ID=23).
Importing module ud_cnt(RESD=23).

3.1. Analyzing design hierarchy..
Top module:  \atahost_top
Used module:     \atahost_controller
Used module:         \atahost_pio_tctrl
Used module:             \ro_cnt(ID=23)
Used module:                 \ud_cnt(RESD=23)
Used module:             \ro_cnt(ID=2)
Used module:                 \ud_cnt(RESD=2)
Used module:             \ro_cnt(ID=28)
Used module:                 \ud_cnt(RESD=28)
Used module:             \ro_cnt(ID=6)
Used module:                 \ud_cnt(RESD=6)
Used module:     \atahost_wb_slave(DeviceId=4'b01,DMA_mode0_Tm=0,DMA_mode0_Td=0,DMA_mode0_Teoc=0)

3.2. Analyzing design hierarchy..
Top module:  \atahost_top
Used module:     \atahost_controller
Used module:         \atahost_pio_tctrl
Used module:             \ro_cnt(ID=23)
Used module:                 \ud_cnt(RESD=23)
Used module:             \ro_cnt(ID=2)
Used module:                 \ud_cnt(RESD=2)
Used module:             \ro_cnt(ID=28)
Used module:                 \ud_cnt(RESD=28)
Used module:             \ro_cnt(ID=6)
Used module:                 \ud_cnt(RESD=6)
Used module:     \atahost_wb_slave(DeviceId=4'b01,DMA_mode0_Tm=0,DMA_mode0_Td=0,DMA_mode0_Teoc=0)
Removed 0 unused modules.

4. Executing PROC pass (convert processes to netlists).

4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

4.4. Executing PROC_INIT pass (extract init attributes).

4.5. Executing PROC_ARST pass (detect async resets in processes).

4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

4.7. Executing PROC_DLATCH pass (convert process syncs to latches).

4.8. Executing PROC_DFF pass (convert process syncs to FFs).

4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module ud_cnt(RESD=23).
<suppressed ~2 debug messages>
Optimizing module ro_cnt(ID=23).
<suppressed ~1 debug messages>
Optimizing module ud_cnt(RESD=2).
<suppressed ~2 debug messages>
Optimizing module ud_cnt(RESD=28).
<suppressed ~2 debug messages>
Optimizing module ro_cnt(ID=28).
<suppressed ~1 debug messages>
Optimizing module ro_cnt(ID=2).
<suppressed ~1 debug messages>
Optimizing module ud_cnt(RESD=6).
<suppressed ~2 debug messages>
Optimizing module ro_cnt(ID=6).
<suppressed ~1 debug messages>
Optimizing module atahost_pio_tctrl.
<suppressed ~10 debug messages>
Optimizing module atahost_controller.
<suppressed ~12 debug messages>
Optimizing module atahost_wb_slave(DeviceId=4'b01,DMA_mode0_Tm=0,DMA_mode0_Td=0,DMA_mode0_Teoc=0).
<suppressed ~28 debug messages>
Optimizing module atahost_top.

5. Executing FLATTEN pass (flatten design).
Deleting now unused module ud_cnt(RESD=23).
Deleting now unused module ro_cnt(ID=23).
Deleting now unused module ud_cnt(RESD=2).
Deleting now unused module ud_cnt(RESD=28).
Deleting now unused module ro_cnt(ID=28).
Deleting now unused module ro_cnt(ID=2).
Deleting now unused module ud_cnt(RESD=6).
Deleting now unused module ro_cnt(ID=6).
Deleting now unused module atahost_pio_tctrl.
Deleting now unused module atahost_controller.
Deleting now unused module atahost_wb_slave(DeviceId=4'b01,DMA_mode0_Tm=0,DMA_mode0_Td=0,DMA_mode0_Teoc=0).
<suppressed ~11 debug messages>

6. Executing TRIBUF pass.

7. Executing OPT_EXPR pass (perform const folding).
Optimizing module atahost_top.
<suppressed ~9 debug messages>

8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \atahost_top..
Removed 19 unused cells and 694 unused wires.
<suppressed ~136 debug messages>

9. Executing CHECK pass (checking for obvious problems).
Checking module atahost_top...
Found and reported 0 problems.

10. Executing DEMINOUT pass (demote inout ports to input or output).

11. Executing OPT pass (performing simple optimizations).

11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module atahost_top.
<suppressed ~4 debug messages>

11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\atahost_top'.
<suppressed ~18 debug messages>
Removed a total of 6 cells.

11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \atahost_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~49 debug messages>

11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \atahost_top.
    New ctrl vector for $pmux cell $flatten\u0.$verific$select_313$atahost_wb_slave.v:476$620: { $flatten\u0.$verific$n37$324 $flatten\u0.$verific$n41$326 $flatten\u0.$verific$n45$328 $flatten\u0.$verific$n49$330 $flatten\u0.$verific$n53$332 $flatten\u0.$verific$n57$334 $flatten\u0.$verific$n61$336 }
  Optimizing cells in module \atahost_top.
Performed a total of 1 changes.

11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\atahost_top'.
Removed a total of 0 cells.

11.6. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $flatten\u1.\PIO_timing_controller.\t2_cnt.\cnt.$verific$Qi_reg$ud_cnt.v:91$1142 ($aldff) from module atahost_top.
Changing const-value async load to async reset on $flatten\u1.\PIO_timing_controller.\t2_cnt.$verific$rci_reg$ro_cnt.v:89$1088 ($aldff) from module atahost_top.
Changing const-value async load to async reset on $flatten\u0.$verific$DMA_dev1_Teoc_reg$atahost_wb_slave.v:438$609 ($aldff) from module atahost_top.
Changing const-value async load to async reset on $flatten\u1.\PIO_timing_controller.\t1_cnt.\cnt.$verific$Qi_reg$ud_cnt.v:91$1023 ($aldff) from module atahost_top.
Changing const-value async load to async reset on $flatten\u1.\PIO_timing_controller.\t1_cnt.$verific$rci_reg$ro_cnt.v:89$969 ($aldff) from module atahost_top.
Changing const-value async load to async reset on $flatten\u0.$verific$DMA_dev1_Td_reg$atahost_wb_slave.v:438$608 ($aldff) from module atahost_top.
Changing const-value async load to async reset on $flatten\u1.\PIO_timing_controller.\eoc_cnt.\cnt.$verific$Qi_reg$ud_cnt.v:91$1245 ($aldff) from module atahost_top.
Changing const-value async load to async reset on $flatten\u1.\PIO_timing_controller.\eoc_cnt.$verific$rci_reg$ro_cnt.v:89$1191 ($aldff) from module atahost_top.
Changing const-value async load to async reset on $flatten\u0.$verific$DMA_dev0_Tm_reg$atahost_wb_slave.v:417$598 ($aldff) from module atahost_top.
Changing const-value async load to async reset on $flatten\u0.$verific$DMA_dev0_Teoc_reg$atahost_wb_slave.v:417$600 ($aldff) from module atahost_top.
Changing const-value async load to async reset on $flatten\u1.\PIO_timing_controller.\dhold_cnt.\cnt.$verific$Qi_reg$ud_cnt.v:91$1171 ($aldff) from module atahost_top.
Changing const-value async load to async reset on $flatten\u1.\PIO_timing_controller.\dhold_cnt.$verific$rci_reg$ro_cnt.v:89$1043 ($aldff) from module atahost_top.
Changing const-value async load to async reset on $flatten\u0.$verific$DMA_dev0_Td_reg$atahost_wb_slave.v:417$599 ($aldff) from module atahost_top.
Changing const-value async load to async reset on $flatten\u0.$verific$CtrlReg_reg$atahost_wb_slave.v:274$519 ($aldff) from module atahost_top.
Changing const-value async load to async reset on $flatten\u1.\PIO_timing_controller.$verific$oe_reg$atahost_pio_tctrl.v:204$897 ($aldff) from module atahost_top.
Changing const-value async load to async reset on $flatten\u1.\PIO_timing_controller.$verific$hold_go_reg$atahost_pio_tctrl.v:168$858 ($aldff) from module atahost_top.
Changing const-value async load to async reset on $flatten\u1.\PIO_timing_controller.$verific$hT2done_reg$atahost_pio_tctrl.v:227$916 ($aldff) from module atahost_top.
Changing const-value async load to async reset on $flatten\u1.\PIO_timing_controller.$verific$busy_reg$atahost_pio_tctrl.v:168$857 ($aldff) from module atahost_top.
Changing const-value async load to async reset on $flatten\u1.\PIO_timing_controller.$verific$DIOW_reg$atahost_pio_tctrl.v:204$896 ($aldff) from module atahost_top.
Changing const-value async load to async reset on $flatten\u1.\PIO_timing_controller.$verific$DIOR_reg$atahost_pio_tctrl.v:204$895 ($aldff) from module atahost_top.
Changing const-value async load to async reset on $flatten\u1.$verific$dPIOreq_reg$atahost_controller.v:232$735 ($aldff) from module atahost_top.
Changing const-value async load to async reset on $flatten\u1.$verific$RESETn_reg$atahost_controller.v:203$715 ($aldff) from module atahost_top.
Removing never-active async load on $flatten\u1.$verific$PIOq_reg$atahost_controller.v:214$725 ($aldff) from module atahost_top.
Changing const-value async load to async reset on $flatten\u1.$verific$PIOgo_reg$atahost_controller.v:232$736 ($aldff) from module atahost_top.
Changing const-value async load to async reset on $flatten\u1.$verific$DIOWn_reg$atahost_controller.v:203$717 ($aldff) from module atahost_top.
Changing const-value async load to async reset on $flatten\u1.$verific$DIORn_reg$atahost_controller.v:203$716 ($aldff) from module atahost_top.
Changing const-value async load to async reset on $flatten\u1.$verific$DDoe_reg$atahost_controller.v:203$722 ($aldff) from module atahost_top.
Changing const-value async load to async reset on $flatten\u1.$verific$DDo_reg$atahost_controller.v:203$721 ($aldff) from module atahost_top.
Changing const-value async load to async reset on $flatten\u1.$verific$DA_reg$atahost_controller.v:203$718 ($aldff) from module atahost_top.
Changing const-value async load to async reset on $flatten\u1.$verific$CS1n_reg$atahost_controller.v:203$720 ($aldff) from module atahost_top.
Changing const-value async load to async reset on $flatten\u1.$verific$CS0n_reg$atahost_controller.v:203$719 ($aldff) from module atahost_top.
Changing const-value async load to async reset on $flatten\u0.$verific$inti_reg$atahost_wb_slave.v:309$544 ($aldff) from module atahost_top.
Changing const-value async load to async reset on $flatten\u0.$verific$dirq_reg$atahost_wb_slave.v:309$545 ($aldff) from module atahost_top.
Changing const-value async load to async reset on $flatten\u0.$verific$PIO_dport1_Teoc_reg$atahost_wb_slave.v:396$590 ($aldff) from module atahost_top.
Changing const-value async load to async reset on $flatten\u0.$verific$PIO_dport1_T4_reg$atahost_wb_slave.v:396$589 ($aldff) from module atahost_top.
Changing const-value async load to async reset on $flatten\u0.$verific$PIO_dport1_T2_reg$atahost_wb_slave.v:396$588 ($aldff) from module atahost_top.
Changing const-value async load to async reset on $flatten\u0.$verific$PIO_dport1_T1_reg$atahost_wb_slave.v:396$587 ($aldff) from module atahost_top.
Changing const-value async load to async reset on $flatten\u0.$verific$PIO_dport0_Teoc_reg$atahost_wb_slave.v:372$578 ($aldff) from module atahost_top.
Changing const-value async load to async reset on $flatten\u0.$verific$PIO_dport0_T4_reg$atahost_wb_slave.v:372$577 ($aldff) from module atahost_top.
Changing const-value async load to async reset on $flatten\u0.$verific$PIO_dport0_T2_reg$atahost_wb_slave.v:372$576 ($aldff) from module atahost_top.
Changing const-value async load to async reset on $flatten\u0.$verific$PIO_dport0_T1_reg$atahost_wb_slave.v:372$575 ($aldff) from module atahost_top.
Changing const-value async load to async reset on $flatten\u0.$verific$PIO_cmdport_Teoc_reg$atahost_wb_slave.v:348$566 ($aldff) from module atahost_top.
Changing const-value async load to async reset on $flatten\u0.$verific$PIO_cmdport_T4_reg$atahost_wb_slave.v:348$565 ($aldff) from module atahost_top.
Changing const-value async load to async reset on $flatten\u0.$verific$PIO_cmdport_T2_reg$atahost_wb_slave.v:348$564 ($aldff) from module atahost_top.
Changing const-value async load to async reset on $flatten\u0.$verific$PIO_cmdport_T1_reg$atahost_wb_slave.v:348$563 ($aldff) from module atahost_top.
Changing const-value async load to async reset on $flatten\u0.$verific$DMA_dev1_Tm_reg$atahost_wb_slave.v:438$607 ($aldff) from module atahost_top.

11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \atahost_top..
Removed 3 unused cells and 8 unused wires.
<suppressed ~4 debug messages>

11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module atahost_top.

11.9. Rerunning OPT passes. (Maybe there is more to do..)

11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \atahost_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~49 debug messages>

11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \atahost_top.
Performed a total of 0 changes.

11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\atahost_top'.
Removed a total of 0 cells.

11.13. Executing OPT_DFF pass (perform DFF optimizations).

11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \atahost_top..

11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module atahost_top.

11.16. Finished OPT passes. (There is nothing left to do.)

12. Executing FSM pass (extract and optimize FSM).

12.1. Executing FSM_DETECT pass (finding FSMs in design).

12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \atahost_top..

12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

13. Executing OPT pass (performing simple optimizations).

13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module atahost_top.

13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\atahost_top'.
Removed a total of 0 cells.

13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \atahost_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~49 debug messages>

13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \atahost_top.
Performed a total of 0 changes.

13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\atahost_top'.
Removed a total of 0 cells.

13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\u1.$verific$PIOq_reg$atahost_controller.v:214$725 ($dff) from module atahost_top (D = \dd_pad_i, Q = \u1.PIOq).
Adding EN signal on $flatten\u0.$verific$store_pp_full_reg$atahost_wb_slave.v:241$487 ($dff) from module atahost_top (D = 1'0, Q = \u0.store_pp_full).
Adding EN signal on $flatten\u0.$verific$PIO_dport1_Teoc_reg$atahost_wb_slave.v:396$590 ($adff) from module atahost_top (D = $flatten\u0.$verific$n946$439, Q = \u0.PIO_dport1_Teoc).
Adding EN signal on $flatten\u0.$verific$PIO_dport1_T4_reg$atahost_wb_slave.v:396$589 ($adff) from module atahost_top (D = $flatten\u0.$verific$n937$438, Q = \u0.PIO_dport1_T4).
Adding EN signal on $flatten\u0.$verific$PIO_dport1_T2_reg$atahost_wb_slave.v:396$588 ($adff) from module atahost_top (D = $flatten\u0.$verific$n928$437, Q = \u0.PIO_dport1_T2).
Adding EN signal on $flatten\u0.$verific$PIO_dport1_T1_reg$atahost_wb_slave.v:396$587 ($adff) from module atahost_top (D = $flatten\u0.$verific$n919$436, Q = \u0.PIO_dport1_T1).
Adding EN signal on $flatten\u0.$verific$PIO_dport0_Teoc_reg$atahost_wb_slave.v:372$578 ($adff) from module atahost_top (D = $flatten\u0.$verific$n727$431, Q = \u0.PIO_dport0_Teoc).
Adding EN signal on $flatten\u0.$verific$PIO_dport0_T4_reg$atahost_wb_slave.v:372$577 ($adff) from module atahost_top (D = $flatten\u0.$verific$n718$430, Q = \u0.PIO_dport0_T4).
Adding EN signal on $flatten\u0.$verific$PIO_dport0_T2_reg$atahost_wb_slave.v:372$576 ($adff) from module atahost_top (D = $flatten\u0.$verific$n709$429, Q = \u0.PIO_dport0_T2).
Adding EN signal on $flatten\u0.$verific$PIO_dport0_T1_reg$atahost_wb_slave.v:372$575 ($adff) from module atahost_top (D = $flatten\u0.$verific$n700$428, Q = \u0.PIO_dport0_T1).
Adding EN signal on $flatten\u0.$verific$PIO_cmdport_Teoc_reg$atahost_wb_slave.v:348$566 ($adff) from module atahost_top (D = $flatten\u0.$verific$n508$423, Q = \u0.PIO_cmdport_Teoc).
Adding EN signal on $flatten\u0.$verific$PIO_cmdport_T4_reg$atahost_wb_slave.v:348$565 ($adff) from module atahost_top (D = $flatten\u0.$verific$n499$422, Q = \u0.PIO_cmdport_T4).
Adding EN signal on $flatten\u0.$verific$PIO_cmdport_T2_reg$atahost_wb_slave.v:348$564 ($adff) from module atahost_top (D = $flatten\u0.$verific$n490$421, Q = \u0.PIO_cmdport_T2).
Adding EN signal on $flatten\u0.$verific$PIO_cmdport_T1_reg$atahost_wb_slave.v:348$563 ($adff) from module atahost_top (D = $flatten\u0.$verific$n481$420, Q = \u0.PIO_cmdport_T1).
Adding EN signal on $flatten\u0.$verific$DMA_dev1_Tm_reg$atahost_wb_slave.v:438$607 ($adff) from module atahost_top (D = $flatten\u0.$verific$n1267$450, Q = \u0.DMA_dev1_Tm).
Adding EN signal on $flatten\u0.$verific$DMA_dev1_Teoc_reg$atahost_wb_slave.v:438$609 ($adff) from module atahost_top (D = $flatten\u0.$verific$n1285$452, Q = \u0.DMA_dev1_Teoc).
Adding EN signal on $flatten\u0.$verific$DMA_dev1_Td_reg$atahost_wb_slave.v:438$608 ($adff) from module atahost_top (D = $flatten\u0.$verific$n1276$451, Q = \u0.DMA_dev1_Td).
Adding EN signal on $flatten\u0.$verific$DMA_dev0_Tm_reg$atahost_wb_slave.v:417$598 ($adff) from module atahost_top (D = $flatten\u0.$verific$n1102$444, Q = \u0.DMA_dev0_Tm).
Adding EN signal on $flatten\u0.$verific$DMA_dev0_Teoc_reg$atahost_wb_slave.v:417$600 ($adff) from module atahost_top (D = $flatten\u0.$verific$n1120$446, Q = \u0.DMA_dev0_Teoc).
Adding EN signal on $flatten\u0.$verific$DMA_dev0_Td_reg$atahost_wb_slave.v:417$599 ($adff) from module atahost_top (D = $flatten\u0.$verific$n1111$445, Q = \u0.DMA_dev0_Td).
Adding EN signal on $flatten\u0.$verific$CtrlReg_reg$atahost_wb_slave.v:274$519 ($adff) from module atahost_top (D = $flatten\u0.$verific$n199$407, Q = \u0.CtrlReg).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$1249 ($dffe) from module atahost_top.

13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \atahost_top..
Removed 2 unused cells and 2 unused wires.
<suppressed ~3 debug messages>

13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module atahost_top.
<suppressed ~21 debug messages>

13.9. Rerunning OPT passes. (Maybe there is more to do..)

13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \atahost_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~47 debug messages>

13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \atahost_top.
Performed a total of 0 changes.

13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\atahost_top'.
<suppressed ~39 debug messages>
Removed a total of 13 cells.

13.13. Executing OPT_DFF pass (perform DFF optimizations).

13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \atahost_top..
Removed 0 unused cells and 15 unused wires.
<suppressed ~1 debug messages>

13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module atahost_top.

13.16. Rerunning OPT passes. (Maybe there is more to do..)

13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \atahost_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~47 debug messages>

13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \atahost_top.
Performed a total of 0 changes.

13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\atahost_top'.
Removed a total of 0 cells.

13.20. Executing OPT_DFF pass (perform DFF optimizations).

13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \atahost_top..

13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module atahost_top.

13.23. Finished OPT passes. (There is nothing left to do.)

14. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 4) from port B of cell atahost_top.$flatten\u0.$verific$equal_60$atahost_wb_slave.v:256$510 ($eq).
Removed top 1 bits (of 4) from port B of cell atahost_top.$flatten\u0.$verific$equal_56$atahost_wb_slave.v:255$507 ($eq).
Removed top 1 bits (of 4) from port B of cell atahost_top.$flatten\u0.$verific$equal_52$atahost_wb_slave.v:254$504 ($eq).
Removed top 2 bits (of 4) from port B of cell atahost_top.$flatten\u0.$verific$equal_48$atahost_wb_slave.v:253$501 ($eq).
Removed top 2 bits (of 4) from port B of cell atahost_top.$flatten\u0.$verific$equal_44$atahost_wb_slave.v:252$498 ($eq).
Removed top 3 bits (of 4) from port B of cell atahost_top.$flatten\u0.$verific$equal_40$atahost_wb_slave.v:251$495 ($eq).
Removed top 1 bits (of 9) from port A of cell atahost_top.$flatten\u1.\PIO_timing_controller.\eoc_cnt.\cnt.$verific$sub_4$ud_cnt.v:80$1235 ($sub).
Removed top 8 bits (of 9) from port B of cell atahost_top.$flatten\u1.\PIO_timing_controller.\eoc_cnt.\cnt.$verific$sub_4$ud_cnt.v:80$1235 ($sub).
Removed top 1 bits (of 9) from port A of cell atahost_top.$flatten\u1.\PIO_timing_controller.\dhold_cnt.\cnt.$verific$sub_4$ud_cnt.v:80$1161 ($sub).
Removed top 8 bits (of 9) from port B of cell atahost_top.$flatten\u1.\PIO_timing_controller.\dhold_cnt.\cnt.$verific$sub_4$ud_cnt.v:80$1161 ($sub).
Removed top 1 bits (of 9) from port A of cell atahost_top.$flatten\u1.\PIO_timing_controller.\t1_cnt.\cnt.$verific$sub_4$ud_cnt.v:80$1013 ($sub).
Removed top 8 bits (of 9) from port B of cell atahost_top.$flatten\u1.\PIO_timing_controller.\t1_cnt.\cnt.$verific$sub_4$ud_cnt.v:80$1013 ($sub).
Removed top 1 bits (of 9) from port A of cell atahost_top.$flatten\u1.\PIO_timing_controller.\t2_cnt.\cnt.$verific$sub_4$ud_cnt.v:80$1132 ($sub).
Removed top 8 bits (of 9) from port B of cell atahost_top.$flatten\u1.\PIO_timing_controller.\t2_cnt.\cnt.$verific$sub_4$ud_cnt.v:80$1132 ($sub).

15. Executing PEEPOPT pass (run peephole optimizers).

16. Executing PMUXTREE pass.

17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \atahost_top..
Removed 2 unused cells and 3 unused wires.
<suppressed ~3 debug messages>

18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module atahost_top:
  creating $macc model for $flatten\u1.\PIO_timing_controller.\dhold_cnt.\cnt.$verific$sub_4$ud_cnt.v:80$1161 ($sub).
  creating $macc model for $flatten\u1.\PIO_timing_controller.\eoc_cnt.\cnt.$verific$sub_4$ud_cnt.v:80$1235 ($sub).
  creating $macc model for $flatten\u1.\PIO_timing_controller.\t1_cnt.\cnt.$verific$sub_4$ud_cnt.v:80$1013 ($sub).
  creating $macc model for $flatten\u1.\PIO_timing_controller.\t2_cnt.\cnt.$verific$sub_4$ud_cnt.v:80$1132 ($sub).
  creating $alu model for $macc $flatten\u1.\PIO_timing_controller.\t2_cnt.\cnt.$verific$sub_4$ud_cnt.v:80$1132.
  creating $alu model for $macc $flatten\u1.\PIO_timing_controller.\t1_cnt.\cnt.$verific$sub_4$ud_cnt.v:80$1013.
  creating $alu model for $macc $flatten\u1.\PIO_timing_controller.\eoc_cnt.\cnt.$verific$sub_4$ud_cnt.v:80$1235.
  creating $alu model for $macc $flatten\u1.\PIO_timing_controller.\dhold_cnt.\cnt.$verific$sub_4$ud_cnt.v:80$1161.
  creating $alu cell for $flatten\u1.\PIO_timing_controller.\dhold_cnt.\cnt.$verific$sub_4$ud_cnt.v:80$1161: $auto$alumacc.cc:485:replace_alu$1331
  creating $alu cell for $flatten\u1.\PIO_timing_controller.\eoc_cnt.\cnt.$verific$sub_4$ud_cnt.v:80$1235: $auto$alumacc.cc:485:replace_alu$1334
  creating $alu cell for $flatten\u1.\PIO_timing_controller.\t1_cnt.\cnt.$verific$sub_4$ud_cnt.v:80$1013: $auto$alumacc.cc:485:replace_alu$1337
  creating $alu cell for $flatten\u1.\PIO_timing_controller.\t2_cnt.\cnt.$verific$sub_4$ud_cnt.v:80$1132: $auto$alumacc.cc:485:replace_alu$1340
  created 4 $alu and 0 $macc cells.

19. Executing OPT pass (performing simple optimizations).

19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module atahost_top.

19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\atahost_top'.
Removed a total of 0 cells.

19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \atahost_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~47 debug messages>

19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \atahost_top.
Performed a total of 0 changes.

19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\atahost_top'.
Removed a total of 0 cells.

19.6. Executing OPT_DFF pass (perform DFF optimizations).

19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \atahost_top..

19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module atahost_top.

19.9. Finished OPT passes. (There is nothing left to do.)

20. Executing MEMORY pass.

20.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

20.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

20.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

20.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

20.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \atahost_top..

20.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

20.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

20.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \atahost_top..

20.9. Executing MEMORY_COLLECT pass (generating $mem cells).

21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \atahost_top..

22. Executing OPT_EXPR pass (perform const folding).
Optimizing module atahost_top.
<suppressed ~19 debug messages>

23. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping atahost_top.$auto$ff.cc:262:slice$1292 ($adffe).
Mapping atahost_top.$auto$ff.cc:262:slice$1295 ($adffe).
Mapping atahost_top.$auto$ff.cc:262:slice$1298 ($adffe).
Mapping atahost_top.$auto$ff.cc:262:slice$1301 ($adffe).
Mapping atahost_top.$auto$ff.cc:262:slice$1304 ($adffe).
Mapping atahost_top.$auto$opt_dff.cc:195:make_patterns_logic$1252 ($reduce_bool).
Mapping atahost_top.$auto$opt_dff.cc:195:make_patterns_logic$1264 ($reduce_bool).
Mapping atahost_top.$auto$opt_dff.cc:195:make_patterns_logic$1276 ($reduce_bool).
Mapping atahost_top.$auto$opt_dff.cc:195:make_patterns_logic$1288 ($reduce_bool).
Mapping atahost_top.$auto$opt_dff.cc:195:make_patterns_logic$1297 ($reduce_bool).
Mapping atahost_top.$auto$opt_dff.cc:195:make_patterns_logic$1306 ($reduce_bool).
Mapping atahost_top.$auto$pmuxtree.cc:35:or_generator$1315 ($or).
Mapping atahost_top.$auto$pmuxtree.cc:35:or_generator$1323 ($or).
Mapping atahost_top.$auto$pmuxtree.cc:37:or_generator$1327 ($reduce_or).
Mapping atahost_top.$auto$pmuxtree.cc:65:recursive_mux_generator$1311 ($mux).
Mapping atahost_top.$auto$pmuxtree.cc:65:recursive_mux_generator$1313 ($mux).
Mapping atahost_top.$auto$pmuxtree.cc:65:recursive_mux_generator$1317 ($mux).
Mapping atahost_top.$auto$pmuxtree.cc:65:recursive_mux_generator$1319 ($mux).
Mapping atahost_top.$auto$pmuxtree.cc:65:recursive_mux_generator$1321 ($mux).
Mapping atahost_top.$auto$pmuxtree.cc:65:recursive_mux_generator$1325 ($mux).
Mapping atahost_top.$auto$pmuxtree.cc:65:recursive_mux_generator$1329 ($mux).
Mapping atahost_top.$flatten\u0.$verific$dirq_reg$atahost_wb_slave.v:309$545 ($adff).
Mapping atahost_top.$flatten\u0.$verific$equal_36$atahost_wb_slave.v:250$492 ($logic_not).
Mapping atahost_top.$flatten\u0.$verific$equal_40$atahost_wb_slave.v:251$495 ($eq).
Mapping atahost_top.$flatten\u0.$verific$equal_44$atahost_wb_slave.v:252$498 ($eq).
Mapping atahost_top.$flatten\u0.$verific$equal_48$atahost_wb_slave.v:253$501 ($eq).
Mapping atahost_top.$flatten\u0.$verific$equal_52$atahost_wb_slave.v:254$504 ($eq).
Mapping atahost_top.$flatten\u0.$verific$equal_56$atahost_wb_slave.v:255$507 ($eq).
Mapping atahost_top.$flatten\u0.$verific$equal_60$atahost_wb_slave.v:256$510 ($eq).
Mapping atahost_top.$flatten\u0.$verific$i10$atahost_wb_slave.v:228$469 ($mux).
Mapping atahost_top.$flatten\u0.$verific$i100$atahost_wb_slave.v:307$539 ($and).
Mapping atahost_top.$flatten\u0.$verific$i103$atahost_wb_slave.v:309$542 ($mux).
Mapping atahost_top.$flatten\u0.$verific$i104$atahost_wb_slave.v:309$543 ($mux).
Mapping atahost_top.$flatten\u0.$verific$i12$atahost_wb_slave.v:231$471 ($and).
Mapping atahost_top.$flatten\u0.$verific$i13$atahost_wb_slave.v:231$472 ($and).
Mapping atahost_top.$flatten\u0.$verific$i14$atahost_wb_slave.v:231$473 ($and).
Mapping atahost_top.$flatten\u0.$verific$i20$atahost_wb_slave.v:234$478 ($not).
Mapping atahost_top.$flatten\u0.$verific$i21$atahost_wb_slave.v:234$479 ($and).
Mapping atahost_top.$flatten\u0.$verific$i22$atahost_wb_slave.v:234$480 ($and).
Mapping atahost_top.$flatten\u0.$verific$i242$atahost_wb_slave.v:446$610 ($or).
Mapping atahost_top.$flatten\u0.$verific$i245$atahost_wb_slave.v:449$612 ($and).
Mapping atahost_top.$flatten\u0.$verific$i36$atahost_wb_slave.v:250$491 ($and).
Mapping atahost_top.$flatten\u0.$verific$i38$atahost_wb_slave.v:250$493 ($and).
Mapping atahost_top.$flatten\u0.$verific$i42$atahost_wb_slave.v:251$496 ($and).
Mapping atahost_top.$flatten\u0.$verific$i46$atahost_wb_slave.v:252$499 ($and).
Mapping atahost_top.$flatten\u0.$verific$i50$atahost_wb_slave.v:253$502 ($and).
Mapping atahost_top.$flatten\u0.$verific$i54$atahost_wb_slave.v:254$505 ($and).
Mapping atahost_top.$flatten\u0.$verific$i58$atahost_wb_slave.v:255$508 ($and).
Mapping atahost_top.$flatten\u0.$verific$i62$atahost_wb_slave.v:256$511 ($and).
Mapping atahost_top.$flatten\u0.$verific$i8$atahost_wb_slave.v:228$467 ($not).
Mapping atahost_top.$flatten\u0.$verific$i9$atahost_wb_slave.v:228$468 ($not).
Mapping atahost_top.$flatten\u0.$verific$i94$atahost_wb_slave.v:307$533 ($not).
Mapping atahost_top.$flatten\u0.$verific$i95$atahost_wb_slave.v:307$534 ($and).
Mapping atahost_top.$flatten\u0.$verific$i96$atahost_wb_slave.v:307$535 ($or).
Mapping atahost_top.$flatten\u0.$verific$i97$atahost_wb_slave.v:307$536 ($not).
Mapping atahost_top.$flatten\u0.$verific$i98$atahost_wb_slave.v:307$537 ($and).
Mapping atahost_top.$flatten\u0.$verific$i99$atahost_wb_slave.v:307$538 ($not).
Mapping atahost_top.$flatten\u0.$verific$inti_reg$atahost_wb_slave.v:309$544 ($adff).
Mapping atahost_top.$auto$ff.cc:262:slice$1286 ($adffe).
Mapping atahost_top.$auto$ff.cc:262:slice$1283 ($adffe).
Mapping atahost_top.$auto$ff.cc:262:slice$1280 ($adffe).
Mapping atahost_top.$auto$ff.cc:262:slice$1277 ($adffe).
Mapping atahost_top.$flatten\u0.$verific$mux_137$atahost_wb_slave.v:348$559 ($mux).
Mapping atahost_top.$flatten\u0.$verific$mux_138$atahost_wb_slave.v:348$560 ($mux).
Mapping atahost_top.$flatten\u0.$verific$mux_139$atahost_wb_slave.v:348$561 ($mux).
Mapping atahost_top.$flatten\u0.$verific$mux_140$atahost_wb_slave.v:348$562 ($mux).
Mapping atahost_top.$auto$ff.cc:262:slice$1274 ($adffe).
Mapping atahost_top.$auto$ff.cc:262:slice$1271 ($adffe).
Mapping atahost_top.$auto$ff.cc:262:slice$1268 ($adffe).
Mapping atahost_top.$auto$ff.cc:262:slice$1265 ($adffe).
Mapping atahost_top.$flatten\u0.$verific$mux_164$atahost_wb_slave.v:372$571 ($mux).
Mapping atahost_top.$flatten\u0.$verific$mux_165$atahost_wb_slave.v:372$572 ($mux).
Mapping atahost_top.$flatten\u0.$verific$mux_166$atahost_wb_slave.v:372$573 ($mux).
Mapping atahost_top.$flatten\u0.$verific$mux_167$atahost_wb_slave.v:372$574 ($mux).
Mapping atahost_top.$auto$ff.cc:262:slice$1262 ($adffe).
Mapping atahost_top.$auto$ff.cc:262:slice$1259 ($adffe).
Mapping atahost_top.$auto$ff.cc:262:slice$1256 ($adffe).
Mapping atahost_top.$auto$ff.cc:262:slice$1253 ($adffe).
Mapping atahost_top.$flatten\u0.$verific$mux_191$atahost_wb_slave.v:396$583 ($mux).
Mapping atahost_top.$flatten\u0.$verific$mux_192$atahost_wb_slave.v:396$584 ($mux).
Mapping atahost_top.$flatten\u0.$verific$mux_193$atahost_wb_slave.v:396$585 ($mux).
Mapping atahost_top.$flatten\u0.$verific$mux_194$atahost_wb_slave.v:396$586 ($mux).
Mapping atahost_top.$auto$ff.cc:262:slice$1250 ($adffe).
Mapping atahost_top.$auto$ff.cc:262:slice$1248 ($dffe).
Mapping atahost_top.$flatten\u0.$verific$mux_214$atahost_wb_slave.v:417$595 ($mux).
Mapping atahost_top.$flatten\u0.$verific$mux_215$atahost_wb_slave.v:417$596 ($mux).
Mapping atahost_top.$flatten\u0.$verific$mux_216$atahost_wb_slave.v:417$597 ($mux).
Mapping atahost_top.$flatten\u0.$verific$mux_235$atahost_wb_slave.v:438$604 ($mux).
Mapping atahost_top.$flatten\u0.$verific$mux_236$atahost_wb_slave.v:438$605 ($mux).
Mapping atahost_top.$flatten\u0.$verific$mux_237$atahost_wb_slave.v:438$606 ($mux).
Mapping atahost_top.$flatten\u0.$verific$mux_314$atahost_wb_slave.v:479$621 ($mux).
Mapping atahost_top.$auto$ff.cc:262:slice$1289 ($adffe).
Mapping atahost_top.$flatten\u0.$verific$mux_72$atahost_wb_slave.v:274$518 ($mux).
Mapping atahost_top.$flatten\u0.$verific$reduce_and_3$atahost_wb_slave.v:224$463 ($reduce_and).
Mapping atahost_top.$flatten\u0.$verific$reduce_and_5$atahost_wb_slave.v:225$465 ($reduce_and).
Mapping atahost_top.$flatten\u1.$verific$CS0n_reg$atahost_controller.v:203$719 ($adff).
Mapping atahost_top.$flatten\u1.$verific$CS1n_reg$atahost_controller.v:203$720 ($adff).
Mapping atahost_top.$flatten\u1.$verific$DA_reg$atahost_controller.v:203$718 ($adff).
Mapping atahost_top.$flatten\u1.$verific$DDo_reg$atahost_controller.v:203$721 ($adff).
Mapping atahost_top.$flatten\u1.$verific$DDoe_reg$atahost_controller.v:203$722 ($adff).
Mapping atahost_top.$flatten\u1.$verific$DIORn_reg$atahost_controller.v:203$716 ($adff).
Mapping atahost_top.$flatten\u1.$verific$DIOWn_reg$atahost_controller.v:203$717 ($adff).
Mapping atahost_top.$flatten\u1.$verific$PIOack_reg$atahost_controller.v:263$790 ($dff).
Mapping atahost_top.$flatten\u1.$verific$PIOgo_reg$atahost_controller.v:232$736 ($adff).
Mapping atahost_top.$flatten\u1.$verific$RESETn_reg$atahost_controller.v:203$715 ($adff).
Mapping atahost_top.$flatten\u1.$verific$cINTRQ_reg$atahost_controller.v:166$684 ($dff).
Mapping atahost_top.$flatten\u1.$verific$cIORDY_reg$atahost_controller.v:166$683 ($dff).
Mapping atahost_top.$flatten\u1.$verific$dPIOreq_reg$atahost_controller.v:232$735 ($adff).
Mapping atahost_top.$flatten\u1.$verific$i32$atahost_controller.v:194$692 ($not).
Mapping atahost_top.$flatten\u1.$verific$i35$atahost_controller.v:196$694 ($not).
Mapping atahost_top.$flatten\u1.$verific$i36$atahost_controller.v:196$695 ($and).
Mapping atahost_top.$flatten\u1.$verific$i37$atahost_controller.v:196$696 ($not).
Mapping atahost_top.$flatten\u1.$verific$i39$atahost_controller.v:197$698 ($and).
Mapping atahost_top.$flatten\u1.$verific$i40$atahost_controller.v:197$699 ($not).
Mapping atahost_top.$flatten\u1.$verific$i44$atahost_controller.v:201$703 ($not).
Mapping atahost_top.$flatten\u1.$verific$i46$atahost_controller.v:202$705 ($not).
Mapping atahost_top.$flatten\u1.$verific$i48$atahost_controller.v:203$707 ($mux).
Mapping atahost_top.$flatten\u1.$verific$i49$atahost_controller.v:203$708 ($mux).
Mapping atahost_top.$flatten\u1.$verific$i50$atahost_controller.v:203$709 ($mux).
Mapping atahost_top.$flatten\u1.$verific$i52$atahost_controller.v:203$711 ($mux).
Mapping atahost_top.$flatten\u1.$verific$i53$atahost_controller.v:203$712 ($mux).
Mapping atahost_top.$flatten\u1.$verific$i55$atahost_controller.v:203$714 ($mux).
Mapping atahost_top.$flatten\u1.$verific$i75$atahost_controller.v:230$726 ($not).
Mapping atahost_top.$flatten\u1.$verific$i76$atahost_controller.v:230$727 ($and).
Mapping atahost_top.$flatten\u1.$verific$i78$atahost_controller.v:231$729 ($not).
Mapping atahost_top.$flatten\u1.$verific$i79$atahost_controller.v:231$730 ($and).
Mapping atahost_top.$flatten\u1.$verific$i80$atahost_controller.v:231$731 ($and).
Mapping atahost_top.$flatten\u1.$verific$i82$atahost_controller.v:232$733 ($mux).
Mapping atahost_top.$flatten\u1.$verific$i83$atahost_controller.v:232$734 ($mux).
Mapping atahost_top.$flatten\u1.$verific$i92$atahost_controller.v:263$786 ($not).
Mapping atahost_top.$flatten\u1.$verific$i93$atahost_controller.v:263$787 ($and).
Mapping atahost_top.$flatten\u1.$verific$i94$atahost_controller.v:263$788 ($or).
Mapping atahost_top.$flatten\u1.$verific$irq_reg$atahost_controller.v:166$686 ($dff).
Mapping atahost_top.$flatten\u1.$verific$mux_50$atahost_controller.v:203$710 ($mux).
Mapping atahost_top.$flatten\u1.$verific$mux_53$atahost_controller.v:203$713 ($mux).
Mapping atahost_top.$flatten\u1.$verific$sIORDY_reg$atahost_controller.v:166$685 ($dff).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.$verific$DIOR_reg$atahost_pio_tctrl.v:204$895 ($adff).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.$verific$DIOW_reg$atahost_pio_tctrl.v:204$896 ($adff).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.$verific$busy_reg$atahost_pio_tctrl.v:168$857 ($adff).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.$verific$dstrb_reg$atahost_pio_tctrl.v:233$922 ($dff).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.$verific$hT2done_reg$atahost_pio_tctrl.v:227$916 ($adff).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.$verific$hold_go_reg$atahost_pio_tctrl.v:168$858 ($adff).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.$verific$i15$atahost_pio_tctrl.v:166$846 ($or).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.$verific$i16$atahost_pio_tctrl.v:166$847 ($not).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.$verific$i17$atahost_pio_tctrl.v:166$848 ($and).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.$verific$i19$atahost_pio_tctrl.v:167$850 ($and).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.$verific$i20$atahost_pio_tctrl.v:167$851 ($or).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.$verific$i21$atahost_pio_tctrl.v:167$852 ($not).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.$verific$i22$atahost_pio_tctrl.v:167$853 ($and).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.$verific$i24$atahost_pio_tctrl.v:168$855 ($mux).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.$verific$i25$atahost_pio_tctrl.v:168$856 ($mux).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.$verific$i28$atahost_pio_tctrl.v:170$859 ($or).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.$verific$i29$atahost_pio_tctrl.v:170$860 ($not).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.$verific$i30$atahost_pio_tctrl.v:170$861 ($and).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.$verific$i41$atahost_pio_tctrl.v:201$877 ($not).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.$verific$i42$atahost_pio_tctrl.v:201$878 ($and).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.$verific$i43$atahost_pio_tctrl.v:201$879 ($not).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.$verific$i44$atahost_pio_tctrl.v:201$880 ($and).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.$verific$i45$atahost_pio_tctrl.v:201$881 ($or).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.$verific$i47$atahost_pio_tctrl.v:202$883 ($and).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.$verific$i49$atahost_pio_tctrl.v:202$884 ($and).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.$verific$i50$atahost_pio_tctrl.v:202$885 ($or).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.$verific$i52$atahost_pio_tctrl.v:203$887 ($and).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.$verific$i53$atahost_pio_tctrl.v:203$888 ($or).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.$verific$i54$atahost_pio_tctrl.v:203$889 ($not).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.$verific$i55$atahost_pio_tctrl.v:203$890 ($and).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.$verific$i57$atahost_pio_tctrl.v:204$892 ($mux).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.$verific$i58$atahost_pio_tctrl.v:204$893 ($mux).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.$verific$i59$atahost_pio_tctrl.v:204$894 ($mux).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.$verific$i68$atahost_pio_tctrl.v:227$912 ($or).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.$verific$i70$atahost_pio_tctrl.v:227$913 ($and).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.$verific$i72$atahost_pio_tctrl.v:227$915 ($mux).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.$verific$i75$atahost_pio_tctrl.v:229$917 ($not).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.$verific$i76$atahost_pio_tctrl.v:229$918 ($or).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.$verific$i77$atahost_pio_tctrl.v:229$919 ($and).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.$verific$oe_reg$atahost_pio_tctrl.v:204$897 ($adff).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.\dhold_cnt.$verific$i10$ro_cnt.v:89$1039 ($and).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.\dhold_cnt.$verific$i11$ro_cnt.v:89$1040 ($or).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.\dhold_cnt.$verific$i13$ro_cnt.v:89$1042 ($mux).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.\dhold_cnt.$verific$rci_reg$ro_cnt.v:89$1043 ($adff).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.\dhold_cnt.\cnt.$verific$Qi_reg$ud_cnt.v:91$1171 ($adff).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.\dhold_cnt.\cnt.$verific$mux_16$ud_cnt.v:91$1169 ($mux).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.\dhold_cnt.\cnt.$verific$mux_17$ud_cnt.v:91$1170 ($mux).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.\eoc_cnt.$verific$i10$ro_cnt.v:89$1187 ($and).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.\eoc_cnt.$verific$i11$ro_cnt.v:89$1188 ($or).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.\eoc_cnt.$verific$i13$ro_cnt.v:89$1190 ($mux).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.\eoc_cnt.$verific$rci_reg$ro_cnt.v:89$1191 ($adff).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.\eoc_cnt.\cnt.$verific$Qi_reg$ud_cnt.v:91$1245 ($adff).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.\eoc_cnt.\cnt.$verific$mux_16$ud_cnt.v:91$1243 ($mux).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.\eoc_cnt.\cnt.$verific$mux_17$ud_cnt.v:91$1244 ($mux).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.\t1_cnt.$verific$i10$ro_cnt.v:89$965 ($and).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.\t1_cnt.$verific$i11$ro_cnt.v:89$966 ($or).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.\t1_cnt.$verific$i13$ro_cnt.v:89$968 ($mux).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.\t1_cnt.$verific$i9$ro_cnt.v:89$964 ($not).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.\t1_cnt.$verific$rci_reg$ro_cnt.v:89$969 ($adff).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.\t1_cnt.\cnt.$verific$Qi_reg$ud_cnt.v:91$1023 ($adff).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.\t1_cnt.\cnt.$verific$mux_16$ud_cnt.v:91$1021 ($mux).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.\t1_cnt.\cnt.$verific$mux_17$ud_cnt.v:91$1022 ($mux).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.\t2_cnt.$verific$i10$ro_cnt.v:89$1084 ($and).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.\t2_cnt.$verific$i11$ro_cnt.v:89$1085 ($or).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.\t2_cnt.$verific$i13$ro_cnt.v:89$1087 ($mux).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.\t2_cnt.$verific$i9$ro_cnt.v:89$1083 ($not).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.\t2_cnt.$verific$rci_reg$ro_cnt.v:89$1088 ($adff).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.\t2_cnt.\cnt.$verific$Qi_reg$ud_cnt.v:91$1142 ($adff).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.\t2_cnt.\cnt.$verific$mux_16$ud_cnt.v:91$1140 ($mux).
Mapping atahost_top.$flatten\u1.\PIO_timing_controller.\t2_cnt.\cnt.$verific$mux_17$ud_cnt.v:91$1141 ($mux).

24. Executing OPT_EXPR pass (perform const folding).
Optimizing module atahost_top.
<suppressed ~160 debug messages>

25. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\atahost_top'.
<suppressed ~492 debug messages>
Removed a total of 164 cells.

26. Executing OPT_DFF pass (perform DFF optimizations).

27. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \atahost_top..
Removed 0 unused cells and 61 unused wires.
<suppressed ~1 debug messages>

28. Executing OPT pass (performing simple optimizations).

28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module atahost_top.

28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\atahost_top'.
Removed a total of 0 cells.

28.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \atahost_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

28.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \atahost_top.
Performed a total of 0 changes.

28.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\atahost_top'.
Removed a total of 0 cells.

28.6. Executing OPT_DFF pass (perform DFF optimizations).

28.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \atahost_top..

28.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module atahost_top.

28.9. Finished OPT passes. (There is nothing left to do.)

29. Executing OPT pass (performing simple optimizations).

29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module atahost_top.
<suppressed ~26 debug messages>

29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\atahost_top'.
Removed a total of 0 cells.

29.3. Executing OPT_DFF pass (perform DFF optimizations).

29.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \atahost_top..

29.5. Finished fast OPT passes.

30. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

31. Executing OPT pass (performing simple optimizations).

31.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module atahost_top.

31.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\atahost_top'.
Removed a total of 0 cells.

31.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \atahost_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

31.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \atahost_top.
Performed a total of 0 changes.

31.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\atahost_top'.
Removed a total of 0 cells.

31.6. Executing OPT_SHARE pass.

31.7. Executing OPT_DFF pass (perform DFF optimizations).

31.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \atahost_top..

31.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module atahost_top.

31.10. Finished OPT passes. (There is nothing left to do.)

32. Executing TECHMAP pass (map to technology primitives).

32.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

32.2. Continuing TECHMAP pass.
Using template $paramod$19189243523493d505a4933d1bad417c570ea8a6\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001001 for cells of type $lcu.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $or.
No more expansions possible.
<suppressed ~355 debug messages>

33. Executing OPT pass (performing simple optimizations).

33.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module atahost_top.
<suppressed ~168 debug messages>

33.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\atahost_top'.
Removed a total of 0 cells.

33.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \atahost_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

33.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \atahost_top.
Performed a total of 0 changes.

33.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\atahost_top'.
Removed a total of 0 cells.

33.6. Executing OPT_DFF pass (perform DFF optimizations).

33.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \atahost_top..
Removed 1 unused cells and 143 unused wires.
<suppressed ~6 debug messages>

33.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module atahost_top.

33.9. Rerunning OPT passes. (Maybe there is more to do..)

33.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \atahost_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

33.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \atahost_top.
Performed a total of 0 changes.

33.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\atahost_top'.
Removed a total of 0 cells.

33.13. Executing OPT_DFF pass (perform DFF optimizations).

33.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \atahost_top..

33.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module atahost_top.

33.16. Finished OPT passes. (There is nothing left to do.)

34. Executing ABC pass (technology mapping using ABC).

34.1. Extracting gate netlist of module `\atahost_top' to `<abc-temp-dir>/input.blif'..
Extracted 672 gates and 959 wires to a netlist network with 286 inputs and 140 outputs.

34.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/aram/Workspace/yosys_verific_rs/scripts/synth/abc/abc_base6.a21.scr 
ABC: netlist  : i/o =    286/    140  and =     969  lev =   10 (5.96)  mem = 0.02 MB
ABC: Mapping (K=6)  :  lut =    239  edge =     992  lev =    6 (3.00)  mem = 0.01 MB
ABC: netlist  : i/o =    286/    140  and =    1044  lev =   11 (5.80)  mem = 0.02 MB
ABC: Mapping (K=6)  :  lut =    235  edge =    1033  lev =    5 (2.81)  mem = 0.01 MB
ABC: netlist  : i/o =    286/    140  and =     996  lev =   11 (5.88)  mem = 0.02 MB
ABC: Mapping (K=6)  :  lut =    235  edge =     984  lev =    5 (2.73)  mem = 0.01 MB
ABC: netlist  : i/o =    286/    140  and =    1005  lev =   12 (5.83)  mem = 0.02 MB
ABC: Mapping (K=6)  :  lut =    235  edge =    1006  lev =    5 (2.68)  mem = 0.01 MB
ABC: netlist  : i/o =    286/    140  and =    1005  lev =   11 (5.78)  mem = 0.02 MB
ABC: Mapping (K=6)  :  lut =    242  edge =     993  lev =    6 (2.85)  mem = 0.01 MB
ABC: netlist  : i/o =    286/    140  and =    1019  lev =   11 (5.84)  mem = 0.03 MB
ABC: Mapping (K=6)  :  lut =    236  edge =    1005  lev =    5 (2.61)  mem = 0.01 MB
ABC: netlist  : i/o =    286/    140  and =    1017  lev =   11 (5.84)  mem = 0.03 MB
ABC: Mapping (K=6)  :  lut =    235  edge =    1003  lev =    5 (2.61)  mem = 0.01 MB
ABC: netlist  : i/o =    286/    140  and =    1017  lev =   11 (5.84)  mem = 0.03 MB
ABC: Mapping (K=6)  :  lut =    235  edge =    1003  lev =    5 (2.61)  mem = 0.01 MB
ABC: netlist  : i/o =    286/    140  and =     922  lev =   11 (5.65)  mem = 0.03 MB
ABC: Mapping (K=6)  :  lut =    222  edge =     945  lev =    6 (2.69)  mem = 0.01 MB
ABC: netlist  : i/o =    286/    140  and =     929  lev =   11 (5.77)  mem = 0.03 MB
ABC: Mapping (K=6)  :  lut =    222  edge =     946  lev =    5 (2.61)  mem = 0.01 MB
ABC: netlist  : i/o =    286/    140  and =    1043  lev =   11 (5.59)  mem = 0.03 MB
ABC: Mapping (K=6)  :  lut =    221  edge =    1004  lev =    5 (2.56)  mem = 0.01 MB
ABC: netlist  : i/o =    286/    140  and =    1046  lev =   11 (5.61)  mem = 0.03 MB
ABC: Mapping (K=6)  :  lut =    220  edge =    1000  lev =    5 (2.54)  mem = 0.01 MB
ABC: netlist  : i/o =    286/    140  and =    1045  lev =   11 (5.61)  mem = 0.03 MB
ABC: Mapping (K=6)  :  lut =    220  edge =    1000  lev =    5 (2.54)  mem = 0.01 MB
ABC: netlist  : i/o =    286/    140  and =    1046  lev =   11 (5.61)  mem = 0.02 MB
ABC: Mapping (K=6)  :  lut =    220  edge =    1000  lev =    5 (2.54)  mem = 0.01 MB
ABC: netlist  : i/o =    286/    140  and =    1046  lev =   11 (5.61)  mem = 0.03 MB
ABC: Mapping (K=6)  :  lut =    220  edge =    1000  lev =    5 (2.54)  mem = 0.01 MB
ABC: netlist  : i/o =    286/    140  and =    1045  lev =   11 (5.60)  mem = 0.02 MB
ABC: Mapping (K=6)  :  lut =    220  edge =    1000  lev =    5 (2.54)  mem = 0.01 MB
ABC: + write_blif <abc-temp-dir>/output.blif 

34.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      220
ABC RESULTS:        internal signals:      533
ABC RESULTS:           input signals:      286
ABC RESULTS:          output signals:      140
Removing temp directory.

35. Executing OPT pass (performing simple optimizations).

35.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module atahost_top.

35.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\atahost_top'.
Removed a total of 0 cells.

35.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \atahost_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

35.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \atahost_top.
Performed a total of 0 changes.

35.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\atahost_top'.
Removed a total of 0 cells.

35.6. Executing OPT_DFF pass (perform DFF optimizations).

35.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \atahost_top..
Removed 0 unused cells and 588 unused wires.
<suppressed ~42 debug messages>

35.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module atahost_top.

35.9. Rerunning OPT passes. (Maybe there is more to do..)

35.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \atahost_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

35.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \atahost_top.
Performed a total of 0 changes.

35.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\atahost_top'.
Removed a total of 0 cells.

35.13. Executing OPT_DFF pass (perform DFF optimizations).

35.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \atahost_top..

35.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module atahost_top.

35.16. Finished OPT passes. (There is nothing left to do.)

36. Executing HIERARCHY pass (managing design hierarchy).

36.1. Analyzing design hierarchy..
Top module:  \atahost_top

36.2. Analyzing design hierarchy..
Top module:  \atahost_top
Removed 0 unused modules.

37. Printing statistics.

=== atahost_top ===

   Number of wires:                412
   Number of wire bits:           1176
   Number of public wires:         227
   Number of public wire bits:     991
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                489
     $_DFFE_PN0P_                  145
     $_DFFE_PN1P_                   31
     $_DFFE_PP_                     16
     $_DFF_PN0_                     57
     $_DFF_PN1_                     14
     $_DFF_P_                        6
     $lut                          220

38. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \atahost_top..
Removed 0 unused cells and 147 unused wires.
<suppressed ~147 debug messages>

39. Executing BLIF backend.

Warnings: 128 unique messages, 149 total
End of script. Logfile hash: 33edfa3041, CPU: user 1.67s system 0.01s, MEM: 20.38 MB peak
Yosys 0.14+36 (git sha1 15a4e900b, gcc 7.1.0 -fPIC -Os)
Time spent: 54% 1x abc (1 sec), 14% 26x opt_expr (0 sec), ...
