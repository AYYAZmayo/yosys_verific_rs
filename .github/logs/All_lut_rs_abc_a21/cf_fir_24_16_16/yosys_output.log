
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.14+36 (git sha1 15a4e900b, gcc 7.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jan22_SW_Release, released at Sat Jan 29 02:42:49 2022.

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jan22_SW_Release, released at Sat Jan 29 02:42:49 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'cf_fir_24_16_16.v'

3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:92: compiling module 'top'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:127: compiling module 'cf_fir_24_16_16_1'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:166: compiling module 'cf_fir_24_16_16_2'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:1793: compiling module 'cf_fir_24_16_16_24'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:1898: compiling module 'cf_fir_24_16_16_25'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:1982: compiling module 'cf_fir_24_16_16_26'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:1170: compiling module 'cf_fir_24_16_16_18'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:1324: compiling module 'cf_fir_24_16_16_19'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:1458: compiling module 'cf_fir_24_16_16_20'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:1572: compiling module 'cf_fir_24_16_16_21'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:1666: compiling module 'cf_fir_24_16_16_22'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:1740: compiling module 'cf_fir_24_16_16_23'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:276: compiling module 'cf_fir_24_16_16_3'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:745: compiling module 'cf_fir_24_16_16_12'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:842: compiling module 'cf_fir_24_16_16_13'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:929: compiling module 'cf_fir_24_16_16_14'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:1006: compiling module 'cf_fir_24_16_16_15'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:1073: compiling module 'cf_fir_24_16_16_16'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:1130: compiling module 'cf_fir_24_16_16_17'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:344: compiling module 'cf_fir_24_16_16_4'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:581: compiling module 'cf_fir_24_16_16_9'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:648: compiling module 'cf_fir_24_16_16_10'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:705: compiling module 'cf_fir_24_16_16_11'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:394: compiling module 'cf_fir_24_16_16_5'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:534: compiling module 'cf_fir_24_16_16_8'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:437: compiling module 'cf_fir_24_16_16_6'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:494: compiling module 'cf_fir_24_16_16_7'
Importing module top.
Importing module cf_fir_24_16_16_1.
Importing module cf_fir_24_16_16_2.
Importing module cf_fir_24_16_16_24.
Importing module cf_fir_24_16_16_18.
Importing module cf_fir_24_16_16_25.
Importing module cf_fir_24_16_16_26.
Importing module cf_fir_24_16_16_3.
Importing module cf_fir_24_16_16_19.
Importing module cf_fir_24_16_16_20.
Importing module cf_fir_24_16_16_21.
Importing module cf_fir_24_16_16_22.
Importing module cf_fir_24_16_16_23.
Importing module cf_fir_24_16_16_12.
Importing module cf_fir_24_16_16_4.
Importing module cf_fir_24_16_16_13.
Importing module cf_fir_24_16_16_14.
Importing module cf_fir_24_16_16_15.
Importing module cf_fir_24_16_16_16.
Importing module cf_fir_24_16_16_17.
Importing module cf_fir_24_16_16_9.
Importing module cf_fir_24_16_16_5.
Importing module cf_fir_24_16_16_10.
Importing module cf_fir_24_16_16_11.
Importing module cf_fir_24_16_16_8.
Importing module cf_fir_24_16_16_6.
Importing module cf_fir_24_16_16_7.

3.1. Analyzing design hierarchy..
Top module:  \top
Used module:     \cf_fir_24_16_16_1
Used module:         \cf_fir_24_16_16_2
Used module:             \cf_fir_24_16_16_3
Used module:                 \cf_fir_24_16_16_4
Used module:                     \cf_fir_24_16_16_5
Used module:                         \cf_fir_24_16_16_6
Used module:                             \cf_fir_24_16_16_7
Used module:                         \cf_fir_24_16_16_8
Used module:                     \cf_fir_24_16_16_9
Used module:                         \cf_fir_24_16_16_10
Used module:                             \cf_fir_24_16_16_11
Used module:                 \cf_fir_24_16_16_12
Used module:                     \cf_fir_24_16_16_13
Used module:                         \cf_fir_24_16_16_14
Used module:                             \cf_fir_24_16_16_15
Used module:                                 \cf_fir_24_16_16_16
Used module:                                     \cf_fir_24_16_16_17
Used module:             \cf_fir_24_16_16_18
Used module:                 \cf_fir_24_16_16_19
Used module:                     \cf_fir_24_16_16_20
Used module:                         \cf_fir_24_16_16_21
Used module:                             \cf_fir_24_16_16_22
Used module:                                 \cf_fir_24_16_16_23
Used module:             \cf_fir_24_16_16_24
Used module:                 \cf_fir_24_16_16_25
Used module:                     \cf_fir_24_16_16_26

3.2. Analyzing design hierarchy..
Top module:  \top
Used module:     \cf_fir_24_16_16_1
Used module:         \cf_fir_24_16_16_2
Used module:             \cf_fir_24_16_16_3
Used module:                 \cf_fir_24_16_16_4
Used module:                     \cf_fir_24_16_16_5
Used module:                         \cf_fir_24_16_16_6
Used module:                             \cf_fir_24_16_16_7
Used module:                         \cf_fir_24_16_16_8
Used module:                     \cf_fir_24_16_16_9
Used module:                         \cf_fir_24_16_16_10
Used module:                             \cf_fir_24_16_16_11
Used module:                 \cf_fir_24_16_16_12
Used module:                     \cf_fir_24_16_16_13
Used module:                         \cf_fir_24_16_16_14
Used module:                             \cf_fir_24_16_16_15
Used module:                                 \cf_fir_24_16_16_16
Used module:                                     \cf_fir_24_16_16_17
Used module:             \cf_fir_24_16_16_18
Used module:                 \cf_fir_24_16_16_19
Used module:                     \cf_fir_24_16_16_20
Used module:                         \cf_fir_24_16_16_21
Used module:                             \cf_fir_24_16_16_22
Used module:                                 \cf_fir_24_16_16_23
Used module:             \cf_fir_24_16_16_24
Used module:                 \cf_fir_24_16_16_25
Used module:                     \cf_fir_24_16_16_26
Removed 0 unused modules.

4. Executing PROC pass (convert processes to netlists).

4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

4.4. Executing PROC_INIT pass (extract init attributes).

4.5. Executing PROC_ARST pass (detect async resets in processes).

4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

4.7. Executing PROC_DLATCH pass (convert process syncs to latches).

4.8. Executing PROC_DFF pass (convert process syncs to FFs).

4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module cf_fir_24_16_16_7.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_6.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_8.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_11.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_10.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_5.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_9.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_17.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_16.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_15.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_14.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_13.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_4.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_12.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_23.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_22.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_21.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_20.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_19.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_3.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_26.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_25.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_18.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_24.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_2.
<suppressed ~2 debug messages>
Optimizing module cf_fir_24_16_16_1.
Optimizing module top.

5. Executing FLATTEN pass (flatten design).
Deleting now unused module cf_fir_24_16_16_7.
Deleting now unused module cf_fir_24_16_16_6.
Deleting now unused module cf_fir_24_16_16_8.
Deleting now unused module cf_fir_24_16_16_11.
Deleting now unused module cf_fir_24_16_16_10.
Deleting now unused module cf_fir_24_16_16_5.
Deleting now unused module cf_fir_24_16_16_9.
Deleting now unused module cf_fir_24_16_16_17.
Deleting now unused module cf_fir_24_16_16_16.
Deleting now unused module cf_fir_24_16_16_15.
Deleting now unused module cf_fir_24_16_16_14.
Deleting now unused module cf_fir_24_16_16_13.
Deleting now unused module cf_fir_24_16_16_4.
Deleting now unused module cf_fir_24_16_16_12.
Deleting now unused module cf_fir_24_16_16_23.
Deleting now unused module cf_fir_24_16_16_22.
Deleting now unused module cf_fir_24_16_16_21.
Deleting now unused module cf_fir_24_16_16_20.
Deleting now unused module cf_fir_24_16_16_19.
Deleting now unused module cf_fir_24_16_16_3.
Deleting now unused module cf_fir_24_16_16_26.
Deleting now unused module cf_fir_24_16_16_25.
Deleting now unused module cf_fir_24_16_16_18.
Deleting now unused module cf_fir_24_16_16_24.
Deleting now unused module cf_fir_24_16_16_2.
Deleting now unused module cf_fir_24_16_16_1.
<suppressed ~26 debug messages>

6. Executing TRIBUF pass.

7. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 3 unused cells and 14661 unused wires.
<suppressed ~437 debug messages>

9. Executing CHECK pass (checking for obvious problems).
Checking module top...
Found and reported 0 problems.

10. Executing DEMINOUT pass (demote inout ports to input or output).

11. Executing OPT pass (performing simple optimizations).

11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~129 debug messages>

11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~25 debug messages>

11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

11.6. Executing OPT_DFF pass (perform DFF optimizations).
Removing never-active async load on $flatten\s1.\s3.\s8.\s8.\s8.\s8.\s13.$verific$n9_reg$cf_fir_24_16_16.v:527$15599 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s8.\s8.\s8.\s13.$verific$n6_reg$cf_fir_24_16_16.v:527$15598 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s6.\s8.\s8.$verific$n4_reg$cf_fir_24_16_16.v:2037$5674 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s8.\s8.\s8.$verific$n6_reg$cf_fir_24_16_16.v:481$15386 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s8.\s8.\s8.$verific$n12_reg$cf_fir_24_16_16.v:481$15387 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s6.\s8.\s8.$verific$n5_reg$cf_fir_24_16_16.v:2037$5675 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s6.\s8.\s8.$verific$n6_reg$cf_fir_24_16_16.v:2037$5676 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s8.\s8.\s7.$verific$n6_reg$cf_fir_24_16_16.v:571$15350 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s8.\s8.\s7.$verific$n12_reg$cf_fir_24_16_16.v:571$15351 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s6.$verific$n4_reg$cf_fir_24_16_16.v:1872$3762 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s6.$verific$n3_reg$cf_fir_24_16_16.v:1872$3761 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s6.$verific$n2_reg$cf_fir_24_16_16.v:1872$3760 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s6.$verific$n1_reg$cf_fir_24_16_16.v:1872$3759 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s8.\s8.$verific$n6_reg$cf_fir_24_16_16.v:431$14487 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s6.$verific$n6_reg$cf_fir_24_16_16.v:1872$3764 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s6.$verific$n5_reg$cf_fir_24_16_16.v:1872$3763 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s8.\s7.\s13.\s13.$verific$n9_reg$cf_fir_24_16_16.v:738$15319 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s8.\s7.\s13.\s13.$verific$n6_reg$cf_fir_24_16_16.v:738$15318 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.$verific$n5_reg$cf_fir_24_16_16.v:268$957 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.$verific$n3_reg$cf_fir_24_16_16.v:268$956 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s8.\s7.\s13.$verific$n6_reg$cf_fir_24_16_16.v:692$15111 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s8.\s7.\s13.$verific$n12_reg$cf_fir_24_16_16.v:692$15112 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.$verific$n2_reg$cf_fir_24_16_16.v:268$955 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.$verific$n1_reg$cf_fir_24_16_16.v:268$954 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s8.\s7.$verific$n6_reg$cf_fir_24_16_16.v:633$14081 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s8.\s7.$verific$n12_reg$cf_fir_24_16_16.v:633$14082 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s6.\s8.\s8.$verific$n8_reg$cf_fir_24_16_16.v:2037$5678 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s6.\s8.\s8.$verific$n7_reg$cf_fir_24_16_16.v:2037$5677 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s8.$verific$n6_reg$cf_fir_24_16_16.v:388$11186 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.\s13.\s13.$verific$n9_reg$cf_fir_24_16_16.v:1163$14050 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.\s13.\s13.$verific$n6_reg$cf_fir_24_16_16.v:1163$14049 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s6.\s8.$verific$n1_reg$cf_fir_24_16_16.v:1963$5448 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.\s13.$verific$n6_reg$cf_fir_24_16_16.v:1117$13847 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.\s13.$verific$n12_reg$cf_fir_24_16_16.v:1117$13848 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.$verific$n6_reg$cf_fir_24_16_16.v:1058$13448 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.$verific$n12_reg$cf_fir_24_16_16.v:1058$13449 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s6.\s8.$verific$n3_reg$cf_fir_24_16_16.v:1963$5450 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s6.\s8.$verific$n2_reg$cf_fir_24_16_16.v:1963$5449 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s6.\s8.$verific$n5_reg$cf_fir_24_16_16.v:1963$5452 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s6.\s8.$verific$n4_reg$cf_fir_24_16_16.v:1963$5451 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s7.\s13.\s13.$verific$n6_reg$cf_fir_24_16_16.v:989$12853 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s7.\s13.\s13.$verific$n12_reg$cf_fir_24_16_16.v:989$12854 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s7.\s13.$verific$n6_reg$cf_fir_24_16_16.v:910$12062 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s7.\s13.$verific$n12_reg$cf_fir_24_16_16.v:910$12063 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s6.\s8.$verific$n7_reg$cf_fir_24_16_16.v:1963$5454 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s6.\s8.$verific$n6_reg$cf_fir_24_16_16.v:1963$5453 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s6.\s8.\s8.$verific$n2_reg$cf_fir_24_16_16.v:2037$5672 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s7.$verific$n6_reg$cf_fir_24_16_16.v:821$10203 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.\s7.$verific$n12_reg$cf_fir_24_16_16.v:821$10204 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s6.\s8.\s8.$verific$n3_reg$cf_fir_24_16_16.v:2037$5673 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s6.$verific$n7_reg$cf_fir_24_16_16.v:1872$3765 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s8.$verific$n6_reg$cf_fir_24_16_16.v:338$5709 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s6.\s8.\s8.$verific$n1_reg$cf_fir_24_16_16.v:2037$5671 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.\s9.$verific$n8_reg$cf_fir_24_16_16.v:1783$10166 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.\s9.$verific$n6_reg$cf_fir_24_16_16.v:1783$10165 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.\s9.$verific$n4_reg$cf_fir_24_16_16.v:1783$10164 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.\s9.$verific$n2_reg$cf_fir_24_16_16.v:1783$10163 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.\s9.$verific$n8_reg$cf_fir_24_16_16.v:1549$8447 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.\s9.$verific$n6_reg$cf_fir_24_16_16.v:1549$8446 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.$verific$n8_reg$cf_fir_24_16_16.v:1725$9853 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.$verific$n6_reg$cf_fir_24_16_16.v:1725$9852 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.$verific$n4_reg$cf_fir_24_16_16.v:1725$9851 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.$verific$n2_reg$cf_fir_24_16_16.v:1725$9850 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.\s9.$verific$n4_reg$cf_fir_24_16_16.v:1549$8445 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.\s9.$verific$n2_reg$cf_fir_24_16_16.v:1549$8444 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.$verific$n4_reg$cf_fir_24_16_16.v:1431$7352 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.$verific$n2_reg$cf_fir_24_16_16.v:1431$7351 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.$verific$n8_reg$cf_fir_24_16_16.v:1431$7354 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.$verific$n6_reg$cf_fir_24_16_16.v:1431$7353 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.\s9.\s9.$verific$n8_reg$cf_fir_24_16_16.v:1647$9280 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.\s9.\s9.$verific$n6_reg$cf_fir_24_16_16.v:1647$9279 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.\s9.\s9.$verific$n4_reg$cf_fir_24_16_16.v:1647$9278 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.\s9.\s9.$verific$n2_reg$cf_fir_24_16_16.v:1647$9277 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.$verific$n8_reg$cf_fir_24_16_16.v:1293$4086 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.$verific$n6_reg$cf_fir_24_16_16.v:1293$4085 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.$verific$n4_reg$cf_fir_24_16_16.v:1293$4084 ($aldff) from module top.
Removing never-active async load on $flatten\s1.\s3.\s7.$verific$n2_reg$cf_fir_24_16_16.v:1293$4083 ($aldff) from module top.

11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 129 unused wires.
<suppressed ~1 debug messages>

11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

11.9. Rerunning OPT passes. (Maybe there is more to do..)

11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~25 debug messages>

11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

11.13. Executing OPT_DFF pass (perform DFF optimizations).

11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

11.16. Finished OPT passes. (There is nothing left to do.)

12. Executing FSM pass (extract and optimize FSM).

12.1. Executing FSM_DETECT pass (finding FSMs in design).

12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

13. Executing OPT pass (performing simple optimizations).

13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~25 debug messages>

13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $flatten\s1.\s3.\s6.\s8.\s8.$verific$n8_reg$cf_fir_24_16_16.v:2037$5678 ($dff) from module top (D = \s1.s3.s6.s8.s8.n7, Q = \s1.s3.s6.s8.s8.n8, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.\s6.\s8.\s8.$verific$n7_reg$cf_fir_24_16_16.v:2037$5677 ($dff) from module top (D = \s1.s3.s6.s8.s8.n6, Q = \s1.s3.s6.s8.s8.n7, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.\s6.\s8.\s8.$verific$n6_reg$cf_fir_24_16_16.v:2037$5676 ($dff) from module top (D = \s1.s3.s6.s8.s8.n5, Q = \s1.s3.s6.s8.s8.n6, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.\s6.\s8.\s8.$verific$n5_reg$cf_fir_24_16_16.v:2037$5675 ($dff) from module top (D = \s1.s3.s6.s8.s8.n4, Q = \s1.s3.s6.s8.s8.n5, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.\s6.\s8.\s8.$verific$n4_reg$cf_fir_24_16_16.v:2037$5674 ($dff) from module top (D = \s1.s3.s6.s8.s8.n3, Q = \s1.s3.s6.s8.s8.n4, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.\s6.\s8.\s8.$verific$n3_reg$cf_fir_24_16_16.v:2037$5673 ($dff) from module top (D = \s1.s3.s6.s8.s8.n2, Q = \s1.s3.s6.s8.s8.n3, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.\s6.\s8.\s8.$verific$n2_reg$cf_fir_24_16_16.v:2037$5672 ($dff) from module top (D = \s1.s3.s6.s8.s8.n1, Q = \s1.s3.s6.s8.s8.n2, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.\s6.\s8.\s8.$verific$n1_reg$cf_fir_24_16_16.v:2037$5671 ($dff) from module top (D = \s1.s3.s6.s8.n7, Q = \s1.s3.s6.s8.s8.n1, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.\s6.\s8.$verific$n7_reg$cf_fir_24_16_16.v:1963$5454 ($dff) from module top (D = \s1.s3.s6.s8.n6, Q = \s1.s3.s6.s8.n7, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.\s6.\s8.$verific$n6_reg$cf_fir_24_16_16.v:1963$5453 ($dff) from module top (D = \s1.s3.s6.s8.n5, Q = \s1.s3.s6.s8.n6, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.\s6.\s8.$verific$n5_reg$cf_fir_24_16_16.v:1963$5452 ($dff) from module top (D = \s1.s3.s6.s8.n4, Q = \s1.s3.s6.s8.n5, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.\s6.\s8.$verific$n4_reg$cf_fir_24_16_16.v:1963$5451 ($dff) from module top (D = \s1.s3.s6.s8.n3, Q = \s1.s3.s6.s8.n4, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.\s6.\s8.$verific$n3_reg$cf_fir_24_16_16.v:1963$5450 ($dff) from module top (D = \s1.s3.s6.s8.n2, Q = \s1.s3.s6.s8.n3, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.\s6.\s8.$verific$n2_reg$cf_fir_24_16_16.v:1963$5449 ($dff) from module top (D = \s1.s3.s6.s8.n1, Q = \s1.s3.s6.s8.n2, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.\s6.\s8.$verific$n1_reg$cf_fir_24_16_16.v:1963$5448 ($dff) from module top (D = \s1.s3.s6.n7, Q = \s1.s3.s6.s8.n1, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.\s6.$verific$n7_reg$cf_fir_24_16_16.v:1872$3765 ($dff) from module top (D = \s1.s3.s6.n6, Q = \s1.s3.s6.n7, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.\s6.$verific$n6_reg$cf_fir_24_16_16.v:1872$3764 ($dff) from module top (D = \s1.s3.s6.n5, Q = \s1.s3.s6.n6, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.\s6.$verific$n5_reg$cf_fir_24_16_16.v:1872$3763 ($dff) from module top (D = \s1.s3.s6.n4, Q = \s1.s3.s6.n5, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.\s6.$verific$n4_reg$cf_fir_24_16_16.v:1872$3762 ($dff) from module top (D = \s1.s3.s6.n3, Q = \s1.s3.s6.n4, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.\s6.$verific$n3_reg$cf_fir_24_16_16.v:1872$3761 ($dff) from module top (D = \s1.s3.s6.n2, Q = \s1.s3.s6.n3, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.\s6.$verific$n2_reg$cf_fir_24_16_16.v:1872$3760 ($dff) from module top (D = \s1.s3.s6.n1, Q = \s1.s3.s6.n2, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.\s6.$verific$n1_reg$cf_fir_24_16_16.v:1872$3759 ($dff) from module top (D = \s1.s3.n3, Q = \s1.s3.s6.n1, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.$verific$n3_reg$cf_fir_24_16_16.v:268$956 ($dff) from module top (D = \s1.s3.n2, Q = \s1.s3.n3, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.$verific$n2_reg$cf_fir_24_16_16.v:268$955 ($dff) from module top (D = \s1.s3.n1, Q = \s1.s3.n2, rval = 16'0000000000000000).
Adding SRST signal on $flatten\s1.\s3.$verific$n1_reg$cf_fir_24_16_16.v:268$954 ($dff) from module top (D = \data_i, Q = \s1.s3.n1, rval = 16'0000000000000000).

13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 25 unused cells and 25 unused wires.
<suppressed ~26 debug messages>

13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

13.9. Rerunning OPT passes. (Maybe there is more to do..)

13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

13.13. Executing OPT_DFF pass (perform DFF optimizations).

13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

13.16. Finished OPT passes. (There is nothing left to do.)

14. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 34) from FF cell top.$flatten\s1.\s3.\s8.\s8.\s7.\s13.\s13.$verific$n9_reg$cf_fir_24_16_16.v:738$15319 ($dff).
Removed top 2 bits (of 35) from FF cell top.$flatten\s1.\s3.\s8.\s8.\s8.\s8.\s13.$verific$n9_reg$cf_fir_24_16_16.v:527$15599 ($dff).
Removed top 1 bits (of 33) from FF cell top.$flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.\s13.\s13.$verific$n9_reg$cf_fir_24_16_16.v:1163$14050 ($dff).
Removed top 1 bits (of 33) from FF cell top.$flatten\s1.\s3.\s8.\s8.\s7.\s13.\s13.$verific$n9_reg$cf_fir_24_16_16.v:738$15319 ($dff).
Removed top 1 bits (of 33) from FF cell top.$flatten\s1.\s3.\s8.\s8.\s8.\s8.\s13.$verific$n9_reg$cf_fir_24_16_16.v:527$15599 ($dff).

15. Executing PEEPOPT pass (run peephole optimizers).

16. Executing PMUXTREE pass.

17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module top:
  creating $macc model for $flatten\s1.\s3.$verific$mult_32$cf_fir_24_16_16.v:269$958 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.$verific$mult_3$cf_fir_24_16_16.v:1274$4068 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.$verific$mult_34$cf_fir_24_16_16.v:1294$4087 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.$verific$mult_36$cf_fir_24_16_16.v:1295$4089 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.$verific$mult_38$cf_fir_24_16_16.v:1296$4091 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.\s9.$verific$mult_3$cf_fir_24_16_16.v:1412$7336 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.\s9.$verific$mult_34$cf_fir_24_16_16.v:1432$7355 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.\s9.$verific$mult_36$cf_fir_24_16_16.v:1433$7357 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.\s9.$verific$mult_38$cf_fir_24_16_16.v:1434$7359 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.\s9.\s9.$verific$mult_3$cf_fir_24_16_16.v:1530$8429 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.\s9.\s9.$verific$mult_34$cf_fir_24_16_16.v:1550$8448 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.\s9.\s9.$verific$mult_36$cf_fir_24_16_16.v:1551$8450 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.\s9.\s9.$verific$mult_38$cf_fir_24_16_16.v:1552$8452 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.\s9.\s9.\s9.$verific$mult_3$cf_fir_24_16_16.v:1628$9262 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.\s9.\s9.\s9.$verific$mult_34$cf_fir_24_16_16.v:1648$9281 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.\s9.\s9.\s9.$verific$mult_36$cf_fir_24_16_16.v:1649$9283 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.\s9.\s9.\s9.$verific$mult_38$cf_fir_24_16_16.v:1650$9285 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.$verific$mult_3$cf_fir_24_16_16.v:1706$9835 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.$verific$mult_34$cf_fir_24_16_16.v:1726$9854 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.$verific$mult_36$cf_fir_24_16_16.v:1727$9856 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.$verific$mult_38$cf_fir_24_16_16.v:1728$9858 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.\s9.$verific$mult_3$cf_fir_24_16_16.v:1764$10148 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.\s9.$verific$mult_34$cf_fir_24_16_16.v:1784$10167 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.\s9.$verific$mult_36$cf_fir_24_16_16.v:1785$10169 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.\s9.$verific$mult_38$cf_fir_24_16_16.v:1786$10171 ($mul).
  creating $macc model for $flatten\s1.\s3.\s8.$verific$add_7$cf_fir_24_16_16.v:330$5701 ($add).
  creating $macc model for $flatten\s1.\s3.\s8.\s7.$verific$add_28$cf_fir_24_16_16.v:826$10209 ($add).
  creating $macc model for $flatten\s1.\s3.\s8.\s7.$verific$add_7$cf_fir_24_16_16.v:810$10194 ($add).
  creating $macc model for $flatten\s1.\s3.\s8.\s7.\s13.$verific$add_28$cf_fir_24_16_16.v:915$12068 ($add).
  creating $macc model for $flatten\s1.\s3.\s8.\s7.\s13.$verific$add_7$cf_fir_24_16_16.v:899$12053 ($add).
  creating $macc model for $flatten\s1.\s3.\s8.\s7.\s13.\s13.$verific$add_28$cf_fir_24_16_16.v:994$12859 ($add).
  creating $macc model for $flatten\s1.\s3.\s8.\s7.\s13.\s13.$verific$add_7$cf_fir_24_16_16.v:978$12844 ($add).
  creating $macc model for $flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.$verific$add_28$cf_fir_24_16_16.v:1063$13454 ($add).
  creating $macc model for $flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.$verific$add_7$cf_fir_24_16_16.v:1047$13439 ($add).
  creating $macc model for $flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.\s13.$verific$add_28$cf_fir_24_16_16.v:1122$13853 ($add).
  creating $macc model for $flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.\s13.$verific$add_7$cf_fir_24_16_16.v:1106$13838 ($add).
  creating $macc model for $flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.\s13.\s13.$verific$add_7$cf_fir_24_16_16.v:1152$14040 ($add).
  creating $macc model for $flatten\s1.\s3.\s8.\s8.$verific$add_7$cf_fir_24_16_16.v:380$11178 ($add).
  creating $macc model for $flatten\s1.\s3.\s8.\s8.\s7.$verific$add_28$cf_fir_24_16_16.v:638$14087 ($add).
  creating $macc model for $flatten\s1.\s3.\s8.\s8.\s7.$verific$add_7$cf_fir_24_16_16.v:622$14072 ($add).
  creating $macc model for $flatten\s1.\s3.\s8.\s8.\s7.\s13.$verific$add_28$cf_fir_24_16_16.v:697$15117 ($add).
  creating $macc model for $flatten\s1.\s3.\s8.\s8.\s7.\s13.$verific$add_7$cf_fir_24_16_16.v:681$15102 ($add).
  creating $macc model for $flatten\s1.\s3.\s8.\s8.\s7.\s13.\s13.$verific$add_7$cf_fir_24_16_16.v:727$15309 ($add).
  creating $macc model for $flatten\s1.\s3.\s8.\s8.\s8.$verific$add_7$cf_fir_24_16_16.v:423$14479 ($add).
  creating $macc model for $flatten\s1.\s3.\s8.\s8.\s8.\s7.$verific$add_28$cf_fir_24_16_16.v:576$15356 ($add).
  creating $macc model for $flatten\s1.\s3.\s8.\s8.\s8.\s7.$verific$add_7$cf_fir_24_16_16.v:560$15341 ($add).
  creating $macc model for $flatten\s1.\s3.\s8.\s8.\s8.\s8.$verific$add_28$cf_fir_24_16_16.v:486$15392 ($add).
  creating $macc model for $flatten\s1.\s3.\s8.\s8.\s8.\s8.$verific$add_7$cf_fir_24_16_16.v:470$15377 ($add).
  creating $macc model for $flatten\s1.\s3.\s8.\s8.\s8.\s8.\s13.$verific$add_7$cf_fir_24_16_16.v:516$15589 ($add).
  creating $alu model for $macc $flatten\s1.\s3.\s8.\s8.\s8.\s8.\s13.$verific$add_7$cf_fir_24_16_16.v:516$15589.
  creating $alu model for $macc $flatten\s1.\s3.\s8.\s8.\s8.\s8.$verific$add_7$cf_fir_24_16_16.v:470$15377.
  creating $alu model for $macc $flatten\s1.\s3.\s8.\s8.\s8.\s8.$verific$add_28$cf_fir_24_16_16.v:486$15392.
  creating $alu model for $macc $flatten\s1.\s3.\s8.\s8.\s8.\s7.$verific$add_7$cf_fir_24_16_16.v:560$15341.
  creating $alu model for $macc $flatten\s1.\s3.\s8.\s8.\s8.\s7.$verific$add_28$cf_fir_24_16_16.v:576$15356.
  creating $alu model for $macc $flatten\s1.\s3.\s8.\s8.\s8.$verific$add_7$cf_fir_24_16_16.v:423$14479.
  creating $alu model for $macc $flatten\s1.\s3.\s8.\s8.\s7.\s13.\s13.$verific$add_7$cf_fir_24_16_16.v:727$15309.
  creating $alu model for $macc $flatten\s1.\s3.\s8.\s8.\s7.\s13.$verific$add_7$cf_fir_24_16_16.v:681$15102.
  creating $alu model for $macc $flatten\s1.\s3.\s8.\s8.\s7.\s13.$verific$add_28$cf_fir_24_16_16.v:697$15117.
  creating $alu model for $macc $flatten\s1.\s3.\s8.\s8.\s7.$verific$add_7$cf_fir_24_16_16.v:622$14072.
  creating $alu model for $macc $flatten\s1.\s3.\s8.\s8.\s7.$verific$add_28$cf_fir_24_16_16.v:638$14087.
  creating $alu model for $macc $flatten\s1.\s3.\s8.\s8.$verific$add_7$cf_fir_24_16_16.v:380$11178.
  creating $alu model for $macc $flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.\s13.\s13.$verific$add_7$cf_fir_24_16_16.v:1152$14040.
  creating $alu model for $macc $flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.\s13.$verific$add_7$cf_fir_24_16_16.v:1106$13838.
  creating $alu model for $macc $flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.\s13.$verific$add_28$cf_fir_24_16_16.v:1122$13853.
  creating $alu model for $macc $flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.$verific$add_7$cf_fir_24_16_16.v:1047$13439.
  creating $alu model for $macc $flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.$verific$add_28$cf_fir_24_16_16.v:1063$13454.
  creating $alu model for $macc $flatten\s1.\s3.\s8.\s7.\s13.\s13.$verific$add_7$cf_fir_24_16_16.v:978$12844.
  creating $alu model for $macc $flatten\s1.\s3.\s8.\s7.\s13.\s13.$verific$add_28$cf_fir_24_16_16.v:994$12859.
  creating $alu model for $macc $flatten\s1.\s3.\s8.\s7.\s13.$verific$add_7$cf_fir_24_16_16.v:899$12053.
  creating $alu model for $macc $flatten\s1.\s3.\s8.\s7.\s13.$verific$add_28$cf_fir_24_16_16.v:915$12068.
  creating $alu model for $macc $flatten\s1.\s3.\s8.\s7.$verific$add_7$cf_fir_24_16_16.v:810$10194.
  creating $alu model for $macc $flatten\s1.\s3.\s8.\s7.$verific$add_28$cf_fir_24_16_16.v:826$10209.
  creating $alu model for $macc $flatten\s1.\s3.\s8.$verific$add_7$cf_fir_24_16_16.v:330$5701.
  creating $macc cell for $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.\s9.$verific$mult_38$cf_fir_24_16_16.v:1786$10171: $auto$alumacc.cc:365:replace_macc$15629
  creating $macc cell for $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.\s9.$verific$mult_36$cf_fir_24_16_16.v:1785$10169: $auto$alumacc.cc:365:replace_macc$15630
  creating $macc cell for $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.\s9.$verific$mult_34$cf_fir_24_16_16.v:1784$10167: $auto$alumacc.cc:365:replace_macc$15631
  creating $macc cell for $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.\s9.$verific$mult_3$cf_fir_24_16_16.v:1764$10148: $auto$alumacc.cc:365:replace_macc$15632
  creating $macc cell for $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.$verific$mult_38$cf_fir_24_16_16.v:1728$9858: $auto$alumacc.cc:365:replace_macc$15633
  creating $macc cell for $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.$verific$mult_36$cf_fir_24_16_16.v:1727$9856: $auto$alumacc.cc:365:replace_macc$15634
  creating $macc cell for $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.$verific$mult_34$cf_fir_24_16_16.v:1726$9854: $auto$alumacc.cc:365:replace_macc$15635
  creating $macc cell for $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.$verific$mult_3$cf_fir_24_16_16.v:1706$9835: $auto$alumacc.cc:365:replace_macc$15636
  creating $macc cell for $flatten\s1.\s3.\s7.\s9.\s9.\s9.$verific$mult_38$cf_fir_24_16_16.v:1650$9285: $auto$alumacc.cc:365:replace_macc$15637
  creating $macc cell for $flatten\s1.\s3.\s7.\s9.\s9.\s9.$verific$mult_36$cf_fir_24_16_16.v:1649$9283: $auto$alumacc.cc:365:replace_macc$15638
  creating $macc cell for $flatten\s1.\s3.\s7.\s9.\s9.\s9.$verific$mult_34$cf_fir_24_16_16.v:1648$9281: $auto$alumacc.cc:365:replace_macc$15639
  creating $macc cell for $flatten\s1.\s3.\s7.\s9.\s9.\s9.$verific$mult_3$cf_fir_24_16_16.v:1628$9262: $auto$alumacc.cc:365:replace_macc$15640
  creating $macc cell for $flatten\s1.\s3.\s7.\s9.\s9.$verific$mult_38$cf_fir_24_16_16.v:1552$8452: $auto$alumacc.cc:365:replace_macc$15641
  creating $macc cell for $flatten\s1.\s3.\s7.\s9.\s9.$verific$mult_36$cf_fir_24_16_16.v:1551$8450: $auto$alumacc.cc:365:replace_macc$15642
  creating $macc cell for $flatten\s1.\s3.\s7.\s9.\s9.$verific$mult_34$cf_fir_24_16_16.v:1550$8448: $auto$alumacc.cc:365:replace_macc$15643
  creating $macc cell for $flatten\s1.\s3.\s7.\s9.\s9.$verific$mult_3$cf_fir_24_16_16.v:1530$8429: $auto$alumacc.cc:365:replace_macc$15644
  creating $macc cell for $flatten\s1.\s3.\s7.\s9.$verific$mult_38$cf_fir_24_16_16.v:1434$7359: $auto$alumacc.cc:365:replace_macc$15645
  creating $macc cell for $flatten\s1.\s3.\s7.\s9.$verific$mult_36$cf_fir_24_16_16.v:1433$7357: $auto$alumacc.cc:365:replace_macc$15646
  creating $macc cell for $flatten\s1.\s3.\s7.\s9.$verific$mult_34$cf_fir_24_16_16.v:1432$7355: $auto$alumacc.cc:365:replace_macc$15647
  creating $macc cell for $flatten\s1.\s3.\s7.\s9.$verific$mult_3$cf_fir_24_16_16.v:1412$7336: $auto$alumacc.cc:365:replace_macc$15648
  creating $macc cell for $flatten\s1.\s3.\s7.$verific$mult_38$cf_fir_24_16_16.v:1296$4091: $auto$alumacc.cc:365:replace_macc$15649
  creating $macc cell for $flatten\s1.\s3.\s7.$verific$mult_36$cf_fir_24_16_16.v:1295$4089: $auto$alumacc.cc:365:replace_macc$15650
  creating $macc cell for $flatten\s1.\s3.\s7.$verific$mult_34$cf_fir_24_16_16.v:1294$4087: $auto$alumacc.cc:365:replace_macc$15651
  creating $macc cell for $flatten\s1.\s3.\s7.$verific$mult_3$cf_fir_24_16_16.v:1274$4068: $auto$alumacc.cc:365:replace_macc$15652
  creating $macc cell for $flatten\s1.\s3.$verific$mult_32$cf_fir_24_16_16.v:269$958: $auto$alumacc.cc:365:replace_macc$15653
  creating $alu cell for $flatten\s1.\s3.\s8.$verific$add_7$cf_fir_24_16_16.v:330$5701: $auto$alumacc.cc:485:replace_alu$15654
  creating $alu cell for $flatten\s1.\s3.\s8.\s7.$verific$add_28$cf_fir_24_16_16.v:826$10209: $auto$alumacc.cc:485:replace_alu$15657
  creating $alu cell for $flatten\s1.\s3.\s8.\s7.$verific$add_7$cf_fir_24_16_16.v:810$10194: $auto$alumacc.cc:485:replace_alu$15660
  creating $alu cell for $flatten\s1.\s3.\s8.\s7.\s13.$verific$add_28$cf_fir_24_16_16.v:915$12068: $auto$alumacc.cc:485:replace_alu$15663
  creating $alu cell for $flatten\s1.\s3.\s8.\s7.\s13.$verific$add_7$cf_fir_24_16_16.v:899$12053: $auto$alumacc.cc:485:replace_alu$15666
  creating $alu cell for $flatten\s1.\s3.\s8.\s7.\s13.\s13.$verific$add_28$cf_fir_24_16_16.v:994$12859: $auto$alumacc.cc:485:replace_alu$15669
  creating $alu cell for $flatten\s1.\s3.\s8.\s7.\s13.\s13.$verific$add_7$cf_fir_24_16_16.v:978$12844: $auto$alumacc.cc:485:replace_alu$15672
  creating $alu cell for $flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.$verific$add_28$cf_fir_24_16_16.v:1063$13454: $auto$alumacc.cc:485:replace_alu$15675
  creating $alu cell for $flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.$verific$add_7$cf_fir_24_16_16.v:1047$13439: $auto$alumacc.cc:485:replace_alu$15678
  creating $alu cell for $flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.\s13.$verific$add_28$cf_fir_24_16_16.v:1122$13853: $auto$alumacc.cc:485:replace_alu$15681
  creating $alu cell for $flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.\s13.$verific$add_7$cf_fir_24_16_16.v:1106$13838: $auto$alumacc.cc:485:replace_alu$15684
  creating $alu cell for $flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.\s13.\s13.$verific$add_7$cf_fir_24_16_16.v:1152$14040: $auto$alumacc.cc:485:replace_alu$15687
  creating $alu cell for $flatten\s1.\s3.\s8.\s8.$verific$add_7$cf_fir_24_16_16.v:380$11178: $auto$alumacc.cc:485:replace_alu$15690
  creating $alu cell for $flatten\s1.\s3.\s8.\s8.\s7.$verific$add_28$cf_fir_24_16_16.v:638$14087: $auto$alumacc.cc:485:replace_alu$15693
  creating $alu cell for $flatten\s1.\s3.\s8.\s8.\s7.$verific$add_7$cf_fir_24_16_16.v:622$14072: $auto$alumacc.cc:485:replace_alu$15696
  creating $alu cell for $flatten\s1.\s3.\s8.\s8.\s7.\s13.$verific$add_28$cf_fir_24_16_16.v:697$15117: $auto$alumacc.cc:485:replace_alu$15699
  creating $alu cell for $flatten\s1.\s3.\s8.\s8.\s7.\s13.$verific$add_7$cf_fir_24_16_16.v:681$15102: $auto$alumacc.cc:485:replace_alu$15702
  creating $alu cell for $flatten\s1.\s3.\s8.\s8.\s7.\s13.\s13.$verific$add_7$cf_fir_24_16_16.v:727$15309: $auto$alumacc.cc:485:replace_alu$15705
  creating $alu cell for $flatten\s1.\s3.\s8.\s8.\s8.$verific$add_7$cf_fir_24_16_16.v:423$14479: $auto$alumacc.cc:485:replace_alu$15708
  creating $alu cell for $flatten\s1.\s3.\s8.\s8.\s8.\s7.$verific$add_28$cf_fir_24_16_16.v:576$15356: $auto$alumacc.cc:485:replace_alu$15711
  creating $alu cell for $flatten\s1.\s3.\s8.\s8.\s8.\s7.$verific$add_7$cf_fir_24_16_16.v:560$15341: $auto$alumacc.cc:485:replace_alu$15714
  creating $alu cell for $flatten\s1.\s3.\s8.\s8.\s8.\s8.$verific$add_28$cf_fir_24_16_16.v:486$15392: $auto$alumacc.cc:485:replace_alu$15717
  creating $alu cell for $flatten\s1.\s3.\s8.\s8.\s8.\s8.$verific$add_7$cf_fir_24_16_16.v:470$15377: $auto$alumacc.cc:485:replace_alu$15720
  creating $alu cell for $flatten\s1.\s3.\s8.\s8.\s8.\s8.\s13.$verific$add_7$cf_fir_24_16_16.v:516$15589: $auto$alumacc.cc:485:replace_alu$15723
  created 24 $alu and 25 $macc cells.

19. Executing OPT pass (performing simple optimizations).

19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

19.6. Executing OPT_DFF pass (perform DFF optimizations).

19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

19.9. Finished OPT passes. (There is nothing left to do.)

20. Executing MEMORY pass.

20.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

20.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

20.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

20.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

20.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

20.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

20.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

20.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

20.9. Executing MEMORY_COLLECT pass (generating $mem cells).

21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

23. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping top.$auto$ff.cc:262:slice$15604 ($sdff).
Mapping top.$auto$ff.cc:262:slice$15605 ($sdff).
Mapping top.$auto$ff.cc:262:slice$15606 ($sdff).
Mapping top.$auto$ff.cc:262:slice$15607 ($sdff).
Mapping top.$auto$ff.cc:262:slice$15608 ($sdff).
Mapping top.$auto$ff.cc:262:slice$15609 ($sdff).
Mapping top.$auto$ff.cc:262:slice$15610 ($sdff).
Mapping top.$auto$ff.cc:262:slice$15611 ($sdff).
Mapping top.$auto$ff.cc:262:slice$15612 ($sdff).
Mapping top.$auto$ff.cc:262:slice$15613 ($sdff).
Mapping top.$auto$ff.cc:262:slice$15614 ($sdff).
Mapping top.$auto$ff.cc:262:slice$15615 ($sdff).
Mapping top.$auto$ff.cc:262:slice$15616 ($sdff).
Mapping top.$auto$ff.cc:262:slice$15617 ($sdff).
Mapping top.$auto$ff.cc:262:slice$15618 ($sdff).
Mapping top.$auto$ff.cc:262:slice$15619 ($sdff).
Mapping top.$auto$ff.cc:262:slice$15620 ($sdff).
Mapping top.$auto$ff.cc:262:slice$15621 ($sdff).
Mapping top.$auto$ff.cc:262:slice$15622 ($sdff).
Mapping top.$auto$ff.cc:262:slice$15623 ($sdff).
Mapping top.$auto$ff.cc:262:slice$15624 ($sdff).
Mapping top.$auto$ff.cc:262:slice$15625 ($sdff).
Mapping top.$auto$ff.cc:262:slice$15626 ($sdff).
Mapping top.$auto$ff.cc:262:slice$15627 ($sdff).
Mapping top.$auto$ff.cc:262:slice$15628 ($sdff).
Mapping top.$flatten\s1.\s3.$verific$n5_reg$cf_fir_24_16_16.v:268$957 ($dff).
Mapping top.$flatten\s1.\s3.\s7.$verific$n2_reg$cf_fir_24_16_16.v:1293$4083 ($dff).
Mapping top.$flatten\s1.\s3.\s7.$verific$n4_reg$cf_fir_24_16_16.v:1293$4084 ($dff).
Mapping top.$flatten\s1.\s3.\s7.$verific$n6_reg$cf_fir_24_16_16.v:1293$4085 ($dff).
Mapping top.$flatten\s1.\s3.\s7.$verific$n8_reg$cf_fir_24_16_16.v:1293$4086 ($dff).
Mapping top.$flatten\s1.\s3.\s7.\s9.$verific$n2_reg$cf_fir_24_16_16.v:1431$7351 ($dff).
Mapping top.$flatten\s1.\s3.\s7.\s9.$verific$n4_reg$cf_fir_24_16_16.v:1431$7352 ($dff).
Mapping top.$flatten\s1.\s3.\s7.\s9.$verific$n6_reg$cf_fir_24_16_16.v:1431$7353 ($dff).
Mapping top.$flatten\s1.\s3.\s7.\s9.$verific$n8_reg$cf_fir_24_16_16.v:1431$7354 ($dff).
Mapping top.$flatten\s1.\s3.\s7.\s9.\s9.$verific$n2_reg$cf_fir_24_16_16.v:1549$8444 ($dff).
Mapping top.$flatten\s1.\s3.\s7.\s9.\s9.$verific$n4_reg$cf_fir_24_16_16.v:1549$8445 ($dff).
Mapping top.$flatten\s1.\s3.\s7.\s9.\s9.$verific$n6_reg$cf_fir_24_16_16.v:1549$8446 ($dff).
Mapping top.$flatten\s1.\s3.\s7.\s9.\s9.$verific$n8_reg$cf_fir_24_16_16.v:1549$8447 ($dff).
Mapping top.$flatten\s1.\s3.\s7.\s9.\s9.\s9.$verific$n2_reg$cf_fir_24_16_16.v:1647$9277 ($dff).
Mapping top.$flatten\s1.\s3.\s7.\s9.\s9.\s9.$verific$n4_reg$cf_fir_24_16_16.v:1647$9278 ($dff).
Mapping top.$flatten\s1.\s3.\s7.\s9.\s9.\s9.$verific$n6_reg$cf_fir_24_16_16.v:1647$9279 ($dff).
Mapping top.$flatten\s1.\s3.\s7.\s9.\s9.\s9.$verific$n8_reg$cf_fir_24_16_16.v:1647$9280 ($dff).
Mapping top.$flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.$verific$n2_reg$cf_fir_24_16_16.v:1725$9850 ($dff).
Mapping top.$flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.$verific$n4_reg$cf_fir_24_16_16.v:1725$9851 ($dff).
Mapping top.$flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.$verific$n6_reg$cf_fir_24_16_16.v:1725$9852 ($dff).
Mapping top.$flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.$verific$n8_reg$cf_fir_24_16_16.v:1725$9853 ($dff).
Mapping top.$flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.\s9.$verific$n2_reg$cf_fir_24_16_16.v:1783$10163 ($dff).
Mapping top.$flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.\s9.$verific$n4_reg$cf_fir_24_16_16.v:1783$10164 ($dff).
Mapping top.$flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.\s9.$verific$n6_reg$cf_fir_24_16_16.v:1783$10165 ($dff).
Mapping top.$flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.\s9.$verific$n8_reg$cf_fir_24_16_16.v:1783$10166 ($dff).
Mapping top.$flatten\s1.\s3.\s8.$verific$n6_reg$cf_fir_24_16_16.v:338$5709 ($dff).
Mapping top.$flatten\s1.\s3.\s8.\s7.$verific$n12_reg$cf_fir_24_16_16.v:821$10204 ($dff).
Mapping top.$flatten\s1.\s3.\s8.\s7.$verific$n6_reg$cf_fir_24_16_16.v:821$10203 ($dff).
Mapping top.$flatten\s1.\s3.\s8.\s7.\s13.$verific$n12_reg$cf_fir_24_16_16.v:910$12063 ($dff).
Mapping top.$flatten\s1.\s3.\s8.\s7.\s13.$verific$n6_reg$cf_fir_24_16_16.v:910$12062 ($dff).
Mapping top.$flatten\s1.\s3.\s8.\s7.\s13.\s13.$verific$n12_reg$cf_fir_24_16_16.v:989$12854 ($dff).
Mapping top.$flatten\s1.\s3.\s8.\s7.\s13.\s13.$verific$n6_reg$cf_fir_24_16_16.v:989$12853 ($dff).
Mapping top.$flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.$verific$n12_reg$cf_fir_24_16_16.v:1058$13449 ($dff).
Mapping top.$flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.$verific$n6_reg$cf_fir_24_16_16.v:1058$13448 ($dff).
Mapping top.$flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.\s13.$verific$n12_reg$cf_fir_24_16_16.v:1117$13848 ($dff).
Mapping top.$flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.\s13.$verific$n6_reg$cf_fir_24_16_16.v:1117$13847 ($dff).
Mapping top.$flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.\s13.\s13.$verific$n6_reg$cf_fir_24_16_16.v:1163$14049 ($dff).
Mapping top.$flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.\s13.\s13.$verific$n9_reg$cf_fir_24_16_16.v:1163$14050 ($dff).
Mapping top.$flatten\s1.\s3.\s8.\s8.$verific$n6_reg$cf_fir_24_16_16.v:388$11186 ($dff).
Mapping top.$flatten\s1.\s3.\s8.\s8.\s7.$verific$n12_reg$cf_fir_24_16_16.v:633$14082 ($dff).
Mapping top.$flatten\s1.\s3.\s8.\s8.\s7.$verific$n6_reg$cf_fir_24_16_16.v:633$14081 ($dff).
Mapping top.$flatten\s1.\s3.\s8.\s8.\s7.\s13.$verific$n12_reg$cf_fir_24_16_16.v:692$15112 ($dff).
Mapping top.$flatten\s1.\s3.\s8.\s8.\s7.\s13.$verific$n6_reg$cf_fir_24_16_16.v:692$15111 ($dff).
Mapping top.$flatten\s1.\s3.\s8.\s8.\s7.\s13.\s13.$verific$n6_reg$cf_fir_24_16_16.v:738$15318 ($dff).
Mapping top.$flatten\s1.\s3.\s8.\s8.\s7.\s13.\s13.$verific$n9_reg$cf_fir_24_16_16.v:738$15319 ($dff).
Mapping top.$flatten\s1.\s3.\s8.\s8.\s8.$verific$n6_reg$cf_fir_24_16_16.v:431$14487 ($dff).
Mapping top.$flatten\s1.\s3.\s8.\s8.\s8.\s7.$verific$n12_reg$cf_fir_24_16_16.v:571$15351 ($dff).
Mapping top.$flatten\s1.\s3.\s8.\s8.\s8.\s7.$verific$n6_reg$cf_fir_24_16_16.v:571$15350 ($dff).
Mapping top.$flatten\s1.\s3.\s8.\s8.\s8.\s8.$verific$n12_reg$cf_fir_24_16_16.v:481$15387 ($dff).
Mapping top.$flatten\s1.\s3.\s8.\s8.\s8.\s8.$verific$n6_reg$cf_fir_24_16_16.v:481$15386 ($dff).
Mapping top.$flatten\s1.\s3.\s8.\s8.\s8.\s8.\s13.$verific$n6_reg$cf_fir_24_16_16.v:527$15598 ($dff).
Mapping top.$flatten\s1.\s3.\s8.\s8.\s8.\s8.\s13.$verific$n9_reg$cf_fir_24_16_16.v:527$15599 ($dff).

24. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

25. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

26. Executing OPT_DFF pass (perform DFF optimizations).

27. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

28. Executing OPT pass (performing simple optimizations).

28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

28.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

28.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

28.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

28.6. Executing OPT_DFF pass (perform DFF optimizations).

28.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

28.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

28.9. Finished OPT passes. (There is nothing left to do.)

29. Executing OPT pass (performing simple optimizations).

29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

29.3. Executing OPT_DFF pass (perform DFF optimizations).

29.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

29.5. Finished fast OPT passes.

30. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

31. Executing OPT pass (performing simple optimizations).

31.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

31.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

31.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

31.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

31.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

31.6. Executing OPT_SHARE pass.

31.7. Executing OPT_DFF pass (perform DFF optimizations).

31.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

31.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

31.10. Finished OPT passes. (There is nothing left to do.)

32. Executing TECHMAP pass (map to technology primitives).

32.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

32.2. Continuing TECHMAP pass.
Using extmapper maccmap for cells of type $macc.
  add \k24_i * \s1.s3.s6.s8.s8.n8 (16x16 bits, unsigned)
Using template $paramod$cc6a978c1b57cdb49efcec348c88d8e28bf1a01f\_90_alu for cells of type $alu.
  add \k0_i * \s1.s3.n1 (16x16 bits, unsigned)
Using template $paramod$dbef6e48cd28208af1b77a9bd7dfc80580f16131\_90_alu for cells of type $alu.
Using template $paramod$7fa6970f0c97644a990ba1d0dcc56c6042128be7\_90_alu for cells of type $alu.
Using template $paramod$46bb7404051772a584cf91a8bfdc4832ffc1d8ba\_90_alu for cells of type $alu.
Using template $paramod$9fb24bf0faa43f804d3c379242188667e42c235c\_90_alu for cells of type $alu.
  add \k5_i * \s1.s3.s6.n3 (16x16 bits, unsigned)
  add \k6_i * \s1.s3.s6.n4 (16x16 bits, unsigned)
  add \k7_i * \s1.s3.s6.n5 (16x16 bits, unsigned)
  add \k8_i * \s1.s3.s6.n6 (16x16 bits, unsigned)
  add \k13_i * \s1.s3.s6.s8.n4 (16x16 bits, unsigned)
  add \k14_i * \s1.s3.s6.s8.n5 (16x16 bits, unsigned)
  add \k15_i * \s1.s3.s6.s8.n6 (16x16 bits, unsigned)
  add \k16_i * \s1.s3.s6.s8.n7 (16x16 bits, unsigned)
  add \k21_i * \s1.s3.s6.s8.s8.n5 (16x16 bits, unsigned)
  add \k22_i * \s1.s3.s6.s8.s8.n6 (16x16 bits, unsigned)
  add \k23_i * \s1.s3.s6.s8.s8.n7 (16x16 bits, unsigned)
  add \k20_i * \s1.s3.s6.s8.s8.n4 (16x16 bits, unsigned)
  add \k19_i * \s1.s3.s6.s8.s8.n3 (16x16 bits, unsigned)
  add \k18_i * \s1.s3.s6.s8.s8.n2 (16x16 bits, unsigned)
  add \k17_i * \s1.s3.s6.s8.s8.n1 (16x16 bits, unsigned)
  add \k12_i * \s1.s3.s6.s8.n3 (16x16 bits, unsigned)
  add \k11_i * \s1.s3.s6.s8.n2 (16x16 bits, unsigned)
  add \k10_i * \s1.s3.s6.s8.n1 (16x16 bits, unsigned)
  add \k9_i * \s1.s3.s6.n7 (16x16 bits, unsigned)
  add \k4_i * \s1.s3.s6.n2 (16x16 bits, unsigned)
  add \k3_i * \s1.s3.s6.n1 (16x16 bits, unsigned)
  add \k2_i * \s1.s3.n3 (16x16 bits, unsigned)
  add \k1_i * \s1.s3.n2 (16x16 bits, unsigned)
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000000100000 for cells of type $fa.
Using template $paramod$fbc7873bff55778c0b3173955b7e4bce1d9d6834\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100001 for cells of type $lcu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100101 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100000 for cells of type $lcu.
Using extmapper simplemap for cells of type $or.
No more expansions possible.
<suppressed ~11073 debug messages>

33. Executing OPT pass (performing simple optimizations).

33.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~36682 debug messages>

33.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~225 debug messages>
Removed a total of 75 cells.

33.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

33.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

33.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

33.6. Executing OPT_DFF pass (perform DFF optimizations).

33.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 2067 unused cells and 5293 unused wires.
<suppressed ~2068 debug messages>

33.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

33.9. Rerunning OPT passes. (Maybe there is more to do..)

33.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

33.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

33.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

33.13. Executing OPT_DFF pass (perform DFF optimizations).

33.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

33.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

33.16. Finished OPT passes. (There is nothing left to do.)

34. Executing ABC pass (technology mapping using ABC).

34.1. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Extracted 45199 gates and 47576 wires to a netlist network with 2377 inputs and 1614 outputs.

34.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/aram/Workspace/yosys_verific_rs/scripts/synth/abc/abc_base6.a21.scr 
ABC: netlist  : i/o =   2377/   1614  and =  124933  lev =   66 (36.23)  mem = 1.54 MB
ABC: Mapping (K=6)  :  lut =  15838  edge =   62084  lev =   18 (10.54)  mem = 0.85 MB
ABC: netlist  : i/o =   2377/   1614  and =  131998  lev =   79 (39.41)  mem = 1.62 MB
ABC: Mapping (K=6)  :  lut =  13897  edge =   59131  lev =   24 (11.53)  mem = 0.85 MB
ABC: netlist  : i/o =   2377/   1614  and =  131372  lev =   80 (39.58)  mem = 1.61 MB
ABC: Mapping (K=6)  :  lut =  13436  edge =   57925  lev =   27 (11.59)  mem = 0.84 MB
ABC: netlist  : i/o =   2377/   1614  and =  145796  lev =   81 (40.68)  mem = 1.78 MB
ABC: Mapping (K=6)  :  lut =  13432  edge =   57830  lev =   28 (11.58)  mem = 0.89 MB
ABC: netlist  : i/o =   2377/   1614  and =  129137  lev =   83 (40.08)  mem = 1.59 MB
ABC: Mapping (K=6)  :  lut =  13796  edge =   58110  lev =   28 (12.32)  mem = 0.83 MB
ABC: netlist  : i/o =   2377/   1614  and =  130697  lev =   91 (39.93)  mem = 2.12 MB
ABC: Mapping (K=6)  :  lut =  12060  edge =   58877  lev =   25 (10.45)  mem = 0.83 MB
ABC: netlist  : i/o =   2377/   1614  and =  133098  lev =   91 (40.13)  mem = 2.16 MB
ABC: Mapping (K=6)  :  lut =  11936  edge =   58479  lev =   23 (10.30)  mem = 0.84 MB
ABC: netlist  : i/o =   2377/   1614  and =  133957  lev =   94 (40.18)  mem = 2.17 MB
ABC: Mapping (K=6)  :  lut =  11920  edge =   58293  lev =   23 (10.46)  mem = 0.84 MB
ABC: netlist  : i/o =   2377/   1614  and =  143713  lev =   84 (39.85)  mem = 2.32 MB
ABC: Mapping (K=6)  :  lut =  12127  edge =   58611  lev =   23 (10.38)  mem = 0.88 MB
ABC: netlist  : i/o =   2377/   1614  and =  147241  lev =   88 (40.13)  mem = 2.37 MB
ABC: Mapping (K=6)  :  lut =  11914  edge =   58157  lev =   23 (10.32)  mem = 0.89 MB
ABC: netlist  : i/o =   2377/   1614  and =  134137  lev =   90 (41.99)  mem = 2.17 MB
ABC: Mapping (K=6)  :  lut =  11838  edge =   57901  lev =   22 (10.10)  mem = 0.84 MB
ABC: netlist  : i/o =   2377/   1614  and =  153338  lev =   86 (40.17)  mem = 2.47 MB
ABC: Mapping (K=6)  :  lut =  11832  edge =   58180  lev =   23 (9.99)  mem = 0.91 MB
ABC: netlist  : i/o =   2377/   1614  and =  138381  lev =   91 (42.11)  mem = 2.24 MB
ABC: Mapping (K=6)  :  lut =  11884  edge =   58352  lev =   23 (9.98)  mem = 0.86 MB
ABC: netlist  : i/o =   2377/   1614  and =  153338  lev =   86 (40.17)  mem = 1.87 MB
ABC: Mapping (K=6)  :  lut =  11832  edge =   58180  lev =   23 (9.99)  mem = 0.91 MB
ABC: netlist  : i/o =   2377/   1614  and =  153338  lev =   86 (40.17)  mem = 2.47 MB
ABC: Mapping (K=6)  :  lut =  11818  edge =   58186  lev =   23 (9.97)  mem = 0.91 MB
ABC: netlist  : i/o =   2377/   1614  and =  143266  lev =   95 (43.02)  mem = 1.75 MB
ABC: Mapping (K=6)  :  lut =  11818  edge =   58186  lev =   23 (9.97)  mem = 0.87 MB
ABC: + write_blif <abc-temp-dir>/output.blif 

34.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:    11818
ABC RESULTS:        internal signals:    43585
ABC RESULTS:           input signals:     2377
ABC RESULTS:          output signals:     1614
Removing temp directory.

35. Executing OPT pass (performing simple optimizations).

35.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

35.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

35.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

35.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

35.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

35.6. Executing OPT_DFF pass (perform DFF optimizations).

35.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 11186 unused wires.
<suppressed ~1 debug messages>

35.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

35.9. Rerunning OPT passes. (Maybe there is more to do..)

35.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

35.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

35.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

35.13. Executing OPT_DFF pass (perform DFF optimizations).

35.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

35.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

35.16. Finished OPT passes. (There is nothing left to do.)

36. Executing HIERARCHY pass (managing design hierarchy).

36.1. Analyzing design hierarchy..
Top module:  \top

36.2. Analyzing design hierarchy..
Top module:  \top
Removed 0 unused modules.

37. Printing statistics.

=== top ===

   Number of wires:              11314
   Number of wire bits:          36292
   Number of public wires:        1110
   Number of public wire bits:   26088
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              13928
     $_DFF_P_                     1710
     $_SDFF_PP0_                   400
     $lut                        11818

38. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 905 unused wires.
<suppressed ~905 debug messages>

39. Executing BLIF backend.

End of script. Logfile hash: a842a24770, CPU: user 24.63s system 0.34s, MEM: 293.43 MB peak
Yosys 0.14+36 (git sha1 15a4e900b, gcc 7.1.0 -fPIC -Os)
Time spent: 95% 1x abc (475 sec), 1% 35x opt_expr (8 sec), ...
