
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.14+36 (git sha1 15a4e900b, gcc 7.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jan22_SW_Release, released at Sat Jan 29 02:42:49 2022.

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Jan22_SW_Release, released at Sat Jan 29 02:42:49 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'mc_adr_sel.v'
VERIFIC-INFO [VERI-1328] mc_adr_sel.v:88: analyzing included file 'mc_defines.v'
VERIFIC-INFO [VERI-2320] mc_adr_sel.v:88: back to file 'mc_adr_sel.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'mc_cs_rf.v'
VERIFIC-INFO [VERI-1328] mc_cs_rf.v:111: analyzing included file 'mc_defines.v'
VERIFIC-INFO [VERI-2320] mc_cs_rf.v:111: back to file 'mc_cs_rf.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'mc_defines.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'mc_dp.v'
VERIFIC-INFO [VERI-1328] mc_dp.v:107: analyzing included file 'mc_defines.v'
VERIFIC-INFO [VERI-2320] mc_dp.v:107: back to file 'mc_dp.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'mc_incn_r.v'
VERIFIC-INFO [VERI-1328] mc_incn_r.v:72: analyzing included file 'mc_defines.v'
VERIFIC-INFO [VERI-2320] mc_incn_r.v:72: back to file 'mc_incn_r.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'mc_mem_if.v'
VERIFIC-INFO [VERI-1328] mc_mem_if.v:112: analyzing included file 'mc_defines.v'
VERIFIC-INFO [VERI-2320] mc_mem_if.v:112: back to file 'mc_mem_if.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'mc_obct.v'
VERIFIC-INFO [VERI-1328] mc_obct.v:102: analyzing included file 'mc_defines.v'
VERIFIC-INFO [VERI-2320] mc_obct.v:102: back to file 'mc_obct.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'mc_obct_top.v'
VERIFIC-INFO [VERI-1328] mc_obct_top.v:80: analyzing included file 'mc_defines.v'
VERIFIC-INFO [VERI-2320] mc_obct_top.v:80: back to file 'mc_obct_top.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'mc_rd_fifo.v'
VERIFIC-INFO [VERI-1328] mc_rd_fifo.v:82: analyzing included file 'mc_defines.v'
VERIFIC-INFO [VERI-2320] mc_rd_fifo.v:82: back to file 'mc_rd_fifo.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'mc_refresh.v'
VERIFIC-INFO [VERI-1328] mc_refresh.v:97: analyzing included file 'mc_defines.v'
VERIFIC-INFO [VERI-2320] mc_refresh.v:97: back to file 'mc_refresh.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'mc_rf.v'
VERIFIC-INFO [VERI-1328] mc_rf.v:121: analyzing included file 'mc_defines.v'
VERIFIC-INFO [VERI-2320] mc_rf.v:121: back to file 'mc_rf.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'mc_timing.v'
VERIFIC-INFO [VERI-1328] mc_timing.v:126: analyzing included file 'mc_defines.v'
VERIFIC-INFO [VERI-2320] mc_timing.v:126: back to file 'mc_timing.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'mc_top.v'
VERIFIC-INFO [VERI-1328] mc_top.v:115: analyzing included file 'mc_defines.v'
VERIFIC-INFO [VERI-2320] mc_top.v:115: back to file 'mc_top.v'
VERIFIC-INFO [VERI-2561] mc_top.v:315: undeclared symbol 'mc_sts_ir', assumed default net type 'wire'
VERIFIC-INFO [VERI-2561] mc_top.v:319: undeclared symbol 'cs_le_d', assumed default net type 'wire'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'mc_wb_if.v'
VERIFIC-INFO [VERI-1328] mc_wb_if.v:113: analyzing included file 'mc_defines.v'
VERIFIC-INFO [VERI-2320] mc_wb_if.v:113: back to file 'mc_wb_if.v'

3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] mc_top.v:117: compiling module 'mc_top'
VERIFIC-WARNING [VERI-2371] mc_top.v:290: delay control is not supported for synthesis
VERIFIC-INFO [VERI-1018] mc_rf.v:123: compiling module 'mc_rf'
VERIFIC-WARNING [VERI-2371] mc_rf.v:252: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:253: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:254: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:256: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:257: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:258: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:259: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:260: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:261: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:262: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:263: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:264: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:265: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:266: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:267: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:268: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:269: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:270: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:271: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-1173] mc_rf.v:251: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-2371] mc_rf.v:282: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:285: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:286: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:289: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:292: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:295: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:298: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:301: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:308: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:311: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:321: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:322: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:325: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:326: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:329: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:330: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:333: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:341: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:349: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:351: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:354: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:358: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:360: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:363: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:367: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:369: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:371: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:373: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:375: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:377: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:379: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:380: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:384: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:388: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:390: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:392: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:394: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:396: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:398: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:400: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:401: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:405: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:409: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:411: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:413: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:415: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:417: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:419: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:421: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:422: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:426: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:430: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:432: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:434: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:436: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:438: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:440: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:442: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:443: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:464: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:470: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:476: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:478: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:481: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:482: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:496: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:498: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:501: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rf.v:503: delay control is not supported for synthesis
VERIFIC-INFO [VERI-1018] mc_cs_rf.v:113: compiling module 'mc_cs_rf'
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:161: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:162: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:165: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:166: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:176: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:182: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:184: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:188: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:190: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:197: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:198: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:201: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:204: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:206: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:213: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:214: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:217: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:220: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:222: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:225: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:227: delay control is not supported for synthesis
VERIFIC-INFO [VERI-1018] mc_cs_rf.v:113: compiling module 'mc_cs_rf(this_cs=3'b01)'
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:161: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:162: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:165: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:166: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:176: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:182: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:184: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:188: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:190: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:197: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:198: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:201: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:204: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:206: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:213: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:214: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:217: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:220: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:222: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:225: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_cs_rf.v:227: delay control is not supported for synthesis
VERIFIC-INFO [VERI-1018] mc_cs_rf.v:246: compiling module 'mc_cs_rf_dummy(this_cs=3'b010)'
VERIFIC-INFO [VERI-1018] mc_cs_rf.v:246: compiling module 'mc_cs_rf_dummy(this_cs=3'b011)'
VERIFIC-INFO [VERI-1018] mc_cs_rf.v:246: compiling module 'mc_cs_rf_dummy(this_cs=3'b100)'
VERIFIC-INFO [VERI-1018] mc_cs_rf.v:246: compiling module 'mc_cs_rf_dummy(this_cs=3'b101)'
VERIFIC-INFO [VERI-1018] mc_cs_rf.v:246: compiling module 'mc_cs_rf_dummy(this_cs=3'b110)'
VERIFIC-INFO [VERI-1018] mc_cs_rf.v:246: compiling module 'mc_cs_rf_dummy(this_cs=3'b111)'
VERIFIC-INFO [VERI-1018] mc_adr_sel.v:90: compiling module 'mc_adr_sel'
VERIFIC-INFO [VERI-1018] mc_incn_r.v:77: compiling module 'mc_incn_r(incN_width=24)'
VERIFIC-WARNING [VERI-2371] mc_incn_r.v:92: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-1209] mc_incn_r.v:99: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:168: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:173: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:174: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:175: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-1173] mc_adr_sel.v:172: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:178: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:194: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:195: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:196: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:198: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:199: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:200: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:202: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:203: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:204: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-1173] mc_adr_sel.v:193: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:212: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:213: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:214: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:216: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:217: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:218: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:220: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:221: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:222: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-1173] mc_adr_sel.v:211: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:226: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:227: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:228: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:230: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:231: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:232: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:234: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:235: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:236: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-1173] mc_adr_sel.v:225: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:246: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:247: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:248: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:250: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:251: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:252: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:254: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:255: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:256: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-1173] mc_adr_sel.v:245: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:260: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:261: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:262: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:264: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:265: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:266: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:268: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:269: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_adr_sel.v:270: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-1173] mc_adr_sel.v:259: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-1173] mc_adr_sel.v:275: synthesis - simulation differences may occur when using full_case directive
VERIFIC-INFO [VERI-1018] mc_obct_top.v:82: compiling module 'mc_obct_top'
VERIFIC-WARNING [VERI-2371] mc_obct_top.v:197: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_obct_top.v:203: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_obct_top.v:209: delay control is not supported for synthesis
VERIFIC-INFO [VERI-1018] mc_obct.v:104: compiling module 'mc_obct'
VERIFIC-WARNING [VERI-2371] mc_obct.v:136: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_obct.v:138: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_obct.v:140: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_obct.v:142: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_obct.v:145: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_obct.v:147: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_obct.v:149: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_obct.v:151: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_obct.v:154: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_obct.v:156: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_obct.v:158: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_obct.v:160: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_obct.v:163: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_obct.v:165: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_obct.v:167: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_obct.v:169: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_obct.v:187: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_obct.v:190: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_obct.v:193: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_obct.v:196: delay control is not supported for synthesis
VERIFIC-INFO [VERI-1018] mc_obct.v:220: compiling module 'mc_obct_dummy'
VERIFIC-INFO [VERI-1018] mc_dp.v:109: compiling module 'mc_dp'
VERIFIC-INFO [VERI-1018] mc_rd_fifo.v:84: compiling module 'mc_rd_fifo'
VERIFIC-WARNING [VERI-2371] mc_rd_fifo.v:97: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rd_fifo.v:99: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rd_fifo.v:101: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rd_fifo.v:104: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rd_fifo.v:106: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rd_fifo.v:108: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rd_fifo.v:111: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rd_fifo.v:114: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rd_fifo.v:117: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_rd_fifo.v:120: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-1173] mc_rd_fifo.v:123: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-2371] mc_dp.v:197: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_dp.v:205: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_dp.v:208: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_dp.v:210: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_dp.v:213: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_dp.v:229: delay control is not supported for synthesis
VERIFIC-INFO [VERI-1018] mc_refresh.v:99: compiling module 'mc_refresh'
VERIFIC-WARNING [VERI-2371] mc_refresh.v:159: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_refresh.v:160: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_refresh.v:163: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_refresh.v:165: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_refresh.v:167: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_refresh.v:172: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_refresh.v:173: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_refresh.v:181: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_refresh.v:182: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_refresh.v:185: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_refresh.v:187: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_refresh.v:189: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_refresh.v:193: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_refresh.v:194: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_refresh.v:195: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_refresh.v:196: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_refresh.v:197: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_refresh.v:198: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_refresh.v:199: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_refresh.v:200: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_refresh.v:204: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_refresh.v:206: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_refresh.v:208: delay control is not supported for synthesis
VERIFIC-INFO [VERI-1018] mc_timing.v:128: compiling module 'mc_timing'
VERIFIC-WARNING [VERI-2371] mc_timing.v:458: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:463: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:466: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:469: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:472: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:473: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:476: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:477: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:481: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:482: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:485: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:486: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:489: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:492: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:495: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:498: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:500: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:503: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:505: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:518: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:519: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:525: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:526: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:529: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:530: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:536: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:538: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:541: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:543: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:547: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:548: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:552: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:553: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:556: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:557: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:560: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:561: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:565: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:568: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:572: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:575: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:578: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:582: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:585: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:591: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:592: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:595: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:596: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:600: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:602: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:604: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:608: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:610: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:612: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:618: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:619: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:623: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:625: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:627: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:629: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:637: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:641: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:642: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:645: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:646: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:649: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:650: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:653: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:654: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:660: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:662: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:664: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:679: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:681: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:683: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:685: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:687: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:689: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:691: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:693: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:700: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:702: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:709: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:712: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:714: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:716: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:718: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:720: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:722: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:724: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:726: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:728: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:730: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:732: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:737: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:738: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:742: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:744: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:747: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-1173] mc_timing.v:751: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-2371] mc_timing.v:762: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:764: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:766: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:769: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:771: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:775: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:777: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:782: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:785: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:786: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:789: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:798: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:801: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:803: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:805: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:809: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_timing.v:813: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-1173] mc_timing.v:940: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-1173] mc_timing.v:893: synthesis - simulation differences may occur when using full_case directive
VERIFIC-INFO [VERI-1018] mc_wb_if.v:115: compiling module 'mc_wb_if'
VERIFIC-WARNING [VERI-2371] mc_wb_if.v:167: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_wb_if.v:169: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_wb_if.v:171: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_wb_if.v:174: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_wb_if.v:175: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_wb_if.v:180: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_wb_if.v:182: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_wb_if.v:185: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_wb_if.v:186: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_wb_if.v:191: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_wb_if.v:193: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_wb_if.v:196: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_wb_if.v:198: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_wb_if.v:207: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_wb_if.v:209: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_wb_if.v:211: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_wb_if.v:214: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_wb_if.v:216: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_wb_if.v:227: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_wb_if.v:229: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_wb_if.v:234: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_wb_if.v:235: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_wb_if.v:250: delay control is not supported for synthesis
VERIFIC-INFO [VERI-1018] mc_mem_if.v:114: compiling module 'mc_mem_if'
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:220: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:223: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:226: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:229: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:232: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:235: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:238: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:241: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:244: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:245: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:248: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:251: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:254: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:258: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:262: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:267: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:270: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:271: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:274: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:277: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:280: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:285: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:291: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:294: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:300: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:303: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:309: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:312: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:318: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:321: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:327: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:330: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:336: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:339: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:345: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:348: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:354: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:357: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] mc_mem_if.v:360: delay control is not supported for synthesis
Importing module mc_top.
Importing module mc_rf.
Importing module mc_cs_rf.
Importing module mc_obct_top.
Importing module mc_adr_sel.
Importing module mc_cs_rf(this_cs=3'b01).
Importing module mc_cs_rf_dummy(this_cs=3'b010).
Importing module mc_cs_rf_dummy(this_cs=3'b011).
Importing module mc_cs_rf_dummy(this_cs=3'b100).
Importing module mc_cs_rf_dummy(this_cs=3'b101).
Importing module mc_cs_rf_dummy(this_cs=3'b110).
Importing module mc_cs_rf_dummy(this_cs=3'b111).
Importing module mc_incn_r(incN_width=24).
Importing module mc_obct.
Importing module mc_obct_dummy.
Importing module mc_dp.
Importing module mc_rd_fifo.
Importing module mc_refresh.
Importing module mc_timing.
Importing module mc_wb_if.
Importing module mc_mem_if.

3.1. Analyzing design hierarchy..
Top module:  \mc_top
Used module:     \mc_mem_if
Used module:     \mc_wb_if
Used module:     \mc_timing
Used module:     \mc_refresh
Used module:     \mc_dp
Used module:         \mc_rd_fifo
Used module:     \mc_obct_top
Used module:         \mc_obct_dummy
Used module:         \mc_obct
Used module:     \mc_adr_sel
Used module:         \mc_incn_r(incN_width=24)
Used module:     \mc_rf
Used module:         \mc_cs_rf_dummy(this_cs=3'b111)
Used module:         \mc_cs_rf_dummy(this_cs=3'b110)
Used module:         \mc_cs_rf_dummy(this_cs=3'b101)
Used module:         \mc_cs_rf_dummy(this_cs=3'b100)
Used module:         \mc_cs_rf_dummy(this_cs=3'b011)
Used module:         \mc_cs_rf_dummy(this_cs=3'b010)
Used module:         \mc_cs_rf(this_cs=3'b01)
Used module:         \mc_cs_rf

3.2. Analyzing design hierarchy..
Top module:  \mc_top
Used module:     \mc_mem_if
Used module:     \mc_wb_if
Used module:     \mc_timing
Used module:     \mc_refresh
Used module:     \mc_dp
Used module:         \mc_rd_fifo
Used module:     \mc_obct_top
Used module:         \mc_obct_dummy
Used module:         \mc_obct
Used module:     \mc_adr_sel
Used module:         \mc_incn_r(incN_width=24)
Used module:     \mc_rf
Used module:         \mc_cs_rf_dummy(this_cs=3'b111)
Used module:         \mc_cs_rf_dummy(this_cs=3'b110)
Used module:         \mc_cs_rf_dummy(this_cs=3'b101)
Used module:         \mc_cs_rf_dummy(this_cs=3'b100)
Used module:         \mc_cs_rf_dummy(this_cs=3'b011)
Used module:         \mc_cs_rf_dummy(this_cs=3'b010)
Used module:         \mc_cs_rf(this_cs=3'b01)
Used module:         \mc_cs_rf
Removed 0 unused modules.

4. Executing PROC pass (convert processes to netlists).

4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

4.4. Executing PROC_INIT pass (extract init attributes).

4.5. Executing PROC_ARST pass (detect async resets in processes).

4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

4.7. Executing PROC_DLATCH pass (convert process syncs to latches).

4.8. Executing PROC_DFF pass (convert process syncs to FFs).

4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_mem_if.
Optimizing module mc_wb_if.
<suppressed ~1 debug messages>
Optimizing module mc_timing.
<suppressed ~30 debug messages>
Optimizing module mc_refresh.
<suppressed ~2 debug messages>
Optimizing module mc_rd_fifo.
<suppressed ~1 debug messages>
Optimizing module mc_dp.
<suppressed ~3 debug messages>
Optimizing module mc_obct_dummy.
Optimizing module mc_obct.
<suppressed ~1 debug messages>
Optimizing module mc_incn_r(incN_width=24).
<suppressed ~1 debug messages>
Optimizing module mc_cs_rf_dummy(this_cs=3'b111).
<suppressed ~2 debug messages>
Optimizing module mc_cs_rf_dummy(this_cs=3'b110).
<suppressed ~2 debug messages>
Optimizing module mc_cs_rf_dummy(this_cs=3'b101).
<suppressed ~2 debug messages>
Optimizing module mc_cs_rf_dummy(this_cs=3'b100).
<suppressed ~2 debug messages>
Optimizing module mc_cs_rf_dummy(this_cs=3'b011).
<suppressed ~2 debug messages>
Optimizing module mc_cs_rf_dummy(this_cs=3'b010).
<suppressed ~2 debug messages>
Optimizing module mc_cs_rf(this_cs=3'b01).
<suppressed ~2 debug messages>
Optimizing module mc_adr_sel.
<suppressed ~1 debug messages>
Optimizing module mc_obct_top.
Optimizing module mc_cs_rf.
<suppressed ~3 debug messages>
Optimizing module mc_rf.
<suppressed ~14 debug messages>
Optimizing module mc_top.
<suppressed ~1 debug messages>

5. Executing FLATTEN pass (flatten design).
Deleting now unused module mc_mem_if.
Deleting now unused module mc_wb_if.
Deleting now unused module mc_timing.
Deleting now unused module mc_refresh.
Deleting now unused module mc_rd_fifo.
Deleting now unused module mc_dp.
Deleting now unused module mc_obct_dummy.
Deleting now unused module mc_obct.
Deleting now unused module mc_incn_r(incN_width=24).
Deleting now unused module mc_cs_rf_dummy(this_cs=3'b111).
Deleting now unused module mc_cs_rf_dummy(this_cs=3'b110).
Deleting now unused module mc_cs_rf_dummy(this_cs=3'b101).
Deleting now unused module mc_cs_rf_dummy(this_cs=3'b100).
Deleting now unused module mc_cs_rf_dummy(this_cs=3'b011).
Deleting now unused module mc_cs_rf_dummy(this_cs=3'b010).
Deleting now unused module mc_cs_rf(this_cs=3'b01).
Deleting now unused module mc_adr_sel.
Deleting now unused module mc_obct_top.
Deleting now unused module mc_cs_rf.
Deleting now unused module mc_rf.
<suppressed ~26 debug messages>

6. Executing TRIBUF pass.

7. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.
<suppressed ~36 debug messages>

8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..
Removed 66 unused cells and 3837 unused wires.
<suppressed ~527 debug messages>

9. Executing CHECK pass (checking for obvious problems).
Checking module mc_top...
Found and reported 0 problems.

10. Executing DEMINOUT pass (demote inout ports to input or output).

11. Executing OPT pass (performing simple optimizations).

11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.
<suppressed ~42 debug messages>

11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
<suppressed ~93 debug messages>
Removed a total of 31 cells.

11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mc_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~149 debug messages>

11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mc_top.
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_1002$mc_timing.v:1732$5963: { $flatten\u5.$verific$n7926$5070 $flatten\u5.$verific$n7811$5043 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_443$mc_timing.v:1004$5579: { $flatten\u1.$verific$n15$3853 $auto$opt_reduce.cc:134:opt_pmux$6260 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_444$mc_timing.v:1004$5580: $auto$opt_reduce.cc:134:opt_pmux$6262
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_448$mc_timing.v:1004$5584: $auto$opt_reduce.cc:134:opt_pmux$6264
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_910$mc_timing.v:1732$5872: { $flatten\u5.$verific$n7753$4985 $flatten\u5.$verific$n7754$4986 $flatten\u5.$verific$n7755$4987 $flatten\u5.$verific$n7766$4998 $flatten\u5.$verific$n7767$4999 $flatten\u5.$verific$n7798$5030 $flatten\u5.$verific$n7886$5051 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_915$mc_timing.v:1732$5877: { $flatten\u5.$verific$n7753$4985 $flatten\u5.$verific$n7762$4994 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_918$mc_timing.v:1732$5880: { $flatten\u5.$verific$n7753$4985 $auto$opt_reduce.cc:134:opt_pmux$6266 $flatten\u5.$verific$n7894$5054 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_921$mc_timing.v:1732$5883: { $flatten\u5.$verific$n7753$4985 $flatten\u5.$verific$n7897$5056 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_925$mc_timing.v:1732$5887: { $flatten\u5.$verific$n7753$4985 $auto$opt_reduce.cc:134:opt_pmux$6268 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_928$mc_timing.v:1732$5890: { $flatten\u5.$verific$n7753$4985 $flatten\u5.$verific$n7904$5059 $flatten\u5.$verific$n7769$5001 $flatten\u5.$verific$n7783$5015 $flatten\u5.$verific$n7790$5022 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_931$mc_timing.v:1732$5893: { $flatten\u5.$verific$n7753$4985 $flatten\u5.$verific$n7759$4991 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_934$mc_timing.v:1732$5896: { $flatten\u5.$verific$n7753$4985 $flatten\u5.$verific$n7914$5062 $flatten\u5.$verific$n7764$4996 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_936$mc_timing.v:1732$5898: { $flatten\u5.$verific$n7753$4985 $flatten\u5.$verific$n7756$4988 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_940$mc_timing.v:1732$5902: { $flatten\u5.$verific$n7753$4985 $flatten\u5.$verific$n7919$5065 $flatten\u5.$verific$n7920$5066 $flatten\u5.$verific$n7768$5000 $flatten\u5.$verific$n7789$5021 $flatten\u5.$verific$n7790$5022 $flatten\u5.$verific$n7791$5023 $flatten\u5.$verific$n7792$5024 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_943$mc_timing.v:1732$5905: { $flatten\u5.$verific$n7753$4985 $flatten\u5.$verific$n7923$5068 $flatten\u5.$verific$n7765$4997 $flatten\u5.$verific$n7766$4998 $flatten\u5.$verific$n7769$5001 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_946$mc_timing.v:1732$5908: { $flatten\u5.$verific$n7925$5069 $flatten\u5.$verific$n7753$4985 $flatten\u5.$verific$n7811$5043 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_949$mc_timing.v:1732$5911: { $flatten\u5.$verific$n7928$5071 $flatten\u5.$verific$n7754$4986 $flatten\u5.$verific$n7786$5018 $flatten\u5.$verific$n7789$5021 $flatten\u5.$verific$n7790$5022 $auto$opt_reduce.cc:134:opt_pmux$6270 $flatten\u5.$verific$n7798$5030 $flatten\u5.$verific$n7929$5072 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_951$mc_timing.v:1732$5913: { $flatten\u5.$verific$n7757$4989 $flatten\u5.$verific$n7758$4990 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_955$mc_timing.v:1732$5917: { $flatten\u5.$verific$n7763$4995 $flatten\u5.$verific$n7764$4996 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_957$mc_timing.v:1732$5919: { $flatten\u5.$verific$n7764$4996 $flatten\u5.$verific$n7795$5027 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_962$mc_timing.v:1732$5924: { $flatten\u5.$verific$n7771$5003 $flatten\u5.$verific$n7942$5078 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_964$mc_timing.v:1732$5926: { $flatten\u5.$verific$n7772$5004 $flatten\u5.$verific$n7776$5008 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_969$mc_timing.v:1732$5931: { $flatten\u5.$verific$n7781$5013 $flatten\u5.$verific$n7782$5014 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_974$mc_timing.v:1732$5936: { $flatten\u5.$verific$n7786$5018 $flatten\u5.$verific$n7954$5082 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_976$mc_timing.v:1732$5938: { $flatten\u5.$verific$n7786$5018 $flatten\u5.$verific$n7798$5030 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_979$mc_timing.v:1732$5941: { $flatten\u5.$verific$n7959$5085 $flatten\u5.$verific$n7798$5030 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_981$mc_timing.v:1732$5943: { $flatten\u5.$verific$n7788$5020 $flatten\u5.$verific$n7789$5021 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_987$mc_timing.v:1732$5949: $auto$opt_reduce.cc:134:opt_pmux$6272
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_989$mc_timing.v:1732$5951: { $flatten\u5.$verific$n7969$5089 $flatten\u5.$verific$n7791$5023 $flatten\u5.$verific$n7792$5024 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_992$mc_timing.v:1732$5954: { $flatten\u5.$verific$n7972$5090 $flatten\u5.$verific$n7795$5027 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$select_445$mc_timing.v:1004$5581: { $auto$opt_reduce.cc:134:opt_pmux$6274 $flatten\u5.$verific$n1880$4816 $flatten\u1.$verific$n57$3855 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$select_907$mc_timing.v:1732$5869: { $flatten\u5.$verific$n7752$4984 $flatten\u5.$verific$n7753$4985 $flatten\u5.$verific$n7754$4986 $flatten\u5.$verific$n7755$4987 $flatten\u5.$verific$n7756$4988 $flatten\u5.$verific$n7757$4989 $flatten\u5.$verific$n7758$4990 $flatten\u5.$verific$n7759$4991 $flatten\u5.$verific$n7760$4992 $flatten\u5.$verific$n7762$4994 $flatten\u5.$verific$n7763$4995 $flatten\u5.$verific$n7764$4996 $flatten\u5.$verific$n7765$4997 $flatten\u5.$verific$n7766$4998 $flatten\u5.$verific$n7767$4999 $flatten\u5.$verific$n7768$5000 $flatten\u5.$verific$n7769$5001 $flatten\u5.$verific$n7770$5002 $flatten\u5.$verific$n7771$5003 $flatten\u5.$verific$n7772$5004 $flatten\u5.$verific$n7773$5005 $flatten\u5.$verific$n7774$5006 $flatten\u5.$verific$n7775$5007 $flatten\u5.$verific$n7776$5008 $flatten\u5.$verific$n7777$5009 $flatten\u5.$verific$n7778$5010 $flatten\u5.$verific$n7779$5011 $flatten\u5.$verific$n7781$5013 $flatten\u5.$verific$n7782$5014 $flatten\u5.$verific$n7783$5015 $flatten\u5.$verific$n7784$5016 $auto$opt_reduce.cc:134:opt_pmux$6276 $flatten\u5.$verific$n7786$5018 $flatten\u5.$verific$n7787$5019 $flatten\u5.$verific$n7788$5020 $flatten\u5.$verific$n7789$5021 $flatten\u5.$verific$n7790$5022 $flatten\u5.$verific$n7791$5023 $flatten\u5.$verific$n7792$5024 $flatten\u5.$verific$n7793$5025 $flatten\u5.$verific$n7794$5026 $flatten\u5.$verific$n7795$5027 $flatten\u5.$verific$n7796$5028 $flatten\u5.$verific$n7797$5029 $flatten\u5.$verific$n7798$5030 $flatten\u5.$verific$n7799$5031 $flatten\u5.$verific$n7800$5032 $flatten\u5.$verific$n7801$5033 $flatten\u5.$verific$n7802$5034 $flatten\u5.$verific$n7803$5035 $flatten\u5.$verific$n7804$5036 $flatten\u5.$verific$n7805$5037 $flatten\u5.$verific$n7806$5038 $flatten\u5.$verific$n7807$5039 $flatten\u5.$verific$n7808$5040 $flatten\u5.$verific$n7809$5041 $flatten\u5.$verific$n7810$5042 $flatten\u5.$verific$n7811$5043 $flatten\u5.$verific$n7812$5044 $flatten\u5.$verific$n7813$5045 $flatten\u5.$verific$n7814$5046 $flatten\u5.$verific$n7815$5047 $flatten\u5.$verific$n7816$5048 $flatten\u5.$verific$n7817$5049 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$select_929$mc_timing.v:1732$5891: { $flatten\u5.$verific$n7753$4985 $flatten\u5.$verific$n7760$4992 $auto$opt_reduce.cc:134:opt_pmux$6288 $flatten\u5.$verific$n7783$5015 $flatten\u5.$verific$n7784$5016 $flatten\u5.$verific$n7788$5020 $flatten\u5.$verific$n7791$5023 $flatten\u5.$verific$n7792$5024 $flatten\u5.$verific$n7793$5025 $auto$opt_reduce.cc:134:opt_pmux$6286 $flatten\u5.$verific$n7798$5030 $auto$opt_reduce.cc:134:opt_pmux$6284 $auto$opt_reduce.cc:134:opt_pmux$6282 $auto$opt_reduce.cc:134:opt_pmux$6280 $auto$opt_reduce.cc:134:opt_pmux$6278 }
  Optimizing cells in module \mc_top.
Performed a total of 33 changes.

11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
<suppressed ~24 debug messages>
Removed a total of 8 cells.

11.6. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $flatten\u7.$verific$mc_oe__reg$mc_mem_if.v:271$6237 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u7.$verific$mc_dqm_reg$mc_mem_if.v:267$6233 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u7.$verific$mc_dqm_r_reg$mc_mem_if.v:258$6225 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u7.$verific$mc_dqm_r2_reg$mc_mem_if.v:262$6227 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u7.$verific$mc_dp_o_reg$mc_mem_if.v:251$6219 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u7.$verific$mc_data_oe_reg$mc_mem_if.v:245$6215 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u7.$verific$mc_data_o_reg$mc_mem_if.v:248$6217 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u7.$verific$mc_data_ir_reg$mc_mem_if.v:226$6196 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u7.$verific$mc_cs__reg$mc_mem_if.v:354$6248 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u7.$verific$mc_addr_reg$mc_mem_if.v:254$6221 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u6.$verific$write_go_r_reg$mc_wb_if.v:198$6090 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u6.$verific$write_go_r1_reg$mc_wb_if.v:193$6083 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u6.$verific$wr_hold_reg$mc_wb_if.v:216$6114 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u6.$verific$wb_first_r_reg$mc_wb_if.v:211$6110 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u6.$verific$wb_err_reg$mc_wb_if.v:235$6131 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u6.$verific$wb_data_o_reg$mc_wb_if.v:250$6138 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u6.$verific$wb_ack_o_reg$mc_wb_if.v:229$6123 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u6.$verific$rmw_r_reg$mc_wb_if.v:175$6061 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u6.$verific$rmw_en_reg$mc_wb_if.v:171$6054 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u6.$verific$read_go_r_reg$mc_wb_if.v:186$6075 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u6.$verific$read_go_r1_reg$mc_wb_if.v:182$6072 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$wr_cycle_reg$mc_timing.v:604$5375 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$wb_stb_first_reg$mc_timing.v:805$5546 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$wb_cycle_reg$mc_timing.v:612$5380 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$tmr_done_reg$mc_timing.v:738$5499 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$tmr2_done_reg$mc_timing.v:702$5466 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$timer_reg$mc_timing.v:732$5495 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u5.$verific$timer2_reg$mc_timing.v:693$5448 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$suspended_reg$mc_timing.v:650$5418 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$susp_sel_r_reg$mc_timing.v:664$5424 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$susp_req_r_reg$mc_timing.v:642$5414 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$state_reg$mc_timing.v:813$5549 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$rsts_reg$mc_timing.v:477$5296 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$rsts1_reg$mc_timing.v:473$5294 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$rfr_ack_r_reg$mc_timing.v:654$5420 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$resume_req_r_reg$mc_timing.v:646$5416 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$oe__reg$mc_timing.v:548$5342 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$no_wb_cycle_reg$mc_timing.v:619$5385 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$mem_ack_r_reg$mc_timing.v:519$5325 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$mc_le_reg$mc_timing.v:486$5301 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$mc_c_oe_reg$mc_timing.v:482$5298 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$mc_adv_r_reg$mc_timing.v:505$5313 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$mc_adv_r1_reg$mc_timing.v:500$5310 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$lookup_ready2_reg$mc_timing.v:596$5372 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$lookup_ready1_reg$mc_timing.v:592$5368 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u5.$verific$ir_cnt_reg$mc_timing.v:744$5505 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u0.$verific$csr_r_reg$mc_rf.v:298$1556 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.$verific$csr_r2_reg$mc_rf.v:292$1553 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.$verific$csc_reg$mc_rf.v:381$1617 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.$verific$csc_mask_r_reg$mc_rf.v:311$1567 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.$verific$cs_reg$mc_rf.v:351$1585 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$dv_r_reg$mc_timing.v:786$5538 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$data_oe_reg$mc_timing.v:561$5349 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$data_oe_r_reg$mc_timing.v:553$5344 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$data_oe_r2_reg$mc_timing.v:557$5346 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$cmd_r_reg$mc_timing.v:526$5329 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$cmd_del_reg$mc_timing.v:530$5331 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$cmd_asserted_reg$mc_timing.v:538$5336 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$cmd_asserted2_reg$mc_timing.v:543$5339 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u5.$verific$burst_cnt_reg$mc_timing.v:766$5520 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$ap_en_reg$mc_timing.v:777$5530 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u5.$verific$ack_cnt_reg$mc_timing.v:629$5398 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u4.$verific$rfr_req_reg$mc_refresh.v:208$4670 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u4.$verific$rfr_en_reg$mc_refresh.v:160$4622 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u4.$verific$rfr_early_reg$mc_refresh.v:173$4634 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u4.$verific$rfr_cnt_reg$mc_refresh.v:189$4641 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u4.$verific$rfr_ce_reg$mc_refresh.v:182$4636 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u4.$verific$ps_cnt_reg$mc_refresh.v:167$4628 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u3.\u0.$verific$wr_adr_reg$mc_rd_fifo.v:108$4549 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u3.\u0.$verific$rd_adr_reg$mc_rd_fifo.v:101$4545 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u3.\u0.$verific$r3_reg$mc_rd_fifo.v:120$4562 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u3.\u0.$verific$r2_reg$mc_rd_fifo.v:117$4559 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u3.\u0.$verific$r1_reg$mc_rd_fifo.v:114$4556 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u3.\u0.$verific$r0_reg$mc_rd_fifo.v:111$4553 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u3.$verific$mc_dp_o_reg$mc_dp.v:229$4489 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u3.$verific$mc_data_o_reg$mc_dp.v:197$4466 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u3.$verific$byte2_reg$mc_dp.v:213$4479 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u3.$verific$byte1_reg$mc_dp.v:210$4477 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u3.$verific$byte0_reg$mc_dp.v:205$4469 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.$verific$csr_r_reg$mc_rf.v:298$1556_1 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u2.\u1.$verific$bank3_open_reg$mc_obct.v:169$4276 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u2.\u1.$verific$bank2_open_reg$mc_obct.v:160$4269 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u2.\u1.$verific$bank1_open_reg$mc_obct.v:151$4262 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u2.\u1.$verific$bank0_open_reg$mc_obct.v:142$4255 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u2.\u1.$verific$b3_last_row_reg$mc_obct.v:196$4294 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u2.\u1.$verific$b2_last_row_reg$mc_obct.v:193$4292 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u2.\u1.$verific$b1_last_row_reg$mc_obct.v:190$4290 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u2.\u1.$verific$b0_last_row_reg$mc_obct.v:187$4288 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u2.\u0.$verific$bank3_open_reg$mc_obct.v:169$4276 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u2.\u0.$verific$bank2_open_reg$mc_obct.v:160$4269 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u2.\u0.$verific$bank1_open_reg$mc_obct.v:151$4262 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u2.\u0.$verific$bank0_open_reg$mc_obct.v:142$4255 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u2.\u0.$verific$b3_last_row_reg$mc_obct.v:196$4294 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u2.\u0.$verific$b2_last_row_reg$mc_obct.v:193$4292 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u2.\u0.$verific$b1_last_row_reg$mc_obct.v:190$4290 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u2.\u0.$verific$b0_last_row_reg$mc_obct.v:187$4288 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u1.\u0.$verific$out_r_reg$mc_incn_r.v:92$4190 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u1.$verific$sram_addr_reg$mc_adr_sel.v:168$4004 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u1.$verific$row_adr_reg$mc_adr_sel.v:238$4026 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u1.$verific$col_adr_reg$mc_adr_sel.v:205$4021 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u1.$verific$bank_adr_reg$mc_adr_sel.v:272$4030 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u1.$verific$acs_addr_reg$mc_adr_sel.v:178$4011 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u0.\u1.$verific$tms_reg$mc_cs_rf.v:190$4096 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.\u1.$verific$lmr_req_we_reg$mc_cs_rf.v:198$4098 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.\u1.$verific$lmr_req_reg$mc_cs_rf.v:206$4104 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.\u1.$verific$inited_reg$mc_cs_rf.v:227$4115 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.\u1.$verific$init_req_we_reg$mc_cs_rf.v:214$4106 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.\u1.$verific$init_req_reg$mc_cs_rf.v:222$4113 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u0.\u1.$verific$csc_reg$mc_cs_rf.v:184$4092 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u0.\u0.$verific$tms_reg$mc_cs_rf.v:190$3443 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.\u0.$verific$lmr_req_we_reg$mc_cs_rf.v:198$3445 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.\u0.$verific$lmr_req_reg$mc_cs_rf.v:206$3451 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.\u0.$verific$inited_reg$mc_cs_rf.v:227$3462 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.\u0.$verific$init_req_we_reg$mc_cs_rf.v:214$3453 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.\u0.$verific$init_req_reg$mc_cs_rf.v:222$3460 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u0.\u0.$verific$csc_reg$mc_cs_rf.v:184$3438 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.$verific$wp_err_reg$mc_rf.v:360$1598 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u0.$verific$wb_addr_r_reg$mc_rf.v:282$1538 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.$verific$tms_reg$mc_rf.v:402$1637 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.$verific$sreq_cs_le_reg$mc_rf.v:482$1686 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.$verific$spec_req_cs_reg$mc_rf.v:478$1679 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.$verific$sp_tms_reg$mc_rf.v:444$1656 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.$verific$sp_csc_reg$mc_rf.v:423$1646 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.$verific$rst_r3_reg$mc_rf.v:330$1573 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.$verific$rst_r2_reg$mc_rf.v:326$1571 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.$verific$rst_r1_reg$mc_rf.v:322$1569 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.$verific$rf_we_reg$mc_rf.v:286$1547 ($aldff) from module mc_top.
Removing never-active async load on $flatten\u0.$verific$poc_reg$mc_rf.v:333$1576 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.$verific$lmr_req_reg$mc_rf.v:503$1724 ($aldff) from module mc_top.
Changing const-value async load to async reset on $flatten\u0.$verific$init_req_reg$mc_rf.v:498$1715 ($aldff) from module mc_top.

11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..
Removed 24 unused cells and 98 unused wires.
<suppressed ~25 debug messages>

11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.

11.9. Rerunning OPT passes. (Maybe there is more to do..)

11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mc_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~148 debug messages>

11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mc_top.
Performed a total of 0 changes.

11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
Removed a total of 0 cells.

11.13. Executing OPT_DFF pass (perform DFF optimizations).

11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..

11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.

11.16. Finished OPT passes. (There is nothing left to do.)

12. Executing FSM pass (extract and optimize FSM).

12.1. Executing FSM_DETECT pass (finding FSMs in design).

12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..

12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

13. Executing OPT pass (performing simple optimizations).

13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.

13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
Removed a total of 0 cells.

13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mc_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~148 debug messages>

13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mc_top.
Performed a total of 0 changes.

13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
Removed a total of 0 cells.

13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $flatten\u7.$verific$mc_dqm_reg$mc_mem_if.v:267$6233 ($dff) from module mc_top (D = $flatten\u7.$verific$n280$6181, Q = \u7.mc_dqm, rval = 4'1111).
Adding EN signal on $flatten\u7.$verific$mc_dqm_r_reg$mc_mem_if.v:258$6225 ($dff) from module mc_top (D = \wb_sel_i, Q = \u7.mc_dqm_r).
Adding SRST signal on $flatten\u7.$verific$mc_addr_reg$mc_mem_if.v:254$6221 ($dff) from module mc_top (D = $flatten\u1.$verific$n134$3866 [23:15], Q = \u7.mc_addr [23:15], rval = 9'000000000).
Adding SRST signal on $flatten\u7.$verific$mc_addr_reg$mc_mem_if.v:254$6221 ($dff) from module mc_top (D = \u1.mc_addr_d [10], Q = \u7.mc_addr [10], rval = 1'1).
Adding EN signal on $flatten\u6.$verific$wr_hold_reg$mc_wb_if.v:216$6114 ($adff) from module mc_top (D = \wb_we_i, Q = \u6.wr_hold).
Adding EN signal on $flatten\u6.$verific$wb_first_r_reg$mc_wb_if.v:211$6110 ($adff) from module mc_top (D = $flatten\u6.$verific$n93$6022, Q = \u6.wb_first_r).
Adding EN signal on $flatten\u6.$verific$rmw_en_reg$mc_wb_if.v:171$6054 ($adff) from module mc_top (D = $flatten\u6.$verific$n12$5977, Q = \u6.rmw_en).
Adding EN signal on $flatten\u5.$verific$wr_cycle_reg$mc_timing.v:604$5375 ($adff) from module mc_top (D = $flatten\u5.$verific$n192$4725, Q = \u5.wr_cycle).
Adding EN signal on $flatten\u5.$verific$wb_stb_first_reg$mc_timing.v:805$5546 ($adff) from module mc_top (D = $flatten\u5.$verific$n1019$4797, Q = \u5.wb_stb_first).
Adding EN signal on $flatten\u5.$verific$wb_cycle_reg$mc_timing.v:612$5380 ($adff) from module mc_top (D = $flatten\u5.$verific$n201$4729, Q = \u5.wb_cycle).
Adding EN signal on $flatten\u5.$verific$timer_reg$mc_timing.v:732$5495 ($adff) from module mc_top (D = $flatten\u5.$verific$n799$5150, Q = \u5.timer).
Adding EN signal on $flatten\u5.$verific$timer2_reg$mc_timing.v:693$5448 ($dff) from module mc_top (D = $flatten\u5.$verific$n537$5125, Q = \u5.timer2).
Adding EN signal on $flatten\u5.$verific$susp_sel_r_reg$mc_timing.v:664$5424 ($adff) from module mc_top (D = $flatten\u5.$verific$n303$4753, Q = \u5.susp_sel_r).
Adding EN signal on $flatten\u5.$verific$state_reg$mc_timing.v:813$5549 ($adff) from module mc_top (D = \u5.next_state, Q = \u5.state).
Adding SRST signal on $flatten\u5.$verific$pack_le2_reg$mc_timing.v:495$5307 ($dff) from module mc_top (D = \u5.bw8, Q = \u5.pack_le2, rval = 1'0).
Adding EN signal on $flatten\u5.$verific$mc_adv_r_reg$mc_timing.v:505$5313 ($adff) from module mc_top (D = \u5.mc_adv_r1, Q = \u5.mc_adv_r).
Adding EN signal on $flatten\u5.$verific$mc_adv_r1_reg$mc_timing.v:500$5310 ($adff) from module mc_top (D = \u5.mc_adv, Q = \u5.mc_adv_r1).
Adding SRST signal on $flatten\u5.$verific$ir_cnt_reg$mc_timing.v:744$5505 ($dff) from module mc_top (D = $flatten\u5.$verific$n839$5154, Q = \u5.ir_cnt, rval = 4'0010).
Adding EN signal on $auto$ff.cc:262:slice$6441 ($sdff) from module mc_top (D = $flatten\u5.$verific$n829$5152, Q = \u5.ir_cnt).
Adding SRST signal on $flatten\u5.$verific$cnt_reg$mc_timing.v:637$5412 ($dff) from module mc_top (D = $flatten\u5.$verific$n5216$4923, Q = \u5.cnt, rval = 1'0).
Adding EN signal on $flatten\u5.$verific$cmd_asserted_reg$mc_timing.v:538$5336 ($adff) from module mc_top (D = \u5.cmd [3], Q = \u5.cmd_asserted).
Adding EN signal on $flatten\u5.$verific$cmd_asserted2_reg$mc_timing.v:543$5339 ($adff) from module mc_top (D = \u5.cmd_asserted, Q = \u5.cmd_asserted2).
Adding EN signal on $flatten\u5.$verific$cke_r_reg$mc_timing.v:565$5351 ($dff) from module mc_top (D = \u5.cke_d, Q = \u5.cke_r).
Adding SRST signal on $flatten\u5.$verific$burst_cnt_reg$mc_timing.v:766$5520 ($dff) from module mc_top (D = $flatten\u5.$verific$n945$5162, Q = \u5.burst_cnt, rval = 11'00000000100).
Adding EN signal on $auto$ff.cc:262:slice$6453 ($sdff) from module mc_top (D = $flatten\u5.$verific$n945$5162, Q = \u5.burst_cnt).
Adding EN signal on $flatten\u5.$verific$ap_en_reg$mc_timing.v:777$5530 ($adff) from module mc_top (D = $flatten\u5.$verific$n991$4785, Q = \u5.ap_en).
Adding EN signal on $flatten\u5.$verific$ack_cnt_reg$mc_timing.v:629$5398 ($adff) from module mc_top (D = $flatten\u5.$verific$n256$5107, Q = \u5.ack_cnt).
Adding EN signal on $flatten\u4.$verific$rfr_req_reg$mc_refresh.v:208$4670 ($adff) from module mc_top (D = $flatten\u4.$verific$n183$4606, Q = \u4.rfr_req).
Adding EN signal on $flatten\u4.$verific$rfr_cnt_reg$mc_refresh.v:189$4641 ($adff) from module mc_top (D = $flatten\u4.$verific$n134$4615, Q = \u4.rfr_cnt).
Adding EN signal on $flatten\u4.$verific$ps_cnt_reg$mc_refresh.v:167$4628 ($adff) from module mc_top (D = $flatten\u4.$verific$n56$4611, Q = \u4.ps_cnt).
Adding EN signal on $flatten\u3.\u0.$verific$wr_adr_reg$mc_rd_fifo.v:108$4549 ($adff) from module mc_top (D = $flatten\u3.\u0.$verific$n56$4528, Q = \u3.u0.wr_adr).
Adding EN signal on $flatten\u3.\u0.$verific$rd_adr_reg$mc_rd_fifo.v:101$4545 ($adff) from module mc_top (D = $flatten\u3.\u0.$verific$n25$4525, Q = \u3.u0.rd_adr).
Adding EN signal on $flatten\u3.\u0.$verific$r3_reg$mc_rd_fifo.v:120$4562 ($dff) from module mc_top (D = \u7.mc_data_ir, Q = \u3.u0.r3).
Adding EN signal on $flatten\u3.\u0.$verific$r2_reg$mc_rd_fifo.v:117$4559 ($dff) from module mc_top (D = \u7.mc_data_ir, Q = \u3.u0.r2).
Adding EN signal on $flatten\u3.\u0.$verific$r1_reg$mc_rd_fifo.v:114$4556 ($dff) from module mc_top (D = \u7.mc_data_ir, Q = \u3.u0.r1).
Adding EN signal on $flatten\u3.\u0.$verific$r0_reg$mc_rd_fifo.v:111$4553 ($dff) from module mc_top (D = \u7.mc_data_ir, Q = \u3.u0.r0).
Adding EN signal on $flatten\u3.$verific$mc_dp_o_reg$mc_dp.v:229$4489 ($dff) from module mc_top (D = { $flatten\u3.$verific$n534$4329 $flatten\u3.$verific$n535$4330 $flatten\u3.$verific$n536$4331 $flatten\u3.$verific$n537$4332 }, Q = \u3.mc_dp_o).
Adding EN signal on $flatten\u3.$verific$mc_data_o_reg$mc_dp.v:197$4466 ($dff) from module mc_top (D = \wb_data_i, Q = \u3.mc_data_o).
Adding EN signal on $flatten\u3.$verific$byte2_reg$mc_dp.v:213$4479 ($dff) from module mc_top (D = \u7.mc_data_ir [7:0], Q = \u3.byte2).
Adding EN signal on $flatten\u3.$verific$byte1_reg$mc_dp.v:210$4477 ($dff) from module mc_top (D = $flatten\u3.$verific$n318$4360, Q = \u3.byte1).
Adding EN signal on $flatten\u3.$verific$byte0_reg$mc_dp.v:205$4469 ($dff) from module mc_top (D = \u7.mc_data_ir [7:0], Q = \u3.byte0).
Adding EN signal on $flatten\u2.\u1.$verific$bank3_open_reg$mc_obct.v:169$4276 ($adff) from module mc_top (D = $flatten\u2.\u1.$verific$n54$4223, Q = \u2.u1.bank3_open).
Adding EN signal on $flatten\u2.\u1.$verific$bank2_open_reg$mc_obct.v:160$4269 ($adff) from module mc_top (D = $flatten\u2.\u1.$verific$n41$4217, Q = \u2.u1.bank2_open).
Adding EN signal on $flatten\u2.\u1.$verific$bank1_open_reg$mc_obct.v:151$4262 ($adff) from module mc_top (D = $flatten\u2.\u1.$verific$n28$4211, Q = \u2.u1.bank1_open).
Adding EN signal on $flatten\u2.\u1.$verific$bank0_open_reg$mc_obct.v:142$4255 ($adff) from module mc_top (D = $flatten\u2.\u1.$verific$n15$4205, Q = \u2.u1.bank0_open).
Adding EN signal on $flatten\u2.\u1.$verific$b3_last_row_reg$mc_obct.v:196$4294 ($dff) from module mc_top (D = \u1.row_adr, Q = \u2.u1.b3_last_row).
Adding EN signal on $flatten\u2.\u1.$verific$b2_last_row_reg$mc_obct.v:193$4292 ($dff) from module mc_top (D = \u1.row_adr, Q = \u2.u1.b2_last_row).
Adding EN signal on $flatten\u2.\u1.$verific$b1_last_row_reg$mc_obct.v:190$4290 ($dff) from module mc_top (D = \u1.row_adr, Q = \u2.u1.b1_last_row).
Adding EN signal on $flatten\u2.\u1.$verific$b0_last_row_reg$mc_obct.v:187$4288 ($dff) from module mc_top (D = \u1.row_adr, Q = \u2.u1.b0_last_row).
Adding EN signal on $flatten\u2.\u0.$verific$bank3_open_reg$mc_obct.v:169$4276 ($adff) from module mc_top (D = $flatten\u2.\u0.$verific$n54$4223, Q = \u2.u0.bank3_open).
Adding EN signal on $flatten\u2.\u0.$verific$bank2_open_reg$mc_obct.v:160$4269 ($adff) from module mc_top (D = $flatten\u2.\u0.$verific$n41$4217, Q = \u2.u0.bank2_open).
Adding EN signal on $flatten\u2.\u0.$verific$bank1_open_reg$mc_obct.v:151$4262 ($adff) from module mc_top (D = $flatten\u2.\u0.$verific$n28$4211, Q = \u2.u0.bank1_open).
Adding EN signal on $flatten\u2.\u0.$verific$bank0_open_reg$mc_obct.v:142$4255 ($adff) from module mc_top (D = $flatten\u2.\u0.$verific$n15$4205, Q = \u2.u0.bank0_open).
Adding EN signal on $flatten\u2.\u0.$verific$b3_last_row_reg$mc_obct.v:196$4294 ($dff) from module mc_top (D = \u1.row_adr, Q = \u2.u0.b3_last_row).
Adding EN signal on $flatten\u2.\u0.$verific$b2_last_row_reg$mc_obct.v:193$4292 ($dff) from module mc_top (D = \u1.row_adr, Q = \u2.u0.b2_last_row).
Adding EN signal on $flatten\u2.\u0.$verific$b1_last_row_reg$mc_obct.v:190$4290 ($dff) from module mc_top (D = \u1.row_adr, Q = \u2.u0.b1_last_row).
Adding EN signal on $flatten\u2.\u0.$verific$b0_last_row_reg$mc_obct.v:187$4288 ($dff) from module mc_top (D = \u1.row_adr, Q = \u2.u0.b0_last_row).
Adding EN signal on $flatten\u1.$verific$sram_addr_reg$mc_adr_sel.v:168$4004 ($dff) from module mc_top (D = \wb_addr_i [25:2], Q = \u1.sram_addr).
Adding EN signal on $flatten\u1.$verific$row_adr_reg$mc_adr_sel.v:238$4026 ($dff) from module mc_top (D = $flatten\u1.$verific$n975$3909, Q = \u1.row_adr).
Adding EN signal on $flatten\u1.$verific$col_adr_reg$mc_adr_sel.v:205$4021 ($dff) from module mc_top (D = $flatten\u1.$verific$n660$3887, Q = \u1.col_adr).
Adding EN signal on $flatten\u1.$verific$bank_adr_reg$mc_adr_sel.v:272$4030 ($dff) from module mc_top (D = $flatten\u1.$verific$n1079$3931, Q = \u1.bank_adr).
Adding EN signal on $flatten\u1.$verific$acs_addr_reg$mc_adr_sel.v:178$4011 ($dff) from module mc_top (D = $flatten\u1.$verific$n462$3875, Q = \u1.acs_addr).
Adding SRST signal on $flatten\u0.\u1.$verific$tms_reg$mc_cs_rf.v:190$4096 ($dff) from module mc_top (D = $flatten\u0.\u1.$verific$n269$4069, Q = \u0.u1.tms, rval = 0).
Adding EN signal on $auto$ff.cc:262:slice$6526 ($sdff) from module mc_top (D = \wb_data_i, Q = \u0.u1.tms).
Adding EN signal on $flatten\u0.\u1.$verific$lmr_req_reg$mc_cs_rf.v:206$4104 ($adff) from module mc_top (D = $flatten\u0.\u1.$verific$n381$4049, Q = \u0.u1.lmr_req).
Adding EN signal on $flatten\u0.\u1.$verific$inited_reg$mc_cs_rf.v:227$4115 ($adff) from module mc_top (D = 1'1, Q = \u0.u1.inited).
Adding EN signal on $flatten\u0.\u1.$verific$init_req_reg$mc_cs_rf.v:222$4113 ($adff) from module mc_top (D = $flatten\u0.\u1.$verific$n400$4056, Q = \u0.u1.init_req).
Adding SRST signal on $flatten\u0.\u1.$verific$csc_reg$mc_cs_rf.v:184$4092 ($dff) from module mc_top (D = $flatten\u0.\u1.$verific$n101$4067, Q = \u0.u1.csc, rval = 0).
Adding EN signal on $auto$ff.cc:262:slice$6535 ($sdff) from module mc_top (D = \wb_data_i, Q = \u0.u1.csc).
Adding SRST signal on $flatten\u0.\u0.$verific$tms_reg$mc_cs_rf.v:190$3443 ($dff) from module mc_top (D = $flatten\u0.\u0.$verific$n270$3414, Q = \u0.u0.tms, rval = 32'11111111111111111111111111111111).
Adding EN signal on $auto$ff.cc:262:slice$6537 ($sdff) from module mc_top (D = \wb_data_i, Q = \u0.u0.tms).
Adding EN signal on $flatten\u0.\u0.$verific$lmr_req_reg$mc_cs_rf.v:206$3451 ($adff) from module mc_top (D = $flatten\u0.\u0.$verific$n382$3393, Q = \u0.u0.lmr_req).
Adding EN signal on $flatten\u0.\u0.$verific$inited_reg$mc_cs_rf.v:227$3462 ($adff) from module mc_top (D = 1'1, Q = \u0.u0.inited).
Adding EN signal on $flatten\u0.\u0.$verific$init_req_reg$mc_cs_rf.v:222$3460 ($adff) from module mc_top (D = $flatten\u0.\u0.$verific$n401$3400, Q = \u0.u0.init_req).
Adding SRST signal on $flatten\u0.\u0.$verific$csc_reg$mc_cs_rf.v:184$3438 ($dff) from module mc_top (D = { $flatten\u0.\u0.$verific$n102$3411 [31:6] $flatten\u0.\u0.$verific$n102$3411 [3] }, Q = { \u0.u0.csc [31:6] \u0.u0.csc [3] }, rval = 27'000000000000000000000000000).
Adding EN signal on $flatten\u0.\u0.$verific$csc_reg$mc_cs_rf.v:184$3438 ($dff) from module mc_top (D = { $flatten\u0.\u0.$verific$n135$3412 [5:4] $flatten\u0.\u0.$verific$n135$3412 [2:0] }, Q = { \u0.u0.csc [5:4] \u0.u0.csc [2:0] }).
Adding EN signal on $auto$ff.cc:262:slice$6546 ($sdff) from module mc_top (D = { \wb_data_i [31:6] \wb_data_i [3] }, Q = { \u0.u0.csc [31:6] \u0.u0.csc [3] }).
Adding EN signal on $flatten\u0.$verific$wp_err_reg$mc_rf.v:360$1598 ($adff) from module mc_top (D = $flatten\u0.$verific$n1078$1365, Q = \u0.wp_err).
Adding EN signal on $flatten\u0.$verific$tms_reg$mc_rf.v:402$1637 ($adff) from module mc_top (D = $flatten\u0.$verific$n2176$1505, Q = \u0.tms).
Adding EN signal on $flatten\u0.$verific$spec_req_cs_reg$mc_rf.v:478$1679 ($adff) from module mc_top (D = { \u0.spec_req_cs_d [7:1] \u0.spec_req_cs_t [0] }, Q = \u0.spec_req_cs).
Adding EN signal on $flatten\u0.$verific$sp_tms_reg$mc_rf.v:444$1656 ($adff) from module mc_top (D = $flatten\u0.$verific$n3371$1523, Q = \u0.sp_tms).
Adding EN signal on $flatten\u0.$verific$sp_csc_reg$mc_rf.v:423$1646 ($adff) from module mc_top (D = $flatten\u0.$verific$n2773$1515, Q = \u0.sp_csc).
Adding EN signal on $flatten\u0.$verific$poc_reg$mc_rf.v:333$1576 ($dff) from module mc_top (D = \u7.mc_data_ir [31:0], Q = \u0.poc).
Adding EN signal on $flatten\u0.$verific$csr_r_reg$mc_rf.v:298$1556_1 ($adff) from module mc_top (D = \wb_data_i [10:1], Q = \u0.csr_r [10:1]).
Adding EN signal on $flatten\u0.$verific$csr_r2_reg$mc_rf.v:292$1553 ($adff) from module mc_top (D = \wb_data_i [31:24], Q = \u0.csr_r2).
Adding EN signal on $flatten\u0.$verific$csc_reg$mc_rf.v:381$1617 ($adff) from module mc_top (D = $flatten\u0.$verific$n1578$1488, Q = \u0.csc).
Adding EN signal on $flatten\u0.$verific$csc_mask_r_reg$mc_rf.v:311$1567 ($adff) from module mc_top (D = \wb_data_i [10:0], Q = \u0.csc_mask_r).
Adding EN signal on $flatten\u0.$verific$cs_reg$mc_rf.v:351$1585 ($adff) from module mc_top (D = { 6'000000 \u0.cs1 \u0.cs0 }, Q = \u0.cs).
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$6564 ($adffe) from module mc_top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$6564 ($adffe) from module mc_top.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$6564 ($adffe) from module mc_top.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$6564 ($adffe) from module mc_top.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$6564 ($adffe) from module mc_top.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$6564 ($adffe) from module mc_top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$6556 ($adffe) from module mc_top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$6556 ($adffe) from module mc_top.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$6556 ($adffe) from module mc_top.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$6556 ($adffe) from module mc_top.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$6556 ($adffe) from module mc_top.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$6556 ($adffe) from module mc_top.

13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..
Removed 70 unused cells and 63 unused wires.
<suppressed ~73 debug messages>

13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.
<suppressed ~28 debug messages>

13.9. Rerunning OPT passes. (Maybe there is more to do..)

13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mc_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~109 debug messages>

13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mc_top.
Performed a total of 0 changes.

13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
<suppressed ~21 debug messages>
Removed a total of 7 cells.

13.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 1-bit at position 2 on $flatten\u7.$verific$mc_cs__reg$mc_mem_if.v:354$6248 ($adff) from module mc_top.
Setting constant 1-bit at position 3 on $flatten\u7.$verific$mc_cs__reg$mc_mem_if.v:354$6248 ($adff) from module mc_top.
Setting constant 1-bit at position 4 on $flatten\u7.$verific$mc_cs__reg$mc_mem_if.v:354$6248 ($adff) from module mc_top.
Setting constant 1-bit at position 5 on $flatten\u7.$verific$mc_cs__reg$mc_mem_if.v:354$6248 ($adff) from module mc_top.
Setting constant 1-bit at position 6 on $flatten\u7.$verific$mc_cs__reg$mc_mem_if.v:354$6248 ($adff) from module mc_top.
Setting constant 1-bit at position 7 on $flatten\u7.$verific$mc_cs__reg$mc_mem_if.v:354$6248 ($adff) from module mc_top.

13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..
Removed 0 unused cells and 7 unused wires.
<suppressed ~1 debug messages>

13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.

13.16. Rerunning OPT passes. (Maybe there is more to do..)

13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mc_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~112 debug messages>

13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mc_top.
Performed a total of 0 changes.

13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
Removed a total of 0 cells.

13.20. Executing OPT_DFF pass (perform DFF optimizations).

13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..

13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.

13.23. Finished OPT passes. (There is nothing left to do.)

14. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6397 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6395 ($ne).
Removed top 2 bits (of 3) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6423 ($ne).
Removed top 21 bits (of 32) from mux cell mc_top.$verific$mux_12$mc_top.v:280$24 ($mux).
Removed top 7 bits (of 8) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6315 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6300 ($ne).
Removed top 2 bits (of 4) from port B of cell mc_top.$flatten\u0.\u1.$verific$equal_14$mc_cs_rf.v:178$4083 ($eq).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6431 ($ne).
Removed top 2 bits (of 4) from port B of cell mc_top.$flatten\u0.\u0.$verific$equal_14$mc_cs_rf.v:178$3428 ($eq).
Removed top 26 bits (of 32) from mux cell mc_top.$flatten\u0.\u0.$verific$mux_24$mc_cs_rf.v:184$3437 ($mux).
Removed top 6 bits (of 8) from mux cell mc_top.$flatten\u0.$verific$mux_317$mc_rf.v:510$1725 ($mux).
Removed top 6 bits (of 8) from port A of cell mc_top.$flatten\u0.$verific$and_352$mc_rf.v:453$1665 ($and).
Removed top 21 bits (of 32) from FF cell mc_top.$auto$ff.cc:262:slice$6558 ($adffe).
Removed top 21 bits (of 32) from mux cell mc_top.$flatten\u0.$verific$mux_190$mc_rf.v:422$1644 ($mux).
Removed top 21 bits (of 32) from mux cell mc_top.$flatten\u0.$verific$mux_189$mc_rf.v:422$1643 ($mux).
Removed top 3 bits (of 5) from port B of cell mc_top.$flatten\u0.$verific$equal_78$mc_rf.v:310$1563 ($eq).
Removed top 20 bits (of 32) from FF cell mc_top.$auto$ff.cc:262:slice$6562 ($adffe).
Removed top 1 bits (of 3) from port B of cell mc_top.$flatten\u0.$verific$equal_30$mc_rf.v:286$1540 ($eq).
Removed top 11 bits (of 12) from port B of cell mc_top.$flatten\u1.\u0.$verific$add_5$mc_incn_r.v:92$4188 ($add).
Removed top 11 bits (of 12) from mux cell mc_top.$flatten\u1.\u0.$verific$mux_10$mc_incn_r.v:97$4192 ($mux).
Removed top 9 bits (of 24) from mux cell mc_top.$flatten\u1.$verific$mux_31$mc_adr_sel.v:154$3950 ($mux).
Removed top 2 bits (of 3) from port B of cell mc_top.$flatten\u1.$verific$equal_25$mc_adr_sel.v:153$3945 ($eq).
Removed top 1 bits (of 3) from port B of cell mc_top.$flatten\u1.$verific$equal_23$mc_adr_sel.v:151$3943 ($eq).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6554 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6351 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6349 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6345 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6343 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6341 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6339 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6337 ($ne).
Removed top 1 bits (of 3) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6335 ($ne).
Removed top 4 bits (of 7) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6331 ($ne).
Removed top 2 bits (of 8) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6325 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$flatten\u2.\u0.$verific$equal_18$mc_obct.v:147$4256 ($eq).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6433 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6450 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6435 ($ne).
Removed top 3 bits (of 4) from port B of cell mc_top.$flatten\u3.\u0.$verific$equal_41$mc_rd_fifo.v:124$4563 ($eq).
Removed top 2 bits (of 4) from port B of cell mc_top.$flatten\u3.\u0.$verific$equal_42$mc_rd_fifo.v:125$4564 ($eq).
Removed top 1 bits (of 4) from port B of cell mc_top.$flatten\u3.\u0.$verific$equal_43$mc_rd_fifo.v:126$4565 ($eq).
Removed top 1 bits (of 2) from port B of cell mc_top.$flatten\u3.$verific$equal_32$mc_dp.v:210$4472 ($eq).
Removed top 2 bits (of 3) from port B of cell mc_top.$flatten\u3.$verific$equal_7$mc_dp.v:173$4375 ($eq).
Removed top 7 bits (of 8) from port B of cell mc_top.$flatten\u4.$verific$add_32$mc_refresh.v:189$4637 ($add).
Removed top 7 bits (of 8) from port B of cell mc_top.$flatten\u4.$verific$add_11$mc_refresh.v:167$4624 ($add).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6387 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6385 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6381 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6379 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6375 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6371 ($ne).
Removed top 2 bits (of 4) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6369 ($ne).
Removed top 2 bits (of 3) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6367 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6365 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6363 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6361 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6357 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6355 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6359 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6353 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6391 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6421 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6419 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6417 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6415 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6411 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6425 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6409 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6407 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6405 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6403 ($ne).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6401 ($ne).
Removed top 33 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_906$mc_timing.v:1721$5868 ($eq).
Removed top 34 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_905$mc_timing.v:1714$5867 ($eq).
Removed top 35 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_904$mc_timing.v:1706$5866 ($eq).
Removed top 36 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_903$mc_timing.v:1695$5865 ($eq).
Removed top 37 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_902$mc_timing.v:1690$5864 ($eq).
Removed top 38 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_901$mc_timing.v:1681$5863 ($eq).
Removed top 30 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_900$mc_timing.v:1667$5862 ($eq).
Removed top 31 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_899$mc_timing.v:1660$5861 ($eq).
Removed top 32 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_898$mc_timing.v:1654$5860 ($eq).
Removed top 39 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_897$mc_timing.v:1642$5859 ($eq).
Removed top 40 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_896$mc_timing.v:1632$5858 ($eq).
Removed top 41 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_895$mc_timing.v:1620$5857 ($eq).
Removed top 42 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_894$mc_timing.v:1614$5856 ($eq).
Removed top 43 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_893$mc_timing.v:1603$5855 ($eq).
Removed top 44 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_892$mc_timing.v:1597$5854 ($eq).
Removed top 45 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_891$mc_timing.v:1588$5853 ($eq).
Removed top 46 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_890$mc_timing.v:1582$5852 ($eq).
Removed top 47 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_889$mc_timing.v:1572$5851 ($eq).
Removed top 48 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_888$mc_timing.v:1559$5850 ($eq).
Removed top 49 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_887$mc_timing.v:1539$5849 ($eq).
Removed top 50 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_886$mc_timing.v:1532$5848 ($eq).
Removed top 53 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_885$mc_timing.v:1522$5847 ($eq).
Removed top 54 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_884$mc_timing.v:1506$5846 ($eq).
Removed top 55 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_883$mc_timing.v:1501$5845 ($eq).
Removed top 56 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_882$mc_timing.v:1493$5844 ($eq).
Removed top 51 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_881$mc_timing.v:1458$5843 ($eq).
Removed top 52 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_880$mc_timing.v:1430$5842 ($eq).
Removed top 57 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_879$mc_timing.v:1408$5841 ($eq).
Removed top 58 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_878$mc_timing.v:1388$5840 ($eq).
Removed top 59 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_877$mc_timing.v:1377$5839 ($eq).
Removed top 60 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_876$mc_timing.v:1367$5838 ($eq).
Removed top 61 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_875$mc_timing.v:1349$5837 ($eq).
Removed top 14 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_874$mc_timing.v:1338$5836 ($eq).
Removed top 15 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_873$mc_timing.v:1332$5835 ($eq).
Removed top 16 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_872$mc_timing.v:1321$5834 ($eq).
Removed top 17 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_871$mc_timing.v:1309$5833 ($eq).
Removed top 18 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_870$mc_timing.v:1301$5832 ($eq).
Removed top 25 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_869$mc_timing.v:1294$5831 ($eq).
Removed top 26 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_868$mc_timing.v:1288$5830 ($eq).
Removed top 27 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_867$mc_timing.v:1281$5829 ($eq).
Removed top 19 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_866$mc_timing.v:1271$5828 ($eq).
Removed top 20 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_865$mc_timing.v:1261$5827 ($eq).
Removed top 21 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_864$mc_timing.v:1250$5826 ($eq).
Removed top 22 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_863$mc_timing.v:1241$5825 ($eq).
Removed top 23 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_862$mc_timing.v:1230$5824 ($eq).
Removed top 24 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_861$mc_timing.v:1221$5823 ($eq).
Removed top 28 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_860$mc_timing.v:1207$5822 ($eq).
Removed top 29 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_859$mc_timing.v:1199$5821 ($eq).
Removed top 6 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_858$mc_timing.v:1180$5820 ($eq).
Removed top 7 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_857$mc_timing.v:1158$5819 ($eq).
Removed top 8 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_856$mc_timing.v:1151$5818 ($eq).
Removed top 9 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_855$mc_timing.v:1136$5817 ($eq).
Removed top 10 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_854$mc_timing.v:1125$5816 ($eq).
Removed top 11 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_853$mc_timing.v:1116$5815 ($eq).
Removed top 12 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_852$mc_timing.v:1105$5814 ($eq).
Removed top 13 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_851$mc_timing.v:1095$5813 ($eq).
Removed top 1 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_849$mc_timing.v:1074$5811 ($eq).
Removed top 2 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_848$mc_timing.v:1064$5810 ($eq).
Removed top 3 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_847$mc_timing.v:1058$5809 ($eq).
Removed top 4 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_846$mc_timing.v:1046$5808 ($eq).
Removed top 5 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_845$mc_timing.v:1036$5807 ($eq).
Removed top 62 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_844$mc_timing.v:1024$5806 ($eq).
Removed top 63 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_843$mc_timing.v:1017$5805 ($eq).
Removed top 64 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_842$mc_timing.v:900$5804 ($eq).
Removed top 65 bits (of 66) from port B of cell mc_top.$flatten\u5.$verific$equal_841$mc_timing.v:895$5803 ($eq).
Removed top 2 bits (of 3) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6427 ($ne).
Removed top 1 bits (of 3) from port B of cell mc_top.$flatten\u5.$verific$equal_381$mc_timing.v:908$5554 ($eq).
Removed top 10 bits (of 11) from port B of cell mc_top.$flatten\u5.$verific$sub_327$mc_timing.v:766$5515 ($sub).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6399 ($ne).
Removed top 3 bits (of 4) from port B of cell mc_top.$flatten\u5.$verific$sub_311$mc_timing.v:744$5501 ($sub).
Removed top 7 bits (of 8) from port B of cell mc_top.$flatten\u5.$verific$sub_289$mc_timing.v:732$5482 ($sub).
Removed top 2 bits (of 4) from port A of cell mc_top.$flatten\u5.$verific$add_272$mc_timing.v:704$5467 ($add).
Removed top 8 bits (of 9) from port B of cell mc_top.$flatten\u5.$verific$sub_241$mc_timing.v:693$5438 ($sub).
Removed top 4 bits (of 32) from mux cell mc_top.$flatten\u5.$verific$mux_230$mc_timing.v:676$5429 ($mux).
Removed top 3 bits (of 4) from port B of cell mc_top.$flatten\u5.$verific$sub_181$mc_timing.v:629$5393 ($sub).
Removed top 3 bits (of 4) from port B of cell mc_top.$flatten\u5.$verific$add_177$mc_timing.v:627$5389 ($add).
Removed top 1 bits (of 2) from port B of cell mc_top.$flatten\u5.$verific$equal_62$mc_timing.v:509$5316 ($eq).
Removed top 1 bits (of 2) from port B of cell mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6393 ($ne).
Removed top 6 bits (of 8) from port Y of cell mc_top.$flatten\u7.$verific$inv_159$mc_mem_if.v:354$6250 ($not).
Removed top 6 bits (of 8) from port A of cell mc_top.$flatten\u7.$verific$inv_159$mc_mem_if.v:354$6250 ($not).
Removed top 6 bits (of 8) from port Y of cell mc_top.$flatten\u7.$verific$and_160$mc_mem_if.v:354$6249 ($and).
Removed top 6 bits (of 8) from port A of cell mc_top.$flatten\u7.$verific$and_160$mc_mem_if.v:354$6249 ($and).
Removed top 6 bits (of 8) from port B of cell mc_top.$flatten\u7.$verific$and_160$mc_mem_if.v:354$6249 ($and).
Removed top 6 bits (of 8) from mux cell mc_top.$flatten\u7.$verific$mux_168$mc_mem_if.v:353$6247 ($mux).
Removed top 4 bits (of 32) from mux cell mc_top.$verific$mux_10$mc_top.v:279$22 ($mux).
Removed top 26 bits (of 32) from mux cell mc_top.$flatten\u0.\u0.$verific$mux_23$mc_cs_rf.v:184$3436 ($mux).
Removed top 20 bits (of 32) from mux cell mc_top.$flatten\u0.$verific$mux_147$mc_rf.v:380$1615 ($mux).
Removed top 20 bits (of 32) from mux cell mc_top.$flatten\u0.$verific$mux_146$mc_rf.v:380$1614 ($mux).
Removed top 4 bits (of 32) from FF cell mc_top.$auto$ff.cc:262:slice$6557 ($adffe).
Removed top 4 bits (of 32) from FF cell mc_top.$auto$ff.cc:262:slice$6555 ($adffe).
Removed top 4 bits (of 32) from mux cell mc_top.$flatten\u0.$verific$mux_212$mc_rf.v:443$1654 ($mux).
Removed top 4 bits (of 32) from mux cell mc_top.$flatten\u0.$verific$mux_169$mc_rf.v:401$1635 ($mux).
Removed top 4 bits (of 32) from mux cell mc_top.$flatten\u0.$verific$mux_211$mc_rf.v:443$1653 ($mux).
Removed top 4 bits (of 32) from mux cell mc_top.$flatten\u0.$verific$mux_168$mc_rf.v:401$1634 ($mux).
Removed top 20 bits (of 32) from wire mc_top.$flatten\u0.$verific$n1545$1487.
Removed top 20 bits (of 32) from wire mc_top.$flatten\u0.$verific$n1578$1488.
Removed top 4 bits (of 32) from wire mc_top.$flatten\u0.$verific$n2143$1504.
Removed top 4 bits (of 32) from wire mc_top.$flatten\u0.$verific$n2176$1505.
Removed top 21 bits (of 32) from wire mc_top.$flatten\u0.$verific$n2740$1514.
Removed top 21 bits (of 32) from wire mc_top.$flatten\u0.$verific$n2773$1515.
Removed top 4 bits (of 32) from wire mc_top.$flatten\u0.$verific$n3338$1522.
Removed top 4 bits (of 32) from wire mc_top.$flatten\u0.$verific$n3371$1523.
Removed top 26 bits (of 32) from wire mc_top.$flatten\u0.\u0.$verific$n102$3411.
Removed top 26 bits (of 32) from wire mc_top.$flatten\u0.\u0.$verific$n135$3412.
Removed top 7 bits (of 46) from wire mc_top.$flatten\u5.$verific$n3968$5211.
Removed top 3 bits (of 4) from wire mc_top.$flatten\u5.$verific$n6553$5254.
Removed top 2 bits (of 27) from wire mc_top.$flatten\u5.$verific$n7174$5265.
Removed top 3 bits (of 4) from wire mc_top.$flatten\u7.$verific$n275$6180.
Removed top 6 bits (of 8) from wire mc_top.$flatten\u7.$verific$n395$6185.
Removed top 6 bits (of 8) from wire mc_top.$flatten\u7.$verific$n397$6187.
Removed top 6 bits (of 8) from wire mc_top.cs.
Removed top 20 bits (of 32) from wire mc_top.csc.
Removed top 21 bits (of 32) from wire mc_top.csc_s.
Removed top 9 bits (of 24) from wire mc_top.mc_addr_d.
Removed top 4 bits (of 32) from wire mc_top.tms.
Removed top 4 bits (of 32) from wire mc_top.tms_s.

15. Executing PEEPOPT pass (run peephole optimizers).

16. Executing PMUXTREE pass.

17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..
Removed 64 unused cells and 118 unused wires.
<suppressed ~65 debug messages>

18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module mc_top:
  creating $macc model for $flatten\u1.\u0.$verific$add_5$mc_incn_r.v:92$4188 ($add).
  creating $macc model for $flatten\u1.\u0.$verific$add_8$mc_incn_r.v:94$4191 ($add).
  creating $macc model for $flatten\u4.$verific$add_11$mc_refresh.v:167$4624 ($add).
  creating $macc model for $flatten\u4.$verific$add_32$mc_refresh.v:189$4637 ($add).
  creating $macc model for $flatten\u5.$verific$add_177$mc_timing.v:627$5389 ($add).
  creating $macc model for $flatten\u5.$verific$add_272$mc_timing.v:704$5467 ($add).
  creating $macc model for $flatten\u5.$verific$sub_181$mc_timing.v:629$5393 ($sub).
  creating $macc model for $flatten\u5.$verific$sub_241$mc_timing.v:693$5438 ($sub).
  creating $macc model for $flatten\u5.$verific$sub_289$mc_timing.v:732$5482 ($sub).
  creating $macc model for $flatten\u5.$verific$sub_311$mc_timing.v:744$5501 ($sub).
  creating $macc model for $flatten\u5.$verific$sub_327$mc_timing.v:766$5515 ($sub).
  creating $alu model for $macc $flatten\u5.$verific$sub_327$mc_timing.v:766$5515.
  creating $alu model for $macc $flatten\u5.$verific$sub_311$mc_timing.v:744$5501.
  creating $alu model for $macc $flatten\u5.$verific$sub_289$mc_timing.v:732$5482.
  creating $alu model for $macc $flatten\u5.$verific$sub_241$mc_timing.v:693$5438.
  creating $alu model for $macc $flatten\u5.$verific$sub_181$mc_timing.v:629$5393.
  creating $alu model for $macc $flatten\u5.$verific$add_272$mc_timing.v:704$5467.
  creating $alu model for $macc $flatten\u5.$verific$add_177$mc_timing.v:627$5389.
  creating $alu model for $macc $flatten\u4.$verific$add_32$mc_refresh.v:189$4637.
  creating $alu model for $macc $flatten\u4.$verific$add_11$mc_refresh.v:167$4624.
  creating $alu model for $macc $flatten\u1.\u0.$verific$add_8$mc_incn_r.v:94$4191.
  creating $alu model for $macc $flatten\u1.\u0.$verific$add_5$mc_incn_r.v:92$4188.
  creating $alu cell for $flatten\u1.\u0.$verific$add_5$mc_incn_r.v:92$4188: $auto$alumacc.cc:485:replace_alu$7172
  creating $alu cell for $flatten\u1.\u0.$verific$add_8$mc_incn_r.v:94$4191: $auto$alumacc.cc:485:replace_alu$7175
  creating $alu cell for $flatten\u4.$verific$add_11$mc_refresh.v:167$4624: $auto$alumacc.cc:485:replace_alu$7178
  creating $alu cell for $flatten\u4.$verific$add_32$mc_refresh.v:189$4637: $auto$alumacc.cc:485:replace_alu$7181
  creating $alu cell for $flatten\u5.$verific$add_177$mc_timing.v:627$5389: $auto$alumacc.cc:485:replace_alu$7184
  creating $alu cell for $flatten\u5.$verific$add_272$mc_timing.v:704$5467: $auto$alumacc.cc:485:replace_alu$7187
  creating $alu cell for $flatten\u5.$verific$sub_181$mc_timing.v:629$5393: $auto$alumacc.cc:485:replace_alu$7190
  creating $alu cell for $flatten\u5.$verific$sub_241$mc_timing.v:693$5438: $auto$alumacc.cc:485:replace_alu$7193
  creating $alu cell for $flatten\u5.$verific$sub_289$mc_timing.v:732$5482: $auto$alumacc.cc:485:replace_alu$7196
  creating $alu cell for $flatten\u5.$verific$sub_311$mc_timing.v:744$5501: $auto$alumacc.cc:485:replace_alu$7199
  creating $alu cell for $flatten\u5.$verific$sub_327$mc_timing.v:766$5515: $auto$alumacc.cc:485:replace_alu$7202
  created 11 $alu and 0 $macc cells.

19. Executing OPT pass (performing simple optimizations).

19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.

19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mc_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~117 debug messages>

19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mc_top.
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$7144: { $flatten\u5.$verific$n7786$5018 $flatten\u5.$verific$n7800$5032 $flatten\u5.$verific$n7802$5034 $flatten\u5.$verific$n7804$5036 $flatten\u5.$verific$n7808$5040 $flatten\u5.$verific$n7812$5044 $auto$rtlil.cc:2393:Or$7133 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$7168: { $flatten\u5.$verific$n7786$5018 $flatten\u5.$verific$n7792$5024 $flatten\u5.$verific$n7793$5025 $flatten\u5.$verific$n7800$5032 $flatten\u5.$verific$n7802$5034 $flatten\u5.$verific$n7804$5036 $flatten\u5.$verific$n7808$5040 $flatten\u5.$verific$n7812$5044 $auto$rtlil.cc:2393:Or$7133 $auto$rtlil.cc:2393:Or$7141 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$7066: { $flatten\u5.$verific$n7777$5009 $flatten\u5.$verific$n7778$5010 $flatten\u5.$verific$n7782$5014 $flatten\u5.$verific$n7783$5015 $auto$rtlil.cc:2393:Or$7031 $auto$rtlil.cc:2393:Or$7039 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$7116: { $flatten\u5.$verific$n7769$5001 $flatten\u5.$verific$n7770$5002 $flatten\u5.$verific$n7773$5005 $flatten\u5.$verific$n7774$5006 $flatten\u5.$verific$n7777$5009 $flatten\u5.$verific$n7778$5010 $flatten\u5.$verific$n7782$5014 $flatten\u5.$verific$n7783$5015 $auto$rtlil.cc:2393:Or$7031 $auto$rtlil.cc:2393:Or$7039 $auto$rtlil.cc:2393:Or$7051 $auto$rtlil.cc:2393:Or$7059 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$7112: { $flatten\u5.$verific$n7760$4992 $flatten\u5.$verific$n7762$4994 $flatten\u5.$verific$n7765$4997 $flatten\u5.$verific$n7766$4998 $auto$rtlil.cc:2393:Or$7075 $auto$rtlil.cc:2393:Or$7083 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$6974: { $flatten\u5.$verific$n7810$5042 $flatten\u5.$verific$n7811$5043 $flatten\u5.$verific$n7814$5046 $flatten\u5.$verific$n7815$5047 $auto$rtlil.cc:2393:Or$6939 $auto$rtlil.cc:2393:Or$6947 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$7022: { $flatten\u5.$verific$n7802$5034 $flatten\u5.$verific$n7803$5035 $flatten\u5.$verific$n7806$5038 $flatten\u5.$verific$n7807$5039 $flatten\u5.$verific$n7810$5042 $flatten\u5.$verific$n7811$5043 $flatten\u5.$verific$n7814$5046 $flatten\u5.$verific$n7815$5047 $auto$rtlil.cc:2393:Or$6939 $auto$rtlil.cc:2393:Or$6947 $auto$rtlil.cc:2393:Or$6959 $auto$rtlil.cc:2393:Or$6967 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$7018: { $flatten\u5.$verific$n7794$5026 $flatten\u5.$verific$n7795$5027 $flatten\u5.$verific$n7798$5030 $flatten\u5.$verific$n7799$5031 $auto$rtlil.cc:2393:Or$6983 $auto$rtlil.cc:2393:Or$6991 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$6800: { $auto$rtlil.cc:2393:Or$6787 $flatten\u5.$verific$n7790$5022 $flatten\u5.$verific$n7791$5023 $flatten\u5.$verific$n7792$5024 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$7120: { $flatten\u5.$verific$n7786$5018 $flatten\u5.$verific$n7787$5019 $flatten\u5.$verific$n7790$5022 $flatten\u5.$verific$n7791$5023 $flatten\u5.$verific$n7794$5026 $flatten\u5.$verific$n7795$5027 $flatten\u5.$verific$n7798$5030 $flatten\u5.$verific$n7799$5031 $flatten\u5.$verific$n7802$5034 $flatten\u5.$verific$n7803$5035 $flatten\u5.$verific$n7806$5038 $flatten\u5.$verific$n7807$5039 $flatten\u5.$verific$n7810$5042 $flatten\u5.$verific$n7811$5043 $flatten\u5.$verific$n7814$5046 $flatten\u5.$verific$n7815$5047 $auto$rtlil.cc:2393:Or$6939 $auto$rtlil.cc:2393:Or$6947 $auto$rtlil.cc:2393:Or$6959 $auto$rtlil.cc:2393:Or$6967 $auto$rtlil.cc:2393:Or$6983 $auto$rtlil.cc:2393:Or$6991 $auto$rtlil.cc:2393:Or$7003 $auto$rtlil.cc:2393:Or$7011 }
  Optimizing cells in module \mc_top.
Performed a total of 10 changes.

19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

19.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $flatten\u5.$verific$lmr_ack_reg$mc_timing.v:458$5284 ($dff) from module mc_top (D = $auto$rtlil.cc:2459:Mux$6669, Q = \u5.lmr_ack, rval = 1'1).

19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..
Removed 2 unused cells and 7 unused wires.
<suppressed ~4 debug messages>

19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.

19.9. Rerunning OPT passes. (Maybe there is more to do..)

19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mc_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~117 debug messages>

19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mc_top.
Performed a total of 0 changes.

19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
Removed a total of 0 cells.

19.13. Executing OPT_DFF pass (perform DFF optimizations).

19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..

19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.

19.16. Finished OPT passes. (There is nothing left to do.)

20. Executing MEMORY pass.

20.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

20.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

20.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

20.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

20.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..

20.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

20.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

20.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..

20.9. Executing MEMORY_COLLECT pass (generating $mem cells).

21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..

22. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.
<suppressed ~84 debug messages>

23. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping mc_top.$auto$ff.cc:262:slice$6555 ($adffe).
Mapping mc_top.$auto$ff.cc:262:slice$6557 ($adffe).
Mapping mc_top.$auto$ff.cc:262:slice$6558 ($adffe).
Mapping mc_top.$auto$ff.cc:262:slice$6559 ($dffe).
Mapping mc_top.$auto$ff.cc:262:slice$6560 ($adffe).
Mapping mc_top.$auto$ff.cc:262:slice$6561 ($adffe).
Mapping mc_top.$auto$ff.cc:262:slice$6562 ($adffe).
Mapping mc_top.$auto$ff.cc:262:slice$6563 ($adffe).
Mapping mc_top.$auto$ff.cc:262:slice$6565 ($adffe).
Mapping mc_top.$auto$ff.cc:262:slice$6566 ($adffe).
Mapping mc_top.$auto$ff.cc:262:slice$6567 ($adff).
Mapping mc_top.$auto$ff.cc:262:slice$7205 ($sdff).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6297 ($reduce_bool).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6300 ($ne).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6303 ($reduce_bool).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6306 ($reduce_bool).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6309 ($reduce_bool).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6312 ($reduce_bool).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6315 ($ne).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6318 ($reduce_bool).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6321 ($ne).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6323 ($ne).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6325 ($ne).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6327 ($ne).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6329 ($ne).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6331 ($ne).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6333 ($ne).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6335 ($ne).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6337 ($ne).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6339 ($ne).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6341 ($ne).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6343 ($ne).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6345 ($ne).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6347 ($ne).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6349 ($ne).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6351 ($ne).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6353 ($ne).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6355 ($ne).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6357 ($ne).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6359 ($ne).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6361 ($ne).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6363 ($ne).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6365 ($ne).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6367 ($ne).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6369 ($ne).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6371 ($ne).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6373 ($ne).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6375 ($ne).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6377 ($ne).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6379 ($ne).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6381 ($ne).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6383 ($ne).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6385 ($ne).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6387 ($ne).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6389 ($ne).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6391 ($ne).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6393 ($ne).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6395 ($ne).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6397 ($ne).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6399 ($ne).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6401 ($ne).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6403 ($ne).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6405 ($ne).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6407 ($ne).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6409 ($ne).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6411 ($ne).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6413 ($ne).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6415 ($ne).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6417 ($ne).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6419 ($ne).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6421 ($ne).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6423 ($ne).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6425 ($ne).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6427 ($ne).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6429 ($ne).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6431 ($ne).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6433 ($ne).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6435 ($ne).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6448 ($ne).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6450 ($ne).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6456 ($reduce_bool).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6460 ($reduce_bool).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6463 ($reduce_bool).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6466 ($reduce_bool).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6469 ($reduce_bool).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6472 ($reduce_bool).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6475 ($reduce_bool).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6485 ($reduce_bool).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6489 ($reduce_bool).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6492 ($reduce_bool).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6495 ($reduce_bool).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6498 ($reduce_bool).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6505 ($reduce_bool).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6508 ($reduce_bool).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6511 ($reduce_bool).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6514 ($reduce_bool).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6525 ($reduce_bool).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6530 ($reduce_bool).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6534 ($reduce_bool).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6541 ($reduce_bool).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6545 ($reduce_bool).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6550 ($reduce_bool).
Mapping mc_top.$auto$opt_dff.cc:195:make_patterns_logic$6554 ($ne).
Mapping mc_top.$auto$opt_dff.cc:220:make_patterns_logic$6437 ($reduce_and).
Mapping mc_top.$auto$opt_dff.cc:220:make_patterns_logic$6452 ($reduce_and).
Mapping mc_top.$auto$opt_reduce.cc:128:opt_pmux$6261 ($reduce_or).
Mapping mc_top.$auto$opt_reduce.cc:128:opt_pmux$6263 ($reduce_or).
Mapping mc_top.$auto$opt_reduce.cc:128:opt_pmux$6265 ($reduce_or).
Mapping mc_top.$auto$opt_reduce.cc:128:opt_pmux$6267 ($reduce_or).
Mapping mc_top.$auto$opt_reduce.cc:128:opt_pmux$6269 ($reduce_or).
Mapping mc_top.$auto$opt_reduce.cc:128:opt_pmux$6271 ($reduce_or).
Mapping mc_top.$auto$opt_reduce.cc:128:opt_pmux$6273 ($reduce_or).
Mapping mc_top.$auto$opt_reduce.cc:128:opt_pmux$6275 ($reduce_or).
Mapping mc_top.$auto$opt_reduce.cc:128:opt_pmux$6277 ($reduce_or).
Mapping mc_top.$auto$opt_reduce.cc:128:opt_pmux$6279 ($reduce_or).
Mapping mc_top.$auto$opt_reduce.cc:128:opt_pmux$6281 ($reduce_or).
Mapping mc_top.$auto$opt_reduce.cc:128:opt_pmux$6285 ($reduce_or).
Mapping mc_top.$auto$opt_reduce.cc:128:opt_pmux$6287 ($reduce_or).
Mapping mc_top.$auto$pmuxtree.cc:35:or_generator$6600 ($or).
Mapping mc_top.$auto$pmuxtree.cc:35:or_generator$6628 ($or).
Mapping mc_top.$auto$pmuxtree.cc:35:or_generator$6636 ($or).
Mapping mc_top.$auto$pmuxtree.cc:35:or_generator$6660 ($or).
Mapping mc_top.$auto$pmuxtree.cc:35:or_generator$6712 ($or).
Mapping mc_top.$auto$pmuxtree.cc:35:or_generator$6732 ($or).
Mapping mc_top.$auto$pmuxtree.cc:35:or_generator$6742 ($or).
Mapping mc_top.$auto$pmuxtree.cc:35:or_generator$6774 ($or).
Mapping mc_top.$auto$pmuxtree.cc:35:or_generator$6786 ($or).
Mapping mc_top.$auto$pmuxtree.cc:35:or_generator$6796 ($or).
Mapping mc_top.$auto$pmuxtree.cc:35:or_generator$6914 ($or).
Mapping mc_top.$auto$pmuxtree.cc:35:or_generator$6938 ($or).
Mapping mc_top.$auto$pmuxtree.cc:35:or_generator$6946 ($or).
Mapping mc_top.$auto$pmuxtree.cc:35:or_generator$6958 ($or).
Mapping mc_top.$auto$pmuxtree.cc:35:or_generator$6966 ($or).
Mapping mc_top.$auto$pmuxtree.cc:35:or_generator$6982 ($or).
Mapping mc_top.$auto$pmuxtree.cc:35:or_generator$6990 ($or).
Mapping mc_top.$auto$pmuxtree.cc:35:or_generator$7002 ($or).
Mapping mc_top.$auto$pmuxtree.cc:35:or_generator$7010 ($or).
Mapping mc_top.$auto$pmuxtree.cc:35:or_generator$7030 ($or).
Mapping mc_top.$auto$pmuxtree.cc:35:or_generator$7038 ($or).
Mapping mc_top.$auto$pmuxtree.cc:35:or_generator$7050 ($or).
Mapping mc_top.$auto$pmuxtree.cc:35:or_generator$7058 ($or).
Mapping mc_top.$auto$pmuxtree.cc:35:or_generator$7074 ($or).
Mapping mc_top.$auto$pmuxtree.cc:35:or_generator$7082 ($or).
Mapping mc_top.$auto$pmuxtree.cc:35:or_generator$7094 ($or).
Mapping mc_top.$auto$pmuxtree.cc:35:or_generator$7132 ($or).
Mapping mc_top.$auto$pmuxtree.cc:35:or_generator$7140 ($or).
Mapping mc_top.$auto$pmuxtree.cc:35:or_generator$7152 ($or).
Mapping mc_top.$auto$pmuxtree.cc:35:or_generator$7160 ($or).
Mapping mc_top.$auto$pmuxtree.cc:37:or_generator$6640 ($reduce_or).
Mapping mc_top.$auto$pmuxtree.cc:37:or_generator$6692 ($reduce_or).
Mapping mc_top.$auto$pmuxtree.cc:37:or_generator$6746 ($reduce_or).
Mapping mc_top.$auto$pmuxtree.cc:37:or_generator$6762 ($reduce_or).
Mapping mc_top.$auto$pmuxtree.cc:37:or_generator$6800 ($reduce_or).
Mapping mc_top.$auto$pmuxtree.cc:37:or_generator$6950 ($reduce_or).
Mapping mc_top.$auto$pmuxtree.cc:37:or_generator$6970 ($reduce_or).
Mapping mc_top.$auto$pmuxtree.cc:37:or_generator$6974 ($reduce_or).
Mapping mc_top.$auto$pmuxtree.cc:37:or_generator$6994 ($reduce_or).
Mapping mc_top.$auto$pmuxtree.cc:37:or_generator$7014 ($reduce_or).
Mapping mc_top.$auto$pmuxtree.cc:37:or_generator$7018 ($reduce_or).
Mapping mc_top.$auto$pmuxtree.cc:37:or_generator$7022 ($reduce_or).
Mapping mc_top.$auto$pmuxtree.cc:37:or_generator$7042 ($reduce_or).
Mapping mc_top.$auto$pmuxtree.cc:37:or_generator$7062 ($reduce_or).
Mapping mc_top.$auto$pmuxtree.cc:37:or_generator$7066 ($reduce_or).
Mapping mc_top.$auto$pmuxtree.cc:37:or_generator$7086 ($reduce_or).
Mapping mc_top.$auto$pmuxtree.cc:37:or_generator$7108 ($reduce_or).
Mapping mc_top.$auto$pmuxtree.cc:37:or_generator$7112 ($reduce_or).
Mapping mc_top.$auto$pmuxtree.cc:37:or_generator$7116 ($reduce_or).
Mapping mc_top.$auto$pmuxtree.cc:37:or_generator$7120 ($reduce_or).
Mapping mc_top.$auto$pmuxtree.cc:37:or_generator$7144 ($reduce_or).
Mapping mc_top.$auto$pmuxtree.cc:37:or_generator$7164 ($reduce_or).
Mapping mc_top.$auto$pmuxtree.cc:37:or_generator$7168 ($reduce_or).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6594 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6596 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6598 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6602 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6610 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6616 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6618 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6624 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6626 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6630 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6632 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6634 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6638 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6642 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6648 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6650 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6656 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6658 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6662 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6668 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6676 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6678 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6684 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6686 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6688 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6690 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6694 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6700 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6702 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6708 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6710 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6714 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6720 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6722 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6728 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6730 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6734 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6736 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6738 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6740 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6744 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6748 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6754 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6756 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6758 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6760 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6764 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6770 ($mux).
Mapping mc_top.$auto$ff.cc:262:slice$6551 ($sdffe).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6776 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6782 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6784 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6788 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6790 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6792 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6794 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6798 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6802 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6808 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6810 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6816 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6818 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6824 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6826 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6832 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6834 ($mux).
Mapping mc_top.$auto$ff.cc:262:slice$6520 ($dffe).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6842 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6850 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6856 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6858 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6864 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6866 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6874 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6880 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6882 ($mux).
Mapping mc_top.$auto$ff.cc:262:slice$6519 ($dffe).
Mapping mc_top.$auto$ff.cc:262:slice$6516 ($dffe).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6894 ($mux).
Mapping mc_top.$auto$ff.cc:262:slice$6515 ($dffe).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6902 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6908 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6910 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6912 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6916 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6922 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6924 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6928 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6934 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6936 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6940 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6942 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6944 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6948 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6952 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6954 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6956 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6960 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6962 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6964 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6968 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6972 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6976 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6978 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6980 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6984 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6986 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6988 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6992 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6996 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$6998 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$7000 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$7004 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$7006 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$7008 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$7012 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$7016 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$7020 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$7024 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$7026 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$7028 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$7032 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$7034 ($mux).
Mapping mc_top.$auto$ff.cc:262:slice$6457 ($adffe).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$7040 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$7044 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$7046 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$7048 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$7052 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$7054 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$7056 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$7060 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$7064 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$7068 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$7070 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$7072 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$7076 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$7078 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$7080 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$7084 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$7088 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$7090 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$7092 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$7096 ($mux).
Mapping mc_top.$auto$ff.cc:262:slice$6439 ($adffe).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$7100 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$7102 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$7106 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$7110 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$7114 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$7118 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$7122 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$7128 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$7130 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$7134 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$7136 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$7138 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$7142 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$7146 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$7148 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$7150 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$7154 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$7156 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$7158 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$7162 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$7166 ($mux).
Mapping mc_top.$auto$pmuxtree.cc:65:recursive_mux_generator$7170 ($mux).
Mapping mc_top.$flatten\u0.$verific$and_352$mc_rf.v:453$1665 ($and).
Mapping mc_top.$flatten\u0.$verific$csr_r_reg$mc_rf.v:298$1556 ($dff).
Mapping mc_top.$flatten\u0.$verific$equal_215$mc_rf.v:446$1657 ($logic_not).
Mapping mc_top.$flatten\u0.$verific$equal_218$mc_rf.v:447$1658 ($logic_not).
Mapping mc_top.$flatten\u0.$verific$equal_30$mc_rf.v:286$1540 ($eq).
Mapping mc_top.$flatten\u0.$verific$equal_40$mc_rf.v:291$1549 ($logic_not).
Mapping mc_top.$flatten\u0.$verific$equal_78$mc_rf.v:310$1563 ($eq).
Mapping mc_top.$flatten\u0.$verific$i115$mc_rf.v:356$1586 ($and).
Mapping mc_top.$flatten\u0.$verific$i116$mc_rf.v:356$1587 ($and).
Mapping mc_top.$flatten\u0.$verific$i123$mc_rf.v:358$1594 ($or).
Mapping mc_top.$auto$ff.cc:262:slice$6295 ($adffe).
Mapping mc_top.$flatten\u0.$verific$i128$mc_rf.v:360$1597 ($mux).
Mapping mc_top.$flatten\u0.$verific$i132$mc_rf.v:365$1600 ($and).
Mapping mc_top.$flatten\u0.$verific$i133$mc_rf.v:365$1601 ($and).
Mapping mc_top.$flatten\u0.$verific$i153$mc_rf.v:386$1619 ($or).
Mapping mc_top.$flatten\u0.$verific$i154$mc_rf.v:386$1620 ($and).
Mapping mc_top.$flatten\u0.$verific$i155$mc_rf.v:386$1621 ($and).
Mapping mc_top.$flatten\u0.$verific$i244$mc_rf.v:466$1669 ($not).
Mapping mc_top.$flatten\u0.$verific$i245$mc_rf.v:466$1670 ($and).
Mapping mc_top.$flatten\u0.$verific$i250$mc_rf.v:472$1674 ($not).
Mapping mc_top.$flatten\u0.$verific$i251$mc_rf.v:472$1675 ($and).
Mapping mc_top.$flatten\u0.$verific$i260$mc_rf.v:482$1680 ($not).
Mapping mc_top.$flatten\u0.$verific$i261$mc_rf.v:482$1681 ($not).
Mapping mc_top.$flatten\u0.$verific$i262$mc_rf.v:482$1682 ($and).
Mapping mc_top.$flatten\u0.$verific$i263$mc_rf.v:482$1683 ($or).
Mapping mc_top.$flatten\u0.$verific$i264$mc_rf.v:482$1684 ($or).
Mapping mc_top.$flatten\u0.$verific$i268$mc_rf.v:486$1687 ($not).
Mapping mc_top.$flatten\u0.$verific$i269$mc_rf.v:486$1688 ($and).
Mapping mc_top.$flatten\u0.$verific$i297$mc_rf.v:497$1707 ($or).
Mapping mc_top.$flatten\u0.$verific$i308$mc_rf.v:502$1716 ($or).
Mapping mc_top.$flatten\u0.$verific$i32$mc_rf.v:286$1541 ($and).
Mapping mc_top.$flatten\u0.$verific$i320$mc_rf.v:513$1727 ($and).
Mapping mc_top.$flatten\u0.$verific$i322$mc_rf.v:514$1729 ($and).
Mapping mc_top.$flatten\u0.$verific$i33$mc_rf.v:286$1542 ($and).
Mapping mc_top.$flatten\u0.$verific$i336$mc_rf.v:522$1743 ($and).
Mapping mc_top.$flatten\u0.$verific$i338$mc_rf.v:523$1745 ($and).
Mapping mc_top.$flatten\u0.$verific$i34$mc_rf.v:286$1543 ($and).
Mapping mc_top.$flatten\u0.$verific$i35$mc_rf.v:286$1544 ($not).
Mapping mc_top.$flatten\u0.$verific$i36$mc_rf.v:286$1545 ($and).
Mapping mc_top.$flatten\u0.$verific$i42$mc_rf.v:291$1550 ($and).
Mapping mc_top.$flatten\u0.$verific$i80$mc_rf.v:310$1564 ($and).
Mapping mc_top.$flatten\u0.$verific$init_ack_r_reg$mc_rf.v:464$1668 ($dff).
Mapping mc_top.$flatten\u0.$verific$init_req_reg$mc_rf.v:498$1715 ($adff).
Mapping mc_top.$flatten\u0.$verific$lmr_ack_r_reg$mc_rf.v:470$1673 ($dff).
Mapping mc_top.$flatten\u0.$verific$lmr_req_reg$mc_rf.v:503$1724 ($adff).
Mapping mc_top.$flatten\u0.$verific$mux_146$mc_rf.v:380$1614 ($mux).
Mapping mc_top.$flatten\u0.$verific$mux_147$mc_rf.v:380$1615 ($mux).
Mapping mc_top.$flatten\u0.$verific$mux_168$mc_rf.v:401$1634 ($mux).
Mapping mc_top.$flatten\u0.$verific$mux_169$mc_rf.v:401$1635 ($mux).
Mapping mc_top.$flatten\u0.$verific$mux_189$mc_rf.v:422$1643 ($mux).
Mapping mc_top.$flatten\u0.$verific$mux_190$mc_rf.v:422$1644 ($mux).
Mapping mc_top.$flatten\u0.$verific$mux_211$mc_rf.v:443$1653 ($mux).
Mapping mc_top.$flatten\u0.$verific$mux_212$mc_rf.v:443$1654 ($mux).
Mapping mc_top.$flatten\u0.$verific$mux_24$mc_rf.v:272$1536 ($bmux).
Mapping mc_top.$flatten\u0.$verific$mux_317$mc_rf.v:510$1725 ($mux).
Mapping mc_top.$flatten\u0.$verific$rf_we_reg$mc_rf.v:286$1547 ($adff).
Mapping mc_top.$flatten\u0.$verific$rst_r1_reg$mc_rf.v:322$1569 ($adff).
Mapping mc_top.$flatten\u0.$verific$rst_r2_reg$mc_rf.v:326$1571 ($adff).
Mapping mc_top.$flatten\u0.$verific$rst_r3_reg$mc_rf.v:330$1573 ($adff).
Mapping mc_top.$flatten\u0.$verific$sreq_cs_le_reg$mc_rf.v:482$1686 ($adff).
Mapping mc_top.$flatten\u0.$verific$wb_addr_r_reg$mc_rf.v:282$1538 ($dff).
Mapping mc_top.$flatten\u0.\u0.$verific$and_73$mc_cs_rf.v:234$3463 ($and).
Mapping mc_top.$flatten\u0.\u0.$verific$and_74$mc_cs_rf.v:234$3464 ($and).
Mapping mc_top.$flatten\u0.\u0.$verific$equal_14$mc_cs_rf.v:178$3428 ($eq).
Mapping mc_top.$flatten\u0.\u0.$verific$equal_75$mc_cs_rf.v:234$3465 ($eq).
Mapping mc_top.$flatten\u0.\u0.$verific$i20$mc_cs_rf.v:184$3432 ($and).
Mapping mc_top.$flatten\u0.\u0.$verific$i21$mc_cs_rf.v:184$3433 ($not).
Mapping mc_top.$flatten\u0.\u0.$verific$i22$mc_cs_rf.v:184$3434 ($and).
Mapping mc_top.$flatten\u0.\u0.$verific$i30$mc_cs_rf.v:190$3440 ($and).
Mapping mc_top.$flatten\u0.\u0.$verific$i44$mc_cs_rf.v:203$3447 ($and).
Mapping mc_top.$auto$ff.cc:262:slice$6293 ($dff).
Mapping mc_top.$flatten\u0.\u0.$verific$i48$mc_cs_rf.v:206$3450 ($mux).
Mapping mc_top.$flatten\u0.\u0.$verific$i60$mc_cs_rf.v:219$3454 ($and).
Mapping mc_top.$flatten\u0.\u0.$verific$i61$mc_cs_rf.v:219$3455 ($and).
Mapping mc_top.$flatten\u0.\u0.$verific$i62$mc_cs_rf.v:219$3456 ($not).
Mapping mc_top.$flatten\u0.\u0.$verific$i63$mc_cs_rf.v:219$3457 ($and).
Mapping mc_top.$auto$ff.cc:262:slice$6294 ($adffe).
Mapping mc_top.$flatten\u0.\u0.$verific$i67$mc_cs_rf.v:222$3459 ($mux).
Mapping mc_top.$flatten\u0.\u0.$verific$i77$mc_cs_rf.v:234$3466 ($and).
Mapping mc_top.$flatten\u0.\u0.$verific$i79$mc_cs_rf.v:236$3468 ($and).
Mapping mc_top.$flatten\u0.\u0.$verific$i81$mc_cs_rf.v:238$3470 ($and).
Mapping mc_top.$flatten\u0.\u0.$verific$i83$mc_cs_rf.v:239$3472 ($not).
Mapping mc_top.$flatten\u0.\u0.$verific$i84$mc_cs_rf.v:239$3473 ($and).
Mapping mc_top.$flatten\u0.\u0.$verific$init_req_we_reg$mc_cs_rf.v:214$3453 ($adff).
Mapping mc_top.$flatten\u0.\u0.$verific$lmr_req_we_reg$mc_cs_rf.v:198$3445 ($adff).
Mapping mc_top.$flatten\u0.\u0.$verific$mux_23$mc_cs_rf.v:184$3436 ($mux).
Mapping mc_top.$flatten\u0.\u0.$verific$mux_24$mc_cs_rf.v:184$3437 ($mux).
Mapping mc_top.$flatten\u0.\u0.$verific$not_equal_17$mc_cs_rf.v:182$3430 ($reduce_bool).
Mapping mc_top.$flatten\u0.\u1.$verific$and_72$mc_cs_rf.v:234$4116 ($and).
Mapping mc_top.$flatten\u0.\u1.$verific$equal_14$mc_cs_rf.v:178$4083 ($eq).
Mapping mc_top.$flatten\u0.\u1.$verific$equal_74$mc_cs_rf.v:234$4118 ($eq).
Mapping mc_top.$flatten\u0.\u1.$verific$i19$mc_cs_rf.v:184$4086 ($and).
Mapping mc_top.$flatten\u0.\u1.$verific$i21$mc_cs_rf.v:184$4088 ($and).
Mapping mc_top.$flatten\u0.\u1.$verific$i29$mc_cs_rf.v:190$4093 ($and).
Mapping mc_top.$flatten\u0.\u1.$verific$i43$mc_cs_rf.v:203$4100 ($and).
Mapping mc_top.$auto$ff.cc:262:slice$6291 ($sdff).
Mapping mc_top.$flatten\u0.\u1.$verific$i47$mc_cs_rf.v:206$4103 ($mux).
Mapping mc_top.$flatten\u0.\u1.$verific$i59$mc_cs_rf.v:219$4107 ($and).
Mapping mc_top.$flatten\u0.\u1.$verific$i60$mc_cs_rf.v:219$4108 ($and).
Mapping mc_top.$flatten\u0.\u1.$verific$i61$mc_cs_rf.v:219$4109 ($not).
Mapping mc_top.$flatten\u0.\u1.$verific$i62$mc_cs_rf.v:219$4110 ($and).
Mapping mc_top.$auto$ff.cc:262:slice$6292 ($sdff).
Mapping mc_top.$flatten\u0.\u1.$verific$i66$mc_cs_rf.v:222$4112 ($mux).
Mapping mc_top.$flatten\u0.\u1.$verific$i76$mc_cs_rf.v:234$4119 ($and).
Mapping mc_top.$flatten\u0.\u1.$verific$i78$mc_cs_rf.v:236$4121 ($and).
Mapping mc_top.$flatten\u0.\u1.$verific$i80$mc_cs_rf.v:238$4123 ($and).
Mapping mc_top.$flatten\u0.\u1.$verific$i82$mc_cs_rf.v:239$4125 ($not).
Mapping mc_top.$flatten\u0.\u1.$verific$i83$mc_cs_rf.v:239$4126 ($and).
Mapping mc_top.$flatten\u0.\u1.$verific$init_req_we_reg$mc_cs_rf.v:214$4106 ($adff).
Mapping mc_top.$flatten\u0.\u1.$verific$lmr_req_we_reg$mc_cs_rf.v:198$4098 ($adff).
Mapping mc_top.$flatten\u1.$verific$equal_23$mc_adr_sel.v:151$3943 ($eq).
Mapping mc_top.$flatten\u1.$verific$equal_25$mc_adr_sel.v:153$3945 ($eq).
Mapping mc_top.$flatten\u1.$verific$equal_7$mc_adr_sel.v:149$3941 ($logic_not).
Mapping mc_top.$flatten\u1.$verific$i27$mc_adr_sel.v:153$3946 ($and).
Mapping mc_top.$flatten\u1.$verific$i40$mc_adr_sel.v:171$4005 ($or).
Mapping mc_top.$flatten\u1.$verific$i49$mc_adr_sel.v:185$4012 ($not).
Mapping mc_top.$flatten\u1.$verific$i50$mc_adr_sel.v:185$4013 ($and).
Mapping mc_top.$flatten\u1.$verific$i56$mc_adr_sel.v:192$4017 ($mux).
Mapping mc_top.$flatten\u1.$verific$mux_115$mc_adr_sel.v:271$4028 ($mux).
Mapping mc_top.$flatten\u1.$verific$mux_118$mc_adr_sel.v:287$4031 ($bmux).
Mapping mc_top.$flatten\u1.$verific$mux_123$mc_adr_sel.v:237$4016 ($bmux).
Mapping mc_top.$flatten\u1.$verific$mux_126$mc_adr_sel.v:271$4018 ($bmux).
Mapping mc_top.$flatten\u1.$verific$mux_29$mc_adr_sel.v:154$3948 ($mux).
Mapping mc_top.$flatten\u1.$verific$mux_30$mc_adr_sel.v:154$3949 ($mux).
Mapping mc_top.$flatten\u1.$verific$mux_31$mc_adr_sel.v:154$3950 ($mux).
Mapping mc_top.$flatten\u1.$verific$mux_43$mc_adr_sel.v:176$4007 ($bmux).
Mapping mc_top.$auto$ff.cc:262:slice$6301 ($adffe).
Mapping mc_top.$flatten\u1.$verific$mux_46$mc_adr_sel.v:178$4010 ($mux).
Mapping mc_top.$flatten\u1.$verific$mux_50$mc_adr_sel.v:187$4014 ($mux).
Mapping mc_top.$flatten\u1.$verific$mux_51$mc_adr_sel.v:187$4015 ($mux).
Mapping mc_top.$flatten\u1.$verific$mux_65$mc_adr_sel.v:205$4019 ($bmux).
Mapping mc_top.$flatten\u1.$verific$mux_90$mc_adr_sel.v:237$4024 ($mux).
Mapping mc_top.$auto$ff.cc:262:slice$6298 ($adffe).
Mapping mc_top.$flatten\u1.\u0.$verific$out_r_reg$mc_incn_r.v:92$4190 ($dff).
Mapping mc_top.$flatten\u2.$verific$bank_open_reg$mc_obct_top.v:197$3631 ($dff).
Mapping mc_top.$flatten\u2.$verific$i20$mc_obct_top.v:175$3575 ($and).
Mapping mc_top.$flatten\u2.$verific$i22$mc_obct_top.v:176$3577 ($and).
Mapping mc_top.$flatten\u2.$verific$i36$mc_obct_top.v:184$3591 ($and).
Mapping mc_top.$flatten\u2.$verific$i37$mc_obct_top.v:184$3592 ($or).
Mapping mc_top.$flatten\u2.$verific$i39$mc_obct_top.v:185$3594 ($and).
Mapping mc_top.$flatten\u2.$verific$i4$mc_obct_top.v:166$3559 ($and).
Mapping mc_top.$flatten\u2.$verific$i40$mc_obct_top.v:185$3595 ($or).
Mapping mc_top.$flatten\u2.$verific$i6$mc_obct_top.v:167$3561 ($and).
Mapping mc_top.$flatten\u2.$verific$i61$mc_obct_top.v:194$3615 ($and).
Mapping mc_top.$flatten\u2.$verific$i62$mc_obct_top.v:194$3616 ($and).
Mapping mc_top.$flatten\u2.$verific$i63$mc_obct_top.v:194$3617 ($or).
Mapping mc_top.$flatten\u2.$verific$i79$mc_obct_top.v:200$3632 ($and).
Mapping mc_top.$flatten\u2.$verific$i80$mc_obct_top.v:200$3633 ($and).
Mapping mc_top.$flatten\u2.$verific$i81$mc_obct_top.v:200$3634 ($or).
Mapping mc_top.$flatten\u2.$verific$row_same_reg$mc_obct_top.v:203$3648 ($dff).
Mapping mc_top.$flatten\u2.\u0.$verific$Mux_100$mc_obct.v:214$4307 ($bmux).
Mapping mc_top.$flatten\u2.\u0.$verific$Mux_59$mc_obct.v:177$4281 ($bmux).
Mapping mc_top.$flatten\u2.\u0.$verific$equal_18$mc_obct.v:147$4256 ($eq).
Mapping mc_top.$flatten\u2.\u0.$verific$equal_31$mc_obct.v:156$4263 ($eq).
Mapping mc_top.$flatten\u2.\u0.$verific$equal_44$mc_obct.v:165$4270 ($eq).
Mapping mc_top.$flatten\u2.\u0.$verific$equal_5$mc_obct.v:138$4248 ($logic_not).
Mapping mc_top.$flatten\u2.\u0.$verific$equal_88$mc_obct.v:203$4295 ($eq).
Mapping mc_top.$flatten\u2.\u0.$verific$equal_90$mc_obct.v:204$4297 ($eq).
Mapping mc_top.$flatten\u2.\u0.$verific$equal_92$mc_obct.v:205$4299 ($eq).
Mapping mc_top.$flatten\u2.\u0.$verific$equal_94$mc_obct.v:206$4301 ($eq).
Mapping mc_top.$flatten\u2.\u0.$verific$i10$mc_obct.v:140$4251 ($and).
Mapping mc_top.$auto$ff.cc:262:slice$6490 ($adffe).
Mapping mc_top.$auto$ff.cc:262:slice$6493 ($adffe).
Mapping mc_top.$flatten\u2.\u0.$verific$i15$mc_obct.v:142$4254 ($mux).
Mapping mc_top.$flatten\u2.\u0.$verific$i20$mc_obct.v:147$4257 ($and).
Mapping mc_top.$flatten\u2.\u0.$verific$i23$mc_obct.v:149$4258 ($and).
Mapping mc_top.$auto$ff.cc:262:slice$6496 ($adffe).
Mapping mc_top.$flatten\u2.\u0.$verific$i28$mc_obct.v:151$4261 ($mux).
Mapping mc_top.$flatten\u2.\u0.$verific$i33$mc_obct.v:156$4264 ($and).
Mapping mc_top.$flatten\u2.\u0.$verific$i36$mc_obct.v:158$4265 ($and).
Mapping mc_top.$auto$ff.cc:262:slice$6499 ($dffe).
Mapping mc_top.$flatten\u2.\u0.$verific$i41$mc_obct.v:160$4268 ($mux).
Mapping mc_top.$flatten\u2.\u0.$verific$i46$mc_obct.v:165$4271 ($and).
Mapping mc_top.$flatten\u2.\u0.$verific$i49$mc_obct.v:167$4272 ($and).
Mapping mc_top.$auto$ff.cc:262:slice$6500 ($dffe).
Mapping mc_top.$flatten\u2.\u0.$verific$i54$mc_obct.v:169$4275 ($mux).
Mapping mc_top.$flatten\u2.\u0.$verific$i7$mc_obct.v:138$4249 ($and).
Mapping mc_top.$flatten\u2.\u1.$verific$Mux_100$mc_obct.v:214$4307 ($bmux).
Mapping mc_top.$flatten\u2.\u1.$verific$Mux_59$mc_obct.v:177$4281 ($bmux).
Mapping mc_top.$flatten\u2.\u1.$verific$equal_88$mc_obct.v:203$4295 ($eq).
Mapping mc_top.$flatten\u2.\u1.$verific$equal_90$mc_obct.v:204$4297 ($eq).
Mapping mc_top.$flatten\u2.\u1.$verific$equal_92$mc_obct.v:205$4299 ($eq).
Mapping mc_top.$flatten\u2.\u1.$verific$equal_94$mc_obct.v:206$4301 ($eq).
Mapping mc_top.$flatten\u2.\u1.$verific$i10$mc_obct.v:140$4251 ($and).
Mapping mc_top.$auto$ff.cc:262:slice$6481 ($dffe).
Mapping mc_top.$auto$ff.cc:262:slice$6482 ($dffe).
Mapping mc_top.$flatten\u2.\u1.$verific$i15$mc_obct.v:142$4254 ($mux).
Mapping mc_top.$flatten\u2.\u1.$verific$i20$mc_obct.v:147$4257 ($and).
Mapping mc_top.$flatten\u2.\u1.$verific$i23$mc_obct.v:149$4258 ($and).
Mapping mc_top.$auto$ff.cc:262:slice$6483 ($dffe).
Mapping mc_top.$flatten\u2.\u1.$verific$i28$mc_obct.v:151$4261 ($mux).
Mapping mc_top.$flatten\u2.\u1.$verific$i33$mc_obct.v:156$4264 ($and).
Mapping mc_top.$flatten\u2.\u1.$verific$i36$mc_obct.v:158$4265 ($and).
Mapping mc_top.$auto$ff.cc:262:slice$6486 ($dffe).
Mapping mc_top.$flatten\u2.\u1.$verific$i41$mc_obct.v:160$4268 ($mux).
Mapping mc_top.$flatten\u2.\u1.$verific$i46$mc_obct.v:165$4271 ($and).
Mapping mc_top.$flatten\u2.\u1.$verific$i49$mc_obct.v:167$4272 ($and).
Mapping mc_top.$auto$ff.cc:262:slice$6487 ($adffe).
Mapping mc_top.$flatten\u2.\u1.$verific$i54$mc_obct.v:169$4275 ($mux).
Mapping mc_top.$flatten\u2.\u1.$verific$i7$mc_obct.v:138$4249 ($and).
Mapping mc_top.$flatten\u3.$verific$equal_29$mc_dp.v:208$4470 ($logic_not).
Mapping mc_top.$flatten\u3.$verific$equal_32$mc_dp.v:210$4472 ($eq).
Mapping mc_top.$flatten\u3.$verific$equal_6$mc_dp.v:172$4374 ($logic_not).
Mapping mc_top.$flatten\u3.$verific$equal_7$mc_dp.v:173$4375 ($eq).
Mapping mc_top.$flatten\u3.$verific$i13$mc_dp.v:177$4379 ($not).
Mapping mc_top.$flatten\u3.$verific$i14$mc_dp.v:177$4380 ($and).
Mapping mc_top.$flatten\u3.$verific$i15$mc_dp.v:177$4381 ($or).
Mapping mc_top.$flatten\u3.$verific$i17$mc_dp.v:178$4383 ($and).
Mapping mc_top.$flatten\u3.$verific$i21$mc_dp.v:196$4463 ($or).
Mapping mc_top.$flatten\u3.$verific$i31$mc_dp.v:208$4471 ($and).
Mapping mc_top.$flatten\u3.$verific$i34$mc_dp.v:210$4473 ($and).
Mapping mc_top.$flatten\u3.$verific$i60$mc_dp.v:236$4490 ($not).
Mapping mc_top.$flatten\u3.$verific$i61$mc_dp.v:236$4491 ($and).
Mapping mc_top.$flatten\u3.$verific$i62$mc_dp.v:236$4492 ($and).
Mapping mc_top.$flatten\u3.$verific$i64$mc_dp.v:237$4494 ($xor).
Mapping mc_top.$flatten\u3.$verific$i65$mc_dp.v:237$4495 ($and).
Mapping mc_top.$flatten\u3.$verific$i67$mc_dp.v:238$4497 ($xor).
Mapping mc_top.$flatten\u3.$verific$i68$mc_dp.v:238$4498 ($and).
Mapping mc_top.$flatten\u3.$verific$i69$mc_dp.v:238$4499 ($or).
Mapping mc_top.$flatten\u3.$verific$i71$mc_dp.v:239$4501 ($xor).
Mapping mc_top.$flatten\u3.$verific$i72$mc_dp.v:239$4502 ($and).
Mapping mc_top.$flatten\u3.$verific$i73$mc_dp.v:239$4503 ($or).
Mapping mc_top.$flatten\u3.$verific$i75$mc_dp.v:240$4505 ($xor).
Mapping mc_top.$flatten\u3.$verific$i76$mc_dp.v:240$4506 ($and).
Mapping mc_top.$flatten\u3.$verific$i77$mc_dp.v:241$4507 ($or).
Mapping mc_top.$flatten\u3.$verific$i78$mc_dp.v:241$4508 ($and).
Mapping mc_top.$flatten\u3.$verific$i9$mc_dp.v:173$4376 ($or).
Mapping mc_top.$flatten\u3.$verific$mux_11$mc_dp.v:174$4378 ($mux).
Mapping mc_top.$auto$ff.cc:262:slice$6503 ($adffe).
Mapping mc_top.$flatten\u3.$verific$mux_36$mc_dp.v:210$4476 ($mux).
Mapping mc_top.$flatten\u3.$verific$mux_47$mc_dp.v:219$4481 ($mux).
Mapping mc_top.$flatten\u3.$verific$mux_48$mc_dp.v:219$4482 ($mux).
Mapping mc_top.$flatten\u3.$verific$not_equal_19$mc_dp.v:196$4462 ($reduce_bool).
Mapping mc_top.$flatten\u3.$verific$reduce_xor_52$mc_dp.v:228$4483 ($reduce_xor).
Mapping mc_top.$flatten\u3.$verific$reduce_xor_53$mc_dp.v:228$4484 ($reduce_xor).
Mapping mc_top.$flatten\u3.$verific$reduce_xor_54$mc_dp.v:229$4485 ($reduce_xor).
Mapping mc_top.$flatten\u3.$verific$reduce_xor_55$mc_dp.v:229$4486 ($reduce_xor).
Mapping mc_top.$flatten\u3.$verific$reduce_xor_62$mc_dp.v:237$4493 ($reduce_xor).
Mapping mc_top.$flatten\u3.$verific$reduce_xor_65$mc_dp.v:238$4496 ($reduce_xor).
Mapping mc_top.$flatten\u3.$verific$reduce_xor_69$mc_dp.v:239$4500 ($reduce_xor).
Mapping mc_top.$flatten\u3.$verific$reduce_xor_73$mc_dp.v:240$4504 ($reduce_xor).
Mapping mc_top.$flatten\u3.\u0.$verific$equal_41$mc_rd_fifo.v:124$4563 ($eq).
Mapping mc_top.$flatten\u3.\u0.$verific$equal_42$mc_rd_fifo.v:125$4564 ($eq).
Mapping mc_top.$flatten\u3.\u0.$verific$equal_43$mc_rd_fifo.v:126$4565 ($eq).
Mapping mc_top.$flatten\u3.\u0.$verific$equal_44$mc_rd_fifo.v:127$4566 ($eq).
Mapping mc_top.$flatten\u3.\u0.$verific$i19$mc_rd_fifo.v:111$4550 ($and).
Mapping mc_top.$flatten\u3.\u0.$verific$i24$mc_rd_fifo.v:114$4554 ($and).
Mapping mc_top.$flatten\u3.\u0.$verific$i29$mc_rd_fifo.v:117$4557 ($and).
Mapping mc_top.$flatten\u3.\u0.$verific$i34$mc_rd_fifo.v:120$4560 ($and).
Mapping mc_top.$auto$ff.cc:262:slice$6502 ($dffe).
Mapping mc_top.$flatten\u3.\u0.$verific$mux_15$mc_rd_fifo.v:108$4548 ($mux).
Mapping mc_top.$auto$ff.cc:262:slice$6501 ($dffe).
Mapping mc_top.$flatten\u3.\u0.$verific$mux_8$mc_rd_fifo.v:101$4544 ($mux).
Mapping mc_top.$flatten\u4.$verific$Mux_61$mc_refresh.v:201$4665 ($bmux).
Mapping mc_top.$flatten\u4.$verific$equal_16$mc_refresh.v:169$4629 ($eq).
Mapping mc_top.$flatten\u4.$verific$i19$mc_refresh.v:169$4631 ($and).
Mapping mc_top.$flatten\u4.$verific$i39$mc_refresh.v:193$4642 ($and).
Mapping mc_top.$flatten\u4.$verific$i42$mc_refresh.v:194$4645 ($and).
Mapping mc_top.$flatten\u4.$verific$i45$mc_refresh.v:195$4648 ($and).
Mapping mc_top.$flatten\u4.$verific$i48$mc_refresh.v:196$4651 ($and).
Mapping mc_top.$flatten\u4.$verific$i51$mc_refresh.v:197$4654 ($and).
Mapping mc_top.$flatten\u4.$verific$i54$mc_refresh.v:198$4657 ($and).
Mapping mc_top.$flatten\u4.$verific$i57$mc_refresh.v:199$4660 ($and).
Mapping mc_top.$flatten\u4.$verific$i60$mc_refresh.v:200$4663 ($and).
Mapping mc_top.$auto$ff.cc:262:slice$6506 ($adffe).
Mapping mc_top.$flatten\u4.$verific$i69$mc_refresh.v:208$4669 ($mux).
Mapping mc_top.$auto$ff.cc:262:slice$6512 ($adffe).
Mapping mc_top.$flatten\u4.$verific$mux_14$mc_refresh.v:167$4627 ($mux).
Mapping mc_top.$auto$ff.cc:262:slice$6509 ($adffe).
Mapping mc_top.$flatten\u4.$verific$mux_35$mc_refresh.v:189$4640 ($mux).
Mapping mc_top.$flatten\u4.$verific$not_equal_17$mc_refresh.v:169$4630 ($reduce_bool).
Mapping mc_top.$flatten\u4.$verific$reduce_and_40$mc_refresh.v:194$4644 ($reduce_and).
Mapping mc_top.$flatten\u4.$verific$reduce_and_43$mc_refresh.v:195$4647 ($reduce_and).
Mapping mc_top.$flatten\u4.$verific$reduce_and_46$mc_refresh.v:196$4650 ($reduce_and).
Mapping mc_top.$flatten\u4.$verific$reduce_and_49$mc_refresh.v:197$4653 ($reduce_and).
Mapping mc_top.$flatten\u4.$verific$reduce_and_52$mc_refresh.v:198$4656 ($reduce_and).
Mapping mc_top.$flatten\u4.$verific$reduce_and_55$mc_refresh.v:199$4659 ($reduce_and).
Mapping mc_top.$flatten\u4.$verific$reduce_and_58$mc_refresh.v:200$4662 ($reduce_and).
Mapping mc_top.$flatten\u4.$verific$reduce_or_5$mc_refresh.v:160$4620 ($reduce_or).
Mapping mc_top.$flatten\u4.$verific$rfr_ce_reg$mc_refresh.v:182$4636 ($adff).
Mapping mc_top.$flatten\u4.$verific$rfr_clr_reg$mc_refresh.v:201$4666 ($dff).
Mapping mc_top.$flatten\u4.$verific$rfr_early_reg$mc_refresh.v:173$4634 ($adff).
Mapping mc_top.$flatten\u4.$verific$rfr_en_reg$mc_refresh.v:160$4622 ($adff).
Mapping mc_top.$flatten\u5.$verific$Select_444$mc_timing.v:1004$5580 ($mux).
Mapping mc_top.$flatten\u5.$verific$Select_448$mc_timing.v:1004$5584 ($mux).
Mapping mc_top.$flatten\u5.$verific$burst_act_rd_reg$mc_timing.v:782$5536 ($dff).
Mapping mc_top.$flatten\u5.$verific$cke__reg$mc_timing.v:568$5354 ($dff).
Mapping mc_top.$flatten\u5.$verific$cke_o_del_reg$mc_timing.v:578$5360 ($dff).
Mapping mc_top.$flatten\u5.$verific$cke_o_r1_reg$mc_timing.v:572$5356 ($dff).
Mapping mc_top.$flatten\u5.$verific$cke_o_r2_reg$mc_timing.v:575$5358 ($dff).
Mapping mc_top.$flatten\u5.$verific$cmd_a10_r_reg$mc_timing.v:789$5540 ($dff).
Mapping mc_top.$flatten\u5.$verific$cmd_del_reg$mc_timing.v:530$5331 ($adff).
Mapping mc_top.$flatten\u5.$verific$cmd_r_reg$mc_timing.v:526$5329 ($adff).
Mapping mc_top.$flatten\u5.$verific$cs_le_r1_reg$mc_timing.v:466$5289 ($dff).
Mapping mc_top.$flatten\u5.$verific$cs_le_r_reg$mc_timing.v:463$5287 ($dff).
Mapping mc_top.$flatten\u5.$verific$cs_le_reg$mc_timing.v:469$5291 ($dff).
Mapping mc_top.$flatten\u5.$verific$data_oe_r2_reg$mc_timing.v:557$5346 ($adff).
Mapping mc_top.$flatten\u5.$verific$data_oe_r_reg$mc_timing.v:553$5344 ($adff).
Mapping mc_top.$flatten\u5.$verific$data_oe_reg$mc_timing.v:561$5349 ($adff).
Mapping mc_top.$flatten\u5.$verific$dv_r_reg$mc_timing.v:786$5538 ($adff).
Mapping mc_top.$flatten\u5.$verific$equal_187$mc_timing.v:631$5399 ($logic_not).
Mapping mc_top.$flatten\u5.$verific$equal_252$mc_timing.v:695$5449 ($logic_not).
Mapping mc_top.$flatten\u5.$verific$equal_254$mc_timing.v:697$5451 ($logic_not).
Mapping mc_top.$flatten\u5.$verific$equal_303$mc_timing.v:734$5496 ($logic_not).
Mapping mc_top.$flatten\u5.$verific$equal_317$mc_timing.v:747$5506 ($logic_not).
Mapping mc_top.$flatten\u5.$verific$equal_341$mc_timing.v:777$5525 ($logic_not).
Mapping mc_top.$flatten\u5.$verific$equal_381$mc_timing.v:908$5554 ($eq).
Mapping mc_top.$flatten\u5.$verific$equal_6$mc_timing.v:449$5280 ($logic_not).
Mapping mc_top.$flatten\u5.$verific$equal_60$mc_timing.v:508$5314 ($logic_not).
Mapping mc_top.$flatten\u5.$verific$equal_62$mc_timing.v:509$5316 ($eq).
Mapping mc_top.$flatten\u5.$verific$equal_841$mc_timing.v:895$5803 ($eq).
Mapping mc_top.$flatten\u5.$verific$equal_842$mc_timing.v:900$5804 ($eq).
Mapping mc_top.$flatten\u5.$verific$equal_843$mc_timing.v:1017$5805 ($eq).
Mapping mc_top.$flatten\u5.$verific$equal_844$mc_timing.v:1024$5806 ($eq).
Mapping mc_top.$flatten\u5.$verific$equal_845$mc_timing.v:1036$5807 ($eq).
Mapping mc_top.$flatten\u5.$verific$equal_846$mc_timing.v:1046$5808 ($eq).
Mapping mc_top.$flatten\u5.$verific$equal_847$mc_timing.v:1058$5809 ($eq).
Mapping mc_top.$flatten\u5.$verific$equal_848$mc_timing.v:1064$5810 ($eq).
Mapping mc_top.$flatten\u5.$verific$equal_849$mc_timing.v:1074$5811 ($eq).
Mapping mc_top.$flatten\u5.$verific$equal_850$mc_timing.v:1085$5812 ($eq).
Mapping mc_top.$flatten\u5.$verific$equal_851$mc_timing.v:1095$5813 ($eq).
Mapping mc_top.$flatten\u5.$verific$equal_852$mc_timing.v:1105$5814 ($eq).
Mapping mc_top.$flatten\u5.$verific$equal_853$mc_timing.v:1116$5815 ($eq).
Mapping mc_top.$flatten\u5.$verific$equal_854$mc_timing.v:1125$5816 ($eq).
Mapping mc_top.$flatten\u5.$verific$equal_855$mc_timing.v:1136$5817 ($eq).
Mapping mc_top.$flatten\u5.$verific$equal_856$mc_timing.v:1151$5818 ($eq).
Mapping mc_top.$flatten\u5.$verific$equal_857$mc_timing.v:1158$5819 ($eq).
Mapping mc_top.$flatten\u5.$verific$equal_858$mc_timing.v:1180$5820 ($eq).
Mapping mc_top.$flatten\u5.$verific$equal_859$mc_timing.v:1199$5821 ($eq).
Mapping mc_top.$flatten\u5.$verific$equal_860$mc_timing.v:1207$5822 ($eq).
Mapping mc_top.$flatten\u5.$verific$equal_861$mc_timing.v:1221$5823 ($eq).
Mapping mc_top.$flatten\u5.$verific$equal_862$mc_timing.v:1230$5824 ($eq).
Mapping mc_top.$flatten\u5.$verific$equal_863$mc_timing.v:1241$5825 ($eq).
Mapping mc_top.$flatten\u5.$verific$equal_864$mc_timing.v:1250$5826 ($eq).
Mapping mc_top.$flatten\u5.$verific$equal_865$mc_timing.v:1261$5827 ($eq).
Mapping mc_top.$flatten\u5.$verific$equal_866$mc_timing.v:1271$5828 ($eq).
Mapping mc_top.$flatten\u5.$verific$equal_867$mc_timing.v:1281$5829 ($eq).
Mapping mc_top.$flatten\u5.$verific$equal_868$mc_timing.v:1288$5830 ($eq).
Mapping mc_top.$flatten\u5.$verific$equal_869$mc_timing.v:1294$5831 ($eq).
Mapping mc_top.$flatten\u5.$verific$equal_870$mc_timing.v:1301$5832 ($eq).
Mapping mc_top.$flatten\u5.$verific$equal_871$mc_timing.v:1309$5833 ($eq).
Mapping mc_top.$flatten\u5.$verific$equal_872$mc_timing.v:1321$5834 ($eq).
Mapping mc_top.$flatten\u5.$verific$equal_873$mc_timing.v:1332$5835 ($eq).
Mapping mc_top.$flatten\u5.$verific$equal_874$mc_timing.v:1338$5836 ($eq).
Mapping mc_top.$flatten\u5.$verific$equal_875$mc_timing.v:1349$5837 ($eq).
Mapping mc_top.$flatten\u5.$verific$equal_876$mc_timing.v:1367$5838 ($eq).
Mapping mc_top.$flatten\u5.$verific$equal_877$mc_timing.v:1377$5839 ($eq).
Mapping mc_top.$flatten\u5.$verific$equal_878$mc_timing.v:1388$5840 ($eq).
Mapping mc_top.$flatten\u5.$verific$equal_879$mc_timing.v:1408$5841 ($eq).
Mapping mc_top.$flatten\u5.$verific$equal_880$mc_timing.v:1430$5842 ($eq).
Mapping mc_top.$flatten\u5.$verific$equal_881$mc_timing.v:1458$5843 ($eq).
Mapping mc_top.$flatten\u5.$verific$equal_882$mc_timing.v:1493$5844 ($eq).
Mapping mc_top.$flatten\u5.$verific$equal_883$mc_timing.v:1501$5845 ($eq).
Mapping mc_top.$flatten\u5.$verific$equal_884$mc_timing.v:1506$5846 ($eq).
Mapping mc_top.$flatten\u5.$verific$equal_885$mc_timing.v:1522$5847 ($eq).
Mapping mc_top.$flatten\u5.$verific$equal_886$mc_timing.v:1532$5848 ($eq).
Mapping mc_top.$flatten\u5.$verific$equal_887$mc_timing.v:1539$5849 ($eq).
Mapping mc_top.$flatten\u5.$verific$equal_888$mc_timing.v:1559$5850 ($eq).
Mapping mc_top.$flatten\u5.$verific$equal_889$mc_timing.v:1572$5851 ($eq).
Mapping mc_top.$flatten\u5.$verific$equal_890$mc_timing.v:1582$5852 ($eq).
Mapping mc_top.$flatten\u5.$verific$equal_891$mc_timing.v:1588$5853 ($eq).
Mapping mc_top.$flatten\u5.$verific$equal_892$mc_timing.v:1597$5854 ($eq).
Mapping mc_top.$flatten\u5.$verific$equal_893$mc_timing.v:1603$5855 ($eq).
Mapping mc_top.$flatten\u5.$verific$equal_894$mc_timing.v:1614$5856 ($eq).
Mapping mc_top.$flatten\u5.$verific$equal_895$mc_timing.v:1620$5857 ($eq).
Mapping mc_top.$flatten\u5.$verific$equal_896$mc_timing.v:1632$5858 ($eq).
Mapping mc_top.$flatten\u5.$verific$equal_897$mc_timing.v:1642$5859 ($eq).
Mapping mc_top.$flatten\u5.$verific$equal_898$mc_timing.v:1654$5860 ($eq).
Mapping mc_top.$flatten\u5.$verific$equal_899$mc_timing.v:1660$5861 ($eq).
Mapping mc_top.$flatten\u5.$verific$equal_900$mc_timing.v:1667$5862 ($eq).
Mapping mc_top.$flatten\u5.$verific$equal_901$mc_timing.v:1681$5863 ($eq).
Mapping mc_top.$flatten\u5.$verific$equal_902$mc_timing.v:1690$5864 ($eq).
Mapping mc_top.$flatten\u5.$verific$equal_903$mc_timing.v:1695$5865 ($eq).
Mapping mc_top.$flatten\u5.$verific$equal_904$mc_timing.v:1706$5866 ($eq).
Mapping mc_top.$flatten\u5.$verific$equal_905$mc_timing.v:1714$5867 ($eq).
Mapping mc_top.$flatten\u5.$verific$equal_906$mc_timing.v:1721$5868 ($eq).
Mapping mc_top.$flatten\u5.$verific$i100$mc_timing.v:548$5340 ($not).
Mapping mc_top.$flatten\u5.$verific$i1000$mc_timing.v:1732$5961 ($mux).
Mapping mc_top.$auto$ff.cc:262:slice$6536 ($sdffe).
Mapping mc_top.$flatten\u5.$verific$i1007$mc_timing.v:1732$5967 ($or).
Mapping mc_top.$auto$ff.cc:262:slice$6289 ($sdff).
Mapping mc_top.$flatten\u5.$verific$i1014$mc_timing.v:948$5563 ($not).
Mapping mc_top.$flatten\u5.$verific$i1025$mc_timing.v:1122$5667 ($not).
Mapping mc_top.$flatten\u5.$verific$i1026$mc_timing.v:1217$5694 ($not).
Mapping mc_top.$flatten\u5.$verific$i1033$mc_timing.v:1466$5712 ($not).
Mapping mc_top.$flatten\u5.$verific$i1035$mc_timing.v:1556$5781 ($not).
Mapping mc_top.$flatten\u5.$verific$i113$mc_timing.v:561$5347 ($mux).
Mapping mc_top.$flatten\u5.$verific$i120$mc_timing.v:568$5352 ($and).
Mapping mc_top.$flatten\u5.$verific$i146$mc_timing.v:596$5369 ($and).
Mapping mc_top.$flatten\u5.$verific$i147$mc_timing.v:596$5370 ($and).
Mapping mc_top.$auto$ff.cc:262:slice$6548 ($dffe).
Mapping mc_top.$flatten\u5.$verific$i155$mc_timing.v:604$5374 ($mux).
Mapping mc_top.$flatten\u5.$verific$i161$mc_timing.v:612$5377 ($or).
Mapping mc_top.$auto$ff.cc:262:slice$6543 ($adffe).
Mapping mc_top.$flatten\u5.$verific$i164$mc_timing.v:612$5379 ($mux).
Mapping mc_top.$flatten\u5.$verific$i168$mc_timing.v:619$5381 ($not).
Mapping mc_top.$flatten\u5.$verific$i169$mc_timing.v:619$5382 ($not).
Mapping mc_top.$flatten\u5.$verific$i170$mc_timing.v:619$5383 ($and).
Mapping mc_top.$flatten\u5.$verific$i176$mc_timing.v:627$5387 ($not).
Mapping mc_top.$flatten\u5.$verific$i177$mc_timing.v:627$5388 ($and).
Mapping mc_top.$flatten\u5.$verific$i180$mc_timing.v:629$5391 ($not).
Mapping mc_top.$flatten\u5.$verific$i181$mc_timing.v:629$5392 ($and).
Mapping mc_top.$flatten\u5.$verific$i191$mc_timing.v:633$5402 ($not).
Mapping mc_top.$flatten\u5.$verific$i192$mc_timing.v:633$5403 ($and).
Mapping mc_top.$flatten\u5.$verific$i193$mc_timing.v:633$5404 ($not).
Mapping mc_top.$flatten\u5.$verific$i194$mc_timing.v:633$5405 ($and).
Mapping mc_top.$flatten\u5.$verific$i195$mc_timing.v:633$5406 ($and).
Mapping mc_top.$flatten\u5.$verific$i197$mc_timing.v:633$5408 ($not).
Mapping mc_top.$flatten\u5.$verific$i198$mc_timing.v:633$5409 ($and).
Mapping mc_top.$auto$ff.cc:262:slice$6539 ($adffe).
Mapping mc_top.$flatten\u5.$verific$i225$mc_timing.v:664$5423 ($mux).
Mapping mc_top.$flatten\u5.$verific$i227$mc_timing.v:676$5425 ($or).
Mapping mc_top.$flatten\u5.$verific$i228$mc_timing.v:676$5426 ($or).
Mapping mc_top.$flatten\u5.$verific$i229$mc_timing.v:676$5427 ($not).
Mapping mc_top.$flatten\u5.$verific$i230$mc_timing.v:676$5428 ($or).
Mapping mc_top.$flatten\u5.$verific$i259$mc_timing.v:701$5453 ($not).
Mapping mc_top.$flatten\u5.$verific$i260$mc_timing.v:701$5454 ($and).
Mapping mc_top.$flatten\u5.$verific$i261$mc_timing.v:701$5455 ($not).
Mapping mc_top.$flatten\u5.$verific$i262$mc_timing.v:701$5456 ($and).
Mapping mc_top.$flatten\u5.$verific$i263$mc_timing.v:702$5457 ($not).
Mapping mc_top.$flatten\u5.$verific$i264$mc_timing.v:702$5458 ($and).
Mapping mc_top.$flatten\u5.$verific$i265$mc_timing.v:702$5459 ($not).
Mapping mc_top.$flatten\u5.$verific$i266$mc_timing.v:702$5460 ($and).
Mapping mc_top.$flatten\u5.$verific$i267$mc_timing.v:702$5461 ($not).
Mapping mc_top.$flatten\u5.$verific$i268$mc_timing.v:702$5462 ($and).
Mapping mc_top.$flatten\u5.$verific$i269$mc_timing.v:702$5463 ($not).
Mapping mc_top.$flatten\u5.$verific$i270$mc_timing.v:702$5464 ($and).
Mapping mc_top.$flatten\u5.$verific$i287$mc_timing.v:732$5480 ($not).
Mapping mc_top.$flatten\u5.$verific$i289$mc_timing.v:732$5481 ($and).
Mapping mc_top.$flatten\u5.$verific$i323$mc_timing.v:759$5511 ($mux).
Mapping mc_top.$flatten\u5.$verific$i343$mc_timing.v:777$5526 ($not).
Mapping mc_top.$flatten\u5.$verific$i344$mc_timing.v:777$5527 ($and).
Mapping mc_top.$flatten\u5.$verific$i350$mc_timing.v:779$5533 ($and).
Mapping mc_top.$flatten\u5.$verific$i369$mc_timing.v:805$5543 ($and).
Mapping mc_top.$flatten\u5.$verific$i37$mc_timing.v:486$5299 ($not).
Mapping mc_top.$auto$ff.cc:262:slice$6528 ($adffe).
Mapping mc_top.$flatten\u5.$verific$i372$mc_timing.v:805$5545 ($mux).
Mapping mc_top.$flatten\u5.$verific$i386$mc_timing.v:923$5556 ($and).
Mapping mc_top.$flatten\u5.$verific$i387$mc_timing.v:930$5557 ($not).
Mapping mc_top.$flatten\u5.$verific$i388$mc_timing.v:930$5558 ($and).
Mapping mc_top.$flatten\u5.$verific$i390$mc_timing.v:937$5559 ($and).
Mapping mc_top.$flatten\u5.$verific$i391$mc_timing.v:937$5560 ($and).
Mapping mc_top.$flatten\u5.$verific$i393$mc_timing.v:942$5561 ($and).
Mapping mc_top.$flatten\u5.$verific$i395$mc_timing.v:944$5562 ($or).
Mapping mc_top.$flatten\u5.$verific$i397$mc_timing.v:945$5564 ($and).
Mapping mc_top.$flatten\u5.$verific$i398$mc_timing.v:945$5565 ($and).
Mapping mc_top.$flatten\u5.$verific$i402$mc_timing.v:949$5567 ($mux).
Mapping mc_top.$flatten\u5.$verific$i417$mc_timing.v:982$5571 ($mux).
Mapping mc_top.$flatten\u5.$verific$i419$mc_timing.v:982$5573 ($mux).
Mapping mc_top.$flatten\u5.$verific$i422$mc_timing.v:982$5574 ($mux).
Mapping mc_top.$flatten\u5.$verific$i442$mc_timing.v:1004$5577 ($mux).
Mapping mc_top.$flatten\u5.$verific$i447$mc_timing.v:1004$5582 ($mux).
Mapping mc_top.$flatten\u5.$verific$i450$mc_timing.v:1004$5585 ($mux).
Mapping mc_top.$flatten\u5.$verific$i451$mc_timing.v:1004$5586 ($mux).
Mapping mc_top.$flatten\u5.$verific$i452$mc_timing.v:1004$5587 ($mux).
Mapping mc_top.$flatten\u5.$verific$i457$mc_timing.v:1014$5590 ($mux).
Mapping mc_top.$flatten\u5.$verific$i459$mc_timing.v:1014$5591 ($mux).
Mapping mc_top.$flatten\u5.$verific$i461$mc_timing.v:1014$5593 ($mux).
Mapping mc_top.$flatten\u5.$verific$i462$mc_timing.v:1014$5594 ($mux).
Mapping mc_top.$flatten\u5.$verific$i464$mc_timing.v:1014$5596 ($mux).
Mapping mc_top.$flatten\u5.$verific$i465$mc_timing.v:1014$5597 ($mux).
Mapping mc_top.$flatten\u5.$verific$i466$mc_timing.v:1014$5598 ($mux).
Mapping mc_top.$flatten\u5.$verific$i467$mc_timing.v:1014$5599 ($mux).
Mapping mc_top.$flatten\u5.$verific$i468$mc_timing.v:1014$5600 ($mux).
Mapping mc_top.$flatten\u5.$verific$i469$mc_timing.v:1014$5601 ($mux).
Mapping mc_top.$flatten\u5.$verific$i470$mc_timing.v:1014$5602 ($mux).
Mapping mc_top.$flatten\u5.$verific$i473$mc_timing.v:1014$5604 ($mux).
Mapping mc_top.$flatten\u5.$verific$i474$mc_timing.v:1014$5605 ($mux).
Mapping mc_top.$flatten\u5.$verific$i475$mc_timing.v:1014$5606 ($mux).
Mapping mc_top.$flatten\u5.$verific$i477$mc_timing.v:1014$5608 ($mux).
Mapping mc_top.$flatten\u5.$verific$i478$mc_timing.v:1014$5609 ($mux).
Mapping mc_top.$flatten\u5.$verific$i479$mc_timing.v:1014$5610 ($mux).
Mapping mc_top.$flatten\u5.$verific$i480$mc_timing.v:1014$5611 ($mux).
Mapping mc_top.$flatten\u5.$verific$i481$mc_timing.v:1014$5612 ($mux).
Mapping mc_top.$flatten\u5.$verific$i482$mc_timing.v:1014$5613 ($mux).
Mapping mc_top.$flatten\u5.$verific$i484$mc_timing.v:1014$5614 ($mux).
Mapping mc_top.$flatten\u5.$verific$i486$mc_timing.v:1014$5616 ($mux).
Mapping mc_top.$flatten\u5.$verific$i487$mc_timing.v:1014$5617 ($mux).
Mapping mc_top.$flatten\u5.$verific$i488$mc_timing.v:1014$5618 ($mux).
Mapping mc_top.$flatten\u5.$verific$i489$mc_timing.v:1014$5619 ($mux).
Mapping mc_top.$flatten\u5.$verific$i491$mc_timing.v:1014$5621 ($mux).
Mapping mc_top.$flatten\u5.$verific$i492$mc_timing.v:1014$5622 ($mux).
Mapping mc_top.$flatten\u5.$verific$i493$mc_timing.v:1014$5623 ($mux).
Mapping mc_top.$flatten\u5.$verific$i494$mc_timing.v:1014$5624 ($mux).
Mapping mc_top.$flatten\u5.$verific$i495$mc_timing.v:1014$5625 ($mux).
Mapping mc_top.$flatten\u5.$verific$i496$mc_timing.v:1014$5626 ($mux).
Mapping mc_top.$flatten\u5.$verific$i497$mc_timing.v:1014$5627 ($mux).
Mapping mc_top.$flatten\u5.$verific$i499$mc_timing.v:1014$5629 ($mux).
Mapping mc_top.$flatten\u5.$verific$i500$mc_timing.v:1014$5630 ($mux).
Mapping mc_top.$flatten\u5.$verific$i501$mc_timing.v:1014$5631 ($mux).
Mapping mc_top.$flatten\u5.$verific$i502$mc_timing.v:1014$5632 ($mux).
Mapping mc_top.$flatten\u5.$verific$i503$mc_timing.v:1014$5633 ($mux).
Mapping mc_top.$flatten\u5.$verific$i505$mc_timing.v:1014$5635 ($mux).
Mapping mc_top.$flatten\u5.$verific$i506$mc_timing.v:1014$5636 ($mux).
Mapping mc_top.$flatten\u5.$verific$i507$mc_timing.v:1014$5637 ($mux).
Mapping mc_top.$flatten\u5.$verific$i508$mc_timing.v:1014$5638 ($mux).
Mapping mc_top.$flatten\u5.$verific$i509$mc_timing.v:1014$5639 ($mux).
Mapping mc_top.$flatten\u5.$verific$i510$mc_timing.v:1014$5640 ($mux).
Mapping mc_top.$flatten\u5.$verific$i513$mc_timing.v:1014$5642 ($mux).
Mapping mc_top.$flatten\u5.$verific$i514$mc_timing.v:1014$5643 ($mux).
Mapping mc_top.$flatten\u5.$verific$i515$mc_timing.v:1014$5644 ($mux).
Mapping mc_top.$flatten\u5.$verific$i516$mc_timing.v:1014$5645 ($mux).
Mapping mc_top.$flatten\u5.$verific$i517$mc_timing.v:1014$5646 ($mux).
Mapping mc_top.$flatten\u5.$verific$i518$mc_timing.v:1014$5647 ($mux).
Mapping mc_top.$flatten\u5.$verific$i520$mc_timing.v:1014$5649 ($mux).
Mapping mc_top.$flatten\u5.$verific$i521$mc_timing.v:1014$5650 ($mux).
Mapping mc_top.$flatten\u5.$verific$i522$mc_timing.v:1014$5651 ($mux).
Mapping mc_top.$flatten\u5.$verific$i523$mc_timing.v:1014$5652 ($mux).
Mapping mc_top.$flatten\u5.$verific$i524$mc_timing.v:1014$5653 ($mux).
Mapping mc_top.$flatten\u5.$verific$i525$mc_timing.v:1014$5654 ($mux).
Mapping mc_top.$flatten\u5.$verific$i527$mc_timing.v:1020$5656 ($and).
Mapping mc_top.$flatten\u5.$verific$i529$mc_timing.v:1020$5657 ($and).
Mapping mc_top.$flatten\u5.$verific$i534$mc_timing.v:1026$5658 ($or).
Mapping mc_top.$flatten\u5.$verific$i535$mc_timing.v:1026$5659 ($and).
Mapping mc_top.$flatten\u5.$verific$i538$mc_timing.v:1029$5661 ($or).
Mapping mc_top.$flatten\u5.$verific$i540$mc_timing.v:1030$5663 ($mux).
Mapping mc_top.$flatten\u5.$verific$i555$mc_timing.v:1113$5670 ($mux).
Mapping mc_top.$flatten\u5.$verific$i557$mc_timing.v:1118$5671 ($not).
Mapping mc_top.$flatten\u5.$verific$i559$mc_timing.v:1118$5673 ($mux).
Mapping mc_top.$flatten\u5.$verific$i562$mc_timing.v:1121$5674 ($not).
Mapping mc_top.$flatten\u5.$verific$i564$mc_timing.v:1121$5675 ($or).
Mapping mc_top.$flatten\u5.$verific$i567$mc_timing.v:1127$5677 ($and).
Mapping mc_top.$flatten\u5.$verific$i572$mc_timing.v:1133$5680 ($mux).
Mapping mc_top.$flatten\u5.$verific$i579$mc_timing.v:1148$5683 ($mux).
Mapping mc_top.$flatten\u5.$verific$i585$mc_timing.v:1176$5686 ($mux).
Mapping mc_top.$flatten\u5.$verific$i587$mc_timing.v:1176$5688 ($mux).
Mapping mc_top.$flatten\u5.$verific$i589$mc_timing.v:1177$5689 ($mux).
Mapping mc_top.$flatten\u5.$verific$i597$mc_timing.v:1213$5693 ($or).
Mapping mc_top.$flatten\u5.$verific$i601$mc_timing.v:1218$5696 ($mux).
Mapping mc_top.$flatten\u5.$verific$i610$mc_timing.v:1311$5697 ($not).
Mapping mc_top.$flatten\u5.$verific$i638$mc_timing.v:1400$5700 ($and).
Mapping mc_top.$flatten\u5.$verific$i639$mc_timing.v:1400$5701 ($or).
Mapping mc_top.$flatten\u5.$verific$i644$mc_timing.v:1404$5705 ($mux).
Mapping mc_top.$flatten\u5.$verific$i646$mc_timing.v:1405$5707 ($mux).
Mapping mc_top.$flatten\u5.$verific$i647$mc_timing.v:1405$5708 ($mux).
Mapping mc_top.$flatten\u5.$verific$i653$mc_timing.v:1412$5709 ($and).
Mapping mc_top.$flatten\u5.$verific$i666$mc_timing.v:1427$5713 ($mux).
Mapping mc_top.$flatten\u5.$verific$i667$mc_timing.v:1427$5714 ($mux).
Mapping mc_top.$flatten\u5.$verific$i669$mc_timing.v:1434$5716 ($not).
Mapping mc_top.$flatten\u5.$verific$i67$mc_timing.v:515$5320 ($or).
Mapping mc_top.$flatten\u5.$verific$i676$mc_timing.v:1439$5718 ($and).
Mapping mc_top.$flatten\u5.$verific$i677$mc_timing.v:1439$5719 ($and).
Mapping mc_top.$flatten\u5.$verific$i68$mc_timing.v:515$5321 ($or).
Mapping mc_top.$auto$ff.cc:262:slice$6518 ($dffe).
Mapping mc_top.$flatten\u5.$verific$i683$mc_timing.v:1444$5722 ($and).
Mapping mc_top.$flatten\u5.$verific$i685$mc_timing.v:1444$5723 ($and).
Mapping mc_top.$flatten\u5.$verific$i686$mc_timing.v:1444$5724 ($and).
Mapping mc_top.$flatten\u5.$verific$i687$mc_timing.v:1444$5725 ($and).
Mapping mc_top.$flatten\u5.$verific$i69$mc_timing.v:515$5322 ($and).
Mapping mc_top.$flatten\u5.$verific$i690$mc_timing.v:1446$5727 ($and).
Mapping mc_top.$flatten\u5.$verific$i691$mc_timing.v:1450$5728 ($not).
Mapping mc_top.$flatten\u5.$verific$i692$mc_timing.v:1450$5729 ($and).
Mapping mc_top.$flatten\u5.$verific$i693$mc_timing.v:1452$5730 ($not).
Mapping mc_top.$flatten\u5.$verific$i698$mc_timing.v:1454$5734 ($mux).
Mapping mc_top.$flatten\u5.$verific$i702$mc_timing.v:1463$5735 ($and).
Mapping mc_top.$flatten\u5.$verific$i712$mc_timing.v:1470$5736 ($and).
Mapping mc_top.$flatten\u5.$verific$i713$mc_timing.v:1470$5737 ($and).
Mapping mc_top.$auto$ff.cc:262:slice$6517 ($dffe).
Mapping mc_top.$flatten\u5.$verific$i720$mc_timing.v:1475$5740 ($and).
Mapping mc_top.$flatten\u5.$verific$i723$mc_timing.v:1475$5741 ($and).
Mapping mc_top.$flatten\u5.$verific$i725$mc_timing.v:1475$5742 ($and).
Mapping mc_top.$flatten\u5.$verific$i726$mc_timing.v:1475$5743 ($or).
Mapping mc_top.$flatten\u5.$verific$i728$mc_timing.v:1475$5744 ($and).
Mapping mc_top.$flatten\u5.$verific$i729$mc_timing.v:1475$5745 ($and).
Mapping mc_top.$flatten\u5.$verific$i730$mc_timing.v:1475$5746 ($or).
Mapping mc_top.$flatten\u5.$verific$i732$mc_timing.v:1477$5747 ($and).
Mapping mc_top.$flatten\u5.$verific$i735$mc_timing.v:1479$5748 ($not).
Mapping mc_top.$flatten\u5.$verific$i736$mc_timing.v:1479$5749 ($and).
Mapping mc_top.$flatten\u5.$verific$i739$mc_timing.v:1485$5750 ($and).
Mapping mc_top.$flatten\u5.$verific$i742$mc_timing.v:1489$5751 ($and).
Mapping mc_top.$flatten\u5.$verific$i758$mc_timing.v:1510$5761 ($and).
Mapping mc_top.$flatten\u5.$verific$i759$mc_timing.v:1510$5762 ($not).
Mapping mc_top.$flatten\u5.$verific$i760$mc_timing.v:1510$5763 ($and).
Mapping mc_top.$flatten\u5.$verific$i761$mc_timing.v:1510$5764 ($and).
Mapping mc_top.$flatten\u5.$verific$i765$mc_timing.v:1511$5765 ($mux).
Mapping mc_top.$flatten\u5.$verific$i768$mc_timing.v:1513$5766 ($and).
Mapping mc_top.$flatten\u5.$verific$i769$mc_timing.v:1513$5767 ($and).
Mapping mc_top.$flatten\u5.$verific$i771$mc_timing.v:1515$5768 ($and).
Mapping mc_top.$flatten\u5.$verific$i778$mc_timing.v:1524$5772 ($or).
Mapping mc_top.$flatten\u5.$verific$i781$mc_timing.v:1526$5773 ($and).
Mapping mc_top.$flatten\u5.$verific$i784$mc_timing.v:1528$5774 ($and).
Mapping mc_top.$flatten\u5.$verific$i790$mc_timing.v:1543$5778 ($and).
Mapping mc_top.$flatten\u5.$verific$i792$mc_timing.v:1545$5779 ($and).
Mapping mc_top.$flatten\u5.$verific$i794$mc_timing.v:1545$5780 ($and).
Mapping mc_top.$flatten\u5.$verific$i797$mc_timing.v:1549$5782 ($and).
Mapping mc_top.$flatten\u5.$verific$i8$mc_timing.v:449$5281 ($or).
Mapping mc_top.$flatten\u5.$verific$i801$mc_timing.v:1556$5784 ($mux).
Mapping mc_top.$flatten\u5.$verific$i804$mc_timing.v:1556$5786 ($mux).
Mapping mc_top.$flatten\u5.$verific$i806$mc_timing.v:1556$5788 ($mux).
Mapping mc_top.$flatten\u5.$verific$i808$mc_timing.v:1556$5790 ($mux).
Mapping mc_top.$flatten\u5.$verific$i825$mc_timing.v:1671$5791 ($not).
Mapping mc_top.$flatten\u5.$verific$i826$mc_timing.v:1671$5792 ($and).
Mapping mc_top.$flatten\u5.$verific$i828$mc_timing.v:1671$5794 ($and).
Mapping mc_top.$flatten\u5.$verific$i830$mc_timing.v:1671$5796 ($and).
Mapping mc_top.$flatten\u5.$verific$i831$mc_timing.v:1672$5797 ($not).
Mapping mc_top.$flatten\u5.$verific$i832$mc_timing.v:1672$5798 ($and).
Mapping mc_top.$auto$ff.cc:262:slice$6290 ($dffe).
Mapping mc_top.$flatten\u5.$verific$i914$mc_timing.v:1732$5875 ($mux).
Mapping mc_top.$flatten\u5.$verific$i918$mc_timing.v:1732$5879 ($or).
Mapping mc_top.$flatten\u5.$verific$i923$mc_timing.v:1732$5884 ($mux).
Mapping mc_top.$flatten\u5.$verific$i924$mc_timing.v:1732$5885 ($mux).
Mapping mc_top.$flatten\u5.$verific$i939$mc_timing.v:1732$5900 ($or).
Mapping mc_top.$flatten\u5.$verific$i946$mc_timing.v:1732$5907 ($or).
Mapping mc_top.$auto$ff.cc:262:slice$6527 ($sdffe).
Mapping mc_top.$auto$ff.cc:262:slice$6523 ($dffe).
Mapping mc_top.$flatten\u5.$verific$i962$mc_timing.v:1732$5923 ($or).
Mapping mc_top.$auto$ff.cc:262:slice$6522 ($dffe).
Mapping mc_top.$flatten\u5.$verific$i971$mc_timing.v:1732$5932 ($mux).
Mapping mc_top.$flatten\u5.$verific$i984$mc_timing.v:1732$5945 ($mux).
Mapping mc_top.$flatten\u5.$verific$i996$mc_timing.v:1732$5957 ($mux).
Mapping mc_top.$auto$ff.cc:262:slice$6521 ($dffe).
Mapping mc_top.$flatten\u5.$verific$inv_1036$mc_timing.v:1362$5569 ($not).
Mapping mc_top.$flatten\u5.$verific$inv_1039$mc_timing.v:1082$5572 ($not).
Mapping mc_top.$flatten\u5.$verific$ir_cnt_done_reg$mc_timing.v:747$5508 ($dff).
Mapping mc_top.$flatten\u5.$verific$lookup_ready1_reg$mc_timing.v:592$5368 ($adff).
Mapping mc_top.$flatten\u5.$verific$lookup_ready2_reg$mc_timing.v:596$5372 ($adff).
Mapping mc_top.$flatten\u5.$verific$mc_c_oe_reg$mc_timing.v:482$5298 ($adff).
Mapping mc_top.$flatten\u5.$verific$mc_le_reg$mc_timing.v:486$5301 ($adff).
Mapping mc_top.$flatten\u5.$verific$mem_ack_r_reg$mc_timing.v:519$5325 ($adff).
Mapping mc_top.$auto$ff.cc:262:slice$6304 ($adffe).
Mapping mc_top.$flatten\u5.$verific$mux_1009$mc_timing.v:1043$5552 ($mux).
Mapping mc_top.$auto$ff.cc:262:slice$6440 ($adffe).
Mapping mc_top.$auto$ff.cc:262:slice$6443 ($sdff).
Mapping mc_top.$auto$ff.cc:262:slice$6445 ($adffe).
Mapping mc_top.$auto$ff.cc:262:slice$6310 ($adffe).
Mapping mc_top.$flatten\u5.$verific$mux_1038$mc_timing.v:982$5570 ($mux).
Mapping mc_top.$auto$ff.cc:262:slice$6542 ($adffe).
Mapping mc_top.$flatten\u5.$verific$mux_184$mc_timing.v:629$5396 ($mux).
Mapping mc_top.$flatten\u5.$verific$mux_185$mc_timing.v:629$5397 ($mux).
Mapping mc_top.$flatten\u5.$verific$mux_230$mc_timing.v:676$5429 ($mux).
Mapping mc_top.$auto$ff.cc:262:slice$6538 ($sdffe).
Mapping mc_top.$flatten\u5.$verific$mux_244$mc_timing.v:693$5441 ($mux).
Mapping mc_top.$flatten\u5.$verific$mux_245$mc_timing.v:693$5442 ($mux).
Mapping mc_top.$flatten\u5.$verific$mux_246$mc_timing.v:693$5443 ($mux).
Mapping mc_top.$flatten\u5.$verific$mux_247$mc_timing.v:693$5444 ($mux).
Mapping mc_top.$flatten\u5.$verific$mux_248$mc_timing.v:693$5445 ($mux).
Mapping mc_top.$flatten\u5.$verific$mux_249$mc_timing.v:693$5446 ($mux).
Mapping mc_top.$flatten\u5.$verific$mux_250$mc_timing.v:693$5447 ($mux).
Mapping mc_top.$auto$ff.cc:262:slice$6532 ($adffe).
Mapping mc_top.$flatten\u5.$verific$mux_292$mc_timing.v:732$5485 ($mux).
Mapping mc_top.$flatten\u5.$verific$mux_293$mc_timing.v:732$5486 ($mux).
Mapping mc_top.$flatten\u5.$verific$mux_294$mc_timing.v:732$5487 ($mux).
Mapping mc_top.$flatten\u5.$verific$mux_295$mc_timing.v:732$5488 ($mux).
Mapping mc_top.$flatten\u5.$verific$mux_296$mc_timing.v:732$5489 ($mux).
Mapping mc_top.$flatten\u5.$verific$mux_297$mc_timing.v:732$5490 ($mux).
Mapping mc_top.$flatten\u5.$verific$mux_298$mc_timing.v:732$5491 ($mux).
Mapping mc_top.$flatten\u5.$verific$mux_299$mc_timing.v:732$5492 ($mux).
Mapping mc_top.$flatten\u5.$verific$mux_300$mc_timing.v:732$5493 ($mux).
Mapping mc_top.$flatten\u5.$verific$mux_301$mc_timing.v:732$5494 ($mux).
Mapping mc_top.$flatten\u5.$verific$mux_321$mc_timing.v:757$5510 ($bmux).
Mapping mc_top.$auto$ff.cc:262:slice$6531 ($adffe).
Mapping mc_top.$flatten\u5.$verific$mux_330$mc_timing.v:766$5518 ($mux).
Mapping mc_top.$flatten\u5.$verific$mux_400$mc_timing.v:948$5566 ($mux).
Mapping mc_top.$auto$ff.cc:262:slice$6307 ($adffe).
Mapping mc_top.$auto$ff.cc:262:slice$6313 ($dffe).
Mapping mc_top.$auto$ff.cc:262:slice$6316 ($adffe).
Mapping mc_top.$flatten\u5.$verific$mux_459$mc_timing.v:1014$5592 ($mux).
Mapping mc_top.$flatten\u5.$verific$mux_462$mc_timing.v:1014$5595 ($mux).
Mapping mc_top.$flatten\u5.$verific$mux_471$mc_timing.v:1014$5603 ($mux).
Mapping mc_top.$flatten\u5.$verific$mux_475$mc_timing.v:1014$5607 ($mux).
Mapping mc_top.$flatten\u5.$verific$mux_484$mc_timing.v:1014$5615 ($mux).
Mapping mc_top.$flatten\u5.$verific$mux_489$mc_timing.v:1014$5620 ($mux).
Mapping mc_top.$flatten\u5.$verific$mux_497$mc_timing.v:1014$5628 ($mux).
Mapping mc_top.$flatten\u5.$verific$mux_503$mc_timing.v:1014$5634 ($mux).
Mapping mc_top.$flatten\u5.$verific$mux_511$mc_timing.v:1014$5641 ($mux).
Mapping mc_top.$flatten\u5.$verific$mux_518$mc_timing.v:1014$5648 ($mux).
Mapping mc_top.$auto$ff.cc:262:slice$6319 ($adffe).
Mapping mc_top.$auto$ff.cc:262:slice$6438 ($sdff).
Mapping mc_top.$auto$ff.cc:262:slice$6444 ($adffe).
Mapping mc_top.$auto$ff.cc:262:slice$6454 ($sdffe).
Mapping mc_top.$flatten\u5.$verific$mux_570$mc_timing.v:1133$5679 ($mux).
Mapping mc_top.$auto$ff.cc:262:slice$6446 ($dffe).
Mapping mc_top.$flatten\u5.$verific$mux_577$mc_timing.v:1148$5682 ($mux).
Mapping mc_top.$auto$ff.cc:262:slice$6442 ($sdffe).
Mapping mc_top.$flatten\u5.$verific$mux_585$mc_timing.v:1176$5687 ($mux).
Mapping mc_top.$flatten\u5.$verific$mux_593$mc_timing.v:1193$5690 ($mux).
Mapping mc_top.$flatten\u5.$verific$mux_599$mc_timing.v:1217$5695 ($mux).
Mapping mc_top.$flatten\u5.$verific$mux_641$mc_timing.v:1404$5703 ($mux).
Mapping mc_top.$flatten\u5.$verific$mux_644$mc_timing.v:1404$5706 ($mux).
Mapping mc_top.$flatten\u5.$verific$mux_662$mc_timing.v:1426$5710 ($mux).
Mapping mc_top.$auto$ff.cc:262:slice$6458 ($adffe).
Mapping mc_top.$flatten\u5.$verific$mux_667$mc_timing.v:1427$5715 ($mux).
Mapping mc_top.$flatten\u5.$verific$mux_694$mc_timing.v:1453$5731 ($mux).
Mapping mc_top.$flatten\u5.$verific$mux_695$mc_timing.v:1453$5732 ($mux).
Mapping mc_top.$flatten\u5.$verific$mux_696$mc_timing.v:1453$5733 ($mux).
Mapping mc_top.$auto$ff.cc:262:slice$6461 ($adffe).
Mapping mc_top.$auto$ff.cc:262:slice$6464 ($adffe).
Mapping mc_top.$flatten\u5.$verific$mux_744$mc_timing.v:1489$5754 ($mux).
Mapping mc_top.$flatten\u5.$verific$mux_745$mc_timing.v:1489$5755 ($mux).
Mapping mc_top.$flatten\u5.$verific$mux_746$mc_timing.v:1489$5756 ($mux).
Mapping mc_top.$flatten\u5.$verific$mux_747$mc_timing.v:1489$5757 ($mux).
Mapping mc_top.$flatten\u5.$verific$mux_748$mc_timing.v:1489$5758 ($mux).
Mapping mc_top.$auto$ff.cc:262:slice$6467 ($adffe).
Mapping mc_top.$flatten\u5.$verific$mux_750$mc_timing.v:1490$5760 ($mux).
Mapping mc_top.$auto$ff.cc:262:slice$6470 ($adffe).
Mapping mc_top.$flatten\u5.$verific$mux_775$mc_timing.v:1519$5770 ($mux).
Mapping mc_top.$flatten\u5.$verific$mux_776$mc_timing.v:1519$5771 ($mux).
Mapping mc_top.$auto$ff.cc:262:slice$6473 ($adffe).
Mapping mc_top.$flatten\u5.$verific$mux_785$mc_timing.v:1528$5776 ($mux).
Mapping mc_top.$auto$ff.cc:262:slice$6476 ($dffe).
Mapping mc_top.$auto$ff.cc:262:slice$6477 ($dffe).
Mapping mc_top.$auto$ff.cc:262:slice$6478 ($dffe).
Mapping mc_top.$flatten\u5.$verific$mux_804$mc_timing.v:1556$5787 ($mux).
Mapping mc_top.$flatten\u5.$verific$mux_806$mc_timing.v:1556$5789 ($mux).
Mapping mc_top.$flatten\u5.$verific$mux_83$mc_timing.v:532$5332 ($mux).
Mapping mc_top.$auto$ff.cc:262:slice$6479 ($dffe).
Mapping mc_top.$auto$ff.cc:262:slice$6480 ($dffe).
Mapping mc_top.$flatten\u5.$verific$no_wb_cycle_reg$mc_timing.v:619$5385 ($adff).
Mapping mc_top.$flatten\u5.$verific$not_equal_189$mc_timing.v:633$5401 ($reduce_bool).
Mapping mc_top.$flatten\u5.$verific$oe__reg$mc_timing.v:548$5342 ($adff).
Mapping mc_top.$flatten\u5.$verific$pack_le0_reg$mc_timing.v:489$5303 ($dff).
Mapping mc_top.$flatten\u5.$verific$pack_le1_reg$mc_timing.v:492$5305 ($dff).
Mapping mc_top.$flatten\u5.$verific$reduce_or_1004$mc_timing.v:1732$5965 ($reduce_or).
Mapping mc_top.$flatten\u5.$verific$reduce_or_347$mc_timing.v:779$5531 ($reduce_or).
Mapping mc_top.$flatten\u5.$verific$reduce_or_348$mc_timing.v:779$5532 ($reduce_or).
Mapping mc_top.$flatten\u5.$verific$reduce_or_64$mc_timing.v:512$5318 ($reduce_or).
Mapping mc_top.$flatten\u5.$verific$reduce_or_909$mc_timing.v:1732$5871 ($reduce_or).
Mapping mc_top.$flatten\u5.$verific$reduce_or_920$mc_timing.v:1732$5882 ($reduce_or).
Mapping mc_top.$flatten\u5.$verific$reduce_or_927$mc_timing.v:1732$5889 ($reduce_or).
Mapping mc_top.$flatten\u5.$verific$reduce_or_933$mc_timing.v:1732$5895 ($reduce_or).
Mapping mc_top.$flatten\u5.$verific$reduce_or_942$mc_timing.v:1732$5904 ($reduce_or).
Mapping mc_top.$flatten\u5.$verific$reduce_or_944$mc_timing.v:1732$5906 ($reduce_or).
Mapping mc_top.$flatten\u5.$verific$reduce_or_947$mc_timing.v:1732$5909 ($reduce_or).
Mapping mc_top.$flatten\u5.$verific$reduce_or_948$mc_timing.v:1732$5910 ($reduce_or).
Mapping mc_top.$flatten\u5.$verific$reduce_or_958$mc_timing.v:1732$5920 ($reduce_or).
Mapping mc_top.$flatten\u5.$verific$reduce_or_973$mc_timing.v:1732$5935 ($reduce_or).
Mapping mc_top.$flatten\u5.$verific$reduce_or_978$mc_timing.v:1732$5940 ($reduce_or).
Mapping mc_top.$flatten\u5.$verific$reduce_or_988$mc_timing.v:1732$5950 ($reduce_or).
Mapping mc_top.$flatten\u5.$verific$reduce_or_991$mc_timing.v:1732$5953 ($reduce_or).
Mapping mc_top.$flatten\u5.$verific$reduce_or_993$mc_timing.v:1732$5955 ($reduce_or).
Mapping mc_top.$flatten\u5.$verific$reduce_or_996$mc_timing.v:1732$5958 ($reduce_or).
Mapping mc_top.$flatten\u5.$verific$resume_req_r_reg$mc_timing.v:646$5416 ($adff).
Mapping mc_top.$flatten\u5.$verific$rfr_ack_r_reg$mc_timing.v:654$5420 ($adff).
Mapping mc_top.$flatten\u5.$verific$rsts1_reg$mc_timing.v:473$5294 ($adff).
Mapping mc_top.$flatten\u5.$verific$rsts_reg$mc_timing.v:477$5296 ($adff).
Mapping mc_top.$flatten\u5.$verific$susp_req_r_reg$mc_timing.v:642$5414 ($adff).
Mapping mc_top.$flatten\u5.$verific$suspended_reg$mc_timing.v:650$5418 ($adff).
Mapping mc_top.$flatten\u5.$verific$tmr2_done_reg$mc_timing.v:702$5466 ($adff).
Mapping mc_top.$flatten\u5.$verific$tmr_done_reg$mc_timing.v:738$5499 ($adff).
Mapping mc_top.$flatten\u5.$verific$wb_wait_r2_reg$mc_timing.v:582$5362 ($dff).
Mapping mc_top.$flatten\u5.$verific$wb_wait_r_reg$mc_timing.v:585$5364 ($dff).
Mapping mc_top.$flatten\u5.$verific$wb_write_go_r_reg$mc_timing.v:798$5542 ($dff).
Mapping mc_top.$flatten\u6.$verific$equal_3$mc_wb_if.v:164$6048 ($logic_not).
Mapping mc_top.$flatten\u6.$verific$i104$mc_wb_if.v:228$6115 ($not).
Mapping mc_top.$flatten\u6.$verific$i105$mc_wb_if.v:228$6116 ($and).
Mapping mc_top.$flatten\u6.$verific$i107$mc_wb_if.v:229$6118 ($and).
Mapping mc_top.$flatten\u6.$verific$i108$mc_wb_if.v:229$6119 ($and).
Mapping mc_top.$flatten\u6.$verific$i110$mc_wb_if.v:229$6120 ($and).
Mapping mc_top.$flatten\u6.$verific$i111$mc_wb_if.v:229$6121 ($mux).
Mapping mc_top.$flatten\u6.$verific$i115$mc_wb_if.v:231$6124 ($or).
Mapping mc_top.$flatten\u6.$verific$i116$mc_wb_if.v:231$6125 ($or).
Mapping mc_top.$flatten\u6.$verific$i117$mc_wb_if.v:231$6126 ($and).
Mapping mc_top.$flatten\u6.$verific$i12$mc_wb_if.v:171$6053 ($mux).
Mapping mc_top.$flatten\u6.$verific$i122$mc_wb_if.v:235$6128 ($and).
Mapping mc_top.$flatten\u6.$verific$i124$mc_wb_if.v:235$6129 ($and).
Mapping mc_top.$flatten\u6.$verific$i128$mc_wb_if.v:242$6132 ($and).
Mapping mc_top.$flatten\u6.$verific$i130$mc_wb_if.v:242$6134 ($and).
Mapping mc_top.$flatten\u6.$verific$i16$mc_wb_if.v:175$6055 ($not).
Mapping mc_top.$flatten\u6.$verific$i17$mc_wb_if.v:175$6056 ($and).
Mapping mc_top.$flatten\u6.$verific$i18$mc_wb_if.v:175$6057 ($and).
Mapping mc_top.$flatten\u6.$verific$i19$mc_wb_if.v:175$6058 ($and).
Mapping mc_top.$flatten\u6.$verific$i20$mc_wb_if.v:175$6059 ($and).
Mapping mc_top.$flatten\u6.$verific$i28$mc_wb_if.v:177$6062 ($or).
Mapping mc_top.$flatten\u6.$verific$i32$mc_wb_if.v:181$6064 ($not).
Mapping mc_top.$flatten\u6.$verific$i33$mc_wb_if.v:181$6065 ($and).
Mapping mc_top.$flatten\u6.$verific$i34$mc_wb_if.v:182$6066 ($and).
Mapping mc_top.$flatten\u6.$verific$i36$mc_wb_if.v:182$6068 ($and).
Mapping mc_top.$flatten\u6.$verific$i37$mc_wb_if.v:182$6069 ($or).
Mapping mc_top.$flatten\u6.$verific$i38$mc_wb_if.v:182$6070 ($and).
Mapping mc_top.$flatten\u6.$verific$i43$mc_wb_if.v:186$6073 ($and).
Mapping mc_top.$flatten\u6.$verific$i47$mc_wb_if.v:188$6076 ($and).
Mapping mc_top.$flatten\u6.$verific$i48$mc_wb_if.v:188$6077 ($and).
Mapping mc_top.$flatten\u6.$verific$i53$mc_wb_if.v:193$6079 ($and).
Mapping mc_top.$flatten\u6.$verific$i54$mc_wb_if.v:193$6080 ($or).
Mapping mc_top.$flatten\u6.$verific$i55$mc_wb_if.v:193$6081 ($and).
Mapping mc_top.$flatten\u6.$verific$i60$mc_wb_if.v:197$6084 ($and).
Mapping mc_top.$flatten\u6.$verific$i62$mc_wb_if.v:198$6086 ($not).
Mapping mc_top.$flatten\u6.$verific$i63$mc_wb_if.v:198$6087 ($or).
Mapping mc_top.$flatten\u6.$verific$i64$mc_wb_if.v:198$6088 ($and).
Mapping mc_top.$flatten\u6.$verific$i68$mc_wb_if.v:200$6091 ($and).
Mapping mc_top.$flatten\u6.$verific$i69$mc_wb_if.v:200$6092 ($and).
Mapping mc_top.$flatten\u6.$verific$i73$mc_wb_if.v:201$6093 ($and).
Mapping mc_top.$flatten\u6.$verific$i75$mc_wb_if.v:203$6095 ($and).
Mapping mc_top.$flatten\u6.$verific$i76$mc_wb_if.v:203$6096 ($and).
Mapping mc_top.$flatten\u6.$verific$i77$mc_wb_if.v:203$6097 ($or).
Mapping mc_top.$flatten\u6.$verific$i78$mc_wb_if.v:203$6098 ($not).
Mapping mc_top.$flatten\u6.$verific$i79$mc_wb_if.v:203$6099 ($and).
Mapping mc_top.$flatten\u6.$verific$i81$mc_wb_if.v:204$6101 ($not).
Mapping mc_top.$flatten\u6.$verific$i82$mc_wb_if.v:204$6102 ($and).
Mapping mc_top.$flatten\u6.$verific$i83$mc_wb_if.v:204$6103 ($not).
Mapping mc_top.$flatten\u6.$verific$i84$mc_wb_if.v:204$6104 ($and).
Mapping mc_top.$flatten\u6.$verific$i85$mc_wb_if.v:204$6105 ($or).
Mapping mc_top.$flatten\u6.$verific$i90$mc_wb_if.v:211$6107 ($or).
Mapping mc_top.$auto$ff.cc:262:slice$6552 ($adffe).
Mapping mc_top.$flatten\u6.$verific$i93$mc_wb_if.v:211$6109 ($mux).
Mapping mc_top.$flatten\u6.$verific$i97$mc_wb_if.v:216$6111 ($and).
Mapping mc_top.$flatten\u6.$verific$mux_133$mc_wb_if.v:250$6136 ($mux).
Mapping mc_top.$flatten\u6.$verific$read_go_r1_reg$mc_wb_if.v:182$6072 ($adff).
Mapping mc_top.$flatten\u6.$verific$read_go_r_reg$mc_wb_if.v:186$6075 ($adff).
Mapping mc_top.$flatten\u6.$verific$rmw_r_reg$mc_wb_if.v:175$6061 ($adff).
Mapping mc_top.$flatten\u6.$verific$wb_ack_o_reg$mc_wb_if.v:229$6123 ($adff).
Mapping mc_top.$flatten\u6.$verific$wb_data_o_reg$mc_wb_if.v:250$6138 ($dff).
Mapping mc_top.$flatten\u6.$verific$wb_err_reg$mc_wb_if.v:235$6131 ($adff).
Mapping mc_top.$flatten\u6.$verific$write_go_r1_reg$mc_wb_if.v:193$6083 ($adff).
Mapping mc_top.$flatten\u6.$verific$write_go_r_reg$mc_wb_if.v:198$6090 ($adff).
Mapping mc_top.$flatten\u7.$verific$and_160$mc_mem_if.v:354$6249 ($and).
Mapping mc_top.$flatten\u7.$verific$i152$mc_mem_if.v:357$6251 ($not).
Mapping mc_top.$flatten\u7.$verific$i156$mc_mem_if.v:360$6255 ($not).
Mapping mc_top.$flatten\u7.$verific$i17$mc_mem_if.v:232$6199 ($not).
Mapping mc_top.$flatten\u7.$verific$i18$mc_mem_if.v:232$6200 ($not).
Mapping mc_top.$flatten\u7.$verific$i19$mc_mem_if.v:232$6201 ($and).
Mapping mc_top.$flatten\u7.$verific$i33$mc_mem_if.v:245$6211 ($not).
Mapping mc_top.$flatten\u7.$verific$i34$mc_mem_if.v:245$6212 ($and).
Mapping mc_top.$flatten\u7.$verific$i35$mc_mem_if.v:245$6213 ($and).
Mapping mc_top.$flatten\u7.$verific$i57$mc_mem_if.v:267$6228 ($not).
Mapping mc_top.$flatten\u7.$verific$i58$mc_mem_if.v:267$6229 ($and).
Mapping mc_top.$flatten\u7.$verific$i66$mc_mem_if.v:271$6235 ($or).
Mapping mc_top.$flatten\u7.$verific$i81$mc_mem_if.v:288$6245 ($or).
Mapping mc_top.$flatten\u7.$verific$inv_159$mc_mem_if.v:354$6250 ($not).
Mapping mc_top.$flatten\u7.$verific$inv_166$mc_mem_if.v:267$6254 ($not).
Mapping mc_top.$flatten\u7.$verific$mc_ack_r_reg$mc_mem_if.v:238$6207 ($dff).
Mapping mc_top.$flatten\u7.$verific$mc_adsc__reg$mc_mem_if.v:357$6253 ($dff).
Mapping mc_top.$flatten\u7.$verific$mc_adv__reg$mc_mem_if.v:360$6257 ($dff).
Mapping mc_top.$flatten\u7.$verific$mc_bg_reg$mc_mem_if.v:241$6209 ($dff).
Mapping mc_top.$flatten\u7.$verific$mc_br_r_reg$mc_mem_if.v:235$6205 ($dff).
Mapping mc_top.$flatten\u7.$verific$mc_c_oe_reg$mc_mem_if.v:229$6198 ($dff).
Mapping mc_top.$flatten\u7.$verific$mc_cas__reg$mc_mem_if.v:277$6241 ($dff).
Mapping mc_top.$flatten\u7.$verific$mc_data_ir_reg$mc_mem_if.v:226$6196 ($dff).
Mapping mc_top.$flatten\u7.$verific$mc_data_o_reg$mc_mem_if.v:248$6217 ($dff).
Mapping mc_top.$flatten\u7.$verific$mc_data_oe_reg$mc_mem_if.v:245$6215 ($adff).
Mapping mc_top.$flatten\u7.$verific$mc_dp_o_reg$mc_mem_if.v:251$6219 ($dff).
Mapping mc_top.$flatten\u7.$verific$mc_dqm_r2_reg$mc_mem_if.v:262$6227 ($dff).
Mapping mc_top.$flatten\u7.$verific$mc_oe__reg$mc_mem_if.v:271$6237 ($adff).
Mapping mc_top.$flatten\u7.$verific$mc_ras__reg$mc_mem_if.v:280$6243 ($dff).
Mapping mc_top.$flatten\u7.$verific$mc_rp_reg$mc_mem_if.v:232$6203 ($dff).
Mapping mc_top.$flatten\u7.$verific$mc_sts_ir_reg$mc_mem_if.v:223$6194 ($dff).
Mapping mc_top.$flatten\u7.$verific$mc_we__reg$mc_mem_if.v:274$6239 ($dff).
Mapping mc_top.$flatten\u7.$verific$mc_zz_o_reg$mc_mem_if.v:220$6192 ($dff).
Mapping mc_top.$flatten\u7.$verific$mux_167$mc_mem_if.v:354$6246 ($mux).
Mapping mc_top.$flatten\u7.$verific$mux_168$mc_mem_if.v:353$6247 ($mux).
Mapping mc_top.$flatten\u7.$verific$mux_59$mc_mem_if.v:267$6230 ($mux).
Mapping mc_top.$verific$i17$mc_top.v:285$28 ($not).
Mapping mc_top.$verific$i18$mc_top.v:285$29 ($and).
Mapping mc_top.$verific$i5$mc_top.v:275$17 ($or).
Mapping mc_top.$verific$mem_ack_r_reg$mc_top.v:290$32 ($dff).
Mapping mc_top.$verific$mux_10$mc_top.v:279$22 ($mux).
Mapping mc_top.$verific$mux_12$mc_top.v:280$24 ($mux).

24. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.
<suppressed ~12985 debug messages>

25. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
<suppressed ~13440 debug messages>
Removed a total of 4480 cells.

26. Executing OPT_DFF pass (perform DFF optimizations).

27. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..
Removed 21 unused cells and 741 unused wires.
<suppressed ~23 debug messages>

28. Executing OPT pass (performing simple optimizations).

28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.
<suppressed ~9 debug messages>

28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
Removed a total of 0 cells.

28.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mc_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

28.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mc_top.
Performed a total of 0 changes.

28.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
Removed a total of 0 cells.

28.6. Executing OPT_DFF pass (perform DFF optimizations).

28.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..

28.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.

28.9. Finished OPT passes. (There is nothing left to do.)

29. Executing OPT pass (performing simple optimizations).

29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.
<suppressed ~835 debug messages>

29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

29.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:262:slice$26492 ($_DFFE_PP_) from module mc_top (D = $auto$simplemap.cc:309:simplemap_bmux$15492 [9], Q = \u1.col_adr [9], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$26491 ($_DFFE_PP_) from module mc_top (D = $auto$simplemap.cc:309:simplemap_bmux$15533 [8], Q = \u1.col_adr [8], rval = 1'0).

29.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..
Removed 3 unused cells and 5 unused wires.
<suppressed ~4 debug messages>

29.5. Rerunning OPT passes. (Removed registers in this run.)

29.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.
<suppressed ~7 debug messages>

29.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

29.8. Executing OPT_DFF pass (perform DFF optimizations).

29.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

29.10. Finished fast OPT passes.

30. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

31. Executing OPT pass (performing simple optimizations).

31.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.

31.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
Removed a total of 0 cells.

31.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mc_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

31.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mc_top.
Performed a total of 0 changes.

31.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
Removed a total of 0 cells.

31.6. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$15092 in front of them:
        $auto$simplemap.cc:312:simplemap_bmux$15013
        $auto$simplemap.cc:312:simplemap_bmux$14987

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$16393 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$16428
        $auto$simplemap.cc:86:simplemap_bitop$16427

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$16394 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$16430
        $auto$simplemap.cc:86:simplemap_bitop$16429

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$16395 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$16432
        $auto$simplemap.cc:86:simplemap_bitop$16431

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$16396 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$16434
        $auto$simplemap.cc:86:simplemap_bitop$16433

31.7. Executing OPT_DFF pass (perform DFF optimizations).

31.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..
Removed 0 unused cells and 8 unused wires.
<suppressed ~1 debug messages>

31.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.
<suppressed ~5 debug messages>

31.10. Rerunning OPT passes. (Maybe there is more to do..)

31.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mc_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~5 debug messages>

31.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mc_top.
Performed a total of 0 changes.

31.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
Removed a total of 0 cells.

31.14. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:241:merge_operators$29751 in front of them:
        $auto$simplemap.cc:137:simplemap_reduce$16490
        $auto$simplemap.cc:137:simplemap_reduce$16482

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:241:merge_operators$29754 in front of them:
        $auto$simplemap.cc:137:simplemap_reduce$16509
        $auto$simplemap.cc:137:simplemap_reduce$16499

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$16398 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$16430
        $auto$simplemap.cc:86:simplemap_bitop$16428

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$16399 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$16434
        $auto$simplemap.cc:86:simplemap_bitop$16432

31.15. Executing OPT_DFF pass (perform DFF optimizations).

31.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..
Removed 0 unused cells and 9 unused wires.
<suppressed ~1 debug messages>

31.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.
<suppressed ~4 debug messages>

31.18. Rerunning OPT passes. (Maybe there is more to do..)

31.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mc_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~5 debug messages>

31.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mc_top.
Performed a total of 0 changes.

31.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
Removed a total of 0 cells.

31.22. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:241:merge_operators$29760 in front of them:
        $auto$simplemap.cc:137:simplemap_reduce$16507
        $auto$simplemap.cc:137:simplemap_reduce$16497

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:241:merge_operators$29766 in front of them:
        $auto$simplemap.cc:137:simplemap_reduce$16509
        $auto$simplemap.cc:137:simplemap_reduce$16490

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$16401 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$16434
        $auto$simplemap.cc:86:simplemap_bitop$16430

31.23. Executing OPT_DFF pass (perform DFF optimizations).

31.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..
Removed 0 unused cells and 9 unused wires.
<suppressed ~1 debug messages>

31.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.
<suppressed ~3 debug messages>

31.26. Rerunning OPT passes. (Maybe there is more to do..)

31.27. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mc_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

31.28. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mc_top.
Performed a total of 0 changes.

31.29. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
Removed a total of 0 cells.

31.30. Executing OPT_SHARE pass.

31.31. Executing OPT_DFF pass (perform DFF optimizations).

31.32. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

31.33. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.

31.34. Rerunning OPT passes. (Maybe there is more to do..)

31.35. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mc_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

31.36. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mc_top.
Performed a total of 0 changes.

31.37. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
Removed a total of 0 cells.

31.38. Executing OPT_SHARE pass.

31.39. Executing OPT_DFF pass (perform DFF optimizations).

31.40. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..

31.41. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.

31.42. Finished OPT passes. (There is nothing left to do.)

32. Executing TECHMAP pass (map to technology primitives).

32.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

32.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using template $paramod$ee3d784672cdb1cb32d9a801a3af776716f16b74\_90_alu for cells of type $alu.
Using template $paramod$c3cd1564c35d873179656addd6052d7ea8b6d991\_90_alu for cells of type $alu.
Using template $paramod$d707f0beb0b2a210c8cf7f6f49d0e464a0d63ba8\_90_alu for cells of type $alu.
Using template $paramod$32a7b7b86c07519b7537abc18e96f0331f97914d\_90_alu for cells of type $alu.
Using template $paramod$d4fbf181fbf74ad2c33c84c81168c20bdbe88f93\_90_alu for cells of type $alu.
Using template $paramod$8742280fdebca84e1c87f2a86ed84f62d558f4cc\_90_alu for cells of type $alu.
Using template $paramod$403a3c2fa431a154c52a6a5429d7a6260b5d144f\_90_alu for cells of type $alu.
Using template $paramod$6f67705c43e5e94c02b6ebb52209ce5aa5ade4c1\_90_alu for cells of type $alu.
Using template $paramod$f85408ed1aa3d09e465edae8a7bf590332ae9f7b\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000100 for cells of type $lcu.
Using extmapper simplemap for cells of type $not.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001101 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001100 for cells of type $lcu.
Using extmapper simplemap for cells of type $or.
No more expansions possible.
<suppressed ~1293 debug messages>

33. Executing OPT pass (performing simple optimizations).

33.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.
<suppressed ~433 debug messages>

33.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
<suppressed ~42 debug messages>
Removed a total of 14 cells.

33.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mc_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

33.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mc_top.
Performed a total of 0 changes.

33.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
Removed a total of 0 cells.

33.6. Executing OPT_DFF pass (perform DFF optimizations).

33.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..
Removed 64 unused cells and 447 unused wires.
<suppressed ~65 debug messages>

33.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.
<suppressed ~1 debug messages>

33.9. Rerunning OPT passes. (Maybe there is more to do..)

33.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mc_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

33.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mc_top.
Performed a total of 0 changes.

33.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
Removed a total of 0 cells.

33.13. Executing OPT_DFF pass (perform DFF optimizations).

33.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..

33.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.

33.16. Finished OPT passes. (There is nothing left to do.)

34. Executing ABC pass (technology mapping using ABC).

34.1. Extracting gate netlist of module `\mc_top' to `<abc-temp-dir>/input.blif'..
Extracted 4919 gates and 5873 wires to a netlist network with 952 inputs and 477 outputs.

34.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /home/users/aram/Workspace/yosys_verific_rs/scripts/synth/abc/abc_base6.a21.scr 
ABC: netlist  : i/o =    952/    477  and =    6102  lev =   38 (14.67)  mem = 0.11 MB
ABC: Mapping (K=6)  :  lut =   1255  edge =    5442  lev =   21 (8.16)  mem = 0.06 MB
ABC: netlist  : i/o =    952/    477  and =    6033  lev =   38 (14.95)  mem = 0.11 MB
ABC: Mapping (K=6)  :  lut =   1193  edge =    5233  lev =   18 (7.27)  mem = 0.06 MB
ABC: netlist  : i/o =    952/    477  and =    6013  lev =   41 (14.61)  mem = 0.11 MB
ABC: Mapping (K=6)  :  lut =   1184  edge =    5235  lev =   19 (7.18)  mem = 0.06 MB
ABC: netlist  : i/o =    952/    477  and =    6138  lev =   34 (12.76)  mem = 0.11 MB
ABC: Mapping (K=6)  :  lut =   1179  edge =    5279  lev =   18 (6.94)  mem = 0.06 MB
ABC: netlist  : i/o =    952/    477  and =    5915  lev =   38 (13.91)  mem = 0.11 MB
ABC: Mapping (K=6)  :  lut =   1157  edge =    5159  lev =   19 (6.83)  mem = 0.06 MB
ABC: netlist  : i/o =    952/    477  and =    6008  lev =   37 (14.19)  mem = 0.14 MB
ABC: Mapping (K=6)  :  lut =   1152  edge =    5251  lev =   19 (7.78)  mem = 0.06 MB
ABC: netlist  : i/o =    952/    477  and =    5950  lev =   41 (13.56)  mem = 0.14 MB
ABC: Mapping (K=6)  :  lut =   1144  edge =    5205  lev =   16 (6.42)  mem = 0.06 MB
ABC: netlist  : i/o =    952/    477  and =    6022  lev =   42 (14.28)  mem = 0.14 MB
ABC: Mapping (K=6)  :  lut =   1156  edge =    5257  lev =   17 (6.61)  mem = 0.06 MB
ABC: netlist  : i/o =    952/    477  and =    5980  lev =   37 (13.61)  mem = 0.14 MB
ABC: Mapping (K=6)  :  lut =   1141  edge =    5220  lev =   20 (7.63)  mem = 0.06 MB
ABC: netlist  : i/o =    952/    477  and =    6003  lev =   39 (14.30)  mem = 0.14 MB
ABC: Mapping (K=6)  :  lut =   1150  edge =    5240  lev =   18 (7.45)  mem = 0.06 MB
ABC: netlist  : i/o =    952/    477  and =    5940  lev =   36 (13.74)  mem = 0.14 MB
ABC: Mapping (K=6)  :  lut =   1151  edge =    5264  lev =   18 (6.86)  mem = 0.06 MB
ABC: netlist  : i/o =    952/    477  and =    5952  lev =   39 (14.56)  mem = 0.14 MB
ABC: Mapping (K=6)  :  lut =   1138  edge =    5223  lev =   17 (6.86)  mem = 0.06 MB
ABC: netlist  : i/o =    952/    477  and =    5949  lev =   39 (14.61)  mem = 0.14 MB
ABC: Mapping (K=6)  :  lut =   1137  edge =    5221  lev =   17 (6.86)  mem = 0.06 MB
ABC: netlist  : i/o =    952/    477  and =    5949  lev =   39 (14.61)  mem = 0.11 MB
ABC: Mapping (K=6)  :  lut =   1137  edge =    5221  lev =   17 (6.86)  mem = 0.06 MB
ABC: netlist  : i/o =    952/    477  and =    5949  lev =   39 (14.61)  mem = 0.14 MB
ABC: Mapping (K=6)  :  lut =   1137  edge =    5221  lev =   17 (6.86)  mem = 0.06 MB
ABC: netlist  : i/o =    952/    477  and =    5967  lev =   39 (14.61)  mem = 0.11 MB
ABC: Mapping (K=6)  :  lut =   1137  edge =    5221  lev =   17 (6.86)  mem = 0.06 MB
ABC: + write_blif <abc-temp-dir>/output.blif 

34.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     1151
ABC RESULTS:        internal signals:     4444
ABC RESULTS:           input signals:      952
ABC RESULTS:          output signals:      477
Removing temp directory.

35. Executing OPT pass (performing simple optimizations).

35.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.

35.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
Removed a total of 0 cells.

35.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mc_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

35.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mc_top.
Performed a total of 0 changes.

35.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
Removed a total of 0 cells.

35.6. Executing OPT_DFF pass (perform DFF optimizations).

35.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..
Removed 0 unused cells and 2917 unused wires.
<suppressed ~96 debug messages>

35.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.

35.9. Rerunning OPT passes. (Maybe there is more to do..)

35.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mc_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

35.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mc_top.
Performed a total of 0 changes.

35.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mc_top'.
Removed a total of 0 cells.

35.13. Executing OPT_DFF pass (perform DFF optimizations).

35.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..

35.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module mc_top.

35.16. Finished OPT passes. (There is nothing left to do.)

36. Executing HIERARCHY pass (managing design hierarchy).

36.1. Analyzing design hierarchy..
Top module:  \mc_top

36.2. Analyzing design hierarchy..
Top module:  \mc_top
Removed 0 unused modules.

37. Printing statistics.

=== mc_top ===

   Number of wires:               1729
   Number of wire bits:           6367
   Number of public wires:         710
   Number of public wire bits:    5309
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2199
     $_DFFE_PP0N_                    5
     $_DFFE_PP0P_                  157
     $_DFFE_PP1P_                   76
     $_DFFE_PP_                    430
     $_DFF_PP0_                     37
     $_DFF_PP1_                     15
     $_DFF_P_                      174
     $_SDFFCE_PP0P_                  2
     $_SDFFE_PN0P_                  13
     $_SDFFE_PN1P_                   2
     $_SDFFE_PP0P_                  91
     $_SDFFE_PP1P_                  32
     $_SDFF_PN0_                    10
     $_SDFF_PP0_                     1
     $_SDFF_PP1_                     6
     $lut                         1148

38. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mc_top..
Removed 0 unused cells and 487 unused wires.
<suppressed ~487 debug messages>

39. Executing BLIF backend.

Warnings: 414 unique messages, 435 total
End of script. Logfile hash: 9d35641ae4, CPU: user 17.88s system 0.09s, MEM: 72.20 MB peak
Yosys 0.14+36 (git sha1 15a4e900b, gcc 7.1.0 -fPIC -Os)
Time spent: 59% 1x abc (25 sec), 13% 42x opt_expr (5 sec), ...
