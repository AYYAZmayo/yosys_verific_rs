
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.53
 Yosys 0.18+10 (git sha1 a3cbfccc4, gcc 9.4.0-1ubuntu1~20.04.1 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 00:39:28 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k conv2d.v ksa.v ksa1.v control.v tfl.v

yosys> verific -vlog2k conv2d.v ksa.v ksa1.v control.v tfl.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 00:39:28 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'conv2d.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'ksa.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'ksa1.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'control.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tfl.v'
VERIFIC-WARNING [VERI-1407] tfl.v:385: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:260: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:254: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:248: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:241: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:237: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:236: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:225: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:221: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:219: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:218: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:217: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:216: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:215: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:214: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:213: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:212: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:211: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:210: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:209: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:206: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:160: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:158: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:156: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:149: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:144: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:129: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:128: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:5: attribute target identifier 'pad' not found in this scope

yosys> synth_rs -top conv2d -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.61

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\RS_DSP2_MULT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_sim'.
Generating RTLIL representation for module `\dsp_t1_20x18x64'.
Generating RTLIL representation for module `\dsp_t1_10x9x32'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top conv2d

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] conv2d.v:2: compiling module 'conv2d'
VERIFIC-INFO [VERI-1018] ksa.v:1: compiling module 'ksa(WIDTH=20)'
VERIFIC-WARNING [VERI-1209] conv2d.v:418: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:435: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:442: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:449: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:456: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:463: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:470: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:477: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1173] conv2d.v:398: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-1209] conv2d.v:540: expression size 14 truncated to fit in target size 13
VERIFIC-WARNING [VERI-1209] conv2d.v:606: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:630: expression size 21 truncated to fit in target size 20
VERIFIC-WARNING [VERI-1209] conv2d.v:638: expression size 10 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] conv2d.v:669: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:672: expression size 32 truncated to fit in target size 14
VERIFIC-WARNING [VERI-1209] conv2d.v:673: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:681: expression size 21 truncated to fit in target size 20
VERIFIC-WARNING [VERI-1209] conv2d.v:685: expression size 10 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] conv2d.v:687: expression size 32 truncated to fit in target size 13
VERIFIC-WARNING [VERI-1209] conv2d.v:688: expression size 10 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] conv2d.v:689: expression size 10 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] conv2d.v:717: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:720: expression size 32 truncated to fit in target size 14
VERIFIC-WARNING [VERI-1209] conv2d.v:721: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:729: expression size 21 truncated to fit in target size 20
VERIFIC-WARNING [VERI-1209] conv2d.v:733: expression size 10 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] conv2d.v:735: expression size 10 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] conv2d.v:736: expression size 10 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] conv2d.v:842: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:867: expression size 21 truncated to fit in target size 20
VERIFIC-WARNING [VERI-1209] conv2d.v:869: expression size 10 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] conv2d.v:874: expression size 17 truncated to fit in target size 16
VERIFIC-INFO [VERI-1018] ksa.v:1: compiling module 'ksa(WIDTH=24)'
VERIFIC-INFO [VERI-1018] ksa.v:1: compiling module 'ksa(WIDTH=16)'
VERIFIC-INFO [VERI-1018] ksa.v:1: compiling module 'ksa(WIDTH=12)'
VERIFIC-INFO [VERI-1018] ksa1.v:1: compiling module 'ksa1(WIDTH=12)'
VERIFIC-WARNING [VERI-1209] conv2d.v:1119: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:1138: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:1153: expression size 3 truncated to fit in target size 2
VERIFIC-WARNING [VERI-1209] conv2d.v:1156: expression size 10 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] conv2d.v:1169: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:1173: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:1181: expression size 10 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] conv2d.v:1199: expression size 17 truncated to fit in target size 16
Importing module conv2d.
Importing module ksa(WIDTH=12).
Importing module ksa(WIDTH=16).
Importing module ksa(WIDTH=20).
Importing module ksa(WIDTH=24).
Importing module ksa1(WIDTH=12).

3.3.1. Analyzing design hierarchy..
Top module:  \conv2d
Used module:     \ksa1(WIDTH=12)
Used module:     \ksa(WIDTH=12)
Used module:     \ksa(WIDTH=16)
Used module:     \ksa(WIDTH=24)
Used module:     \ksa(WIDTH=20)

3.3.2. Analyzing design hierarchy..
Top module:  \conv2d
Used module:     \ksa1(WIDTH=12)
Used module:     \ksa(WIDTH=12)
Used module:     \ksa(WIDTH=16)
Used module:     \ksa(WIDTH=24)
Used module:     \ksa(WIDTH=20)
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.4.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.4.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module ksa1(WIDTH=12).
Optimizing module ksa(WIDTH=24).
Optimizing module ksa(WIDTH=20).
Optimizing module ksa(WIDTH=16).
Optimizing module ksa(WIDTH=12).
Optimizing module conv2d.
<suppressed ~168 debug messages>

yosys> bmuxmap

3.5. Executing BMUXMAP pass.

yosys> demuxmap

3.6. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> flatten

3.7. Executing FLATTEN pass (flatten design).
Deleting now unused module ksa(WIDTH=12).
Deleting now unused module ksa(WIDTH=16).
Deleting now unused module ksa(WIDTH=20).
Deleting now unused module ksa(WIDTH=24).
Deleting now unused module ksa1(WIDTH=12).
<suppressed ~21 debug messages>

yosys> bmuxmap

3.8. Executing BMUXMAP pass.

yosys> demuxmap

3.9. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> tribuf -logic

3.10. Executing TRIBUF pass.

yosys> deminout

3.11. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.
<suppressed ~117 debug messages>

yosys> opt_clean

3.13. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..
Removed 104 unused cells and 3077 unused wires.
<suppressed ~409 debug messages>

yosys> check

3.14. Executing CHECK pass (checking for obvious problems).
Checking module conv2d...
Warning: found logic loop in module conv2d:
    cell $flatten\pk2.$verific$and_133$ksa1.v:31$3588 ($and)
    cell $flatten\pk2.$verific$or_132$ksa1.v:31$3589 ($or)
    wire $flatten\pk2.$verific$n206$3564 [0]
    wire \pk2.c_gen [10]
Warning: found logic loop in module conv2d:
    cell $flatten\pk2.$verific$and_133$ksa1.v:31$3588 ($and)
    cell $flatten\pk2.$verific$or_132$ksa1.v:31$3589 ($or)
    wire $flatten\pk2.$verific$n206$3564 [10]
    wire \pk2.c_gen [10]
Warning: found logic loop in module conv2d:
    cell $flatten\pk2.$verific$and_133$ksa1.v:31$3588 ($and)
    cell $flatten\pk2.$verific$or_132$ksa1.v:31$3589 ($or)
    wire $flatten\pk2.$verific$n206$3564 [1]
    wire \pk2.c_gen [10]
Warning: found logic loop in module conv2d:
    cell $flatten\pk2.$verific$and_133$ksa1.v:31$3588 ($and)
    cell $flatten\pk2.$verific$or_132$ksa1.v:31$3589 ($or)
    wire $flatten\pk2.$verific$n206$3564 [2]
    wire \pk2.c_gen [10]
Warning: found logic loop in module conv2d:
    cell $flatten\pk2.$verific$and_133$ksa1.v:31$3588 ($and)
    cell $flatten\pk2.$verific$or_132$ksa1.v:31$3589 ($or)
    wire $flatten\pk2.$verific$n206$3564 [3]
    wire \pk2.c_gen [10]
Warning: found logic loop in module conv2d:
    cell $flatten\pk2.$verific$and_133$ksa1.v:31$3588 ($and)
    cell $flatten\pk2.$verific$or_132$ksa1.v:31$3589 ($or)
    wire $flatten\pk2.$verific$n206$3564 [4]
    wire \pk2.c_gen [10]
Warning: found logic loop in module conv2d:
    cell $flatten\pk2.$verific$and_133$ksa1.v:31$3588 ($and)
    cell $flatten\pk2.$verific$or_132$ksa1.v:31$3589 ($or)
    wire $flatten\pk2.$verific$n206$3564 [5]
    wire \pk2.c_gen [10]
Warning: found logic loop in module conv2d:
    cell $flatten\pk2.$verific$and_133$ksa1.v:31$3588 ($and)
    cell $flatten\pk2.$verific$or_132$ksa1.v:31$3589 ($or)
    wire $flatten\pk2.$verific$n206$3564 [6]
    wire \pk2.c_gen [10]
Warning: found logic loop in module conv2d:
    cell $flatten\pk2.$verific$and_133$ksa1.v:31$3588 ($and)
    cell $flatten\pk2.$verific$or_132$ksa1.v:31$3589 ($or)
    wire $flatten\pk2.$verific$n206$3564 [7]
    wire \pk2.c_gen [10]
Warning: found logic loop in module conv2d:
    cell $flatten\pk2.$verific$and_133$ksa1.v:31$3588 ($and)
    cell $flatten\pk2.$verific$or_132$ksa1.v:31$3589 ($or)
    wire $flatten\pk2.$verific$n206$3564 [8]
    wire \pk2.c_gen [10]
Warning: found logic loop in module conv2d:
    cell $flatten\pk2.$verific$and_133$ksa1.v:31$3588 ($and)
    cell $flatten\pk2.$verific$or_132$ksa1.v:31$3589 ($or)
    wire $flatten\pk2.$verific$n206$3564 [9]
    wire \pk2.c_gen [10]
Found and reported 11 problems.

yosys> opt_expr

3.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.
<suppressed ~4 debug messages>

yosys> opt_merge -nomux

3.16. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \conv2d..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port B of cell $auto$bmuxmap.cc:60:execute$3672: \fsm_writechannels -> { 2'11 \fsm_writechannels [1:0] }
      Replacing known input bits on port B of cell $auto$bmuxmap.cc:60:execute$3668: \fsm_writechannels -> { 3'101 \fsm_writechannels [0] }
      Replacing known input bits on port B of cell $auto$bmuxmap.cc:60:execute$3661: \fsm_writechannels -> 4'1001
      Replacing known input bits on port A of cell $verific$mux_220$conv2d.v:429$1029: \fsm_loadacc -> 4'1101
      Replacing known input bits on port A of cell $verific$mux_188$conv2d.v:405$1001: \fsm_loadacc -> 4'0000
      Replacing known input bits on port A of cell $verific$i1027$conv2d.v:1124$2533: \filter_reload -> 1'0
      Replacing known input bits on port A of cell $verific$i1014$conv2d.v:1113$2524: \filter_reload -> 1'1
      Replacing known input bits on port A of cell $verific$i357$conv2d.v:607$1098: \i_bias_wen -> 1'0
      Replacing known input bits on port A of cell $verific$i727$conv2d.v:843$1320: \i_pixel_wen -> 1'0
      Replacing known input bits on port B of cell $auto$bmuxmap.cc:60:execute$3596: \i_math_mode -> 2'11
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~114 debug messages>

yosys> opt_reduce

3.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \conv2d.
    New ctrl vector for $pmux cell $verific$Select_1181$conv2d.v:1245$2617: { $verific$n11580$198 $verific$n11243$183 $verific$n11249$189 }
    New ctrl vector for $pmux cell $verific$Select_1184$conv2d.v:1245$2620: { $verific$n11243$183 $verific$n11249$189 }
    New ctrl vector for $pmux cell $verific$Select_1194$conv2d.v:1245$2629: { $verific$n11615$206 $verific$n11256$196 }
    New ctrl vector for $pmux cell $verific$Select_1197$conv2d.v:1245$2632: { $verific$n11617$208 $verific$n11618$209 }
    New ctrl vector for $pmux cell $verific$Select_1203$conv2d.v:1245$2636: { $verific$n11636$212 $verific$n11249$189 }
    New ctrl vector for $pmux cell $verific$Select_632$conv2d.v:784$1242: { $verific$n6557$87 $auto$opt_reduce.cc:134:opt_pmux$3959 $verific$n6560$90 $verific$n6561$91 }
    New ctrl vector for $pmux cell $verific$Select_633$conv2d.v:784$1243: { $verific$n6557$87 $auto$opt_reduce.cc:134:opt_pmux$3961 $verific$n6560$90 $verific$n6561$91 }
    New ctrl vector for $pmux cell $verific$Select_638$conv2d.v:784$1248: $auto$opt_reduce.cc:134:opt_pmux$3963
    New ctrl vector for $pmux cell $verific$Select_640$conv2d.v:784$1249: $auto$opt_reduce.cc:134:opt_pmux$3965
    New ctrl vector for $pmux cell $verific$Select_643$conv2d.v:784$1252: { $verific$n6698$97 $auto$opt_reduce.cc:134:opt_pmux$3967 $verific$n6560$90 }
    New ctrl vector for $pmux cell $verific$Select_826$conv2d.v:912$1380: { $verific$n8234$126 $verific$n8268$130 }
    New ctrl vector for $pmux cell $verific$Select_828$conv2d.v:912$1381: { $verific$n8234$126 $verific$n8268$130 }
    New ctrl vector for $pmux cell $verific$select_106$conv2d.v:223$781: { $verific$n851$8 $verific$n852$9 $verific$n853$10 $verific$n854$11 $verific$n856$13 $verific$n858$15 }
    New ctrl vector for $pmux cell $verific$select_1164$conv2d.v:1245$2600: { $verific$n11242$182 $verific$n11251$191 $verific$n11256$196 $auto$opt_reduce.cc:134:opt_pmux$3969 }
    New ctrl vector for $pmux cell $verific$select_1165$conv2d.v:1245$2601: { $auto$opt_reduce.cc:134:opt_pmux$3973 $verific$n11253$193 $verific$n11254$194 $auto$opt_reduce.cc:134:opt_pmux$3971 }
    New ctrl vector for $pmux cell $verific$select_1166$conv2d.v:1245$2602: { $auto$opt_reduce.cc:134:opt_pmux$3977 $verific$n11253$193 $verific$n11254$194 $auto$opt_reduce.cc:134:opt_pmux$3975 }
    New ctrl vector for $pmux cell $verific$select_1167$conv2d.v:1245$2603: { $auto$opt_reduce.cc:134:opt_pmux$3981 $verific$n11253$193 $verific$n11254$194 $auto$opt_reduce.cc:134:opt_pmux$3979 }
    New ctrl vector for $pmux cell $verific$select_1168$conv2d.v:1245$2604: { $auto$opt_reduce.cc:134:opt_pmux$3985 $verific$n11253$193 $verific$n11254$194 $auto$opt_reduce.cc:134:opt_pmux$3983 }
    New ctrl vector for $pmux cell $verific$select_1169$conv2d.v:1245$2605: { $auto$opt_reduce.cc:134:opt_pmux$3989 $verific$n11253$193 $verific$n11254$194 $auto$opt_reduce.cc:134:opt_pmux$3987 }
    New ctrl vector for $pmux cell $verific$select_1170$conv2d.v:1245$2606: { $auto$opt_reduce.cc:134:opt_pmux$3993 $verific$n11253$193 $verific$n11254$194 $auto$opt_reduce.cc:134:opt_pmux$3991 }
    New ctrl vector for $pmux cell $verific$select_1171$conv2d.v:1245$2607: { $auto$opt_reduce.cc:134:opt_pmux$3997 $verific$n11253$193 $verific$n11254$194 $auto$opt_reduce.cc:134:opt_pmux$3995 }
    New ctrl vector for $pmux cell $verific$select_1172$conv2d.v:1245$2608: { $auto$opt_reduce.cc:134:opt_pmux$4001 $verific$n11253$193 $verific$n11254$194 $auto$opt_reduce.cc:134:opt_pmux$3999 }
    New ctrl vector for $pmux cell $verific$select_1173$conv2d.v:1245$2609: { $verific$n11242$182 $verific$n11243$183 $verific$n11244$184 $verific$n11245$185 $auto$opt_reduce.cc:134:opt_pmux$4003 $verific$n11248$188 $verific$n11249$189 $verific$n11250$190 $verific$n11251$191 $verific$n11252$192 $verific$n11253$193 $verific$n11254$194 $verific$n11255$195 $verific$n11256$196 $verific$n11257$197 }
    New ctrl vector for $pmux cell $verific$select_1174$conv2d.v:1245$2610: { $verific$n11243$183 $verific$n11249$189 $verific$n11251$191 $verific$n11252$192 $auto$opt_reduce.cc:134:opt_pmux$4005 }
    New ctrl vector for $pmux cell $verific$select_1175$conv2d.v:1245$2611: { $auto$opt_reduce.cc:134:opt_pmux$4009 $auto$opt_reduce.cc:134:opt_pmux$4007 }
    New ctrl vector for $pmux cell $verific$select_1176$conv2d.v:1245$2612: { $auto$opt_reduce.cc:134:opt_pmux$4013 $auto$opt_reduce.cc:134:opt_pmux$4011 }
    New ctrl vector for $pmux cell $verific$select_1177$conv2d.v:1245$2613: { $verific$n11243$183 $verific$n11251$191 $auto$opt_reduce.cc:134:opt_pmux$4015 }
    New ctrl vector for $pmux cell $verific$select_1178$conv2d.v:1245$2614: { $verific$n11243$183 $verific$n11253$193 $auto$opt_reduce.cc:134:opt_pmux$4017 }
    New ctrl vector for $pmux cell $verific$select_1179$conv2d.v:1245$2615: { $verific$n11243$183 $auto$opt_reduce.cc:134:opt_pmux$4019 }
    New ctrl vector for $pmux cell $verific$select_1182$conv2d.v:1245$2618: { $verific$n11243$183 $verific$n11249$189 $verific$n11252$192 $auto$opt_reduce.cc:134:opt_pmux$4021 }
    New ctrl vector for $pmux cell $verific$select_1189$conv2d.v:1245$2625: { $verific$n11251$191 $auto$opt_reduce.cc:134:opt_pmux$4023 }
    New ctrl vector for $pmux cell $verific$select_1190$conv2d.v:1245$2626: { $verific$n11248$188 $verific$n11249$189 $verific$n11254$194 $auto$opt_reduce.cc:134:opt_pmux$4027 $auto$opt_reduce.cc:134:opt_pmux$4025 }
    New ctrl vector for $pmux cell $verific$select_1191$conv2d.v:1245$2627: { $verific$n11248$188 $verific$n11251$191 $auto$opt_reduce.cc:134:opt_pmux$4029 }
    New ctrl vector for $pmux cell $verific$select_1201$conv2d.v:1245$2634: { $verific$n11249$189 $verific$n11250$190 $verific$n11251$191 $verific$n11252$192 $auto$opt_reduce.cc:134:opt_pmux$4031 }
    New ctrl vector for $pmux cell $verific$select_409$conv2d.v:648$1135: { $verific$n5060$47 $auto$opt_reduce.cc:134:opt_pmux$4033 }
    New ctrl vector for $pmux cell $verific$select_410$conv2d.v:648$1136: $auto$opt_reduce.cc:134:opt_pmux$4035
    New ctrl vector for $pmux cell $verific$select_411$conv2d.v:648$1137: { $verific$n5060$47 $verific$n5061$48 $auto$opt_reduce.cc:134:opt_pmux$4037 }
    New ctrl vector for $pmux cell $verific$select_418$conv2d.v:648$1143: { $verific$n5061$48 $auto$opt_reduce.cc:134:opt_pmux$4039 }
    New ctrl vector for $pmux cell $verific$select_627$conv2d.v:784$1237: { $verific$n6558$88 $verific$n6559$89 $verific$n6560$90 $verific$n6561$91 }
    New ctrl vector for $pmux cell $verific$select_629$conv2d.v:784$1239: { $verific$n6557$87 $verific$n6558$88 $auto$opt_reduce.cc:134:opt_pmux$4041 }
    New ctrl vector for $pmux cell $verific$select_630$conv2d.v:784$1240: { $verific$n6558$88 $verific$n6559$89 $verific$n6560$90 $verific$n6561$91 }
    New ctrl vector for $pmux cell $verific$select_631$conv2d.v:784$1241: { $verific$n6557$87 $verific$n6558$88 $verific$n6559$89 $auto$opt_reduce.cc:134:opt_pmux$4043 }
    New ctrl vector for $pmux cell $verific$select_636$conv2d.v:784$1246: { $verific$n6558$88 $verific$n6559$89 $auto$opt_reduce.cc:134:opt_pmux$4045 }
    New ctrl vector for $pmux cell $verific$select_641$conv2d.v:784$1250: { $verific$n6558$88 $verific$n6559$89 $verific$n6560$90 $auto$opt_reduce.cc:134:opt_pmux$4047 }
    New ctrl vector for $pmux cell $verific$select_75$conv2d.v:164$777: { $verific$n851$8 $verific$n852$9 $verific$n853$10 $verific$n854$11 $verific$n856$13 $verific$n858$15 }
    New ctrl vector for $pmux cell $verific$select_823$conv2d.v:912$1377: { $verific$n8234$126 $auto$opt_reduce.cc:134:opt_pmux$4049 }
    New ctrl vector for $pmux cell $verific$select_824$conv2d.v:912$1378: { $verific$n8236$128 $auto$opt_reduce.cc:134:opt_pmux$4051 }
    New ctrl vector for $pmux cell $verific$select_829$conv2d.v:912$1382: { $verific$n8233$125 $verific$n8234$126 $auto$opt_reduce.cc:134:opt_pmux$4053 }
    New ctrl vector for $pmux cell $verific$select_830$conv2d.v:912$1383: { $verific$n8234$126 $verific$n8236$128 $auto$opt_reduce.cc:134:opt_pmux$4055 }
    New ctrl vector for $pmux cell $verific$select_836$conv2d.v:912$1388: { $verific$n8234$126 $auto$opt_reduce.cc:134:opt_pmux$4057 }
    New ctrl vector for $pmux cell $verific$select_838$conv2d.v:912$1390: { $verific$n8234$126 $auto$opt_reduce.cc:134:opt_pmux$4059 }
  Optimizing cells in module \conv2d.
Performed a total of 53 changes.

yosys> opt_merge

3.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
<suppressed ~78 debug messages>
Removed a total of 26 cells.

yosys> opt_share

3.20. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.21. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $verific$write2_reg$conv2d.v:1246$2675 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$wdata2_reg$conv2d.v:785$1274 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$total_pixels_done_reg$conv2d.v:1246$2661 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$total_filters_done_reg$conv2d.v:1246$2655 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$sat37_reg$conv2d.v:92$743 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$sat26_reg$conv2d.v:92$742 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$sat15_reg$conv2d.v:92$741 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$sat04_reg$conv2d.v:92$740 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$running_reg$conv2d.v:1246$2657 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$result_base_reg$conv2d.v:785$1272 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$reset_bias_address_reg$conv2d.v:785$1297 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$pixels_read_reg$conv2d.v:913$1393 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$pixel_start_reg$conv2d.v:913$1400 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$pixel_select_reg$conv2d.v:1246$2673 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$p2_raddr_reg$conv2d.v:1246$2643 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$p1_raddr_reg$conv2d.v:1246$2642 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$next_buffer_reg$conv2d.v:1246$2672 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$load_more_pixels_reg$conv2d.v:1246$2660 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$load_more_filters_reg$conv2d.v:1246$2659 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$load_ext_acc_reg$conv2d.v:1246$2662 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$load_buffer_reg$conv2d.v:913$1402 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$last_start2d_reg$conv2d.v:785$1296 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_tcdm3_wen_reg$conv2d.v:785$1283 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_tcdm3_req_reg$conv2d.v:785$1282 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_tcdm3_rdata_reg$conv2d.v:785$1299 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_tcdm2_wreq_reg$conv2d.v:785$1281 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_tcdm2_wen_reg$conv2d.v:785$1291 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_tcdm2_wdata_reg$conv2d.v:785$1273 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_tcdm2_rreq_reg$conv2d.v:785$1280 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_tcdm2_rdata_reg$conv2d.v:785$1298 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_tcdm1_wen_reg$conv2d.v:913$1395 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_tcdm1_req_reg$conv2d.v:913$1396 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_tcdm1_rdata_reg$conv2d.v:913$1403 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_sat_reg$conv2d.v:1246$2646 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_pixel_wen_reg$conv2d.v:913$1397 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_pixel_wdata_reg$conv2d.v:913$1399 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_pixel_waddr_reg$conv2d.v:913$1398 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_pixel_raddr_reg$conv2d.v:1246$2651 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_outsel_reg$conv2d.v:1246$2650 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_mult2_coef_reg$conv2d.v:1246$2677 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_mult1_coef_reg$conv2d.v:1246$2676 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_math_mode_reg$conv2d.v:1246$2647 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_mac_clr_reg$conv2d.v:1246$2648 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_mac_clken_reg$conv2d.v:1246$2649 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_filter_wdata_reg$conv2d.v:785$1287 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_filter_waddr_reg$conv2d.v:785$1286 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_filter_raddr_reg$conv2d.v:1246$2652 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_filter2_wen_reg$conv2d.v:785$1289 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_filter1_wen_reg$conv2d.v:785$1288 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_done2d_reg$conv2d.v:1246$2656 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_csel_reg$conv2d.v:1246$2645 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_bias_wen_reg$conv2d.v:785$1284 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_bias_wdata_reg$conv2d.v:785$1285 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_bias_waddr_reg$conv2d.v:785$1277 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_bias_raddr_reg$conv2d.v:785$1276 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i3_t2_waddr_reg$conv2d.v:785$1255 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i2_t2_waddr_reg$conv2d.v:785$1254 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i1_t2_waddr_reg$conv2d.v:785$1253 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$fsm_writechannels_reg$conv2d.v:785$1295 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$fsm_loadacc_reg$conv2d.v:785$1261 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$fsm_getpixels_reg$conv2d.v:913$1391 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$fsm_getfilters_reg$conv2d.v:785$1259 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$fsm_getbias_reg$conv2d.v:785$1260 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$fsm_conv2d_reg$conv2d.v:1246$2644 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$fract_select_reg$conv2d.v:1246$2674 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$filters_loaded_reg$conv2d.v:785$1256 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$filters_done_reg$conv2d.v:1246$2654 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$filters_complete_reg$conv2d.v:785$1294 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$filter_stride_reg$conv2d.v:785$1257 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$filter_start_reg$conv2d.v:785$1292 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$filter_space_left_reg$conv2d.v:785$1293 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$filter_reload_reg$conv2d.v:1246$2658 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$filter_channels_reg$conv2d.v:785$1290 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$copy_acc_reg$conv2d.v:1246$2663 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$channels_loaded_reg$conv2d.v:913$1392 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$channels_done_reg$conv2d.v:1246$2653 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$buffers_used_reg$conv2d.v:913$1401 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$bias_loaded_reg$conv2d.v:785$1279 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$bias_base_addr_reg$conv2d.v:785$1278 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$bias7_reg$conv2d.v:785$1269 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$bias6_reg$conv2d.v:785$1268 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$bias5_reg$conv2d.v:785$1267 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$bias4_reg$conv2d.v:785$1266 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$bias3_reg$conv2d.v:785$1265 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$bias2_reg$conv2d.v:785$1264 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$bias1_reg$conv2d.v:785$1263 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$bias0_reg$conv2d.v:785$1262 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$add_stride_reg$conv2d.v:785$1258 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$acc7_reg$conv2d.v:1246$2671 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$acc6_reg$conv2d.v:1246$2670 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$acc5_reg$conv2d.v:1246$2669 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$acc4_reg$conv2d.v:1246$2668 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$acc3_reg$conv2d.v:1246$2667 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$acc2_reg$conv2d.v:1246$2666 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$acc1_reg$conv2d.v:1246$2665 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$acc0_reg$conv2d.v:1246$2664 ($aldff) from module conv2d.

yosys> opt_clean

3.22. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..
Removed 3 unused cells and 32 unused wires.
<suppressed ~4 debug messages>

yosys> opt_expr

3.23. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.

yosys> opt_muxtree

3.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \conv2d..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~112 debug messages>

yosys> opt_reduce

3.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \conv2d.
Performed a total of 0 changes.

yosys> opt_merge

3.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_share

3.27. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.28. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.29. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..

yosys> opt_expr

3.30. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.
MAX OPT ITERATION = 2

yosys> fsm -encoding binary

3.31. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.31.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking conv2d.fract_select as FSM state register:
    Users of register don't seem to benefit from recoding.
Found FSM state register conv2d.fsm_conv2d.
Found FSM state register conv2d.fsm_getbias.
Found FSM state register conv2d.fsm_getpixels.
Not marking conv2d.fsm_loadacc as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking conv2d.i_math_mode as FSM state register:
    Register is connected to module port.
    Users of register don't seem to benefit from recoding.
Not marking conv2d.i_outsel as FSM state register:
    Register is connected to module port.
    Users of register don't seem to benefit from recoding.

yosys> fsm_extract

3.31.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\fsm_conv2d' from module `\conv2d'.
  found $adff cell for state register: $verific$fsm_conv2d_reg$conv2d.v:1246$2644
  root of input selection tree: $verific$n11461$707
  found reset state: 5'00000 (from async reset)
  found ctrl input: $verific$n11257$197
  found ctrl input: $verific$n11256$196
  found ctrl input: $verific$n11255$195
  found ctrl input: $verific$n11254$194
  found ctrl input: $verific$n11253$193
  found ctrl input: $verific$n11252$192
  found ctrl input: $verific$n11251$191
  found ctrl input: $verific$n11250$190
  found ctrl input: $verific$n11249$189
  found ctrl input: $verific$n11248$188
  found ctrl input: $auto$opt_reduce.cc:134:opt_pmux$4003
  found ctrl input: $verific$n11245$185
  found ctrl input: $verific$n11244$184
  found ctrl input: $verific$n11243$183
  found ctrl input: $verific$n11242$182
  found ctrl input: \start2d
  found state code: 5'01100
  found ctrl input: $verific$n11095$177
  found state code: 5'01001
  found state code: 5'01000
  found state code: 5'00100
  found state code: 5'00011
  found ctrl input: $verific$n10441$167
  found ctrl input: $verific$n10472$171
  found state code: 5'00010
  found state code: 5'00001
  found ctrl input: \filter_reload
  found ctrl input: $verific$n10079$157
  found ctrl input: $verific$n10042$153
  found state code: 5'00110
  found state code: 5'00111
  found state code: 5'01111
  found ctrl input: $verific$n9562$137
  found ctrl input: $verific$n9563$138
  found ctrl input: $verific$n9583$139
  found ctrl input: $verific$n9612$140
  found state code: 5'00101
  found state code: 5'01010
  found ctrl output: $verific$n11242$182
  found ctrl output: $verific$n11243$183
  found ctrl output: $verific$n11244$184
  found ctrl output: $verific$n11245$185
  found ctrl output: $verific$n11246$186
  found ctrl output: $verific$n11247$187
  found ctrl output: $verific$n11248$188
  found ctrl output: $verific$n11249$189
  found ctrl output: $verific$n11250$190
  found ctrl output: $verific$n11251$191
  found ctrl output: $verific$n11252$192
  found ctrl output: $verific$n11253$193
  found ctrl output: $verific$n11254$194
  found ctrl output: $verific$n11255$195
  found ctrl output: $verific$n11256$196
  ctrl inputs: { $auto$opt_reduce.cc:134:opt_pmux$4003 $verific$n11257$197 $verific$n11095$177 $verific$n10472$171 $verific$n10441$167 $verific$n10079$157 $verific$n10042$153 $verific$n9612$140 $verific$n9583$139 $verific$n9563$138 $verific$n9562$137 \filter_reload \start2d }
  ctrl outputs: { $verific$n11461$707 $verific$n11256$196 $verific$n11255$195 $verific$n11254$194 $verific$n11253$193 $verific$n11252$192 $verific$n11251$191 $verific$n11250$190 $verific$n11249$189 $verific$n11248$188 $verific$n11247$187 $verific$n11246$186 $verific$n11245$185 $verific$n11244$184 $verific$n11243$183 $verific$n11242$182 }
  transition:    5'00000 13'------0------ ->    5'00000 20'00000000000001000000
  transition:    5'00000 13'------1------ ->    5'00110 20'00110000000001000000
  transition:    5'01000 13'------------- ->    5'00001 20'00001000000100000000
  transition:    5'00100 13'--0---------- ->    5'01001 20'01001001000000000000
  transition:    5'00100 13'--1---------- ->    5'01000 20'01000001000000000000
  transition:    5'01100 13'------------0 ->    5'00000 20'00000100000000000000
  transition:    5'01100 13'------------1 ->    5'01100 20'01100100000000000000
  transition:    5'00010 13'------------- ->    5'00011 20'00011000010000000000
  transition:    5'01010 13'----------0-- ->    5'01010 20'01010000000000000010
  transition:    5'01010 13'--------001-- ->    5'00111 20'00111000000000000010
  transition:    5'01010 13'-------0101-- ->    5'00111 20'00111000000000000010
  transition:    5'01010 13'-------1101-- ->    5'00101 20'00101000000000000010
  transition:    5'01010 13'---------11-- ->    5'00111 20'00111000000000000010
  transition:    5'00110 13'-----------0- ->    5'00001 20'00001000000010000000
  transition:    5'00110 13'-----0-----1- ->    5'00110 20'00110000000010000000
  transition:    5'00110 13'-----1-----1- ->    5'00000 20'00000000000010000000
  transition:    5'00001 13'----0-------- ->    5'00001 20'00001000001000000000
  transition:    5'00001 13'---01-------- ->    5'00001 20'00001000001000000000
  transition:    5'00001 13'---11-------- ->    5'00010 20'00010000001000000000
  transition:    5'01001 13'------------- ->    5'01010 20'01010000000000000001
  transition:    5'00101 13'------------- ->    5'01100 20'01100010000000000000
  transition:    5'00011 13'------------- ->    5'00100 20'00100000100000000000
  transition:    5'00111 13'------------- ->    5'00110 20'00110000000000010000
  transition:    5'01111 13'------------- ->    5'00111 20'00111000000000001000
Extracting FSM `\fsm_getbias' from module `\conv2d'.
  found $adff cell for state register: $verific$fsm_getbias_reg$conv2d.v:785$1260
  root of input selection tree: $verific$n5122$425
  found reset state: 3'000 (from async reset)
  found ctrl input: $verific$n5063$50
  found ctrl input: $verific$n5062$49
  found ctrl input: $verific$n5061$48
  found ctrl input: $verific$n5060$47
  found ctrl input: \i_done2d
  found ctrl input: \tcdm3_valid
  found ctrl input: $verific$n4916$41
  found state code: 3'010
  found ctrl input: \start2d
  found state code: 3'001
  found ctrl output: $verific$n5060$47
  found ctrl output: $verific$n5061$48
  found ctrl output: $verific$n5062$49
  ctrl inputs: { $verific$n5063$50 $verific$n4916$41 \i_done2d \tcdm3_valid \start2d }
  ctrl outputs: { $verific$n5122$425 $verific$n5062$49 $verific$n5061$48 $verific$n5060$47 }
  transition:      3'000 5'----0 ->      3'000 6'000001
  transition:      3'000 5'----1 ->      3'001 6'001001
  transition:      3'010 5'--0-- ->      3'010 6'010100
  transition:      3'010 5'--1-- ->      3'000 6'000100
  transition:      3'001 5'---0- ->      3'001 6'001010
  transition:      3'001 5'-0-1- ->      3'001 6'001010
  transition:      3'001 5'-1-1- ->      3'010 6'010010
Extracting FSM `\fsm_getpixels' from module `\conv2d'.
  found $adff cell for state register: $verific$fsm_getpixels_reg$conv2d.v:913$1391
  root of input selection tree: $verific$n8296$544
  found reset state: 3'000 (from async reset)
  found ctrl input: $verific$n8237$129
  found ctrl input: $verific$n8236$128
  found ctrl input: $verific$n8235$127
  found ctrl input: $verific$n8234$126
  found ctrl input: $verific$n8233$125
  found ctrl input: $verific$n8211$121
  found state code: 3'001
  found ctrl input: \i_done2d
  found ctrl input: \load_more_filters
  found ctrl input: \tcdm1_valid
  found ctrl input: $verific$n7947$106
  found ctrl input: $verific$n8018$110
  found state code: 3'011
  found state code: 3'010
  found ctrl input: \start2d
  found ctrl output: $verific$n8233$125
  found ctrl output: $verific$n8234$126
  found ctrl output: $verific$n8235$127
  found ctrl output: $verific$n8236$128
  ctrl inputs: { $verific$n8237$129 $verific$n8211$121 $verific$n8018$110 $verific$n7947$106 \load_more_filters \i_done2d \tcdm1_valid \start2d }
  ctrl outputs: { $verific$n8296$544 $verific$n8236$128 $verific$n8235$127 $verific$n8234$126 $verific$n8233$125 }
  transition:      3'000 8'-------0 ->      3'000 7'0000001
  transition:      3'000 8'-------1 ->      3'001 7'0010001
  transition:      3'010 8'----00-- ->      3'010 7'0100100
  transition:      3'010 8'----10-- ->      3'000 7'0000100
  transition:      3'010 8'-----1-- ->      3'000 7'0000100
  transition:      3'001 8'------0- ->      3'001 7'0010010
  transition:      3'001 8'---0--1- ->      3'001 7'0010010
  transition:      3'001 8'--01--1- ->      3'011 7'0110010
  transition:      3'001 8'--11--1- ->      3'010 7'0100010
  transition:      3'011 8'-0------ ->      3'001 7'0011000
  transition:      3'011 8'-1------ ->      3'011 7'0111000

yosys> fsm_opt

3.31.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\fsm_getpixels$4082' from module `\conv2d'.
  Removing unused input signal $verific$n8237$129.
Optimizing FSM `$fsm$\fsm_getbias$4077' from module `\conv2d'.
  Removing unused input signal $verific$n5063$50.
Optimizing FSM `$fsm$\fsm_conv2d$4060' from module `\conv2d'.
  Removing unreachable state 5'01111.
  Removing unused input signal $auto$opt_reduce.cc:134:opt_pmux$4003.
  Removing unused input signal $verific$n11257$197.

yosys> opt_clean

3.31.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..
Removed 51 unused cells and 51 unused wires.
<suppressed ~52 debug messages>

yosys> fsm_opt

3.31.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\fsm_conv2d$4060' from module `\conv2d'.
  Removing unused output signal $verific$n11461$707 [0].
  Removing unused output signal $verific$n11461$707 [1].
  Removing unused output signal $verific$n11461$707 [2].
  Removing unused output signal $verific$n11461$707 [3].
  Removing unused output signal $verific$n11461$707 [4].
Optimizing FSM `$fsm$\fsm_getbias$4077' from module `\conv2d'.
  Removing unused output signal $verific$n5122$425 [0].
  Removing unused output signal $verific$n5122$425 [1].
  Removing unused output signal $verific$n5122$425 [2].
Optimizing FSM `$fsm$\fsm_getpixels$4082' from module `\conv2d'.
  Removing unused output signal $verific$n8296$544 [0].
  Removing unused output signal $verific$n8296$544 [1].
  Removing unused output signal $verific$n8296$544 [2].

yosys> fsm_recode -encoding binary

3.31.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\fsm_conv2d$4060' from module `\conv2d' using `auto' encoding:
  mapping auto encoding to `binary` for this FSM.
  00000 -> 0000
  01000 -> 0001
  00100 -> 0010
  01100 -> 0011
  00010 -> 0100
  01010 -> 0101
  00110 -> 0110
  00001 -> 0111
  01001 -> 1000
  00101 -> 1001
  00011 -> 1010
  00111 -> 1011
Recoding FSM `$fsm$\fsm_getbias$4077' from module `\conv2d' using `auto' encoding:
  mapping auto encoding to `binary` for this FSM.
  000 -> 00
  010 -> 01
  001 -> 10
Recoding FSM `$fsm$\fsm_getpixels$4082' from module `\conv2d' using `auto' encoding:
  mapping auto encoding to `binary` for this FSM.
  000 -> 00
  010 -> 01
  001 -> 10
  011 -> 11

yosys> fsm_info

3.31.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\fsm_conv2d$4060' from module `conv2d':
-------------------------------------

  Information on FSM $fsm$\fsm_conv2d$4060 (\fsm_conv2d):

  Number of input signals:   11
  Number of output signals:  15
  Number of state bits:       4

  Input signals:
    0: \start2d
    1: \filter_reload
    2: $verific$n9562$137
    3: $verific$n9563$138
    4: $verific$n9583$139
    5: $verific$n9612$140
    6: $verific$n10042$153
    7: $verific$n10079$157
    8: $verific$n10441$167
    9: $verific$n10472$171
   10: $verific$n11095$177

  Output signals:
    0: $verific$n11242$182
    1: $verific$n11243$183
    2: $verific$n11244$184
    3: $verific$n11245$185
    4: $verific$n11246$186
    5: $verific$n11247$187
    6: $verific$n11248$188
    7: $verific$n11249$189
    8: $verific$n11250$190
    9: $verific$n11251$191
   10: $verific$n11252$192
   11: $verific$n11253$193
   12: $verific$n11254$194
   13: $verific$n11255$195
   14: $verific$n11256$196

  State encoding:
    0:     4'0000  <RESET STATE>
    1:     4'0001
    2:     4'0010
    3:     4'0011
    4:     4'0100
    5:     4'0101
    6:     4'0110
    7:     4'0111
    8:     4'1000
    9:     4'1001
   10:     4'1010
   11:     4'1011

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 11'----0------   ->     0 15'000000001000000
      1:     0 11'----1------   ->     6 15'000000001000000
      2:     1 11'-----------   ->     7 15'000000100000000
      3:     2 11'1----------   ->     1 15'001000000000000
      4:     2 11'0----------   ->     8 15'001000000000000
      5:     3 11'----------0   ->     0 15'100000000000000
      6:     3 11'----------1   ->     3 15'100000000000000
      7:     4 11'-----------   ->    10 15'000010000000000
      8:     5 11'--------0--   ->     5 15'000000000000010
      9:     5 11'-----1101--   ->     9 15'000000000000010
     10:     5 11'------001--   ->    11 15'000000000000010
     11:     5 11'-----0101--   ->    11 15'000000000000010
     12:     5 11'-------11--   ->    11 15'000000000000010
     13:     6 11'---1-----1-   ->     0 15'000000010000000
     14:     6 11'---0-----1-   ->     6 15'000000010000000
     15:     6 11'---------0-   ->     7 15'000000010000000
     16:     7 11'-11--------   ->     4 15'000001000000000
     17:     7 11'--0--------   ->     7 15'000001000000000
     18:     7 11'-01--------   ->     7 15'000001000000000
     19:     8 11'-----------   ->     5 15'000000000000001
     20:     9 11'-----------   ->     3 15'010000000000000
     21:    10 11'-----------   ->     2 15'000100000000000
     22:    11 11'-----------   ->     6 15'000000000010000

-------------------------------------

FSM `$fsm$\fsm_getbias$4077' from module `conv2d':
-------------------------------------

  Information on FSM $fsm$\fsm_getbias$4077 (\fsm_getbias):

  Number of input signals:    4
  Number of output signals:   3
  Number of state bits:       2

  Input signals:
    0: \start2d
    1: \tcdm3_valid
    2: \i_done2d
    3: $verific$n4916$41

  Output signals:
    0: $verific$n5060$47
    1: $verific$n5061$48
    2: $verific$n5062$49

  State encoding:
    0:       2'00  <RESET STATE>
    1:       2'01
    2:       2'10

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 4'---0   ->     0 3'001
      1:     0 4'---1   ->     2 3'001
      2:     1 4'-1--   ->     0 3'100
      3:     1 4'-0--   ->     1 3'100
      4:     2 4'1-1-   ->     1 3'010
      5:     2 4'--0-   ->     2 3'010
      6:     2 4'0-1-   ->     2 3'010

-------------------------------------

FSM `$fsm$\fsm_getpixels$4082' from module `conv2d':
-------------------------------------

  Information on FSM $fsm$\fsm_getpixels$4082 (\fsm_getpixels):

  Number of input signals:    7
  Number of output signals:   4
  Number of state bits:       2

  Input signals:
    0: \start2d
    1: \tcdm1_valid
    2: \i_done2d
    3: \load_more_filters
    4: $verific$n7947$106
    5: $verific$n8018$110
    6: $verific$n8211$121

  Output signals:
    0: $verific$n8233$125
    1: $verific$n8234$126
    2: $verific$n8235$127
    3: $verific$n8236$128

  State encoding:
    0:       2'00  <RESET STATE>
    1:       2'01
    2:       2'10
    3:       2'11

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 7'------0   ->     0 4'0001
      1:     0 7'------1   ->     2 4'0001
      2:     1 7'---10--   ->     0 4'0100
      3:     1 7'----1--   ->     0 4'0100
      4:     1 7'---00--   ->     1 4'0100
      5:     2 7'-11--1-   ->     1 4'0010
      6:     2 7'-----0-   ->     2 4'0010
      7:     2 7'--0--1-   ->     2 4'0010
      8:     2 7'-01--1-   ->     3 4'0010
      9:     3 7'0------   ->     2 4'1000
     10:     3 7'1------   ->     3 4'1000

-------------------------------------

yosys> fsm_map

3.31.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\fsm_conv2d$4060' from module `\conv2d'.
Mapping FSM `$fsm$\fsm_getbias$4077' from module `\conv2d'.
Mapping FSM `$fsm$\fsm_getpixels$4082' from module `\conv2d'.

yosys> opt_expr

3.32. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.
<suppressed ~24 debug messages>

yosys> opt_merge -nomux

3.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

yosys> opt_muxtree

3.34. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \conv2d..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~112 debug messages>

yosys> opt_reduce

3.35. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \conv2d.
    New input vector for $reduce_or cell $verific$reduce_or_1206$conv2d.v:1245$2638: { $auto$fsm_map.cc:194:map_fsm$4090 [11:7] $auto$fsm_map.cc:194:map_fsm$4090 [5:4] $auto$fsm_map.cc:194:map_fsm$4090 [1:0] $verific$n11257$197 }
    New input vector for $reduce_or cell $verific$reduce_or_1202$conv2d.v:1245$2635: { $auto$fsm_map.cc:194:map_fsm$4090 [11:7] $auto$fsm_map.cc:194:map_fsm$4090 [5:1] $verific$n11257$197 }
    New input vector for $reduce_or cell $verific$reduce_or_1195$conv2d.v:1245$2630: { $auto$fsm_map.cc:194:map_fsm$4090 [11:8] $auto$fsm_map.cc:194:map_fsm$4090 [6:3] $auto$fsm_map.cc:194:map_fsm$4090 [1] $verific$n11257$197 }
    New input vector for $reduce_or cell $verific$reduce_or_1193$conv2d.v:1245$2628: { $auto$fsm_map.cc:194:map_fsm$4090 [11:4] $auto$fsm_map.cc:194:map_fsm$4090 [2:1] $verific$n11257$197 }
    New input vector for $reduce_or cell $verific$reduce_or_1185$conv2d.v:1245$2621: { $auto$fsm_map.cc:194:map_fsm$4090 [11:6] $auto$fsm_map.cc:194:map_fsm$4090 [4:1] $verific$n11257$197 }
    New input vector for $reduce_or cell $verific$reduce_or_1180$conv2d.v:1245$2616: { $auto$fsm_map.cc:194:map_fsm$4090 [11:7] $auto$fsm_map.cc:194:map_fsm$4090 [4:1] $verific$n11257$197 }
    New input vector for $reduce_or cell $verific$reduce_nor_1163$conv2d.v:1245$2598: $auto$fsm_map.cc:194:map_fsm$4090
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4030: { $auto$fsm_map.cc:194:map_fsm$4090 [11:8] $auto$fsm_map.cc:194:map_fsm$4090 [5] $auto$fsm_map.cc:194:map_fsm$4090 [3:2] $verific$n11257$197 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4028: { $auto$fsm_map.cc:194:map_fsm$4090 [10:8] $auto$fsm_map.cc:194:map_fsm$4090 [6:1] $verific$n11257$197 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4024: { $auto$fsm_map.cc:194:map_fsm$4090 [10] $auto$fsm_map.cc:194:map_fsm$4090 [8:7] $auto$fsm_map.cc:194:map_fsm$4090 [5:3] $auto$fsm_map.cc:194:map_fsm$4090 [1] $verific$n11257$197 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4020: { $auto$fsm_map.cc:194:map_fsm$4090 [11:10] $auto$fsm_map.cc:194:map_fsm$4090 [8:7] $auto$fsm_map.cc:194:map_fsm$4090 [3:0] $verific$n11257$197 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4018: { $auto$fsm_map.cc:194:map_fsm$4090 [11:10] $auto$fsm_map.cc:194:map_fsm$4090 [8:6] $auto$fsm_map.cc:194:map_fsm$4090 [4:0] $verific$n11257$197 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4016: { $auto$fsm_map.cc:194:map_fsm$4090 [11] $auto$fsm_map.cc:194:map_fsm$4090 [9:6] $auto$fsm_map.cc:194:map_fsm$4090 [4:0] $verific$n11257$197 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4014: { $auto$fsm_map.cc:194:map_fsm$4090 [11:8] $auto$fsm_map.cc:194:map_fsm$4090 [6] $auto$fsm_map.cc:194:map_fsm$4090 [4:1] $verific$n11257$197 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4010: { $auto$fsm_map.cc:194:map_fsm$4090 [10] $auto$fsm_map.cc:194:map_fsm$4090 [8:6] $auto$fsm_map.cc:194:map_fsm$4090 [4:0] $verific$n11257$197 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4004: { $auto$fsm_map.cc:194:map_fsm$4090 [11] $auto$fsm_map.cc:194:map_fsm$4090 [9:8] $auto$fsm_map.cc:194:map_fsm$4090 [3:1] $verific$n11257$197 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3998: { $auto$fsm_map.cc:194:map_fsm$4090 [11] $auto$fsm_map.cc:194:map_fsm$4090 [9] $auto$fsm_map.cc:194:map_fsm$4090 [7:3] $auto$fsm_map.cc:194:map_fsm$4090 [0] $verific$n11257$197 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3968: { $auto$fsm_map.cc:194:map_fsm$4090 [11:9] $auto$fsm_map.cc:194:map_fsm$4090 [6:4] $auto$fsm_map.cc:194:map_fsm$4090 [2:0] $verific$n11257$197 }
  Optimizing cells in module \conv2d.
Performed a total of 18 changes.

yosys> opt_merge

3.36. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_share

3.37. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.38. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $verific$wdata2_reg$conv2d.v:785$1274 ($adff) from module conv2d (D = { \sat04 \sat15 \sat26 \sat37 }, Q = \wdata2).
Adding EN signal on $verific$total_filters_done_reg$conv2d.v:1246$2655 ($adff) from module conv2d (D = $verific$n11570$713, Q = \total_filters_done).
Adding EN signal on $verific$running_reg$conv2d.v:1246$2657 ($adff) from module conv2d (D = $verific$n11639$214, Q = \running).
Adding EN signal on $verific$result_base_reg$conv2d.v:785$1272 ($adff) from module conv2d (D = $auto$bmuxmap.cc:58:execute$3711, Q = \result_base).
Adding EN signal on $verific$pixels_read_reg$conv2d.v:913$1393 ($adff) from module conv2d (D = $verific$n8238$540, Q = \pixels_read).
Adding EN signal on $verific$pixel_start_reg$conv2d.v:913$1400 ($adff) from module conv2d (D = $verific$n8271$132, Q = \pixel_start).
Adding EN signal on $verific$pixel_select_reg$conv2d.v:1246$2673 ($adff) from module conv2d (D = $verific$n11598$715, Q = \pixel_select).
Adding EN signal on $verific$next_buffer_reg$conv2d.v:1246$2672 ($adff) from module conv2d (D = $verific$n11595$203, Q = \next_buffer).
Adding EN signal on $verific$load_more_filters_reg$conv2d.v:1246$2659 ($adff) from module conv2d (D = $verific$n11637$213, Q = \load_more_filters).
Adding EN signal on $verific$load_buffer_reg$conv2d.v:913$1402 ($adff) from module conv2d (D = $verific$n8269$131, Q = \load_buffer).
Adding EN signal on $verific$i_tcdm3_wen_reg$conv2d.v:785$1283 ($adff) from module conv2d (D = $verific$n5111$53, Q = \i_tcdm3_wen).
Adding EN signal on $verific$i_tcdm3_req_reg$conv2d.v:785$1282 ($adff) from module conv2d (D = $verific$n5109$52, Q = \i_tcdm3_req).
Adding EN signal on $verific$i_tcdm3_raddr_reg$conv2d.v:785$1275 ($aldff) from module conv2d (D = $verific$n5087$423 [1:0], Q = \i_tcdm3_raddr [1:0]).
Adding EN signal on $verific$i_tcdm3_raddr_reg$conv2d.v:785$1275 ($aldff) from module conv2d (D = $verific$n5087$423 [19:2], Q = \i_tcdm3_raddr [19:2]).
Adding EN signal on $verific$i_tcdm2_wreq_reg$conv2d.v:785$1281 ($adff) from module conv2d (D = $auto$bmuxmap.cc:58:execute$3632 [0], Q = \i_tcdm2_wreq).
Adding EN signal on $verific$i_tcdm2_wen_reg$conv2d.v:785$1291 ($adff) from module conv2d (D = $verific$n6636$93, Q = \i_tcdm2_wen).
Adding EN signal on $verific$i_tcdm2_wdata_reg$conv2d.v:785$1273 ($adff) from module conv2d (D = $auto$bmuxmap.cc:58:execute$3613 [31:0], Q = \i_tcdm2_wdata).
Adding EN signal on $verific$i_tcdm2_rreq_reg$conv2d.v:785$1280 ($adff) from module conv2d (D = $verific$n6635$92, Q = \i_tcdm2_rreq).
Adding EN signal on $verific$i_tcdm2_raddr_reg$conv2d.v:785$1270 ($aldff) from module conv2d (D = $verific$n6614$497 [1:0], Q = \i_tcdm2_raddr [1:0]).
Adding EN signal on $verific$i_tcdm2_raddr_reg$conv2d.v:785$1270 ($aldff) from module conv2d (D = $verific$n6614$497 [19:2], Q = \i_tcdm2_raddr [19:2]).
Adding EN signal on $verific$i_tcdm1_wen_reg$conv2d.v:913$1395 ($adff) from module conv2d (D = $verific$n8303$135, Q = \i_tcdm1_wen).
Adding EN signal on $verific$i_tcdm1_req_reg$conv2d.v:913$1396 ($adff) from module conv2d (D = $verific$n8301$134, Q = \i_tcdm1_req).
Adding EN signal on $verific$i_tcdm1_addr_reg$conv2d.v:913$1394 ($aldff) from module conv2d (D = $verific$n8272$542 [1:0], Q = \i_tcdm1_addr [1:0]).
Adding EN signal on $verific$i_tcdm1_addr_reg$conv2d.v:913$1394 ($aldff) from module conv2d (D = $verific$n8272$542 [19:2], Q = \i_tcdm1_addr [19:2]).
Adding EN signal on $verific$i_pixel_wdata_reg$conv2d.v:913$1399 ($adff) from module conv2d (D = $verific$n8304$545, Q = \i_pixel_wdata).
Adding EN signal on $verific$i_pixel_raddr_reg$conv2d.v:1246$2651 ($adff) from module conv2d (D = $verific$n11540$711, Q = \i_pixel_raddr).
Adding EN signal on $verific$i_outsel_reg$conv2d.v:1246$2650 ($adff) from module conv2d (D = $verific$n11467$708, Q = \i_outsel).
Adding EN signal on $verific$i_mult2_coef_reg$conv2d.v:1246$2677 ($adff) from module conv2d (D = $verific$n11507$710, Q = \i_mult2_coef).
Adding EN signal on $verific$i_mult1_coef_reg$conv2d.v:1246$2676 ($adff) from module conv2d (D = $verific$n11474$709, Q = \i_mult1_coef).
Adding EN signal on $verific$i_math_mode_reg$conv2d.v:1246$2647 ($adff) from module conv2d (D = $verific$n11258$698, Q = \i_math_mode).
Adding EN signal on $verific$i_mac_clr_reg$conv2d.v:1246$2648 ($adff) from module conv2d (D = $verific$n11619$210, Q = \i_mac_clr).
Adding EN signal on $verific$i_mac_clken_reg$conv2d.v:1246$2649 ($adff) from module conv2d (D = $verific$n11622$211, Q = \i_mac_clken).
Adding EN signal on $verific$i_filter_wdata_reg$conv2d.v:785$1287 ($adff) from module conv2d (D = $verific$n6651$500, Q = \i_filter_wdata).
Adding EN signal on $verific$i_filter_waddr_reg$conv2d.v:785$1286 ($adff) from module conv2d (D = $verific$n6562$493 [0], Q = \i_filter_waddr [0]).
Adding EN signal on $verific$i_filter_waddr_reg$conv2d.v:785$1286 ($adff) from module conv2d (D = $verific$n6562$493 [11:1], Q = \i_filter_waddr [11:1]).
Adding EN signal on $verific$i_filter_raddr_reg$conv2d.v:1246$2652 ($adff) from module conv2d (D = $verific$n11623$718 [1:0], Q = \i_filter_raddr [1:0]).
Adding EN signal on $verific$i_filter_raddr_reg$conv2d.v:1246$2652 ($adff) from module conv2d (D = $verific$n11623$718 [11:2], Q = \i_filter_raddr [11:2]).
Adding EN signal on $verific$i_done2d_reg$conv2d.v:1246$2656 ($adff) from module conv2d (D = $verific$n11616$207, Q = \i_done2d).
Adding EN signal on $verific$i_csel_reg$conv2d.v:1246$2645 ($adff) from module conv2d (D = $verific$n11641$216, Q = \i_csel).
Adding EN signal on $verific$i_bias_wdata_reg$conv2d.v:785$1285 ($adff) from module conv2d (D = $verific$n5126$426, Q = \i_bias_wdata).
Adding EN signal on $verific$i_bias_waddr_reg$conv2d.v:785$1277 ($adff) from module conv2d (D = $verific$n5064$421 [11:2], Q = \i_bias_waddr [11:2]).
Adding EN signal on $verific$i_bias_waddr_reg$conv2d.v:785$1277 ($adff) from module conv2d (D = $verific$n5064$421 [1:0], Q = \i_bias_waddr [1:0]).
Adding EN signal on $verific$i_bias_raddr_reg$conv2d.v:785$1276 ($adff) from module conv2d (D = $auto$bmuxmap.cc:58:execute$3925 [11:2], Q = \i_bias_raddr [11:2]).
Adding EN signal on $verific$i_bias_raddr_reg$conv2d.v:785$1276 ($adff) from module conv2d (D = $auto$bmuxmap.cc:58:execute$3925 [1:0], Q = \i_bias_raddr [1:0]).
Adding EN signal on $verific$fsm_writechannels_reg$conv2d.v:785$1295 ($adff) from module conv2d (D = $auto$bmuxmap.cc:58:execute$3673 [3:2], Q = \fsm_writechannels [3:2]).
Adding EN signal on $verific$fsm_writechannels_reg$conv2d.v:785$1295 ($adff) from module conv2d (D = $auto$bmuxmap.cc:58:execute$3673 [0], Q = \fsm_writechannels [0]).
Adding EN signal on $verific$fsm_writechannels_reg$conv2d.v:785$1295 ($adff) from module conv2d (D = $auto$bmuxmap.cc:58:execute$3673 [1], Q = \fsm_writechannels [1]).
Adding EN signal on $verific$fsm_getfilters_reg$conv2d.v:785$1259 ($adff) from module conv2d (D = $verific$n6647$499, Q = \fsm_getfilters).
Adding EN signal on $verific$fract_select_reg$conv2d.v:1246$2674 ($adff) from module conv2d (D = $verific$n11601$716, Q = \fract_select).
Adding EN signal on $verific$filters_loaded_reg$conv2d.v:785$1256 ($adff) from module conv2d (D = $verific$n6604$496, Q = \filters_loaded).
Adding EN signal on $verific$filters_done_reg$conv2d.v:1246$2654 ($adff) from module conv2d (D = $verific$n11582$714 [2:0], Q = \filters_done [2:0]).
Adding EN signal on $verific$filters_done_reg$conv2d.v:1246$2654 ($adff) from module conv2d (D = $verific$n11582$714 [8:3], Q = \filters_done [8:3]).
Adding EN signal on $verific$filter_stride_reg$conv2d.v:785$1257 ($adff) from module conv2d (D = $verific$n6590$495, Q = \filter_stride).
Adding EN signal on $verific$filter_start_reg$conv2d.v:785$1292 ($adff) from module conv2d (D = $verific$n6699$98, Q = \filter_start).
Adding EN signal on $verific$filter_space_left_reg$conv2d.v:785$1293 ($adff) from module conv2d (D = $verific$n6575$494, Q = \filter_space_left).
Adding EN signal on $verific$filter_reload_reg$conv2d.v:1246$2658 ($adff) from module conv2d (D = $verific$n11581$199, Q = \filter_reload).
Adding EN signal on $verific$filter_channels_reg$conv2d.v:785$1290 ($adff) from module conv2d (D = $verific$n6637$498, Q = \filter_channels).
Adding EN signal on $verific$channels_loaded_reg$conv2d.v:913$1392 ($adff) from module conv2d (D = $verific$n8338$546 [1:0], Q = \channels_loaded [1:0]).
Adding EN signal on $verific$channels_loaded_reg$conv2d.v:913$1392 ($adff) from module conv2d (D = $verific$n8338$546 [8:2], Q = \channels_loaded [8:2]).
Adding EN signal on $verific$channels_done_reg$conv2d.v:1246$2653 ($adff) from module conv2d (D = $verific$n11604$717 [1:0], Q = \channels_done [1:0]).
Adding EN signal on $verific$channels_done_reg$conv2d.v:1246$2653 ($adff) from module conv2d (D = $verific$n11604$717 [8:2], Q = \channels_done [8:2]).
Adding EN signal on $verific$buffers_used_reg$conv2d.v:913$1401 ($adff) from module conv2d (D = $verific$n8293$543 [1], Q = \buffers_used [1]).
Adding EN signal on $verific$buffers_used_reg$conv2d.v:913$1401 ($adff) from module conv2d (D = $verific$n8293$543 [0], Q = \buffers_used [0]).
Adding EN signal on $verific$bias_loaded_reg$conv2d.v:785$1279 ($adff) from module conv2d (D = $verific$n5112$424, Q = \bias_loaded).
Adding EN signal on $verific$bias_base_addr_reg$conv2d.v:785$1278 ($adff) from module conv2d (D = $auto$bmuxmap.cc:58:execute$3944 [1:0], Q = \bias_base_addr [1:0]).
Adding EN signal on $verific$bias_base_addr_reg$conv2d.v:785$1278 ($adff) from module conv2d (D = $auto$bmuxmap.cc:58:execute$3944 [11:2], Q = \bias_base_addr [11:2]).
Adding EN signal on $verific$bias7_reg$conv2d.v:785$1269 ($adff) from module conv2d (D = $auto$bmuxmap.cc:58:execute$3746 [47:24], Q = \bias7).
Adding EN signal on $verific$bias6_reg$conv2d.v:785$1268 ($adff) from module conv2d (D = $auto$bmuxmap.cc:58:execute$3768, Q = \bias6).
Adding EN signal on $verific$bias5_reg$conv2d.v:785$1267 ($adff) from module conv2d (D = $auto$bmuxmap.cc:58:execute$3787, Q = \bias5).
Adding EN signal on $verific$bias4_reg$conv2d.v:785$1266 ($adff) from module conv2d (D = $auto$bmuxmap.cc:58:execute$3806, Q = \bias4).
Adding EN signal on $verific$bias3_reg$conv2d.v:785$1265 ($adff) from module conv2d (D = $auto$bmuxmap.cc:58:execute$3825, Q = \bias3).
Adding EN signal on $verific$bias2_reg$conv2d.v:785$1264 ($adff) from module conv2d (D = $auto$bmuxmap.cc:58:execute$3844, Q = \bias2).
Adding EN signal on $verific$bias1_reg$conv2d.v:785$1263 ($adff) from module conv2d (D = $auto$bmuxmap.cc:58:execute$3863, Q = \bias1).
Adding EN signal on $verific$bias0_reg$conv2d.v:785$1262 ($adff) from module conv2d (D = $auto$bmuxmap.cc:58:execute$3882, Q = \bias0).
Adding EN signal on $verific$add_stride_reg$conv2d.v:785$1258 ($adff) from module conv2d (D = $auto$bmuxmap.cc:58:execute$3692, Q = \add_stride).
Adding EN signal on $verific$acc7_reg$conv2d.v:1246$2671 ($adff) from module conv2d (D = $verific$n11436$706 [7:0], Q = \acc7 [7:0]).
Adding EN signal on $verific$acc7_reg$conv2d.v:1246$2671 ($adff) from module conv2d (D = $verific$n11436$706 [23:16], Q = \acc7 [23:16]).
Adding EN signal on $verific$acc7_reg$conv2d.v:1246$2671 ($adff) from module conv2d (D = $verific$n11436$706 [15:8], Q = \acc7 [15:8]).
Adding EN signal on $verific$acc6_reg$conv2d.v:1246$2670 ($adff) from module conv2d (D = $verific$n11411$705 [7:0], Q = \acc6 [7:0]).
Adding EN signal on $verific$acc6_reg$conv2d.v:1246$2670 ($adff) from module conv2d (D = $verific$n11411$705 [23:16], Q = \acc6 [23:16]).
Adding EN signal on $verific$acc6_reg$conv2d.v:1246$2670 ($adff) from module conv2d (D = $verific$n11411$705 [15:8], Q = \acc6 [15:8]).
Adding EN signal on $verific$acc5_reg$conv2d.v:1246$2669 ($adff) from module conv2d (D = $verific$n11386$704 [7:0], Q = \acc5 [7:0]).
Adding EN signal on $verific$acc5_reg$conv2d.v:1246$2669 ($adff) from module conv2d (D = $verific$n11386$704 [23:16], Q = \acc5 [23:16]).
Adding EN signal on $verific$acc5_reg$conv2d.v:1246$2669 ($adff) from module conv2d (D = $verific$n11386$704 [15:8], Q = \acc5 [15:8]).
Adding EN signal on $verific$acc4_reg$conv2d.v:1246$2668 ($adff) from module conv2d (D = $verific$n11361$703 [7:0], Q = \acc4 [7:0]).
Adding EN signal on $verific$acc4_reg$conv2d.v:1246$2668 ($adff) from module conv2d (D = $verific$n11361$703 [23:16], Q = \acc4 [23:16]).
Adding EN signal on $verific$acc4_reg$conv2d.v:1246$2668 ($adff) from module conv2d (D = $verific$n11361$703 [15:8], Q = \acc4 [15:8]).
Adding EN signal on $verific$acc3_reg$conv2d.v:1246$2667 ($adff) from module conv2d (D = $verific$n11336$702 [7:0], Q = \acc3 [7:0]).
Adding EN signal on $verific$acc3_reg$conv2d.v:1246$2667 ($adff) from module conv2d (D = $verific$n11336$702 [23:16], Q = \acc3 [23:16]).
Adding EN signal on $verific$acc3_reg$conv2d.v:1246$2667 ($adff) from module conv2d (D = $verific$n11336$702 [15:8], Q = \acc3 [15:8]).
Adding EN signal on $verific$acc2_reg$conv2d.v:1246$2666 ($adff) from module conv2d (D = $verific$n11311$701 [7:0], Q = \acc2 [7:0]).
Adding EN signal on $verific$acc2_reg$conv2d.v:1246$2666 ($adff) from module conv2d (D = $verific$n11311$701 [23:16], Q = \acc2 [23:16]).
Adding EN signal on $verific$acc2_reg$conv2d.v:1246$2666 ($adff) from module conv2d (D = $verific$n11311$701 [15:8], Q = \acc2 [15:8]).
Adding EN signal on $verific$acc1_reg$conv2d.v:1246$2665 ($adff) from module conv2d (D = $verific$n11286$700 [7:0], Q = \acc1 [7:0]).
Adding EN signal on $verific$acc1_reg$conv2d.v:1246$2665 ($adff) from module conv2d (D = $verific$n11286$700 [23:16], Q = \acc1 [23:16]).
Adding EN signal on $verific$acc1_reg$conv2d.v:1246$2665 ($adff) from module conv2d (D = $verific$n11286$700 [15:8], Q = \acc1 [15:8]).
Adding EN signal on $verific$acc0_reg$conv2d.v:1246$2664 ($adff) from module conv2d (D = $verific$n11261$699 [7:0], Q = \acc0 [7:0]).
Adding EN signal on $verific$acc0_reg$conv2d.v:1246$2664 ($adff) from module conv2d (D = $verific$n11261$699 [23:16], Q = \acc0 [23:16]).
Adding EN signal on $verific$acc0_reg$conv2d.v:1246$2664 ($adff) from module conv2d (D = $verific$n11261$699 [15:8], Q = \acc0 [15:8]).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4953 ($adffe) from module conv2d.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4953 ($adffe) from module conv2d.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4890 ($adffe) from module conv2d.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4890 ($adffe) from module conv2d.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4874 ($adffe) from module conv2d.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4874 ($adffe) from module conv2d.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4775 ($adffe) from module conv2d.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4775 ($adffe) from module conv2d.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4775 ($adffe) from module conv2d.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4604 ($adffe) from module conv2d.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4604 ($adffe) from module conv2d.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4574 ($adffe) from module conv2d.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4837 ($adffe) from module conv2d.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4837 ($adffe) from module conv2d.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4837 ($adffe) from module conv2d.
Setting constant 0-bit at position 0 on $verific$filters_complete_reg$conv2d.v:785$1294 ($adff) from module conv2d.
Setting constant 0-bit at position 1 on $verific$filters_complete_reg$conv2d.v:785$1294 ($adff) from module conv2d.
Setting constant 0-bit at position 2 on $verific$filters_complete_reg$conv2d.v:785$1294 ($adff) from module conv2d.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4764 ($adffe) from module conv2d.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4764 ($adffe) from module conv2d.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4764 ($adffe) from module conv2d.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4742 ($adffe) from module conv2d.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4662 ($adffe) from module conv2d.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4662 ($adffe) from module conv2d.
Setting constant 0-bit at position 0 on $verific$i_pixel_waddr_reg$conv2d.v:913$1398 ($adff) from module conv2d.
Setting constant 0-bit at position 1 on $verific$i_pixel_waddr_reg$conv2d.v:913$1398 ($adff) from module conv2d.

yosys> opt_clean

3.39. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..
Removed 69 unused cells and 101 unused wires.
<suppressed ~70 debug messages>

yosys> opt_expr

3.40. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.
<suppressed ~146 debug messages>

yosys> opt_muxtree

3.41. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \conv2d..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~111 debug messages>

yosys> opt_reduce

3.42. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \conv2d.
Performed a total of 0 changes.

yosys> opt_merge

3.43. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
<suppressed ~663 debug messages>
Removed a total of 221 cells.

yosys> opt_share

3.44. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.45. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4280 ($adffe) from module conv2d.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4280 ($adffe) from module conv2d.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4280 ($adffe) from module conv2d.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4676 ($adffe) from module conv2d.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4676 ($adffe) from module conv2d.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4968 ($adffe) from module conv2d.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4968 ($adffe) from module conv2d.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4968 ($adffe) from module conv2d.

yosys> opt_clean

3.46. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..
Removed 2 unused cells and 220 unused wires.
<suppressed ~3 debug messages>

yosys> opt_expr

3.47. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.

yosys> opt_muxtree

3.48. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \conv2d..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~121 debug messages>

yosys> opt_reduce

3.49. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \conv2d.
Performed a total of 0 changes.

yosys> opt_merge

3.50. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_share

3.51. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.52. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.53. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..

yosys> opt_expr

3.54. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.
MAX OPT ITERATION = 3

yosys> wreduce -keepdc

3.55. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 4) from port B of cell conv2d.$auto$fsm_map.cc:215:map_fsm$4095 ($eq).
Removed top 3 bits (of 4) from port B of cell conv2d.$verific$equal_67$conv2d.v:121$763 ($eq).
Removed top 2 bits (of 4) from port B of cell conv2d.$verific$equal_68$conv2d.v:122$764 ($eq).
Removed top 2 bits (of 4) from port B of cell conv2d.$verific$equal_69$conv2d.v:123$765 ($eq).
Removed top 1 bits (of 10) from port B of cell conv2d.$verific$add_190$conv2d.v:409$1002 ($add).
Removed top 9 bits (of 10) from port B of cell conv2d.$verific$add_202$conv2d.v:418$1011 ($add).
Removed top 10 bits (of 11) from port B of cell conv2d.$verific$add_291$conv2d.v:540$1061 ($add).
Removed top 1 bits (of 4) from mux cell conv2d.$verific$mux_324$conv2d.v:579$1079 ($mux).
Removed top 9 bits (of 10) from port B of cell conv2d.$verific$add_354$conv2d.v:606$1096 ($add).
Removed top 17 bits (of 18) from port B of cell conv2d.$verific$add_381$conv2d.v:630$1110 ($add).
Removed top 8 bits (of 9) from port B of cell conv2d.$verific$add_387$conv2d.v:638$1114 ($add).
Removed top 1 bits (of 2) from port B of cell conv2d.$auto$fsm_map.cc:215:map_fsm$4183 ($eq).
Removed top 10 bits (of 11) from port B of cell conv2d.$verific$add_436$conv2d.v:669$1152 ($add).
Removed top 1 bits (of 15) from port A of cell conv2d.$verific$sub_439$conv2d.v:672$1154 ($sub).
Removed top 11 bits (of 15) from port B of cell conv2d.$verific$sub_439$conv2d.v:672$1154 ($sub).
Removed top 1 bits (of 15) from port Y of cell conv2d.$verific$sub_439$conv2d.v:672$1154 ($sub).
Removed top 17 bits (of 18) from port B of cell conv2d.$verific$add_454$conv2d.v:681$1164 ($add).
Removed top 8 bits (of 9) from port B of cell conv2d.$verific$add_460$conv2d.v:685$1170 ($add).
Removed top 1 bits (of 10) from port B of cell conv2d.$verific$equal_463$conv2d.v:686$1172 ($eq).
Removed top 1 bits (of 14) from port A of cell conv2d.$verific$sub_464$conv2d.v:687$1173 ($sub).
Removed top 10 bits (of 14) from port B of cell conv2d.$verific$sub_464$conv2d.v:687$1173 ($sub).
Removed top 1 bits (of 14) from port Y of cell conv2d.$verific$sub_464$conv2d.v:687$1173 ($sub).
Removed top 5 bits (of 6) from port B of cell conv2d.$verific$add_466$conv2d.v:688$1176 ($add).
Removed top 5 bits (of 6) from port B of cell conv2d.$verific$add_468$conv2d.v:689$1178 ($add).
Removed top 1 bits (of 10) from port B of cell conv2d.$verific$LessThan_471$conv2d.v:690$1180 ($lt).
Removed top 2 bits (of 14) from port A of cell conv2d.$verific$LessThan_472$conv2d.v:691$1181 ($le).
Removed top 1 bits (of 3) from mux cell conv2d.$verific$mux_486$conv2d.v:702$1186 ($mux).
Removed top 1 bits (of 3) from mux cell conv2d.$verific$mux_496$conv2d.v:707$1193 ($mux).
Removed top 1 bits (of 3) from mux cell conv2d.$verific$mux_506$conv2d.v:712$1200 ($mux).
Removed top 1 bits (of 2) from port B of cell conv2d.$verific$equal_623$conv2d.v:667$1231 ($eq).
Removed top 1 bits (of 3) from mux cell conv2d.$verific$select_635$conv2d.v:784$1245 ($pmux).
Removed top 9 bits (of 10) from port B of cell conv2d.$verific$add_724$conv2d.v:842$1318 ($add).
Removed top 17 bits (of 18) from port B of cell conv2d.$verific$add_750$conv2d.v:867$1329 ($add).
Removed top 6 bits (of 7) from port B of cell conv2d.$verific$add_753$conv2d.v:869$1331 ($add).
Removed top 1 bits (of 10) from port B of cell conv2d.$verific$equal_756$conv2d.v:870$1333 ($eq).
Removed top 15 bits (of 16) from port B of cell conv2d.$verific$add_764$conv2d.v:874$1337 ($add).
Removed top 1 bits (of 17) from port B of cell conv2d.$verific$equal_768$conv2d.v:876$1339 ($eq).
Removed top 1 bits (of 4) from port B of cell conv2d.$auto$fsm_map.cc:77:implement_pattern_cache$4170 ($eq).
Removed top 1 bits (of 6) from mux cell conv2d.$verific$mux_1278$conv2d.v:713$2470 ($mux).
Removed top 2 bits (of 3) from port B of cell conv2d.$auto$fsm_map.cc:77:implement_pattern_cache$4166 ($eq).
Removed top 9 bits (of 10) from port B of cell conv2d.$verific$add_1018$conv2d.v:1119$2526 ($add).
Removed top 1 bits (of 2) from port B of cell conv2d.$verific$add_1063$conv2d.v:1153$2545 ($add).
Removed top 6 bits (of 7) from port B of cell conv2d.$verific$add_1066$conv2d.v:1156$2547 ($add).
Removed top 1 bits (of 10) from port B of cell conv2d.$verific$equal_1069$conv2d.v:1157$2549 ($eq).
Removed top 1 bits (of 2) from mux cell conv2d.$auto$bmuxmap.cc:60:execute$3596 ($mux).
Removed top 5 bits (of 6) from port B of cell conv2d.$verific$add_1091$conv2d.v:1181$2563 ($add).
Removed top 1 bits (of 7) from port B of cell conv2d.$verific$equal_1094$conv2d.v:1182$2565 ($eq).
Removed top 15 bits (of 16) from port B of cell conv2d.$verific$add_1110$conv2d.v:1199$2569 ($add).
Removed top 1 bits (of 2) from port B of cell conv2d.$auto$fsm_map.cc:77:implement_pattern_cache$4153 ($eq).
Removed top 1 bits (of 4) from mux cell conv2d.$auto$bmuxmap.cc:60:execute$3660 ($mux).
Removed top 1 bits (of 4) from mux cell conv2d.$auto$bmuxmap.cc:60:execute$3886 ($mux).
Removed top 2 bits (of 4) from mux cell conv2d.$auto$bmuxmap.cc:60:execute$3887 ($mux).
Removed top 3 bits (of 4) from port B of cell conv2d.$auto$fsm_map.cc:215:map_fsm$4092 ($eq).
Removed top 7 bits (of 20) from port B of cell conv2d.$flatten\t2_3.$verific$and_6$ksa.v:13$3136 ($and).
Removed top 1 bits (of 20) from port Y of cell conv2d.$flatten\t2_3.$verific$and_6$ksa.v:13$3136 ($and).
Removed top 1 bits (of 20) from port A of cell conv2d.$flatten\t2_3.$verific$and_6$ksa.v:13$3136 ($and).
Removed top 7 bits (of 20) from port B of cell conv2d.$flatten\t2_3.$verific$xor_4$ksa.v:12$3134 ($xor).
Removed top 17 bits (of 20) from port B of cell conv2d.$flatten\t2_2.$verific$and_6$ksa.v:13$3136 ($and).
Removed top 1 bits (of 20) from port Y of cell conv2d.$flatten\t2_2.$verific$and_6$ksa.v:13$3136 ($and).
Removed top 1 bits (of 20) from port A of cell conv2d.$flatten\t2_2.$verific$and_6$ksa.v:13$3136 ($and).
Removed top 17 bits (of 20) from port B of cell conv2d.$flatten\t2_2.$verific$xor_4$ksa.v:12$3134 ($xor).
Removed top 11 bits (of 20) from port B of cell conv2d.$flatten\t2_1.$verific$and_6$ksa.v:13$3136 ($and).
Removed top 1 bits (of 20) from port Y of cell conv2d.$flatten\t2_1.$verific$and_6$ksa.v:13$3136 ($and).
Removed top 1 bits (of 20) from port A of cell conv2d.$flatten\t2_1.$verific$and_6$ksa.v:13$3136 ($and).
Removed top 11 bits (of 20) from port B of cell conv2d.$flatten\t2_1.$verific$xor_4$ksa.v:12$3134 ($xor).
Removed top 1 bits (of 11) from port Y of cell conv2d.$flatten\pk2.$verific$or_132$ksa1.v:31$3589 ($or).
Removed top 1 bits (of 11) from port A of cell conv2d.$flatten\pk2.$verific$or_132$ksa1.v:31$3589 ($or).
Removed top 1 bits (of 11) from port B of cell conv2d.$flatten\pk2.$verific$or_132$ksa1.v:31$3589 ($or).
Removed top 9 bits (of 12) from port B of cell conv2d.$flatten\pk1.$verific$and_6$ksa.v:13$2750 ($and).
Removed top 1 bits (of 12) from port Y of cell conv2d.$flatten\pk1.$verific$and_6$ksa.v:13$2750 ($and).
Removed top 1 bits (of 12) from port A of cell conv2d.$flatten\pk1.$verific$and_6$ksa.v:13$2750 ($and).
Removed top 9 bits (of 12) from port B of cell conv2d.$flatten\pk1.$verific$xor_4$ksa.v:12$2748 ($xor).
Removed top 16 bits (of 24) from port B of cell conv2d.$flatten\k7.$verific$and_6$ksa.v:13$3401 ($and).
Removed top 1 bits (of 24) from port Y of cell conv2d.$flatten\k7.$verific$and_6$ksa.v:13$3401 ($and).
Removed top 1 bits (of 24) from port A of cell conv2d.$flatten\k7.$verific$and_6$ksa.v:13$3401 ($and).
Removed top 16 bits (of 24) from port B of cell conv2d.$flatten\k7.$verific$xor_4$ksa.v:12$3399 ($xor).
Removed top 16 bits (of 24) from port B of cell conv2d.$flatten\k6.$verific$and_6$ksa.v:13$3401 ($and).
Removed top 1 bits (of 24) from port Y of cell conv2d.$flatten\k6.$verific$and_6$ksa.v:13$3401 ($and).
Removed top 1 bits (of 24) from port A of cell conv2d.$flatten\k6.$verific$and_6$ksa.v:13$3401 ($and).
Removed top 16 bits (of 24) from port B of cell conv2d.$flatten\k6.$verific$xor_4$ksa.v:12$3399 ($xor).
Removed top 16 bits (of 24) from port B of cell conv2d.$flatten\k5.$verific$and_6$ksa.v:13$3401 ($and).
Removed top 1 bits (of 24) from port Y of cell conv2d.$flatten\k5.$verific$and_6$ksa.v:13$3401 ($and).
Removed top 1 bits (of 24) from port A of cell conv2d.$flatten\k5.$verific$and_6$ksa.v:13$3401 ($and).
Removed top 16 bits (of 24) from port B of cell conv2d.$flatten\k5.$verific$xor_4$ksa.v:12$3399 ($xor).
Removed top 1 bits (of 4) from port B of cell conv2d.$auto$opt_dff.cc:195:make_patterns_logic$5103 ($ne).
Removed top 1 bits (of 3) from port B of cell conv2d.$auto$opt_dff.cc:195:make_patterns_logic$5107 ($ne).
Removed top 16 bits (of 24) from port B of cell conv2d.$flatten\k4.$verific$and_6$ksa.v:13$3401 ($and).
Removed top 1 bits (of 24) from port Y of cell conv2d.$flatten\k4.$verific$and_6$ksa.v:13$3401 ($and).
Removed top 1 bits (of 24) from port A of cell conv2d.$flatten\k4.$verific$and_6$ksa.v:13$3401 ($and).
Removed top 16 bits (of 24) from port B of cell conv2d.$flatten\k4.$verific$xor_4$ksa.v:12$3399 ($xor).
Removed top 1 bits (of 4) from port B of cell conv2d.$auto$opt_dff.cc:195:make_patterns_logic$4996 ($ne).
Removed top 1 bits (of 3) from port B of cell conv2d.$auto$opt_dff.cc:195:make_patterns_logic$4998 ($ne).
Removed top 1 bits (of 4) from port B of cell conv2d.$auto$opt_dff.cc:195:make_patterns_logic$5011 ($ne).
Removed top 1 bits (of 4) from port B of cell conv2d.$auto$opt_dff.cc:195:make_patterns_logic$5026 ($ne).
Removed top 1 bits (of 3) from port B of cell conv2d.$auto$opt_dff.cc:195:make_patterns_logic$5028 ($ne).
Removed top 1 bits (of 4) from port B of cell conv2d.$auto$opt_dff.cc:195:make_patterns_logic$5041 ($ne).
Removed top 2 bits (of 4) from port B of cell conv2d.$auto$opt_dff.cc:195:make_patterns_logic$5056 ($ne).
Removed top 2 bits (of 4) from port B of cell conv2d.$auto$opt_dff.cc:195:make_patterns_logic$5071 ($ne).
Removed top 16 bits (of 24) from port B of cell conv2d.$flatten\k3.$verific$and_6$ksa.v:13$3401 ($and).
Removed top 1 bits (of 24) from port Y of cell conv2d.$flatten\k3.$verific$and_6$ksa.v:13$3401 ($and).
Removed top 1 bits (of 24) from port A of cell conv2d.$flatten\k3.$verific$and_6$ksa.v:13$3401 ($and).
Removed top 16 bits (of 24) from port B of cell conv2d.$flatten\k3.$verific$xor_4$ksa.v:12$3399 ($xor).
Removed top 16 bits (of 24) from port B of cell conv2d.$flatten\k2.$verific$and_6$ksa.v:13$3401 ($and).
Removed top 1 bits (of 24) from port Y of cell conv2d.$flatten\k2.$verific$and_6$ksa.v:13$3401 ($and).
Removed top 1 bits (of 24) from port A of cell conv2d.$flatten\k2.$verific$and_6$ksa.v:13$3401 ($and).
Removed top 16 bits (of 24) from port B of cell conv2d.$flatten\k2.$verific$xor_4$ksa.v:12$3399 ($xor).
Removed top 8 bits (of 16) from port B of cell conv2d.$flatten\k16_7.$verific$and_6$ksa.v:13$2919 ($and).
Removed top 1 bits (of 16) from port Y of cell conv2d.$flatten\k16_7.$verific$and_6$ksa.v:13$2919 ($and).
Removed top 1 bits (of 16) from port A of cell conv2d.$flatten\k16_7.$verific$and_6$ksa.v:13$2919 ($and).
Removed top 8 bits (of 16) from port B of cell conv2d.$flatten\k16_7.$verific$xor_4$ksa.v:12$2917 ($xor).
Removed top 1 bits (of 2) from port B of cell conv2d.$auto$opt_dff.cc:195:make_patterns_logic$4688 ($ne).
Removed top 2 bits (of 3) from port B of cell conv2d.$auto$opt_dff.cc:195:make_patterns_logic$4686 ($ne).
Removed top 8 bits (of 16) from port B of cell conv2d.$flatten\k16_6.$verific$and_6$ksa.v:13$2919 ($and).
Removed top 1 bits (of 16) from port Y of cell conv2d.$flatten\k16_6.$verific$and_6$ksa.v:13$2919 ($and).
Removed top 1 bits (of 16) from port A of cell conv2d.$flatten\k16_6.$verific$and_6$ksa.v:13$2919 ($and).
Removed top 8 bits (of 16) from port B of cell conv2d.$flatten\k16_6.$verific$xor_4$ksa.v:12$2917 ($xor).
Removed top 1 bits (of 5) from port B of cell conv2d.$auto$opt_dff.cc:195:make_patterns_logic$4693 ($ne).
Removed top 2 bits (of 5) from port B of cell conv2d.$auto$opt_dff.cc:195:make_patterns_logic$4695 ($ne).
Removed top 3 bits (of 5) from port B of cell conv2d.$auto$opt_dff.cc:195:make_patterns_logic$4701 ($ne).
Removed top 2 bits (of 5) from port B of cell conv2d.$auto$opt_dff.cc:195:make_patterns_logic$4703 ($ne).
Removed top 8 bits (of 16) from port B of cell conv2d.$flatten\k16_5.$verific$and_6$ksa.v:13$2919 ($and).
Removed top 1 bits (of 16) from port Y of cell conv2d.$flatten\k16_5.$verific$and_6$ksa.v:13$2919 ($and).
Removed top 1 bits (of 16) from port A of cell conv2d.$flatten\k16_5.$verific$and_6$ksa.v:13$2919 ($and).
Removed top 8 bits (of 16) from port B of cell conv2d.$flatten\k16_5.$verific$xor_4$ksa.v:12$2917 ($xor).
Removed top 3 bits (of 4) from port B of cell conv2d.$auto$opt_dff.cc:195:make_patterns_logic$4684 ($ne).
Removed top 8 bits (of 16) from port B of cell conv2d.$flatten\k16_4.$verific$and_6$ksa.v:13$2919 ($and).
Removed top 1 bits (of 16) from port Y of cell conv2d.$flatten\k16_4.$verific$and_6$ksa.v:13$2919 ($and).
Removed top 1 bits (of 16) from port A of cell conv2d.$flatten\k16_4.$verific$and_6$ksa.v:13$2919 ($and).
Removed top 8 bits (of 16) from port B of cell conv2d.$flatten\k16_4.$verific$xor_4$ksa.v:12$2917 ($xor).
Removed top 8 bits (of 16) from port B of cell conv2d.$flatten\k16_3.$verific$and_6$ksa.v:13$2919 ($and).
Removed top 1 bits (of 16) from port Y of cell conv2d.$flatten\k16_3.$verific$and_6$ksa.v:13$2919 ($and).
Removed top 1 bits (of 16) from port A of cell conv2d.$flatten\k16_3.$verific$and_6$ksa.v:13$2919 ($and).
Removed top 8 bits (of 16) from port B of cell conv2d.$flatten\k16_3.$verific$xor_4$ksa.v:12$2917 ($xor).
Removed top 8 bits (of 16) from port B of cell conv2d.$flatten\k16_2.$verific$and_6$ksa.v:13$2919 ($and).
Removed top 1 bits (of 16) from port Y of cell conv2d.$flatten\k16_2.$verific$and_6$ksa.v:13$2919 ($and).
Removed top 1 bits (of 16) from port A of cell conv2d.$flatten\k16_2.$verific$and_6$ksa.v:13$2919 ($and).
Removed top 8 bits (of 16) from port B of cell conv2d.$flatten\k16_2.$verific$xor_4$ksa.v:12$2917 ($xor).
Removed top 1 bits (of 4) from port B of cell conv2d.$auto$opt_dff.cc:195:make_patterns_logic$4425 ($ne).
Removed top 1 bits (of 3) from port B of cell conv2d.$auto$opt_dff.cc:195:make_patterns_logic$4427 ($ne).
Removed top 8 bits (of 16) from port B of cell conv2d.$flatten\k16_1.$verific$and_6$ksa.v:13$2919 ($and).
Removed top 1 bits (of 16) from port Y of cell conv2d.$flatten\k16_1.$verific$and_6$ksa.v:13$2919 ($and).
Removed top 1 bits (of 16) from port A of cell conv2d.$flatten\k16_1.$verific$and_6$ksa.v:13$2919 ($and).
Removed top 8 bits (of 16) from port B of cell conv2d.$flatten\k16_1.$verific$xor_4$ksa.v:12$2917 ($xor).
Removed top 8 bits (of 16) from port B of cell conv2d.$flatten\k16_0.$verific$and_6$ksa.v:13$2919 ($and).
Removed top 1 bits (of 16) from port Y of cell conv2d.$flatten\k16_0.$verific$and_6$ksa.v:13$2919 ($and).
Removed top 1 bits (of 16) from port A of cell conv2d.$flatten\k16_0.$verific$and_6$ksa.v:13$2919 ($and).
Removed top 8 bits (of 16) from port B of cell conv2d.$flatten\k16_0.$verific$xor_4$ksa.v:12$2917 ($xor).
Removed top 1 bits (of 2) from port B of cell conv2d.$auto$fsm_map.cc:77:implement_pattern_cache$4257 ($eq).
Removed top 1 bits (of 3) from port B of cell conv2d.$auto$fsm_map.cc:77:implement_pattern_cache$4266 ($eq).
Removed top 3 bits (of 4) from port B of cell conv2d.$auto$opt_dff.cc:195:make_patterns_logic$4306 ($ne).
Removed top 2 bits (of 3) from port B of cell conv2d.$auto$opt_dff.cc:195:make_patterns_logic$4310 ($ne).
Removed top 1 bits (of 2) from port B of cell conv2d.$auto$opt_dff.cc:195:make_patterns_logic$4314 ($ne).
Removed top 16 bits (of 24) from port B of cell conv2d.$flatten\k1.$verific$and_6$ksa.v:13$3401 ($and).
Removed top 1 bits (of 24) from port Y of cell conv2d.$flatten\k1.$verific$and_6$ksa.v:13$3401 ($and).
Removed top 1 bits (of 24) from port A of cell conv2d.$flatten\k1.$verific$and_6$ksa.v:13$3401 ($and).
Removed top 16 bits (of 24) from port B of cell conv2d.$flatten\k1.$verific$xor_4$ksa.v:12$3399 ($xor).
Removed top 2 bits (of 4) from port B of cell conv2d.$auto$fsm_map.cc:215:map_fsm$4093 ($eq).
Removed top 2 bits (of 4) from port B of cell conv2d.$auto$fsm_map.cc:215:map_fsm$4094 ($eq).
Removed top 1 bits (of 4) from port B of cell conv2d.$auto$fsm_map.cc:215:map_fsm$4096 ($eq).
Removed top 1 bits (of 2) from port B of cell conv2d.$auto$fsm_map.cc:77:implement_pattern_cache$4136 ($eq).
Removed top 1 bits (of 4) from port B of cell conv2d.$auto$fsm_map.cc:215:map_fsm$4097 ($eq).
Removed top 1 bits (of 4) from port B of cell conv2d.$auto$fsm_map.cc:215:map_fsm$4098 ($eq).
Removed top 1 bits (of 2) from port B of cell conv2d.$auto$fsm_map.cc:77:implement_pattern_cache$4213 ($eq).
Removed top 1 bits (of 2) from port B of cell conv2d.$auto$fsm_map.cc:215:map_fsm$4222 ($eq).
Removed top 16 bits (of 24) from port B of cell conv2d.$flatten\k0.$verific$and_6$ksa.v:13$3401 ($and).
Removed top 1 bits (of 24) from port Y of cell conv2d.$flatten\k0.$verific$and_6$ksa.v:13$3401 ($and).
Removed top 1 bits (of 24) from port A of cell conv2d.$flatten\k0.$verific$and_6$ksa.v:13$3401 ($and).
Removed top 16 bits (of 24) from port B of cell conv2d.$flatten\k0.$verific$xor_4$ksa.v:12$3399 ($xor).
Removed top 1 bits (of 3) from mux cell conv2d.$verific$mux_435$conv2d.v:665$1151 ($mux).
Removed top 1 bits (of 3) from mux cell conv2d.$verific$mux_621$conv2d.v:782$1229 ($mux).
Removed top 1 bits (of 11) from port Y of cell conv2d.$flatten\pk2.$verific$and_133$ksa1.v:31$3588 ($and).
Removed top 1 bits (of 11) from port A of cell conv2d.$flatten\pk2.$verific$and_133$ksa1.v:31$3588 ($and).
Removed top 1 bits (of 11) from port B of cell conv2d.$flatten\pk2.$verific$and_133$ksa1.v:31$3588 ($and).
Removed top 1 bits (of 11) from port Y of cell conv2d.$flatten\pk2.$verific$or_129$ksa1.v:30$3586 ($or).
Removed top 1 bits (of 11) from port A of cell conv2d.$flatten\pk2.$verific$or_129$ksa1.v:30$3586 ($or).
Removed top 1 bits (of 11) from port B of cell conv2d.$flatten\pk2.$verific$or_129$ksa1.v:30$3586 ($or).
Removed top 1 bits (of 3) from mux cell conv2d.$verific$mux_617$conv2d.v:779$1227 ($mux).
Removed top 1 bits (of 11) from port Y of cell conv2d.$flatten\pk2.$verific$and_130$ksa1.v:30$3585 ($and).
Removed top 1 bits (of 11) from port A of cell conv2d.$flatten\pk2.$verific$and_130$ksa1.v:30$3585 ($and).
Removed top 1 bits (of 11) from port B of cell conv2d.$flatten\pk2.$verific$and_130$ksa1.v:30$3585 ($and).
Removed top 1 bits (of 12) from port Y of cell conv2d.$flatten\pk2.$verific$and_6$ksa1.v:18$3569 ($and).
Removed top 1 bits (of 12) from port A of cell conv2d.$flatten\pk2.$verific$and_6$ksa1.v:18$3569 ($and).
Removed top 1 bits (of 12) from port B of cell conv2d.$flatten\pk2.$verific$and_6$ksa1.v:18$3569 ($and).
Removed cell conv2d.$flatten\pk2.$verific$i116$ksa1.v:29$3582 ($and).
Removed top 1 bits (of 4) from wire conv2d.$auto$bmuxmap.cc:58:execute$3594.
Removed top 24 bits (of 192) from wire conv2d.$auto$bmuxmap.cc:58:execute$3732.
Removed top 24 bits (of 192) from wire conv2d.$auto$bmuxmap.cc:58:execute$3751.
Removed top 24 bits (of 192) from wire conv2d.$auto$bmuxmap.cc:58:execute$3770.
Removed top 24 bits (of 192) from wire conv2d.$auto$bmuxmap.cc:58:execute$3789.
Removed top 24 bits (of 192) from wire conv2d.$auto$bmuxmap.cc:58:execute$3808.
Removed top 24 bits (of 192) from wire conv2d.$auto$bmuxmap.cc:58:execute$3827.
Removed top 24 bits (of 192) from wire conv2d.$auto$bmuxmap.cc:58:execute$3846.
Removed top 24 bits (of 192) from wire conv2d.$auto$bmuxmap.cc:58:execute$3865.
Removed top 4 bits (of 32) from wire conv2d.$auto$bmuxmap.cc:58:execute$3884.
Removed top 12 bits (of 96) from wire conv2d.$auto$bmuxmap.cc:58:execute$3908.
Removed top 12 bits (of 96) from wire conv2d.$auto$bmuxmap.cc:58:execute$3927.
Removed top 1 bits (of 11) from wire conv2d.$flatten\pk2.$verific$n203$3562.
Removed top 1 bits (of 4) from wire conv2d.$verific$n4415$382.
Removed top 1 bits (of 3) from wire conv2d.$verific$n5316$431.
Removed top 1 bits (of 15) from wire conv2d.$verific$n5359$435.
Removed top 1 bits (of 14) from wire conv2d.$verific$n5563$444.
Removed top 1 bits (of 3) from wire conv2d.$verific$n5681$450.
Removed top 1 bits (of 3) from wire conv2d.$verific$n5734$455.
Removed top 1 bits (of 3) from wire conv2d.$verific$n5787$460.
Removed top 1 bits (of 3) from wire conv2d.$verific$n5894$467.
Removed top 1 bits (of 3) from wire conv2d.$verific$n6534$490.
Removed top 1 bits (of 3) from wire conv2d.$verific$n6553$492.
Removed top 1 bits (of 3) from wire conv2d.$verific$n6647$499.
Removed top 1 bits (of 3) from wire conv2d.fsm_getfilters.

yosys> peepopt

3.56. Executing PEEPOPT pass (run peephole optimizers).

yosys> opt_clean

3.57. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..
Removed 0 unused cells and 27 unused wires.
<suppressed ~1 debug messages>

yosys> bmuxmap

3.58. Executing BMUXMAP pass.

yosys> demuxmap

3.59. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> alumacc

3.60. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module conv2d:
  creating $macc model for $verific$add_1018$conv2d.v:1119$2526 ($add).
  creating $macc model for $verific$add_1063$conv2d.v:1153$2545 ($add).
  creating $macc model for $verific$add_1066$conv2d.v:1156$2547 ($add).
  creating $macc model for $verific$add_1091$conv2d.v:1181$2563 ($add).
  creating $macc model for $verific$add_1110$conv2d.v:1199$2569 ($add).
  creating $macc model for $verific$add_190$conv2d.v:409$1002 ($add).
  creating $macc model for $verific$add_202$conv2d.v:418$1011 ($add).
  creating $macc model for $verific$add_291$conv2d.v:540$1061 ($add).
  creating $macc model for $verific$add_354$conv2d.v:606$1096 ($add).
  creating $macc model for $verific$add_381$conv2d.v:630$1110 ($add).
  creating $macc model for $verific$add_387$conv2d.v:638$1114 ($add).
  creating $macc model for $verific$add_436$conv2d.v:669$1152 ($add).
  creating $macc model for $verific$add_454$conv2d.v:681$1164 ($add).
  creating $macc model for $verific$add_460$conv2d.v:685$1170 ($add).
  creating $macc model for $verific$add_466$conv2d.v:688$1176 ($add).
  creating $macc model for $verific$add_468$conv2d.v:689$1178 ($add).
  creating $macc model for $verific$add_724$conv2d.v:842$1318 ($add).
  creating $macc model for $verific$add_750$conv2d.v:867$1329 ($add).
  creating $macc model for $verific$add_753$conv2d.v:869$1331 ($add).
  creating $macc model for $verific$add_764$conv2d.v:874$1337 ($add).
  creating $macc model for $verific$add_903$conv2d.v:1018$2452 ($add).
  creating $macc model for $verific$add_905$conv2d.v:1019$2454 ($add).
  creating $macc model for $verific$add_907$conv2d.v:1020$2456 ($add).
  creating $macc model for $verific$add_909$conv2d.v:1021$2458 ($add).
  creating $macc model for $verific$add_911$conv2d.v:1022$2460 ($add).
  creating $macc model for $verific$add_913$conv2d.v:1023$2462 ($add).
  creating $macc model for $verific$add_915$conv2d.v:1024$2464 ($add).
  creating $macc model for $verific$add_917$conv2d.v:1025$2466 ($add).
  creating $macc model for $verific$add_929$conv2d.v:1041$2476 ($add).
  creating $macc model for $verific$sub_439$conv2d.v:672$1154 ($sub).
  creating $macc model for $verific$sub_464$conv2d.v:687$1173 ($sub).
  creating $macc model for $verific$sub_697$conv2d.v:804$1306 ($sub).
  creating $macc model for $verific$sub_699$conv2d.v:805$1308 ($sub).
  creating $macc model for $verific$sub_701$conv2d.v:806$1310 ($sub).
  creating $macc model for $verific$sub_703$conv2d.v:807$1312 ($sub).
  creating $alu model for $macc $verific$sub_703$conv2d.v:807$1312.
  creating $alu model for $macc $verific$sub_701$conv2d.v:806$1310.
  creating $alu model for $macc $verific$sub_699$conv2d.v:805$1308.
  creating $alu model for $macc $verific$sub_697$conv2d.v:804$1306.
  creating $alu model for $macc $verific$sub_464$conv2d.v:687$1173.
  creating $alu model for $macc $verific$sub_439$conv2d.v:672$1154.
  creating $alu model for $macc $verific$add_929$conv2d.v:1041$2476.
  creating $alu model for $macc $verific$add_917$conv2d.v:1025$2466.
  creating $alu model for $macc $verific$add_915$conv2d.v:1024$2464.
  creating $alu model for $macc $verific$add_913$conv2d.v:1023$2462.
  creating $alu model for $macc $verific$add_911$conv2d.v:1022$2460.
  creating $alu model for $macc $verific$add_909$conv2d.v:1021$2458.
  creating $alu model for $macc $verific$add_907$conv2d.v:1020$2456.
  creating $alu model for $macc $verific$add_905$conv2d.v:1019$2454.
  creating $alu model for $macc $verific$add_903$conv2d.v:1018$2452.
  creating $alu model for $macc $verific$add_764$conv2d.v:874$1337.
  creating $alu model for $macc $verific$add_753$conv2d.v:869$1331.
  creating $alu model for $macc $verific$add_750$conv2d.v:867$1329.
  creating $alu model for $macc $verific$add_724$conv2d.v:842$1318.
  creating $alu model for $macc $verific$add_468$conv2d.v:689$1178.
  creating $alu model for $macc $verific$add_466$conv2d.v:688$1176.
  creating $alu model for $macc $verific$add_460$conv2d.v:685$1170.
  creating $alu model for $macc $verific$add_454$conv2d.v:681$1164.
  creating $alu model for $macc $verific$add_436$conv2d.v:669$1152.
  creating $alu model for $macc $verific$add_387$conv2d.v:638$1114.
  creating $alu model for $macc $verific$add_381$conv2d.v:630$1110.
  creating $alu model for $macc $verific$add_354$conv2d.v:606$1096.
  creating $alu model for $macc $verific$add_291$conv2d.v:540$1061.
  creating $alu model for $macc $verific$add_202$conv2d.v:418$1011.
  creating $alu model for $macc $verific$add_190$conv2d.v:409$1002.
  creating $alu model for $macc $verific$add_1110$conv2d.v:1199$2569.
  creating $alu model for $macc $verific$add_1091$conv2d.v:1181$2563.
  creating $alu model for $macc $verific$add_1066$conv2d.v:1156$2547.
  creating $alu model for $macc $verific$add_1063$conv2d.v:1153$2545.
  creating $alu model for $macc $verific$add_1018$conv2d.v:1119$2526.
  creating $alu model for $verific$LessThan_471$conv2d.v:690$1180 ($lt): new $alu
  creating $alu model for $verific$LessThan_472$conv2d.v:691$1181 ($le): new $alu
  creating $alu model for $verific$LessThan_924$conv2d.v:1033$2472 ($lt): new $alu
  creating $alu cell for $verific$LessThan_924$conv2d.v:1033$2472: $auto$alumacc.cc:485:replace_alu$5301
  creating $alu cell for $verific$LessThan_472$conv2d.v:691$1181: $auto$alumacc.cc:485:replace_alu$5306
  creating $alu cell for $verific$LessThan_471$conv2d.v:690$1180: $auto$alumacc.cc:485:replace_alu$5315
  creating $alu cell for $verific$add_1018$conv2d.v:1119$2526: $auto$alumacc.cc:485:replace_alu$5326
  creating $alu cell for $verific$add_1063$conv2d.v:1153$2545: $auto$alumacc.cc:485:replace_alu$5329
  creating $alu cell for $verific$add_1066$conv2d.v:1156$2547: $auto$alumacc.cc:485:replace_alu$5332
  creating $alu cell for $verific$add_1091$conv2d.v:1181$2563: $auto$alumacc.cc:485:replace_alu$5335
  creating $alu cell for $verific$add_1110$conv2d.v:1199$2569: $auto$alumacc.cc:485:replace_alu$5338
  creating $alu cell for $verific$add_190$conv2d.v:409$1002: $auto$alumacc.cc:485:replace_alu$5341
  creating $alu cell for $verific$add_202$conv2d.v:418$1011: $auto$alumacc.cc:485:replace_alu$5344
  creating $alu cell for $verific$add_291$conv2d.v:540$1061: $auto$alumacc.cc:485:replace_alu$5347
  creating $alu cell for $verific$add_354$conv2d.v:606$1096: $auto$alumacc.cc:485:replace_alu$5350
  creating $alu cell for $verific$add_381$conv2d.v:630$1110: $auto$alumacc.cc:485:replace_alu$5353
  creating $alu cell for $verific$add_387$conv2d.v:638$1114: $auto$alumacc.cc:485:replace_alu$5356
  creating $alu cell for $verific$add_436$conv2d.v:669$1152: $auto$alumacc.cc:485:replace_alu$5359
  creating $alu cell for $verific$add_454$conv2d.v:681$1164: $auto$alumacc.cc:485:replace_alu$5362
  creating $alu cell for $verific$add_460$conv2d.v:685$1170: $auto$alumacc.cc:485:replace_alu$5365
  creating $alu cell for $verific$add_466$conv2d.v:688$1176: $auto$alumacc.cc:485:replace_alu$5368
  creating $alu cell for $verific$add_468$conv2d.v:689$1178: $auto$alumacc.cc:485:replace_alu$5371
  creating $alu cell for $verific$add_724$conv2d.v:842$1318: $auto$alumacc.cc:485:replace_alu$5374
  creating $alu cell for $verific$add_750$conv2d.v:867$1329: $auto$alumacc.cc:485:replace_alu$5377
  creating $alu cell for $verific$add_753$conv2d.v:869$1331: $auto$alumacc.cc:485:replace_alu$5380
  creating $alu cell for $verific$add_764$conv2d.v:874$1337: $auto$alumacc.cc:485:replace_alu$5383
  creating $alu cell for $verific$add_903$conv2d.v:1018$2452: $auto$alumacc.cc:485:replace_alu$5386
  creating $alu cell for $verific$add_905$conv2d.v:1019$2454: $auto$alumacc.cc:485:replace_alu$5389
  creating $alu cell for $verific$add_907$conv2d.v:1020$2456: $auto$alumacc.cc:485:replace_alu$5392
  creating $alu cell for $verific$add_909$conv2d.v:1021$2458: $auto$alumacc.cc:485:replace_alu$5395
  creating $alu cell for $verific$add_911$conv2d.v:1022$2460: $auto$alumacc.cc:485:replace_alu$5398
  creating $alu cell for $verific$add_913$conv2d.v:1023$2462: $auto$alumacc.cc:485:replace_alu$5401
  creating $alu cell for $verific$add_915$conv2d.v:1024$2464: $auto$alumacc.cc:485:replace_alu$5404
  creating $alu cell for $verific$add_917$conv2d.v:1025$2466: $auto$alumacc.cc:485:replace_alu$5407
  creating $alu cell for $verific$add_929$conv2d.v:1041$2476: $auto$alumacc.cc:485:replace_alu$5410
  creating $alu cell for $verific$sub_439$conv2d.v:672$1154: $auto$alumacc.cc:485:replace_alu$5413
  creating $alu cell for $verific$sub_464$conv2d.v:687$1173: $auto$alumacc.cc:485:replace_alu$5416
  creating $alu cell for $verific$sub_697$conv2d.v:804$1306: $auto$alumacc.cc:485:replace_alu$5419
  creating $alu cell for $verific$sub_699$conv2d.v:805$1308: $auto$alumacc.cc:485:replace_alu$5422
  creating $alu cell for $verific$sub_701$conv2d.v:806$1310: $auto$alumacc.cc:485:replace_alu$5425
  creating $alu cell for $verific$sub_703$conv2d.v:807$1312: $auto$alumacc.cc:485:replace_alu$5428
  created 38 $alu and 0 $macc cells.

yosys> opt_expr

3.61. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.
<suppressed ~7 debug messages>

yosys> opt_merge -nomux

3.62. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.63. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \conv2d..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~121 debug messages>

yosys> opt_reduce

3.64. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \conv2d.
Performed a total of 0 changes.

yosys> opt_merge

3.65. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_share

3.66. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.67. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.68. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.69. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.
MAX OPT ITERATION = 1

yosys> stat

3.70. Printing statistics.

=== conv2d ===

   Number of wires:               1944
   Number of wire bits:          15971
   Number of public wires:         427
   Number of public wire bits:    6582
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3121
     $adff                          30
     $adffe                         84
     $aldff                          1
     $aldffe                         6
     $alu                           38
     $and                         1125
     $eq                            49
     $logic_not                      6
     $mux                          337
     $ne                            96
     $not                           59
     $or                           714
     $pmux                          61
     $reduce_and                    60
     $reduce_bool                    7
     $reduce_or                     53
     $xor                          395


yosys> memory -nomap

3.71. Executing MEMORY pass.

yosys> opt_mem

3.71.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.71.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.71.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.71.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.71.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.71.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..

yosys> memory_share

3.71.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.71.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.71.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..

yosys> memory_collect

3.71.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.72. Printing statistics.

=== conv2d ===

   Number of wires:               1944
   Number of wire bits:          15971
   Number of public wires:         427
   Number of public wire bits:    6582
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3121
     $adff                          30
     $adffe                         84
     $aldff                          1
     $aldffe                         6
     $alu                           38
     $and                         1125
     $eq                            49
     $logic_not                      6
     $mux                          337
     $ne                            96
     $not                           59
     $or                           714
     $pmux                          61
     $reduce_and                    60
     $reduce_bool                    7
     $reduce_or                     53
     $xor                          395


yosys> muxpack

3.73. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~284 debug messages>

yosys> opt_clean

3.74. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..

yosys> pmuxtree

3.75. Executing PMUXTREE pass.

yosys> muxpack

3.76. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converting conv2d.$auto$pmuxtree.cc:65:recursive_mux_generator$6115 ... conv2d.$auto$pmuxtree.cc:65:recursive_mux_generator$6117 to a pmux with 2 cases.
Converting conv2d.$auto$pmuxtree.cc:65:recursive_mux_generator$6043 ... conv2d.$auto$pmuxtree.cc:65:recursive_mux_generator$6045 to a pmux with 2 cases.
Converting conv2d.$auto$pmuxtree.cc:65:recursive_mux_generator$6001 ... conv2d.$auto$pmuxtree.cc:65:recursive_mux_generator$6003 to a pmux with 2 cases.
Converting conv2d.$auto$pmuxtree.cc:65:recursive_mux_generator$5945 ... conv2d.$auto$pmuxtree.cc:65:recursive_mux_generator$5947 to a pmux with 2 cases.
Converting conv2d.$auto$pmuxtree.cc:65:recursive_mux_generator$5823 ... conv2d.$auto$pmuxtree.cc:65:recursive_mux_generator$5825 to a pmux with 2 cases.
Converting conv2d.$auto$pmuxtree.cc:65:recursive_mux_generator$5809 ... conv2d.$auto$pmuxtree.cc:65:recursive_mux_generator$5811 to a pmux with 2 cases.
Converting conv2d.$auto$pmuxtree.cc:65:recursive_mux_generator$5795 ... conv2d.$auto$pmuxtree.cc:65:recursive_mux_generator$5797 to a pmux with 2 cases.
Converting conv2d.$auto$pmuxtree.cc:65:recursive_mux_generator$5781 ... conv2d.$auto$pmuxtree.cc:65:recursive_mux_generator$5783 to a pmux with 2 cases.
Converting conv2d.$auto$pmuxtree.cc:65:recursive_mux_generator$5767 ... conv2d.$auto$pmuxtree.cc:65:recursive_mux_generator$5769 to a pmux with 2 cases.
Converting conv2d.$auto$pmuxtree.cc:65:recursive_mux_generator$5753 ... conv2d.$auto$pmuxtree.cc:65:recursive_mux_generator$5755 to a pmux with 2 cases.
Converting conv2d.$auto$pmuxtree.cc:65:recursive_mux_generator$5739 ... conv2d.$auto$pmuxtree.cc:65:recursive_mux_generator$5741 to a pmux with 2 cases.
Converting conv2d.$auto$pmuxtree.cc:65:recursive_mux_generator$5725 ... conv2d.$auto$pmuxtree.cc:65:recursive_mux_generator$5727 to a pmux with 2 cases.
Converted 24 (p)mux cells into 12 pmux cells.
<suppressed ~456 debug messages>

yosys> memory_map

3.77. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> stat

3.78. Printing statistics.

=== conv2d ===

   Number of wires:               2328
   Number of wire bits:          18590
   Number of public wires:         427
   Number of public wire bits:    6582
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3432
     $adff                          30
     $adffe                         84
     $aldff                          1
     $aldffe                         6
     $alu                           38
     $and                         1125
     $eq                            49
     $logic_not                      6
     $mux                          526
     $ne                            96
     $not                          120
     $or                           752
     $pmux                          12
     $reduce_and                    60
     $reduce_bool                    7
     $reduce_or                    125
     $xor                          395


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.79. Executing TECHMAP pass (map to technology primitives).

3.79.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.79.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.79.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $reduce_or.
Using template $paramod$754650b284649a026620fc6856e5b6886cbfe794\_90_alu for cells of type $alu.
Using template $paramod$c014078428616de547d5c8d6f159d828f2151b7a\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $reduce_and.
Using template $paramod$2f5fb04daf2da94d981bf9455fa4454c6ec8b705\_90_alu for cells of type $alu.
Using template $paramod$ea402187f386206c0840504755479bf827f47707\_90_alu for cells of type $alu.
Using template $paramod$53700bbee849b2010ad0b60a61ccd204a10e24ca\_90_alu for cells of type $alu.
Using template $paramod$c703ee6d780d90e162c7eed92bfd050bee00636f\_90_alu for cells of type $alu.
Using template $paramod$b2626aff51a34e60b9c57dceb41667aaf5650a38\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$32efbfac1c4dc57230cf86180788fdfd12e3b511\_90_alu for cells of type $alu.
Using template $paramod$a1bc51c02ce12ac21eb18988e83292af48ed7d72\_90_alu for cells of type $alu.
Using template $paramod$f28fc3f2e267d7716249e826e8c90c34ca9542c1\_90_alu for cells of type $alu.
Using template $paramod$49641a5ace7a8dbedd31c417f5a1b54fcecf6c7d\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $aldff.
Using extmapper simplemap for cells of type $aldffe.
Using template $paramod$0a77e3c00010cb33e399decd813a7380c6e25cba\_90_alu for cells of type $alu.
Using template $paramod$f30f8fc2e30bd83d28cb1ad43b9d9ec083109075\_90_alu for cells of type $alu.
Using template $paramod$d2fa05d38998afabc6d4f34471305d0af4b8b2df\_90_alu for cells of type $alu.
Using template $paramod$46d3f1a4a915912bab1067a0beb0fb376719baeb\_90_alu for cells of type $alu.
Using template $paramod$403c17aef119cccdd585ba431bb1c77ec6e3c700\_90_alu for cells of type $alu.
Using template $paramod$175e67c02b86e96b1288b9dc100122520d7240d8\_90_alu for cells of type $alu.
Using template $paramod$2af30114e9bd4ccb04dad757b3f0a8f6bf0615b0\_90_alu for cells of type $alu.
Using template $paramod$cc1e387d9d5ac1d3f6e6bed180038d9c0ac48d0c\_90_pmux for cells of type $pmux.
Using template $paramod$30a6a3eda691e4e16264fbb83b0421b58195fe41\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010010 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001101 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000110 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000111 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001110 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010000 for cells of type $lcu.
No more expansions possible.
<suppressed ~8609 debug messages>

yosys> stat

3.80. Printing statistics.

=== conv2d ===

   Number of wires:               5992
   Number of wire bits:          73043
   Number of public wires:         427
   Number of public wire bits:    6582
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              16390
     $_ALDFFE_PNP_                  60
     $_ALDFF_PN_                    20
     $_AND_                       3354
     $_DFFE_PN0N_                   99
     $_DFFE_PN0P_                  674
     $_DFFE_PN1N_                    1
     $_DFFE_PN1P_                   23
     $_DFF_PN0_                    266
     $_DFF_PN1_                      1
     $_MUX_                       6759
     $_NOT_                        586
     $_OR_                        2415
     $_XOR_                       2132


yosys> opt_expr

3.81. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.
<suppressed ~4991 debug messages>

yosys> opt_merge -nomux

3.82. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
<suppressed ~4338 debug messages>
Removed a total of 1446 cells.

yosys> opt_muxtree

3.83. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \conv2d..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.84. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \conv2d.
Performed a total of 0 changes.

yosys> opt_merge

3.85. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_share

3.86. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.87. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.88. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..
Removed 1641 unused cells and 4089 unused wires.
<suppressed ~1642 debug messages>

yosys> opt_expr

3.89. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.
<suppressed ~2 debug messages>

yosys> opt_muxtree

3.90. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \conv2d..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.91. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \conv2d.
Performed a total of 0 changes.

yosys> opt_merge

3.92. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_share

3.93. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.94. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.95. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..

yosys> opt_expr

3.96. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.
MAX OPT ITERATION = 2

yosys> opt_expr -full

3.97. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.
<suppressed ~3226 debug messages>

yosys> techmap -map +/techmap.v

3.98. Executing TECHMAP pass (map to technology primitives).

3.98.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.98.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> opt_expr

3.99. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.

yosys> opt_merge -nomux

3.100. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
<suppressed ~51 debug messages>
Removed a total of 17 cells.

yosys> opt_muxtree

3.101. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \conv2d..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.102. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \conv2d.
Performed a total of 0 changes.

yosys> opt_merge

3.103. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_dff -nosdff -nodffe -sat

3.104. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.105. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..
Removed 0 unused cells and 220 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.106. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.
MAX OPT ITERATION = 1

yosys> abc -dff

3.107. Executing ABC pass (technology mapping using ABC).

3.107.1. Summary of detected clock domains:
  6 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4376, arst=!\rstn, srst={ }
  66 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4951, arst=!\rstn, srst={ }
  18 cells in clk=\clk, en=!$auto$opt_reduce.cc:134:opt_pmux$4023, arst=!\rstn, srst={ }
  86 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4527, arst=!\rstn, srst={ }
  114 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4773, arst=!\rstn, srst={ }
  42 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4859, arst=!\rstn, srst={ }
  71 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4436, arst=!\rstn, srst={ }
  104 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4846, arst=!\rstn, srst={ }
  62 cells in clk=\clk, en=$auto$opt_dff.cc:194:make_patterns_logic$4660, arst=!\rstn, srst={ }
  34 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4383, arst=!\rstn, srst={ }
  95 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4986, arst=!\rstn, srst={ }
  48 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4674, arst=!\rstn, srst={ }
  132 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4704, arst=!\rstn, srst={ }
  11 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4410, arst=!\rstn, srst={ }
  323 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4421, arst=!\rstn, srst={ }
  46 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4482, arst=!\rstn, srst={ }
  97 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$5001, arst=!\rstn, srst={ }
  98 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$5016, arst=!\rstn, srst={ }
  97 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$5031, arst=!\rstn, srst={ }
  101 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$5046, arst=!\rstn, srst={ }
  97 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$5061, arst=!\rstn, srst={ }
  97 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$5076, arst=!\rstn, srst={ }
  98 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$5091, arst=!\rstn, srst={ }
  53 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$5112, arst=!\rstn, srst={ }
  227 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4762, arst=!\rstn, srst={ }
  17 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4835, arst=!\rstn, srst={ }
  33 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4278, arst=!\rstn, srst={ }
  109 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4602, arst=!\rstn, srst={ }
  47 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4979, arst=!\rstn, srst={ }
  131 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4636, arst=!\rstn, srst={ }
  77 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4740, arst=!\rstn, srst={ }
  120 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4723, arst=!\rstn, srst={ }
  49 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4809, arst=!\rstn, srst={ }
  92 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4514, arst=!\rstn, srst={ }
  15 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4938, arst=!\rstn, srst={ }
  45 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4908, arst=!\rstn, srst={ }
  876 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$5131, arst=!\rstn, srst={ }
  374 cells in clk=\clk, en=!$auto$opt_reduce.cc:134:opt_pmux$3971, arst=!\rstn, srst={ }
  40 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4291, arst=!\rstn, srst={ }
  20 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4551, arst=!\rstn, srst={ }
  137 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4753, arst=!\rstn, srst={ }
  31 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4349, arst=!\rstn, srst={ }
  16 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4358, arst=!\rstn, srst={ }
  644 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$5121, arst=!\rstn, srst={ }
  128 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4326, arst=!\rstn, srst={ }
  81 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4872, arst=!\rstn, srst={ }
  42 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4317, arst=!\rstn, srst={ }
  12 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4650, arst=!\rstn, srst={ }
  9 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4300, arst=!\rstn, srst={ }
  128 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4820, arst=!\rstn, srst={ }
  11 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4923, arst=!\rstn, srst={ }
  15 cells in clk=\clk, en=!$verific$n11615$206, arst=!\rstn, srst={ }
  16 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4538, arst=!\rstn, srst={ }
  48 cells in clk=\clk, en=!$auto$opt_reduce.cc:134:opt_pmux$4007, arst=!\rstn, srst={ }
  36 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4572, arst=!\rstn, srst={ }
  29 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4563, arst=!\rstn, srst={ }
  12 cells in clk=\clk, en=!$verific$n11617$208, arst=!\rstn, srst={ }
  38 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4657, arst=!\rstn, srst={ }
  1605 cells in clk=\clk, en={ }, arst=!\rstn, srst={ }

3.107.2. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4376, asynchronously reset by !\rstn
Extracted 6 gates and 14 wires to a netlist network with 7 inputs and 2 outputs.

3.107.2.1. Executing ABC.

3.107.3. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4951, asynchronously reset by !\rstn
Extracted 66 gates and 84 wires to a netlist network with 17 inputs and 13 outputs.

3.107.3.1. Executing ABC.

3.107.4. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !$auto$opt_reduce.cc:134:opt_pmux$4023, asynchronously reset by !\rstn
Extracted 18 gates and 28 wires to a netlist network with 9 inputs and 10 outputs.

3.107.4.1. Executing ABC.

3.107.5. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4527, asynchronously reset by !\rstn
Extracted 86 gates and 162 wires to a netlist network with 74 inputs and 25 outputs.

3.107.5.1. Executing ABC.

3.107.6. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4773, asynchronously reset by !\rstn
Extracted 114 gates and 155 wires to a netlist network with 40 inputs and 55 outputs.

3.107.6.1. Executing ABC.

3.107.7. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4859, asynchronously reset by !\rstn
Extracted 42 gates and 73 wires to a netlist network with 29 inputs and 13 outputs.

3.107.7.1. Executing ABC.

3.107.8. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4436, asynchronously reset by !\rstn
Extracted 71 gates and 144 wires to a netlist network with 73 inputs and 33 outputs.

3.107.8.1. Executing ABC.

3.107.9. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4846, asynchronously reset by !\rstn
Extracted 104 gates and 113 wires to a netlist network with 7 inputs and 13 outputs.

3.107.9.1. Executing ABC.

3.107.10. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:194:make_patterns_logic$4660, asynchronously reset by !\rstn
Extracted 62 gates and 101 wires to a netlist network with 39 inputs and 29 outputs.

3.107.10.1. Executing ABC.

3.107.11. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4383, asynchronously reset by !\rstn
Extracted 34 gates and 64 wires to a netlist network with 29 inputs and 30 outputs.

3.107.11.1. Executing ABC.

3.107.12. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4986, asynchronously reset by !\rstn
Extracted 95 gates and 147 wires to a netlist network with 52 inputs and 28 outputs.

3.107.12.1. Executing ABC.

3.107.13. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4674, asynchronously reset by !\rstn
Extracted 48 gates and 75 wires to a netlist network with 27 inputs and 21 outputs.

3.107.13.1. Executing ABC.

3.107.14. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4704, asynchronously reset by !\rstn
Extracted 132 gates and 285 wires to a netlist network with 151 inputs and 76 outputs.

3.107.14.1. Executing ABC.

3.107.15. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4410, asynchronously reset by !\rstn
Extracted 11 gates and 21 wires to a netlist network with 8 inputs and 6 outputs.

3.107.15.1. Executing ABC.

3.107.16. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4421, asynchronously reset by !\rstn
Extracted 263 gates and 401 wires to a netlist network with 136 inputs and 88 outputs.

3.107.16.1. Executing ABC.

3.107.17. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4482, asynchronously reset by !\rstn
Extracted 46 gates and 80 wires to a netlist network with 32 inputs and 29 outputs.

3.107.17.1. Executing ABC.

3.107.18. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5001, asynchronously reset by !\rstn
Extracted 97 gates and 151 wires to a netlist network with 54 inputs and 27 outputs.

3.107.18.1. Executing ABC.

3.107.19. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5016, asynchronously reset by !\rstn
Extracted 98 gates and 153 wires to a netlist network with 55 inputs and 28 outputs.

3.107.19.1. Executing ABC.

3.107.20. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5031, asynchronously reset by !\rstn
Extracted 97 gates and 151 wires to a netlist network with 54 inputs and 27 outputs.

3.107.20.1. Executing ABC.

3.107.21. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5046, asynchronously reset by !\rstn
Extracted 101 gates and 158 wires to a netlist network with 57 inputs and 30 outputs.

3.107.21.1. Executing ABC.

3.107.22. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5061, asynchronously reset by !\rstn
Extracted 97 gates and 151 wires to a netlist network with 54 inputs and 28 outputs.

3.107.22.1. Executing ABC.

3.107.23. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5076, asynchronously reset by !\rstn
Extracted 97 gates and 151 wires to a netlist network with 54 inputs and 28 outputs.

3.107.23.1. Executing ABC.

3.107.24. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5091, asynchronously reset by !\rstn
Extracted 98 gates and 153 wires to a netlist network with 55 inputs and 27 outputs.

3.107.24.1. Executing ABC.

3.107.25. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5112, asynchronously reset by !\rstn
Extracted 53 gates and 93 wires to a netlist network with 40 inputs and 28 outputs.

3.107.25.1. Executing ABC.

3.107.26. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4762, asynchronously reset by !\rstn
Extracted 227 gates and 394 wires to a netlist network with 166 inputs and 77 outputs.

3.107.26.1. Executing ABC.

3.107.27. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4835, asynchronously reset by !\rstn
Extracted 17 gates and 30 wires to a netlist network with 12 inputs and 2 outputs.

3.107.27.1. Executing ABC.

3.107.28. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4278, asynchronously reset by !\rstn
Extracted 33 gates and 67 wires to a netlist network with 34 inputs and 33 outputs.

3.107.28.1. Executing ABC.

3.107.29. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4602, asynchronously reset by !\rstn
Extracted 109 gates and 120 wires to a netlist network with 10 inputs and 26 outputs.

3.107.29.1. Executing ABC.

3.107.30. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4979, asynchronously reset by !\rstn
Extracted 47 gates and 76 wires to a netlist network with 29 inputs and 21 outputs.

3.107.30.1. Executing ABC.

3.107.31. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4636, asynchronously reset by !\rstn
Extracted 131 gates and 170 wires to a netlist network with 38 inputs and 16 outputs.

3.107.31.1. Executing ABC.

3.107.32. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4740, asynchronously reset by !\rstn
Extracted 77 gates and 192 wires to a netlist network with 113 inputs and 76 outputs.

3.107.32.1. Executing ABC.

3.107.33. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4723, asynchronously reset by !\rstn
Extracted 120 gates and 262 wires to a netlist network with 140 inputs and 113 outputs.

3.107.33.1. Executing ABC.

3.107.34. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4809, asynchronously reset by !\rstn
Extracted 49 gates and 69 wires to a netlist network with 19 inputs and 28 outputs.

3.107.34.1. Executing ABC.

3.107.35. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4514, asynchronously reset by !\rstn
Extracted 92 gates and 142 wires to a netlist network with 49 inputs and 38 outputs.

3.107.35.1. Executing ABC.

3.107.36. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4938, asynchronously reset by !\rstn
Extracted 15 gates and 28 wires to a netlist network with 12 inputs and 7 outputs.

3.107.36.1. Executing ABC.

3.107.37. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4908, asynchronously reset by !\rstn
Extracted 45 gates and 60 wires to a netlist network with 14 inputs and 20 outputs.

3.107.37.1. Executing ABC.

3.107.38. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5131, asynchronously reset by !\rstn
Extracted 876 gates and 1028 wires to a netlist network with 152 inputs and 187 outputs.

3.107.38.1. Executing ABC.

3.107.39. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !$auto$opt_reduce.cc:134:opt_pmux$3971, asynchronously reset by !\rstn
Extracted 374 gates and 482 wires to a netlist network with 108 inputs and 42 outputs.

3.107.39.1. Executing ABC.

3.107.40. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4291, asynchronously reset by !\rstn
Extracted 40 gates and 59 wires to a netlist network with 18 inputs and 13 outputs.

3.107.40.1. Executing ABC.

3.107.41. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4551, asynchronously reset by !\rstn
Extracted 20 gates and 33 wires to a netlist network with 11 inputs and 5 outputs.

3.107.41.1. Executing ABC.

3.107.42. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4753, asynchronously reset by !\rstn
Extracted 137 gates and 195 wires to a netlist network with 56 inputs and 9 outputs.

3.107.42.1. Executing ABC.

3.107.43. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4349, asynchronously reset by !\rstn
Extracted 31 gates and 61 wires to a netlist network with 28 inputs and 7 outputs.

3.107.43.1. Executing ABC.

3.107.44. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4358, asynchronously reset by !\rstn
Extracted 16 gates and 30 wires to a netlist network with 14 inputs and 11 outputs.

3.107.44.1. Executing ABC.

3.107.45. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5121, asynchronously reset by !\rstn
Extracted 644 gates and 787 wires to a netlist network with 143 inputs and 131 outputs.

3.107.45.1. Executing ABC.

3.107.46. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4326, asynchronously reset by !\rstn
Extracted 128 gates and 162 wires to a netlist network with 33 inputs and 20 outputs.

3.107.46.1. Executing ABC.

3.107.47. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4872, asynchronously reset by !\rstn
Extracted 81 gates and 94 wires to a netlist network with 12 inputs and 14 outputs.

3.107.47.1. Executing ABC.

3.107.48. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4317, asynchronously reset by !\rstn
Extracted 42 gates and 74 wires to a netlist network with 32 inputs and 34 outputs.

3.107.48.1. Executing ABC.

3.107.49. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4650, asynchronously reset by !\rstn
Extracted 12 gates and 24 wires to a netlist network with 12 inputs and 3 outputs.

3.107.49.1. Executing ABC.

3.107.50. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4300, asynchronously reset by !\rstn
Extracted 9 gates and 18 wires to a netlist network with 8 inputs and 5 outputs.

3.107.50.1. Executing ABC.

3.107.51. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4820, asynchronously reset by !\rstn
Extracted 128 gates and 146 wires to a netlist network with 17 inputs and 18 outputs.

3.107.51.1. Executing ABC.

3.107.52. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4923, asynchronously reset by !\rstn
Extracted 11 gates and 22 wires to a netlist network with 11 inputs and 4 outputs.

3.107.52.1. Executing ABC.

3.107.53. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !$verific$n11615$206, asynchronously reset by !\rstn
Extracted 15 gates and 30 wires to a netlist network with 14 inputs and 11 outputs.

3.107.53.1. Executing ABC.

3.107.54. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4538, asynchronously reset by !\rstn
Extracted 16 gates and 27 wires to a netlist network with 10 inputs and 8 outputs.

3.107.54.1. Executing ABC.

3.107.55. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !$auto$opt_reduce.cc:134:opt_pmux$4007, asynchronously reset by !\rstn
Extracted 48 gates and 78 wires to a netlist network with 30 inputs and 22 outputs.

3.107.55.1. Executing ABC.

3.107.56. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4572, asynchronously reset by !\rstn
Extracted 36 gates and 72 wires to a netlist network with 36 inputs and 34 outputs.

3.107.56.1. Executing ABC.

3.107.57. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4563, asynchronously reset by !\rstn
Extracted 29 gates and 55 wires to a netlist network with 25 inputs and 7 outputs.

3.107.57.1. Executing ABC.

3.107.58. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !$verific$n11617$208, asynchronously reset by !\rstn
Extracted 12 gates and 23 wires to a netlist network with 11 inputs and 10 outputs.

3.107.58.1. Executing ABC.

3.107.59. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4657, asynchronously reset by !\rstn
Extracted 38 gates and 76 wires to a netlist network with 38 inputs and 35 outputs.

3.107.59.1. Executing ABC.

3.107.60. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, asynchronously reset by !\rstn
Extracted 1585 gates and 2010 wires to a netlist network with 423 inputs and 389 outputs.

3.107.60.1. Executing ABC.

yosys> abc -dff

3.108. Executing ABC pass (technology mapping using ABC).

3.108.1. Summary of detected clock domains:
  30 cells in clk=\clk, en=$abc$30420$auto$opt_dff.cc:219:make_patterns_logic$4349, arst=!\rstn, srst={ }
  23 cells in clk=\clk, en=$abc$26956$auto$opt_dff.cc:219:make_patterns_logic$4482, arst=!\rstn, srst={ }
  17 cells in clk=\clk, en=$abc$31345$auto$opt_dff.cc:219:make_patterns_logic$4650, arst=!\rstn, srst={ }
  14 cells in clk=\clk, en=$abc$31464$auto$opt_dff.cc:219:make_patterns_logic$4923, arst=!\rstn, srst={ }
  31 cells in clk=\clk, en=$abc$31359$auto$opt_dff.cc:219:make_patterns_logic$4300, arst=!\rstn, srst={ }
  71 cells in clk=\clk, en=$abc$31191$auto$opt_dff.cc:219:make_patterns_logic$4872, arst=!\rstn, srst={ }
  18 cells in clk=\clk, en=!$abc$31719$verific$n11617$208, arst=!\rstn, srst={ }
  40 cells in clk=\clk, en=$abc$28796$auto$opt_dff.cc:219:make_patterns_logic$4908, arst=!\rstn, srst={ }
  32 cells in clk=\clk, en=$abc$26337$auto$opt_dff.cc:219:make_patterns_logic$4383, arst=!\rstn, srst={ }
  10 cells in clk=\clk, en=$abc$26712$auto$opt_dff.cc:219:make_patterns_logic$4410, arst=!\rstn, srst={ }
  81 cells in clk=\clk, en=$abc$26999$auto$opt_dff.cc:219:make_patterns_logic$5001, arst=!\rstn, srst={ }
  39 cells in clk=\clk, en=$abc$26052$auto$opt_dff.cc:219:make_patterns_logic$4859, arst=!\rstn, srst={ }
  78 cells in clk=\clk, en=$abc$27264$auto$opt_dff.cc:219:make_patterns_logic$5046, arst=!\rstn, srst={ }
  78 cells in clk=\clk, en=$abc$27176$auto$opt_dff.cc:219:make_patterns_logic$5031, arst=!\rstn, srst={ }
  359 cells in clk=\clk, en=$abc$27688$auto$opt_dff.cc:219:make_patterns_logic$4762, arst=!\rstn, srst={ }
  80 cells in clk=\clk, en=$abc$27087$auto$opt_dff.cc:219:make_patterns_logic$5016, arst=!\rstn, srst={ }
  14 cells in clk=\clk, en=!$abc$31477$verific$n11615$206, arst=!\rstn, srst={ }
  35 cells in clk=\clk, en=$abc$31682$auto$opt_dff.cc:219:make_patterns_logic$4563, arst=!\rstn, srst={ }
  60 cells in clk=\clk, en=$abc$26200$auto$opt_dff.cc:219:make_patterns_logic$4846, arst=!\rstn, srst={ }
  7 cells in clk=\clk, en=$abc$25796$auto$opt_dff.cc:219:make_patterns_logic$4376, arst=!\rstn, srst={ }
  71 cells in clk=\clk, en=$abc$27356$auto$opt_dff.cc:219:make_patterns_logic$5061, arst=!\rstn, srst={ }
  76 cells in clk=\clk, en=$abc$27444$auto$opt_dff.cc:219:make_patterns_logic$5076, arst=!\rstn, srst={ }
  50 cells in clk=\clk, en=$abc$26096$auto$opt_dff.cc:219:make_patterns_logic$4436, arst=!\rstn, srst={ }
  35 cells in clk=\clk, en=$abc$30232$auto$opt_dff.cc:219:make_patterns_logic$4291, arst=!\rstn, srst={ }
  18 cells in clk=\clk, en=$abc$31495$auto$opt_dff.cc:219:make_patterns_logic$4538, arst=!\rstn, srst={ }
  44 cells in clk=\clk, en=$abc$28239$auto$opt_dff.cc:219:make_patterns_logic$4979, arst=!\rstn, srst={ }
  88 cells in clk=\clk, en=$abc$28369$auto$opt_dff.cc:219:make_patterns_logic$4740, arst=!\rstn, srst={ }
  108 cells in clk=\clk, en=$abc$28449$auto$opt_dff.cc:219:make_patterns_logic$4723, arst=!\rstn, srst={ }
  50 cells in clk=\clk, en=$abc$28575$auto$opt_dff.cc:219:make_patterns_logic$4809, arst=!\rstn, srst={ }
  12 cells in clk=\clk, en=$abc$28780$auto$opt_dff.cc:219:make_patterns_logic$4938, arst=!\rstn, srst={ }
  85 cells in clk=\clk, en=$abc$26513$auto$opt_dff.cc:219:make_patterns_logic$4704, arst=!\rstn, srst={ }
  73 cells in clk=\clk, en=$abc$27532$auto$opt_dff.cc:219:make_patterns_logic$5091, arst=!\rstn, srst={ }
  105 cells in clk=\clk, en=$abc$25964$auto$opt_dff.cc:219:make_patterns_logic$4773, arst=!\rstn, srst={ }
  115 cells in clk=\clk, en=$abc$25881$auto$opt_dff.cc:219:make_patterns_logic$4527, arst=!\rstn, srst={ }
  110 cells in clk=\clk, en=$abc$31262$auto$opt_dff.cc:219:make_patterns_logic$4317, arst=!\rstn, srst={ }
  14 cells in clk=\clk, en=$abc$30270$auto$opt_dff.cc:219:make_patterns_logic$4551, arst=!\rstn, srst={ }
  35 cells in clk=\clk, en=!$abc$25862$auto$opt_reduce.cc:134:opt_pmux$4023, arst=!\rstn, srst={ }
  288 cells in clk=\clk, en=$abc$26724$auto$opt_dff.cc:219:make_patterns_logic$4421, arst=!\rstn, srst={ }
  69 cells in clk=\clk, en=$abc$28158$auto$opt_dff.cc:219:make_patterns_logic$4602, arst=!\rstn, srst={ }
  42 cells in clk=\clk, en=$abc$28060$auto$opt_dff.cc:219:make_patterns_logic$4278, arst=!\rstn, srst={ }
  671 cells in clk=\clk, en=$abc$30469$auto$opt_dff.cc:219:make_patterns_logic$5121, arst=!\rstn, srst={ }
  831 cells in clk=\clk, en=$abc$28838$auto$opt_dff.cc:219:make_patterns_logic$5131, arst=!\rstn, srst={ }
  18 cells in clk=\clk, en=$abc$28047$auto$opt_dff.cc:219:make_patterns_logic$4835, arst=!\rstn, srst={ }
  75 cells in clk=\clk, en=$abc$26373$auto$opt_dff.cc:219:make_patterns_logic$4986, arst=!\rstn, srst={ }
  122 cells in clk=\clk, en=$abc$31070$auto$opt_dff.cc:219:make_patterns_logic$4326, arst=!\rstn, srst={ }
  43 cells in clk=\clk, en=$abc$30451$auto$opt_dff.cc:219:make_patterns_logic$4358, arst=!\rstn, srst={ }
  54 cells in clk=\clk, en=$abc$26459$auto$opt_dff.cc:219:make_patterns_logic$4674, arst=!\rstn, srst={ }
  67 cells in clk=\clk, en=$abc$27621$auto$opt_dff.cc:219:make_patterns_logic$5112, arst=!\rstn, srst={ }
  105 cells in clk=\clk, en=$abc$30287$auto$opt_dff.cc:219:make_patterns_logic$4753, arst=!\rstn, srst={ }
  65 cells in clk=\clk, en=$abc$26262$auto$opt_dff.cc:194:make_patterns_logic$4660, arst=!\rstn, srst={ }
  71 cells in clk=\clk, en=$abc$31734$auto$opt_dff.cc:219:make_patterns_logic$4657, arst=!\rstn, srst={ }
  90 cells in clk=\clk, en=$abc$31369$auto$opt_dff.cc:219:make_patterns_logic$4820, arst=!\rstn, srst={ }
  67 cells in clk=\clk, en=$abc$28291$auto$opt_dff.cc:219:make_patterns_logic$4636, arst=!\rstn, srst={ }
  434 cells in clk=\clk, en=!$abc$29790$auto$opt_reduce.cc:134:opt_pmux$3971, arst=!\rstn, srst={ }
  53 cells in clk=\clk, en=$abc$25804$auto$opt_dff.cc:219:make_patterns_logic$4951, arst=!\rstn, srst={ }
  69 cells in clk=\clk, en=$abc$31582$auto$opt_dff.cc:219:make_patterns_logic$4572, arst=!\rstn, srst={ }
  44 cells in clk=\clk, en=!$abc$31517$auto$opt_reduce.cc:134:opt_pmux$4007, arst=!\rstn, srst={ }
  134 cells in clk=\clk, en=$abc$28629$auto$opt_dff.cc:219:make_patterns_logic$4514, arst=!\rstn, srst={ }
  1166 cells in clk=\clk, en={ }, arst=!\rstn, srst={ }

3.108.2. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$30420$auto$opt_dff.cc:219:make_patterns_logic$4349, asynchronously reset by !\rstn
Extracted 30 gates and 55 wires to a netlist network with 25 inputs and 7 outputs.

3.108.2.1. Executing ABC.

3.108.3. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$26956$auto$opt_dff.cc:219:make_patterns_logic$4482, asynchronously reset by !\rstn
Extracted 23 gates and 40 wires to a netlist network with 17 inputs and 7 outputs.

3.108.3.1. Executing ABC.

3.108.4. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$31345$auto$opt_dff.cc:219:make_patterns_logic$4650, asynchronously reset by !\rstn
Extracted 17 gates and 31 wires to a netlist network with 14 inputs and 7 outputs.

3.108.4.1. Executing ABC.

3.108.5. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$31464$auto$opt_dff.cc:219:make_patterns_logic$4923, asynchronously reset by !\rstn
Extracted 14 gates and 27 wires to a netlist network with 13 inputs and 6 outputs.

3.108.5.1. Executing ABC.

3.108.6. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$31359$auto$opt_dff.cc:219:make_patterns_logic$4300, asynchronously reset by !\rstn
Extracted 31 gates and 79 wires to a netlist network with 48 inputs and 28 outputs.

3.108.6.1. Executing ABC.

3.108.7. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$31191$auto$opt_dff.cc:219:make_patterns_logic$4872, asynchronously reset by !\rstn
Extracted 71 gates and 83 wires to a netlist network with 12 inputs and 15 outputs.

3.108.7.1. Executing ABC.

3.108.8. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !$abc$31719$verific$n11617$208, asynchronously reset by !\rstn
Extracted 18 gates and 34 wires to a netlist network with 16 inputs and 11 outputs.

3.108.8.1. Executing ABC.

3.108.9. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$28796$auto$opt_dff.cc:219:make_patterns_logic$4908, asynchronously reset by !\rstn
Extracted 40 gates and 51 wires to a netlist network with 11 inputs and 19 outputs.

3.108.9.1. Executing ABC.

3.108.10. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$26337$auto$opt_dff.cc:219:make_patterns_logic$4383, asynchronously reset by !\rstn
Extracted 32 gates and 63 wires to a netlist network with 31 inputs and 28 outputs.

3.108.10.1. Executing ABC.

3.108.11. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$26712$auto$opt_dff.cc:219:make_patterns_logic$4410, asynchronously reset by !\rstn
Extracted 10 gates and 18 wires to a netlist network with 8 inputs and 6 outputs.

3.108.11.1. Executing ABC.

3.108.12. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$26999$auto$opt_dff.cc:219:make_patterns_logic$5001, asynchronously reset by !\rstn
Extracted 81 gates and 132 wires to a netlist network with 51 inputs and 28 outputs.

3.108.12.1. Executing ABC.

3.108.13. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$26052$auto$opt_dff.cc:219:make_patterns_logic$4859, asynchronously reset by !\rstn
Extracted 39 gates and 67 wires to a netlist network with 28 inputs and 11 outputs.

3.108.13.1. Executing ABC.

3.108.14. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$27264$auto$opt_dff.cc:219:make_patterns_logic$5046, asynchronously reset by !\rstn
Extracted 78 gates and 125 wires to a netlist network with 47 inputs and 31 outputs.

3.108.14.1. Executing ABC.

3.108.15. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$27176$auto$opt_dff.cc:219:make_patterns_logic$5031, asynchronously reset by !\rstn
Extracted 78 gates and 126 wires to a netlist network with 48 inputs and 28 outputs.

3.108.15.1. Executing ABC.

3.108.16. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$27688$auto$opt_dff.cc:219:make_patterns_logic$4762, asynchronously reset by !\rstn
Extracted 359 gates and 524 wires to a netlist network with 165 inputs and 71 outputs.

3.108.16.1. Executing ABC.

3.108.17. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$27087$auto$opt_dff.cc:219:make_patterns_logic$5016, asynchronously reset by !\rstn
Extracted 80 gates and 130 wires to a netlist network with 50 inputs and 29 outputs.

3.108.17.1. Executing ABC.

3.108.18. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !$abc$31477$verific$n11615$206, asynchronously reset by !\rstn
Extracted 14 gates and 28 wires to a netlist network with 14 inputs and 9 outputs.

3.108.18.1. Executing ABC.

3.108.19. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$31682$auto$opt_dff.cc:219:make_patterns_logic$4563, asynchronously reset by !\rstn
Extracted 35 gates and 59 wires to a netlist network with 24 inputs and 6 outputs.

3.108.19.1. Executing ABC.

3.108.20. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$26200$auto$opt_dff.cc:219:make_patterns_logic$4846, asynchronously reset by !\rstn
Extracted 60 gates and 67 wires to a netlist network with 7 inputs and 11 outputs.

3.108.20.1. Executing ABC.

3.108.21. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$25796$auto$opt_dff.cc:219:make_patterns_logic$4376, asynchronously reset by !\rstn
Extracted 7 gates and 14 wires to a netlist network with 7 inputs and 3 outputs.

3.108.21.1. Executing ABC.

3.108.22. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$27356$auto$opt_dff.cc:219:make_patterns_logic$5061, asynchronously reset by !\rstn
Extracted 71 gates and 112 wires to a netlist network with 41 inputs and 29 outputs.

3.108.22.1. Executing ABC.

3.108.23. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$27444$auto$opt_dff.cc:219:make_patterns_logic$5076, asynchronously reset by !\rstn
Extracted 76 gates and 122 wires to a netlist network with 46 inputs and 29 outputs.

3.108.23.1. Executing ABC.

3.108.24. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$26096$auto$opt_dff.cc:219:make_patterns_logic$4436, asynchronously reset by !\rstn
Extracted 50 gates and 100 wires to a netlist network with 50 inputs and 33 outputs.

3.108.24.1. Executing ABC.

3.108.25. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$30232$auto$opt_dff.cc:219:make_patterns_logic$4291, asynchronously reset by !\rstn
Extracted 35 gates and 51 wires to a netlist network with 16 inputs and 12 outputs.

3.108.25.1. Executing ABC.

3.108.26. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$31495$auto$opt_dff.cc:219:make_patterns_logic$4538, asynchronously reset by !\rstn
Extracted 18 gates and 32 wires to a netlist network with 13 inputs and 10 outputs.

3.108.26.1. Executing ABC.

3.108.27. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$28239$auto$opt_dff.cc:219:make_patterns_logic$4979, asynchronously reset by !\rstn
Extracted 44 gates and 67 wires to a netlist network with 23 inputs and 14 outputs.

3.108.27.1. Executing ABC.

3.108.28. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$28369$auto$opt_dff.cc:219:make_patterns_logic$4740, asynchronously reset by !\rstn
Extracted 88 gates and 205 wires to a netlist network with 117 inputs and 77 outputs.

3.108.28.1. Executing ABC.

3.108.29. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$28449$auto$opt_dff.cc:219:make_patterns_logic$4723, asynchronously reset by !\rstn
Extracted 108 gates and 212 wires to a netlist network with 104 inputs and 76 outputs.

3.108.29.1. Executing ABC.

3.108.30. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$28575$auto$opt_dff.cc:219:make_patterns_logic$4809, asynchronously reset by !\rstn
Extracted 50 gates and 71 wires to a netlist network with 21 inputs and 30 outputs.

3.108.30.1. Executing ABC.

3.108.31. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$28780$auto$opt_dff.cc:219:make_patterns_logic$4938, asynchronously reset by !\rstn
Extracted 12 gates and 21 wires to a netlist network with 9 inputs and 5 outputs.

3.108.31.1. Executing ABC.

3.108.32. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$26513$auto$opt_dff.cc:219:make_patterns_logic$4704, asynchronously reset by !\rstn
Extracted 85 gates and 175 wires to a netlist network with 89 inputs and 54 outputs.

3.108.32.1. Executing ABC.

3.108.33. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$27532$auto$opt_dff.cc:219:make_patterns_logic$5091, asynchronously reset by !\rstn
Extracted 73 gates and 116 wires to a netlist network with 43 inputs and 28 outputs.

3.108.33.1. Executing ABC.

3.108.34. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$25964$auto$opt_dff.cc:219:make_patterns_logic$4773, asynchronously reset by !\rstn
Extracted 105 gates and 157 wires to a netlist network with 52 inputs and 49 outputs.

3.108.34.1. Executing ABC.

3.108.35. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$25881$auto$opt_dff.cc:219:make_patterns_logic$4527, asynchronously reset by !\rstn
Extracted 115 gates and 183 wires to a netlist network with 68 inputs and 26 outputs.

3.108.35.1. Executing ABC.

3.108.36. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$31262$auto$opt_dff.cc:219:make_patterns_logic$4317, asynchronously reset by !\rstn
Extracted 110 gates and 183 wires to a netlist network with 73 inputs and 47 outputs.

3.108.36.1. Executing ABC.

3.108.37. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$30270$auto$opt_dff.cc:219:make_patterns_logic$4551, asynchronously reset by !\rstn
Extracted 14 gates and 24 wires to a netlist network with 10 inputs and 4 outputs.

3.108.37.1. Executing ABC.

3.108.38. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !$abc$25862$auto$opt_reduce.cc:134:opt_pmux$4023, asynchronously reset by !\rstn
Extracted 35 gates and 61 wires to a netlist network with 26 inputs and 15 outputs.

3.108.38.1. Executing ABC.

3.108.39. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$26724$auto$opt_dff.cc:219:make_patterns_logic$4421, asynchronously reset by !\rstn
Extracted 228 gates and 361 wires to a netlist network with 133 inputs and 86 outputs.

3.108.39.1. Executing ABC.

3.108.40. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$28158$auto$opt_dff.cc:219:make_patterns_logic$4602, asynchronously reset by !\rstn
Extracted 69 gates and 80 wires to a netlist network with 11 inputs and 25 outputs.

3.108.40.1. Executing ABC.

3.108.41. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$28060$auto$opt_dff.cc:219:make_patterns_logic$4278, asynchronously reset by !\rstn
Extracted 42 gates and 77 wires to a netlist network with 35 inputs and 33 outputs.

3.108.41.1. Executing ABC.

3.108.42. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$30469$auto$opt_dff.cc:219:make_patterns_logic$5121, asynchronously reset by !\rstn
Extracted 671 gates and 958 wires to a netlist network with 287 inputs and 213 outputs.

3.108.42.1. Executing ABC.

3.108.43. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$28838$auto$opt_dff.cc:219:make_patterns_logic$5131, asynchronously reset by !\rstn
Extracted 831 gates and 989 wires to a netlist network with 158 inputs and 237 outputs.

3.108.43.1. Executing ABC.

3.108.44. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$28047$auto$opt_dff.cc:219:make_patterns_logic$4835, asynchronously reset by !\rstn
Extracted 18 gates and 27 wires to a netlist network with 9 inputs and 4 outputs.

3.108.44.1. Executing ABC.

3.108.45. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$26373$auto$opt_dff.cc:219:make_patterns_logic$4986, asynchronously reset by !\rstn
Extracted 75 gates and 120 wires to a netlist network with 45 inputs and 29 outputs.

3.108.45.1. Executing ABC.

3.108.46. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$31070$auto$opt_dff.cc:219:make_patterns_logic$4326, asynchronously reset by !\rstn
Extracted 122 gates and 163 wires to a netlist network with 41 inputs and 31 outputs.

3.108.46.1. Executing ABC.

3.108.47. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$30451$auto$opt_dff.cc:219:make_patterns_logic$4358, asynchronously reset by !\rstn
Extracted 43 gates and 107 wires to a netlist network with 64 inputs and 38 outputs.

3.108.47.1. Executing ABC.

3.108.48. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$26459$auto$opt_dff.cc:219:make_patterns_logic$4674, asynchronously reset by !\rstn
Extracted 54 gates and 73 wires to a netlist network with 19 inputs and 21 outputs.

3.108.48.1. Executing ABC.

3.108.49. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$27621$auto$opt_dff.cc:219:make_patterns_logic$5112, asynchronously reset by !\rstn
Extracted 67 gates and 109 wires to a netlist network with 42 inputs and 29 outputs.

3.108.49.1. Executing ABC.

3.108.50. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$30287$auto$opt_dff.cc:219:make_patterns_logic$4753, asynchronously reset by !\rstn
Extracted 105 gates and 151 wires to a netlist network with 46 inputs and 11 outputs.

3.108.50.1. Executing ABC.

3.108.51. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$26262$auto$opt_dff.cc:194:make_patterns_logic$4660, asynchronously reset by !\rstn
Extracted 65 gates and 104 wires to a netlist network with 39 inputs and 29 outputs.

3.108.51.1. Executing ABC.

3.108.52. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$31734$auto$opt_dff.cc:219:make_patterns_logic$4657, asynchronously reset by !\rstn
Extracted 71 gates and 110 wires to a netlist network with 39 inputs and 35 outputs.

3.108.52.1. Executing ABC.

3.108.53. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$31369$auto$opt_dff.cc:219:make_patterns_logic$4820, asynchronously reset by !\rstn
Extracted 90 gates and 107 wires to a netlist network with 17 inputs and 15 outputs.

3.108.53.1. Executing ABC.

3.108.54. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$28291$auto$opt_dff.cc:219:make_patterns_logic$4636, asynchronously reset by !\rstn
Extracted 67 gates and 92 wires to a netlist network with 25 inputs and 15 outputs.

3.108.54.1. Executing ABC.

3.108.55. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !$abc$29790$auto$opt_reduce.cc:134:opt_pmux$3971, asynchronously reset by !\rstn
Extracted 434 gates and 551 wires to a netlist network with 117 inputs and 61 outputs.

3.108.55.1. Executing ABC.

3.108.56. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$25804$auto$opt_dff.cc:219:make_patterns_logic$4951, asynchronously reset by !\rstn
Extracted 53 gates and 70 wires to a netlist network with 17 inputs and 11 outputs.

3.108.56.1. Executing ABC.

3.108.57. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$31582$auto$opt_dff.cc:219:make_patterns_logic$4572, asynchronously reset by !\rstn
Extracted 69 gates and 107 wires to a netlist network with 38 inputs and 35 outputs.

3.108.57.1. Executing ABC.

3.108.58. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !$abc$31517$auto$opt_reduce.cc:134:opt_pmux$4007, asynchronously reset by !\rstn
Extracted 44 gates and 73 wires to a netlist network with 29 inputs and 24 outputs.

3.108.58.1. Executing ABC.

3.108.59. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$28629$auto$opt_dff.cc:219:make_patterns_logic$4514, asynchronously reset by !\rstn
Extracted 134 gates and 203 wires to a netlist network with 69 inputs and 62 outputs.

3.108.59.1. Executing ABC.

3.108.60. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, asynchronously reset by !\rstn
Extracted 1146 gates and 1621 wires to a netlist network with 474 inputs and 400 outputs.

3.108.60.1. Executing ABC.

yosys> abc -dff

3.109. Executing ABC pass (technology mapping using ABC).

3.109.1. Summary of detected clock domains:
  28 cells in clk=\clk, en=$abc$33329$abc$30420$auto$opt_dff.cc:219:make_patterns_logic$4349, arst=!\rstn, srst={ }
  25 cells in clk=\clk, en=$abc$33359$abc$26956$auto$opt_dff.cc:219:make_patterns_logic$4482, arst=!\rstn, srst={ }
  13 cells in clk=\clk, en=$abc$33384$abc$31345$auto$opt_dff.cc:219:make_patterns_logic$4650, arst=!\rstn, srst={ }
  10 cells in clk=\clk, en=$abc$33402$abc$31464$auto$opt_dff.cc:219:make_patterns_logic$4923, arst=!\rstn, srst={ }
  32 cells in clk=\clk, en=$abc$33417$abc$31359$auto$opt_dff.cc:219:make_patterns_logic$4300, arst=!\rstn, srst={ }
  16 cells in clk=\clk, en=!$abc$33521$abc$31719$verific$n11617$208, arst=!\rstn, srst={ }
  31 cells in clk=\clk, en=$abc$33583$abc$26337$auto$opt_dff.cc:219:make_patterns_logic$4383, arst=!\rstn, srst={ }
  16 cells in clk=\clk, en=$abc$33617$abc$26712$auto$opt_dff.cc:219:make_patterns_logic$4410, arst=!\rstn, srst={ }
  42 cells in clk=\clk, en=$abc$33714$abc$26052$auto$opt_dff.cc:219:make_patterns_logic$4859, arst=!\rstn, srst={ }
  84 cells in clk=\clk, en=$abc$33756$abc$27264$auto$opt_dff.cc:219:make_patterns_logic$5046, arst=!\rstn, srst={ }
  302 cells in clk=\clk, en=$abc$33930$abc$27688$auto$opt_dff.cc:219:make_patterns_logic$4762, arst=!\rstn, srst={ }
  14 cells in clk=\clk, en=!$abc$34320$abc$31477$verific$n11615$206, arst=!\rstn, srst={ }
  38 cells in clk=\clk, en=$abc$34336$abc$31682$auto$opt_dff.cc:219:make_patterns_logic$4563, arst=!\rstn, srst={ }
  6 cells in clk=\clk, en=$abc$34435$abc$25796$auto$opt_dff.cc:219:make_patterns_logic$4376, arst=!\rstn, srst={ }
  80 cells in clk=\clk, en=$abc$34444$abc$27356$auto$opt_dff.cc:219:make_patterns_logic$5061, arst=!\rstn, srst={ }
  60 cells in clk=\clk, en=$abc$34375$abc$26200$auto$opt_dff.cc:219:make_patterns_logic$4846, arst=!\rstn, srst={ }
  72 cells in clk=\clk, en=$abc$34529$abc$27444$auto$opt_dff.cc:219:make_patterns_logic$5076, arst=!\rstn, srst={ }
  72 cells in clk=\clk, en=$abc$33449$abc$31191$auto$opt_dff.cc:219:make_patterns_logic$4872, arst=!\rstn, srst={ }
  32 cells in clk=\clk, en=$abc$34719$abc$30232$auto$opt_dff.cc:219:make_patterns_logic$4291, arst=!\rstn, srst={ }
  20 cells in clk=\clk, en=$abc$34758$abc$31495$auto$opt_dff.cc:219:make_patterns_logic$4538, arst=!\rstn, srst={ }
  107 cells in clk=\clk, en=$abc$34830$abc$28369$auto$opt_dff.cc:219:make_patterns_logic$4740, arst=!\rstn, srst={ }
  72 cells in clk=\clk, en=$abc$34922$abc$28449$auto$opt_dff.cc:219:make_patterns_logic$4723, arst=!\rstn, srst={ }
  51 cells in clk=\clk, en=$abc$35010$abc$28575$auto$opt_dff.cc:219:make_patterns_logic$4809, arst=!\rstn, srst={ }
  12 cells in clk=\clk, en=$abc$35066$abc$28780$auto$opt_dff.cc:219:make_patterns_logic$4938, arst=!\rstn, srst={ }
  85 cells in clk=\clk, en=$abc$35080$abc$26513$auto$opt_dff.cc:219:make_patterns_logic$4704, arst=!\rstn, srst={ }
  99 cells in clk=\clk, en=$abc$35253$abc$25964$auto$opt_dff.cc:219:make_patterns_logic$4773, arst=!\rstn, srst={ }
  117 cells in clk=\clk, en=$abc$35356$abc$25881$auto$opt_dff.cc:219:make_patterns_logic$4527, arst=!\rstn, srst={ }
  56 cells in clk=\clk, en=$abc$34614$abc$26096$auto$opt_dff.cc:219:make_patterns_logic$4436, arst=!\rstn, srst={ }
  17 cells in clk=\clk, en=$abc$35600$abc$30270$auto$opt_dff.cc:219:make_patterns_logic$4551, arst=!\rstn, srst={ }
  37 cells in clk=\clk, en=!$abc$35616$abc$25862$auto$opt_reduce.cc:134:opt_pmux$4023, arst=!\rstn, srst={ }
  285 cells in clk=\clk, en=$abc$35660$abc$26724$auto$opt_dff.cc:219:make_patterns_logic$4421, arst=!\rstn, srst={ }
  73 cells in clk=\clk, en=$abc$35889$abc$28158$auto$opt_dff.cc:219:make_patterns_logic$4602, arst=!\rstn, srst={ }
  44 cells in clk=\clk, en=$abc$35970$abc$28060$auto$opt_dff.cc:219:make_patterns_logic$4278, arst=!\rstn, srst={ }
  643 cells in clk=\clk, en=$abc$36068$abc$30469$auto$opt_dff.cc:219:make_patterns_logic$5121, arst=!\rstn, srst={ }
  9 cells in clk=\clk, en=$abc$37617$abc$28047$auto$opt_dff.cc:219:make_patterns_logic$4835, arst=!\rstn, srst={ }
  49 cells in clk=\clk, en=$abc$33542$abc$28796$auto$opt_dff.cc:219:make_patterns_logic$4908, arst=!\rstn, srst={ }
  74 cells in clk=\clk, en=$abc$37629$abc$26373$auto$opt_dff.cc:219:make_patterns_logic$4986, arst=!\rstn, srst={ }
  75 cells in clk=\clk, en=$abc$34234$abc$27087$auto$opt_dff.cc:219:make_patterns_logic$5016, arst=!\rstn, srst={ }
  126 cells in clk=\clk, en=$abc$37713$abc$31070$auto$opt_dff.cc:219:make_patterns_logic$4326, arst=!\rstn, srst={ }
  75 cells in clk=\clk, en=$abc$33845$abc$27176$auto$opt_dff.cc:219:make_patterns_logic$5031, arst=!\rstn, srst={ }
  47 cells in clk=\clk, en=$abc$34781$abc$28239$auto$opt_dff.cc:219:make_patterns_logic$4979, arst=!\rstn, srst={ }
  35 cells in clk=\clk, en=$abc$37842$abc$30451$auto$opt_dff.cc:219:make_patterns_logic$4358, arst=!\rstn, srst={ }
  54 cells in clk=\clk, en=$abc$37887$abc$26459$auto$opt_dff.cc:219:make_patterns_logic$4674, arst=!\rstn, srst={ }
  76 cells in clk=\clk, en=$abc$33629$abc$26999$auto$opt_dff.cc:219:make_patterns_logic$5001, arst=!\rstn, srst={ }
  60 cells in clk=\clk, en=$abc$37963$abc$27621$auto$opt_dff.cc:219:make_patterns_logic$5112, arst=!\rstn, srst={ }
  87 cells in clk=\clk, en=$abc$38032$abc$30287$auto$opt_dff.cc:219:make_patterns_logic$4753, arst=!\rstn, srst={ }
  65 cells in clk=\clk, en=$abc$38124$abc$26262$auto$opt_dff.cc:194:make_patterns_logic$4660, arst=!\rstn, srst={ }
  91 cells in clk=\clk, en=$abc$38302$abc$31369$auto$opt_dff.cc:219:make_patterns_logic$4820, arst=!\rstn, srst={ }
  67 cells in clk=\clk, en=$abc$38199$abc$31734$auto$opt_dff.cc:219:make_patterns_logic$4657, arst=!\rstn, srst={ }
  840 cells in clk=\clk, en=$abc$36742$abc$28838$auto$opt_dff.cc:219:make_patterns_logic$5131, arst=!\rstn, srst={ }
  63 cells in clk=\clk, en=$abc$38394$abc$28291$auto$opt_dff.cc:219:make_patterns_logic$4636, arst=!\rstn, srst={ }
  82 cells in clk=\clk, en=$abc$35490$abc$31262$auto$opt_dff.cc:219:make_patterns_logic$4317, arst=!\rstn, srst={ }
  421 cells in clk=\clk, en=!$abc$38467$abc$29790$auto$opt_reduce.cc:134:opt_pmux$3971, arst=!\rstn, srst={ }
  112 cells in clk=\clk, en=$abc$39128$abc$28629$auto$opt_dff.cc:219:make_patterns_logic$4514, arst=!\rstn, srst={ }
  59 cells in clk=\clk, en=$abc$38908$abc$25804$auto$opt_dff.cc:219:make_patterns_logic$4951, arst=!\rstn, srst={ }
  79 cells in clk=\clk, en=$abc$35167$abc$27532$auto$opt_dff.cc:219:make_patterns_logic$5091, arst=!\rstn, srst={ }
  69 cells in clk=\clk, en=$abc$38965$abc$31582$auto$opt_dff.cc:219:make_patterns_logic$4572, arst=!\rstn, srst={ }
  44 cells in clk=\clk, en=!$abc$39067$abc$31517$auto$opt_reduce.cc:134:opt_pmux$4007, arst=!\rstn, srst={ }
  1204 cells in clk=\clk, en={ }, arst=!\rstn, srst={ }

3.109.2. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$33329$abc$30420$auto$opt_dff.cc:219:make_patterns_logic$4349, asynchronously reset by !\rstn
Extracted 28 gates and 53 wires to a netlist network with 25 inputs and 6 outputs.

3.109.2.1. Executing ABC.

3.109.3. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$33359$abc$26956$auto$opt_dff.cc:219:make_patterns_logic$4482, asynchronously reset by !\rstn
Extracted 25 gates and 42 wires to a netlist network with 17 inputs and 8 outputs.

3.109.3.1. Executing ABC.

3.109.4. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$33384$abc$31345$auto$opt_dff.cc:219:make_patterns_logic$4650, asynchronously reset by !\rstn
Extracted 13 gates and 26 wires to a netlist network with 13 inputs and 3 outputs.

3.109.4.1. Executing ABC.

3.109.5. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$33402$abc$31464$auto$opt_dff.cc:219:make_patterns_logic$4923, asynchronously reset by !\rstn
Extracted 10 gates and 22 wires to a netlist network with 12 inputs and 3 outputs.

3.109.5.1. Executing ABC.

3.109.6. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$33417$abc$31359$auto$opt_dff.cc:219:make_patterns_logic$4300, asynchronously reset by !\rstn
Extracted 32 gates and 82 wires to a netlist network with 50 inputs and 29 outputs.

3.109.6.1. Executing ABC.

3.109.7. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !$abc$33521$abc$31719$verific$n11617$208, asynchronously reset by !\rstn
Extracted 16 gates and 31 wires to a netlist network with 15 inputs and 9 outputs.

3.109.7.1. Executing ABC.

3.109.8. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$33583$abc$26337$auto$opt_dff.cc:219:make_patterns_logic$4383, asynchronously reset by !\rstn
Extracted 31 gates and 61 wires to a netlist network with 30 inputs and 27 outputs.

3.109.8.1. Executing ABC.

3.109.9. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$33617$abc$26712$auto$opt_dff.cc:219:make_patterns_logic$4410, asynchronously reset by !\rstn
Extracted 16 gates and 30 wires to a netlist network with 14 inputs and 6 outputs.

3.109.9.1. Executing ABC.

3.109.10. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$33714$abc$26052$auto$opt_dff.cc:219:make_patterns_logic$4859, asynchronously reset by !\rstn
Extracted 42 gates and 70 wires to a netlist network with 28 inputs and 11 outputs.

3.109.10.1. Executing ABC.

3.109.11. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$33756$abc$27264$auto$opt_dff.cc:219:make_patterns_logic$5046, asynchronously reset by !\rstn
Extracted 84 gates and 137 wires to a netlist network with 53 inputs and 31 outputs.

3.109.11.1. Executing ABC.

3.109.12. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$33930$abc$27688$auto$opt_dff.cc:219:make_patterns_logic$4762, asynchronously reset by !\rstn
Extracted 302 gates and 468 wires to a netlist network with 166 inputs and 70 outputs.

3.109.12.1. Executing ABC.

3.109.13. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !$abc$34320$abc$31477$verific$n11615$206, asynchronously reset by !\rstn
Extracted 14 gates and 28 wires to a netlist network with 14 inputs and 9 outputs.

3.109.13.1. Executing ABC.

3.109.14. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$34336$abc$31682$auto$opt_dff.cc:219:make_patterns_logic$4563, asynchronously reset by !\rstn
Extracted 38 gates and 62 wires to a netlist network with 24 inputs and 5 outputs.

3.109.14.1. Executing ABC.

3.109.15. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$34435$abc$25796$auto$opt_dff.cc:219:make_patterns_logic$4376, asynchronously reset by !\rstn
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 2 outputs.

3.109.15.1. Executing ABC.

3.109.16. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$34444$abc$27356$auto$opt_dff.cc:219:make_patterns_logic$5061, asynchronously reset by !\rstn
Extracted 80 gates and 130 wires to a netlist network with 50 inputs and 29 outputs.

3.109.16.1. Executing ABC.

3.109.17. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$34375$abc$26200$auto$opt_dff.cc:219:make_patterns_logic$4846, asynchronously reset by !\rstn
Extracted 60 gates and 68 wires to a netlist network with 8 inputs and 12 outputs.

3.109.17.1. Executing ABC.

3.109.18. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$34529$abc$27444$auto$opt_dff.cc:219:make_patterns_logic$5076, asynchronously reset by !\rstn
Extracted 72 gates and 114 wires to a netlist network with 42 inputs and 29 outputs.

3.109.18.1. Executing ABC.

3.109.19. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$33449$abc$31191$auto$opt_dff.cc:219:make_patterns_logic$4872, asynchronously reset by !\rstn
Extracted 72 gates and 85 wires to a netlist network with 13 inputs and 16 outputs.

3.109.19.1. Executing ABC.

3.109.20. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$34719$abc$30232$auto$opt_dff.cc:219:make_patterns_logic$4291, asynchronously reset by !\rstn
Extracted 32 gates and 49 wires to a netlist network with 17 inputs and 12 outputs.

3.109.20.1. Executing ABC.

3.109.21. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$34758$abc$31495$auto$opt_dff.cc:219:make_patterns_logic$4538, asynchronously reset by !\rstn
Extracted 20 gates and 35 wires to a netlist network with 14 inputs and 13 outputs.

3.109.21.1. Executing ABC.

3.109.22. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$34830$abc$28369$auto$opt_dff.cc:219:make_patterns_logic$4740, asynchronously reset by !\rstn
Extracted 107 gates and 223 wires to a netlist network with 116 inputs and 77 outputs.

3.109.22.1. Executing ABC.

3.109.23. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$34922$abc$28449$auto$opt_dff.cc:219:make_patterns_logic$4723, asynchronously reset by !\rstn
Extracted 72 gates and 158 wires to a netlist network with 86 inputs and 62 outputs.

3.109.23.1. Executing ABC.

3.109.24. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$35010$abc$28575$auto$opt_dff.cc:219:make_patterns_logic$4809, asynchronously reset by !\rstn
Extracted 51 gates and 71 wires to a netlist network with 20 inputs and 30 outputs.

3.109.24.1. Executing ABC.

3.109.25. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$35066$abc$28780$auto$opt_dff.cc:219:make_patterns_logic$4938, asynchronously reset by !\rstn
Extracted 12 gates and 21 wires to a netlist network with 9 inputs and 5 outputs.

3.109.25.1. Executing ABC.

3.109.26. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$35080$abc$26513$auto$opt_dff.cc:219:make_patterns_logic$4704, asynchronously reset by !\rstn
Extracted 85 gates and 170 wires to a netlist network with 85 inputs and 55 outputs.

3.109.26.1. Executing ABC.

3.109.27. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$35253$abc$25964$auto$opt_dff.cc:219:make_patterns_logic$4773, asynchronously reset by !\rstn
Extracted 99 gates and 151 wires to a netlist network with 52 inputs and 49 outputs.

3.109.27.1. Executing ABC.

3.109.28. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$35356$abc$25881$auto$opt_dff.cc:219:make_patterns_logic$4527, asynchronously reset by !\rstn
Extracted 117 gates and 183 wires to a netlist network with 66 inputs and 26 outputs.

3.109.28.1. Executing ABC.

3.109.29. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$34614$abc$26096$auto$opt_dff.cc:219:make_patterns_logic$4436, asynchronously reset by !\rstn
Extracted 56 gates and 113 wires to a netlist network with 57 inputs and 33 outputs.

3.109.29.1. Executing ABC.

3.109.30. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$35600$abc$30270$auto$opt_dff.cc:219:make_patterns_logic$4551, asynchronously reset by !\rstn
Extracted 17 gates and 26 wires to a netlist network with 9 inputs and 5 outputs.

3.109.30.1. Executing ABC.

3.109.31. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !$abc$35616$abc$25862$auto$opt_reduce.cc:134:opt_pmux$4023, asynchronously reset by !\rstn
Extracted 37 gates and 64 wires to a netlist network with 27 inputs and 18 outputs.

3.109.31.1. Executing ABC.

3.109.32. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$35660$abc$26724$auto$opt_dff.cc:219:make_patterns_logic$4421, asynchronously reset by !\rstn
Extracted 225 gates and 356 wires to a netlist network with 131 inputs and 85 outputs.

3.109.32.1. Executing ABC.

3.109.33. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$35889$abc$28158$auto$opt_dff.cc:219:make_patterns_logic$4602, asynchronously reset by !\rstn
Extracted 73 gates and 82 wires to a netlist network with 9 inputs and 29 outputs.

3.109.33.1. Executing ABC.

3.109.34. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$35970$abc$28060$auto$opt_dff.cc:219:make_patterns_logic$4278, asynchronously reset by !\rstn
Extracted 44 gates and 79 wires to a netlist network with 35 inputs and 33 outputs.

3.109.34.1. Executing ABC.

3.109.35. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$36068$abc$30469$auto$opt_dff.cc:219:make_patterns_logic$5121, asynchronously reset by !\rstn
Extracted 643 gates and 930 wires to a netlist network with 287 inputs and 215 outputs.

3.109.35.1. Executing ABC.

3.109.36. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$37617$abc$28047$auto$opt_dff.cc:219:make_patterns_logic$4835, asynchronously reset by !\rstn
Extracted 9 gates and 17 wires to a netlist network with 8 inputs and 2 outputs.

3.109.36.1. Executing ABC.

3.109.37. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$33542$abc$28796$auto$opt_dff.cc:219:make_patterns_logic$4908, asynchronously reset by !\rstn
Extracted 49 gates and 70 wires to a netlist network with 21 inputs and 27 outputs.

3.109.37.1. Executing ABC.

3.109.38. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$37629$abc$26373$auto$opt_dff.cc:219:make_patterns_logic$4986, asynchronously reset by !\rstn
Extracted 74 gates and 118 wires to a netlist network with 44 inputs and 29 outputs.

3.109.38.1. Executing ABC.

3.109.39. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$34234$abc$27087$auto$opt_dff.cc:219:make_patterns_logic$5016, asynchronously reset by !\rstn
Extracted 75 gates and 120 wires to a netlist network with 45 inputs and 29 outputs.

3.109.39.1. Executing ABC.

3.109.40. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$37713$abc$31070$auto$opt_dff.cc:219:make_patterns_logic$4326, asynchronously reset by !\rstn
Extracted 126 gates and 169 wires to a netlist network with 43 inputs and 35 outputs.

3.109.40.1. Executing ABC.

3.109.41. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$33845$abc$27176$auto$opt_dff.cc:219:make_patterns_logic$5031, asynchronously reset by !\rstn
Extracted 75 gates and 120 wires to a netlist network with 45 inputs and 28 outputs.

3.109.41.1. Executing ABC.

3.109.42. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$34781$abc$28239$auto$opt_dff.cc:219:make_patterns_logic$4979, asynchronously reset by !\rstn
Extracted 47 gates and 70 wires to a netlist network with 23 inputs and 15 outputs.

3.109.42.1. Executing ABC.

3.109.43. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$37842$abc$30451$auto$opt_dff.cc:219:make_patterns_logic$4358, asynchronously reset by !\rstn
Extracted 35 gates and 85 wires to a netlist network with 50 inputs and 29 outputs.

3.109.43.1. Executing ABC.

3.109.44. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$37887$abc$26459$auto$opt_dff.cc:219:make_patterns_logic$4674, asynchronously reset by !\rstn
Extracted 54 gates and 72 wires to a netlist network with 18 inputs and 21 outputs.

3.109.44.1. Executing ABC.

3.109.45. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$33629$abc$26999$auto$opt_dff.cc:219:make_patterns_logic$5001, asynchronously reset by !\rstn
Extracted 76 gates and 122 wires to a netlist network with 46 inputs and 28 outputs.

3.109.45.1. Executing ABC.

3.109.46. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$37963$abc$27621$auto$opt_dff.cc:219:make_patterns_logic$5112, asynchronously reset by !\rstn
Extracted 60 gates and 102 wires to a netlist network with 42 inputs and 28 outputs.

3.109.46.1. Executing ABC.

3.109.47. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$38032$abc$30287$auto$opt_dff.cc:219:make_patterns_logic$4753, asynchronously reset by !\rstn
Extracted 87 gates and 132 wires to a netlist network with 45 inputs and 7 outputs.

3.109.47.1. Executing ABC.

3.109.48. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$38124$abc$26262$auto$opt_dff.cc:194:make_patterns_logic$4660, asynchronously reset by !\rstn
Extracted 65 gates and 104 wires to a netlist network with 39 inputs and 29 outputs.

3.109.48.1. Executing ABC.

3.109.49. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$38302$abc$31369$auto$opt_dff.cc:219:make_patterns_logic$4820, asynchronously reset by !\rstn
Extracted 91 gates and 109 wires to a netlist network with 18 inputs and 16 outputs.

3.109.49.1. Executing ABC.

3.109.50. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$38199$abc$31734$auto$opt_dff.cc:219:make_patterns_logic$4657, asynchronously reset by !\rstn
Extracted 67 gates and 104 wires to a netlist network with 37 inputs and 34 outputs.

3.109.50.1. Executing ABC.

3.109.51. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$36742$abc$28838$auto$opt_dff.cc:219:make_patterns_logic$5131, asynchronously reset by !\rstn
Extracted 840 gates and 1001 wires to a netlist network with 161 inputs and 239 outputs.

3.109.51.1. Executing ABC.

3.109.52. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$38394$abc$28291$auto$opt_dff.cc:219:make_patterns_logic$4636, asynchronously reset by !\rstn
Extracted 63 gates and 88 wires to a netlist network with 25 inputs and 16 outputs.

3.109.52.1. Executing ABC.

3.109.53. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$35490$abc$31262$auto$opt_dff.cc:219:make_patterns_logic$4317, asynchronously reset by !\rstn
Extracted 82 gates and 144 wires to a netlist network with 62 inputs and 39 outputs.

3.109.53.1. Executing ABC.

3.109.54. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !$abc$38467$abc$29790$auto$opt_reduce.cc:134:opt_pmux$3971, asynchronously reset by !\rstn
Extracted 421 gates and 538 wires to a netlist network with 117 inputs and 61 outputs.

3.109.54.1. Executing ABC.

3.109.55. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$39128$abc$28629$auto$opt_dff.cc:219:make_patterns_logic$4514, asynchronously reset by !\rstn
Extracted 112 gates and 159 wires to a netlist network with 47 inputs and 40 outputs.

3.109.55.1. Executing ABC.

3.109.56. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$38908$abc$25804$auto$opt_dff.cc:219:make_patterns_logic$4951, asynchronously reset by !\rstn
Extracted 59 gates and 78 wires to a netlist network with 19 inputs and 13 outputs.

3.109.56.1. Executing ABC.

3.109.57. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$35167$abc$27532$auto$opt_dff.cc:219:make_patterns_logic$5091, asynchronously reset by !\rstn
Extracted 79 gates and 128 wires to a netlist network with 49 inputs and 28 outputs.

3.109.57.1. Executing ABC.

3.109.58. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$38965$abc$31582$auto$opt_dff.cc:219:make_patterns_logic$4572, asynchronously reset by !\rstn
Extracted 69 gates and 107 wires to a netlist network with 38 inputs and 35 outputs.

3.109.58.1. Executing ABC.

3.109.59. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !$abc$39067$abc$31517$auto$opt_reduce.cc:134:opt_pmux$4007, asynchronously reset by !\rstn
Extracted 44 gates and 72 wires to a netlist network with 28 inputs and 24 outputs.

3.109.59.1. Executing ABC.

3.109.60. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, asynchronously reset by !\rstn
Extracted 1184 gates and 1685 wires to a netlist network with 500 inputs and 431 outputs.

3.109.60.1. Executing ABC.

yosys> abc -dff

3.110. Executing ABC pass (technology mapping using ABC).

3.110.1. Summary of detected clock domains:
  27 cells in clk=\clk, en=$abc$40738$abc$33329$abc$30420$auto$opt_dff.cc:219:make_patterns_logic$4349, arst=!\rstn, srst={ }
  19 cells in clk=\clk, en=$abc$40767$abc$33359$abc$26956$auto$opt_dff.cc:219:make_patterns_logic$4482, arst=!\rstn, srst={ }
  13 cells in clk=\clk, en=$abc$40793$abc$33384$abc$31345$auto$opt_dff.cc:219:make_patterns_logic$4650, arst=!\rstn, srst={ }
  15 cells in clk=\clk, en=$abc$40807$abc$33402$abc$31464$auto$opt_dff.cc:219:make_patterns_logic$4923, arst=!\rstn, srst={ }
  32 cells in clk=\clk, en=$abc$40818$abc$33417$abc$31359$auto$opt_dff.cc:219:make_patterns_logic$4300, arst=!\rstn, srst={ }
  16 cells in clk=\clk, en=!$abc$40851$abc$33521$abc$31719$verific$n11617$208, arst=!\rstn, srst={ }
  28 cells in clk=\clk, en=$abc$40868$abc$33583$abc$26337$auto$opt_dff.cc:219:make_patterns_logic$4383, arst=!\rstn, srst={ }
  16 cells in clk=\clk, en=$abc$40901$abc$33617$abc$26712$auto$opt_dff.cc:219:make_patterns_logic$4410, arst=!\rstn, srst={ }
  40 cells in clk=\clk, en=$abc$40920$abc$33714$abc$26052$auto$opt_dff.cc:219:make_patterns_logic$4859, arst=!\rstn, srst={ }
  16 cells in clk=\clk, en=!$abc$41352$abc$34320$abc$31477$verific$n11615$206, arst=!\rstn, srst={ }
  35 cells in clk=\clk, en=$abc$41368$abc$34336$abc$31682$auto$opt_dff.cc:219:make_patterns_logic$4563, arst=!\rstn, srst={ }
  7 cells in clk=\clk, en=$abc$41403$abc$34435$abc$25796$auto$opt_dff.cc:219:make_patterns_logic$4376, arst=!\rstn, srst={ }
  81 cells in clk=\clk, en=$abc$41411$abc$34444$abc$27356$auto$opt_dff.cc:219:make_patterns_logic$5061, arst=!\rstn, srst={ }
  61 cells in clk=\clk, en=$abc$41496$abc$34375$abc$26200$auto$opt_dff.cc:219:make_patterns_logic$4846, arst=!\rstn, srst={ }
  302 cells in clk=\clk, en=$abc$41049$abc$33930$abc$27688$auto$opt_dff.cc:219:make_patterns_logic$4762, arst=!\rstn, srst={ }
  40 cells in clk=\clk, en=$abc$41715$abc$34719$abc$30232$auto$opt_dff.cc:219:make_patterns_logic$4291, arst=!\rstn, srst={ }
  97 cells in clk=\clk, en=$abc$41779$abc$34830$abc$28369$auto$opt_dff.cc:219:make_patterns_logic$4740, arst=!\rstn, srst={ }
  63 cells in clk=\clk, en=$abc$41883$abc$34922$abc$28449$auto$opt_dff.cc:219:make_patterns_logic$4723, arst=!\rstn, srst={ }
  53 cells in clk=\clk, en=$abc$41956$abc$35010$abc$28575$auto$opt_dff.cc:219:make_patterns_logic$4809, arst=!\rstn, srst={ }
  11 cells in clk=\clk, en=$abc$42012$abc$35066$abc$28780$auto$opt_dff.cc:219:make_patterns_logic$4938, arst=!\rstn, srst={ }
  79 cells in clk=\clk, en=$abc$41557$abc$34529$abc$27444$auto$opt_dff.cc:219:make_patterns_logic$5076, arst=!\rstn, srst={ }
  94 cells in clk=\clk, en=$abc$42026$abc$35080$abc$26513$auto$opt_dff.cc:219:make_patterns_logic$4704, arst=!\rstn, srst={ }
  87 cells in clk=\clk, en=$abc$42114$abc$35253$abc$25964$auto$opt_dff.cc:219:make_patterns_logic$4773, arst=!\rstn, srst={ }
  121 cells in clk=\clk, en=$abc$42220$abc$35356$abc$25881$auto$opt_dff.cc:219:make_patterns_logic$4527, arst=!\rstn, srst={ }
  14 cells in clk=\clk, en=$abc$42458$abc$35600$abc$30270$auto$opt_dff.cc:219:make_patterns_logic$4551, arst=!\rstn, srst={ }
  35 cells in clk=\clk, en=!$abc$42475$abc$35616$abc$25862$auto$opt_reduce.cc:134:opt_pmux$4023, arst=!\rstn, srst={ }
  266 cells in clk=\clk, en=$abc$42511$abc$35660$abc$26724$auto$opt_dff.cc:219:make_patterns_logic$4421, arst=!\rstn, srst={ }
  69 cells in clk=\clk, en=$abc$42738$abc$35889$abc$28158$auto$opt_dff.cc:219:make_patterns_logic$4602, arst=!\rstn, srst={ }
  39 cells in clk=\clk, en=$abc$42822$abc$35970$abc$28060$auto$opt_dff.cc:219:make_patterns_logic$4278, arst=!\rstn, srst={ }
  43 cells in clk=\clk, en=$abc$42353$abc$34614$abc$26096$auto$opt_dff.cc:219:make_patterns_logic$4436, arst=!\rstn, srst={ }
  79 cells in clk=\clk, en=$abc$40960$abc$33756$abc$27264$auto$opt_dff.cc:219:make_patterns_logic$5046, arst=!\rstn, srst={ }
  526 cells in clk=\clk, en=$abc$42920$abc$36068$abc$30469$auto$opt_dff.cc:219:make_patterns_logic$5121, arst=!\rstn, srst={ }
  8 cells in clk=\clk, en=$abc$43598$abc$37617$abc$28047$auto$opt_dff.cc:219:make_patterns_logic$4835, arst=!\rstn, srst={ }
  49 cells in clk=\clk, en=$abc$43608$abc$33542$abc$28796$auto$opt_dff.cc:219:make_patterns_logic$4908, arst=!\rstn, srst={ }
  72 cells in clk=\clk, en=$abc$43658$abc$37629$abc$26373$auto$opt_dff.cc:219:make_patterns_logic$4986, arst=!\rstn, srst={ }
  77 cells in clk=\clk, en=$abc$43742$abc$34234$abc$27087$auto$opt_dff.cc:219:make_patterns_logic$5016, arst=!\rstn, srst={ }
  122 cells in clk=\clk, en=$abc$43828$abc$37713$abc$31070$auto$opt_dff.cc:219:make_patterns_logic$4326, arst=!\rstn, srst={ }
  71 cells in clk=\clk, en=$abc$41642$abc$33449$abc$31191$auto$opt_dff.cc:219:make_patterns_logic$4872, arst=!\rstn, srst={ }
  44 cells in clk=\clk, en=!$abc$46594$abc$39067$abc$31517$auto$opt_reduce.cc:134:opt_pmux$4007, arst=!\rstn, srst={ }
  69 cells in clk=\clk, en=$abc$43956$abc$33845$abc$27176$auto$opt_dff.cc:219:make_patterns_logic$5031, arst=!\rstn, srst={ }
  46 cells in clk=\clk, en=$abc$44041$abc$34781$abc$28239$auto$opt_dff.cc:219:make_patterns_logic$4979, arst=!\rstn, srst={ }
  32 cells in clk=\clk, en=$abc$44091$abc$37842$abc$30451$auto$opt_dff.cc:219:make_patterns_logic$4358, arst=!\rstn, srst={ }
  65 cells in clk=\clk, en=$abc$44128$abc$37887$abc$26459$auto$opt_dff.cc:219:make_patterns_logic$4674, arst=!\rstn, srst={ }
  72 cells in clk=\clk, en=$abc$44193$abc$33629$abc$26999$auto$opt_dff.cc:219:make_patterns_logic$5001, arst=!\rstn, srst={ }
  63 cells in clk=\clk, en=$abc$44278$abc$37963$abc$27621$auto$opt_dff.cc:219:make_patterns_logic$5112, arst=!\rstn, srst={ }
  90 cells in clk=\clk, en=$abc$44346$abc$38032$abc$30287$auto$opt_dff.cc:219:make_patterns_logic$4753, arst=!\rstn, srst={ }
  23 cells in clk=\clk, en=$abc$41753$abc$34758$abc$31495$auto$opt_dff.cc:219:make_patterns_logic$4538, arst=!\rstn, srst={ }
  83 cells in clk=\clk, en=$abc$44436$abc$38124$abc$26262$auto$opt_dff.cc:194:make_patterns_logic$4660, arst=!\rstn, srst={ }
  72 cells in clk=\clk, en=$abc$46406$abc$35167$abc$27532$auto$opt_dff.cc:219:make_patterns_logic$5091, arst=!\rstn, srst={ }
  91 cells in clk=\clk, en=$abc$44511$abc$38302$abc$31369$auto$opt_dff.cc:219:make_patterns_logic$4820, arst=!\rstn, srst={ }
  66 cells in clk=\clk, en=$abc$44605$abc$38199$abc$31734$auto$opt_dff.cc:219:make_patterns_logic$4657, arst=!\rstn, srst={ }
  988 cells in clk=\clk, en=$abc$44705$abc$36742$abc$28838$auto$opt_dff.cc:219:make_patterns_logic$5131, arst=!\rstn, srst={ }
  62 cells in clk=\clk, en=$abc$45585$abc$38394$abc$28291$auto$opt_dff.cc:219:make_patterns_logic$4636, arst=!\rstn, srst={ }
  101 cells in clk=\clk, en=$abc$45659$abc$35490$abc$31262$auto$opt_dff.cc:219:make_patterns_logic$4317, arst=!\rstn, srst={ }
  71 cells in clk=\clk, en=$abc$46492$abc$38965$abc$31582$auto$opt_dff.cc:219:make_patterns_logic$4572, arst=!\rstn, srst={ }
  418 cells in clk=\clk, en=!$abc$45761$abc$38467$abc$29790$auto$opt_reduce.cc:134:opt_pmux$3971, arst=!\rstn, srst={ }
  112 cells in clk=\clk, en=$abc$46202$abc$39128$abc$28629$auto$opt_dff.cc:219:make_patterns_logic$4514, arst=!\rstn, srst={ }
  59 cells in clk=\clk, en=$abc$46347$abc$38908$abc$25804$auto$opt_dff.cc:219:make_patterns_logic$4951, arst=!\rstn, srst={ }
  1184 cells in clk=\clk, en={ }, arst=!\rstn, srst={ }

3.110.2. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$40738$abc$33329$abc$30420$auto$opt_dff.cc:219:make_patterns_logic$4349, asynchronously reset by !\rstn
Extracted 27 gates and 52 wires to a netlist network with 25 inputs and 5 outputs.

3.110.2.1. Executing ABC.

3.110.3. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$40767$abc$33359$abc$26956$auto$opt_dff.cc:219:make_patterns_logic$4482, asynchronously reset by !\rstn
Extracted 19 gates and 31 wires to a netlist network with 12 inputs and 7 outputs.

3.110.3.1. Executing ABC.

3.110.4. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$40793$abc$33384$abc$31345$auto$opt_dff.cc:219:make_patterns_logic$4650, asynchronously reset by !\rstn
Extracted 13 gates and 26 wires to a netlist network with 13 inputs and 3 outputs.

3.110.4.1. Executing ABC.

3.110.5. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$40807$abc$33402$abc$31464$auto$opt_dff.cc:219:make_patterns_logic$4923, asynchronously reset by !\rstn
Extracted 15 gates and 31 wires to a netlist network with 16 inputs and 4 outputs.

3.110.5.1. Executing ABC.

3.110.6. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$40818$abc$33417$abc$31359$auto$opt_dff.cc:219:make_patterns_logic$4300, asynchronously reset by !\rstn
Extracted 32 gates and 82 wires to a netlist network with 50 inputs and 29 outputs.

3.110.6.1. Executing ABC.

3.110.7. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !$abc$40851$abc$33521$abc$31719$verific$n11617$208, asynchronously reset by !\rstn
Extracted 16 gates and 31 wires to a netlist network with 15 inputs and 9 outputs.

3.110.7.1. Executing ABC.

3.110.8. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$40868$abc$33583$abc$26337$auto$opt_dff.cc:219:make_patterns_logic$4383, asynchronously reset by !\rstn
Extracted 28 gates and 56 wires to a netlist network with 28 inputs and 24 outputs.

3.110.8.1. Executing ABC.

3.110.9. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$40901$abc$33617$abc$26712$auto$opt_dff.cc:219:make_patterns_logic$4410, asynchronously reset by !\rstn
Extracted 16 gates and 29 wires to a netlist network with 13 inputs and 6 outputs.

3.110.9.1. Executing ABC.

3.110.10. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$40920$abc$33714$abc$26052$auto$opt_dff.cc:219:make_patterns_logic$4859, asynchronously reset by !\rstn
Extracted 40 gates and 69 wires to a netlist network with 29 inputs and 12 outputs.

3.110.10.1. Executing ABC.

3.110.11. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !$abc$41352$abc$34320$abc$31477$verific$n11615$206, asynchronously reset by !\rstn
Extracted 16 gates and 30 wires to a netlist network with 14 inputs and 11 outputs.

3.110.11.1. Executing ABC.

3.110.12. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$41368$abc$34336$abc$31682$auto$opt_dff.cc:219:make_patterns_logic$4563, asynchronously reset by !\rstn
Extracted 35 gates and 59 wires to a netlist network with 24 inputs and 6 outputs.

3.110.12.1. Executing ABC.

3.110.13. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$41403$abc$34435$abc$25796$auto$opt_dff.cc:219:make_patterns_logic$4376, asynchronously reset by !\rstn
Extracted 7 gates and 14 wires to a netlist network with 7 inputs and 3 outputs.

3.110.13.1. Executing ABC.

3.110.14. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$41411$abc$34444$abc$27356$auto$opt_dff.cc:219:make_patterns_logic$5061, asynchronously reset by !\rstn
Extracted 81 gates and 132 wires to a netlist network with 51 inputs and 30 outputs.

3.110.14.1. Executing ABC.

3.110.15. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$41496$abc$34375$abc$26200$auto$opt_dff.cc:219:make_patterns_logic$4846, asynchronously reset by !\rstn
Extracted 61 gates and 69 wires to a netlist network with 8 inputs and 13 outputs.

3.110.15.1. Executing ABC.

3.110.16. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$41049$abc$33930$abc$27688$auto$opt_dff.cc:219:make_patterns_logic$4762, asynchronously reset by !\rstn
Extracted 302 gates and 468 wires to a netlist network with 166 inputs and 70 outputs.

3.110.16.1. Executing ABC.

3.110.17. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$41715$abc$34719$abc$30232$auto$opt_dff.cc:219:make_patterns_logic$4291, asynchronously reset by !\rstn
Extracted 40 gates and 53 wires to a netlist network with 13 inputs and 9 outputs.

3.110.17.1. Executing ABC.

3.110.18. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$41779$abc$34830$abc$28369$auto$opt_dff.cc:219:make_patterns_logic$4740, asynchronously reset by !\rstn
Extracted 97 gates and 207 wires to a netlist network with 110 inputs and 72 outputs.

3.110.18.1. Executing ABC.

3.110.19. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$41883$abc$34922$abc$28449$auto$opt_dff.cc:219:make_patterns_logic$4723, asynchronously reset by !\rstn
Extracted 63 gates and 141 wires to a netlist network with 78 inputs and 54 outputs.

3.110.19.1. Executing ABC.

3.110.20. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$41956$abc$35010$abc$28575$auto$opt_dff.cc:219:make_patterns_logic$4809, asynchronously reset by !\rstn
Extracted 53 gates and 76 wires to a netlist network with 23 inputs and 29 outputs.

3.110.20.1. Executing ABC.

3.110.21. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$42012$abc$35066$abc$28780$auto$opt_dff.cc:219:make_patterns_logic$4938, asynchronously reset by !\rstn
Extracted 11 gates and 20 wires to a netlist network with 9 inputs and 4 outputs.

3.110.21.1. Executing ABC.

3.110.22. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$41557$abc$34529$abc$27444$auto$opt_dff.cc:219:make_patterns_logic$5076, asynchronously reset by !\rstn
Extracted 79 gates and 128 wires to a netlist network with 49 inputs and 30 outputs.

3.110.22.1. Executing ABC.

3.110.23. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$42026$abc$35080$abc$26513$auto$opt_dff.cc:219:make_patterns_logic$4704, asynchronously reset by !\rstn
Extracted 94 gates and 199 wires to a netlist network with 105 inputs and 64 outputs.

3.110.23.1. Executing ABC.

3.110.24. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$42114$abc$35253$abc$25964$auto$opt_dff.cc:219:make_patterns_logic$4773, asynchronously reset by !\rstn
Extracted 87 gates and 128 wires to a netlist network with 41 inputs and 35 outputs.

3.110.24.1. Executing ABC.

3.110.25. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$42220$abc$35356$abc$25881$auto$opt_dff.cc:219:make_patterns_logic$4527, asynchronously reset by !\rstn
Extracted 121 gates and 187 wires to a netlist network with 66 inputs and 26 outputs.

3.110.25.1. Executing ABC.

3.110.26. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$42458$abc$35600$abc$30270$auto$opt_dff.cc:219:make_patterns_logic$4551, asynchronously reset by !\rstn
Extracted 14 gates and 23 wires to a netlist network with 9 inputs and 4 outputs.

3.110.26.1. Executing ABC.

3.110.27. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !$abc$42475$abc$35616$abc$25862$auto$opt_reduce.cc:134:opt_pmux$4023, asynchronously reset by !\rstn
Extracted 35 gates and 61 wires to a netlist network with 26 inputs and 18 outputs.

3.110.27.1. Executing ABC.

3.110.28. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$42511$abc$35660$abc$26724$auto$opt_dff.cc:219:make_patterns_logic$4421, asynchronously reset by !\rstn
Extracted 206 gates and 335 wires to a netlist network with 129 inputs and 81 outputs.

3.110.28.1. Executing ABC.

3.110.29. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$42738$abc$35889$abc$28158$auto$opt_dff.cc:219:make_patterns_logic$4602, asynchronously reset by !\rstn
Extracted 69 gates and 78 wires to a netlist network with 9 inputs and 26 outputs.

3.110.29.1. Executing ABC.

3.110.30. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$42822$abc$35970$abc$28060$auto$opt_dff.cc:219:make_patterns_logic$4278, asynchronously reset by !\rstn
Extracted 39 gates and 74 wires to a netlist network with 35 inputs and 33 outputs.

3.110.30.1. Executing ABC.

3.110.31. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$42353$abc$34614$abc$26096$auto$opt_dff.cc:219:make_patterns_logic$4436, asynchronously reset by !\rstn
Extracted 43 gates and 87 wires to a netlist network with 44 inputs and 33 outputs.

3.110.31.1. Executing ABC.

3.110.32. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$40960$abc$33756$abc$27264$auto$opt_dff.cc:219:make_patterns_logic$5046, asynchronously reset by !\rstn
Extracted 79 gates and 128 wires to a netlist network with 49 inputs and 30 outputs.

3.110.32.1. Executing ABC.

3.110.33. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$42920$abc$36068$abc$30469$auto$opt_dff.cc:219:make_patterns_logic$5121, asynchronously reset by !\rstn
Extracted 526 gates and 691 wires to a netlist network with 165 inputs and 178 outputs.

3.110.33.1. Executing ABC.

3.110.34. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43598$abc$37617$abc$28047$auto$opt_dff.cc:219:make_patterns_logic$4835, asynchronously reset by !\rstn
Extracted 8 gates and 16 wires to a netlist network with 8 inputs and 2 outputs.

3.110.34.1. Executing ABC.

3.110.35. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43608$abc$33542$abc$28796$auto$opt_dff.cc:219:make_patterns_logic$4908, asynchronously reset by !\rstn
Extracted 49 gates and 70 wires to a netlist network with 21 inputs and 27 outputs.

3.110.35.1. Executing ABC.

3.110.36. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43658$abc$37629$abc$26373$auto$opt_dff.cc:219:make_patterns_logic$4986, asynchronously reset by !\rstn
Extracted 72 gates and 114 wires to a netlist network with 42 inputs and 29 outputs.

3.110.36.1. Executing ABC.

3.110.37. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43742$abc$34234$abc$27087$auto$opt_dff.cc:219:make_patterns_logic$5016, asynchronously reset by !\rstn
Extracted 77 gates and 124 wires to a netlist network with 47 inputs and 28 outputs.

3.110.37.1. Executing ABC.

3.110.38. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43828$abc$37713$abc$31070$auto$opt_dff.cc:219:make_patterns_logic$4326, asynchronously reset by !\rstn
Extracted 122 gates and 165 wires to a netlist network with 43 inputs and 34 outputs.

3.110.38.1. Executing ABC.

3.110.39. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$41642$abc$33449$abc$31191$auto$opt_dff.cc:219:make_patterns_logic$4872, asynchronously reset by !\rstn
Extracted 71 gates and 83 wires to a netlist network with 12 inputs and 15 outputs.

3.110.39.1. Executing ABC.

3.110.40. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !$abc$46594$abc$39067$abc$31517$auto$opt_reduce.cc:134:opt_pmux$4007, asynchronously reset by !\rstn
Extracted 44 gates and 73 wires to a netlist network with 29 inputs and 24 outputs.

3.110.40.1. Executing ABC.

3.110.41. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43956$abc$33845$abc$27176$auto$opt_dff.cc:219:make_patterns_logic$5031, asynchronously reset by !\rstn
Extracted 69 gates and 108 wires to a netlist network with 39 inputs and 28 outputs.

3.110.41.1. Executing ABC.

3.110.42. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$44041$abc$34781$abc$28239$auto$opt_dff.cc:219:make_patterns_logic$4979, asynchronously reset by !\rstn
Extracted 46 gates and 68 wires to a netlist network with 22 inputs and 13 outputs.

3.110.42.1. Executing ABC.

3.110.43. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$44091$abc$37842$abc$30451$auto$opt_dff.cc:219:make_patterns_logic$4358, asynchronously reset by !\rstn
Extracted 32 gates and 77 wires to a netlist network with 45 inputs and 26 outputs.

3.110.43.1. Executing ABC.

3.110.44. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$44128$abc$37887$abc$26459$auto$opt_dff.cc:219:make_patterns_logic$4674, asynchronously reset by !\rstn
Extracted 65 gates and 83 wires to a netlist network with 18 inputs and 21 outputs.

3.110.44.1. Executing ABC.

3.110.45. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$44193$abc$33629$abc$26999$auto$opt_dff.cc:219:make_patterns_logic$5001, asynchronously reset by !\rstn
Extracted 72 gates and 114 wires to a netlist network with 42 inputs and 28 outputs.

3.110.45.1. Executing ABC.

3.110.46. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$44278$abc$37963$abc$27621$auto$opt_dff.cc:219:make_patterns_logic$5112, asynchronously reset by !\rstn
Extracted 63 gates and 105 wires to a netlist network with 42 inputs and 28 outputs.

3.110.46.1. Executing ABC.

3.110.47. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$44346$abc$38032$abc$30287$auto$opt_dff.cc:219:make_patterns_logic$4753, asynchronously reset by !\rstn
Extracted 90 gates and 134 wires to a netlist network with 44 inputs and 8 outputs.

3.110.47.1. Executing ABC.

3.110.48. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$41753$abc$34758$abc$31495$auto$opt_dff.cc:219:make_patterns_logic$4538, asynchronously reset by !\rstn
Extracted 23 gates and 38 wires to a netlist network with 14 inputs and 15 outputs.

3.110.48.1. Executing ABC.

3.110.49. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$44436$abc$38124$abc$26262$auto$opt_dff.cc:194:make_patterns_logic$4660, asynchronously reset by !\rstn
Extracted 83 gates and 138 wires to a netlist network with 55 inputs and 29 outputs.

3.110.49.1. Executing ABC.

3.110.50. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$46406$abc$35167$abc$27532$auto$opt_dff.cc:219:make_patterns_logic$5091, asynchronously reset by !\rstn
Extracted 72 gates and 114 wires to a netlist network with 42 inputs and 28 outputs.

3.110.50.1. Executing ABC.

3.110.51. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$44511$abc$38302$abc$31369$auto$opt_dff.cc:219:make_patterns_logic$4820, asynchronously reset by !\rstn
Extracted 91 gates and 110 wires to a netlist network with 19 inputs and 15 outputs.

3.110.51.1. Executing ABC.

3.110.52. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$44605$abc$38199$abc$31734$auto$opt_dff.cc:219:make_patterns_logic$4657, asynchronously reset by !\rstn
Extracted 66 gates and 102 wires to a netlist network with 36 inputs and 34 outputs.

3.110.52.1. Executing ABC.

3.110.53. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$44705$abc$36742$abc$28838$auto$opt_dff.cc:219:make_patterns_logic$5131, asynchronously reset by !\rstn
Extracted 988 gates and 1231 wires to a netlist network with 243 inputs and 237 outputs.

3.110.53.1. Executing ABC.

3.110.54. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$45585$abc$38394$abc$28291$auto$opt_dff.cc:219:make_patterns_logic$4636, asynchronously reset by !\rstn
Extracted 62 gates and 87 wires to a netlist network with 25 inputs and 15 outputs.

3.110.54.1. Executing ABC.

3.110.55. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$45659$abc$35490$abc$31262$auto$opt_dff.cc:219:make_patterns_logic$4317, asynchronously reset by !\rstn
Extracted 101 gates and 178 wires to a netlist network with 77 inputs and 45 outputs.

3.110.55.1. Executing ABC.

3.110.56. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$46492$abc$38965$abc$31582$auto$opt_dff.cc:219:make_patterns_logic$4572, asynchronously reset by !\rstn
Extracted 71 gates and 110 wires to a netlist network with 39 inputs and 36 outputs.

3.110.56.1. Executing ABC.

3.110.57. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !$abc$45761$abc$38467$abc$29790$auto$opt_reduce.cc:134:opt_pmux$3971, asynchronously reset by !\rstn
Extracted 418 gates and 532 wires to a netlist network with 114 inputs and 60 outputs.

3.110.57.1. Executing ABC.

3.110.58. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$46202$abc$39128$abc$28629$auto$opt_dff.cc:219:make_patterns_logic$4514, asynchronously reset by !\rstn
Extracted 112 gates and 160 wires to a netlist network with 48 inputs and 40 outputs.

3.110.58.1. Executing ABC.

3.110.59. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$46347$abc$38908$abc$25804$auto$opt_dff.cc:219:make_patterns_logic$4951, asynchronously reset by !\rstn
Extracted 59 gates and 76 wires to a netlist network with 17 inputs and 12 outputs.

3.110.59.1. Executing ABC.

3.110.60. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, asynchronously reset by !\rstn
Extracted 1164 gates and 1655 wires to a netlist network with 490 inputs and 424 outputs.

3.110.60.1. Executing ABC.

yosys> opt_ffinv

3.111. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt_expr

3.112. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.
<suppressed ~35 debug messages>

yosys> opt_merge -nomux

3.113. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
<suppressed ~81 debug messages>
Removed a total of 27 cells.

yosys> opt_muxtree

3.114. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \conv2d..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.115. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \conv2d.
Performed a total of 0 changes.

yosys> opt_merge

3.116. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_share

3.117. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.118. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.119. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..
Removed 0 unused cells and 37841 unused wires.
<suppressed ~26 debug messages>

yosys> opt_expr

3.120. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.
MAX OPT ITERATION = 1

yosys> bmuxmap

3.121. Executing BMUXMAP pass.

yosys> demuxmap

3.122. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> abc -script /tmp/yosys_3BNwUV/abc_tmp_1.scr

3.123. Executing ABC pass (technology mapping using ABC).

3.123.1. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Extracted 5625 gates and 6767 wires to a netlist network with 1142 inputs and 1062 outputs.

3.123.1.1. Executing ABC.
DE:   #PIs = 1142  #Luts =  1913  Max Lvl =  16  Avg Lvl =   3.02  [   0.37 sec. at Pass 0]
DE:   #PIs = 1142  #Luts =  1733  Max Lvl =  11  Avg Lvl =   2.68  [   8.19 sec. at Pass 1]
DE:   #PIs = 1142  #Luts =  1706  Max Lvl =  10  Avg Lvl =   2.66  [   1.46 sec. at Pass 2]
DE:   #PIs = 1142  #Luts =  1697  Max Lvl =  10  Avg Lvl =   2.69  [   2.50 sec. at Pass 3]
DE:   #PIs = 1142  #Luts =  1684  Max Lvl =  10  Avg Lvl =   2.64  [   2.44 sec. at Pass 4]
DE:   #PIs = 1142  #Luts =  1676  Max Lvl =   9  Avg Lvl =   2.60  [   2.27 sec. at Pass 5]
DE:   #PIs = 1142  #Luts =  1670  Max Lvl =   9  Avg Lvl =   2.58  [   1.85 sec. at Pass 6]
DE:   #PIs = 1142  #Luts =  1662  Max Lvl =  10  Avg Lvl =   2.58  [   3.12 sec. at Pass 7]
DE:   #PIs = 1142  #Luts =  1662  Max Lvl =   9  Avg Lvl =   2.59  [   2.98 sec. at Pass 8]
DE:   #PIs = 1142  #Luts =  1657  Max Lvl =   9  Avg Lvl =   2.54  [   4.37 sec. at Pass 9]
DE:   #PIs = 1142  #Luts =  1657  Max Lvl =   9  Avg Lvl =   2.54  [   3.33 sec. at Pass 10]
DE:   #PIs = 1142  #Luts =  1656  Max Lvl =   9  Avg Lvl =   2.56  [   3.61 sec. at Pass 11]
DE:   #PIs = 1142  #Luts =  1652  Max Lvl =   9  Avg Lvl =   2.50  [   1.83 sec. at Pass 12]
DE:   #PIs = 1142  #Luts =  1650  Max Lvl =   9  Avg Lvl =   2.52  [   2.55 sec. at Pass 13]
DE:   #PIs = 1142  #Luts =  1650  Max Lvl =   9  Avg Lvl =   2.52  [   1.68 sec. at Pass 14]
DE:   #PIs = 1142  #Luts =  1649  Max Lvl =   9  Avg Lvl =   2.50  [   2.40 sec. at Pass 15]
DE:   #PIs = 1142  #Luts =  1649  Max Lvl =   9  Avg Lvl =   2.50  [   2.07 sec. at Pass 16]
DE:   #PIs = 1142  #Luts =  1649  Max Lvl =   9  Avg Lvl =   2.50  [   1.99 sec. at Pass 17]
DE:   #PIs = 1142  #Luts =  1649  Max Lvl =   9  Avg Lvl =   2.50  [   1.87 sec. at Pass 18]
DE:   #PIs = 1142  #Luts =  1649  Max Lvl =   9  Avg Lvl =   2.50  [   0.66 sec. at Pass 19]

yosys> opt_expr

3.124. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.

yosys> opt_merge -nomux

3.125. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.126. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \conv2d..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.127. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \conv2d.
Performed a total of 0 changes.

yosys> opt_merge

3.128. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_share

3.129. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.130. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.131. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..
Removed 0 unused cells and 6454 unused wires.
<suppressed ~5 debug messages>

yosys> opt_expr

3.132. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.
MAX OPT ITERATION = 1

yosys> opt_ffinv

3.133. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 25 inverters.

yosys> stat

3.134. Printing statistics.

=== conv2d ===

   Number of wires:               2542
   Number of wire bits:           8467
   Number of public wires:         398
   Number of public wire bits:    6322
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2648
     $_ALDFFE_PNP_                  60
     $_ALDFF_PN_                    20
     $_DFFE_PN0N_                   44
     $_DFFE_PN0P_                  651
     $_DFFE_PN1P_                    2
     $_DFF_PN0_                    236
     $_DFF_PN1_                     23
     $lut                         1612


yosys> shregmap -minlen 8 -maxlen 20

3.135. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.136. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.137. Printing statistics.

=== conv2d ===

   Number of wires:               2702
   Number of wire bits:           8627
   Number of public wires:         398
   Number of public wire bits:    6322
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2808
     $_DFFE_PN0N_                   44
     $_DFFE_PN0P_                  651
     $_DFFE_PN1P_                    2
     $_DFFSRE_PNNP_                 60
     $_DFFSR_PNN_                   20
     $_DFF_PN0_                    236
     $_DFF_PN1_                     23
     $_ORNOT_                       80
     $_OR_                          80
     $lut                         1612


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.138. Executing TECHMAP pass (map to technology primitives).

3.138.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.138.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.138.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFFE_PN0P_ for cells of type $_DFFE_PN0P_.
Using template \$_DFF_PN0_ for cells of type $_DFF_PN0_.
Using template \$_DFFSR_PNN_ for cells of type $_DFFSR_PNN_.
Using template \$_DFFSRE_PNNP_ for cells of type $_DFFSRE_PNNP_.
Using template \$_DFFE_PN0N_ for cells of type $_DFFE_PN0N_.
Using template \$_DFFE_PN1P_ for cells of type $_DFFE_PN1P_.
Using template \$_DFF_PN1_ for cells of type $_DFF_PN1_.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~2828 debug messages>

yosys> opt_expr -mux_undef

3.139. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.
<suppressed ~29370 debug messages>

yosys> simplemap

3.140. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.141. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.

yosys> opt_merge

3.142. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
<suppressed ~15207 debug messages>
Removed a total of 5069 cells.

yosys> opt_dff -nodffe -nosdff

3.143. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.144. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..
Removed 12 unused cells and 8245 unused wires.
<suppressed ~13 debug messages>

yosys> opt_expr

3.145. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.
<suppressed ~930 debug messages>

yosys> opt_merge -nomux

3.146. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.147. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \conv2d..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.148. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \conv2d.
Performed a total of 0 changes.

yosys> opt_merge

3.149. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_share

3.150. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.151. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.152. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..
Removed 0 unused cells and 226 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.153. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.
MAX OPT ITERATION = 1

yosys> abc -script /tmp/yosys_3BNwUV/abc_tmp_2.scr

3.154. Executing ABC pass (technology mapping using ABC).

3.154.1. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Extracted 7283 gates and 8390 wires to a netlist network with 1105 inputs and 1162 outputs.

3.154.1.1. Executing ABC.
DE:   #PIs = 1105  #Luts =  1752  Max Lvl =   9  Avg Lvl =   2.46  [   0.43 sec. at Pass 0]
DE:   #PIs = 1105  #Luts =  1752  Max Lvl =   9  Avg Lvl =   2.46  [   7.75 sec. at Pass 1]
DE:   #PIs = 1105  #Luts =  1752  Max Lvl =   9  Avg Lvl =   2.46  [   1.83 sec. at Pass 2]
DE:   #PIs = 1105  #Luts =  1752  Max Lvl =   9  Avg Lvl =   2.46  [   1.83 sec. at Pass 3]
DE:   #PIs = 1105  #Luts =  1752  Max Lvl =   9  Avg Lvl =   2.46  [   2.04 sec. at Pass 4]
DE:   #PIs = 1105  #Luts =  1752  Max Lvl =   9  Avg Lvl =   2.46  [   1.78 sec. at Pass 5]
DE:   #PIs = 1105  #Luts =  1752  Max Lvl =   9  Avg Lvl =   2.46  [   0.58 sec. at Pass 6]

yosys> opt_expr

3.155. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.

yosys> opt_merge -nomux

3.156. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.157. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \conv2d..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.158. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \conv2d.
Performed a total of 0 changes.

yosys> opt_merge

3.159. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_share

3.160. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.161. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.162. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..
Removed 0 unused cells and 6251 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.163. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.
MAX OPT ITERATION = 1

yosys> hierarchy -check

3.164. Executing HIERARCHY pass (managing design hierarchy).

3.164.1. Analyzing design hierarchy..
Top module:  \conv2d

3.164.2. Analyzing design hierarchy..
Top module:  \conv2d
Removed 0 unused modules.

yosys> stat

3.165. Printing statistics.

=== conv2d ===

   Number of wires:               2680
   Number of wire bits:           8605
   Number of public wires:         398
   Number of public wire bits:    6322
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2788
     $lut                         1752
     dffsre                       1036


yosys> opt_clean -purge

3.166. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..
Removed 0 unused cells and 293 unused wires.
<suppressed ~293 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.167. Executing Verilog backend.
Dumping module `\conv2d'.

Warnings: 80 unique messages, 80 total
End of script. Logfile hash: 35b9a810d6, CPU: user 38.02s system 0.28s, MEM: 124.55 MB peak
Yosys 0.18+10 (git sha1 a3cbfccc4, gcc 9.4.0-1ubuntu1~20.04.1 -fPIC -Os)
Time spent: 92% 6x abc (369 sec), 2% 26x opt_dff (10 sec), ...
real 136.08
user 363.94
sys 36.88
