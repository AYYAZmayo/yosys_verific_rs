
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.47
 Yosys 0.18+10 (git sha1 8217e4c48, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Apr22_SW_Release, released at Thu Apr 28 20:08:21 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k wb_conmax_defines.vh wb_conmax.v wb_conmax_arb.v wb_conmax_master_if.v wb_conmax_msel.v wb_conmax_pri_dec.v wb_conmax_pri_enc.v wb_conmax_rf.v wb_conmax_slave_if.v

yosys> verific -vlog2k wb_conmax_defines.vh wb_conmax.v wb_conmax_arb.v wb_conmax_master_if.v wb_conmax_msel.v wb_conmax_pri_dec.v wb_conmax_pri_enc.v wb_conmax_rf.v wb_conmax_slave_if.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Apr22_SW_Release, released at Thu Apr 28 20:08:21 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'wb_conmax_defines.vh'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'wb_conmax.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'wb_conmax_arb.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'wb_conmax_master_if.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'wb_conmax_msel.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'wb_conmax_pri_dec.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'wb_conmax_pri_enc.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'wb_conmax_rf.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'wb_conmax_slave_if.v'

yosys> read -sv wrapper_top.sv

yosys> verific -sv wrapper_top.sv

3. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Apr22_SW_Release, released at Thu Apr 28 20:08:21 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'wrapper_top.sv'
VERIFIC-WARNING [VERI-2418] wrapper_top.sv:3: parameter 'dw' declared inside compilation unit '$unit_wrapper_top_sv' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] wrapper_top.sv:4: parameter 'aw' declared inside compilation unit '$unit_wrapper_top_sv' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] wrapper_top.sv:5: parameter 'sw' declared inside compilation unit '$unit_wrapper_top_sv' shall be treated as localparam

yosys> synth_rs -top wb_conmax_top -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

4. Executing synth_rs pass: v0.4.57

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

4.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

4.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\RS_DSP2_MULT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_sim'.
Generating RTLIL representation for module `\dsp_t1_20x18x64'.
Generating RTLIL representation for module `\dsp_t1_10x9x32'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top wb_conmax_top

4.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] wb_conmax.v:60: compiling module 'wb_conmax_top'
VERIFIC-INFO [VERI-1018] wb_conmax_master_if.v:60: compiling module 'wb_conmax_master_if(sw=4)'
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:501: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:502: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:505: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:506: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:509: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:510: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:513: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:514: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:517: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:518: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:521: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:522: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:525: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:526: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:529: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:530: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:533: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:534: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:537: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:538: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:541: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:542: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:545: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:546: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:549: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:550: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:553: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:554: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:557: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:558: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:561: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_master_if.v:562: delay control is not supported for synthesis
VERIFIC-INFO [VERI-1018] wb_conmax_slave_if.v:60: compiling module 'wb_conmax_slave_if(sw=4)'
VERIFIC-WARNING [VERI-2371] wb_conmax_slave_if.v:252: delay control is not supported for synthesis
VERIFIC-INFO [VERI-1018] wb_conmax_arb.v:62: compiling module 'wb_conmax_arb'
VERIFIC-WARNING [VERI-2371] wb_conmax_arb.v:100: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_arb.v:101: delay control is not supported for synthesis
VERIFIC-INFO [VERI-1018] wb_conmax_msel.v:60: compiling module 'wb_conmax_msel(pri_sel=2'b10)'
VERIFIC-INFO [VERI-1018] wb_conmax_pri_enc.v:60: compiling module 'wb_conmax_pri_enc(pri_sel=2'b10)'
VERIFIC-INFO [VERI-1018] wb_conmax_pri_dec.v:60: compiling module 'wb_conmax_pri_dec(pri_sel=2'b10)'
VERIFIC-WARNING [VERI-2371] wb_conmax_msel.v:143: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_msel.v:145: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_slave_if.v:364: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_slave_if.v:367: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_slave_if.v:370: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_slave_if.v:373: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_slave_if.v:376: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_slave_if.v:379: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_slave_if.v:382: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_slave_if.v:385: delay control is not supported for synthesis
VERIFIC-INFO [VERI-1018] wb_conmax_rf.v:60: compiling module 'wb_conmax_rf(sw=4)'
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:180: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:183: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:187: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:189: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:192: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:194: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:197: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:199: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:202: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:204: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:207: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:209: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:212: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:214: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:217: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:219: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:222: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:224: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:227: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:229: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:232: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:234: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:237: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:239: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:242: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:244: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:247: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:249: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:252: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:254: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:257: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:259: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:262: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:264: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:268: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:271: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:272: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:273: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:274: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:275: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:276: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:277: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:278: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:279: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:280: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:281: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:282: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:283: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:284: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:285: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_conmax_rf.v:286: delay control is not supported for synthesis
Importing module wb_conmax_top.
Importing module wb_conmax_master_if(sw=4).
Importing module wb_conmax_rf(sw=4).
Importing module wb_conmax_slave_if(sw=4).
Importing module wb_conmax_arb.
Importing module wb_conmax_msel(pri_sel=2'b10).
Importing module wb_conmax_pri_enc(pri_sel=2'b10).
Importing module wb_conmax_pri_dec(pri_sel=2'b10).

4.3.1. Analyzing design hierarchy..
Top module:  \wb_conmax_top
Used module:     \wb_conmax_rf(sw=4)
Used module:     \wb_conmax_slave_if(sw=4)
Used module:         \wb_conmax_msel(pri_sel=2'b10)
Used module:             \wb_conmax_arb
Used module:             \wb_conmax_pri_enc(pri_sel=2'b10)
Used module:                 \wb_conmax_pri_dec(pri_sel=2'b10)
Used module:     \wb_conmax_master_if(sw=4)

4.3.2. Analyzing design hierarchy..
Top module:  \wb_conmax_top
Used module:     \wb_conmax_rf(sw=4)
Used module:     \wb_conmax_slave_if(sw=4)
Used module:         \wb_conmax_msel(pri_sel=2'b10)
Used module:             \wb_conmax_arb
Used module:             \wb_conmax_pri_enc(pri_sel=2'b10)
Used module:                 \wb_conmax_pri_dec(pri_sel=2'b10)
Used module:     \wb_conmax_master_if(sw=4)
Removed 0 unused modules.

yosys> proc

4.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

4.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

4.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

4.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

4.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

4.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

4.4.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

4.4.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

4.4.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

4.4.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

4.4.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

4.4.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

4.4.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_pri_dec(pri_sel=2'b10).
<suppressed ~4 debug messages>
Optimizing module wb_conmax_pri_enc(pri_sel=2'b10).
Optimizing module wb_conmax_msel(pri_sel=2'b10).
<suppressed ~9 debug messages>
Optimizing module wb_conmax_arb.
<suppressed ~1 debug messages>
Optimizing module wb_conmax_slave_if(sw=4).
<suppressed ~1 debug messages>
Optimizing module wb_conmax_rf(sw=4).
<suppressed ~2 debug messages>
Optimizing module wb_conmax_master_if(sw=4).
<suppressed ~1 debug messages>
Optimizing module wb_conmax_top.

yosys> flatten

4.5. Executing FLATTEN pass (flatten design).
Deleting now unused module wb_conmax_pri_dec(pri_sel=2'b10).
Deleting now unused module wb_conmax_pri_enc(pri_sel=2'b10).
Deleting now unused module wb_conmax_msel(pri_sel=2'b10).
Deleting now unused module wb_conmax_arb.
Deleting now unused module wb_conmax_slave_if(sw=4).
Deleting now unused module wb_conmax_rf(sw=4).
Deleting now unused module wb_conmax_master_if(sw=4).
<suppressed ~40 debug messages>

yosys> tribuf -logic

4.6. Executing TRIBUF pass.

yosys> deminout

4.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

4.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.
<suppressed ~1280 debug messages>

yosys> opt_clean

4.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..
Removed 2112 unused cells and 39243 unused wires.
<suppressed ~5288 debug messages>

yosys> check

4.10. Executing CHECK pass (checking for obvious problems).
Checking module wb_conmax_top...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

4.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

4.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

yosys> opt_merge -nomux

4.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
<suppressed ~1152 debug messages>
Removed a total of 384 cells.

yosys> opt_muxtree

4.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wb_conmax_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~934 debug messages>

yosys> opt_reduce

4.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wb_conmax_top.
Performed a total of 0 changes.

yosys> opt_merge

4.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

4.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $flatten\s9.\msel.\arb3.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s9.\msel.\arb2.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s9.\msel.\arb1.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s9.\msel.\arb0.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Removing never-active async load on $flatten\s9.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31578 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m3.$verific$s9_cyc_o_reg$wb_conmax_master_if.v:538$30758 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m3.$verific$s8_cyc_o_reg$wb_conmax_master_if.v:534$30756 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m3.$verific$s7_cyc_o_reg$wb_conmax_master_if.v:530$30754 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m3.$verific$s6_cyc_o_reg$wb_conmax_master_if.v:526$30752 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m3.$verific$s5_cyc_o_reg$wb_conmax_master_if.v:522$30750 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m3.$verific$s4_cyc_o_reg$wb_conmax_master_if.v:518$30748 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m3.$verific$s3_cyc_o_reg$wb_conmax_master_if.v:514$30746 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m3.$verific$s2_cyc_o_reg$wb_conmax_master_if.v:510$30744 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s8.\msel.\arb3.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s8.\msel.\arb2.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s8.\msel.\arb1.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s8.\msel.\arb0.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Removing never-active async load on $flatten\s8.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31578 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m3.$verific$s1_cyc_o_reg$wb_conmax_master_if.v:506$30742 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m3.$verific$s15_cyc_o_reg$wb_conmax_master_if.v:562$30770 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m3.$verific$s14_cyc_o_reg$wb_conmax_master_if.v:558$30768 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m3.$verific$s13_cyc_o_reg$wb_conmax_master_if.v:554$30766 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m3.$verific$s12_cyc_o_reg$wb_conmax_master_if.v:550$30764 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m3.$verific$s11_cyc_o_reg$wb_conmax_master_if.v:546$30762 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m3.$verific$s10_cyc_o_reg$wb_conmax_master_if.v:542$30760 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m3.$verific$s0_cyc_o_reg$wb_conmax_master_if.v:502$30740 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s7.\msel.\arb3.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s7.\msel.\arb2.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s7.\msel.\arb1.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s7.\msel.\arb0.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Removing never-active async load on $flatten\s7.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31578 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s6.\msel.\arb3.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s6.\msel.\arb2.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s6.\msel.\arb1.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s6.\msel.\arb0.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Removing never-active async load on $flatten\s6.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31578 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s5.\msel.\arb3.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s5.\msel.\arb2.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s5.\msel.\arb1.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s5.\msel.\arb0.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Removing never-active async load on $flatten\s5.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31578 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m2.$verific$s9_cyc_o_reg$wb_conmax_master_if.v:538$30758 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m2.$verific$s8_cyc_o_reg$wb_conmax_master_if.v:534$30756 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m2.$verific$s7_cyc_o_reg$wb_conmax_master_if.v:530$30754 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m2.$verific$s6_cyc_o_reg$wb_conmax_master_if.v:526$30752 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m2.$verific$s5_cyc_o_reg$wb_conmax_master_if.v:522$30750 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m2.$verific$s4_cyc_o_reg$wb_conmax_master_if.v:518$30748 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m2.$verific$s3_cyc_o_reg$wb_conmax_master_if.v:514$30746 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m2.$verific$s2_cyc_o_reg$wb_conmax_master_if.v:510$30744 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m2.$verific$s1_cyc_o_reg$wb_conmax_master_if.v:506$30742 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m2.$verific$s15_cyc_o_reg$wb_conmax_master_if.v:562$30770 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m2.$verific$s14_cyc_o_reg$wb_conmax_master_if.v:558$30768 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m2.$verific$s13_cyc_o_reg$wb_conmax_master_if.v:554$30766 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m2.$verific$s12_cyc_o_reg$wb_conmax_master_if.v:550$30764 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m2.$verific$s11_cyc_o_reg$wb_conmax_master_if.v:546$30762 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m2.$verific$s10_cyc_o_reg$wb_conmax_master_if.v:542$30760 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m2.$verific$s0_cyc_o_reg$wb_conmax_master_if.v:502$30740 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s4.\msel.\arb3.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s4.\msel.\arb2.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s4.\msel.\arb1.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s4.\msel.\arb0.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Removing never-active async load on $flatten\s4.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31578 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s3.\msel.\arb3.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s3.\msel.\arb2.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s3.\msel.\arb1.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s3.\msel.\arb0.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Removing never-active async load on $flatten\s3.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31578 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s2.\msel.\arb3.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s2.\msel.\arb2.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s2.\msel.\arb1.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s2.\msel.\arb0.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Removing never-active async load on $flatten\s2.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31578 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m1.$verific$s9_cyc_o_reg$wb_conmax_master_if.v:538$30758 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m1.$verific$s8_cyc_o_reg$wb_conmax_master_if.v:534$30756 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m1.$verific$s7_cyc_o_reg$wb_conmax_master_if.v:530$30754 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m1.$verific$s6_cyc_o_reg$wb_conmax_master_if.v:526$30752 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s15.\msel.\arb3.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s15.\msel.\arb2.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s15.\msel.\arb1.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s15.\msel.\arb0.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Removing never-active async load on $flatten\s15.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31578 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m1.$verific$s5_cyc_o_reg$wb_conmax_master_if.v:522$30750 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m1.$verific$s4_cyc_o_reg$wb_conmax_master_if.v:518$30748 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m1.$verific$s3_cyc_o_reg$wb_conmax_master_if.v:514$30746 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m1.$verific$s2_cyc_o_reg$wb_conmax_master_if.v:510$30744 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m1.$verific$s1_cyc_o_reg$wb_conmax_master_if.v:506$30742 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m1.$verific$s15_cyc_o_reg$wb_conmax_master_if.v:562$30770 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m1.$verific$s14_cyc_o_reg$wb_conmax_master_if.v:558$30768 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m1.$verific$s13_cyc_o_reg$wb_conmax_master_if.v:554$30766 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m1.$verific$s12_cyc_o_reg$wb_conmax_master_if.v:550$30764 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m1.$verific$s11_cyc_o_reg$wb_conmax_master_if.v:546$30762 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m1.$verific$s10_cyc_o_reg$wb_conmax_master_if.v:542$30760 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m1.$verific$s0_cyc_o_reg$wb_conmax_master_if.v:502$30740 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s14.\msel.\arb3.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s14.\msel.\arb2.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s14.\msel.\arb1.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s14.\msel.\arb0.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Removing never-active async load on $flatten\s14.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31578 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s13.\msel.\arb3.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s13.\msel.\arb2.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s13.\msel.\arb1.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s13.\msel.\arb0.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Removing never-active async load on $flatten\s13.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31578 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s12.\msel.\arb3.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s12.\msel.\arb2.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s12.\msel.\arb1.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s12.\msel.\arb0.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Removing never-active async load on $flatten\s12.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31578 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m0.$verific$s9_cyc_o_reg$wb_conmax_master_if.v:538$30758 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m0.$verific$s8_cyc_o_reg$wb_conmax_master_if.v:534$30756 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m0.$verific$s7_cyc_o_reg$wb_conmax_master_if.v:530$30754 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m0.$verific$s6_cyc_o_reg$wb_conmax_master_if.v:526$30752 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m0.$verific$s5_cyc_o_reg$wb_conmax_master_if.v:522$30750 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m0.$verific$s4_cyc_o_reg$wb_conmax_master_if.v:518$30748 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m0.$verific$s3_cyc_o_reg$wb_conmax_master_if.v:514$30746 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m0.$verific$s2_cyc_o_reg$wb_conmax_master_if.v:510$30744 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m0.$verific$s1_cyc_o_reg$wb_conmax_master_if.v:506$30742 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m0.$verific$s15_cyc_o_reg$wb_conmax_master_if.v:562$30770 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m0.$verific$s14_cyc_o_reg$wb_conmax_master_if.v:558$30768 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m0.$verific$s13_cyc_o_reg$wb_conmax_master_if.v:554$30766 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m0.$verific$s12_cyc_o_reg$wb_conmax_master_if.v:550$30764 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m0.$verific$s11_cyc_o_reg$wb_conmax_master_if.v:546$30762 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s11.\msel.\arb3.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s11.\msel.\arb2.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s11.\msel.\arb1.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s11.\msel.\arb0.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Removing never-active async load on $flatten\s11.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31578 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m0.$verific$s10_cyc_o_reg$wb_conmax_master_if.v:542$30760 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m0.$verific$s0_cyc_o_reg$wb_conmax_master_if.v:502$30740 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s10.\msel.\arb3.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s10.\msel.\arb2.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s10.\msel.\arb1.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s10.\msel.\arb0.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Removing never-active async load on $flatten\s10.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31578 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s1.\msel.\arb3.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s1.\msel.\arb2.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s1.\msel.\arb1.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s1.\msel.\arb0.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Removing never-active async load on $flatten\s1.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31578 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s0.\msel.\arb3.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s0.\msel.\arb2.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s0.\msel.\arb1.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\s0.\msel.\arb0.$verific$state_reg$wb_conmax_arb.v:101$31405 ($aldff) from module wb_conmax_top.
Removing never-active async load on $flatten\s0.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31578 ($aldff) from module wb_conmax_top.
Removing never-active async load on $flatten\rf.$verific$rf_dout_reg$wb_conmax_rf.v:287$31025 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\rf.$verific$conf9_reg$wb_conmax_rf.v:234$30998 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\rf.$verific$conf8_reg$wb_conmax_rf.v:229$30994 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\rf.$verific$conf7_reg$wb_conmax_rf.v:224$30990 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\rf.$verific$conf6_reg$wb_conmax_rf.v:219$30986 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\rf.$verific$conf5_reg$wb_conmax_rf.v:214$30982 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\rf.$verific$conf4_reg$wb_conmax_rf.v:209$30978 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\rf.$verific$conf3_reg$wb_conmax_rf.v:204$30974 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\rf.$verific$conf2_reg$wb_conmax_rf.v:199$30970 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\rf.$verific$conf1_reg$wb_conmax_rf.v:194$30966 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\rf.$verific$conf15_reg$wb_conmax_rf.v:264$31022 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\rf.$verific$conf14_reg$wb_conmax_rf.v:259$31018 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\rf.$verific$conf13_reg$wb_conmax_rf.v:254$31014 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\rf.$verific$conf12_reg$wb_conmax_rf.v:249$31010 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\rf.$verific$conf11_reg$wb_conmax_rf.v:244$31006 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\rf.$verific$conf10_reg$wb_conmax_rf.v:239$31002 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\rf.$verific$conf0_reg$wb_conmax_rf.v:189$30962 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m7.$verific$s9_cyc_o_reg$wb_conmax_master_if.v:538$30758 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m7.$verific$s8_cyc_o_reg$wb_conmax_master_if.v:534$30756 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m7.$verific$s7_cyc_o_reg$wb_conmax_master_if.v:530$30754 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m7.$verific$s6_cyc_o_reg$wb_conmax_master_if.v:526$30752 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m7.$verific$s5_cyc_o_reg$wb_conmax_master_if.v:522$30750 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m7.$verific$s4_cyc_o_reg$wb_conmax_master_if.v:518$30748 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m7.$verific$s3_cyc_o_reg$wb_conmax_master_if.v:514$30746 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m7.$verific$s2_cyc_o_reg$wb_conmax_master_if.v:510$30744 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m7.$verific$s1_cyc_o_reg$wb_conmax_master_if.v:506$30742 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m7.$verific$s15_cyc_o_reg$wb_conmax_master_if.v:562$30770 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m7.$verific$s14_cyc_o_reg$wb_conmax_master_if.v:558$30768 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m7.$verific$s13_cyc_o_reg$wb_conmax_master_if.v:554$30766 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m7.$verific$s12_cyc_o_reg$wb_conmax_master_if.v:550$30764 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m7.$verific$s11_cyc_o_reg$wb_conmax_master_if.v:546$30762 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m7.$verific$s10_cyc_o_reg$wb_conmax_master_if.v:542$30760 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m7.$verific$s0_cyc_o_reg$wb_conmax_master_if.v:502$30740 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m6.$verific$s9_cyc_o_reg$wb_conmax_master_if.v:538$30758 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m6.$verific$s8_cyc_o_reg$wb_conmax_master_if.v:534$30756 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m6.$verific$s7_cyc_o_reg$wb_conmax_master_if.v:530$30754 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m6.$verific$s6_cyc_o_reg$wb_conmax_master_if.v:526$30752 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m6.$verific$s5_cyc_o_reg$wb_conmax_master_if.v:522$30750 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m6.$verific$s4_cyc_o_reg$wb_conmax_master_if.v:518$30748 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m6.$verific$s3_cyc_o_reg$wb_conmax_master_if.v:514$30746 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m6.$verific$s2_cyc_o_reg$wb_conmax_master_if.v:510$30744 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m6.$verific$s1_cyc_o_reg$wb_conmax_master_if.v:506$30742 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m6.$verific$s15_cyc_o_reg$wb_conmax_master_if.v:562$30770 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m6.$verific$s14_cyc_o_reg$wb_conmax_master_if.v:558$30768 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m6.$verific$s13_cyc_o_reg$wb_conmax_master_if.v:554$30766 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m6.$verific$s12_cyc_o_reg$wb_conmax_master_if.v:550$30764 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m6.$verific$s11_cyc_o_reg$wb_conmax_master_if.v:546$30762 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m6.$verific$s10_cyc_o_reg$wb_conmax_master_if.v:542$30760 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m6.$verific$s0_cyc_o_reg$wb_conmax_master_if.v:502$30740 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m5.$verific$s9_cyc_o_reg$wb_conmax_master_if.v:538$30758 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m5.$verific$s8_cyc_o_reg$wb_conmax_master_if.v:534$30756 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m5.$verific$s7_cyc_o_reg$wb_conmax_master_if.v:530$30754 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m5.$verific$s6_cyc_o_reg$wb_conmax_master_if.v:526$30752 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m5.$verific$s5_cyc_o_reg$wb_conmax_master_if.v:522$30750 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m5.$verific$s4_cyc_o_reg$wb_conmax_master_if.v:518$30748 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m5.$verific$s3_cyc_o_reg$wb_conmax_master_if.v:514$30746 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m5.$verific$s2_cyc_o_reg$wb_conmax_master_if.v:510$30744 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m5.$verific$s1_cyc_o_reg$wb_conmax_master_if.v:506$30742 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m5.$verific$s15_cyc_o_reg$wb_conmax_master_if.v:562$30770 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m5.$verific$s14_cyc_o_reg$wb_conmax_master_if.v:558$30768 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m5.$verific$s13_cyc_o_reg$wb_conmax_master_if.v:554$30766 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m5.$verific$s12_cyc_o_reg$wb_conmax_master_if.v:550$30764 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m5.$verific$s11_cyc_o_reg$wb_conmax_master_if.v:546$30762 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m5.$verific$s10_cyc_o_reg$wb_conmax_master_if.v:542$30760 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m5.$verific$s0_cyc_o_reg$wb_conmax_master_if.v:502$30740 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m4.$verific$s9_cyc_o_reg$wb_conmax_master_if.v:538$30758 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m4.$verific$s8_cyc_o_reg$wb_conmax_master_if.v:534$30756 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m4.$verific$s7_cyc_o_reg$wb_conmax_master_if.v:530$30754 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m4.$verific$s6_cyc_o_reg$wb_conmax_master_if.v:526$30752 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m4.$verific$s5_cyc_o_reg$wb_conmax_master_if.v:522$30750 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m4.$verific$s4_cyc_o_reg$wb_conmax_master_if.v:518$30748 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m4.$verific$s3_cyc_o_reg$wb_conmax_master_if.v:514$30746 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m4.$verific$s2_cyc_o_reg$wb_conmax_master_if.v:510$30744 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m4.$verific$s1_cyc_o_reg$wb_conmax_master_if.v:506$30742 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m4.$verific$s15_cyc_o_reg$wb_conmax_master_if.v:562$30770 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m4.$verific$s14_cyc_o_reg$wb_conmax_master_if.v:558$30768 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m4.$verific$s13_cyc_o_reg$wb_conmax_master_if.v:554$30766 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m4.$verific$s12_cyc_o_reg$wb_conmax_master_if.v:550$30764 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m4.$verific$s11_cyc_o_reg$wb_conmax_master_if.v:546$30762 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m4.$verific$s10_cyc_o_reg$wb_conmax_master_if.v:542$30760 ($aldff) from module wb_conmax_top.
Changing const-value async load to async reset on $flatten\m4.$verific$s0_cyc_o_reg$wb_conmax_master_if.v:502$30740 ($aldff) from module wb_conmax_top.

yosys> opt_clean

4.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..
Removed 0 unused cells and 384 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

4.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

4.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

4.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wb_conmax_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~934 debug messages>

yosys> opt_reduce

4.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wb_conmax_top.
Performed a total of 0 changes.

yosys> opt_merge

4.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

4.11.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

4.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..

yosys> opt_expr

4.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

4.11.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

4.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

4.12.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

4.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

4.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

4.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..

yosys> fsm_opt

4.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

4.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

4.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

4.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat

4.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

4.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

yosys> opt_merge -nomux

4.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

4.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wb_conmax_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~934 debug messages>

yosys> opt_reduce

4.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wb_conmax_top.
Performed a total of 0 changes.

yosys> opt_merge

4.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
Removed a total of 0 cells.

yosys> opt_dff -sat

4.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $flatten\s9.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31578 ($dff) from module wb_conmax_top (D = $flatten\s9.\msel.$verific$n29$31525, Q = \s9.msel.pri_out, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$31785 ($sdff) from module wb_conmax_top (D = \s9.msel.pri_enc.pri_out1, Q = \s9.msel.pri_out).
Adding SRST signal on $flatten\s8.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31578 ($dff) from module wb_conmax_top (D = $flatten\s8.\msel.$verific$n29$31525, Q = \s8.msel.pri_out, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$31787 ($sdff) from module wb_conmax_top (D = \s8.msel.pri_enc.pri_out1, Q = \s8.msel.pri_out).
Adding SRST signal on $flatten\s7.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31578 ($dff) from module wb_conmax_top (D = $flatten\s7.\msel.$verific$n29$31525, Q = \s7.msel.pri_out, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$31789 ($sdff) from module wb_conmax_top (D = \s7.msel.pri_enc.pri_out1, Q = \s7.msel.pri_out).
Adding SRST signal on $flatten\s6.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31578 ($dff) from module wb_conmax_top (D = $flatten\s6.\msel.$verific$n29$31525, Q = \s6.msel.pri_out, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$31791 ($sdff) from module wb_conmax_top (D = \s6.msel.pri_enc.pri_out1, Q = \s6.msel.pri_out).
Adding SRST signal on $flatten\s5.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31578 ($dff) from module wb_conmax_top (D = $flatten\s5.\msel.$verific$n29$31525, Q = \s5.msel.pri_out, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$31793 ($sdff) from module wb_conmax_top (D = \s5.msel.pri_enc.pri_out1, Q = \s5.msel.pri_out).
Adding SRST signal on $flatten\s4.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31578 ($dff) from module wb_conmax_top (D = $flatten\s4.\msel.$verific$n29$31525, Q = \s4.msel.pri_out, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$31795 ($sdff) from module wb_conmax_top (D = \s4.msel.pri_enc.pri_out1, Q = \s4.msel.pri_out).
Adding SRST signal on $flatten\s3.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31578 ($dff) from module wb_conmax_top (D = $flatten\s3.\msel.$verific$n29$31525, Q = \s3.msel.pri_out, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$31797 ($sdff) from module wb_conmax_top (D = \s3.msel.pri_enc.pri_out1, Q = \s3.msel.pri_out).
Adding SRST signal on $flatten\s2.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31578 ($dff) from module wb_conmax_top (D = $flatten\s2.\msel.$verific$n29$31525, Q = \s2.msel.pri_out, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$31799 ($sdff) from module wb_conmax_top (D = \s2.msel.pri_enc.pri_out1, Q = \s2.msel.pri_out).
Adding SRST signal on $flatten\s15.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31578 ($dff) from module wb_conmax_top (D = $flatten\s15.\msel.$verific$n29$31525, Q = \s15.msel.pri_out, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$31801 ($sdff) from module wb_conmax_top (D = \s15.msel.pri_enc.pri_out1, Q = \s15.msel.pri_out).
Adding SRST signal on $flatten\s14.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31578 ($dff) from module wb_conmax_top (D = $flatten\s14.\msel.$verific$n29$31525, Q = \s14.msel.pri_out, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$31803 ($sdff) from module wb_conmax_top (D = \s14.msel.pri_enc.pri_out1, Q = \s14.msel.pri_out).
Adding SRST signal on $flatten\s13.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31578 ($dff) from module wb_conmax_top (D = $flatten\s13.\msel.$verific$n29$31525, Q = \s13.msel.pri_out, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$31805 ($sdff) from module wb_conmax_top (D = \s13.msel.pri_enc.pri_out1, Q = \s13.msel.pri_out).
Adding SRST signal on $flatten\s12.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31578 ($dff) from module wb_conmax_top (D = $flatten\s12.\msel.$verific$n29$31525, Q = \s12.msel.pri_out, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$31807 ($sdff) from module wb_conmax_top (D = \s12.msel.pri_enc.pri_out1, Q = \s12.msel.pri_out).
Adding SRST signal on $flatten\s11.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31578 ($dff) from module wb_conmax_top (D = $flatten\s11.\msel.$verific$n29$31525, Q = \s11.msel.pri_out, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$31809 ($sdff) from module wb_conmax_top (D = \s11.msel.pri_enc.pri_out1, Q = \s11.msel.pri_out).
Adding SRST signal on $flatten\s10.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31578 ($dff) from module wb_conmax_top (D = $flatten\s10.\msel.$verific$n29$31525, Q = \s10.msel.pri_out, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$31811 ($sdff) from module wb_conmax_top (D = \s10.msel.pri_enc.pri_out1, Q = \s10.msel.pri_out).
Adding SRST signal on $flatten\s1.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31578 ($dff) from module wb_conmax_top (D = $flatten\s1.\msel.$verific$n29$31525, Q = \s1.msel.pri_out, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$31813 ($sdff) from module wb_conmax_top (D = \s1.msel.pri_enc.pri_out1, Q = \s1.msel.pri_out).
Adding SRST signal on $flatten\s0.\msel.$verific$pri_out_reg$wb_conmax_msel.v:145$31578 ($dff) from module wb_conmax_top (D = $flatten\s0.\msel.$verific$n29$31525, Q = \s0.msel.pri_out, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$31815 ($sdff) from module wb_conmax_top (D = \s0.msel.pri_enc.pri_out1, Q = \s0.msel.pri_out).
Adding SRST signal on $flatten\rf.$verific$rf_dout_reg$wb_conmax_rf.v:287$31025 ($dff) from module wb_conmax_top (D = $flatten\rf.$verific$n1446$30938, Q = \rf.rf_dout, rval = 16'0000000000000000).
Adding EN signal on $flatten\rf.$verific$conf9_reg$wb_conmax_rf.v:234$30998 ($adff) from module wb_conmax_top (D = \s15.wb_data_o [15:0], Q = \rf.conf9).
Adding EN signal on $flatten\rf.$verific$conf8_reg$wb_conmax_rf.v:229$30994 ($adff) from module wb_conmax_top (D = \s15.wb_data_o [15:0], Q = \rf.conf8).
Adding EN signal on $flatten\rf.$verific$conf7_reg$wb_conmax_rf.v:224$30990 ($adff) from module wb_conmax_top (D = \s15.wb_data_o [15:0], Q = \rf.conf7).
Adding EN signal on $flatten\rf.$verific$conf6_reg$wb_conmax_rf.v:219$30986 ($adff) from module wb_conmax_top (D = \s15.wb_data_o [15:0], Q = \rf.conf6).
Adding EN signal on $flatten\rf.$verific$conf5_reg$wb_conmax_rf.v:214$30982 ($adff) from module wb_conmax_top (D = \s15.wb_data_o [15:0], Q = \rf.conf5).
Adding EN signal on $flatten\rf.$verific$conf4_reg$wb_conmax_rf.v:209$30978 ($adff) from module wb_conmax_top (D = \s15.wb_data_o [15:0], Q = \rf.conf4).
Adding EN signal on $flatten\rf.$verific$conf3_reg$wb_conmax_rf.v:204$30974 ($adff) from module wb_conmax_top (D = \s15.wb_data_o [15:0], Q = \rf.conf3).
Adding EN signal on $flatten\rf.$verific$conf2_reg$wb_conmax_rf.v:199$30970 ($adff) from module wb_conmax_top (D = \s15.wb_data_o [15:0], Q = \rf.conf2).
Adding EN signal on $flatten\rf.$verific$conf1_reg$wb_conmax_rf.v:194$30966 ($adff) from module wb_conmax_top (D = \s15.wb_data_o [15:0], Q = \rf.conf1).
Adding EN signal on $flatten\rf.$verific$conf15_reg$wb_conmax_rf.v:264$31022 ($adff) from module wb_conmax_top (D = \s15.wb_data_o [15:0], Q = \rf.conf15).
Adding EN signal on $flatten\rf.$verific$conf14_reg$wb_conmax_rf.v:259$31018 ($adff) from module wb_conmax_top (D = \s15.wb_data_o [15:0], Q = \rf.conf14).
Adding EN signal on $flatten\rf.$verific$conf13_reg$wb_conmax_rf.v:254$31014 ($adff) from module wb_conmax_top (D = \s15.wb_data_o [15:0], Q = \rf.conf13).
Adding EN signal on $flatten\rf.$verific$conf12_reg$wb_conmax_rf.v:249$31010 ($adff) from module wb_conmax_top (D = \s15.wb_data_o [15:0], Q = \rf.conf12).
Adding EN signal on $flatten\rf.$verific$conf11_reg$wb_conmax_rf.v:244$31006 ($adff) from module wb_conmax_top (D = \s15.wb_data_o [15:0], Q = \rf.conf11).
Adding EN signal on $flatten\rf.$verific$conf10_reg$wb_conmax_rf.v:239$31002 ($adff) from module wb_conmax_top (D = \s15.wb_data_o [15:0], Q = \rf.conf10).
Adding EN signal on $flatten\rf.$verific$conf0_reg$wb_conmax_rf.v:189$30962 ($adff) from module wb_conmax_top (D = \s15.wb_data_o [15:0], Q = \rf.conf0).
Adding EN signal on $flatten\m7.$verific$s9_cyc_o_reg$wb_conmax_master_if.v:538$30758 ($adff) from module wb_conmax_top (D = $flatten\m7.$verific$n1779$30487, Q = \m7.s9_cyc_o).
Adding EN signal on $flatten\m7.$verific$s8_cyc_o_reg$wb_conmax_master_if.v:534$30756 ($adff) from module wb_conmax_top (D = $flatten\m7.$verific$n1773$30484, Q = \m7.s8_cyc_o).
Adding EN signal on $flatten\m7.$verific$s7_cyc_o_reg$wb_conmax_master_if.v:530$30754 ($adff) from module wb_conmax_top (D = $flatten\m7.$verific$n1767$30481, Q = \m7.s7_cyc_o).
Adding EN signal on $flatten\m7.$verific$s6_cyc_o_reg$wb_conmax_master_if.v:526$30752 ($adff) from module wb_conmax_top (D = $flatten\m7.$verific$n1761$30478, Q = \m7.s6_cyc_o).
Adding EN signal on $flatten\m7.$verific$s5_cyc_o_reg$wb_conmax_master_if.v:522$30750 ($adff) from module wb_conmax_top (D = $flatten\m7.$verific$n1755$30475, Q = \m7.s5_cyc_o).
Adding EN signal on $flatten\m7.$verific$s4_cyc_o_reg$wb_conmax_master_if.v:518$30748 ($adff) from module wb_conmax_top (D = $flatten\m7.$verific$n1749$30472, Q = \m7.s4_cyc_o).
Adding EN signal on $flatten\m7.$verific$s3_cyc_o_reg$wb_conmax_master_if.v:514$30746 ($adff) from module wb_conmax_top (D = $flatten\m7.$verific$n1743$30469, Q = \m7.s3_cyc_o).
Adding EN signal on $flatten\m7.$verific$s2_cyc_o_reg$wb_conmax_master_if.v:510$30744 ($adff) from module wb_conmax_top (D = $flatten\m7.$verific$n1737$30466, Q = \m7.s2_cyc_o).
Adding EN signal on $flatten\m7.$verific$s1_cyc_o_reg$wb_conmax_master_if.v:506$30742 ($adff) from module wb_conmax_top (D = $flatten\m7.$verific$n1731$30463, Q = \m7.s1_cyc_o).
Adding EN signal on $flatten\m7.$verific$s15_cyc_o_reg$wb_conmax_master_if.v:562$30770 ($adff) from module wb_conmax_top (D = $flatten\m7.$verific$n1815$30505, Q = \m7.s15_cyc_o).
Adding EN signal on $flatten\m7.$verific$s14_cyc_o_reg$wb_conmax_master_if.v:558$30768 ($adff) from module wb_conmax_top (D = $flatten\m7.$verific$n1809$30502, Q = \m7.s14_cyc_o).
Adding EN signal on $flatten\m7.$verific$s13_cyc_o_reg$wb_conmax_master_if.v:554$30766 ($adff) from module wb_conmax_top (D = $flatten\m7.$verific$n1803$30499, Q = \m7.s13_cyc_o).
Adding EN signal on $flatten\m7.$verific$s12_cyc_o_reg$wb_conmax_master_if.v:550$30764 ($adff) from module wb_conmax_top (D = $flatten\m7.$verific$n1797$30496, Q = \m7.s12_cyc_o).
Adding EN signal on $flatten\m7.$verific$s11_cyc_o_reg$wb_conmax_master_if.v:546$30762 ($adff) from module wb_conmax_top (D = $flatten\m7.$verific$n1791$30493, Q = \m7.s11_cyc_o).
Adding EN signal on $flatten\m7.$verific$s10_cyc_o_reg$wb_conmax_master_if.v:542$30760 ($adff) from module wb_conmax_top (D = $flatten\m7.$verific$n1785$30490, Q = \m7.s10_cyc_o).
Adding EN signal on $flatten\m7.$verific$s0_cyc_o_reg$wb_conmax_master_if.v:502$30740 ($adff) from module wb_conmax_top (D = $flatten\m7.$verific$n1725$30460, Q = \m7.s0_cyc_o).
Adding EN signal on $flatten\m6.$verific$s9_cyc_o_reg$wb_conmax_master_if.v:538$30758 ($adff) from module wb_conmax_top (D = $flatten\m6.$verific$n1779$30487, Q = \m6.s9_cyc_o).
Adding EN signal on $flatten\m6.$verific$s8_cyc_o_reg$wb_conmax_master_if.v:534$30756 ($adff) from module wb_conmax_top (D = $flatten\m6.$verific$n1773$30484, Q = \m6.s8_cyc_o).
Adding EN signal on $flatten\m6.$verific$s7_cyc_o_reg$wb_conmax_master_if.v:530$30754 ($adff) from module wb_conmax_top (D = $flatten\m6.$verific$n1767$30481, Q = \m6.s7_cyc_o).
Adding EN signal on $flatten\m6.$verific$s6_cyc_o_reg$wb_conmax_master_if.v:526$30752 ($adff) from module wb_conmax_top (D = $flatten\m6.$verific$n1761$30478, Q = \m6.s6_cyc_o).
Adding EN signal on $flatten\m6.$verific$s5_cyc_o_reg$wb_conmax_master_if.v:522$30750 ($adff) from module wb_conmax_top (D = $flatten\m6.$verific$n1755$30475, Q = \m6.s5_cyc_o).
Adding EN signal on $flatten\m6.$verific$s4_cyc_o_reg$wb_conmax_master_if.v:518$30748 ($adff) from module wb_conmax_top (D = $flatten\m6.$verific$n1749$30472, Q = \m6.s4_cyc_o).
Adding EN signal on $flatten\m6.$verific$s3_cyc_o_reg$wb_conmax_master_if.v:514$30746 ($adff) from module wb_conmax_top (D = $flatten\m6.$verific$n1743$30469, Q = \m6.s3_cyc_o).
Adding EN signal on $flatten\m6.$verific$s2_cyc_o_reg$wb_conmax_master_if.v:510$30744 ($adff) from module wb_conmax_top (D = $flatten\m6.$verific$n1737$30466, Q = \m6.s2_cyc_o).
Adding EN signal on $flatten\m6.$verific$s1_cyc_o_reg$wb_conmax_master_if.v:506$30742 ($adff) from module wb_conmax_top (D = $flatten\m6.$verific$n1731$30463, Q = \m6.s1_cyc_o).
Adding EN signal on $flatten\m6.$verific$s15_cyc_o_reg$wb_conmax_master_if.v:562$30770 ($adff) from module wb_conmax_top (D = $flatten\m6.$verific$n1815$30505, Q = \m6.s15_cyc_o).
Adding EN signal on $flatten\m6.$verific$s14_cyc_o_reg$wb_conmax_master_if.v:558$30768 ($adff) from module wb_conmax_top (D = $flatten\m6.$verific$n1809$30502, Q = \m6.s14_cyc_o).
Adding EN signal on $flatten\m6.$verific$s13_cyc_o_reg$wb_conmax_master_if.v:554$30766 ($adff) from module wb_conmax_top (D = $flatten\m6.$verific$n1803$30499, Q = \m6.s13_cyc_o).
Adding EN signal on $flatten\m6.$verific$s12_cyc_o_reg$wb_conmax_master_if.v:550$30764 ($adff) from module wb_conmax_top (D = $flatten\m6.$verific$n1797$30496, Q = \m6.s12_cyc_o).
Adding EN signal on $flatten\m6.$verific$s11_cyc_o_reg$wb_conmax_master_if.v:546$30762 ($adff) from module wb_conmax_top (D = $flatten\m6.$verific$n1791$30493, Q = \m6.s11_cyc_o).
Adding EN signal on $flatten\m6.$verific$s10_cyc_o_reg$wb_conmax_master_if.v:542$30760 ($adff) from module wb_conmax_top (D = $flatten\m6.$verific$n1785$30490, Q = \m6.s10_cyc_o).
Adding EN signal on $flatten\m6.$verific$s0_cyc_o_reg$wb_conmax_master_if.v:502$30740 ($adff) from module wb_conmax_top (D = $flatten\m6.$verific$n1725$30460, Q = \m6.s0_cyc_o).
Adding EN signal on $flatten\m5.$verific$s9_cyc_o_reg$wb_conmax_master_if.v:538$30758 ($adff) from module wb_conmax_top (D = $flatten\m5.$verific$n1779$30487, Q = \m5.s9_cyc_o).
Adding EN signal on $flatten\m5.$verific$s8_cyc_o_reg$wb_conmax_master_if.v:534$30756 ($adff) from module wb_conmax_top (D = $flatten\m5.$verific$n1773$30484, Q = \m5.s8_cyc_o).
Adding EN signal on $flatten\m5.$verific$s7_cyc_o_reg$wb_conmax_master_if.v:530$30754 ($adff) from module wb_conmax_top (D = $flatten\m5.$verific$n1767$30481, Q = \m5.s7_cyc_o).
Adding EN signal on $flatten\m5.$verific$s6_cyc_o_reg$wb_conmax_master_if.v:526$30752 ($adff) from module wb_conmax_top (D = $flatten\m5.$verific$n1761$30478, Q = \m5.s6_cyc_o).
Adding EN signal on $flatten\m5.$verific$s5_cyc_o_reg$wb_conmax_master_if.v:522$30750 ($adff) from module wb_conmax_top (D = $flatten\m5.$verific$n1755$30475, Q = \m5.s5_cyc_o).
Adding EN signal on $flatten\m5.$verific$s4_cyc_o_reg$wb_conmax_master_if.v:518$30748 ($adff) from module wb_conmax_top (D = $flatten\m5.$verific$n1749$30472, Q = \m5.s4_cyc_o).
Adding EN signal on $flatten\m5.$verific$s3_cyc_o_reg$wb_conmax_master_if.v:514$30746 ($adff) from module wb_conmax_top (D = $flatten\m5.$verific$n1743$30469, Q = \m5.s3_cyc_o).
Adding EN signal on $flatten\m5.$verific$s2_cyc_o_reg$wb_conmax_master_if.v:510$30744 ($adff) from module wb_conmax_top (D = $flatten\m5.$verific$n1737$30466, Q = \m5.s2_cyc_o).
Adding EN signal on $flatten\m5.$verific$s1_cyc_o_reg$wb_conmax_master_if.v:506$30742 ($adff) from module wb_conmax_top (D = $flatten\m5.$verific$n1731$30463, Q = \m5.s1_cyc_o).
Adding EN signal on $flatten\m5.$verific$s15_cyc_o_reg$wb_conmax_master_if.v:562$30770 ($adff) from module wb_conmax_top (D = $flatten\m5.$verific$n1815$30505, Q = \m5.s15_cyc_o).
Adding EN signal on $flatten\m5.$verific$s14_cyc_o_reg$wb_conmax_master_if.v:558$30768 ($adff) from module wb_conmax_top (D = $flatten\m5.$verific$n1809$30502, Q = \m5.s14_cyc_o).
Adding EN signal on $flatten\m5.$verific$s13_cyc_o_reg$wb_conmax_master_if.v:554$30766 ($adff) from module wb_conmax_top (D = $flatten\m5.$verific$n1803$30499, Q = \m5.s13_cyc_o).
Adding EN signal on $flatten\m5.$verific$s12_cyc_o_reg$wb_conmax_master_if.v:550$30764 ($adff) from module wb_conmax_top (D = $flatten\m5.$verific$n1797$30496, Q = \m5.s12_cyc_o).
Adding EN signal on $flatten\m5.$verific$s11_cyc_o_reg$wb_conmax_master_if.v:546$30762 ($adff) from module wb_conmax_top (D = $flatten\m5.$verific$n1791$30493, Q = \m5.s11_cyc_o).
Adding EN signal on $flatten\m5.$verific$s10_cyc_o_reg$wb_conmax_master_if.v:542$30760 ($adff) from module wb_conmax_top (D = $flatten\m5.$verific$n1785$30490, Q = \m5.s10_cyc_o).
Adding EN signal on $flatten\m5.$verific$s0_cyc_o_reg$wb_conmax_master_if.v:502$30740 ($adff) from module wb_conmax_top (D = $flatten\m5.$verific$n1725$30460, Q = \m5.s0_cyc_o).
Adding EN signal on $flatten\m4.$verific$s9_cyc_o_reg$wb_conmax_master_if.v:538$30758 ($adff) from module wb_conmax_top (D = $flatten\m4.$verific$n1779$30487, Q = \m4.s9_cyc_o).
Adding EN signal on $flatten\m4.$verific$s8_cyc_o_reg$wb_conmax_master_if.v:534$30756 ($adff) from module wb_conmax_top (D = $flatten\m4.$verific$n1773$30484, Q = \m4.s8_cyc_o).
Adding EN signal on $flatten\m4.$verific$s7_cyc_o_reg$wb_conmax_master_if.v:530$30754 ($adff) from module wb_conmax_top (D = $flatten\m4.$verific$n1767$30481, Q = \m4.s7_cyc_o).
Adding EN signal on $flatten\m4.$verific$s6_cyc_o_reg$wb_conmax_master_if.v:526$30752 ($adff) from module wb_conmax_top (D = $flatten\m4.$verific$n1761$30478, Q = \m4.s6_cyc_o).
Adding EN signal on $flatten\m4.$verific$s5_cyc_o_reg$wb_conmax_master_if.v:522$30750 ($adff) from module wb_conmax_top (D = $flatten\m4.$verific$n1755$30475, Q = \m4.s5_cyc_o).
Adding EN signal on $flatten\m4.$verific$s4_cyc_o_reg$wb_conmax_master_if.v:518$30748 ($adff) from module wb_conmax_top (D = $flatten\m4.$verific$n1749$30472, Q = \m4.s4_cyc_o).
Adding EN signal on $flatten\m4.$verific$s3_cyc_o_reg$wb_conmax_master_if.v:514$30746 ($adff) from module wb_conmax_top (D = $flatten\m4.$verific$n1743$30469, Q = \m4.s3_cyc_o).
Adding EN signal on $flatten\m4.$verific$s2_cyc_o_reg$wb_conmax_master_if.v:510$30744 ($adff) from module wb_conmax_top (D = $flatten\m4.$verific$n1737$30466, Q = \m4.s2_cyc_o).
Adding EN signal on $flatten\m4.$verific$s1_cyc_o_reg$wb_conmax_master_if.v:506$30742 ($adff) from module wb_conmax_top (D = $flatten\m4.$verific$n1731$30463, Q = \m4.s1_cyc_o).
Adding EN signal on $flatten\m4.$verific$s15_cyc_o_reg$wb_conmax_master_if.v:562$30770 ($adff) from module wb_conmax_top (D = $flatten\m4.$verific$n1815$30505, Q = \m4.s15_cyc_o).
Adding EN signal on $flatten\m4.$verific$s14_cyc_o_reg$wb_conmax_master_if.v:558$30768 ($adff) from module wb_conmax_top (D = $flatten\m4.$verific$n1809$30502, Q = \m4.s14_cyc_o).
Adding EN signal on $flatten\m4.$verific$s13_cyc_o_reg$wb_conmax_master_if.v:554$30766 ($adff) from module wb_conmax_top (D = $flatten\m4.$verific$n1803$30499, Q = \m4.s13_cyc_o).
Adding EN signal on $flatten\m4.$verific$s12_cyc_o_reg$wb_conmax_master_if.v:550$30764 ($adff) from module wb_conmax_top (D = $flatten\m4.$verific$n1797$30496, Q = \m4.s12_cyc_o).
Adding EN signal on $flatten\m4.$verific$s11_cyc_o_reg$wb_conmax_master_if.v:546$30762 ($adff) from module wb_conmax_top (D = $flatten\m4.$verific$n1791$30493, Q = \m4.s11_cyc_o).
Adding EN signal on $flatten\m4.$verific$s10_cyc_o_reg$wb_conmax_master_if.v:542$30760 ($adff) from module wb_conmax_top (D = $flatten\m4.$verific$n1785$30490, Q = \m4.s10_cyc_o).
Adding EN signal on $flatten\m4.$verific$s0_cyc_o_reg$wb_conmax_master_if.v:502$30740 ($adff) from module wb_conmax_top (D = $flatten\m4.$verific$n1725$30460, Q = \m4.s0_cyc_o).
Adding EN signal on $flatten\m3.$verific$s9_cyc_o_reg$wb_conmax_master_if.v:538$30758 ($adff) from module wb_conmax_top (D = $flatten\m3.$verific$n1779$30487, Q = \m3.s9_cyc_o).
Adding EN signal on $flatten\m3.$verific$s8_cyc_o_reg$wb_conmax_master_if.v:534$30756 ($adff) from module wb_conmax_top (D = $flatten\m3.$verific$n1773$30484, Q = \m3.s8_cyc_o).
Adding EN signal on $flatten\m3.$verific$s7_cyc_o_reg$wb_conmax_master_if.v:530$30754 ($adff) from module wb_conmax_top (D = $flatten\m3.$verific$n1767$30481, Q = \m3.s7_cyc_o).
Adding EN signal on $flatten\m3.$verific$s6_cyc_o_reg$wb_conmax_master_if.v:526$30752 ($adff) from module wb_conmax_top (D = $flatten\m3.$verific$n1761$30478, Q = \m3.s6_cyc_o).
Adding EN signal on $flatten\m3.$verific$s5_cyc_o_reg$wb_conmax_master_if.v:522$30750 ($adff) from module wb_conmax_top (D = $flatten\m3.$verific$n1755$30475, Q = \m3.s5_cyc_o).
Adding EN signal on $flatten\m3.$verific$s4_cyc_o_reg$wb_conmax_master_if.v:518$30748 ($adff) from module wb_conmax_top (D = $flatten\m3.$verific$n1749$30472, Q = \m3.s4_cyc_o).
Adding EN signal on $flatten\m3.$verific$s3_cyc_o_reg$wb_conmax_master_if.v:514$30746 ($adff) from module wb_conmax_top (D = $flatten\m3.$verific$n1743$30469, Q = \m3.s3_cyc_o).
Adding EN signal on $flatten\m3.$verific$s2_cyc_o_reg$wb_conmax_master_if.v:510$30744 ($adff) from module wb_conmax_top (D = $flatten\m3.$verific$n1737$30466, Q = \m3.s2_cyc_o).
Adding EN signal on $flatten\m3.$verific$s1_cyc_o_reg$wb_conmax_master_if.v:506$30742 ($adff) from module wb_conmax_top (D = $flatten\m3.$verific$n1731$30463, Q = \m3.s1_cyc_o).
Adding EN signal on $flatten\m3.$verific$s15_cyc_o_reg$wb_conmax_master_if.v:562$30770 ($adff) from module wb_conmax_top (D = $flatten\m3.$verific$n1815$30505, Q = \m3.s15_cyc_o).
Adding EN signal on $flatten\m3.$verific$s14_cyc_o_reg$wb_conmax_master_if.v:558$30768 ($adff) from module wb_conmax_top (D = $flatten\m3.$verific$n1809$30502, Q = \m3.s14_cyc_o).
Adding EN signal on $flatten\m3.$verific$s13_cyc_o_reg$wb_conmax_master_if.v:554$30766 ($adff) from module wb_conmax_top (D = $flatten\m3.$verific$n1803$30499, Q = \m3.s13_cyc_o).
Adding EN signal on $flatten\m3.$verific$s12_cyc_o_reg$wb_conmax_master_if.v:550$30764 ($adff) from module wb_conmax_top (D = $flatten\m3.$verific$n1797$30496, Q = \m3.s12_cyc_o).
Adding EN signal on $flatten\m3.$verific$s11_cyc_o_reg$wb_conmax_master_if.v:546$30762 ($adff) from module wb_conmax_top (D = $flatten\m3.$verific$n1791$30493, Q = \m3.s11_cyc_o).
Adding EN signal on $flatten\m3.$verific$s10_cyc_o_reg$wb_conmax_master_if.v:542$30760 ($adff) from module wb_conmax_top (D = $flatten\m3.$verific$n1785$30490, Q = \m3.s10_cyc_o).
Adding EN signal on $flatten\m3.$verific$s0_cyc_o_reg$wb_conmax_master_if.v:502$30740 ($adff) from module wb_conmax_top (D = $flatten\m3.$verific$n1725$30460, Q = \m3.s0_cyc_o).
Adding EN signal on $flatten\m2.$verific$s9_cyc_o_reg$wb_conmax_master_if.v:538$30758 ($adff) from module wb_conmax_top (D = $flatten\m2.$verific$n1779$30487, Q = \m2.s9_cyc_o).
Adding EN signal on $flatten\m2.$verific$s8_cyc_o_reg$wb_conmax_master_if.v:534$30756 ($adff) from module wb_conmax_top (D = $flatten\m2.$verific$n1773$30484, Q = \m2.s8_cyc_o).
Adding EN signal on $flatten\m2.$verific$s7_cyc_o_reg$wb_conmax_master_if.v:530$30754 ($adff) from module wb_conmax_top (D = $flatten\m2.$verific$n1767$30481, Q = \m2.s7_cyc_o).
Adding EN signal on $flatten\m2.$verific$s6_cyc_o_reg$wb_conmax_master_if.v:526$30752 ($adff) from module wb_conmax_top (D = $flatten\m2.$verific$n1761$30478, Q = \m2.s6_cyc_o).
Adding EN signal on $flatten\m2.$verific$s5_cyc_o_reg$wb_conmax_master_if.v:522$30750 ($adff) from module wb_conmax_top (D = $flatten\m2.$verific$n1755$30475, Q = \m2.s5_cyc_o).
Adding EN signal on $flatten\m2.$verific$s4_cyc_o_reg$wb_conmax_master_if.v:518$30748 ($adff) from module wb_conmax_top (D = $flatten\m2.$verific$n1749$30472, Q = \m2.s4_cyc_o).
Adding EN signal on $flatten\m2.$verific$s3_cyc_o_reg$wb_conmax_master_if.v:514$30746 ($adff) from module wb_conmax_top (D = $flatten\m2.$verific$n1743$30469, Q = \m2.s3_cyc_o).
Adding EN signal on $flatten\m2.$verific$s2_cyc_o_reg$wb_conmax_master_if.v:510$30744 ($adff) from module wb_conmax_top (D = $flatten\m2.$verific$n1737$30466, Q = \m2.s2_cyc_o).
Adding EN signal on $flatten\m2.$verific$s1_cyc_o_reg$wb_conmax_master_if.v:506$30742 ($adff) from module wb_conmax_top (D = $flatten\m2.$verific$n1731$30463, Q = \m2.s1_cyc_o).
Adding EN signal on $flatten\m2.$verific$s15_cyc_o_reg$wb_conmax_master_if.v:562$30770 ($adff) from module wb_conmax_top (D = $flatten\m2.$verific$n1815$30505, Q = \m2.s15_cyc_o).
Adding EN signal on $flatten\m2.$verific$s14_cyc_o_reg$wb_conmax_master_if.v:558$30768 ($adff) from module wb_conmax_top (D = $flatten\m2.$verific$n1809$30502, Q = \m2.s14_cyc_o).
Adding EN signal on $flatten\m2.$verific$s13_cyc_o_reg$wb_conmax_master_if.v:554$30766 ($adff) from module wb_conmax_top (D = $flatten\m2.$verific$n1803$30499, Q = \m2.s13_cyc_o).
Adding EN signal on $flatten\m2.$verific$s12_cyc_o_reg$wb_conmax_master_if.v:550$30764 ($adff) from module wb_conmax_top (D = $flatten\m2.$verific$n1797$30496, Q = \m2.s12_cyc_o).
Adding EN signal on $flatten\m2.$verific$s11_cyc_o_reg$wb_conmax_master_if.v:546$30762 ($adff) from module wb_conmax_top (D = $flatten\m2.$verific$n1791$30493, Q = \m2.s11_cyc_o).
Adding EN signal on $flatten\m2.$verific$s10_cyc_o_reg$wb_conmax_master_if.v:542$30760 ($adff) from module wb_conmax_top (D = $flatten\m2.$verific$n1785$30490, Q = \m2.s10_cyc_o).
Adding EN signal on $flatten\m2.$verific$s0_cyc_o_reg$wb_conmax_master_if.v:502$30740 ($adff) from module wb_conmax_top (D = $flatten\m2.$verific$n1725$30460, Q = \m2.s0_cyc_o).
Adding EN signal on $flatten\m1.$verific$s9_cyc_o_reg$wb_conmax_master_if.v:538$30758 ($adff) from module wb_conmax_top (D = $flatten\m1.$verific$n1779$30487, Q = \m1.s9_cyc_o).
Adding EN signal on $flatten\m1.$verific$s8_cyc_o_reg$wb_conmax_master_if.v:534$30756 ($adff) from module wb_conmax_top (D = $flatten\m1.$verific$n1773$30484, Q = \m1.s8_cyc_o).
Adding EN signal on $flatten\m1.$verific$s7_cyc_o_reg$wb_conmax_master_if.v:530$30754 ($adff) from module wb_conmax_top (D = $flatten\m1.$verific$n1767$30481, Q = \m1.s7_cyc_o).
Adding EN signal on $flatten\m1.$verific$s6_cyc_o_reg$wb_conmax_master_if.v:526$30752 ($adff) from module wb_conmax_top (D = $flatten\m1.$verific$n1761$30478, Q = \m1.s6_cyc_o).
Adding EN signal on $flatten\m1.$verific$s5_cyc_o_reg$wb_conmax_master_if.v:522$30750 ($adff) from module wb_conmax_top (D = $flatten\m1.$verific$n1755$30475, Q = \m1.s5_cyc_o).
Adding EN signal on $flatten\m1.$verific$s4_cyc_o_reg$wb_conmax_master_if.v:518$30748 ($adff) from module wb_conmax_top (D = $flatten\m1.$verific$n1749$30472, Q = \m1.s4_cyc_o).
Adding EN signal on $flatten\m1.$verific$s3_cyc_o_reg$wb_conmax_master_if.v:514$30746 ($adff) from module wb_conmax_top (D = $flatten\m1.$verific$n1743$30469, Q = \m1.s3_cyc_o).
Adding EN signal on $flatten\m1.$verific$s2_cyc_o_reg$wb_conmax_master_if.v:510$30744 ($adff) from module wb_conmax_top (D = $flatten\m1.$verific$n1737$30466, Q = \m1.s2_cyc_o).
Adding EN signal on $flatten\m1.$verific$s1_cyc_o_reg$wb_conmax_master_if.v:506$30742 ($adff) from module wb_conmax_top (D = $flatten\m1.$verific$n1731$30463, Q = \m1.s1_cyc_o).
Adding EN signal on $flatten\m1.$verific$s15_cyc_o_reg$wb_conmax_master_if.v:562$30770 ($adff) from module wb_conmax_top (D = $flatten\m1.$verific$n1815$30505, Q = \m1.s15_cyc_o).
Adding EN signal on $flatten\m1.$verific$s14_cyc_o_reg$wb_conmax_master_if.v:558$30768 ($adff) from module wb_conmax_top (D = $flatten\m1.$verific$n1809$30502, Q = \m1.s14_cyc_o).
Adding EN signal on $flatten\m1.$verific$s13_cyc_o_reg$wb_conmax_master_if.v:554$30766 ($adff) from module wb_conmax_top (D = $flatten\m1.$verific$n1803$30499, Q = \m1.s13_cyc_o).
Adding EN signal on $flatten\m1.$verific$s12_cyc_o_reg$wb_conmax_master_if.v:550$30764 ($adff) from module wb_conmax_top (D = $flatten\m1.$verific$n1797$30496, Q = \m1.s12_cyc_o).
Adding EN signal on $flatten\m1.$verific$s11_cyc_o_reg$wb_conmax_master_if.v:546$30762 ($adff) from module wb_conmax_top (D = $flatten\m1.$verific$n1791$30493, Q = \m1.s11_cyc_o).
Adding EN signal on $flatten\m1.$verific$s10_cyc_o_reg$wb_conmax_master_if.v:542$30760 ($adff) from module wb_conmax_top (D = $flatten\m1.$verific$n1785$30490, Q = \m1.s10_cyc_o).
Adding EN signal on $flatten\m1.$verific$s0_cyc_o_reg$wb_conmax_master_if.v:502$30740 ($adff) from module wb_conmax_top (D = $flatten\m1.$verific$n1725$30460, Q = \m1.s0_cyc_o).
Adding EN signal on $flatten\m0.$verific$s9_cyc_o_reg$wb_conmax_master_if.v:538$30758 ($adff) from module wb_conmax_top (D = $flatten\m0.$verific$n1779$30487, Q = \m0.s9_cyc_o).
Adding EN signal on $flatten\m0.$verific$s8_cyc_o_reg$wb_conmax_master_if.v:534$30756 ($adff) from module wb_conmax_top (D = $flatten\m0.$verific$n1773$30484, Q = \m0.s8_cyc_o).
Adding EN signal on $flatten\m0.$verific$s7_cyc_o_reg$wb_conmax_master_if.v:530$30754 ($adff) from module wb_conmax_top (D = $flatten\m0.$verific$n1767$30481, Q = \m0.s7_cyc_o).
Adding EN signal on $flatten\m0.$verific$s6_cyc_o_reg$wb_conmax_master_if.v:526$30752 ($adff) from module wb_conmax_top (D = $flatten\m0.$verific$n1761$30478, Q = \m0.s6_cyc_o).
Adding EN signal on $flatten\m0.$verific$s5_cyc_o_reg$wb_conmax_master_if.v:522$30750 ($adff) from module wb_conmax_top (D = $flatten\m0.$verific$n1755$30475, Q = \m0.s5_cyc_o).
Adding EN signal on $flatten\m0.$verific$s4_cyc_o_reg$wb_conmax_master_if.v:518$30748 ($adff) from module wb_conmax_top (D = $flatten\m0.$verific$n1749$30472, Q = \m0.s4_cyc_o).
Adding EN signal on $flatten\m0.$verific$s3_cyc_o_reg$wb_conmax_master_if.v:514$30746 ($adff) from module wb_conmax_top (D = $flatten\m0.$verific$n1743$30469, Q = \m0.s3_cyc_o).
Adding EN signal on $flatten\m0.$verific$s2_cyc_o_reg$wb_conmax_master_if.v:510$30744 ($adff) from module wb_conmax_top (D = $flatten\m0.$verific$n1737$30466, Q = \m0.s2_cyc_o).
Adding EN signal on $flatten\m0.$verific$s1_cyc_o_reg$wb_conmax_master_if.v:506$30742 ($adff) from module wb_conmax_top (D = $flatten\m0.$verific$n1731$30463, Q = \m0.s1_cyc_o).
Adding EN signal on $flatten\m0.$verific$s15_cyc_o_reg$wb_conmax_master_if.v:562$30770 ($adff) from module wb_conmax_top (D = $flatten\m0.$verific$n1815$30505, Q = \m0.s15_cyc_o).
Adding EN signal on $flatten\m0.$verific$s14_cyc_o_reg$wb_conmax_master_if.v:558$30768 ($adff) from module wb_conmax_top (D = $flatten\m0.$verific$n1809$30502, Q = \m0.s14_cyc_o).
Adding EN signal on $flatten\m0.$verific$s13_cyc_o_reg$wb_conmax_master_if.v:554$30766 ($adff) from module wb_conmax_top (D = $flatten\m0.$verific$n1803$30499, Q = \m0.s13_cyc_o).
Adding EN signal on $flatten\m0.$verific$s12_cyc_o_reg$wb_conmax_master_if.v:550$30764 ($adff) from module wb_conmax_top (D = $flatten\m0.$verific$n1797$30496, Q = \m0.s12_cyc_o).
Adding EN signal on $flatten\m0.$verific$s11_cyc_o_reg$wb_conmax_master_if.v:546$30762 ($adff) from module wb_conmax_top (D = $flatten\m0.$verific$n1791$30493, Q = \m0.s11_cyc_o).
Adding EN signal on $flatten\m0.$verific$s10_cyc_o_reg$wb_conmax_master_if.v:542$30760 ($adff) from module wb_conmax_top (D = $flatten\m0.$verific$n1785$30490, Q = \m0.s10_cyc_o).
Adding EN signal on $flatten\m0.$verific$s0_cyc_o_reg$wb_conmax_master_if.v:502$30740 ($adff) from module wb_conmax_top (D = $flatten\m0.$verific$n1725$30460, Q = \m0.s0_cyc_o).

yosys> opt_clean

4.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..
Removed 177 unused cells and 177 unused wires.
<suppressed ~306 debug messages>

yosys> opt_expr

4.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

4.13.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

4.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wb_conmax_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~917 debug messages>

yosys> opt_reduce

4.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wb_conmax_top.
Performed a total of 0 changes.

yosys> opt_merge

4.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
Removed a total of 0 cells.

yosys> opt_dff -sat

4.13.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

4.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..

yosys> opt_expr

4.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

4.13.16. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

4.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m0.$verific$equal_129$wb_conmax_master_if.v:490$30702 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m0.$verific$equal_123$wb_conmax_master_if.v:489$30698 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m0.$verific$equal_117$wb_conmax_master_if.v:488$30694 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m0.$verific$equal_111$wb_conmax_master_if.v:487$30690 ($eq).
Removed top 2 bits (of 4) from port B of cell wb_conmax_top.$flatten\m0.$verific$equal_105$wb_conmax_master_if.v:486$30686 ($eq).
Removed top 2 bits (of 4) from port B of cell wb_conmax_top.$flatten\m0.$verific$equal_99$wb_conmax_master_if.v:485$30682 ($eq).
Removed top 3 bits (of 4) from port B of cell wb_conmax_top.$flatten\m0.$verific$equal_93$wb_conmax_master_if.v:484$30678 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m1.$verific$equal_129$wb_conmax_master_if.v:490$30702 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m1.$verific$equal_123$wb_conmax_master_if.v:489$30698 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m1.$verific$equal_117$wb_conmax_master_if.v:488$30694 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m1.$verific$equal_111$wb_conmax_master_if.v:487$30690 ($eq).
Removed top 2 bits (of 4) from port B of cell wb_conmax_top.$flatten\m1.$verific$equal_105$wb_conmax_master_if.v:486$30686 ($eq).
Removed top 2 bits (of 4) from port B of cell wb_conmax_top.$flatten\m1.$verific$equal_99$wb_conmax_master_if.v:485$30682 ($eq).
Removed top 3 bits (of 4) from port B of cell wb_conmax_top.$flatten\m1.$verific$equal_93$wb_conmax_master_if.v:484$30678 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m2.$verific$equal_129$wb_conmax_master_if.v:490$30702 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m2.$verific$equal_123$wb_conmax_master_if.v:489$30698 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m2.$verific$equal_117$wb_conmax_master_if.v:488$30694 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m2.$verific$equal_111$wb_conmax_master_if.v:487$30690 ($eq).
Removed top 2 bits (of 4) from port B of cell wb_conmax_top.$flatten\m2.$verific$equal_105$wb_conmax_master_if.v:486$30686 ($eq).
Removed top 2 bits (of 4) from port B of cell wb_conmax_top.$flatten\m2.$verific$equal_99$wb_conmax_master_if.v:485$30682 ($eq).
Removed top 3 bits (of 4) from port B of cell wb_conmax_top.$flatten\m2.$verific$equal_93$wb_conmax_master_if.v:484$30678 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m3.$verific$equal_129$wb_conmax_master_if.v:490$30702 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m3.$verific$equal_123$wb_conmax_master_if.v:489$30698 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m3.$verific$equal_117$wb_conmax_master_if.v:488$30694 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m3.$verific$equal_111$wb_conmax_master_if.v:487$30690 ($eq).
Removed top 2 bits (of 4) from port B of cell wb_conmax_top.$flatten\m3.$verific$equal_105$wb_conmax_master_if.v:486$30686 ($eq).
Removed top 2 bits (of 4) from port B of cell wb_conmax_top.$flatten\m3.$verific$equal_99$wb_conmax_master_if.v:485$30682 ($eq).
Removed top 3 bits (of 4) from port B of cell wb_conmax_top.$flatten\m3.$verific$equal_93$wb_conmax_master_if.v:484$30678 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m4.$verific$equal_129$wb_conmax_master_if.v:490$30702 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m4.$verific$equal_123$wb_conmax_master_if.v:489$30698 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m4.$verific$equal_117$wb_conmax_master_if.v:488$30694 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m4.$verific$equal_111$wb_conmax_master_if.v:487$30690 ($eq).
Removed top 2 bits (of 4) from port B of cell wb_conmax_top.$flatten\m4.$verific$equal_105$wb_conmax_master_if.v:486$30686 ($eq).
Removed top 2 bits (of 4) from port B of cell wb_conmax_top.$flatten\m4.$verific$equal_99$wb_conmax_master_if.v:485$30682 ($eq).
Removed top 3 bits (of 4) from port B of cell wb_conmax_top.$flatten\m4.$verific$equal_93$wb_conmax_master_if.v:484$30678 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m5.$verific$equal_129$wb_conmax_master_if.v:490$30702 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m5.$verific$equal_123$wb_conmax_master_if.v:489$30698 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m5.$verific$equal_117$wb_conmax_master_if.v:488$30694 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m5.$verific$equal_111$wb_conmax_master_if.v:487$30690 ($eq).
Removed top 2 bits (of 4) from port B of cell wb_conmax_top.$flatten\m5.$verific$equal_105$wb_conmax_master_if.v:486$30686 ($eq).
Removed top 2 bits (of 4) from port B of cell wb_conmax_top.$flatten\m5.$verific$equal_99$wb_conmax_master_if.v:485$30682 ($eq).
Removed top 3 bits (of 4) from port B of cell wb_conmax_top.$flatten\m5.$verific$equal_93$wb_conmax_master_if.v:484$30678 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m6.$verific$equal_129$wb_conmax_master_if.v:490$30702 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m6.$verific$equal_123$wb_conmax_master_if.v:489$30698 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m6.$verific$equal_117$wb_conmax_master_if.v:488$30694 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m6.$verific$equal_111$wb_conmax_master_if.v:487$30690 ($eq).
Removed top 2 bits (of 4) from port B of cell wb_conmax_top.$flatten\m6.$verific$equal_105$wb_conmax_master_if.v:486$30686 ($eq).
Removed top 2 bits (of 4) from port B of cell wb_conmax_top.$flatten\m6.$verific$equal_99$wb_conmax_master_if.v:485$30682 ($eq).
Removed top 3 bits (of 4) from port B of cell wb_conmax_top.$flatten\m6.$verific$equal_93$wb_conmax_master_if.v:484$30678 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m7.$verific$equal_129$wb_conmax_master_if.v:490$30702 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m7.$verific$equal_123$wb_conmax_master_if.v:489$30698 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m7.$verific$equal_117$wb_conmax_master_if.v:488$30694 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\m7.$verific$equal_111$wb_conmax_master_if.v:487$30690 ($eq).
Removed top 2 bits (of 4) from port B of cell wb_conmax_top.$flatten\m7.$verific$equal_105$wb_conmax_master_if.v:486$30686 ($eq).
Removed top 2 bits (of 4) from port B of cell wb_conmax_top.$flatten\m7.$verific$equal_99$wb_conmax_master_if.v:485$30682 ($eq).
Removed top 3 bits (of 4) from port B of cell wb_conmax_top.$flatten\m7.$verific$equal_93$wb_conmax_master_if.v:484$30678 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s0.\msel.$verific$equal_49$wb_conmax_msel.v:161$31589 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s0.\msel.$verific$equal_52$wb_conmax_msel.v:162$31590 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s0.\msel.$verific$equal_55$wb_conmax_msel.v:163$31591 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s0.\msel.$verific$equal_58$wb_conmax_msel.v:164$31592 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s0.\msel.$verific$equal_61$wb_conmax_msel.v:165$31593 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s0.\msel.$verific$equal_64$wb_conmax_msel.v:166$31594 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s0.\msel.$verific$equal_67$wb_conmax_msel.v:167$31595 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s0.\msel.$verific$equal_70$wb_conmax_msel.v:168$31596 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s0.$verific$equal_111$wb_conmax_slave_if.v:420$31267 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s0.$verific$equal_108$wb_conmax_slave_if.v:419$31264 ($eq).
Removed top 2 bits (of 3) from port B of cell wb_conmax_top.$flatten\s0.$verific$equal_105$wb_conmax_slave_if.v:418$31261 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s1.\msel.$verific$equal_49$wb_conmax_msel.v:161$31589 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s1.\msel.$verific$equal_52$wb_conmax_msel.v:162$31590 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s1.\msel.$verific$equal_55$wb_conmax_msel.v:163$31591 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s1.\msel.$verific$equal_58$wb_conmax_msel.v:164$31592 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s1.\msel.$verific$equal_61$wb_conmax_msel.v:165$31593 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s1.\msel.$verific$equal_64$wb_conmax_msel.v:166$31594 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s1.\msel.$verific$equal_67$wb_conmax_msel.v:167$31595 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s1.\msel.$verific$equal_70$wb_conmax_msel.v:168$31596 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s1.$verific$equal_111$wb_conmax_slave_if.v:420$31267 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s1.$verific$equal_108$wb_conmax_slave_if.v:419$31264 ($eq).
Removed top 2 bits (of 3) from port B of cell wb_conmax_top.$flatten\s1.$verific$equal_105$wb_conmax_slave_if.v:418$31261 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s2.\msel.$verific$equal_49$wb_conmax_msel.v:161$31589 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s2.\msel.$verific$equal_52$wb_conmax_msel.v:162$31590 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s2.\msel.$verific$equal_55$wb_conmax_msel.v:163$31591 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s2.\msel.$verific$equal_58$wb_conmax_msel.v:164$31592 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s2.\msel.$verific$equal_61$wb_conmax_msel.v:165$31593 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s2.\msel.$verific$equal_64$wb_conmax_msel.v:166$31594 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s2.\msel.$verific$equal_67$wb_conmax_msel.v:167$31595 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s2.\msel.$verific$equal_70$wb_conmax_msel.v:168$31596 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s2.$verific$equal_111$wb_conmax_slave_if.v:420$31267 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s2.$verific$equal_108$wb_conmax_slave_if.v:419$31264 ($eq).
Removed top 2 bits (of 3) from port B of cell wb_conmax_top.$flatten\s2.$verific$equal_105$wb_conmax_slave_if.v:418$31261 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s3.\msel.$verific$equal_49$wb_conmax_msel.v:161$31589 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s3.\msel.$verific$equal_52$wb_conmax_msel.v:162$31590 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s3.\msel.$verific$equal_55$wb_conmax_msel.v:163$31591 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s3.\msel.$verific$equal_58$wb_conmax_msel.v:164$31592 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s3.\msel.$verific$equal_61$wb_conmax_msel.v:165$31593 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s3.\msel.$verific$equal_64$wb_conmax_msel.v:166$31594 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s3.\msel.$verific$equal_67$wb_conmax_msel.v:167$31595 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s3.\msel.$verific$equal_70$wb_conmax_msel.v:168$31596 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s3.$verific$equal_111$wb_conmax_slave_if.v:420$31267 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s3.$verific$equal_108$wb_conmax_slave_if.v:419$31264 ($eq).
Removed top 2 bits (of 3) from port B of cell wb_conmax_top.$flatten\s3.$verific$equal_105$wb_conmax_slave_if.v:418$31261 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s4.\msel.$verific$equal_49$wb_conmax_msel.v:161$31589 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s4.\msel.$verific$equal_52$wb_conmax_msel.v:162$31590 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s4.\msel.$verific$equal_55$wb_conmax_msel.v:163$31591 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s4.\msel.$verific$equal_58$wb_conmax_msel.v:164$31592 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s4.\msel.$verific$equal_61$wb_conmax_msel.v:165$31593 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s4.\msel.$verific$equal_64$wb_conmax_msel.v:166$31594 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s4.\msel.$verific$equal_67$wb_conmax_msel.v:167$31595 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s4.\msel.$verific$equal_70$wb_conmax_msel.v:168$31596 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s4.$verific$equal_111$wb_conmax_slave_if.v:420$31267 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s4.$verific$equal_108$wb_conmax_slave_if.v:419$31264 ($eq).
Removed top 2 bits (of 3) from port B of cell wb_conmax_top.$flatten\s4.$verific$equal_105$wb_conmax_slave_if.v:418$31261 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s5.\msel.$verific$equal_49$wb_conmax_msel.v:161$31589 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s5.\msel.$verific$equal_52$wb_conmax_msel.v:162$31590 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s5.\msel.$verific$equal_55$wb_conmax_msel.v:163$31591 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s5.\msel.$verific$equal_58$wb_conmax_msel.v:164$31592 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s5.\msel.$verific$equal_61$wb_conmax_msel.v:165$31593 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s5.\msel.$verific$equal_64$wb_conmax_msel.v:166$31594 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s5.\msel.$verific$equal_67$wb_conmax_msel.v:167$31595 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s5.\msel.$verific$equal_70$wb_conmax_msel.v:168$31596 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s5.$verific$equal_111$wb_conmax_slave_if.v:420$31267 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s5.$verific$equal_108$wb_conmax_slave_if.v:419$31264 ($eq).
Removed top 2 bits (of 3) from port B of cell wb_conmax_top.$flatten\s5.$verific$equal_105$wb_conmax_slave_if.v:418$31261 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s6.\msel.$verific$equal_49$wb_conmax_msel.v:161$31589 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s6.\msel.$verific$equal_52$wb_conmax_msel.v:162$31590 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s6.\msel.$verific$equal_55$wb_conmax_msel.v:163$31591 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s6.\msel.$verific$equal_58$wb_conmax_msel.v:164$31592 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s6.\msel.$verific$equal_61$wb_conmax_msel.v:165$31593 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s6.\msel.$verific$equal_64$wb_conmax_msel.v:166$31594 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s6.\msel.$verific$equal_67$wb_conmax_msel.v:167$31595 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s6.\msel.$verific$equal_70$wb_conmax_msel.v:168$31596 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s6.$verific$equal_111$wb_conmax_slave_if.v:420$31267 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s6.$verific$equal_108$wb_conmax_slave_if.v:419$31264 ($eq).
Removed top 2 bits (of 3) from port B of cell wb_conmax_top.$flatten\s6.$verific$equal_105$wb_conmax_slave_if.v:418$31261 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s7.\msel.$verific$equal_49$wb_conmax_msel.v:161$31589 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s7.\msel.$verific$equal_52$wb_conmax_msel.v:162$31590 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s7.\msel.$verific$equal_55$wb_conmax_msel.v:163$31591 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s7.\msel.$verific$equal_58$wb_conmax_msel.v:164$31592 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s7.\msel.$verific$equal_61$wb_conmax_msel.v:165$31593 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s7.\msel.$verific$equal_64$wb_conmax_msel.v:166$31594 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s7.\msel.$verific$equal_67$wb_conmax_msel.v:167$31595 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s7.\msel.$verific$equal_70$wb_conmax_msel.v:168$31596 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s7.$verific$equal_111$wb_conmax_slave_if.v:420$31267 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s7.$verific$equal_108$wb_conmax_slave_if.v:419$31264 ($eq).
Removed top 2 bits (of 3) from port B of cell wb_conmax_top.$flatten\s7.$verific$equal_105$wb_conmax_slave_if.v:418$31261 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s8.\msel.$verific$equal_49$wb_conmax_msel.v:161$31589 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s8.\msel.$verific$equal_52$wb_conmax_msel.v:162$31590 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s8.\msel.$verific$equal_55$wb_conmax_msel.v:163$31591 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s8.\msel.$verific$equal_58$wb_conmax_msel.v:164$31592 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s8.\msel.$verific$equal_61$wb_conmax_msel.v:165$31593 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s8.\msel.$verific$equal_64$wb_conmax_msel.v:166$31594 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s8.\msel.$verific$equal_67$wb_conmax_msel.v:167$31595 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s8.\msel.$verific$equal_70$wb_conmax_msel.v:168$31596 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s8.$verific$equal_111$wb_conmax_slave_if.v:420$31267 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s8.$verific$equal_108$wb_conmax_slave_if.v:419$31264 ($eq).
Removed top 2 bits (of 3) from port B of cell wb_conmax_top.$flatten\s8.$verific$equal_105$wb_conmax_slave_if.v:418$31261 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s9.\msel.$verific$equal_49$wb_conmax_msel.v:161$31589 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s9.\msel.$verific$equal_52$wb_conmax_msel.v:162$31590 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s9.\msel.$verific$equal_55$wb_conmax_msel.v:163$31591 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s9.\msel.$verific$equal_58$wb_conmax_msel.v:164$31592 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s9.\msel.$verific$equal_61$wb_conmax_msel.v:165$31593 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s9.\msel.$verific$equal_64$wb_conmax_msel.v:166$31594 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s9.\msel.$verific$equal_67$wb_conmax_msel.v:167$31595 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s9.\msel.$verific$equal_70$wb_conmax_msel.v:168$31596 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s9.$verific$equal_111$wb_conmax_slave_if.v:420$31267 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s9.$verific$equal_108$wb_conmax_slave_if.v:419$31264 ($eq).
Removed top 2 bits (of 3) from port B of cell wb_conmax_top.$flatten\s9.$verific$equal_105$wb_conmax_slave_if.v:418$31261 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s10.\msel.$verific$equal_49$wb_conmax_msel.v:161$31589 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s10.\msel.$verific$equal_52$wb_conmax_msel.v:162$31590 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s10.\msel.$verific$equal_55$wb_conmax_msel.v:163$31591 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s10.\msel.$verific$equal_58$wb_conmax_msel.v:164$31592 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s10.\msel.$verific$equal_61$wb_conmax_msel.v:165$31593 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s10.\msel.$verific$equal_64$wb_conmax_msel.v:166$31594 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s10.\msel.$verific$equal_67$wb_conmax_msel.v:167$31595 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s10.\msel.$verific$equal_70$wb_conmax_msel.v:168$31596 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s10.$verific$equal_111$wb_conmax_slave_if.v:420$31267 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s10.$verific$equal_108$wb_conmax_slave_if.v:419$31264 ($eq).
Removed top 2 bits (of 3) from port B of cell wb_conmax_top.$flatten\s10.$verific$equal_105$wb_conmax_slave_if.v:418$31261 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s11.\msel.$verific$equal_49$wb_conmax_msel.v:161$31589 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s11.\msel.$verific$equal_52$wb_conmax_msel.v:162$31590 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s11.\msel.$verific$equal_55$wb_conmax_msel.v:163$31591 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s11.\msel.$verific$equal_58$wb_conmax_msel.v:164$31592 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s11.\msel.$verific$equal_61$wb_conmax_msel.v:165$31593 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s11.\msel.$verific$equal_64$wb_conmax_msel.v:166$31594 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s11.\msel.$verific$equal_67$wb_conmax_msel.v:167$31595 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s11.\msel.$verific$equal_70$wb_conmax_msel.v:168$31596 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s11.$verific$equal_111$wb_conmax_slave_if.v:420$31267 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s11.$verific$equal_108$wb_conmax_slave_if.v:419$31264 ($eq).
Removed top 2 bits (of 3) from port B of cell wb_conmax_top.$flatten\s11.$verific$equal_105$wb_conmax_slave_if.v:418$31261 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s12.\msel.$verific$equal_49$wb_conmax_msel.v:161$31589 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s12.\msel.$verific$equal_52$wb_conmax_msel.v:162$31590 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s12.\msel.$verific$equal_55$wb_conmax_msel.v:163$31591 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s12.\msel.$verific$equal_58$wb_conmax_msel.v:164$31592 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s12.\msel.$verific$equal_61$wb_conmax_msel.v:165$31593 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s12.\msel.$verific$equal_64$wb_conmax_msel.v:166$31594 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s12.\msel.$verific$equal_67$wb_conmax_msel.v:167$31595 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s12.\msel.$verific$equal_70$wb_conmax_msel.v:168$31596 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s12.$verific$equal_111$wb_conmax_slave_if.v:420$31267 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s12.$verific$equal_108$wb_conmax_slave_if.v:419$31264 ($eq).
Removed top 2 bits (of 3) from port B of cell wb_conmax_top.$flatten\s12.$verific$equal_105$wb_conmax_slave_if.v:418$31261 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s13.\msel.$verific$equal_49$wb_conmax_msel.v:161$31589 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s13.\msel.$verific$equal_52$wb_conmax_msel.v:162$31590 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s13.\msel.$verific$equal_55$wb_conmax_msel.v:163$31591 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s13.\msel.$verific$equal_58$wb_conmax_msel.v:164$31592 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s13.\msel.$verific$equal_61$wb_conmax_msel.v:165$31593 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s13.\msel.$verific$equal_64$wb_conmax_msel.v:166$31594 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s13.\msel.$verific$equal_67$wb_conmax_msel.v:167$31595 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s13.\msel.$verific$equal_70$wb_conmax_msel.v:168$31596 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s13.$verific$equal_111$wb_conmax_slave_if.v:420$31267 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s13.$verific$equal_108$wb_conmax_slave_if.v:419$31264 ($eq).
Removed top 2 bits (of 3) from port B of cell wb_conmax_top.$flatten\s13.$verific$equal_105$wb_conmax_slave_if.v:418$31261 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s14.\msel.$verific$equal_49$wb_conmax_msel.v:161$31589 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s14.\msel.$verific$equal_52$wb_conmax_msel.v:162$31590 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s14.\msel.$verific$equal_55$wb_conmax_msel.v:163$31591 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s14.\msel.$verific$equal_58$wb_conmax_msel.v:164$31592 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s14.\msel.$verific$equal_61$wb_conmax_msel.v:165$31593 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s14.\msel.$verific$equal_64$wb_conmax_msel.v:166$31594 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s14.\msel.$verific$equal_67$wb_conmax_msel.v:167$31595 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s14.\msel.$verific$equal_70$wb_conmax_msel.v:168$31596 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s14.$verific$equal_111$wb_conmax_slave_if.v:420$31267 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s14.$verific$equal_108$wb_conmax_slave_if.v:419$31264 ($eq).
Removed top 2 bits (of 3) from port B of cell wb_conmax_top.$flatten\s14.$verific$equal_105$wb_conmax_slave_if.v:418$31261 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s15.\msel.$verific$equal_49$wb_conmax_msel.v:161$31589 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s15.\msel.$verific$equal_52$wb_conmax_msel.v:162$31590 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s15.\msel.$verific$equal_55$wb_conmax_msel.v:163$31591 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s15.\msel.$verific$equal_58$wb_conmax_msel.v:164$31592 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s15.\msel.$verific$equal_61$wb_conmax_msel.v:165$31593 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s15.\msel.$verific$equal_64$wb_conmax_msel.v:166$31594 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s15.\msel.$verific$equal_67$wb_conmax_msel.v:167$31595 ($eq).
Removed top 1 bits (of 2) from port B of cell wb_conmax_top.$flatten\s15.\msel.$verific$equal_70$wb_conmax_msel.v:168$31596 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s15.$verific$equal_111$wb_conmax_slave_if.v:420$31267 ($eq).
Removed top 1 bits (of 3) from port B of cell wb_conmax_top.$flatten\s15.$verific$equal_108$wb_conmax_slave_if.v:419$31264 ($eq).
Removed top 2 bits (of 3) from port B of cell wb_conmax_top.$flatten\s15.$verific$equal_105$wb_conmax_slave_if.v:418$31261 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\rf.$verific$equal_69$wb_conmax_rf.v:224$30987 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\rf.$verific$equal_62$wb_conmax_rf.v:219$30983 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\rf.$verific$equal_55$wb_conmax_rf.v:214$30979 ($eq).
Removed top 1 bits (of 4) from port B of cell wb_conmax_top.$flatten\rf.$verific$equal_48$wb_conmax_rf.v:209$30975 ($eq).
Removed top 2 bits (of 4) from port B of cell wb_conmax_top.$flatten\rf.$verific$equal_41$wb_conmax_rf.v:204$30971 ($eq).
Removed top 2 bits (of 4) from port B of cell wb_conmax_top.$flatten\rf.$verific$equal_34$wb_conmax_rf.v:199$30967 ($eq).
Removed top 3 bits (of 4) from port B of cell wb_conmax_top.$flatten\rf.$verific$equal_27$wb_conmax_rf.v:194$30963 ($eq).

yosys> peepopt

4.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

4.16. Executing PMUXTREE pass.

yosys> opt_clean

4.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..

yosys> alumacc

4.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module wb_conmax_top:
  created 0 $alu and 0 $macc cells.

yosys> opt

4.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

4.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

yosys> opt_merge -nomux

4.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

4.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wb_conmax_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~917 debug messages>

yosys> opt_reduce

4.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wb_conmax_top.
Performed a total of 0 changes.

yosys> opt_merge

4.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
Removed a total of 0 cells.

yosys> opt_dff

4.19.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

4.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..

yosys> opt_expr

4.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

4.19.9. Finished OPT passes. (There is nothing left to do.)

yosys> stat

4.20. Printing statistics.

=== wb_conmax_top ===

   Number of wires:              12214
   Number of wire bits:          68556
   Number of public wires:        6526
   Number of public wire bits:   53205
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               7009
     $adff                          64
     $adffe                        144
     $and                          605
     $bmux                         209
     $dff                          146
     $eq                           632
     $logic_not                    153
     $mux                         4773
     $not                          154
     $or                           112
     $sdff                           1
     $sdffe                         16


yosys> memory -nomap

4.21. Executing MEMORY pass.

yosys> opt_mem

4.21.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

4.21.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

4.21.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

4.21.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

4.21.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

4.21.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..

yosys> memory_share

4.21.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

4.21.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

4.21.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..

yosys> memory_collect

4.21.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

4.22. Printing statistics.

=== wb_conmax_top ===

   Number of wires:              12214
   Number of wire bits:          68556
   Number of public wires:        6526
   Number of public wire bits:   53205
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               7009
     $adff                          64
     $adffe                        144
     $and                          605
     $bmux                         209
     $dff                          146
     $eq                           632
     $logic_not                    153
     $mux                         4773
     $not                          154
     $or                           112
     $sdff                           1
     $sdffe                         16


yosys> opt_clean

4.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..

yosys> stat

4.24. Printing statistics.

=== wb_conmax_top ===

   Number of wires:              12214
   Number of wire bits:          68556
   Number of public wires:        6526
   Number of public wire bits:   53205
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               7009
     $adff                          64
     $adffe                        144
     $and                          605
     $bmux                         209
     $dff                          146
     $eq                           632
     $logic_not                    153
     $mux                         4773
     $not                          154
     $or                           112
     $sdff                           1
     $sdffe                         16


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

4.25. Executing TECHMAP pass (map to technology primitives).

4.25.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.25.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

4.25.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $bmux.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $sdff.
Using extmapper simplemap for cells of type $sdffe.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $dff.
No more expansions possible.
<suppressed ~7080 debug messages>

yosys> stat

4.26. Printing statistics.

=== wb_conmax_top ===

   Number of wires:              15180
   Number of wire bits:          85919
   Number of public wires:        6526
   Number of public wire bits:   53205
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              34121
     $_AND_                       1053
     $_DFFE_PP0N_                  128
     $_DFFE_PP0P_                  256
     $_DFF_PP0_                    192
     $_DFF_P_                      146
     $_MUX_                      28060
     $_NOT_                        939
     $_OR_                        1651
     $_SDFFE_PP0P_                  32
     $_SDFF_PN0_                    16
     $_XOR_                       1648


yosys> opt

4.27. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

4.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.
<suppressed ~3200 debug messages>

yosys> opt_merge -nomux

4.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
<suppressed ~3564 debug messages>
Removed a total of 1188 cells.

yosys> opt_muxtree

4.27.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wb_conmax_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

4.27.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wb_conmax_top.
Performed a total of 0 changes.

yosys> opt_merge

4.27.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
Removed a total of 0 cells.

yosys> opt_dff

4.27.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

4.27.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..
Removed 368 unused cells and 2526 unused wires.
<suppressed ~369 debug messages>

yosys> opt_expr

4.27.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

4.27.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

4.27.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wb_conmax_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

4.27.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wb_conmax_top.
Performed a total of 0 changes.

yosys> opt_merge

4.27.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
Removed a total of 0 cells.

yosys> opt_dff

4.27.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$69543 ($_DFF_PP0_) from module wb_conmax_top (D = \s15.msel.arb3.next_state [2], Q = \s15.msel.arb3.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$69542 ($_DFF_PP0_) from module wb_conmax_top (D = \s15.msel.arb3.next_state [1], Q = \s15.msel.arb3.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$69541 ($_DFF_PP0_) from module wb_conmax_top (D = \s15.msel.arb3.next_state [0], Q = \s15.msel.arb3.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$69324 ($_DFF_PP0_) from module wb_conmax_top (D = \s15.msel.arb2.next_state [2], Q = \s15.msel.arb2.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$69323 ($_DFF_PP0_) from module wb_conmax_top (D = \s15.msel.arb2.next_state [1], Q = \s15.msel.arb2.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$69322 ($_DFF_PP0_) from module wb_conmax_top (D = \s15.msel.arb2.next_state [0], Q = \s15.msel.arb2.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$69105 ($_DFF_PP0_) from module wb_conmax_top (D = \s15.msel.arb1.next_state [2], Q = \s15.msel.arb1.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$69104 ($_DFF_PP0_) from module wb_conmax_top (D = \s15.msel.arb1.next_state [1], Q = \s15.msel.arb1.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$69103 ($_DFF_PP0_) from module wb_conmax_top (D = \s15.msel.arb1.next_state [0], Q = \s15.msel.arb1.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$68886 ($_DFF_PP0_) from module wb_conmax_top (D = \s15.msel.arb0.next_state [2], Q = \s15.msel.arb0.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$68885 ($_DFF_PP0_) from module wb_conmax_top (D = \s15.msel.arb0.next_state [1], Q = \s15.msel.arb0.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$68884 ($_DFF_PP0_) from module wb_conmax_top (D = \s15.msel.arb0.next_state [0], Q = \s15.msel.arb0.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$67569 ($_DFF_PP0_) from module wb_conmax_top (D = \s14.msel.arb3.next_state [2], Q = \s14.msel.arb3.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$67568 ($_DFF_PP0_) from module wb_conmax_top (D = \s14.msel.arb3.next_state [1], Q = \s14.msel.arb3.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$67567 ($_DFF_PP0_) from module wb_conmax_top (D = \s14.msel.arb3.next_state [0], Q = \s14.msel.arb3.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$67350 ($_DFF_PP0_) from module wb_conmax_top (D = \s14.msel.arb2.next_state [2], Q = \s14.msel.arb2.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$67349 ($_DFF_PP0_) from module wb_conmax_top (D = \s14.msel.arb2.next_state [1], Q = \s14.msel.arb2.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$67348 ($_DFF_PP0_) from module wb_conmax_top (D = \s14.msel.arb2.next_state [0], Q = \s14.msel.arb2.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$67131 ($_DFF_PP0_) from module wb_conmax_top (D = \s14.msel.arb1.next_state [2], Q = \s14.msel.arb1.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$67130 ($_DFF_PP0_) from module wb_conmax_top (D = \s14.msel.arb1.next_state [1], Q = \s14.msel.arb1.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$67129 ($_DFF_PP0_) from module wb_conmax_top (D = \s14.msel.arb1.next_state [0], Q = \s14.msel.arb1.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$66912 ($_DFF_PP0_) from module wb_conmax_top (D = \s14.msel.arb0.next_state [2], Q = \s14.msel.arb0.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$66911 ($_DFF_PP0_) from module wb_conmax_top (D = \s14.msel.arb0.next_state [1], Q = \s14.msel.arb0.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$66910 ($_DFF_PP0_) from module wb_conmax_top (D = \s14.msel.arb0.next_state [0], Q = \s14.msel.arb0.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$65595 ($_DFF_PP0_) from module wb_conmax_top (D = \s13.msel.arb3.next_state [2], Q = \s13.msel.arb3.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$65594 ($_DFF_PP0_) from module wb_conmax_top (D = \s13.msel.arb3.next_state [1], Q = \s13.msel.arb3.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$65593 ($_DFF_PP0_) from module wb_conmax_top (D = \s13.msel.arb3.next_state [0], Q = \s13.msel.arb3.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$65376 ($_DFF_PP0_) from module wb_conmax_top (D = \s13.msel.arb2.next_state [2], Q = \s13.msel.arb2.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$65375 ($_DFF_PP0_) from module wb_conmax_top (D = \s13.msel.arb2.next_state [1], Q = \s13.msel.arb2.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$65374 ($_DFF_PP0_) from module wb_conmax_top (D = \s13.msel.arb2.next_state [0], Q = \s13.msel.arb2.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$65157 ($_DFF_PP0_) from module wb_conmax_top (D = \s13.msel.arb1.next_state [2], Q = \s13.msel.arb1.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$65156 ($_DFF_PP0_) from module wb_conmax_top (D = \s13.msel.arb1.next_state [1], Q = \s13.msel.arb1.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$65155 ($_DFF_PP0_) from module wb_conmax_top (D = \s13.msel.arb1.next_state [0], Q = \s13.msel.arb1.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$64938 ($_DFF_PP0_) from module wb_conmax_top (D = \s13.msel.arb0.next_state [2], Q = \s13.msel.arb0.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$64937 ($_DFF_PP0_) from module wb_conmax_top (D = \s13.msel.arb0.next_state [1], Q = \s13.msel.arb0.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$64936 ($_DFF_PP0_) from module wb_conmax_top (D = \s13.msel.arb0.next_state [0], Q = \s13.msel.arb0.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$63621 ($_DFF_PP0_) from module wb_conmax_top (D = \s12.msel.arb3.next_state [2], Q = \s12.msel.arb3.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$63620 ($_DFF_PP0_) from module wb_conmax_top (D = \s12.msel.arb3.next_state [1], Q = \s12.msel.arb3.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$63619 ($_DFF_PP0_) from module wb_conmax_top (D = \s12.msel.arb3.next_state [0], Q = \s12.msel.arb3.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$63402 ($_DFF_PP0_) from module wb_conmax_top (D = \s12.msel.arb2.next_state [2], Q = \s12.msel.arb2.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$63401 ($_DFF_PP0_) from module wb_conmax_top (D = \s12.msel.arb2.next_state [1], Q = \s12.msel.arb2.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$63400 ($_DFF_PP0_) from module wb_conmax_top (D = \s12.msel.arb2.next_state [0], Q = \s12.msel.arb2.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$63183 ($_DFF_PP0_) from module wb_conmax_top (D = \s12.msel.arb1.next_state [2], Q = \s12.msel.arb1.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$63182 ($_DFF_PP0_) from module wb_conmax_top (D = \s12.msel.arb1.next_state [1], Q = \s12.msel.arb1.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$63181 ($_DFF_PP0_) from module wb_conmax_top (D = \s12.msel.arb1.next_state [0], Q = \s12.msel.arb1.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$62964 ($_DFF_PP0_) from module wb_conmax_top (D = \s12.msel.arb0.next_state [2], Q = \s12.msel.arb0.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$62963 ($_DFF_PP0_) from module wb_conmax_top (D = \s12.msel.arb0.next_state [1], Q = \s12.msel.arb0.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$62962 ($_DFF_PP0_) from module wb_conmax_top (D = \s12.msel.arb0.next_state [0], Q = \s12.msel.arb0.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$61647 ($_DFF_PP0_) from module wb_conmax_top (D = \s11.msel.arb3.next_state [2], Q = \s11.msel.arb3.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$61646 ($_DFF_PP0_) from module wb_conmax_top (D = \s11.msel.arb3.next_state [1], Q = \s11.msel.arb3.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$61645 ($_DFF_PP0_) from module wb_conmax_top (D = \s11.msel.arb3.next_state [0], Q = \s11.msel.arb3.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$61428 ($_DFF_PP0_) from module wb_conmax_top (D = \s11.msel.arb2.next_state [2], Q = \s11.msel.arb2.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$61427 ($_DFF_PP0_) from module wb_conmax_top (D = \s11.msel.arb2.next_state [1], Q = \s11.msel.arb2.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$61426 ($_DFF_PP0_) from module wb_conmax_top (D = \s11.msel.arb2.next_state [0], Q = \s11.msel.arb2.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$61209 ($_DFF_PP0_) from module wb_conmax_top (D = \s11.msel.arb1.next_state [2], Q = \s11.msel.arb1.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$61208 ($_DFF_PP0_) from module wb_conmax_top (D = \s11.msel.arb1.next_state [1], Q = \s11.msel.arb1.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$61207 ($_DFF_PP0_) from module wb_conmax_top (D = \s11.msel.arb1.next_state [0], Q = \s11.msel.arb1.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$60990 ($_DFF_PP0_) from module wb_conmax_top (D = \s11.msel.arb0.next_state [2], Q = \s11.msel.arb0.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$60989 ($_DFF_PP0_) from module wb_conmax_top (D = \s11.msel.arb0.next_state [1], Q = \s11.msel.arb0.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$60988 ($_DFF_PP0_) from module wb_conmax_top (D = \s11.msel.arb0.next_state [0], Q = \s11.msel.arb0.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$59673 ($_DFF_PP0_) from module wb_conmax_top (D = \s10.msel.arb3.next_state [2], Q = \s10.msel.arb3.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$59672 ($_DFF_PP0_) from module wb_conmax_top (D = \s10.msel.arb3.next_state [1], Q = \s10.msel.arb3.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$59671 ($_DFF_PP0_) from module wb_conmax_top (D = \s10.msel.arb3.next_state [0], Q = \s10.msel.arb3.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$59454 ($_DFF_PP0_) from module wb_conmax_top (D = \s10.msel.arb2.next_state [2], Q = \s10.msel.arb2.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$59453 ($_DFF_PP0_) from module wb_conmax_top (D = \s10.msel.arb2.next_state [1], Q = \s10.msel.arb2.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$59452 ($_DFF_PP0_) from module wb_conmax_top (D = \s10.msel.arb2.next_state [0], Q = \s10.msel.arb2.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$59235 ($_DFF_PP0_) from module wb_conmax_top (D = \s10.msel.arb1.next_state [2], Q = \s10.msel.arb1.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$59234 ($_DFF_PP0_) from module wb_conmax_top (D = \s10.msel.arb1.next_state [1], Q = \s10.msel.arb1.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$59233 ($_DFF_PP0_) from module wb_conmax_top (D = \s10.msel.arb1.next_state [0], Q = \s10.msel.arb1.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$59016 ($_DFF_PP0_) from module wb_conmax_top (D = \s10.msel.arb0.next_state [2], Q = \s10.msel.arb0.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$59015 ($_DFF_PP0_) from module wb_conmax_top (D = \s10.msel.arb0.next_state [1], Q = \s10.msel.arb0.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$59014 ($_DFF_PP0_) from module wb_conmax_top (D = \s10.msel.arb0.next_state [0], Q = \s10.msel.arb0.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$57699 ($_DFF_PP0_) from module wb_conmax_top (D = \s9.msel.arb3.next_state [2], Q = \s9.msel.arb3.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$57698 ($_DFF_PP0_) from module wb_conmax_top (D = \s9.msel.arb3.next_state [1], Q = \s9.msel.arb3.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$57697 ($_DFF_PP0_) from module wb_conmax_top (D = \s9.msel.arb3.next_state [0], Q = \s9.msel.arb3.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$57480 ($_DFF_PP0_) from module wb_conmax_top (D = \s9.msel.arb2.next_state [2], Q = \s9.msel.arb2.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$57479 ($_DFF_PP0_) from module wb_conmax_top (D = \s9.msel.arb2.next_state [1], Q = \s9.msel.arb2.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$57478 ($_DFF_PP0_) from module wb_conmax_top (D = \s9.msel.arb2.next_state [0], Q = \s9.msel.arb2.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$57261 ($_DFF_PP0_) from module wb_conmax_top (D = \s9.msel.arb1.next_state [2], Q = \s9.msel.arb1.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$57260 ($_DFF_PP0_) from module wb_conmax_top (D = \s9.msel.arb1.next_state [1], Q = \s9.msel.arb1.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$57259 ($_DFF_PP0_) from module wb_conmax_top (D = \s9.msel.arb1.next_state [0], Q = \s9.msel.arb1.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$57042 ($_DFF_PP0_) from module wb_conmax_top (D = \s9.msel.arb0.next_state [2], Q = \s9.msel.arb0.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$57041 ($_DFF_PP0_) from module wb_conmax_top (D = \s9.msel.arb0.next_state [1], Q = \s9.msel.arb0.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$57040 ($_DFF_PP0_) from module wb_conmax_top (D = \s9.msel.arb0.next_state [0], Q = \s9.msel.arb0.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$55725 ($_DFF_PP0_) from module wb_conmax_top (D = \s8.msel.arb3.next_state [2], Q = \s8.msel.arb3.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$55724 ($_DFF_PP0_) from module wb_conmax_top (D = \s8.msel.arb3.next_state [1], Q = \s8.msel.arb3.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$55723 ($_DFF_PP0_) from module wb_conmax_top (D = \s8.msel.arb3.next_state [0], Q = \s8.msel.arb3.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$55506 ($_DFF_PP0_) from module wb_conmax_top (D = \s8.msel.arb2.next_state [2], Q = \s8.msel.arb2.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$55505 ($_DFF_PP0_) from module wb_conmax_top (D = \s8.msel.arb2.next_state [1], Q = \s8.msel.arb2.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$55504 ($_DFF_PP0_) from module wb_conmax_top (D = \s8.msel.arb2.next_state [0], Q = \s8.msel.arb2.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$55287 ($_DFF_PP0_) from module wb_conmax_top (D = \s8.msel.arb1.next_state [2], Q = \s8.msel.arb1.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$55286 ($_DFF_PP0_) from module wb_conmax_top (D = \s8.msel.arb1.next_state [1], Q = \s8.msel.arb1.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$55285 ($_DFF_PP0_) from module wb_conmax_top (D = \s8.msel.arb1.next_state [0], Q = \s8.msel.arb1.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$55068 ($_DFF_PP0_) from module wb_conmax_top (D = \s8.msel.arb0.next_state [2], Q = \s8.msel.arb0.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$55067 ($_DFF_PP0_) from module wb_conmax_top (D = \s8.msel.arb0.next_state [1], Q = \s8.msel.arb0.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$55066 ($_DFF_PP0_) from module wb_conmax_top (D = \s8.msel.arb0.next_state [0], Q = \s8.msel.arb0.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$53751 ($_DFF_PP0_) from module wb_conmax_top (D = \s7.msel.arb3.next_state [2], Q = \s7.msel.arb3.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$53750 ($_DFF_PP0_) from module wb_conmax_top (D = \s7.msel.arb3.next_state [1], Q = \s7.msel.arb3.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$53749 ($_DFF_PP0_) from module wb_conmax_top (D = \s7.msel.arb3.next_state [0], Q = \s7.msel.arb3.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$53532 ($_DFF_PP0_) from module wb_conmax_top (D = \s7.msel.arb2.next_state [2], Q = \s7.msel.arb2.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$53531 ($_DFF_PP0_) from module wb_conmax_top (D = \s7.msel.arb2.next_state [1], Q = \s7.msel.arb2.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$53530 ($_DFF_PP0_) from module wb_conmax_top (D = \s7.msel.arb2.next_state [0], Q = \s7.msel.arb2.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$53313 ($_DFF_PP0_) from module wb_conmax_top (D = \s7.msel.arb1.next_state [2], Q = \s7.msel.arb1.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$53312 ($_DFF_PP0_) from module wb_conmax_top (D = \s7.msel.arb1.next_state [1], Q = \s7.msel.arb1.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$53311 ($_DFF_PP0_) from module wb_conmax_top (D = \s7.msel.arb1.next_state [0], Q = \s7.msel.arb1.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$53094 ($_DFF_PP0_) from module wb_conmax_top (D = \s7.msel.arb0.next_state [2], Q = \s7.msel.arb0.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$53093 ($_DFF_PP0_) from module wb_conmax_top (D = \s7.msel.arb0.next_state [1], Q = \s7.msel.arb0.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$53092 ($_DFF_PP0_) from module wb_conmax_top (D = \s7.msel.arb0.next_state [0], Q = \s7.msel.arb0.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$51777 ($_DFF_PP0_) from module wb_conmax_top (D = \s6.msel.arb3.next_state [2], Q = \s6.msel.arb3.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$51776 ($_DFF_PP0_) from module wb_conmax_top (D = \s6.msel.arb3.next_state [1], Q = \s6.msel.arb3.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$51775 ($_DFF_PP0_) from module wb_conmax_top (D = \s6.msel.arb3.next_state [0], Q = \s6.msel.arb3.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$51558 ($_DFF_PP0_) from module wb_conmax_top (D = \s6.msel.arb2.next_state [2], Q = \s6.msel.arb2.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$51557 ($_DFF_PP0_) from module wb_conmax_top (D = \s6.msel.arb2.next_state [1], Q = \s6.msel.arb2.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$51556 ($_DFF_PP0_) from module wb_conmax_top (D = \s6.msel.arb2.next_state [0], Q = \s6.msel.arb2.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$51339 ($_DFF_PP0_) from module wb_conmax_top (D = \s6.msel.arb1.next_state [2], Q = \s6.msel.arb1.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$51338 ($_DFF_PP0_) from module wb_conmax_top (D = \s6.msel.arb1.next_state [1], Q = \s6.msel.arb1.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$51337 ($_DFF_PP0_) from module wb_conmax_top (D = \s6.msel.arb1.next_state [0], Q = \s6.msel.arb1.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$51120 ($_DFF_PP0_) from module wb_conmax_top (D = \s6.msel.arb0.next_state [2], Q = \s6.msel.arb0.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$51119 ($_DFF_PP0_) from module wb_conmax_top (D = \s6.msel.arb0.next_state [1], Q = \s6.msel.arb0.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$51118 ($_DFF_PP0_) from module wb_conmax_top (D = \s6.msel.arb0.next_state [0], Q = \s6.msel.arb0.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$49803 ($_DFF_PP0_) from module wb_conmax_top (D = \s5.msel.arb3.next_state [2], Q = \s5.msel.arb3.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$49802 ($_DFF_PP0_) from module wb_conmax_top (D = \s5.msel.arb3.next_state [1], Q = \s5.msel.arb3.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$49801 ($_DFF_PP0_) from module wb_conmax_top (D = \s5.msel.arb3.next_state [0], Q = \s5.msel.arb3.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$49584 ($_DFF_PP0_) from module wb_conmax_top (D = \s5.msel.arb2.next_state [2], Q = \s5.msel.arb2.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$49583 ($_DFF_PP0_) from module wb_conmax_top (D = \s5.msel.arb2.next_state [1], Q = \s5.msel.arb2.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$49582 ($_DFF_PP0_) from module wb_conmax_top (D = \s5.msel.arb2.next_state [0], Q = \s5.msel.arb2.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$49365 ($_DFF_PP0_) from module wb_conmax_top (D = \s5.msel.arb1.next_state [2], Q = \s5.msel.arb1.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$49364 ($_DFF_PP0_) from module wb_conmax_top (D = \s5.msel.arb1.next_state [1], Q = \s5.msel.arb1.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$49363 ($_DFF_PP0_) from module wb_conmax_top (D = \s5.msel.arb1.next_state [0], Q = \s5.msel.arb1.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$49146 ($_DFF_PP0_) from module wb_conmax_top (D = \s5.msel.arb0.next_state [2], Q = \s5.msel.arb0.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$49145 ($_DFF_PP0_) from module wb_conmax_top (D = \s5.msel.arb0.next_state [1], Q = \s5.msel.arb0.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$49144 ($_DFF_PP0_) from module wb_conmax_top (D = \s5.msel.arb0.next_state [0], Q = \s5.msel.arb0.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$47829 ($_DFF_PP0_) from module wb_conmax_top (D = \s4.msel.arb3.next_state [2], Q = \s4.msel.arb3.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$47828 ($_DFF_PP0_) from module wb_conmax_top (D = \s4.msel.arb3.next_state [1], Q = \s4.msel.arb3.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$47827 ($_DFF_PP0_) from module wb_conmax_top (D = \s4.msel.arb3.next_state [0], Q = \s4.msel.arb3.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$47610 ($_DFF_PP0_) from module wb_conmax_top (D = \s4.msel.arb2.next_state [2], Q = \s4.msel.arb2.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$47609 ($_DFF_PP0_) from module wb_conmax_top (D = \s4.msel.arb2.next_state [1], Q = \s4.msel.arb2.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$47608 ($_DFF_PP0_) from module wb_conmax_top (D = \s4.msel.arb2.next_state [0], Q = \s4.msel.arb2.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$47391 ($_DFF_PP0_) from module wb_conmax_top (D = \s4.msel.arb1.next_state [2], Q = \s4.msel.arb1.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$47390 ($_DFF_PP0_) from module wb_conmax_top (D = \s4.msel.arb1.next_state [1], Q = \s4.msel.arb1.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$47389 ($_DFF_PP0_) from module wb_conmax_top (D = \s4.msel.arb1.next_state [0], Q = \s4.msel.arb1.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$47172 ($_DFF_PP0_) from module wb_conmax_top (D = \s4.msel.arb0.next_state [2], Q = \s4.msel.arb0.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$47171 ($_DFF_PP0_) from module wb_conmax_top (D = \s4.msel.arb0.next_state [1], Q = \s4.msel.arb0.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$47170 ($_DFF_PP0_) from module wb_conmax_top (D = \s4.msel.arb0.next_state [0], Q = \s4.msel.arb0.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$45855 ($_DFF_PP0_) from module wb_conmax_top (D = \s3.msel.arb3.next_state [2], Q = \s3.msel.arb3.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$45854 ($_DFF_PP0_) from module wb_conmax_top (D = \s3.msel.arb3.next_state [1], Q = \s3.msel.arb3.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$45853 ($_DFF_PP0_) from module wb_conmax_top (D = \s3.msel.arb3.next_state [0], Q = \s3.msel.arb3.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$45636 ($_DFF_PP0_) from module wb_conmax_top (D = \s3.msel.arb2.next_state [2], Q = \s3.msel.arb2.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$45635 ($_DFF_PP0_) from module wb_conmax_top (D = \s3.msel.arb2.next_state [1], Q = \s3.msel.arb2.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$45634 ($_DFF_PP0_) from module wb_conmax_top (D = \s3.msel.arb2.next_state [0], Q = \s3.msel.arb2.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$45417 ($_DFF_PP0_) from module wb_conmax_top (D = \s3.msel.arb1.next_state [2], Q = \s3.msel.arb1.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$45416 ($_DFF_PP0_) from module wb_conmax_top (D = \s3.msel.arb1.next_state [1], Q = \s3.msel.arb1.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$45415 ($_DFF_PP0_) from module wb_conmax_top (D = \s3.msel.arb1.next_state [0], Q = \s3.msel.arb1.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$45198 ($_DFF_PP0_) from module wb_conmax_top (D = \s3.msel.arb0.next_state [2], Q = \s3.msel.arb0.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$45197 ($_DFF_PP0_) from module wb_conmax_top (D = \s3.msel.arb0.next_state [1], Q = \s3.msel.arb0.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$45196 ($_DFF_PP0_) from module wb_conmax_top (D = \s3.msel.arb0.next_state [0], Q = \s3.msel.arb0.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$43881 ($_DFF_PP0_) from module wb_conmax_top (D = \s2.msel.arb3.next_state [2], Q = \s2.msel.arb3.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$43880 ($_DFF_PP0_) from module wb_conmax_top (D = \s2.msel.arb3.next_state [1], Q = \s2.msel.arb3.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$43879 ($_DFF_PP0_) from module wb_conmax_top (D = \s2.msel.arb3.next_state [0], Q = \s2.msel.arb3.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$43662 ($_DFF_PP0_) from module wb_conmax_top (D = \s2.msel.arb2.next_state [2], Q = \s2.msel.arb2.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$43661 ($_DFF_PP0_) from module wb_conmax_top (D = \s2.msel.arb2.next_state [1], Q = \s2.msel.arb2.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$43660 ($_DFF_PP0_) from module wb_conmax_top (D = \s2.msel.arb2.next_state [0], Q = \s2.msel.arb2.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$43443 ($_DFF_PP0_) from module wb_conmax_top (D = \s2.msel.arb1.next_state [2], Q = \s2.msel.arb1.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$43442 ($_DFF_PP0_) from module wb_conmax_top (D = \s2.msel.arb1.next_state [1], Q = \s2.msel.arb1.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$43441 ($_DFF_PP0_) from module wb_conmax_top (D = \s2.msel.arb1.next_state [0], Q = \s2.msel.arb1.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$43224 ($_DFF_PP0_) from module wb_conmax_top (D = \s2.msel.arb0.next_state [2], Q = \s2.msel.arb0.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$43223 ($_DFF_PP0_) from module wb_conmax_top (D = \s2.msel.arb0.next_state [1], Q = \s2.msel.arb0.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$43222 ($_DFF_PP0_) from module wb_conmax_top (D = \s2.msel.arb0.next_state [0], Q = \s2.msel.arb0.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$41907 ($_DFF_PP0_) from module wb_conmax_top (D = \s1.msel.arb3.next_state [2], Q = \s1.msel.arb3.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$41906 ($_DFF_PP0_) from module wb_conmax_top (D = \s1.msel.arb3.next_state [1], Q = \s1.msel.arb3.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$41905 ($_DFF_PP0_) from module wb_conmax_top (D = \s1.msel.arb3.next_state [0], Q = \s1.msel.arb3.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$41688 ($_DFF_PP0_) from module wb_conmax_top (D = \s1.msel.arb2.next_state [2], Q = \s1.msel.arb2.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$41687 ($_DFF_PP0_) from module wb_conmax_top (D = \s1.msel.arb2.next_state [1], Q = \s1.msel.arb2.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$41686 ($_DFF_PP0_) from module wb_conmax_top (D = \s1.msel.arb2.next_state [0], Q = \s1.msel.arb2.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$41469 ($_DFF_PP0_) from module wb_conmax_top (D = \s1.msel.arb1.next_state [2], Q = \s1.msel.arb1.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$41468 ($_DFF_PP0_) from module wb_conmax_top (D = \s1.msel.arb1.next_state [1], Q = \s1.msel.arb1.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$41467 ($_DFF_PP0_) from module wb_conmax_top (D = \s1.msel.arb1.next_state [0], Q = \s1.msel.arb1.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$41250 ($_DFF_PP0_) from module wb_conmax_top (D = \s1.msel.arb0.next_state [2], Q = \s1.msel.arb0.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$41249 ($_DFF_PP0_) from module wb_conmax_top (D = \s1.msel.arb0.next_state [1], Q = \s1.msel.arb0.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$41248 ($_DFF_PP0_) from module wb_conmax_top (D = \s1.msel.arb0.next_state [0], Q = \s1.msel.arb0.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$39933 ($_DFF_PP0_) from module wb_conmax_top (D = \s0.msel.arb3.next_state [2], Q = \s0.msel.arb3.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$39932 ($_DFF_PP0_) from module wb_conmax_top (D = \s0.msel.arb3.next_state [1], Q = \s0.msel.arb3.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$39931 ($_DFF_PP0_) from module wb_conmax_top (D = \s0.msel.arb3.next_state [0], Q = \s0.msel.arb3.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$39714 ($_DFF_PP0_) from module wb_conmax_top (D = \s0.msel.arb2.next_state [2], Q = \s0.msel.arb2.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$39713 ($_DFF_PP0_) from module wb_conmax_top (D = \s0.msel.arb2.next_state [1], Q = \s0.msel.arb2.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$39712 ($_DFF_PP0_) from module wb_conmax_top (D = \s0.msel.arb2.next_state [0], Q = \s0.msel.arb2.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$39495 ($_DFF_PP0_) from module wb_conmax_top (D = \s0.msel.arb1.next_state [2], Q = \s0.msel.arb1.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$39494 ($_DFF_PP0_) from module wb_conmax_top (D = \s0.msel.arb1.next_state [1], Q = \s0.msel.arb1.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$39493 ($_DFF_PP0_) from module wb_conmax_top (D = \s0.msel.arb1.next_state [0], Q = \s0.msel.arb1.state [0]).
Adding EN signal on $auto$ff.cc:262:slice$39276 ($_DFF_PP0_) from module wb_conmax_top (D = \s0.msel.arb0.next_state [2], Q = \s0.msel.arb0.state [2]).
Adding EN signal on $auto$ff.cc:262:slice$39275 ($_DFF_PP0_) from module wb_conmax_top (D = \s0.msel.arb0.next_state [1], Q = \s0.msel.arb0.state [1]).
Adding EN signal on $auto$ff.cc:262:slice$39274 ($_DFF_PP0_) from module wb_conmax_top (D = \s0.msel.arb0.next_state [0], Q = \s0.msel.arb0.state [0]).

yosys> opt_clean

4.27.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..
Removed 0 unused cells and 3264 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

4.27.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.
<suppressed ~23040 debug messages>

4.27.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

4.27.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wb_conmax_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

4.27.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wb_conmax_top.
Performed a total of 0 changes.

yosys> opt_merge

4.27.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
<suppressed ~75648 debug messages>
Removed a total of 25216 cells.

yosys> opt_dff

4.27.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

4.27.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..
Removed 0 unused cells and 15361 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

4.27.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

4.27.23. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

4.27.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wb_conmax_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

4.27.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wb_conmax_top.
Performed a total of 0 changes.

yosys> opt_merge

4.27.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
Removed a total of 0 cells.

yosys> opt_dff

4.27.27. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

4.27.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..

yosys> opt_expr

4.27.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

4.27.30. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

4.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

4.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.
<suppressed ~8511 debug messages>

yosys> opt_merge

4.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
<suppressed ~8640 debug messages>
Removed a total of 2880 cells.

yosys> opt_dff

4.28.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

4.28.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..
Removed 0 unused cells and 1536 unused wires.
<suppressed ~1 debug messages>

4.28.5. Finished fast OPT passes.

yosys> memory_map

4.29. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

4.30. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

4.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

yosys> opt_merge -nomux

4.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

4.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wb_conmax_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

4.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wb_conmax_top.
Performed a total of 0 changes.

yosys> opt_merge

4.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
Removed a total of 0 cells.

yosys> opt_share

4.30.6. Executing OPT_SHARE pass.

yosys> opt_dff

4.30.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

4.30.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..

yosys> opt_expr -full

4.30.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

4.30.10. Finished OPT passes. (There is nothing left to do.)

yosys> techmap -map +/techmap.v

4.31. Executing TECHMAP pass (map to technology primitives).

4.31.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.31.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> opt -sat

4.32. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

4.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

yosys> opt_merge -nomux

4.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

4.32.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wb_conmax_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

4.32.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wb_conmax_top.
Performed a total of 0 changes.

yosys> opt_merge

4.32.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
Removed a total of 0 cells.

yosys> opt_dff -sat

4.32.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

4.32.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..

yosys> opt_expr

4.32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

4.32.9. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

4.33. Executing ABC pass (technology mapping using ABC).

4.33.1. Summary of detected clock domains:
  173 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$99180, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$98058, arst=\rst_i, srst={ }
  173 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$96936, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$95814, arst=\rst_i, srst={ }
  173 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$94692, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$93570, arst=\rst_i, srst={ }
  173 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$92448, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$91326, arst=\rst_i, srst={ }
  173 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$90204, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$89082, arst=\rst_i, srst={ }
  173 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$87960, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$86838, arst=\rst_i, srst={ }
  173 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$85716, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$84594, arst=\rst_i, srst={ }
  173 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$83472, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$82350, arst=\rst_i, srst={ }
  173 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$81228, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$80106, arst=\rst_i, srst={ }
  173 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$78984, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$77862, arst=\rst_i, srst={ }
  173 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$76740, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$75618, arst=\rst_i, srst={ }
  173 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$74496, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$73374, arst=\rst_i, srst={ }
  184 cells in clk=\clk_i, en=$flatten\rf.$verific$n1103$30899, arst=\rst_i, srst={ }
  72 cells in clk=\clk_i, en=$flatten\rf.$verific$n109$30871, arst=\rst_i, srst={ }
  72 cells in clk=\clk_i, en=$flatten\rf.$verific$n180$30873, arst=\rst_i, srst={ }
  56 cells in clk=\clk_i, en=$flatten\rf.$verific$n251$30875, arst=\rst_i, srst={ }
  72 cells in clk=\clk_i, en=$flatten\rf.$verific$n322$30877, arst=\rst_i, srst={ }
  56 cells in clk=\clk_i, en=$flatten\rf.$verific$n393$30879, arst=\rst_i, srst={ }
  72 cells in clk=\clk_i, en=$flatten\rf.$verific$n464$30881, arst=\rst_i, srst={ }
  56 cells in clk=\clk_i, en=$flatten\rf.$verific$n535$30883, arst=\rst_i, srst={ }
  72 cells in clk=\clk_i, en=$flatten\rf.$verific$n606$30885, arst=\rst_i, srst={ }
  56 cells in clk=\clk_i, en=$flatten\rf.$verific$n38$30869, arst=\rst_i, srst={ }
  72 cells in clk=\clk_i, en=$flatten\rf.$verific$n748$30889, arst=\rst_i, srst={ }
  56 cells in clk=\clk_i, en=$flatten\rf.$verific$n819$30891, arst=\rst_i, srst={ }
  139 cells in clk=\clk_i, en=$flatten\rf.$verific$n890$30893, arst=\rst_i, srst={ }
  56 cells in clk=\clk_i, en=$flatten\rf.$verific$n961$30895, arst=\rst_i, srst={ }
  56 cells in clk=\clk_i, en=$flatten\rf.$verific$n1032$30897, arst=\rst_i, srst={ }
  56 cells in clk=\clk_i, en=$flatten\rf.$verific$n677$30887, arst=\rst_i, srst={ }
  29 cells in clk=\clk_i, en=\s15.next, arst={ }, srst=\rst_i
  29 cells in clk=\clk_i, en=\s14.next, arst={ }, srst=\rst_i
  29 cells in clk=\clk_i, en=\s13.next, arst={ }, srst=\rst_i
  29 cells in clk=\clk_i, en=\s12.next, arst={ }, srst=\rst_i
  29 cells in clk=\clk_i, en=\s11.next, arst={ }, srst=\rst_i
  29 cells in clk=\clk_i, en=\s10.next, arst={ }, srst=\rst_i
  34 cells in clk=\clk_i, en=\s9.next, arst={ }, srst=\rst_i
  35 cells in clk=\clk_i, en=\s8.next, arst={ }, srst=\rst_i
  35 cells in clk=\clk_i, en=\s7.next, arst={ }, srst=\rst_i
  35 cells in clk=\clk_i, en=\s6.next, arst={ }, srst=\rst_i
  35 cells in clk=\clk_i, en=\s5.next, arst={ }, srst=\rst_i
  35 cells in clk=\clk_i, en=\s4.next, arst={ }, srst=\rst_i
  35 cells in clk=\clk_i, en=\s3.next, arst={ }, srst=\rst_i
  35 cells in clk=\clk_i, en=\s2.next, arst={ }, srst=\rst_i
  35 cells in clk=\clk_i, en=\s1.next, arst={ }, srst=\rst_i
  7740 cells in clk=\clk_i, en={ }, arst={ }, srst={ }
  35 cells in clk=\clk_i, en=\s0.next, arst={ }, srst=\rst_i
  1021 cells in clk=\clk_i, en={ }, arst={ }, srst=!\rf.rf_sel
  920 cells in clk=\clk_i, en=!$flatten\m7.$verific$n1723$30458, arst=\rst_i, srst={ }
  919 cells in clk=\clk_i, en=!$flatten\m6.$verific$n1723$30458, arst=\rst_i, srst={ }
  919 cells in clk=\clk_i, en=!$flatten\m5.$verific$n1723$30458, arst=\rst_i, srst={ }
  919 cells in clk=\clk_i, en=!$flatten\m4.$verific$n1723$30458, arst=\rst_i, srst={ }
  904 cells in clk=\clk_i, en=!$flatten\m3.$verific$n1723$30458, arst=\rst_i, srst={ }
  904 cells in clk=\clk_i, en=!$flatten\m2.$verific$n1723$30458, arst=\rst_i, srst={ }
  904 cells in clk=\clk_i, en=!$flatten\m1.$verific$n1723$30458, arst=\rst_i, srst={ }
  904 cells in clk=\clk_i, en=!$flatten\m0.$verific$n1723$30458, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$144060, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$142938, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$141816, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$140694, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$139572, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$138450, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$137328, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$136206, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$135084, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$133962, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$132840, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$131718, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$130596, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$129474, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$128352, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$127230, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$126108, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$124986, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$123864, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$122742, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$121620, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$120498, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$119376, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$118254, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$117132, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$116010, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$114888, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$113766, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$112644, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$111522, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$110400, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$109278, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$108156, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$107034, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$105912, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$104790, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$103668, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$102546, arst=\rst_i, srst={ }
  170 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$101424, arst=\rst_i, srst={ }
  171 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$100302, arst=\rst_i, srst={ }

4.33.2. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$99180, asynchronously reset by \rst_i
Extracted 173 gates and 186 wires to a netlist network with 12 inputs and 4 outputs.

4.33.2.1. Executing ABC.

4.33.3. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$98058, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.33.3.1. Executing ABC.

4.33.4. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$96936, asynchronously reset by \rst_i
Extracted 173 gates and 186 wires to a netlist network with 12 inputs and 4 outputs.

4.33.4.1. Executing ABC.

4.33.5. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$95814, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.33.5.1. Executing ABC.

4.33.6. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$94692, asynchronously reset by \rst_i
Extracted 173 gates and 186 wires to a netlist network with 12 inputs and 4 outputs.

4.33.6.1. Executing ABC.

4.33.7. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$93570, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.33.7.1. Executing ABC.

4.33.8. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$92448, asynchronously reset by \rst_i
Extracted 173 gates and 186 wires to a netlist network with 12 inputs and 4 outputs.

4.33.8.1. Executing ABC.

4.33.9. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$91326, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.33.9.1. Executing ABC.

4.33.10. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$90204, asynchronously reset by \rst_i
Extracted 173 gates and 186 wires to a netlist network with 12 inputs and 4 outputs.

4.33.10.1. Executing ABC.

4.33.11. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$89082, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.33.11.1. Executing ABC.

4.33.12. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$87960, asynchronously reset by \rst_i
Extracted 173 gates and 186 wires to a netlist network with 12 inputs and 4 outputs.

4.33.12.1. Executing ABC.

4.33.13. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$86838, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.33.13.1. Executing ABC.

4.33.14. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$85716, asynchronously reset by \rst_i
Extracted 173 gates and 186 wires to a netlist network with 12 inputs and 4 outputs.

4.33.14.1. Executing ABC.

4.33.15. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$84594, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.33.15.1. Executing ABC.

4.33.16. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$83472, asynchronously reset by \rst_i
Extracted 173 gates and 186 wires to a netlist network with 12 inputs and 4 outputs.

4.33.16.1. Executing ABC.

4.33.17. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$82350, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.33.17.1. Executing ABC.

4.33.18. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$81228, asynchronously reset by \rst_i
Extracted 173 gates and 186 wires to a netlist network with 12 inputs and 4 outputs.

4.33.18.1. Executing ABC.

4.33.19. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$80106, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.33.19.1. Executing ABC.

4.33.20. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$78984, asynchronously reset by \rst_i
Extracted 173 gates and 186 wires to a netlist network with 12 inputs and 4 outputs.

4.33.20.1. Executing ABC.

4.33.21. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$77862, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.33.21.1. Executing ABC.

4.33.22. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$76740, asynchronously reset by \rst_i
Extracted 173 gates and 186 wires to a netlist network with 12 inputs and 4 outputs.

4.33.22.1. Executing ABC.

4.33.23. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$75618, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.33.23.1. Executing ABC.

4.33.24. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$74496, asynchronously reset by \rst_i
Extracted 173 gates and 186 wires to a netlist network with 12 inputs and 4 outputs.

4.33.24.1. Executing ABC.

4.33.25. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$73374, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.33.25.1. Executing ABC.

4.33.26. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $flatten\rf.$verific$n1103$30899, asynchronously reset by \rst_i
Extracted 184 gates and 332 wires to a netlist network with 148 inputs and 72 outputs.

4.33.26.1. Executing ABC.

4.33.27. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $flatten\rf.$verific$n109$30871, asynchronously reset by \rst_i
Extracted 72 gates and 105 wires to a netlist network with 33 inputs and 56 outputs.

4.33.27.1. Executing ABC.

4.33.28. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $flatten\rf.$verific$n180$30873, asynchronously reset by \rst_i
Extracted 72 gates and 105 wires to a netlist network with 33 inputs and 56 outputs.

4.33.28.1. Executing ABC.

4.33.29. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $flatten\rf.$verific$n251$30875, asynchronously reset by \rst_i
Extracted 56 gates and 72 wires to a netlist network with 16 inputs and 56 outputs.

4.33.29.1. Executing ABC.

4.33.30. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $flatten\rf.$verific$n322$30877, asynchronously reset by \rst_i
Extracted 72 gates and 105 wires to a netlist network with 33 inputs and 56 outputs.

4.33.30.1. Executing ABC.

4.33.31. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $flatten\rf.$verific$n393$30879, asynchronously reset by \rst_i
Extracted 56 gates and 72 wires to a netlist network with 16 inputs and 56 outputs.

4.33.31.1. Executing ABC.

4.33.32. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $flatten\rf.$verific$n464$30881, asynchronously reset by \rst_i
Extracted 72 gates and 105 wires to a netlist network with 33 inputs and 56 outputs.

4.33.32.1. Executing ABC.

4.33.33. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $flatten\rf.$verific$n535$30883, asynchronously reset by \rst_i
Extracted 56 gates and 72 wires to a netlist network with 16 inputs and 56 outputs.

4.33.33.1. Executing ABC.

4.33.34. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $flatten\rf.$verific$n606$30885, asynchronously reset by \rst_i
Extracted 72 gates and 105 wires to a netlist network with 33 inputs and 56 outputs.

4.33.34.1. Executing ABC.

4.33.35. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $flatten\rf.$verific$n38$30869, asynchronously reset by \rst_i
Extracted 56 gates and 72 wires to a netlist network with 16 inputs and 56 outputs.

4.33.35.1. Executing ABC.

4.33.36. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $flatten\rf.$verific$n748$30889, asynchronously reset by \rst_i
Extracted 72 gates and 105 wires to a netlist network with 33 inputs and 56 outputs.

4.33.36.1. Executing ABC.

4.33.37. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $flatten\rf.$verific$n819$30891, asynchronously reset by \rst_i
Extracted 56 gates and 72 wires to a netlist network with 16 inputs and 56 outputs.

4.33.37.1. Executing ABC.

4.33.38. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $flatten\rf.$verific$n890$30893, asynchronously reset by \rst_i
Extracted 139 gates and 197 wires to a netlist network with 58 inputs and 117 outputs.

4.33.38.1. Executing ABC.

4.33.39. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $flatten\rf.$verific$n961$30895, asynchronously reset by \rst_i
Extracted 56 gates and 72 wires to a netlist network with 16 inputs and 56 outputs.

4.33.39.1. Executing ABC.

4.33.40. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $flatten\rf.$verific$n1032$30897, asynchronously reset by \rst_i
Extracted 56 gates and 72 wires to a netlist network with 16 inputs and 56 outputs.

4.33.40.1. Executing ABC.

4.33.41. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $flatten\rf.$verific$n677$30887, asynchronously reset by \rst_i
Extracted 56 gates and 72 wires to a netlist network with 16 inputs and 56 outputs.

4.33.41.1. Executing ABC.

4.33.42. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \s15.next, synchronously reset by \rst_i
Extracted 29 gates and 60 wires to a netlist network with 30 inputs and 4 outputs.

4.33.42.1. Executing ABC.

4.33.43. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \s14.next, synchronously reset by \rst_i
Extracted 29 gates and 60 wires to a netlist network with 30 inputs and 4 outputs.

4.33.43.1. Executing ABC.

4.33.44. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \s13.next, synchronously reset by \rst_i
Extracted 29 gates and 60 wires to a netlist network with 30 inputs and 4 outputs.

4.33.44.1. Executing ABC.

4.33.45. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \s12.next, synchronously reset by \rst_i
Extracted 29 gates and 60 wires to a netlist network with 30 inputs and 4 outputs.

4.33.45.1. Executing ABC.

4.33.46. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \s11.next, synchronously reset by \rst_i
Extracted 29 gates and 60 wires to a netlist network with 30 inputs and 4 outputs.

4.33.46.1. Executing ABC.

4.33.47. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \s10.next, synchronously reset by \rst_i
Extracted 29 gates and 60 wires to a netlist network with 30 inputs and 4 outputs.

4.33.47.1. Executing ABC.

4.33.48. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \s9.next, synchronously reset by \rst_i
Extracted 34 gates and 70 wires to a netlist network with 35 inputs and 4 outputs.

4.33.48.1. Executing ABC.

4.33.49. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \s8.next, synchronously reset by \rst_i
Extracted 35 gates and 72 wires to a netlist network with 36 inputs and 3 outputs.

4.33.49.1. Executing ABC.

4.33.50. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \s7.next, synchronously reset by \rst_i
Extracted 35 gates and 72 wires to a netlist network with 36 inputs and 3 outputs.

4.33.50.1. Executing ABC.

4.33.51. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \s6.next, synchronously reset by \rst_i
Extracted 35 gates and 72 wires to a netlist network with 36 inputs and 3 outputs.

4.33.51.1. Executing ABC.

4.33.52. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \s5.next, synchronously reset by \rst_i
Extracted 35 gates and 72 wires to a netlist network with 36 inputs and 3 outputs.

4.33.52.1. Executing ABC.

4.33.53. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \s4.next, synchronously reset by \rst_i
Extracted 35 gates and 72 wires to a netlist network with 36 inputs and 3 outputs.

4.33.53.1. Executing ABC.

4.33.54. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \s3.next, synchronously reset by \rst_i
Extracted 35 gates and 72 wires to a netlist network with 36 inputs and 3 outputs.

4.33.54.1. Executing ABC.

4.33.55. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \s2.next, synchronously reset by \rst_i
Extracted 35 gates and 72 wires to a netlist network with 36 inputs and 3 outputs.

4.33.55.1. Executing ABC.

4.33.56. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \s1.next, synchronously reset by \rst_i
Extracted 35 gates and 72 wires to a netlist network with 36 inputs and 3 outputs.

4.33.56.1. Executing ABC.

4.33.57. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i
Extracted 7740 gates and 8986 wires to a netlist network with 1245 inputs and 1261 outputs.

4.33.57.1. Executing ABC.

4.33.58. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$162180$lo008, synchronously reset by \rst_i
Extracted 35 gates and 72 wires to a netlist network with 36 inputs and 3 outputs.

4.33.58.1. Executing ABC.

4.33.59. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, synchronously reset by !\rf.rf_sel
Extracted 1021 gates and 1729 wires to a netlist network with 707 inputs and 557 outputs.

4.33.59.1. Executing ABC.

4.33.60. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$flatten\m7.$verific$n1723$30458, asynchronously reset by \rst_i
Extracted 920 gates and 1583 wires to a netlist network with 662 inputs and 181 outputs.

4.33.60.1. Executing ABC.

4.33.61. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$flatten\m6.$verific$n1723$30458, asynchronously reset by \rst_i
Extracted 919 gates and 1581 wires to a netlist network with 661 inputs and 180 outputs.

4.33.61.1. Executing ABC.

4.33.62. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$flatten\m5.$verific$n1723$30458, asynchronously reset by \rst_i
Extracted 919 gates and 1581 wires to a netlist network with 661 inputs and 180 outputs.

4.33.62.1. Executing ABC.

4.33.63. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$flatten\m4.$verific$n1723$30458, asynchronously reset by \rst_i
Extracted 919 gates and 1581 wires to a netlist network with 661 inputs and 180 outputs.

4.33.63.1. Executing ABC.

4.33.64. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$flatten\m3.$verific$n1723$30458, asynchronously reset by \rst_i
Extracted 904 gates and 1566 wires to a netlist network with 661 inputs and 180 outputs.

4.33.64.1. Executing ABC.

4.33.65. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$flatten\m2.$verific$n1723$30458, asynchronously reset by \rst_i
Extracted 904 gates and 1566 wires to a netlist network with 661 inputs and 180 outputs.

4.33.65.1. Executing ABC.

4.33.66. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$flatten\m1.$verific$n1723$30458, asynchronously reset by \rst_i
Extracted 904 gates and 1566 wires to a netlist network with 661 inputs and 180 outputs.

4.33.66.1. Executing ABC.

4.33.67. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$flatten\m0.$verific$n1723$30458, asynchronously reset by \rst_i
Extracted 904 gates and 1566 wires to a netlist network with 661 inputs and 180 outputs.

4.33.67.1. Executing ABC.

4.33.68. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$144060, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.33.68.1. Executing ABC.

4.33.69. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$142938, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.33.69.1. Executing ABC.

4.33.70. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$141816, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.33.70.1. Executing ABC.

4.33.71. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$140694, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.33.71.1. Executing ABC.

4.33.72. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$139572, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.33.72.1. Executing ABC.

4.33.73. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$138450, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.33.73.1. Executing ABC.

4.33.74. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$137328, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.33.74.1. Executing ABC.

4.33.75. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$136206, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.33.75.1. Executing ABC.

4.33.76. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$135084, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.33.76.1. Executing ABC.

4.33.77. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$133962, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.33.77.1. Executing ABC.

4.33.78. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$132840, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.33.78.1. Executing ABC.

4.33.79. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$131718, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.33.79.1. Executing ABC.

4.33.80. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$130596, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.33.80.1. Executing ABC.

4.33.81. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$129474, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.33.81.1. Executing ABC.

4.33.82. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$128352, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.33.82.1. Executing ABC.

4.33.83. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$127230, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.33.83.1. Executing ABC.

4.33.84. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$126108, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.33.84.1. Executing ABC.

4.33.85. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$124986, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.33.85.1. Executing ABC.

4.33.86. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$123864, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.33.86.1. Executing ABC.

4.33.87. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$122742, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.33.87.1. Executing ABC.

4.33.88. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$121620, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.33.88.1. Executing ABC.

4.33.89. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$120498, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.33.89.1. Executing ABC.

4.33.90. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$119376, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.33.90.1. Executing ABC.

4.33.91. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$118254, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.33.91.1. Executing ABC.

4.33.92. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$117132, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.33.92.1. Executing ABC.

4.33.93. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$116010, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.33.93.1. Executing ABC.

4.33.94. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$114888, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.33.94.1. Executing ABC.

4.33.95. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$113766, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.33.95.1. Executing ABC.

4.33.96. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$112644, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.33.96.1. Executing ABC.

4.33.97. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$111522, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.33.97.1. Executing ABC.

4.33.98. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$110400, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.33.98.1. Executing ABC.

4.33.99. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$109278, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.33.99.1. Executing ABC.

4.33.100. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$108156, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.33.100.1. Executing ABC.

4.33.101. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$107034, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.33.101.1. Executing ABC.

4.33.102. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$105912, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.33.102.1. Executing ABC.

4.33.103. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$104790, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.33.103.1. Executing ABC.

4.33.104. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$103668, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.33.104.1. Executing ABC.

4.33.105. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$102546, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.33.105.1. Executing ABC.

4.33.106. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$101424, asynchronously reset by \rst_i
Extracted 170 gates and 179 wires to a netlist network with 8 inputs and 4 outputs.

4.33.106.1. Executing ABC.

4.33.107. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$100302, asynchronously reset by \rst_i
Extracted 171 gates and 182 wires to a netlist network with 10 inputs and 4 outputs.

4.33.107.1. Executing ABC.

yosys> abc -dff

4.34. Executing ABC pass (technology mapping using ABC).

4.34.1. Summary of detected clock domains:
  114 cells in clk=\clk_i, en=$abc$196379$auto$opt_dff.cc:219:make_patterns_logic$110400, arst=\rst_i, srst={ }
  115 cells in clk=\clk_i, en=$abc$197084$auto$opt_dff.cc:219:make_patterns_logic$103668, arst=\rst_i, srst={ }
  116 cells in clk=\clk_i, en=$abc$196967$auto$opt_dff.cc:219:make_patterns_logic$104790, arst=\rst_i, srst={ }
  114 cells in clk=\clk_i, en=$abc$196849$auto$opt_dff.cc:219:make_patterns_logic$105912, arst=\rst_i, srst={ }
  117 cells in clk=\clk_i, en=$abc$196731$auto$opt_dff.cc:219:make_patterns_logic$107034, arst=\rst_i, srst={ }
  120 cells in clk=\clk_i, en=$abc$196257$auto$opt_dff.cc:219:make_patterns_logic$111522, arst=\rst_i, srst={ }
  113 cells in clk=\clk_i, en=$abc$196614$auto$opt_dff.cc:219:make_patterns_logic$108156, arst=\rst_i, srst={ }
  115 cells in clk=\clk_i, en=$abc$195905$auto$opt_dff.cc:219:make_patterns_logic$114888, arst=\rst_i, srst={ }
  115 cells in clk=\clk_i, en=$abc$192980$auto$opt_dff.cc:219:make_patterns_logic$142938, arst=\rst_i, srst={ }
  116 cells in clk=\clk_i, en=$abc$193097$auto$opt_dff.cc:219:make_patterns_logic$141816, arst=\rst_i, srst={ }
  114 cells in clk=\clk_i, en=$abc$196022$auto$opt_dff.cc:219:make_patterns_logic$113766, arst=\rst_i, srst={ }
  114 cells in clk=\clk_i, en=$abc$192863$auto$opt_dff.cc:219:make_patterns_logic$144060, arst=\rst_i, srst={ }
  113 cells in clk=\clk_i, en=$abc$193214$auto$opt_dff.cc:219:make_patterns_logic$140694, arst=\rst_i, srst={ }
  115 cells in clk=\clk_i, en=$abc$193331$auto$opt_dff.cc:219:make_patterns_logic$139572, arst=\rst_i, srst={ }
  115 cells in clk=\clk_i, en=$abc$194618$auto$opt_dff.cc:219:make_patterns_logic$127230, arst=\rst_i, srst={ }
  410 cells in clk=\clk_i, en=$abc$162180$lo071, arst={ }, srst=\rst_i
  408 cells in clk=\clk_i, en=$abc$162180$lo053, arst={ }, srst=\rst_i
  403 cells in clk=\clk_i, en=$abc$162180$lo017, arst={ }, srst=\rst_i
  67 cells in clk=\clk_i, en=$abc$162180$lo143, arst={ }, srst=\rst_i
  413 cells in clk=\clk_i, en=$abc$162180$lo107, arst={ }, srst=\rst_i
  411 cells in clk=\clk_i, en=$abc$162180$lo098, arst={ }, srst=\rst_i
  402 cells in clk=\clk_i, en=$abc$162180$lo080, arst={ }, srst=\rst_i
  74 cells in clk=\clk_i, en=$abc$162180$flatten\rf.$verific$n890$30893, arst=\rst_i, srst={ }
  121 cells in clk=\clk_i, en=$abc$159345$auto$opt_dff.cc:219:make_patterns_logic$78984, arst=\rst_i, srst={ }
  118 cells in clk=\clk_i, en=$abc$157194$auto$opt_dff.cc:219:make_patterns_logic$99180, arst=\rst_i, srst={ }
  118 cells in clk=\clk_i, en=$abc$157911$auto$opt_dff.cc:219:make_patterns_logic$92448, arst=\rst_i, srst={ }
  68 cells in clk=\clk_i, en=$abc$162180$flatten\rf.$verific$n393$30879, arst=\rst_i, srst={ }
  113 cells in clk=\clk_i, en=$abc$157794$auto$opt_dff.cc:219:make_patterns_logic$93570, arst=\rst_i, srst={ }
  417 cells in clk=\clk_i, en=$abc$162180$lo026, arst={ }, srst=\rst_i
  113 cells in clk=\clk_i, en=$abc$157316$auto$opt_dff.cc:219:make_patterns_logic$98058, arst=\rst_i, srst={ }
  119 cells in clk=\clk_i, en=$abc$158150$auto$opt_dff.cc:219:make_patterns_logic$90204, arst=\rst_i, srst={ }
  113 cells in clk=\clk_i, en=$abc$158033$auto$opt_dff.cc:219:make_patterns_logic$91326, arst=\rst_i, srst={ }
  120 cells in clk=\clk_i, en=$abc$159106$auto$opt_dff.cc:219:make_patterns_logic$81228, arst=\rst_i, srst={ }
  118 cells in clk=\clk_i, en=$abc$159828$auto$opt_dff.cc:219:make_patterns_logic$74496, arst=\rst_i, srst={ }
  118 cells in clk=\clk_i, en=$abc$159706$auto$opt_dff.cc:219:make_patterns_logic$75618, arst=\rst_i, srst={ }
  116 cells in clk=\clk_i, en=$abc$196496$auto$opt_dff.cc:219:make_patterns_logic$109278, arst=\rst_i, srst={ }
  115 cells in clk=\clk_i, en=$abc$196139$auto$opt_dff.cc:219:make_patterns_logic$112644, arst=\rst_i, srst={ }
  114 cells in clk=\clk_i, en=$abc$197201$auto$opt_dff.cc:219:make_patterns_logic$102546, arst=\rst_i, srst={ }
  116 cells in clk=\clk_i, en=$abc$197318$auto$opt_dff.cc:219:make_patterns_logic$101424, arst=\rst_i, srst={ }
  114 cells in clk=\clk_i, en=$abc$159228$auto$opt_dff.cc:219:make_patterns_logic$80106, arst=\rst_i, srst={ }
  1396 cells in clk=\clk_i, en=!$abc$191387$flatten\m0.$verific$n1723$30458, arst=\rst_i, srst={ }
  11931 cells in clk=\clk_i, en={ }, arst={ }, srst={ }
  81 cells in clk=\clk_i, en=$abc$162180$flatten\rf.$verific$n677$30887, arst=\rst_i, srst={ }
  407 cells in clk=\clk_i, en=$abc$162180$lo116, arst={ }, srst=\rst_i
  118 cells in clk=\clk_i, en=$abc$157672$auto$opt_dff.cc:219:make_patterns_logic$94692, arst=\rst_i, srst={ }
  113 cells in clk=\clk_i, en=$abc$157555$auto$opt_dff.cc:219:make_patterns_logic$95814, arst=\rst_i, srst={ }
  118 cells in clk=\clk_i, en=$abc$157433$auto$opt_dff.cc:219:make_patterns_logic$96936, arst=\rst_i, srst={ }
  121 cells in clk=\clk_i, en=$abc$158628$auto$opt_dff.cc:219:make_patterns_logic$85716, arst=\rst_i, srst={ }
  121 cells in clk=\clk_i, en=$abc$158867$auto$opt_dff.cc:219:make_patterns_logic$83472, arst=\rst_i, srst={ }
  115 cells in clk=\clk_i, en=$abc$158272$auto$opt_dff.cc:219:make_patterns_logic$89082, arst=\rst_i, srst={ }
  113 cells in clk=\clk_i, en=$abc$158511$auto$opt_dff.cc:219:make_patterns_logic$86838, arst=\rst_i, srst={ }
  113 cells in clk=\clk_i, en=$abc$158750$auto$opt_dff.cc:219:make_patterns_logic$84594, arst=\rst_i, srst={ }
  118 cells in clk=\clk_i, en=$abc$158389$auto$opt_dff.cc:219:make_patterns_logic$87960, arst=\rst_i, srst={ }
  113 cells in clk=\clk_i, en=$abc$158989$auto$opt_dff.cc:219:make_patterns_logic$82350, arst=\rst_i, srst={ }
  118 cells in clk=\clk_i, en=$abc$159584$auto$opt_dff.cc:219:make_patterns_logic$76740, arst=\rst_i, srst={ }
  113 cells in clk=\clk_i, en=$abc$159950$auto$opt_dff.cc:219:make_patterns_logic$73374, arst=\rst_i, srst={ }
  113 cells in clk=\clk_i, en=$abc$159467$auto$opt_dff.cc:219:make_patterns_logic$77862, arst=\rst_i, srst={ }
  168 cells in clk=\clk_i, en=$abc$162180$flatten\rf.$verific$n1103$30899, arst=\rst_i, srst={ }
  72 cells in clk=\clk_i, en=$abc$162180$flatten\rf.$verific$n180$30873, arst=\rst_i, srst={ }
  58 cells in clk=\clk_i, en=$abc$162180$flatten\rf.$verific$n109$30871, arst=\rst_i, srst={ }
  246 cells in clk=\clk_i, en=$abc$162180$flatten\rf.$verific$n251$30875, arst=\rst_i, srst={ }
  62 cells in clk=\clk_i, en=$abc$162180$flatten\rf.$verific$n322$30877, arst=\rst_i, srst={ }
  64 cells in clk=\clk_i, en=$abc$162180$flatten\rf.$verific$n464$30881, arst=\rst_i, srst={ }
  74 cells in clk=\clk_i, en=$abc$162180$flatten\rf.$verific$n535$30883, arst=\rst_i, srst={ }
  61 cells in clk=\clk_i, en=$abc$162180$flatten\rf.$verific$n606$30885, arst=\rst_i, srst={ }
  73 cells in clk=\clk_i, en=$abc$162180$flatten\rf.$verific$n38$30869, arst=\rst_i, srst={ }
  70 cells in clk=\clk_i, en=$abc$162180$flatten\rf.$verific$n748$30889, arst=\rst_i, srst={ }
  69 cells in clk=\clk_i, en=$abc$162180$flatten\rf.$verific$n819$30891, arst=\rst_i, srst={ }
  59 cells in clk=\clk_i, en=$abc$162180$flatten\rf.$verific$n961$30895, arst=\rst_i, srst={ }
  70 cells in clk=\clk_i, en=$abc$162180$flatten\rf.$verific$n1032$30897, arst=\rst_i, srst={ }
  408 cells in clk=\clk_i, en=$abc$162180$lo134, arst={ }, srst=\rst_i
  399 cells in clk=\clk_i, en=$abc$162180$lo125, arst={ }, srst=\rst_i
  400 cells in clk=\clk_i, en=$abc$162180$lo089, arst={ }, srst=\rst_i
  414 cells in clk=\clk_i, en=$abc$162180$lo062, arst={ }, srst=\rst_i
  407 cells in clk=\clk_i, en=$abc$162180$lo044, arst={ }, srst=\rst_i
  403 cells in clk=\clk_i, en=$abc$162180$lo035, arst={ }, srst=\rst_i
  402 cells in clk=\clk_i, en=$abc$162180$lo008, arst={ }, srst=\rst_i
  1396 cells in clk=\clk_i, en=!$abc$181062$flatten\m7.$verific$n1723$30458, arst=\rst_i, srst={ }
  1459 cells in clk=\clk_i, en={ }, arst={ }, srst=!$abc$179523$rf.rf_sel
  1395 cells in clk=\clk_i, en=!$abc$182537$flatten\m6.$verific$n1723$30458, arst=\rst_i, srst={ }
  1395 cells in clk=\clk_i, en=!$abc$184011$flatten\m5.$verific$n1723$30458, arst=\rst_i, srst={ }
  1394 cells in clk=\clk_i, en=!$abc$185485$flatten\m4.$verific$n1723$30458, arst=\rst_i, srst={ }
  113 cells in clk=\clk_i, en=$abc$193916$auto$opt_dff.cc:219:make_patterns_logic$133962, arst=\rst_i, srst={ }
  113 cells in clk=\clk_i, en=$abc$194150$auto$opt_dff.cc:219:make_patterns_logic$131718, arst=\rst_i, srst={ }
  113 cells in clk=\clk_i, en=$abc$195320$auto$opt_dff.cc:219:make_patterns_logic$120498, arst=\rst_i, srst={ }
  114 cells in clk=\clk_i, en=$abc$195788$auto$opt_dff.cc:219:make_patterns_logic$116010, arst=\rst_i, srst={ }
  113 cells in clk=\clk_i, en=$abc$193682$auto$opt_dff.cc:219:make_patterns_logic$136206, arst=\rst_i, srst={ }
  113 cells in clk=\clk_i, en=$abc$194267$auto$opt_dff.cc:219:make_patterns_logic$130596, arst=\rst_i, srst={ }
  113 cells in clk=\clk_i, en=$abc$195086$auto$opt_dff.cc:219:make_patterns_logic$122742, arst=\rst_i, srst={ }
  113 cells in clk=\clk_i, en=$abc$195203$auto$opt_dff.cc:219:make_patterns_logic$121620, arst=\rst_i, srst={ }
  1397 cells in clk=\clk_i, en=!$abc$186959$flatten\m3.$verific$n1723$30458, arst=\rst_i, srst={ }
  114 cells in clk=\clk_i, en=$abc$193448$auto$opt_dff.cc:219:make_patterns_logic$138450, arst=\rst_i, srst={ }
  114 cells in clk=\clk_i, en=$abc$194501$auto$opt_dff.cc:219:make_patterns_logic$128352, arst=\rst_i, srst={ }
  1395 cells in clk=\clk_i, en=!$abc$188435$flatten\m2.$verific$n1723$30458, arst=\rst_i, srst={ }
  113 cells in clk=\clk_i, en=$abc$195671$auto$opt_dff.cc:219:make_patterns_logic$117132, arst=\rst_i, srst={ }
  113 cells in clk=\clk_i, en=$abc$193799$auto$opt_dff.cc:219:make_patterns_logic$135084, arst=\rst_i, srst={ }
  1395 cells in clk=\clk_i, en=!$abc$189911$flatten\m1.$verific$n1723$30458, arst=\rst_i, srst={ }
  113 cells in clk=\clk_i, en=$abc$194033$auto$opt_dff.cc:219:make_patterns_logic$132840, arst=\rst_i, srst={ }
  113 cells in clk=\clk_i, en=$abc$193565$auto$opt_dff.cc:219:make_patterns_logic$137328, arst=\rst_i, srst={ }
  113 cells in clk=\clk_i, en=$abc$195437$auto$opt_dff.cc:219:make_patterns_logic$119376, arst=\rst_i, srst={ }
  113 cells in clk=\clk_i, en=$abc$195554$auto$opt_dff.cc:219:make_patterns_logic$118254, arst=\rst_i, srst={ }
  113 cells in clk=\clk_i, en=$abc$194384$auto$opt_dff.cc:219:make_patterns_logic$129474, arst=\rst_i, srst={ }
  114 cells in clk=\clk_i, en=$abc$194735$auto$opt_dff.cc:219:make_patterns_logic$126108, arst=\rst_i, srst={ }
  113 cells in clk=\clk_i, en=$abc$194852$auto$opt_dff.cc:219:make_patterns_logic$124986, arst=\rst_i, srst={ }
  113 cells in clk=\clk_i, en=$abc$194969$auto$opt_dff.cc:219:make_patterns_logic$123864, arst=\rst_i, srst={ }
  118 cells in clk=\clk_i, en=$abc$197435$auto$opt_dff.cc:219:make_patterns_logic$100302, arst=\rst_i, srst={ }

4.34.2. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$196379$auto$opt_dff.cc:219:make_patterns_logic$110400, asynchronously reset by \rst_i
Extracted 114 gates and 124 wires to a netlist network with 10 inputs and 4 outputs.

4.34.2.1. Executing ABC.

4.34.3. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$197084$auto$opt_dff.cc:219:make_patterns_logic$103668, asynchronously reset by \rst_i
Extracted 115 gates and 126 wires to a netlist network with 11 inputs and 4 outputs.

4.34.3.1. Executing ABC.

4.34.4. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$196967$auto$opt_dff.cc:219:make_patterns_logic$104790, asynchronously reset by \rst_i
Extracted 116 gates and 128 wires to a netlist network with 12 inputs and 4 outputs.

4.34.4.1. Executing ABC.

4.34.5. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$196849$auto$opt_dff.cc:219:make_patterns_logic$105912, asynchronously reset by \rst_i
Extracted 114 gates and 122 wires to a netlist network with 8 inputs and 4 outputs.

4.34.5.1. Executing ABC.

4.34.6. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$196731$auto$opt_dff.cc:219:make_patterns_logic$107034, asynchronously reset by \rst_i
Extracted 117 gates and 129 wires to a netlist network with 12 inputs and 4 outputs.

4.34.6.1. Executing ABC.

4.34.7. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$196257$auto$opt_dff.cc:219:make_patterns_logic$111522, asynchronously reset by \rst_i
Extracted 120 gates and 131 wires to a netlist network with 11 inputs and 4 outputs.

4.34.7.1. Executing ABC.

4.34.8. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$196614$auto$opt_dff.cc:219:make_patterns_logic$108156, asynchronously reset by \rst_i
Extracted 113 gates and 121 wires to a netlist network with 8 inputs and 4 outputs.

4.34.8.1. Executing ABC.

4.34.9. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$195905$auto$opt_dff.cc:219:make_patterns_logic$114888, asynchronously reset by \rst_i
Extracted 115 gates and 126 wires to a netlist network with 11 inputs and 4 outputs.

4.34.9.1. Executing ABC.

4.34.10. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$192980$auto$opt_dff.cc:219:make_patterns_logic$142938, asynchronously reset by \rst_i
Extracted 115 gates and 126 wires to a netlist network with 11 inputs and 4 outputs.

4.34.10.1. Executing ABC.

4.34.11. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$193097$auto$opt_dff.cc:219:make_patterns_logic$141816, asynchronously reset by \rst_i
Extracted 116 gates and 128 wires to a netlist network with 12 inputs and 4 outputs.

4.34.11.1. Executing ABC.

4.34.12. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$196022$auto$opt_dff.cc:219:make_patterns_logic$113766, asynchronously reset by \rst_i
Extracted 114 gates and 124 wires to a netlist network with 10 inputs and 4 outputs.

4.34.12.1. Executing ABC.

4.34.13. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$192863$auto$opt_dff.cc:219:make_patterns_logic$144060, asynchronously reset by \rst_i
Extracted 114 gates and 124 wires to a netlist network with 10 inputs and 4 outputs.

4.34.13.1. Executing ABC.

4.34.14. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$193214$auto$opt_dff.cc:219:make_patterns_logic$140694, asynchronously reset by \rst_i
Extracted 113 gates and 121 wires to a netlist network with 8 inputs and 4 outputs.

4.34.14.1. Executing ABC.

4.34.15. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$193331$auto$opt_dff.cc:219:make_patterns_logic$139572, asynchronously reset by \rst_i
Extracted 115 gates and 126 wires to a netlist network with 11 inputs and 4 outputs.

4.34.15.1. Executing ABC.

4.34.16. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$194618$auto$opt_dff.cc:219:make_patterns_logic$127230, asynchronously reset by \rst_i
Extracted 115 gates and 126 wires to a netlist network with 11 inputs and 4 outputs.

4.34.16.1. Executing ABC.

4.34.17. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$162180$lo071, synchronously reset by \rst_i
Extracted 410 gates and 757 wires to a netlist network with 347 inputs and 82 outputs.

4.34.17.1. Executing ABC.

4.34.18. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$162180$lo053, synchronously reset by \rst_i
Extracted 408 gates and 757 wires to a netlist network with 349 inputs and 85 outputs.

4.34.18.1. Executing ABC.

4.34.19. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$162180$lo017, synchronously reset by \rst_i
Extracted 403 gates and 738 wires to a netlist network with 335 inputs and 77 outputs.

4.34.19.1. Executing ABC.

4.34.20. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$162180$lo143, synchronously reset by \rst_i
Extracted 67 gates and 119 wires to a netlist network with 52 inputs and 3 outputs.

4.34.20.1. Executing ABC.

4.34.21. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$162180$lo107, synchronously reset by \rst_i
Extracted 413 gates and 766 wires to a netlist network with 353 inputs and 84 outputs.

4.34.21.1. Executing ABC.

4.34.22. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$162180$lo098, synchronously reset by \rst_i
Extracted 411 gates and 763 wires to a netlist network with 352 inputs and 85 outputs.

4.34.22.1. Executing ABC.

4.34.23. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$162180$lo080, synchronously reset by \rst_i
Extracted 402 gates and 740 wires to a netlist network with 338 inputs and 81 outputs.

4.34.23.1. Executing ABC.

4.34.24. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$162180$flatten\rf.$verific$n890$30893, asynchronously reset by \rst_i
Extracted 74 gates and 109 wires to a netlist network with 35 inputs and 58 outputs.

4.34.24.1. Executing ABC.

4.34.25. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$159345$auto$opt_dff.cc:219:make_patterns_logic$78984, asynchronously reset by \rst_i
Extracted 121 gates and 133 wires to a netlist network with 12 inputs and 4 outputs.

4.34.25.1. Executing ABC.

4.34.26. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$157194$auto$opt_dff.cc:219:make_patterns_logic$99180, asynchronously reset by \rst_i
Extracted 118 gates and 126 wires to a netlist network with 8 inputs and 4 outputs.

4.34.26.1. Executing ABC.

4.34.27. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$157911$auto$opt_dff.cc:219:make_patterns_logic$92448, asynchronously reset by \rst_i
Extracted 118 gates and 126 wires to a netlist network with 8 inputs and 4 outputs.

4.34.27.1. Executing ABC.

4.34.28. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$162180$flatten\rf.$verific$n393$30879, asynchronously reset by \rst_i
Extracted 68 gates and 98 wires to a netlist network with 30 inputs and 57 outputs.

4.34.28.1. Executing ABC.

4.34.29. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$157794$auto$opt_dff.cc:219:make_patterns_logic$93570, asynchronously reset by \rst_i
Extracted 113 gates and 121 wires to a netlist network with 8 inputs and 4 outputs.

4.34.29.1. Executing ABC.

4.34.30. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$162180$lo026, synchronously reset by \rst_i
Extracted 417 gates and 770 wires to a netlist network with 353 inputs and 80 outputs.

4.34.30.1. Executing ABC.

4.34.31. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$157316$auto$opt_dff.cc:219:make_patterns_logic$98058, asynchronously reset by \rst_i
Extracted 113 gates and 121 wires to a netlist network with 8 inputs and 4 outputs.

4.34.31.1. Executing ABC.

4.34.32. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$158150$auto$opt_dff.cc:219:make_patterns_logic$90204, asynchronously reset by \rst_i
Extracted 119 gates and 129 wires to a netlist network with 10 inputs and 4 outputs.

4.34.32.1. Executing ABC.

4.34.33. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$158033$auto$opt_dff.cc:219:make_patterns_logic$91326, asynchronously reset by \rst_i
Extracted 113 gates and 121 wires to a netlist network with 8 inputs and 4 outputs.

4.34.33.1. Executing ABC.

4.34.34. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$159106$auto$opt_dff.cc:219:make_patterns_logic$81228, asynchronously reset by \rst_i
Extracted 120 gates and 131 wires to a netlist network with 11 inputs and 4 outputs.

4.34.34.1. Executing ABC.

4.34.35. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$159828$auto$opt_dff.cc:219:make_patterns_logic$74496, asynchronously reset by \rst_i
Extracted 118 gates and 126 wires to a netlist network with 8 inputs and 4 outputs.

4.34.35.1. Executing ABC.

4.34.36. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$159706$auto$opt_dff.cc:219:make_patterns_logic$75618, asynchronously reset by \rst_i
Extracted 118 gates and 126 wires to a netlist network with 8 inputs and 4 outputs.

4.34.36.1. Executing ABC.

4.34.37. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$196496$auto$opt_dff.cc:219:make_patterns_logic$109278, asynchronously reset by \rst_i
Extracted 116 gates and 127 wires to a netlist network with 11 inputs and 4 outputs.

4.34.37.1. Executing ABC.

4.34.38. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$196139$auto$opt_dff.cc:219:make_patterns_logic$112644, asynchronously reset by \rst_i
Extracted 115 gates and 125 wires to a netlist network with 10 inputs and 4 outputs.

4.34.38.1. Executing ABC.

4.34.39. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$197201$auto$opt_dff.cc:219:make_patterns_logic$102546, asynchronously reset by \rst_i
Extracted 114 gates and 124 wires to a netlist network with 10 inputs and 4 outputs.

4.34.39.1. Executing ABC.

4.34.40. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$197318$auto$opt_dff.cc:219:make_patterns_logic$101424, asynchronously reset by \rst_i
Extracted 116 gates and 128 wires to a netlist network with 12 inputs and 4 outputs.

4.34.40.1. Executing ABC.

4.34.41. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$159228$auto$opt_dff.cc:219:make_patterns_logic$80106, asynchronously reset by \rst_i
Extracted 114 gates and 124 wires to a netlist network with 10 inputs and 4 outputs.

4.34.41.1. Executing ABC.

4.34.42. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$191387$flatten\m0.$verific$n1723$30458, asynchronously reset by \rst_i
Extracted 1396 gates and 2058 wires to a netlist network with 662 inputs and 149 outputs.

4.34.42.1. Executing ABC.

4.34.43. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i
Extracted 11931 gates and 13184 wires to a netlist network with 1253 inputs and 4622 outputs.

4.34.43.1. Executing ABC.

4.34.44. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$162180$flatten\rf.$verific$n677$30887, asynchronously reset by \rst_i
Extracted 81 gates and 125 wires to a netlist network with 44 inputs and 68 outputs.

4.34.44.1. Executing ABC.

4.34.45. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$204800$lo033, synchronously reset by \rst_i
Extracted 407 gates and 753 wires to a netlist network with 346 inputs and 84 outputs.

4.34.45.1. Executing ABC.

4.34.46. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$157672$auto$opt_dff.cc:219:make_patterns_logic$94692, asynchronously reset by \rst_i
Extracted 118 gates and 126 wires to a netlist network with 8 inputs and 4 outputs.

4.34.46.1. Executing ABC.

4.34.47. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$157555$auto$opt_dff.cc:219:make_patterns_logic$95814, asynchronously reset by \rst_i
Extracted 113 gates and 121 wires to a netlist network with 8 inputs and 4 outputs.

4.34.47.1. Executing ABC.

4.34.48. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$157433$auto$opt_dff.cc:219:make_patterns_logic$96936, asynchronously reset by \rst_i
Extracted 118 gates and 126 wires to a netlist network with 8 inputs and 4 outputs.

4.34.48.1. Executing ABC.

4.34.49. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$158628$auto$opt_dff.cc:219:make_patterns_logic$85716, asynchronously reset by \rst_i
Extracted 121 gates and 133 wires to a netlist network with 12 inputs and 4 outputs.

4.34.49.1. Executing ABC.

4.34.50. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$158867$auto$opt_dff.cc:219:make_patterns_logic$83472, asynchronously reset by \rst_i
Extracted 121 gates and 133 wires to a netlist network with 12 inputs and 4 outputs.

4.34.50.1. Executing ABC.

4.34.51. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$158272$auto$opt_dff.cc:219:make_patterns_logic$89082, asynchronously reset by \rst_i
Extracted 115 gates and 126 wires to a netlist network with 11 inputs and 4 outputs.

4.34.51.1. Executing ABC.

4.34.52. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$158511$auto$opt_dff.cc:219:make_patterns_logic$86838, asynchronously reset by \rst_i
Extracted 113 gates and 121 wires to a netlist network with 8 inputs and 4 outputs.

4.34.52.1. Executing ABC.

4.34.53. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$158750$auto$opt_dff.cc:219:make_patterns_logic$84594, asynchronously reset by \rst_i
Extracted 113 gates and 121 wires to a netlist network with 8 inputs and 4 outputs.

4.34.53.1. Executing ABC.

4.34.54. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$158389$auto$opt_dff.cc:219:make_patterns_logic$87960, asynchronously reset by \rst_i
Extracted 118 gates and 126 wires to a netlist network with 8 inputs and 4 outputs.

4.34.54.1. Executing ABC.

4.34.55. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$158989$auto$opt_dff.cc:219:make_patterns_logic$82350, asynchronously reset by \rst_i
Extracted 113 gates and 121 wires to a netlist network with 8 inputs and 4 outputs.

4.34.55.1. Executing ABC.

4.34.56. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$159584$auto$opt_dff.cc:219:make_patterns_logic$76740, asynchronously reset by \rst_i
Extracted 118 gates and 126 wires to a netlist network with 8 inputs and 4 outputs.

4.34.56.1. Executing ABC.

4.34.57. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$159950$auto$opt_dff.cc:219:make_patterns_logic$73374, asynchronously reset by \rst_i
Extracted 113 gates and 121 wires to a netlist network with 8 inputs and 4 outputs.

4.34.57.1. Executing ABC.

4.34.58. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$159467$auto$opt_dff.cc:219:make_patterns_logic$77862, asynchronously reset by \rst_i
Extracted 113 gates and 121 wires to a netlist network with 8 inputs and 4 outputs.

4.34.58.1. Executing ABC.

4.34.59. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$162180$flatten\rf.$verific$n1103$30899, asynchronously reset by \rst_i
Extracted 168 gates and 301 wires to a netlist network with 133 inputs and 87 outputs.

4.34.59.1. Executing ABC.

4.34.60. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$162180$flatten\rf.$verific$n180$30873, asynchronously reset by \rst_i
Extracted 72 gates and 106 wires to a netlist network with 34 inputs and 57 outputs.

4.34.60.1. Executing ABC.

4.34.61. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$162180$flatten\rf.$verific$n109$30871, asynchronously reset by \rst_i
Extracted 58 gates and 78 wires to a netlist network with 20 inputs and 57 outputs.

4.34.61.1. Executing ABC.

4.34.62. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$162180$flatten\rf.$verific$n251$30875, asynchronously reset by \rst_i
Extracted 246 gates and 342 wires to a netlist network with 96 inputs and 132 outputs.

4.34.62.1. Executing ABC.

4.34.63. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$162180$flatten\rf.$verific$n322$30877, asynchronously reset by \rst_i
Extracted 62 gates and 86 wires to a netlist network with 24 inputs and 57 outputs.

4.34.63.1. Executing ABC.

4.34.64. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$162180$flatten\rf.$verific$n464$30881, asynchronously reset by \rst_i
Extracted 64 gates and 90 wires to a netlist network with 26 inputs and 58 outputs.

4.34.64.1. Executing ABC.

4.34.65. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$162180$flatten\rf.$verific$n535$30883, asynchronously reset by \rst_i
Extracted 74 gates and 113 wires to a netlist network with 39 inputs and 60 outputs.

4.34.65.1. Executing ABC.

4.34.66. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$162180$flatten\rf.$verific$n606$30885, asynchronously reset by \rst_i
Extracted 61 gates and 85 wires to a netlist network with 24 inputs and 58 outputs.

4.34.66.1. Executing ABC.

4.34.67. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$162180$flatten\rf.$verific$n38$30869, asynchronously reset by \rst_i
Extracted 73 gates and 109 wires to a netlist network with 36 inputs and 58 outputs.

4.34.67.1. Executing ABC.

4.34.68. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$162180$flatten\rf.$verific$n748$30889, asynchronously reset by \rst_i
Extracted 70 gates and 104 wires to a netlist network with 34 inputs and 60 outputs.

4.34.68.1. Executing ABC.

4.34.69. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$162180$flatten\rf.$verific$n819$30891, asynchronously reset by \rst_i
Extracted 69 gates and 100 wires to a netlist network with 31 inputs and 57 outputs.

4.34.69.1. Executing ABC.

4.34.70. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$162180$flatten\rf.$verific$n961$30895, asynchronously reset by \rst_i
Extracted 59 gates and 79 wires to a netlist network with 20 inputs and 59 outputs.

4.34.70.1. Executing ABC.

4.34.71. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$162180$flatten\rf.$verific$n1032$30897, asynchronously reset by \rst_i
Extracted 70 gates and 103 wires to a netlist network with 33 inputs and 59 outputs.

4.34.71.1. Executing ABC.

4.34.72. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$204800$lo058, synchronously reset by \rst_i
Extracted 408 gates and 750 wires to a netlist network with 342 inputs and 79 outputs.

4.34.72.1. Executing ABC.

4.34.73. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$204800$lo075, synchronously reset by \rst_i
Extracted 399 gates and 734 wires to a netlist network with 335 inputs and 81 outputs.

4.34.73.1. Executing ABC.

4.34.74. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$204800$lo084, synchronously reset by \rst_i
Extracted 400 gates and 734 wires to a netlist network with 334 inputs and 79 outputs.

4.34.74.1. Executing ABC.

4.34.75. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$204800$lo107, synchronously reset by \rst_i
Extracted 414 gates and 766 wires to a netlist network with 352 inputs and 83 outputs.

4.34.75.1. Executing ABC.

4.34.76. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$204800$lo002, synchronously reset by \rst_i
Extracted 407 gates and 754 wires to a netlist network with 347 inputs and 85 outputs.

4.34.76.1. Executing ABC.

4.34.77. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$204800$lo123, synchronously reset by \rst_i
Extracted 403 gates and 747 wires to a netlist network with 344 inputs and 86 outputs.

4.34.77.1. Executing ABC.

4.34.78. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$204800$lo011, synchronously reset by \rst_i
Extracted 402 gates and 740 wires to a netlist network with 338 inputs and 81 outputs.

4.34.78.1. Executing ABC.

4.34.79. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$181062$flatten\m7.$verific$n1723$30458, asynchronously reset by \rst_i
Extracted 1396 gates and 2060 wires to a netlist network with 664 inputs and 151 outputs.

4.34.79.1. Executing ABC.

4.34.80. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, synchronously reset by !$abc$179523$rf.rf_sel
Extracted 1459 gates and 2172 wires to a netlist network with 713 inputs and 516 outputs.

4.34.80.1. Executing ABC.

4.34.81. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$182537$flatten\m6.$verific$n1723$30458, asynchronously reset by \rst_i
Extracted 1395 gates and 2058 wires to a netlist network with 663 inputs and 150 outputs.

4.34.81.1. Executing ABC.

4.34.82. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$184011$flatten\m5.$verific$n1723$30458, asynchronously reset by \rst_i
Extracted 1395 gates and 2058 wires to a netlist network with 663 inputs and 150 outputs.

4.34.82.1. Executing ABC.

4.34.83. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$185485$flatten\m4.$verific$n1723$30458, asynchronously reset by \rst_i
Extracted 1394 gates and 2056 wires to a netlist network with 662 inputs and 149 outputs.

4.34.83.1. Executing ABC.

4.34.84. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$193916$auto$opt_dff.cc:219:make_patterns_logic$133962, asynchronously reset by \rst_i
Extracted 113 gates and 121 wires to a netlist network with 8 inputs and 4 outputs.

4.34.84.1. Executing ABC.

4.34.85. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$194150$auto$opt_dff.cc:219:make_patterns_logic$131718, asynchronously reset by \rst_i
Extracted 113 gates and 121 wires to a netlist network with 8 inputs and 4 outputs.

4.34.85.1. Executing ABC.

4.34.86. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$195320$auto$opt_dff.cc:219:make_patterns_logic$120498, asynchronously reset by \rst_i
Extracted 113 gates and 121 wires to a netlist network with 8 inputs and 4 outputs.

4.34.86.1. Executing ABC.

4.34.87. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$195788$auto$opt_dff.cc:219:make_patterns_logic$116010, asynchronously reset by \rst_i
Extracted 114 gates and 124 wires to a netlist network with 10 inputs and 4 outputs.

4.34.87.1. Executing ABC.

4.34.88. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$193682$auto$opt_dff.cc:219:make_patterns_logic$136206, asynchronously reset by \rst_i
Extracted 113 gates and 121 wires to a netlist network with 8 inputs and 4 outputs.

4.34.88.1. Executing ABC.

4.34.89. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$194267$auto$opt_dff.cc:219:make_patterns_logic$130596, asynchronously reset by \rst_i
Extracted 113 gates and 121 wires to a netlist network with 8 inputs and 4 outputs.

4.34.89.1. Executing ABC.

4.34.90. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$195086$auto$opt_dff.cc:219:make_patterns_logic$122742, asynchronously reset by \rst_i
Extracted 113 gates and 121 wires to a netlist network with 8 inputs and 4 outputs.

4.34.90.1. Executing ABC.

4.34.91. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$195203$auto$opt_dff.cc:219:make_patterns_logic$121620, asynchronously reset by \rst_i
Extracted 113 gates and 121 wires to a netlist network with 8 inputs and 4 outputs.

4.34.91.1. Executing ABC.

4.34.92. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$186959$flatten\m3.$verific$n1723$30458, asynchronously reset by \rst_i
Extracted 1397 gates and 2060 wires to a netlist network with 663 inputs and 150 outputs.

4.34.92.1. Executing ABC.

4.34.93. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$193448$auto$opt_dff.cc:219:make_patterns_logic$138450, asynchronously reset by \rst_i
Extracted 114 gates and 124 wires to a netlist network with 10 inputs and 4 outputs.

4.34.93.1. Executing ABC.

4.34.94. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$194501$auto$opt_dff.cc:219:make_patterns_logic$128352, asynchronously reset by \rst_i
Extracted 114 gates and 124 wires to a netlist network with 10 inputs and 4 outputs.

4.34.94.1. Executing ABC.

4.34.95. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$188435$flatten\m2.$verific$n1723$30458, asynchronously reset by \rst_i
Extracted 1395 gates and 2056 wires to a netlist network with 661 inputs and 148 outputs.

4.34.95.1. Executing ABC.

4.34.96. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$195671$auto$opt_dff.cc:219:make_patterns_logic$117132, asynchronously reset by \rst_i
Extracted 113 gates and 121 wires to a netlist network with 8 inputs and 4 outputs.

4.34.96.1. Executing ABC.

4.34.97. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$193799$auto$opt_dff.cc:219:make_patterns_logic$135084, asynchronously reset by \rst_i
Extracted 113 gates and 121 wires to a netlist network with 8 inputs and 4 outputs.

4.34.97.1. Executing ABC.

4.34.98. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$189911$flatten\m1.$verific$n1723$30458, asynchronously reset by \rst_i
Extracted 1395 gates and 2056 wires to a netlist network with 661 inputs and 148 outputs.

4.34.98.1. Executing ABC.

4.34.99. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$194033$auto$opt_dff.cc:219:make_patterns_logic$132840, asynchronously reset by \rst_i
Extracted 113 gates and 121 wires to a netlist network with 8 inputs and 4 outputs.

4.34.99.1. Executing ABC.

4.34.100. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$193565$auto$opt_dff.cc:219:make_patterns_logic$137328, asynchronously reset by \rst_i
Extracted 113 gates and 121 wires to a netlist network with 8 inputs and 4 outputs.

4.34.100.1. Executing ABC.

4.34.101. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$195437$auto$opt_dff.cc:219:make_patterns_logic$119376, asynchronously reset by \rst_i
Extracted 113 gates and 121 wires to a netlist network with 8 inputs and 4 outputs.

4.34.101.1. Executing ABC.

4.34.102. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$195554$auto$opt_dff.cc:219:make_patterns_logic$118254, asynchronously reset by \rst_i
Extracted 113 gates and 121 wires to a netlist network with 8 inputs and 4 outputs.

4.34.102.1. Executing ABC.

4.34.103. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$194384$auto$opt_dff.cc:219:make_patterns_logic$129474, asynchronously reset by \rst_i
Extracted 113 gates and 121 wires to a netlist network with 8 inputs and 4 outputs.

4.34.103.1. Executing ABC.

4.34.104. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$194735$auto$opt_dff.cc:219:make_patterns_logic$126108, asynchronously reset by \rst_i
Extracted 114 gates and 124 wires to a netlist network with 10 inputs and 4 outputs.

4.34.104.1. Executing ABC.

4.34.105. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$194852$auto$opt_dff.cc:219:make_patterns_logic$124986, asynchronously reset by \rst_i
Extracted 113 gates and 121 wires to a netlist network with 8 inputs and 4 outputs.

4.34.105.1. Executing ABC.

4.34.106. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$194969$auto$opt_dff.cc:219:make_patterns_logic$123864, asynchronously reset by \rst_i
Extracted 113 gates and 121 wires to a netlist network with 8 inputs and 4 outputs.

4.34.106.1. Executing ABC.

4.34.107. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$197435$auto$opt_dff.cc:219:make_patterns_logic$100302, asynchronously reset by \rst_i
Extracted 118 gates and 126 wires to a netlist network with 8 inputs and 4 outputs.

4.34.107.1. Executing ABC.

yosys> abc -dff

4.35. Executing ABC pass (technology mapping using ABC).

4.35.1. Summary of detected clock domains:
  111 cells in clk=\clk_i, en=$abc$236136$abc$194969$auto$opt_dff.cc:219:make_patterns_logic$123864, arst=\rst_i, srst={ }
  112 cells in clk=\clk_i, en=$abc$197557$abc$196379$auto$opt_dff.cc:219:make_patterns_logic$110400, arst=\rst_i, srst={ }
  114 cells in clk=\clk_i, en=$abc$197671$abc$197084$auto$opt_dff.cc:219:make_patterns_logic$103668, arst=\rst_i, srst={ }
  115 cells in clk=\clk_i, en=$abc$197786$abc$196967$auto$opt_dff.cc:219:make_patterns_logic$104790, arst=\rst_i, srst={ }
  111 cells in clk=\clk_i, en=$abc$197902$abc$196849$auto$opt_dff.cc:219:make_patterns_logic$105912, arst=\rst_i, srst={ }
  116 cells in clk=\clk_i, en=$abc$198017$abc$196731$auto$opt_dff.cc:219:make_patterns_logic$107034, arst=\rst_i, srst={ }
  117 cells in clk=\clk_i, en=$abc$198134$abc$196257$auto$opt_dff.cc:219:make_patterns_logic$111522, arst=\rst_i, srst={ }
  111 cells in clk=\clk_i, en=$abc$198253$abc$196614$auto$opt_dff.cc:219:make_patterns_logic$108156, arst=\rst_i, srst={ }
  112 cells in clk=\clk_i, en=$abc$198368$abc$195905$auto$opt_dff.cc:219:make_patterns_logic$114888, arst=\rst_i, srst={ }
  113 cells in clk=\clk_i, en=$abc$198482$abc$192980$auto$opt_dff.cc:219:make_patterns_logic$142938, arst=\rst_i, srst={ }
  114 cells in clk=\clk_i, en=$abc$198596$abc$193097$auto$opt_dff.cc:219:make_patterns_logic$141816, arst=\rst_i, srst={ }
  112 cells in clk=\clk_i, en=$abc$198711$abc$196022$auto$opt_dff.cc:219:make_patterns_logic$113766, arst=\rst_i, srst={ }
  108 cells in clk=\clk_i, en=$abc$198826$abc$192863$auto$opt_dff.cc:219:make_patterns_logic$144060, arst=\rst_i, srst={ }
  111 cells in clk=\clk_i, en=$abc$198938$abc$193214$auto$opt_dff.cc:219:make_patterns_logic$140694, arst=\rst_i, srst={ }
  113 cells in clk=\clk_i, en=$abc$199053$abc$193331$auto$opt_dff.cc:219:make_patterns_logic$139572, arst=\rst_i, srst={ }
  113 cells in clk=\clk_i, en=$abc$199167$abc$194618$auto$opt_dff.cc:219:make_patterns_logic$127230, arst=\rst_i, srst={ }
  61 cells in clk=\clk_i, en=$abc$204800$lo095, arst={ }, srst=\rst_i
  67 cells in clk=\clk_i, en=$abc$204800$lo086, arst={ }, srst=\rst_i
  64 cells in clk=\clk_i, en=$abc$204800$lo124, arst={ }, srst=\rst_i
  65 cells in clk=\clk_i, en=$abc$204800$lo041, arst={ }, srst=\rst_i
  65 cells in clk=\clk_i, en=$abc$204800$lo050, arst={ }, srst=\rst_i
  67 cells in clk=\clk_i, en=$abc$204800$lo067, arst={ }, srst=\rst_i
  61 cells in clk=\clk_i, en=$abc$204800$lo116, arst={ }, srst=\rst_i
  117 cells in clk=\clk_i, en=$abc$201246$abc$159345$auto$opt_dff.cc:219:make_patterns_logic$78984, arst=\rst_i, srst={ }
  115 cells in clk=\clk_i, en=$abc$201364$abc$157194$auto$opt_dff.cc:219:make_patterns_logic$99180, arst=\rst_i, srst={ }
  115 cells in clk=\clk_i, en=$abc$201483$abc$157911$auto$opt_dff.cc:219:make_patterns_logic$92448, arst=\rst_i, srst={ }
  113 cells in clk=\clk_i, en=$abc$201692$abc$157794$auto$opt_dff.cc:219:make_patterns_logic$93570, arst=\rst_i, srst={ }
  67 cells in clk=\clk_i, en=$abc$204800$lo133, arst={ }, srst=\rst_i
  109 cells in clk=\clk_i, en=$abc$202113$abc$157316$auto$opt_dff.cc:219:make_patterns_logic$98058, arst=\rst_i, srst={ }
  117 cells in clk=\clk_i, en=$abc$202226$abc$158150$auto$opt_dff.cc:219:make_patterns_logic$90204, arst=\rst_i, srst={ }
  109 cells in clk=\clk_i, en=$abc$202344$abc$158033$auto$opt_dff.cc:219:make_patterns_logic$91326, arst=\rst_i, srst={ }
  115 cells in clk=\clk_i, en=$abc$202457$abc$159106$auto$opt_dff.cc:219:make_patterns_logic$81228, arst=\rst_i, srst={ }
  114 cells in clk=\clk_i, en=$abc$202573$abc$159828$auto$opt_dff.cc:219:make_patterns_logic$74496, arst=\rst_i, srst={ }
  119 cells in clk=\clk_i, en=$abc$202691$abc$159706$auto$opt_dff.cc:219:make_patterns_logic$75618, arst=\rst_i, srst={ }
  114 cells in clk=\clk_i, en=$abc$202812$abc$196496$auto$opt_dff.cc:219:make_patterns_logic$109278, arst=\rst_i, srst={ }
  112 cells in clk=\clk_i, en=$abc$202929$abc$196139$auto$opt_dff.cc:219:make_patterns_logic$112644, arst=\rst_i, srst={ }
  111 cells in clk=\clk_i, en=$abc$203044$abc$197201$auto$opt_dff.cc:219:make_patterns_logic$102546, arst=\rst_i, srst={ }
  111 cells in clk=\clk_i, en=$abc$203159$abc$197318$auto$opt_dff.cc:219:make_patterns_logic$101424, arst=\rst_i, srst={ }
  109 cells in clk=\clk_i, en=$abc$203274$abc$159228$auto$opt_dff.cc:219:make_patterns_logic$80106, arst=\rst_i, srst={ }
  1404 cells in clk=\clk_i, en=!$abc$203387$abc$191387$flatten\m0.$verific$n1723$30458, arst=\rst_i, srst={ }
  68 cells in clk=\clk_i, en=$abc$201155$abc$162180$flatten\rf.$verific$n890$30893, arst=\rst_i, srst={ }
  64 cells in clk=\clk_i, en=$abc$204800$lo033, arst={ }, srst=\rst_i
  117 cells in clk=\clk_i, en=$abc$217562$abc$157672$auto$opt_dff.cc:219:make_patterns_logic$94692, arst=\rst_i, srst={ }
  108 cells in clk=\clk_i, en=$abc$217683$abc$157555$auto$opt_dff.cc:219:make_patterns_logic$95814, arst=\rst_i, srst={ }
  117 cells in clk=\clk_i, en=$abc$217795$abc$157433$auto$opt_dff.cc:219:make_patterns_logic$96936, arst=\rst_i, srst={ }
  115 cells in clk=\clk_i, en=$abc$217916$abc$158628$auto$opt_dff.cc:219:make_patterns_logic$85716, arst=\rst_i, srst={ }
  118 cells in clk=\clk_i, en=$abc$218033$abc$158867$auto$opt_dff.cc:219:make_patterns_logic$83472, arst=\rst_i, srst={ }
  108 cells in clk=\clk_i, en=$abc$218152$abc$158272$auto$opt_dff.cc:219:make_patterns_logic$89082, arst=\rst_i, srst={ }
  111 cells in clk=\clk_i, en=$abc$218264$abc$158511$auto$opt_dff.cc:219:make_patterns_logic$86838, arst=\rst_i, srst={ }
  112 cells in clk=\clk_i, en=$abc$218379$abc$158750$auto$opt_dff.cc:219:make_patterns_logic$84594, arst=\rst_i, srst={ }
  114 cells in clk=\clk_i, en=$abc$218494$abc$158389$auto$opt_dff.cc:219:make_patterns_logic$87960, arst=\rst_i, srst={ }
  111 cells in clk=\clk_i, en=$abc$218612$abc$158989$auto$opt_dff.cc:219:make_patterns_logic$82350, arst=\rst_i, srst={ }
  114 cells in clk=\clk_i, en=$abc$218727$abc$159584$auto$opt_dff.cc:219:make_patterns_logic$76740, arst=\rst_i, srst={ }
  109 cells in clk=\clk_i, en=$abc$218845$abc$159950$auto$opt_dff.cc:219:make_patterns_logic$73374, arst=\rst_i, srst={ }
  111 cells in clk=\clk_i, en=$abc$218958$abc$159467$auto$opt_dff.cc:219:make_patterns_logic$77862, arst=\rst_i, srst={ }
  139 cells in clk=\clk_i, en=$abc$219073$abc$162180$flatten\rf.$verific$n1103$30899, arst=\rst_i, srst={ }
  71 cells in clk=\clk_i, en=$abc$219253$abc$162180$flatten\rf.$verific$n180$30873, arst=\rst_i, srst={ }
  74 cells in clk=\clk_i, en=$abc$219343$abc$162180$flatten\rf.$verific$n109$30871, arst=\rst_i, srst={ }
  60 cells in clk=\clk_i, en=$abc$219433$abc$162180$flatten\rf.$verific$n251$30875, arst=\rst_i, srst={ }
  63 cells in clk=\clk_i, en=$abc$219711$abc$162180$flatten\rf.$verific$n322$30877, arst=\rst_i, srst={ }
  62 cells in clk=\clk_i, en=$abc$219801$abc$162180$flatten\rf.$verific$n464$30881, arst=\rst_i, srst={ }
  70 cells in clk=\clk_i, en=$abc$219892$abc$162180$flatten\rf.$verific$n535$30883, arst=\rst_i, srst={ }
  63 cells in clk=\clk_i, en=$abc$219989$abc$162180$flatten\rf.$verific$n606$30885, arst=\rst_i, srst={ }
  67 cells in clk=\clk_i, en=$abc$220080$abc$162180$flatten\rf.$verific$n38$30869, arst=\rst_i, srst={ }
  69 cells in clk=\clk_i, en=$abc$201602$abc$162180$flatten\rf.$verific$n393$30879, arst=\rst_i, srst={ }
  84 cells in clk=\clk_i, en=$abc$220171$abc$162180$flatten\rf.$verific$n748$30889, arst=\rst_i, srst={ }
  59 cells in clk=\clk_i, en=$abc$220270$abc$162180$flatten\rf.$verific$n819$30891, arst=\rst_i, srst={ }
  64 cells in clk=\clk_i, en=$abc$220360$abc$162180$flatten\rf.$verific$n961$30895, arst=\rst_i, srst={ }
  88 cells in clk=\clk_i, en=$abc$220452$abc$162180$flatten\rf.$verific$n1032$30897, arst=\rst_i, srst={ }
  61 cells in clk=\clk_i, en=$abc$204800$lo058, arst={ }, srst=\rst_i
  61 cells in clk=\clk_i, en=$abc$204800$lo075, arst={ }, srst=\rst_i
  104 cells in clk=\clk_i, en=$abc$217158$abc$162180$flatten\rf.$verific$n677$30887, arst=\rst_i, srst={ }
  64 cells in clk=\clk_i, en=$abc$204800$lo084, arst={ }, srst=\rst_i
  64 cells in clk=\clk_i, en=$abc$204800$lo107, arst={ }, srst=\rst_i
  64 cells in clk=\clk_i, en=$abc$204800$lo002, arst={ }, srst=\rst_i
  63 cells in clk=\clk_i, en=$abc$204800$lo123, arst={ }, srst=\rst_i
  61 cells in clk=\clk_i, en=$abc$204800$lo011, arst={ }, srst=\rst_i
  1400 cells in clk=\clk_i, en=!$abc$222621$abc$181062$flatten\m7.$verific$n1723$30458, arst=\rst_i, srst={ }
  1780 cells in clk=\clk_i, en={ }, arst={ }, srst=!$abc$224034$abc$179523$rf.rf_sel
  1402 cells in clk=\clk_i, en=!$abc$225493$abc$182537$flatten\m6.$verific$n1723$30458, arst=\rst_i, srst={ }
  1403 cells in clk=\clk_i, en=!$abc$226905$abc$184011$flatten\m5.$verific$n1723$30458, arst=\rst_i, srst={ }
  1405 cells in clk=\clk_i, en=!$abc$228317$abc$185485$flatten\m4.$verific$n1723$30458, arst=\rst_i, srst={ }
  111 cells in clk=\clk_i, en=$abc$229728$abc$193916$auto$opt_dff.cc:219:make_patterns_logic$133962, arst=\rst_i, srst={ }
  109 cells in clk=\clk_i, en=$abc$229843$abc$194150$auto$opt_dff.cc:219:make_patterns_logic$131718, arst=\rst_i, srst={ }
  111 cells in clk=\clk_i, en=$abc$229956$abc$195320$auto$opt_dff.cc:219:make_patterns_logic$120498, arst=\rst_i, srst={ }
  110 cells in clk=\clk_i, en=$abc$230071$abc$195788$auto$opt_dff.cc:219:make_patterns_logic$116010, arst=\rst_i, srst={ }
  111 cells in clk=\clk_i, en=$abc$230185$abc$193682$auto$opt_dff.cc:219:make_patterns_logic$136206, arst=\rst_i, srst={ }
  109 cells in clk=\clk_i, en=$abc$230300$abc$194267$auto$opt_dff.cc:219:make_patterns_logic$130596, arst=\rst_i, srst={ }
  111 cells in clk=\clk_i, en=$abc$230413$abc$195086$auto$opt_dff.cc:219:make_patterns_logic$122742, arst=\rst_i, srst={ }
  108 cells in clk=\clk_i, en=$abc$230528$abc$195203$auto$opt_dff.cc:219:make_patterns_logic$121620, arst=\rst_i, srst={ }
  1403 cells in clk=\clk_i, en=!$abc$230640$abc$186959$flatten\m3.$verific$n1723$30458, arst=\rst_i, srst={ }
  111 cells in clk=\clk_i, en=$abc$232054$abc$193448$auto$opt_dff.cc:219:make_patterns_logic$138450, arst=\rst_i, srst={ }
  108 cells in clk=\clk_i, en=$abc$232169$abc$194501$auto$opt_dff.cc:219:make_patterns_logic$128352, arst=\rst_i, srst={ }
  111 cells in clk=\clk_i, en=$abc$233693$abc$195671$auto$opt_dff.cc:219:make_patterns_logic$117132, arst=\rst_i, srst={ }
  109 cells in clk=\clk_i, en=$abc$233808$abc$193799$auto$opt_dff.cc:219:make_patterns_logic$135084, arst=\rst_i, srst={ }
  1405 cells in clk=\clk_i, en=!$abc$233921$abc$189911$flatten\m1.$verific$n1723$30458, arst=\rst_i, srst={ }
  111 cells in clk=\clk_i, en=$abc$235333$abc$194033$auto$opt_dff.cc:219:make_patterns_logic$132840, arst=\rst_i, srst={ }
  111 cells in clk=\clk_i, en=$abc$235448$abc$193565$auto$opt_dff.cc:219:make_patterns_logic$137328, arst=\rst_i, srst={ }
  111 cells in clk=\clk_i, en=$abc$235563$abc$195437$auto$opt_dff.cc:219:make_patterns_logic$119376, arst=\rst_i, srst={ }
  109 cells in clk=\clk_i, en=$abc$235678$abc$195554$auto$opt_dff.cc:219:make_patterns_logic$118254, arst=\rst_i, srst={ }
  112 cells in clk=\clk_i, en=$abc$235791$abc$194384$auto$opt_dff.cc:219:make_patterns_logic$129474, arst=\rst_i, srst={ }
  111 cells in clk=\clk_i, en=$abc$235906$abc$194735$auto$opt_dff.cc:219:make_patterns_logic$126108, arst=\rst_i, srst={ }
  111 cells in clk=\clk_i, en=$abc$236021$abc$194852$auto$opt_dff.cc:219:make_patterns_logic$124986, arst=\rst_i, srst={ }
  1406 cells in clk=\clk_i, en=!$abc$232281$abc$188435$flatten\m2.$verific$n1723$30458, arst=\rst_i, srst={ }
  15506 cells in clk=\clk_i, en={ }, arst={ }, srst={ }
  114 cells in clk=\clk_i, en=$abc$236248$abc$197435$auto$opt_dff.cc:219:make_patterns_logic$100302, arst=\rst_i, srst={ }

4.35.2. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$236136$abc$194969$auto$opt_dff.cc:219:make_patterns_logic$123864, asynchronously reset by \rst_i
Extracted 111 gates and 123 wires to a netlist network with 12 inputs and 4 outputs.

4.35.2.1. Executing ABC.

4.35.3. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$197557$abc$196379$auto$opt_dff.cc:219:make_patterns_logic$110400, asynchronously reset by \rst_i
Extracted 112 gates and 123 wires to a netlist network with 11 inputs and 4 outputs.

4.35.3.1. Executing ABC.

4.35.4. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$197671$abc$197084$auto$opt_dff.cc:219:make_patterns_logic$103668, asynchronously reset by \rst_i
Extracted 114 gates and 126 wires to a netlist network with 12 inputs and 4 outputs.

4.35.4.1. Executing ABC.

4.35.5. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$197786$abc$196967$auto$opt_dff.cc:219:make_patterns_logic$104790, asynchronously reset by \rst_i
Extracted 115 gates and 127 wires to a netlist network with 12 inputs and 4 outputs.

4.35.5.1. Executing ABC.

4.35.6. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$197902$abc$196849$auto$opt_dff.cc:219:make_patterns_logic$105912, asynchronously reset by \rst_i
Extracted 111 gates and 119 wires to a netlist network with 8 inputs and 4 outputs.

4.35.6.1. Executing ABC.

4.35.7. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$198017$abc$196731$auto$opt_dff.cc:219:make_patterns_logic$107034, asynchronously reset by \rst_i
Extracted 116 gates and 128 wires to a netlist network with 12 inputs and 4 outputs.

4.35.7.1. Executing ABC.

4.35.8. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$198134$abc$196257$auto$opt_dff.cc:219:make_patterns_logic$111522, asynchronously reset by \rst_i
Extracted 117 gates and 128 wires to a netlist network with 11 inputs and 4 outputs.

4.35.8.1. Executing ABC.

4.35.9. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$198253$abc$196614$auto$opt_dff.cc:219:make_patterns_logic$108156, asynchronously reset by \rst_i
Extracted 111 gates and 119 wires to a netlist network with 8 inputs and 4 outputs.

4.35.9.1. Executing ABC.

4.35.10. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$198368$abc$195905$auto$opt_dff.cc:219:make_patterns_logic$114888, asynchronously reset by \rst_i
Extracted 112 gates and 123 wires to a netlist network with 11 inputs and 4 outputs.

4.35.10.1. Executing ABC.

4.35.11. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$198482$abc$192980$auto$opt_dff.cc:219:make_patterns_logic$142938, asynchronously reset by \rst_i
Extracted 113 gates and 125 wires to a netlist network with 12 inputs and 4 outputs.

4.35.11.1. Executing ABC.

4.35.12. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$198596$abc$193097$auto$opt_dff.cc:219:make_patterns_logic$141816, asynchronously reset by \rst_i
Extracted 114 gates and 126 wires to a netlist network with 12 inputs and 4 outputs.

4.35.12.1. Executing ABC.

4.35.13. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$198711$abc$196022$auto$opt_dff.cc:219:make_patterns_logic$113766, asynchronously reset by \rst_i
Extracted 112 gates and 122 wires to a netlist network with 10 inputs and 4 outputs.

4.35.13.1. Executing ABC.

4.35.14. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$198826$abc$192863$auto$opt_dff.cc:219:make_patterns_logic$144060, asynchronously reset by \rst_i
Extracted 108 gates and 116 wires to a netlist network with 8 inputs and 4 outputs.

4.35.14.1. Executing ABC.

4.35.15. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$198938$abc$193214$auto$opt_dff.cc:219:make_patterns_logic$140694, asynchronously reset by \rst_i
Extracted 111 gates and 119 wires to a netlist network with 8 inputs and 4 outputs.

4.35.15.1. Executing ABC.

4.35.16. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$199053$abc$193331$auto$opt_dff.cc:219:make_patterns_logic$139572, asynchronously reset by \rst_i
Extracted 113 gates and 125 wires to a netlist network with 12 inputs and 4 outputs.

4.35.16.1. Executing ABC.

4.35.17. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$199167$abc$194618$auto$opt_dff.cc:219:make_patterns_logic$127230, asynchronously reset by \rst_i
Extracted 113 gates and 125 wires to a netlist network with 12 inputs and 4 outputs.

4.35.17.1. Executing ABC.

4.35.18. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$204800$lo095, synchronously reset by \rst_i
Extracted 61 gates and 107 wires to a netlist network with 46 inputs and 4 outputs.

4.35.18.1. Executing ABC.

4.35.19. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$204800$lo086, synchronously reset by \rst_i
Extracted 67 gates and 119 wires to a netlist network with 52 inputs and 3 outputs.

4.35.19.1. Executing ABC.

4.35.20. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$204800$lo124, synchronously reset by \rst_i
Extracted 64 gates and 113 wires to a netlist network with 49 inputs and 4 outputs.

4.35.20.1. Executing ABC.

4.35.21. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$204800$lo041, synchronously reset by \rst_i
Extracted 65 gates and 115 wires to a netlist network with 50 inputs and 4 outputs.

4.35.21.1. Executing ABC.

4.35.22. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$204800$lo050, synchronously reset by \rst_i
Extracted 65 gates and 115 wires to a netlist network with 50 inputs and 4 outputs.

4.35.22.1. Executing ABC.

4.35.23. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$204800$lo067, synchronously reset by \rst_i
Extracted 67 gates and 119 wires to a netlist network with 52 inputs and 3 outputs.

4.35.23.1. Executing ABC.

4.35.24. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$204800$lo116, synchronously reset by \rst_i
Extracted 61 gates and 107 wires to a netlist network with 46 inputs and 4 outputs.

4.35.24.1. Executing ABC.

4.35.25. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$201246$abc$159345$auto$opt_dff.cc:219:make_patterns_logic$78984, asynchronously reset by \rst_i
Extracted 117 gates and 129 wires to a netlist network with 12 inputs and 4 outputs.

4.35.25.1. Executing ABC.

4.35.26. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$201364$abc$157194$auto$opt_dff.cc:219:make_patterns_logic$99180, asynchronously reset by \rst_i
Extracted 115 gates and 123 wires to a netlist network with 8 inputs and 4 outputs.

4.35.26.1. Executing ABC.

4.35.27. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$201483$abc$157911$auto$opt_dff.cc:219:make_patterns_logic$92448, asynchronously reset by \rst_i
Extracted 115 gates and 123 wires to a netlist network with 8 inputs and 4 outputs.

4.35.27.1. Executing ABC.

4.35.28. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$201692$abc$157794$auto$opt_dff.cc:219:make_patterns_logic$93570, asynchronously reset by \rst_i
Extracted 113 gates and 124 wires to a netlist network with 11 inputs and 4 outputs.

4.35.28.1. Executing ABC.

4.35.29. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$204800$lo133, synchronously reset by \rst_i
Extracted 67 gates and 119 wires to a netlist network with 52 inputs and 3 outputs.

4.35.29.1. Executing ABC.

4.35.30. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$202113$abc$157316$auto$opt_dff.cc:219:make_patterns_logic$98058, asynchronously reset by \rst_i
Extracted 109 gates and 117 wires to a netlist network with 8 inputs and 4 outputs.

4.35.30.1. Executing ABC.

4.35.31. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$202226$abc$158150$auto$opt_dff.cc:219:make_patterns_logic$90204, asynchronously reset by \rst_i
Extracted 117 gates and 129 wires to a netlist network with 12 inputs and 4 outputs.

4.35.31.1. Executing ABC.

4.35.32. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$202344$abc$158033$auto$opt_dff.cc:219:make_patterns_logic$91326, asynchronously reset by \rst_i
Extracted 109 gates and 117 wires to a netlist network with 8 inputs and 4 outputs.

4.35.32.1. Executing ABC.

4.35.33. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$202457$abc$159106$auto$opt_dff.cc:219:make_patterns_logic$81228, asynchronously reset by \rst_i
Extracted 115 gates and 127 wires to a netlist network with 12 inputs and 4 outputs.

4.35.33.1. Executing ABC.

4.35.34. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$202573$abc$159828$auto$opt_dff.cc:219:make_patterns_logic$74496, asynchronously reset by \rst_i
Extracted 114 gates and 122 wires to a netlist network with 8 inputs and 4 outputs.

4.35.34.1. Executing ABC.

4.35.35. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$202691$abc$159706$auto$opt_dff.cc:219:make_patterns_logic$75618, asynchronously reset by \rst_i
Extracted 119 gates and 130 wires to a netlist network with 11 inputs and 4 outputs.

4.35.35.1. Executing ABC.

4.35.36. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$202812$abc$196496$auto$opt_dff.cc:219:make_patterns_logic$109278, asynchronously reset by \rst_i
Extracted 114 gates and 124 wires to a netlist network with 10 inputs and 4 outputs.

4.35.36.1. Executing ABC.

4.35.37. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$202929$abc$196139$auto$opt_dff.cc:219:make_patterns_logic$112644, asynchronously reset by \rst_i
Extracted 112 gates and 122 wires to a netlist network with 10 inputs and 4 outputs.

4.35.37.1. Executing ABC.

4.35.38. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$203044$abc$197201$auto$opt_dff.cc:219:make_patterns_logic$102546, asynchronously reset by \rst_i
Extracted 111 gates and 119 wires to a netlist network with 8 inputs and 4 outputs.

4.35.38.1. Executing ABC.

4.35.39. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$203159$abc$197318$auto$opt_dff.cc:219:make_patterns_logic$101424, asynchronously reset by \rst_i
Extracted 111 gates and 119 wires to a netlist network with 8 inputs and 4 outputs.

4.35.39.1. Executing ABC.

4.35.40. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$203274$abc$159228$auto$opt_dff.cc:219:make_patterns_logic$80106, asynchronously reset by \rst_i
Extracted 109 gates and 117 wires to a netlist network with 8 inputs and 4 outputs.

4.35.40.1. Executing ABC.

4.35.41. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$203387$abc$191387$flatten\m0.$verific$n1723$30458, asynchronously reset by \rst_i
Extracted 1404 gates and 2074 wires to a netlist network with 670 inputs and 157 outputs.

4.35.41.1. Executing ABC.

4.35.42. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$201155$abc$162180$flatten\rf.$verific$n890$30893, asynchronously reset by \rst_i
Extracted 68 gates and 99 wires to a netlist network with 31 inputs and 59 outputs.

4.35.42.1. Executing ABC.

4.35.43. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$204800$lo033, synchronously reset by \rst_i
Extracted 64 gates and 113 wires to a netlist network with 49 inputs and 4 outputs.

4.35.43.1. Executing ABC.

4.35.44. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$217562$abc$157672$auto$opt_dff.cc:219:make_patterns_logic$94692, asynchronously reset by \rst_i
Extracted 117 gates and 125 wires to a netlist network with 8 inputs and 4 outputs.

4.35.44.1. Executing ABC.

4.35.45. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$217683$abc$157555$auto$opt_dff.cc:219:make_patterns_logic$95814, asynchronously reset by \rst_i
Extracted 108 gates and 116 wires to a netlist network with 8 inputs and 4 outputs.

4.35.45.1. Executing ABC.

4.35.46. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$217795$abc$157433$auto$opt_dff.cc:219:make_patterns_logic$96936, asynchronously reset by \rst_i
Extracted 117 gates and 125 wires to a netlist network with 8 inputs and 4 outputs.

4.35.46.1. Executing ABC.

4.35.47. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$217916$abc$158628$auto$opt_dff.cc:219:make_patterns_logic$85716, asynchronously reset by \rst_i
Extracted 115 gates and 126 wires to a netlist network with 11 inputs and 4 outputs.

4.35.47.1. Executing ABC.

4.35.48. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$218033$abc$158867$auto$opt_dff.cc:219:make_patterns_logic$83472, asynchronously reset by \rst_i
Extracted 118 gates and 130 wires to a netlist network with 12 inputs and 4 outputs.

4.35.48.1. Executing ABC.

4.35.49. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$218152$abc$158272$auto$opt_dff.cc:219:make_patterns_logic$89082, asynchronously reset by \rst_i
Extracted 108 gates and 116 wires to a netlist network with 8 inputs and 4 outputs.

4.35.49.1. Executing ABC.

4.35.50. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$218264$abc$158511$auto$opt_dff.cc:219:make_patterns_logic$86838, asynchronously reset by \rst_i
Extracted 111 gates and 119 wires to a netlist network with 8 inputs and 4 outputs.

4.35.50.1. Executing ABC.

4.35.51. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$218379$abc$158750$auto$opt_dff.cc:219:make_patterns_logic$84594, asynchronously reset by \rst_i
Extracted 112 gates and 122 wires to a netlist network with 10 inputs and 4 outputs.

4.35.51.1. Executing ABC.

4.35.52. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$218494$abc$158389$auto$opt_dff.cc:219:make_patterns_logic$87960, asynchronously reset by \rst_i
Extracted 114 gates and 122 wires to a netlist network with 8 inputs and 4 outputs.

4.35.52.1. Executing ABC.

4.35.53. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$218612$abc$158989$auto$opt_dff.cc:219:make_patterns_logic$82350, asynchronously reset by \rst_i
Extracted 111 gates and 119 wires to a netlist network with 8 inputs and 4 outputs.

4.35.53.1. Executing ABC.

4.35.54. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$218727$abc$159584$auto$opt_dff.cc:219:make_patterns_logic$76740, asynchronously reset by \rst_i
Extracted 114 gates and 122 wires to a netlist network with 8 inputs and 4 outputs.

4.35.54.1. Executing ABC.

4.35.55. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$218845$abc$159950$auto$opt_dff.cc:219:make_patterns_logic$73374, asynchronously reset by \rst_i
Extracted 109 gates and 117 wires to a netlist network with 8 inputs and 4 outputs.

4.35.55.1. Executing ABC.

4.35.56. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$218958$abc$159467$auto$opt_dff.cc:219:make_patterns_logic$77862, asynchronously reset by \rst_i
Extracted 111 gates and 119 wires to a netlist network with 8 inputs and 4 outputs.

4.35.56.1. Executing ABC.

4.35.57. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$219073$abc$162180$flatten\rf.$verific$n1103$30899, asynchronously reset by \rst_i
Extracted 139 gates and 242 wires to a netlist network with 103 inputs and 79 outputs.

4.35.57.1. Executing ABC.

4.35.58. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$219253$abc$162180$flatten\rf.$verific$n180$30873, asynchronously reset by \rst_i
Extracted 71 gates and 103 wires to a netlist network with 32 inputs and 58 outputs.

4.35.58.1. Executing ABC.

4.35.59. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$219343$abc$162180$flatten\rf.$verific$n109$30871, asynchronously reset by \rst_i
Extracted 74 gates and 109 wires to a netlist network with 35 inputs and 58 outputs.

4.35.59.1. Executing ABC.

4.35.60. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$219433$abc$162180$flatten\rf.$verific$n251$30875, asynchronously reset by \rst_i
Extracted 60 gates and 82 wires to a netlist network with 22 inputs and 57 outputs.

4.35.60.1. Executing ABC.

4.35.61. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$219711$abc$162180$flatten\rf.$verific$n322$30877, asynchronously reset by \rst_i
Extracted 63 gates and 88 wires to a netlist network with 25 inputs and 58 outputs.

4.35.61.1. Executing ABC.

4.35.62. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$219801$abc$162180$flatten\rf.$verific$n464$30881, asynchronously reset by \rst_i
Extracted 62 gates and 86 wires to a netlist network with 24 inputs and 57 outputs.

4.35.62.1. Executing ABC.

4.35.63. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$219892$abc$162180$flatten\rf.$verific$n535$30883, asynchronously reset by \rst_i
Extracted 70 gates and 103 wires to a netlist network with 33 inputs and 58 outputs.

4.35.63.1. Executing ABC.

4.35.64. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$219989$abc$162180$flatten\rf.$verific$n606$30885, asynchronously reset by \rst_i
Extracted 63 gates and 89 wires to a netlist network with 26 inputs and 57 outputs.

4.35.64.1. Executing ABC.

4.35.65. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$220080$abc$162180$flatten\rf.$verific$n38$30869, asynchronously reset by \rst_i
Extracted 67 gates and 97 wires to a netlist network with 30 inputs and 62 outputs.

4.35.65.1. Executing ABC.

4.35.66. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$201602$abc$162180$flatten\rf.$verific$n393$30879, asynchronously reset by \rst_i
Extracted 69 gates and 101 wires to a netlist network with 32 inputs and 58 outputs.

4.35.66.1. Executing ABC.

4.35.67. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$220171$abc$162180$flatten\rf.$verific$n748$30889, asynchronously reset by \rst_i
Extracted 84 gates and 132 wires to a netlist network with 48 inputs and 60 outputs.

4.35.67.1. Executing ABC.

4.35.68. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$220270$abc$162180$flatten\rf.$verific$n819$30891, asynchronously reset by \rst_i
Extracted 59 gates and 79 wires to a netlist network with 20 inputs and 59 outputs.

4.35.68.1. Executing ABC.

4.35.69. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$220360$abc$162180$flatten\rf.$verific$n961$30895, asynchronously reset by \rst_i
Extracted 64 gates and 90 wires to a netlist network with 26 inputs and 57 outputs.

4.35.69.1. Executing ABC.

4.35.70. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$220452$abc$162180$flatten\rf.$verific$n1032$30897, asynchronously reset by \rst_i
Extracted 88 gates and 141 wires to a netlist network with 53 inputs and 70 outputs.

4.35.70.1. Executing ABC.

4.35.71. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$204800$lo058, synchronously reset by \rst_i
Extracted 61 gates and 107 wires to a netlist network with 46 inputs and 4 outputs.

4.35.71.1. Executing ABC.

4.35.72. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$204800$lo075, synchronously reset by \rst_i
Extracted 61 gates and 107 wires to a netlist network with 46 inputs and 4 outputs.

4.35.72.1. Executing ABC.

4.35.73. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$217158$abc$162180$flatten\rf.$verific$n677$30887, asynchronously reset by \rst_i
Extracted 104 gates and 173 wires to a netlist network with 69 inputs and 66 outputs.

4.35.73.1. Executing ABC.

4.35.74. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$204800$lo084, synchronously reset by \rst_i
Extracted 64 gates and 113 wires to a netlist network with 49 inputs and 4 outputs.

4.35.74.1. Executing ABC.

4.35.75. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$204800$lo107, synchronously reset by \rst_i
Extracted 64 gates and 113 wires to a netlist network with 49 inputs and 4 outputs.

4.35.75.1. Executing ABC.

4.35.76. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$204800$lo002, synchronously reset by \rst_i
Extracted 64 gates and 113 wires to a netlist network with 49 inputs and 4 outputs.

4.35.76.1. Executing ABC.

4.35.77. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$204800$lo123, synchronously reset by \rst_i
Extracted 63 gates and 111 wires to a netlist network with 48 inputs and 4 outputs.

4.35.77.1. Executing ABC.

4.35.78. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$204800$lo011, synchronously reset by \rst_i
Extracted 61 gates and 107 wires to a netlist network with 46 inputs and 4 outputs.

4.35.78.1. Executing ABC.

4.35.79. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$222621$abc$181062$flatten\m7.$verific$n1723$30458, asynchronously reset by \rst_i
Extracted 1400 gates and 2068 wires to a netlist network with 668 inputs and 155 outputs.

4.35.79.1. Executing ABC.

4.35.80. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, synchronously reset by !$abc$224034$abc$179523$rf.rf_sel
Extracted 1780 gates and 2584 wires to a netlist network with 804 inputs and 624 outputs.

4.35.80.1. Executing ABC.

4.35.81. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$225493$abc$182537$flatten\m6.$verific$n1723$30458, asynchronously reset by \rst_i
Extracted 1402 gates and 2072 wires to a netlist network with 670 inputs and 157 outputs.

4.35.81.1. Executing ABC.

4.35.82. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$226905$abc$184011$flatten\m5.$verific$n1723$30458, asynchronously reset by \rst_i
Extracted 1403 gates and 2074 wires to a netlist network with 671 inputs and 158 outputs.

4.35.82.1. Executing ABC.

4.35.83. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$228317$abc$185485$flatten\m4.$verific$n1723$30458, asynchronously reset by \rst_i
Extracted 1405 gates and 2078 wires to a netlist network with 673 inputs and 160 outputs.

4.35.83.1. Executing ABC.

4.35.84. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$229728$abc$193916$auto$opt_dff.cc:219:make_patterns_logic$133962, asynchronously reset by \rst_i
Extracted 111 gates and 119 wires to a netlist network with 8 inputs and 4 outputs.

4.35.84.1. Executing ABC.

4.35.85. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$229843$abc$194150$auto$opt_dff.cc:219:make_patterns_logic$131718, asynchronously reset by \rst_i
Extracted 109 gates and 117 wires to a netlist network with 8 inputs and 4 outputs.

4.35.85.1. Executing ABC.

4.35.86. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$229956$abc$195320$auto$opt_dff.cc:219:make_patterns_logic$120498, asynchronously reset by \rst_i
Extracted 111 gates and 119 wires to a netlist network with 8 inputs and 4 outputs.

4.35.86.1. Executing ABC.

4.35.87. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$230071$abc$195788$auto$opt_dff.cc:219:make_patterns_logic$116010, asynchronously reset by \rst_i
Extracted 110 gates and 118 wires to a netlist network with 8 inputs and 4 outputs.

4.35.87.1. Executing ABC.

4.35.88. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$230185$abc$193682$auto$opt_dff.cc:219:make_patterns_logic$136206, asynchronously reset by \rst_i
Extracted 111 gates and 119 wires to a netlist network with 8 inputs and 4 outputs.

4.35.88.1. Executing ABC.

4.35.89. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$230300$abc$194267$auto$opt_dff.cc:219:make_patterns_logic$130596, asynchronously reset by \rst_i
Extracted 109 gates and 117 wires to a netlist network with 8 inputs and 4 outputs.

4.35.89.1. Executing ABC.

4.35.90. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$230413$abc$195086$auto$opt_dff.cc:219:make_patterns_logic$122742, asynchronously reset by \rst_i
Extracted 111 gates and 119 wires to a netlist network with 8 inputs and 4 outputs.

4.35.90.1. Executing ABC.

4.35.91. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$230528$abc$195203$auto$opt_dff.cc:219:make_patterns_logic$121620, asynchronously reset by \rst_i
Extracted 108 gates and 116 wires to a netlist network with 8 inputs and 4 outputs.

4.35.91.1. Executing ABC.

4.35.92. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$230640$abc$186959$flatten\m3.$verific$n1723$30458, asynchronously reset by \rst_i
Extracted 1403 gates and 2072 wires to a netlist network with 669 inputs and 156 outputs.

4.35.92.1. Executing ABC.

4.35.93. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$232054$abc$193448$auto$opt_dff.cc:219:make_patterns_logic$138450, asynchronously reset by \rst_i
Extracted 111 gates and 119 wires to a netlist network with 8 inputs and 4 outputs.

4.35.93.1. Executing ABC.

4.35.94. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$232169$abc$194501$auto$opt_dff.cc:219:make_patterns_logic$128352, asynchronously reset by \rst_i
Extracted 108 gates and 116 wires to a netlist network with 8 inputs and 4 outputs.

4.35.94.1. Executing ABC.

4.35.95. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$233693$abc$195671$auto$opt_dff.cc:219:make_patterns_logic$117132, asynchronously reset by \rst_i
Extracted 111 gates and 119 wires to a netlist network with 8 inputs and 4 outputs.

4.35.95.1. Executing ABC.

4.35.96. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$233808$abc$193799$auto$opt_dff.cc:219:make_patterns_logic$135084, asynchronously reset by \rst_i
Extracted 109 gates and 117 wires to a netlist network with 8 inputs and 4 outputs.

4.35.96.1. Executing ABC.

4.35.97. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$233921$abc$189911$flatten\m1.$verific$n1723$30458, asynchronously reset by \rst_i
Extracted 1405 gates and 2076 wires to a netlist network with 671 inputs and 158 outputs.

4.35.97.1. Executing ABC.

4.35.98. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$235333$abc$194033$auto$opt_dff.cc:219:make_patterns_logic$132840, asynchronously reset by \rst_i
Extracted 111 gates and 119 wires to a netlist network with 8 inputs and 4 outputs.

4.35.98.1. Executing ABC.

4.35.99. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$235448$abc$193565$auto$opt_dff.cc:219:make_patterns_logic$137328, asynchronously reset by \rst_i
Extracted 111 gates and 119 wires to a netlist network with 8 inputs and 4 outputs.

4.35.99.1. Executing ABC.

4.35.100. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$235563$abc$195437$auto$opt_dff.cc:219:make_patterns_logic$119376, asynchronously reset by \rst_i
Extracted 111 gates and 119 wires to a netlist network with 8 inputs and 4 outputs.

4.35.100.1. Executing ABC.

4.35.101. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$235678$abc$195554$auto$opt_dff.cc:219:make_patterns_logic$118254, asynchronously reset by \rst_i
Extracted 109 gates and 117 wires to a netlist network with 8 inputs and 4 outputs.

4.35.101.1. Executing ABC.

4.35.102. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$235791$abc$194384$auto$opt_dff.cc:219:make_patterns_logic$129474, asynchronously reset by \rst_i
Extracted 112 gates and 122 wires to a netlist network with 10 inputs and 4 outputs.

4.35.102.1. Executing ABC.

4.35.103. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$235906$abc$194735$auto$opt_dff.cc:219:make_patterns_logic$126108, asynchronously reset by \rst_i
Extracted 111 gates and 119 wires to a netlist network with 8 inputs and 4 outputs.

4.35.103.1. Executing ABC.

4.35.104. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$236021$abc$194852$auto$opt_dff.cc:219:make_patterns_logic$124986, asynchronously reset by \rst_i
Extracted 111 gates and 119 wires to a netlist network with 8 inputs and 4 outputs.

4.35.104.1. Executing ABC.

4.35.105. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$232281$abc$188435$flatten\m2.$verific$n1723$30458, asynchronously reset by \rst_i
Extracted 1406 gates and 2078 wires to a netlist network with 672 inputs and 159 outputs.

4.35.105.1. Executing ABC.

4.35.106. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i
Extracted 15506 gates and 16806 wires to a netlist network with 1300 inputs and 1387 outputs.

4.35.106.1. Executing ABC.

4.35.107. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$236248$abc$197435$auto$opt_dff.cc:219:make_patterns_logic$100302, asynchronously reset by \rst_i
Extracted 114 gates and 122 wires to a netlist network with 8 inputs and 4 outputs.

4.35.107.1. Executing ABC.

yosys> abc -dff

4.36. Executing ABC pass (technology mapping using ABC).

4.36.1. Summary of detected clock domains:
  112 cells in clk=\clk_i, en=$abc$236366$abc$236136$abc$194969$auto$opt_dff.cc:219:make_patterns_logic$123864, arst=\rst_i, srst={ }
  113 cells in clk=\clk_i, en=$abc$236479$abc$197557$abc$196379$auto$opt_dff.cc:219:make_patterns_logic$110400, arst=\rst_i, srst={ }
  114 cells in clk=\clk_i, en=$abc$236594$abc$197671$abc$197084$auto$opt_dff.cc:219:make_patterns_logic$103668, arst=\rst_i, srst={ }
  112 cells in clk=\clk_i, en=$abc$236709$abc$197786$abc$196967$auto$opt_dff.cc:219:make_patterns_logic$104790, arst=\rst_i, srst={ }
  113 cells in clk=\clk_i, en=$abc$236824$abc$197902$abc$196849$auto$opt_dff.cc:219:make_patterns_logic$105912, arst=\rst_i, srst={ }
  112 cells in clk=\clk_i, en=$abc$236939$abc$198017$abc$196731$auto$opt_dff.cc:219:make_patterns_logic$107034, arst=\rst_i, srst={ }
  115 cells in clk=\clk_i, en=$abc$237053$abc$198134$abc$196257$auto$opt_dff.cc:219:make_patterns_logic$111522, arst=\rst_i, srst={ }
  111 cells in clk=\clk_i, en=$abc$237169$abc$198253$abc$196614$auto$opt_dff.cc:219:make_patterns_logic$108156, arst=\rst_i, srst={ }
  110 cells in clk=\clk_i, en=$abc$237283$abc$198368$abc$195905$auto$opt_dff.cc:219:make_patterns_logic$114888, arst=\rst_i, srst={ }
  113 cells in clk=\clk_i, en=$abc$237394$abc$198482$abc$192980$auto$opt_dff.cc:219:make_patterns_logic$142938, arst=\rst_i, srst={ }
  114 cells in clk=\clk_i, en=$abc$237508$abc$198596$abc$193097$auto$opt_dff.cc:219:make_patterns_logic$141816, arst=\rst_i, srst={ }
  110 cells in clk=\clk_i, en=$abc$237623$abc$198711$abc$196022$auto$opt_dff.cc:219:make_patterns_logic$113766, arst=\rst_i, srst={ }
  110 cells in clk=\clk_i, en=$abc$237737$abc$198826$abc$192863$auto$opt_dff.cc:219:make_patterns_logic$144060, arst=\rst_i, srst={ }
  110 cells in clk=\clk_i, en=$abc$237851$abc$198938$abc$193214$auto$opt_dff.cc:219:make_patterns_logic$140694, arst=\rst_i, srst={ }
  113 cells in clk=\clk_i, en=$abc$237965$abc$199053$abc$193331$auto$opt_dff.cc:219:make_patterns_logic$139572, arst=\rst_i, srst={ }
  61 cells in clk=\clk_i, en=$abc$259297$lo015, arst={ }, srst=\rst_i
  66 cells in clk=\clk_i, en=$abc$259297$lo104, arst={ }, srst=\rst_i
  113 cells in clk=\clk_i, en=$abc$238079$abc$199167$abc$194618$auto$opt_dff.cc:219:make_patterns_logic$127230, arst=\rst_i, srst={ }
  64 cells in clk=\clk_i, en=$abc$259297$lo008, arst={ }, srst=\rst_i
  63 cells in clk=\clk_i, en=$abc$259297$lo103, arst={ }, srst=\rst_i
  64 cells in clk=\clk_i, en=$abc$259297$lo094, arst={ }, srst=\rst_i
  67 cells in clk=\clk_i, en=$abc$259297$lo065, arst={ }, srst=\rst_i
  61 cells in clk=\clk_i, en=$abc$259297$lo036, arst={ }, srst=\rst_i
  110 cells in clk=\clk_i, en=$abc$238655$abc$201246$abc$159345$auto$opt_dff.cc:219:make_patterns_logic$78984, arst=\rst_i, srst={ }
  109 cells in clk=\clk_i, en=$abc$238768$abc$201364$abc$157194$auto$opt_dff.cc:219:make_patterns_logic$99180, arst=\rst_i, srst={ }
  111 cells in clk=\clk_i, en=$abc$238881$abc$201483$abc$157911$auto$opt_dff.cc:219:make_patterns_logic$92448, arst=\rst_i, srst={ }
  114 cells in clk=\clk_i, en=$abc$238994$abc$201692$abc$157794$auto$opt_dff.cc:219:make_patterns_logic$93570, arst=\rst_i, srst={ }
  67 cells in clk=\clk_i, en=$abc$259297$lo043, arst={ }, srst=\rst_i
  108 cells in clk=\clk_i, en=$abc$239179$abc$202113$abc$157316$auto$opt_dff.cc:219:make_patterns_logic$98058, arst=\rst_i, srst={ }
  114 cells in clk=\clk_i, en=$abc$239291$abc$202226$abc$158150$auto$opt_dff.cc:219:make_patterns_logic$90204, arst=\rst_i, srst={ }
  109 cells in clk=\clk_i, en=$abc$239406$abc$202344$abc$158033$auto$opt_dff.cc:219:make_patterns_logic$91326, arst=\rst_i, srst={ }
  109 cells in clk=\clk_i, en=$abc$239519$abc$202457$abc$159106$auto$opt_dff.cc:219:make_patterns_logic$81228, arst=\rst_i, srst={ }
  111 cells in clk=\clk_i, en=$abc$239629$abc$202573$abc$159828$auto$opt_dff.cc:219:make_patterns_logic$74496, arst=\rst_i, srst={ }
  114 cells in clk=\clk_i, en=$abc$239742$abc$202691$abc$159706$auto$opt_dff.cc:219:make_patterns_logic$75618, arst=\rst_i, srst={ }
  113 cells in clk=\clk_i, en=$abc$239858$abc$202812$abc$196496$auto$opt_dff.cc:219:make_patterns_logic$109278, arst=\rst_i, srst={ }
  112 cells in clk=\clk_i, en=$abc$239974$abc$202929$abc$196139$auto$opt_dff.cc:219:make_patterns_logic$112644, arst=\rst_i, srst={ }
  112 cells in clk=\clk_i, en=$abc$240090$abc$203044$abc$197201$auto$opt_dff.cc:219:make_patterns_logic$102546, arst=\rst_i, srst={ }
  113 cells in clk=\clk_i, en=$abc$240206$abc$203159$abc$197318$auto$opt_dff.cc:219:make_patterns_logic$101424, arst=\rst_i, srst={ }
  111 cells in clk=\clk_i, en=$abc$240320$abc$203274$abc$159228$auto$opt_dff.cc:219:make_patterns_logic$80106, arst=\rst_i, srst={ }
  1405 cells in clk=\clk_i, en=!$abc$240435$abc$203387$abc$191387$flatten\m0.$verific$n1723$30458, arst=\rst_i, srst={ }
  62 cells in clk=\clk_i, en=$abc$259297$lo140, arst={ }, srst=\rst_i
  114 cells in clk=\clk_i, en=$abc$242014$abc$217562$abc$157672$auto$opt_dff.cc:219:make_patterns_logic$94692, arst=\rst_i, srst={ }
  108 cells in clk=\clk_i, en=$abc$242132$abc$217683$abc$157555$auto$opt_dff.cc:219:make_patterns_logic$95814, arst=\rst_i, srst={ }
  114 cells in clk=\clk_i, en=$abc$242244$abc$217795$abc$157433$auto$opt_dff.cc:219:make_patterns_logic$96936, arst=\rst_i, srst={ }
  106 cells in clk=\clk_i, en=$abc$242362$abc$217916$abc$158628$auto$opt_dff.cc:219:make_patterns_logic$85716, arst=\rst_i, srst={ }
  109 cells in clk=\clk_i, en=$abc$242470$abc$218033$abc$158867$auto$opt_dff.cc:219:make_patterns_logic$83472, arst=\rst_i, srst={ }
  107 cells in clk=\clk_i, en=$abc$242583$abc$218152$abc$158272$auto$opt_dff.cc:219:make_patterns_logic$89082, arst=\rst_i, srst={ }
  107 cells in clk=\clk_i, en=$abc$242694$abc$218264$abc$158511$auto$opt_dff.cc:219:make_patterns_logic$86838, arst=\rst_i, srst={ }
  110 cells in clk=\clk_i, en=$abc$242805$abc$218379$abc$158750$auto$opt_dff.cc:219:make_patterns_logic$84594, arst=\rst_i, srst={ }
  111 cells in clk=\clk_i, en=$abc$242919$abc$218494$abc$158389$auto$opt_dff.cc:219:make_patterns_logic$87960, arst=\rst_i, srst={ }
  108 cells in clk=\clk_i, en=$abc$243032$abc$218612$abc$158989$auto$opt_dff.cc:219:make_patterns_logic$82350, arst=\rst_i, srst={ }
  112 cells in clk=\clk_i, en=$abc$243144$abc$218727$abc$159584$auto$opt_dff.cc:219:make_patterns_logic$76740, arst=\rst_i, srst={ }
  109 cells in clk=\clk_i, en=$abc$243260$abc$218845$abc$159950$auto$opt_dff.cc:219:make_patterns_logic$73374, arst=\rst_i, srst={ }
  112 cells in clk=\clk_i, en=$abc$243373$abc$218958$abc$159467$auto$opt_dff.cc:219:make_patterns_logic$77862, arst=\rst_i, srst={ }
  91 cells in clk=\clk_i, en=$abc$243487$abc$219073$abc$162180$flatten\rf.$verific$n1103$30899, arst=\rst_i, srst={ }
  69 cells in clk=\clk_i, en=$abc$243639$abc$219253$abc$162180$flatten\rf.$verific$n180$30873, arst=\rst_i, srst={ }
  64 cells in clk=\clk_i, en=$abc$243730$abc$219343$abc$162180$flatten\rf.$verific$n109$30871, arst=\rst_i, srst={ }
  64 cells in clk=\clk_i, en=$abc$243821$abc$219433$abc$162180$flatten\rf.$verific$n251$30875, arst=\rst_i, srst={ }
  65 cells in clk=\clk_i, en=$abc$243911$abc$219711$abc$162180$flatten\rf.$verific$n322$30877, arst=\rst_i, srst={ }
  65 cells in clk=\clk_i, en=$abc$244002$abc$219801$abc$162180$flatten\rf.$verific$n464$30881, arst=\rst_i, srst={ }
  68 cells in clk=\clk_i, en=$abc$244092$abc$219892$abc$162180$flatten\rf.$verific$n535$30883, arst=\rst_i, srst={ }
  74 cells in clk=\clk_i, en=$abc$244183$abc$219989$abc$162180$flatten\rf.$verific$n606$30885, arst=\rst_i, srst={ }
  68 cells in clk=\clk_i, en=$abc$244273$abc$220080$abc$162180$flatten\rf.$verific$n38$30869, arst=\rst_i, srst={ }
  71 cells in clk=\clk_i, en=$abc$244372$abc$201602$abc$162180$flatten\rf.$verific$n393$30879, arst=\rst_i, srst={ }
  62 cells in clk=\clk_i, en=$abc$244463$abc$220171$abc$162180$flatten\rf.$verific$n748$30889, arst=\rst_i, srst={ }
  70 cells in clk=\clk_i, en=$abc$244564$abc$220270$abc$162180$flatten\rf.$verific$n819$30891, arst=\rst_i, srst={ }
  89 cells in clk=\clk_i, en=$abc$244656$abc$220360$abc$162180$flatten\rf.$verific$n961$30895, arst=\rst_i, srst={ }
  61 cells in clk=\clk_i, en=$abc$259297$lo118, arst={ }, srst=\rst_i
  65 cells in clk=\clk_i, en=$abc$259297$lo072, arst={ }, srst=\rst_i
  61 cells in clk=\clk_i, en=$abc$259297$lo054, arst={ }, srst=\rst_i
  64 cells in clk=\clk_i, en=$abc$259297$lo002, arst={ }, srst=\rst_i
  64 cells in clk=\clk_i, en=$abc$259297$lo068, arst={ }, srst=\rst_i
  64 cells in clk=\clk_i, en=$abc$259297$lo007, arst={ }, srst=\rst_i
  61 cells in clk=\clk_i, en=$abc$259297$lo128, arst={ }, srst=\rst_i
  1403 cells in clk=\clk_i, en=!$abc$245420$abc$222621$abc$181062$flatten\m7.$verific$n1723$30458, arst=\rst_i, srst={ }
  1583 cells in clk=\clk_i, en={ }, arst={ }, srst=!$abc$246837$abc$224034$abc$179523$rf.rf_sel
  1392 cells in clk=\clk_i, en=!$abc$248618$abc$225493$abc$182537$flatten\m6.$verific$n1723$30458, arst=\rst_i, srst={ }
  1402 cells in clk=\clk_i, en=!$abc$250037$abc$226905$abc$184011$flatten\m5.$verific$n1723$30458, arst=\rst_i, srst={ }
  1404 cells in clk=\clk_i, en=!$abc$251457$abc$228317$abc$185485$flatten\m4.$verific$n1723$30458, arst=\rst_i, srst={ }
  107 cells in clk=\clk_i, en=$abc$252879$abc$229728$abc$193916$auto$opt_dff.cc:219:make_patterns_logic$133962, arst=\rst_i, srst={ }
  107 cells in clk=\clk_i, en=$abc$252990$abc$229843$abc$194150$auto$opt_dff.cc:219:make_patterns_logic$131718, arst=\rst_i, srst={ }
  110 cells in clk=\clk_i, en=$abc$253101$abc$229956$abc$195320$auto$opt_dff.cc:219:make_patterns_logic$120498, arst=\rst_i, srst={ }
  110 cells in clk=\clk_i, en=$abc$253215$abc$230071$abc$195788$auto$opt_dff.cc:219:make_patterns_logic$116010, arst=\rst_i, srst={ }
  111 cells in clk=\clk_i, en=$abc$253329$abc$230185$abc$193682$auto$opt_dff.cc:219:make_patterns_logic$136206, arst=\rst_i, srst={ }
  107 cells in clk=\clk_i, en=$abc$253444$abc$230300$abc$194267$auto$opt_dff.cc:219:make_patterns_logic$130596, arst=\rst_i, srst={ }
  109 cells in clk=\clk_i, en=$abc$253555$abc$230413$abc$195086$auto$opt_dff.cc:219:make_patterns_logic$122742, arst=\rst_i, srst={ }
  107 cells in clk=\clk_i, en=$abc$253668$abc$230528$abc$195203$auto$opt_dff.cc:219:make_patterns_logic$121620, arst=\rst_i, srst={ }
  1406 cells in clk=\clk_i, en=!$abc$253779$abc$230640$abc$186959$flatten\m3.$verific$n1723$30458, arst=\rst_i, srst={ }
  111 cells in clk=\clk_i, en=$abc$255199$abc$232054$abc$193448$auto$opt_dff.cc:219:make_patterns_logic$138450, arst=\rst_i, srst={ }
  112 cells in clk=\clk_i, en=$abc$255314$abc$232169$abc$194501$auto$opt_dff.cc:219:make_patterns_logic$128352, arst=\rst_i, srst={ }
  110 cells in clk=\clk_i, en=$abc$255430$abc$233693$abc$195671$auto$opt_dff.cc:219:make_patterns_logic$117132, arst=\rst_i, srst={ }
  109 cells in clk=\clk_i, en=$abc$255544$abc$233808$abc$193799$auto$opt_dff.cc:219:make_patterns_logic$135084, arst=\rst_i, srst={ }
  1402 cells in clk=\clk_i, en=!$abc$255657$abc$233921$abc$189911$flatten\m1.$verific$n1723$30458, arst=\rst_i, srst={ }
  108 cells in clk=\clk_i, en=$abc$257079$abc$235333$abc$194033$auto$opt_dff.cc:219:make_patterns_logic$132840, arst=\rst_i, srst={ }
  110 cells in clk=\clk_i, en=$abc$257191$abc$235448$abc$193565$auto$opt_dff.cc:219:make_patterns_logic$137328, arst=\rst_i, srst={ }
  111 cells in clk=\clk_i, en=$abc$257305$abc$235563$abc$195437$auto$opt_dff.cc:219:make_patterns_logic$119376, arst=\rst_i, srst={ }
  108 cells in clk=\clk_i, en=$abc$257420$abc$235678$abc$195554$auto$opt_dff.cc:219:make_patterns_logic$118254, arst=\rst_i, srst={ }
  110 cells in clk=\clk_i, en=$abc$257531$abc$235791$abc$194384$auto$opt_dff.cc:219:make_patterns_logic$129474, arst=\rst_i, srst={ }
  112 cells in clk=\clk_i, en=$abc$257645$abc$235906$abc$194735$auto$opt_dff.cc:219:make_patterns_logic$126108, arst=\rst_i, srst={ }
  109 cells in clk=\clk_i, en=$abc$257761$abc$236021$abc$194852$auto$opt_dff.cc:219:make_patterns_logic$124986, arst=\rst_i, srst={ }
  63 cells in clk=\clk_i, en=$abc$241856$abc$201155$abc$162180$flatten\rf.$verific$n890$30893, arst=\rst_i, srst={ }
  124 cells in clk=\clk_i, en=$abc$244979$abc$217158$abc$162180$flatten\rf.$verific$n677$30887, arst=\rst_i, srst={ }
  112 cells in clk=\clk_i, en=$abc$244746$abc$220452$abc$162180$flatten\rf.$verific$n1032$30897, arst=\rst_i, srst={ }
  1408 cells in clk=\clk_i, en=!$abc$257874$abc$232281$abc$188435$flatten\m2.$verific$n1723$30458, arst=\rst_i, srst={ }
  17373 cells in clk=\clk_i, en={ }, arst={ }, srst={ }
  114 cells in clk=\clk_i, en=$abc$276686$abc$236248$abc$197435$auto$opt_dff.cc:219:make_patterns_logic$100302, arst=\rst_i, srst={ }

4.36.2. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$236366$abc$236136$abc$194969$auto$opt_dff.cc:219:make_patterns_logic$123864, asynchronously reset by \rst_i
Extracted 112 gates and 124 wires to a netlist network with 12 inputs and 4 outputs.

4.36.2.1. Executing ABC.

4.36.3. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$236479$abc$197557$abc$196379$auto$opt_dff.cc:219:make_patterns_logic$110400, asynchronously reset by \rst_i
Extracted 113 gates and 124 wires to a netlist network with 11 inputs and 4 outputs.

4.36.3.1. Executing ABC.

4.36.4. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$236594$abc$197671$abc$197084$auto$opt_dff.cc:219:make_patterns_logic$103668, asynchronously reset by \rst_i
Extracted 114 gates and 126 wires to a netlist network with 12 inputs and 4 outputs.

4.36.4.1. Executing ABC.

4.36.5. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$236709$abc$197786$abc$196967$auto$opt_dff.cc:219:make_patterns_logic$104790, asynchronously reset by \rst_i
Extracted 112 gates and 122 wires to a netlist network with 10 inputs and 4 outputs.

4.36.5.1. Executing ABC.

4.36.6. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$236824$abc$197902$abc$196849$auto$opt_dff.cc:219:make_patterns_logic$105912, asynchronously reset by \rst_i
Extracted 113 gates and 124 wires to a netlist network with 11 inputs and 4 outputs.

4.36.6.1. Executing ABC.

4.36.7. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$236939$abc$198017$abc$196731$auto$opt_dff.cc:219:make_patterns_logic$107034, asynchronously reset by \rst_i
Extracted 112 gates and 123 wires to a netlist network with 11 inputs and 4 outputs.

4.36.7.1. Executing ABC.

4.36.8. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$237053$abc$198134$abc$196257$auto$opt_dff.cc:219:make_patterns_logic$111522, asynchronously reset by \rst_i
Extracted 115 gates and 127 wires to a netlist network with 12 inputs and 4 outputs.

4.36.8.1. Executing ABC.

4.36.9. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$237169$abc$198253$abc$196614$auto$opt_dff.cc:219:make_patterns_logic$108156, asynchronously reset by \rst_i
Extracted 111 gates and 121 wires to a netlist network with 10 inputs and 4 outputs.

4.36.9.1. Executing ABC.

4.36.10. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$237283$abc$198368$abc$195905$auto$opt_dff.cc:219:make_patterns_logic$114888, asynchronously reset by \rst_i
Extracted 110 gates and 122 wires to a netlist network with 12 inputs and 4 outputs.

4.36.10.1. Executing ABC.

4.36.11. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$237394$abc$198482$abc$192980$auto$opt_dff.cc:219:make_patterns_logic$142938, asynchronously reset by \rst_i
Extracted 113 gates and 125 wires to a netlist network with 12 inputs and 4 outputs.

4.36.11.1. Executing ABC.

4.36.12. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$237508$abc$198596$abc$193097$auto$opt_dff.cc:219:make_patterns_logic$141816, asynchronously reset by \rst_i
Extracted 114 gates and 126 wires to a netlist network with 12 inputs and 4 outputs.

4.36.12.1. Executing ABC.

4.36.13. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$237623$abc$198711$abc$196022$auto$opt_dff.cc:219:make_patterns_logic$113766, asynchronously reset by \rst_i
Extracted 110 gates and 118 wires to a netlist network with 8 inputs and 4 outputs.

4.36.13.1. Executing ABC.

4.36.14. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$237737$abc$198826$abc$192863$auto$opt_dff.cc:219:make_patterns_logic$144060, asynchronously reset by \rst_i
Extracted 110 gates and 118 wires to a netlist network with 8 inputs and 4 outputs.

4.36.14.1. Executing ABC.

4.36.15. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$237851$abc$198938$abc$193214$auto$opt_dff.cc:219:make_patterns_logic$140694, asynchronously reset by \rst_i
Extracted 110 gates and 118 wires to a netlist network with 8 inputs and 4 outputs.

4.36.15.1. Executing ABC.

4.36.16. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$237965$abc$199053$abc$193331$auto$opt_dff.cc:219:make_patterns_logic$139572, asynchronously reset by \rst_i
Extracted 113 gates and 125 wires to a netlist network with 12 inputs and 4 outputs.

4.36.16.1. Executing ABC.

4.36.17. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$259297$lo015, synchronously reset by \rst_i
Extracted 61 gates and 107 wires to a netlist network with 46 inputs and 4 outputs.

4.36.17.1. Executing ABC.

4.36.18. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$259297$lo104, synchronously reset by \rst_i
Extracted 66 gates and 117 wires to a netlist network with 51 inputs and 4 outputs.

4.36.18.1. Executing ABC.

4.36.19. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$238079$abc$199167$abc$194618$auto$opt_dff.cc:219:make_patterns_logic$127230, asynchronously reset by \rst_i
Extracted 113 gates and 125 wires to a netlist network with 12 inputs and 4 outputs.

4.36.19.1. Executing ABC.

4.36.20. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$259297$lo008, synchronously reset by \rst_i
Extracted 64 gates and 113 wires to a netlist network with 49 inputs and 4 outputs.

4.36.20.1. Executing ABC.

4.36.21. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$259297$lo103, synchronously reset by \rst_i
Extracted 63 gates and 111 wires to a netlist network with 48 inputs and 4 outputs.

4.36.21.1. Executing ABC.

4.36.22. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$259297$lo094, synchronously reset by \rst_i
Extracted 64 gates and 113 wires to a netlist network with 49 inputs and 4 outputs.

4.36.22.1. Executing ABC.

4.36.23. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$259297$lo065, synchronously reset by \rst_i
Extracted 67 gates and 119 wires to a netlist network with 52 inputs and 3 outputs.

4.36.23.1. Executing ABC.

4.36.24. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$259297$lo036, synchronously reset by \rst_i
Extracted 61 gates and 107 wires to a netlist network with 46 inputs and 4 outputs.

4.36.24.1. Executing ABC.

4.36.25. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$238655$abc$201246$abc$159345$auto$opt_dff.cc:219:make_patterns_logic$78984, asynchronously reset by \rst_i
Extracted 110 gates and 120 wires to a netlist network with 10 inputs and 4 outputs.

4.36.25.1. Executing ABC.

4.36.26. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$238768$abc$201364$abc$157194$auto$opt_dff.cc:219:make_patterns_logic$99180, asynchronously reset by \rst_i
Extracted 109 gates and 117 wires to a netlist network with 8 inputs and 4 outputs.

4.36.26.1. Executing ABC.

4.36.27. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$238881$abc$201483$abc$157911$auto$opt_dff.cc:219:make_patterns_logic$92448, asynchronously reset by \rst_i
Extracted 111 gates and 122 wires to a netlist network with 11 inputs and 4 outputs.

4.36.27.1. Executing ABC.

4.36.28. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$238994$abc$201692$abc$157794$auto$opt_dff.cc:219:make_patterns_logic$93570, asynchronously reset by \rst_i
Extracted 114 gates and 124 wires to a netlist network with 10 inputs and 4 outputs.

4.36.28.1. Executing ABC.

4.36.29. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$259297$lo043, synchronously reset by \rst_i
Extracted 67 gates and 119 wires to a netlist network with 52 inputs and 3 outputs.

4.36.29.1. Executing ABC.

4.36.30. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$239179$abc$202113$abc$157316$auto$opt_dff.cc:219:make_patterns_logic$98058, asynchronously reset by \rst_i
Extracted 108 gates and 116 wires to a netlist network with 8 inputs and 4 outputs.

4.36.30.1. Executing ABC.

4.36.31. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$239291$abc$202226$abc$158150$auto$opt_dff.cc:219:make_patterns_logic$90204, asynchronously reset by \rst_i
Extracted 114 gates and 126 wires to a netlist network with 12 inputs and 4 outputs.

4.36.31.1. Executing ABC.

4.36.32. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$239406$abc$202344$abc$158033$auto$opt_dff.cc:219:make_patterns_logic$91326, asynchronously reset by \rst_i
Extracted 109 gates and 117 wires to a netlist network with 8 inputs and 4 outputs.

4.36.32.1. Executing ABC.

4.36.33. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$239519$abc$202457$abc$159106$auto$opt_dff.cc:219:make_patterns_logic$81228, asynchronously reset by \rst_i
Extracted 109 gates and 121 wires to a netlist network with 12 inputs and 4 outputs.

4.36.33.1. Executing ABC.

4.36.34. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$239629$abc$202573$abc$159828$auto$opt_dff.cc:219:make_patterns_logic$74496, asynchronously reset by \rst_i
Extracted 111 gates and 122 wires to a netlist network with 11 inputs and 4 outputs.

4.36.34.1. Executing ABC.

4.36.35. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$239742$abc$202691$abc$159706$auto$opt_dff.cc:219:make_patterns_logic$75618, asynchronously reset by \rst_i
Extracted 114 gates and 125 wires to a netlist network with 11 inputs and 4 outputs.

4.36.35.1. Executing ABC.

4.36.36. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$239858$abc$202812$abc$196496$auto$opt_dff.cc:219:make_patterns_logic$109278, asynchronously reset by \rst_i
Extracted 113 gates and 123 wires to a netlist network with 10 inputs and 4 outputs.

4.36.36.1. Executing ABC.

4.36.37. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$239974$abc$202929$abc$196139$auto$opt_dff.cc:219:make_patterns_logic$112644, asynchronously reset by \rst_i
Extracted 112 gates and 120 wires to a netlist network with 8 inputs and 4 outputs.

4.36.37.1. Executing ABC.

4.36.38. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$240090$abc$203044$abc$197201$auto$opt_dff.cc:219:make_patterns_logic$102546, asynchronously reset by \rst_i
Extracted 112 gates and 120 wires to a netlist network with 8 inputs and 4 outputs.

4.36.38.1. Executing ABC.

4.36.39. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$240206$abc$203159$abc$197318$auto$opt_dff.cc:219:make_patterns_logic$101424, asynchronously reset by \rst_i
Extracted 113 gates and 125 wires to a netlist network with 12 inputs and 4 outputs.

4.36.39.1. Executing ABC.

4.36.40. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$240320$abc$203274$abc$159228$auto$opt_dff.cc:219:make_patterns_logic$80106, asynchronously reset by \rst_i
Extracted 111 gates and 119 wires to a netlist network with 8 inputs and 4 outputs.

4.36.40.1. Executing ABC.

4.36.41. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$240435$abc$203387$abc$191387$flatten\m0.$verific$n1723$30458, asynchronously reset by \rst_i
Extracted 1405 gates and 2076 wires to a netlist network with 671 inputs and 158 outputs.

4.36.41.1. Executing ABC.

4.36.42. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$259297$lo140, synchronously reset by \rst_i
Extracted 62 gates and 109 wires to a netlist network with 47 inputs and 4 outputs.

4.36.42.1. Executing ABC.

4.36.43. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$242014$abc$217562$abc$157672$auto$opt_dff.cc:219:make_patterns_logic$94692, asynchronously reset by \rst_i
Extracted 114 gates and 122 wires to a netlist network with 8 inputs and 4 outputs.

4.36.43.1. Executing ABC.

4.36.44. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$242132$abc$217683$abc$157555$auto$opt_dff.cc:219:make_patterns_logic$95814, asynchronously reset by \rst_i
Extracted 108 gates and 116 wires to a netlist network with 8 inputs and 4 outputs.

4.36.44.1. Executing ABC.

4.36.45. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$242244$abc$217795$abc$157433$auto$opt_dff.cc:219:make_patterns_logic$96936, asynchronously reset by \rst_i
Extracted 114 gates and 122 wires to a netlist network with 8 inputs and 4 outputs.

4.36.45.1. Executing ABC.

4.36.46. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$242362$abc$217916$abc$158628$auto$opt_dff.cc:219:make_patterns_logic$85716, asynchronously reset by \rst_i
Extracted 106 gates and 117 wires to a netlist network with 11 inputs and 4 outputs.

4.36.46.1. Executing ABC.

4.36.47. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$242470$abc$218033$abc$158867$auto$opt_dff.cc:219:make_patterns_logic$83472, asynchronously reset by \rst_i
Extracted 109 gates and 117 wires to a netlist network with 8 inputs and 4 outputs.

4.36.47.1. Executing ABC.

4.36.48. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$242583$abc$218152$abc$158272$auto$opt_dff.cc:219:make_patterns_logic$89082, asynchronously reset by \rst_i
Extracted 107 gates and 115 wires to a netlist network with 8 inputs and 4 outputs.

4.36.48.1. Executing ABC.

4.36.49. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$242694$abc$218264$abc$158511$auto$opt_dff.cc:219:make_patterns_logic$86838, asynchronously reset by \rst_i
Extracted 107 gates and 115 wires to a netlist network with 8 inputs and 4 outputs.

4.36.49.1. Executing ABC.

4.36.50. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$242805$abc$218379$abc$158750$auto$opt_dff.cc:219:make_patterns_logic$84594, asynchronously reset by \rst_i
Extracted 110 gates and 118 wires to a netlist network with 8 inputs and 4 outputs.

4.36.50.1. Executing ABC.

4.36.51. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$242919$abc$218494$abc$158389$auto$opt_dff.cc:219:make_patterns_logic$87960, asynchronously reset by \rst_i
Extracted 111 gates and 122 wires to a netlist network with 11 inputs and 4 outputs.

4.36.51.1. Executing ABC.

4.36.52. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$243032$abc$218612$abc$158989$auto$opt_dff.cc:219:make_patterns_logic$82350, asynchronously reset by \rst_i
Extracted 108 gates and 116 wires to a netlist network with 8 inputs and 4 outputs.

4.36.52.1. Executing ABC.

4.36.53. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$243144$abc$218727$abc$159584$auto$opt_dff.cc:219:make_patterns_logic$76740, asynchronously reset by \rst_i
Extracted 112 gates and 120 wires to a netlist network with 8 inputs and 4 outputs.

4.36.53.1. Executing ABC.

4.36.54. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$243260$abc$218845$abc$159950$auto$opt_dff.cc:219:make_patterns_logic$73374, asynchronously reset by \rst_i
Extracted 109 gates and 117 wires to a netlist network with 8 inputs and 4 outputs.

4.36.54.1. Executing ABC.

4.36.55. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$243373$abc$218958$abc$159467$auto$opt_dff.cc:219:make_patterns_logic$77862, asynchronously reset by \rst_i
Extracted 112 gates and 123 wires to a netlist network with 11 inputs and 4 outputs.

4.36.55.1. Executing ABC.

4.36.56. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$243487$abc$219073$abc$162180$flatten\rf.$verific$n1103$30899, asynchronously reset by \rst_i
Extracted 91 gates and 146 wires to a netlist network with 55 inputs and 61 outputs.

4.36.56.1. Executing ABC.

4.36.57. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$243639$abc$219253$abc$162180$flatten\rf.$verific$n180$30873, asynchronously reset by \rst_i
Extracted 69 gates and 100 wires to a netlist network with 31 inputs and 57 outputs.

4.36.57.1. Executing ABC.

4.36.58. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$243730$abc$219343$abc$162180$flatten\rf.$verific$n109$30871, asynchronously reset by \rst_i
Extracted 64 gates and 90 wires to a netlist network with 26 inputs and 57 outputs.

4.36.58.1. Executing ABC.

4.36.59. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$243821$abc$219433$abc$162180$flatten\rf.$verific$n251$30875, asynchronously reset by \rst_i
Extracted 64 gates and 88 wires to a netlist network with 24 inputs and 60 outputs.

4.36.59.1. Executing ABC.

4.36.60. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$243911$abc$219711$abc$162180$flatten\rf.$verific$n322$30877, asynchronously reset by \rst_i
Extracted 65 gates and 93 wires to a netlist network with 28 inputs and 58 outputs.

4.36.60.1. Executing ABC.

4.36.61. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$244002$abc$219801$abc$162180$flatten\rf.$verific$n464$30881, asynchronously reset by \rst_i
Extracted 65 gates and 93 wires to a netlist network with 28 inputs and 58 outputs.

4.36.61.1. Executing ABC.

4.36.62. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$244092$abc$219892$abc$162180$flatten\rf.$verific$n535$30883, asynchronously reset by \rst_i
Extracted 68 gates and 99 wires to a netlist network with 31 inputs and 57 outputs.

4.36.62.1. Executing ABC.

4.36.63. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$244183$abc$219989$abc$162180$flatten\rf.$verific$n606$30885, asynchronously reset by \rst_i
Extracted 74 gates and 112 wires to a netlist network with 38 inputs and 60 outputs.

4.36.63.1. Executing ABC.

4.36.64. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$244273$abc$220080$abc$162180$flatten\rf.$verific$n38$30869, asynchronously reset by \rst_i
Extracted 68 gates and 99 wires to a netlist network with 31 inputs and 58 outputs.

4.36.64.1. Executing ABC.

4.36.65. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$244372$abc$201602$abc$162180$flatten\rf.$verific$n393$30879, asynchronously reset by \rst_i
Extracted 71 gates and 102 wires to a netlist network with 31 inputs and 61 outputs.

4.36.65.1. Executing ABC.

4.36.66. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$244463$abc$220171$abc$162180$flatten\rf.$verific$n748$30889, asynchronously reset by \rst_i
Extracted 62 gates and 85 wires to a netlist network with 23 inputs and 59 outputs.

4.36.66.1. Executing ABC.

4.36.67. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$244564$abc$220270$abc$162180$flatten\rf.$verific$n819$30891, asynchronously reset by \rst_i
Extracted 70 gates and 102 wires to a netlist network with 32 inputs and 57 outputs.

4.36.67.1. Executing ABC.

4.36.68. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$244656$abc$220360$abc$162180$flatten\rf.$verific$n961$30895, asynchronously reset by \rst_i
Extracted 89 gates and 143 wires to a netlist network with 54 inputs and 70 outputs.

4.36.68.1. Executing ABC.

4.36.69. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$259297$lo118, synchronously reset by \rst_i
Extracted 61 gates and 107 wires to a netlist network with 46 inputs and 4 outputs.

4.36.69.1. Executing ABC.

4.36.70. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$259297$lo072, synchronously reset by \rst_i
Extracted 65 gates and 115 wires to a netlist network with 50 inputs and 4 outputs.

4.36.70.1. Executing ABC.

4.36.71. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$259297$lo054, synchronously reset by \rst_i
Extracted 61 gates and 107 wires to a netlist network with 46 inputs and 4 outputs.

4.36.71.1. Executing ABC.

4.36.72. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$259297$lo002, synchronously reset by \rst_i
Extracted 64 gates and 113 wires to a netlist network with 49 inputs and 4 outputs.

4.36.72.1. Executing ABC.

4.36.73. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$259297$lo068, synchronously reset by \rst_i
Extracted 64 gates and 113 wires to a netlist network with 49 inputs and 4 outputs.

4.36.73.1. Executing ABC.

4.36.74. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$259297$lo007, synchronously reset by \rst_i
Extracted 64 gates and 113 wires to a netlist network with 49 inputs and 4 outputs.

4.36.74.1. Executing ABC.

4.36.75. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$259297$lo128, synchronously reset by \rst_i
Extracted 61 gates and 107 wires to a netlist network with 46 inputs and 4 outputs.

4.36.75.1. Executing ABC.

4.36.76. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$245420$abc$222621$abc$181062$flatten\m7.$verific$n1723$30458, asynchronously reset by \rst_i
Extracted 1403 gates and 2074 wires to a netlist network with 671 inputs and 158 outputs.

4.36.76.1. Executing ABC.

4.36.77. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, synchronously reset by !$abc$246837$abc$224034$abc$179523$rf.rf_sel
Extracted 1583 gates and 2365 wires to a netlist network with 782 inputs and 565 outputs.

4.36.77.1. Executing ABC.

4.36.78. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$248618$abc$225493$abc$182537$flatten\m6.$verific$n1723$30458, asynchronously reset by \rst_i
Extracted 1392 gates and 2058 wires to a netlist network with 666 inputs and 158 outputs.

4.36.78.1. Executing ABC.

4.36.79. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$250037$abc$226905$abc$184011$flatten\m5.$verific$n1723$30458, asynchronously reset by \rst_i
Extracted 1402 gates and 2072 wires to a netlist network with 670 inputs and 157 outputs.

4.36.79.1. Executing ABC.

4.36.80. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$251457$abc$228317$abc$185485$flatten\m4.$verific$n1723$30458, asynchronously reset by \rst_i
Extracted 1404 gates and 2076 wires to a netlist network with 672 inputs and 159 outputs.

4.36.80.1. Executing ABC.

4.36.81. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$252879$abc$229728$abc$193916$auto$opt_dff.cc:219:make_patterns_logic$133962, asynchronously reset by \rst_i
Extracted 107 gates and 115 wires to a netlist network with 8 inputs and 4 outputs.

4.36.81.1. Executing ABC.

4.36.82. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$252990$abc$229843$abc$194150$auto$opt_dff.cc:219:make_patterns_logic$131718, asynchronously reset by \rst_i
Extracted 107 gates and 115 wires to a netlist network with 8 inputs and 4 outputs.

4.36.82.1. Executing ABC.

4.36.83. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$253101$abc$229956$abc$195320$auto$opt_dff.cc:219:make_patterns_logic$120498, asynchronously reset by \rst_i
Extracted 110 gates and 118 wires to a netlist network with 8 inputs and 4 outputs.

4.36.83.1. Executing ABC.

4.36.84. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$253215$abc$230071$abc$195788$auto$opt_dff.cc:219:make_patterns_logic$116010, asynchronously reset by \rst_i
Extracted 110 gates and 118 wires to a netlist network with 8 inputs and 4 outputs.

4.36.84.1. Executing ABC.

4.36.85. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$253329$abc$230185$abc$193682$auto$opt_dff.cc:219:make_patterns_logic$136206, asynchronously reset by \rst_i
Extracted 111 gates and 119 wires to a netlist network with 8 inputs and 4 outputs.

4.36.85.1. Executing ABC.

4.36.86. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$253444$abc$230300$abc$194267$auto$opt_dff.cc:219:make_patterns_logic$130596, asynchronously reset by \rst_i
Extracted 107 gates and 115 wires to a netlist network with 8 inputs and 4 outputs.

4.36.86.1. Executing ABC.

4.36.87. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$253555$abc$230413$abc$195086$auto$opt_dff.cc:219:make_patterns_logic$122742, asynchronously reset by \rst_i
Extracted 109 gates and 117 wires to a netlist network with 8 inputs and 4 outputs.

4.36.87.1. Executing ABC.

4.36.88. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$253668$abc$230528$abc$195203$auto$opt_dff.cc:219:make_patterns_logic$121620, asynchronously reset by \rst_i
Extracted 107 gates and 115 wires to a netlist network with 8 inputs and 4 outputs.

4.36.88.1. Executing ABC.

4.36.89. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$253779$abc$230640$abc$186959$flatten\m3.$verific$n1723$30458, asynchronously reset by \rst_i
Extracted 1406 gates and 2078 wires to a netlist network with 672 inputs and 159 outputs.

4.36.89.1. Executing ABC.

4.36.90. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$255199$abc$232054$abc$193448$auto$opt_dff.cc:219:make_patterns_logic$138450, asynchronously reset by \rst_i
Extracted 111 gates and 119 wires to a netlist network with 8 inputs and 4 outputs.

4.36.90.1. Executing ABC.

4.36.91. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$255314$abc$232169$abc$194501$auto$opt_dff.cc:219:make_patterns_logic$128352, asynchronously reset by \rst_i
Extracted 112 gates and 120 wires to a netlist network with 8 inputs and 4 outputs.

4.36.91.1. Executing ABC.

4.36.92. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$255430$abc$233693$abc$195671$auto$opt_dff.cc:219:make_patterns_logic$117132, asynchronously reset by \rst_i
Extracted 110 gates and 118 wires to a netlist network with 8 inputs and 4 outputs.

4.36.92.1. Executing ABC.

4.36.93. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$255544$abc$233808$abc$193799$auto$opt_dff.cc:219:make_patterns_logic$135084, asynchronously reset by \rst_i
Extracted 109 gates and 117 wires to a netlist network with 8 inputs and 4 outputs.

4.36.93.1. Executing ABC.

4.36.94. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$255657$abc$233921$abc$189911$flatten\m1.$verific$n1723$30458, asynchronously reset by \rst_i
Extracted 1402 gates and 2070 wires to a netlist network with 668 inputs and 155 outputs.

4.36.94.1. Executing ABC.

4.36.95. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$257079$abc$235333$abc$194033$auto$opt_dff.cc:219:make_patterns_logic$132840, asynchronously reset by \rst_i
Extracted 108 gates and 116 wires to a netlist network with 8 inputs and 4 outputs.

4.36.95.1. Executing ABC.

4.36.96. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$257191$abc$235448$abc$193565$auto$opt_dff.cc:219:make_patterns_logic$137328, asynchronously reset by \rst_i
Extracted 110 gates and 118 wires to a netlist network with 8 inputs and 4 outputs.

4.36.96.1. Executing ABC.

4.36.97. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$257305$abc$235563$abc$195437$auto$opt_dff.cc:219:make_patterns_logic$119376, asynchronously reset by \rst_i
Extracted 111 gates and 119 wires to a netlist network with 8 inputs and 4 outputs.

4.36.97.1. Executing ABC.

4.36.98. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$257420$abc$235678$abc$195554$auto$opt_dff.cc:219:make_patterns_logic$118254, asynchronously reset by \rst_i
Extracted 108 gates and 118 wires to a netlist network with 10 inputs and 4 outputs.

4.36.98.1. Executing ABC.

4.36.99. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$257531$abc$235791$abc$194384$auto$opt_dff.cc:219:make_patterns_logic$129474, asynchronously reset by \rst_i
Extracted 110 gates and 118 wires to a netlist network with 8 inputs and 4 outputs.

4.36.99.1. Executing ABC.

4.36.100. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$257645$abc$235906$abc$194735$auto$opt_dff.cc:219:make_patterns_logic$126108, asynchronously reset by \rst_i
Extracted 112 gates and 120 wires to a netlist network with 8 inputs and 4 outputs.

4.36.100.1. Executing ABC.

4.36.101. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$257761$abc$236021$abc$194852$auto$opt_dff.cc:219:make_patterns_logic$124986, asynchronously reset by \rst_i
Extracted 109 gates and 117 wires to a netlist network with 8 inputs and 4 outputs.

4.36.101.1. Executing ABC.

4.36.102. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$241856$abc$201155$abc$162180$flatten\rf.$verific$n890$30893, asynchronously reset by \rst_i
Extracted 63 gates and 89 wires to a netlist network with 26 inputs and 58 outputs.

4.36.102.1. Executing ABC.

4.36.103. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$244979$abc$217158$abc$162180$flatten\rf.$verific$n677$30887, asynchronously reset by \rst_i
Extracted 124 gates and 213 wires to a netlist network with 89 inputs and 73 outputs.

4.36.103.1. Executing ABC.

4.36.104. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$244746$abc$220452$abc$162180$flatten\rf.$verific$n1032$30897, asynchronously reset by \rst_i
Extracted 112 gates and 189 wires to a netlist network with 77 inputs and 69 outputs.

4.36.104.1. Executing ABC.

4.36.105. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$257874$abc$232281$abc$188435$flatten\m2.$verific$n1723$30458, asynchronously reset by \rst_i
Extracted 1408 gates and 2082 wires to a netlist network with 674 inputs and 161 outputs.

4.36.105.1. Executing ABC.

4.36.106. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i
Extracted 17373 gates and 18629 wires to a netlist network with 1256 inputs and 1374 outputs.

4.36.106.1. Executing ABC.

4.36.107. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$276686$abc$236248$abc$197435$auto$opt_dff.cc:219:make_patterns_logic$100302, asynchronously reset by \rst_i
Extracted 114 gates and 122 wires to a netlist network with 8 inputs and 4 outputs.

4.36.107.1. Executing ABC.

yosys> opt_ffinv

4.37. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt -sat

4.38. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

4.38.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.
<suppressed ~102 debug messages>

yosys> opt_merge -nomux

4.38.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
<suppressed ~201 debug messages>
Removed a total of 67 cells.

yosys> opt_muxtree

4.38.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wb_conmax_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

4.38.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wb_conmax_top.
Performed a total of 0 changes.

yosys> opt_merge

4.38.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
Removed a total of 0 cells.

yosys> opt_dff -sat

4.38.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

4.38.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..
Removed 0 unused cells and 174899 unused wires.
<suppressed ~1429 debug messages>

yosys> opt_expr

4.38.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

4.38.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

4.38.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wb_conmax_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

4.38.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wb_conmax_top.
Performed a total of 0 changes.

yosys> opt_merge

4.38.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
Removed a total of 0 cells.

yosys> opt_dff -sat

4.38.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

4.38.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..

yosys> opt_expr

4.38.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

4.38.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /home/users/temp_dir/yosys_rmdpX6/abc_tmp_1.scr

4.39. Executing ABC pass (technology mapping using ABC).

4.39.1. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Extracted 38679 gates and 40561 wires to a netlist network with 1882 inputs and 1891 outputs.

4.39.1.1. Executing ABC.
DE:   #PIs = 1882  #Luts =  8860  Max Lvl =  11  Avg Lvl =   4.56  [   0.79 sec. at Pass 0]
DE:   #PIs = 1882  #Luts =  7794  Max Lvl =   9  Avg Lvl =   4.00  [  44.71 sec. at Pass 1]
DE:   #PIs = 1882  #Luts =  7712  Max Lvl =   9  Avg Lvl =   3.97  [  11.26 sec. at Pass 2]
DE:   #PIs = 1882  #Luts =  7680  Max Lvl =  10  Avg Lvl =   3.98  [  14.65 sec. at Pass 3]
DE:   #PIs = 1882  #Luts =  7673  Max Lvl =  10  Avg Lvl =   3.97  [  12.95 sec. at Pass 4]
DE:   #PIs = 1882  #Luts =  7646  Max Lvl =   9  Avg Lvl =   3.96  [  18.77 sec. at Pass 5]
DE:   #PIs = 1882  #Luts =  7636  Max Lvl =   9  Avg Lvl =   3.97  [  14.69 sec. at Pass 6]
DE:   #PIs = 1882  #Luts =  7636  Max Lvl =   9  Avg Lvl =   3.97  [  19.73 sec. at Pass 7]
DE:   #PIs = 1882  #Luts =  7612  Max Lvl =   9  Avg Lvl =   3.96  [  15.00 sec. at Pass 8]
DE:   #PIs = 1882  #Luts =  7607  Max Lvl =  10  Avg Lvl =   3.97  [  18.71 sec. at Pass 9]
DE:   #PIs = 1882  #Luts =  7601  Max Lvl =  10  Avg Lvl =   3.97  [   3.95 sec. at Pass 10]

yosys> opt

4.40. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

4.40.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

yosys> opt_merge -nomux

4.40.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

4.40.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wb_conmax_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

4.40.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wb_conmax_top.
Performed a total of 0 changes.

yosys> opt_merge

4.40.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
Removed a total of 0 cells.

yosys> opt_dff

4.40.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

4.40.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..
Removed 0 unused cells and 40449 unused wires.
<suppressed ~626 debug messages>

yosys> opt_expr

4.40.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

4.40.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

4.40.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wb_conmax_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

4.40.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wb_conmax_top.
Performed a total of 0 changes.

yosys> opt_merge

4.40.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
Removed a total of 0 cells.

yosys> opt_dff

4.40.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

4.40.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..

yosys> opt_expr

4.40.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

4.40.16. Finished OPT passes. (There is nothing left to do.)

yosys> opt_ffinv

4.41. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> stat

4.42. Printing statistics.

=== wb_conmax_top ===

   Number of wires:              11159
   Number of wire bits:          56473
   Number of public wires:        4473
   Number of public wire bits:   49787
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               8371
     $_DFFE_PP0N_                  128
     $_DFFE_PP0P_                  448
     $_DFF_P_                      146
     $_SDFFE_PP0P_                  32
     $_SDFF_PP0_                    16
     $lut                         7601


yosys> shregmap -minlen 8 -maxlen 20

4.43. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

4.44. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

4.45. Printing statistics.

=== wb_conmax_top ===

   Number of wires:              11239
   Number of wire bits:          56553
   Number of public wires:        4473
   Number of public wire bits:   49787
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               8451
     $_DFFE_PP0N_                  128
     $_DFFE_PP0P_                  448
     $_DFF_P_                      194
     $_MUX_                         80
     $lut                         7601


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

4.46. Executing TECHMAP pass (map to technology primitives).

4.46.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.46.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

4.46.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using template \$_DFFE_PP0N_ for cells of type $_DFFE_PP0N_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~9211 debug messages>

yosys> opt_expr -mux_undef

4.47. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.
<suppressed ~259921 debug messages>

yosys> simplemap

4.48. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

4.49. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

yosys> opt_merge

4.50. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
<suppressed ~101841 debug messages>
Removed a total of 33947 cells.

yosys> opt_dff -nodffe -nosdff

4.51. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

4.52. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..
Removed 0 unused cells and 28562 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

4.53. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

4.53.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.
<suppressed ~5662 debug messages>

yosys> opt_merge -nomux

4.53.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
<suppressed ~51 debug messages>
Removed a total of 17 cells.

yosys> opt_muxtree

4.53.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wb_conmax_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

4.53.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wb_conmax_top.
Performed a total of 0 changes.

yosys> opt_merge

4.53.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

4.53.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

4.53.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..
Removed 0 unused cells and 1047 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

4.53.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

4.53.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

4.53.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wb_conmax_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

4.53.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wb_conmax_top.
Performed a total of 0 changes.

yosys> opt_merge

4.53.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

4.53.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

4.53.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..

yosys> opt_expr

4.53.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

4.53.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /home/users/temp_dir/yosys_rmdpX6/abc_tmp_2.scr

4.54. Executing ABC pass (technology mapping using ABC).

4.54.1. Extracting gate netlist of module `\wb_conmax_top' to `<abc-temp-dir>/input.blif'..
Extracted 25194 gates and 27095 wires to a netlist network with 1899 inputs and 1891 outputs.

4.54.1.1. Executing ABC.
DE:   #PIs = 1899  #Luts =  7684  Max Lvl =   9  Avg Lvl =   3.83  [   0.90 sec. at Pass 0]
DE:   #PIs = 1899  #Luts =  7684  Max Lvl =   9  Avg Lvl =   3.83  [  41.85 sec. at Pass 1]
DE:   #PIs = 1899  #Luts =  7671  Max Lvl =   8  Avg Lvl =   3.83  [  12.78 sec. at Pass 2]
DE:   #PIs = 1899  #Luts =  7632  Max Lvl =   8  Avg Lvl =   3.84  [  17.78 sec. at Pass 3]
DE:   #PIs = 1899  #Luts =  7613  Max Lvl =   8  Avg Lvl =   3.84  [  13.03 sec. at Pass 4]
DE:   #PIs = 1899  #Luts =  7613  Max Lvl =   8  Avg Lvl =   3.84  [  17.81 sec. at Pass 5]
DE:   #PIs = 1899  #Luts =  7612  Max Lvl =   8  Avg Lvl =   3.83  [  14.91 sec. at Pass 6]
DE:   #PIs = 1899  #Luts =  7612  Max Lvl =   8  Avg Lvl =   3.83  [  21.32 sec. at Pass 7]
DE:   #PIs = 1899  #Luts =  7601  Max Lvl =   8  Avg Lvl =   3.82  [  15.99 sec. at Pass 8]
DE:   #PIs = 1899  #Luts =  7601  Max Lvl =   8  Avg Lvl =   3.82  [  22.89 sec. at Pass 9]
DE:   #PIs = 1899  #Luts =  7601  Max Lvl =   8  Avg Lvl =   3.82  [   6.50 sec. at Pass 10]

yosys> opt

4.55. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

4.55.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

yosys> opt_merge -nomux

4.55.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

4.55.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wb_conmax_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

4.55.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wb_conmax_top.
Performed a total of 0 changes.

yosys> opt_merge

4.55.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
Removed a total of 0 cells.

yosys> opt_dff

4.55.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

4.55.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..
Removed 0 unused cells and 21566 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

4.55.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

4.55.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

4.55.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wb_conmax_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

4.55.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wb_conmax_top.
Performed a total of 0 changes.

yosys> opt_merge

4.55.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wb_conmax_top'.
Removed a total of 0 cells.

yosys> opt_dff

4.55.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

4.55.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..

yosys> opt_expr

4.55.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module wb_conmax_top.

4.55.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

4.56. Executing HIERARCHY pass (managing design hierarchy).

4.56.1. Analyzing design hierarchy..
Top module:  \wb_conmax_top

4.56.2. Analyzing design hierarchy..
Top module:  \wb_conmax_top
Removed 0 unused modules.

yosys> stat

4.57. Printing statistics.

=== wb_conmax_top ===

   Number of wires:              11159
   Number of wire bits:          56473
   Number of public wires:        4473
   Number of public wire bits:   49787
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               8371
     $lut                         7601
     dffsre                        770


yosys> opt_clean -purge

4.58. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wb_conmax_top..
Removed 0 unused cells and 4035 unused wires.
<suppressed ~4035 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

4.59. Executing Verilog backend.
Dumping module `\wb_conmax_top'.

Warnings: 99 unique messages, 99 total
End of script. Logfile hash: 446daf175d, CPU: user 229.73s system 10.65s, MEM: 664.81 MB peak
Yosys 0.18+10 (git sha1 8217e4c48, gcc 9.1.0 -fPIC -Os)
Time spent: 95% 6x abc (3114 sec), 1% 34x opt_expr (50 sec), ...
real 683.56
user 2984.66
sys 271.33
