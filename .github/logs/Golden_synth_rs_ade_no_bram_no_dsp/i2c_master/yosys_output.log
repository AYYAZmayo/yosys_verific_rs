
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.50
 Yosys 0.18+10 (git sha1 7a7a25778, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Tue May 31 17:39:28 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k i2c_master_defines.vh StateMachine.v i2c_master.v i2c_master_bit_ctrl.v i2c_master_byte_ctrl.v

yosys> verific -vlog2k i2c_master_defines.vh StateMachine.v i2c_master.v i2c_master_bit_ctrl.v i2c_master_byte_ctrl.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Tue May 31 17:39:28 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'i2c_master_defines.vh'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'StateMachine.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'i2c_master.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'i2c_master_bit_ctrl.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'i2c_master_byte_ctrl.v'

yosys> read -sv i2c_master_defines.svh StateMachine.sv i2c_master.sv i2c_master_bit_ctrl.sv i2c_master_byte_ctrl.sv

yosys> verific -sv i2c_master_defines.svh StateMachine.sv i2c_master.sv i2c_master_bit_ctrl.sv i2c_master_byte_ctrl.sv

3. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Tue May 31 17:39:28 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'i2c_master_defines.svh'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'StateMachine.sv'
VERIFIC-WARNING [VERI-1206] StateMachine.sv:588: overwriting previous definition of module 'StateMachine'
VERIFIC-INFO [VERI-2142] StateMachine.v:588: previous definition of design element 'StateMachine' is here
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'i2c_master.sv'
VERIFIC-WARNING [VERI-1206] i2c_master.sv:322: overwriting previous definition of module 'i2c_master'
VERIFIC-INFO [VERI-2142] i2c_master.v:322: previous definition of design element 'i2c_master' is here
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'i2c_master_bit_ctrl.sv'
VERIFIC-WARNING [VERI-1206] i2c_master_bit_ctrl.sv:604: overwriting previous definition of module 'i2c_master_bit_ctrl'
VERIFIC-INFO [VERI-2142] i2c_master_bit_ctrl.v:597: previous definition of design element 'i2c_master_bit_ctrl' is here
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'i2c_master_byte_ctrl.sv'
VERIFIC-WARNING [VERI-1206] i2c_master_byte_ctrl.sv:389: overwriting previous definition of module 'i2c_master_byte_ctrl'
VERIFIC-INFO [VERI-2142] i2c_master_byte_ctrl.v:385: previous definition of design element 'i2c_master_byte_ctrl' is here

yosys> synth_rs -top i2c_master -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

4. Executing synth_rs pass: v0.4.59

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

4.1. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

4.2. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\RS_DSP2_MULT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_sim'.
Generating RTLIL representation for module `\dsp_t1_20x18x64'.
Generating RTLIL representation for module `\dsp_t1_10x9x32'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top i2c_master

4.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] i2c_master.sv:81: compiling module 'i2c_master'
VERIFIC-WARNING [VERI-2371] i2c_master.sv:174: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:180: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:181: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:182: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:183: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:184: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:185: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:186: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:187: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:197: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:198: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:199: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:205: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:206: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:207: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:215: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:222: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:224: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:228: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:233: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:235: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:236: delay control is not supported for synthesis
VERIFIC-INFO [VERI-1018] i2c_master_byte_ctrl.sv:83: compiling module 'i2c_master_byte_ctrl'
VERIFIC-INFO [VERI-1018] i2c_master_bit_ctrl.sv:152: compiling module 'i2c_master_bit_ctrl'
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:207: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:224: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:225: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:229: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:230: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:234: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:235: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:239: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:240: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:251: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:252: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:256: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:257: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-1209] i2c_master_bit_ctrl.sv:271: expression size 32 truncated to fit in target size 14
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:296: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:297: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:299: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:300: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:304: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:305: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:307: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:308: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:312: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:313: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:315: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:316: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:326: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:327: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:331: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:332: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:336: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:337: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:343: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:344: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:345: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:355: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:357: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:359: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:363: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:365: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:373: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:401: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:402: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:403: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:404: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:405: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:409: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:410: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:411: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:412: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:413: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:417: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:425: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:426: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:427: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:428: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:429: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:432: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:433: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:434: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:440: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:441: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:442: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:443: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:448: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:449: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:450: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:451: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:456: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:457: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:458: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:459: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:464: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:465: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:466: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:467: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:468: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:473: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:474: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:475: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:476: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:477: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:478: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:484: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:485: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:486: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:487: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:492: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:493: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:494: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:495: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:500: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:501: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:502: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:503: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:504: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:509: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:510: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:511: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:512: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:513: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:519: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:520: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:521: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:522: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:527: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:528: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:529: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:530: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:535: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:536: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:537: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:538: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:539: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:544: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:545: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:546: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:547: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:548: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:549: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:555: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:556: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:557: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:558: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:563: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:564: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:565: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:566: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:572: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:573: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:574: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:575: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:576: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:581: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:582: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:583: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:584: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:585: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:586: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:590: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:591: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:592: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_bit_ctrl.sv:593: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:214: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:216: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:218: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:220: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:227: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:228: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:229: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:230: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:231: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:232: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:233: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:234: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:238: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:239: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:240: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:241: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:242: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:243: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:244: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:245: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:250: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:252: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:254: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:256: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:257: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:258: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:259: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:267: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:268: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:272: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:273: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:277: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:278: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:282: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:283: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:286: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:294: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:295: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:299: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:300: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:303: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:308: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:309: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:316: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:317: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:321: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:322: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:323: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:324: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:332: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:333: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:337: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:338: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:341: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:343: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:351: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:352: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:356: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:357: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:360: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:364: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:366: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:368: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:371: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:376: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:377: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:380: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master_byte_ctrl.sv:384: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:285: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:286: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:287: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:288: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:292: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:293: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:294: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:295: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:299: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:300: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:301: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:302: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:308: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:310: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] i2c_master.sv:312: delay control is not supported for synthesis
Importing module i2c_master.
Importing module i2c_master_byte_ctrl.
Importing module i2c_master_bit_ctrl.

4.3.1. Analyzing design hierarchy..
Top module:  \i2c_master
Used module:     \i2c_master_byte_ctrl
Used module:         \i2c_master_bit_ctrl

4.3.2. Analyzing design hierarchy..
Top module:  \i2c_master
Used module:     \i2c_master_byte_ctrl
Used module:         \i2c_master_bit_ctrl
Removed 0 unused modules.

yosys> proc

4.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

4.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

4.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

4.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

4.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

4.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

4.4.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

4.4.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

4.4.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

4.4.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

4.4.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

4.4.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

4.4.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master_bit_ctrl.
<suppressed ~12 debug messages>
Optimizing module i2c_master_byte_ctrl.
<suppressed ~22 debug messages>
Optimizing module i2c_master.
<suppressed ~5 debug messages>

yosys> bmuxmap

4.5. Executing BMUXMAP pass.

yosys> demuxmap

4.6. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> flatten

4.7. Executing FLATTEN pass (flatten design).
Deleting now unused module i2c_master_bit_ctrl.
Deleting now unused module i2c_master_byte_ctrl.
<suppressed ~2 debug messages>

yosys> bmuxmap

4.8. Executing BMUXMAP pass.

yosys> demuxmap

4.9. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> tribuf -logic

4.10. Executing TRIBUF pass.

yosys> deminout

4.11. Executing DEMINOUT pass (demote inout ports to input or output).
Demoting inout port i2c_master.wb_ack_o to output.

yosys> opt_expr

4.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.

yosys> opt_clean

4.13. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..
Removed 8 unused cells and 228 unused wires.
<suppressed ~71 debug messages>

yosys> check

4.14. Executing CHECK pass (checking for obvious problems).
Checking module i2c_master...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

4.15. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

4.15.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.
<suppressed ~4 debug messages>

yosys> opt_merge -nomux

4.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

yosys> opt_muxtree

4.15.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \i2c_master..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~40 debug messages>

yosys> opt_reduce

4.15.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \i2c_master.
    New ctrl vector for $pmux cell $flatten\byte_controller.$verific$Select_152$i2c_master_byte_ctrl.sv:387$448: { $flatten\byte_controller.$verific$n579$216 $flatten\byte_controller.$verific$n580$217 }
    New ctrl vector for $pmux cell $flatten\byte_controller.$verific$Select_154$i2c_master_byte_ctrl.sv:387$450: { $flatten\byte_controller.$verific$n582$219 $flatten\byte_controller.$verific$n583$220 $flatten\byte_controller.$verific$n584$221 }
    New ctrl vector for $pmux cell $flatten\byte_controller.$verific$Select_159$i2c_master_byte_ctrl.sv:387$455: { $flatten\byte_controller.$verific$n584$221 $flatten\byte_controller.$verific$n585$222 }
    New ctrl vector for $pmux cell $flatten\byte_controller.$verific$select_149$i2c_master_byte_ctrl.sv:387$445: { $flatten\byte_controller.$verific$n579$216 $flatten\byte_controller.$verific$n580$217 $flatten\byte_controller.$verific$n581$218 $flatten\byte_controller.$verific$n582$219 $flatten\byte_controller.$verific$n583$220 $flatten\byte_controller.$verific$n584$221 $flatten\byte_controller.$verific$n585$222 }
    New ctrl vector for $pmux cell $flatten\byte_controller.$verific$select_155$i2c_master_byte_ctrl.sv:387$451: { $flatten\byte_controller.$verific$n582$219 $auto$opt_reduce.cc:134:opt_pmux$832 }
    New ctrl vector for $pmux cell $flatten\byte_controller.\bit_controller.$verific$Select_303$i2c_master_bit_ctrl.sv:596$794: { $flatten\byte_controller.\bit_controller.$verific$n1084$566 $flatten\byte_controller.\bit_controller.$verific$n1085$567 }
    New ctrl vector for $pmux cell $flatten\byte_controller.\bit_controller.$verific$Select_308$i2c_master_bit_ctrl.sv:596$799: { $flatten\byte_controller.\bit_controller.$verific$n1088$570 $flatten\byte_controller.\bit_controller.$verific$n1089$571 $flatten\byte_controller.\bit_controller.$verific$n1091$573 }
    New ctrl vector for $pmux cell $flatten\byte_controller.\bit_controller.$verific$Select_311$i2c_master_bit_ctrl.sv:596$802: { $flatten\byte_controller.\bit_controller.$verific$n1054$555 $auto$opt_reduce.cc:134:opt_pmux$836 $auto$opt_reduce.cc:134:opt_pmux$834 }
    New ctrl vector for $pmux cell $flatten\byte_controller.\bit_controller.$verific$select_181$i2c_master_bit_ctrl.sv:430$763: { $flatten\byte_controller.\bit_controller.$verific$n600$538 $flatten\byte_controller.\bit_controller.$verific$n439$530 $flatten\byte_controller.\bit_controller.$verific$n602$539 $flatten\byte_controller.\bit_controller.$verific$n603$540 }
    New ctrl vector for $pmux cell $flatten\byte_controller.\bit_controller.$verific$select_299$i2c_master_bit_ctrl.sv:596$790: { $flatten\byte_controller.\bit_controller.$verific$n1046$547 $flatten\byte_controller.\bit_controller.$verific$n1047$548 $flatten\byte_controller.\bit_controller.$verific$n1048$549 $flatten\byte_controller.\bit_controller.$verific$n1049$550 $flatten\byte_controller.\bit_controller.$verific$n1050$551 $flatten\byte_controller.\bit_controller.$verific$n1052$553 $flatten\byte_controller.\bit_controller.$verific$n1053$554 $flatten\byte_controller.\bit_controller.$verific$n1054$555 $flatten\byte_controller.\bit_controller.$verific$n1056$557 $flatten\byte_controller.\bit_controller.$verific$n1057$558 $flatten\byte_controller.\bit_controller.$verific$n1058$559 $flatten\byte_controller.\bit_controller.$verific$n1060$561 $flatten\byte_controller.\bit_controller.$verific$n1061$562 $flatten\byte_controller.\bit_controller.$verific$n1062$563 }
  Optimizing cells in module \i2c_master.
Performed a total of 10 changes.

yosys> opt_merge

4.15.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_dff -nodffe -nosdff

4.15.6. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $verific$wb_inta_o_reg$i2c_master.sv:312$183 ($aldff) from module i2c_master.
Removing never-active async load on $verific$wb_dat_o_reg$i2c_master.sv:189$73 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $verific$txr_reg$i2c_master.sv:217$87 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $verific$tip_reg$i2c_master.sv:303$178 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $verific$rxack_reg$i2c_master.sv:303$177 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $verific$prer_reg$i2c_master.sv:217$85 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $verific$irq_flag_reg$i2c_master.sv:303$179 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $verific$ctr_reg$i2c_master.sv:217$86 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $verific$cr_reg$i2c_master.sv:237$97 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $verific$al_reg$i2c_master.sv:303$176 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $flatten\byte_controller.\bit_controller.$verific$sto_condition_reg$i2c_master_bit_ctrl.sv:338$737 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $flatten\byte_controller.\bit_controller.$verific$sta_condition_reg$i2c_master_bit_ctrl.sv:338$736 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $flatten\byte_controller.\bit_controller.$verific$slave_wait_reg$i2c_master_bit_ctrl.sv:213$656 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $flatten\byte_controller.\bit_controller.$verific$sda_oen_reg$i2c_master_bit_ctrl.sv:597$816 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $flatten\byte_controller.\bit_controller.$verific$scl_oen_reg$i2c_master_bit_ctrl.sv:597$815 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $flatten\byte_controller.\bit_controller.$verific$sSDA_reg$i2c_master_bit_ctrl.sv:317$723 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $flatten\byte_controller.\bit_controller.$verific$sSCL_reg$i2c_master_bit_ctrl.sv:317$722 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $flatten\byte_controller.\bit_controller.$verific$filter_cnt_reg$i2c_master_bit_ctrl.sv:271$694 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $flatten\byte_controller.\bit_controller.$verific$fSDA_reg$i2c_master_bit_ctrl.sv:289$703 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $flatten\byte_controller.\bit_controller.$verific$fSCL_reg$i2c_master_bit_ctrl.sv:289$702 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $flatten\byte_controller.\bit_controller.$verific$dSDA_reg$i2c_master_bit_ctrl.sv:317$725 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $flatten\byte_controller.\bit_controller.$verific$dSCL_reg$i2c_master_bit_ctrl.sv:317$724 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $flatten\byte_controller.\bit_controller.$verific$cnt_reg$i2c_master_bit_ctrl.sv:241$675 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $flatten\byte_controller.\bit_controller.$verific$cmd_ack_reg$i2c_master_bit_ctrl.sv:597$814 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $flatten\byte_controller.\bit_controller.$verific$clk_en_reg$i2c_master_bit_ctrl.sv:241$676 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $flatten\byte_controller.\bit_controller.$verific$c_state_reg$i2c_master_bit_ctrl.sv:597$813 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $flatten\byte_controller.\bit_controller.$verific$cSDA_reg$i2c_master_bit_ctrl.sv:263$683 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $flatten\byte_controller.\bit_controller.$verific$cSCL_reg$i2c_master_bit_ctrl.sv:263$682 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $flatten\byte_controller.\bit_controller.$verific$busy_reg$i2c_master_bit_ctrl.sv:345$743 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $flatten\byte_controller.\bit_controller.$verific$al_reg$i2c_master_bit_ctrl.sv:367$749 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $flatten\byte_controller.$verific$sr_reg$i2c_master_byte_ctrl.sv:388$465 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $flatten\byte_controller.$verific$shift_reg$i2c_master_byte_ctrl.sv:388$468 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $flatten\byte_controller.$verific$ld_reg$i2c_master_byte_ctrl.sv:388$469 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $flatten\byte_controller.$verific$dcnt_reg$i2c_master_byte_ctrl.sv:220$369 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $flatten\byte_controller.$verific$core_txd_reg$i2c_master_byte_ctrl.sv:388$467 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $flatten\byte_controller.$verific$core_cmd_reg$i2c_master_byte_ctrl.sv:388$466 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $flatten\byte_controller.$verific$cmd_ack_reg$i2c_master_byte_ctrl.sv:388$470 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $flatten\byte_controller.$verific$c_state_reg$i2c_master_byte_ctrl.sv:388$471 ($aldff) from module i2c_master.
Changing const-value async load to async reset on $flatten\byte_controller.$verific$ack_out_reg$i2c_master_byte_ctrl.sv:388$472 ($aldff) from module i2c_master.
Setting constant 0-bit at position 0 on $flatten\byte_controller.\bit_controller.$verific$al_reg$i2c_master_bit_ctrl.sv:367$749 ($adff) from module i2c_master.

yosys> opt_clean

4.15.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..
Removed 9 unused cells and 13 unused wires.
<suppressed ~11 debug messages>

yosys> opt_expr

4.15.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.
<suppressed ~3 debug messages>

4.15.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

4.15.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \i2c_master..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~41 debug messages>

yosys> opt_reduce

4.15.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \i2c_master.
Performed a total of 0 changes.

yosys> opt_merge

4.15.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

4.15.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

4.15.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

4.15.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.

4.15.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

4.15.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \i2c_master..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~41 debug messages>

yosys> opt_reduce

4.15.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \i2c_master.
Performed a total of 0 changes.

yosys> opt_merge

4.15.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

4.15.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

4.15.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..

yosys> opt_expr

4.15.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.

4.15.23. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

4.16. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

4.16.1. Executing FSM_DETECT pass (finding FSMs in design).
Found FSM state register i2c_master.byte_controller.bit_controller.c_state.
Not marking i2c_master.ctr as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking i2c_master.prer as FSM state register:
    Users of register don't seem to benefit from recoding.

yosys> fsm_extract

4.16.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\byte_controller.bit_controller.c_state' from module `\i2c_master'.
  found $adff cell for state register: $flatten\byte_controller.\bit_controller.$verific$c_state_reg$i2c_master_bit_ctrl.sv:597$813
  root of input selection tree: $flatten\byte_controller.\bit_controller.$verific$n1119$640
  found reset state: 18'000000000000000000 (from async reset)
  found ctrl input: \wb_rst_i
  found ctrl input: \byte_controller.bit_controller.clk_en
  found ctrl input: $flatten\byte_controller.\bit_controller.$verific$n1062$563
  found ctrl input: $flatten\byte_controller.\bit_controller.$verific$n1061$562
  found ctrl input: $flatten\byte_controller.\bit_controller.$verific$n1060$561
  found ctrl input: $flatten\byte_controller.\bit_controller.$verific$n1058$559
  found ctrl input: $flatten\byte_controller.\bit_controller.$verific$n1057$558
  found ctrl input: $flatten\byte_controller.\bit_controller.$verific$n1056$557
  found ctrl input: $flatten\byte_controller.\bit_controller.$verific$n1054$555
  found ctrl input: $flatten\byte_controller.\bit_controller.$verific$n1053$554
  found ctrl input: $flatten\byte_controller.\bit_controller.$verific$n1052$553
  found ctrl input: $flatten\byte_controller.\bit_controller.$verific$n1050$551
  found ctrl input: $flatten\byte_controller.\bit_controller.$verific$n1049$550
  found ctrl input: $flatten\byte_controller.\bit_controller.$verific$n1048$549
  found ctrl input: $flatten\byte_controller.\bit_controller.$verific$n1047$548
  found ctrl input: $flatten\byte_controller.\bit_controller.$verific$n1046$547
  found state code: 18'010000000000000000
  found state code: 18'001000000000000000
  found state code: 18'000100000000000000
  found state code: 18'000001000000000000
  found state code: 18'000000100000000000
  found state code: 18'000000010000000000
  found state code: 18'000000000100000000
  found state code: 18'000000000010000000
  found state code: 18'000000000001000000
  found state code: 18'000000000000010000
  found state code: 18'000000000000001000
  found state code: 18'000000000000000100
  found state code: 18'000000000000000010
  found ctrl input: $flatten\byte_controller.\bit_controller.$verific$n603$540
  found ctrl input: $flatten\byte_controller.\bit_controller.$verific$n602$539
  found ctrl input: $flatten\byte_controller.\bit_controller.$verific$n439$530
  found ctrl input: $flatten\byte_controller.\bit_controller.$verific$n600$538
  found state code: 18'000000001000000000
  found state code: 18'000010000000000000
  found state code: 18'000000000000100000
  found state code: 18'000000000000000001
  found ctrl output: $flatten\byte_controller.\bit_controller.$verific$n1063$564
  found ctrl output: $flatten\byte_controller.\bit_controller.$verific$n1062$563
  found ctrl output: $flatten\byte_controller.\bit_controller.$verific$n1061$562
  found ctrl output: $flatten\byte_controller.\bit_controller.$verific$n1060$561
  found ctrl output: $flatten\byte_controller.\bit_controller.$verific$n1059$560
  found ctrl output: $flatten\byte_controller.\bit_controller.$verific$n1058$559
  found ctrl output: $flatten\byte_controller.\bit_controller.$verific$n1057$558
  found ctrl output: $flatten\byte_controller.\bit_controller.$verific$n1056$557
  found ctrl output: $flatten\byte_controller.\bit_controller.$verific$n1055$556
  found ctrl output: $flatten\byte_controller.\bit_controller.$verific$n1054$555
  found ctrl output: $flatten\byte_controller.\bit_controller.$verific$n1053$554
  found ctrl output: $flatten\byte_controller.\bit_controller.$verific$n1052$553
  found ctrl output: $flatten\byte_controller.\bit_controller.$verific$n1051$552
  found ctrl output: $flatten\byte_controller.\bit_controller.$verific$n1050$551
  found ctrl output: $flatten\byte_controller.\bit_controller.$verific$n1049$550
  found ctrl output: $flatten\byte_controller.\bit_controller.$verific$n1048$549
  found ctrl output: $flatten\byte_controller.\bit_controller.$verific$n1047$548
  found ctrl output: $flatten\byte_controller.\bit_controller.$verific$n1046$547
  ctrl inputs: { $flatten\byte_controller.\bit_controller.$verific$n439$530 $flatten\byte_controller.\bit_controller.$verific$n600$538 $flatten\byte_controller.\bit_controller.$verific$n602$539 $flatten\byte_controller.\bit_controller.$verific$n603$540 \byte_controller.bit_controller.clk_en \wb_rst_i }
  ctrl outputs: { $flatten\byte_controller.\bit_controller.$verific$n1046$547 $flatten\byte_controller.\bit_controller.$verific$n1047$548 $flatten\byte_controller.\bit_controller.$verific$n1048$549 $flatten\byte_controller.\bit_controller.$verific$n1049$550 $flatten\byte_controller.\bit_controller.$verific$n1050$551 $flatten\byte_controller.\bit_controller.$verific$n1051$552 $flatten\byte_controller.\bit_controller.$verific$n1052$553 $flatten\byte_controller.\bit_controller.$verific$n1053$554 $flatten\byte_controller.\bit_controller.$verific$n1054$555 $flatten\byte_controller.\bit_controller.$verific$n1055$556 $flatten\byte_controller.\bit_controller.$verific$n1056$557 $flatten\byte_controller.\bit_controller.$verific$n1057$558 $flatten\byte_controller.\bit_controller.$verific$n1058$559 $flatten\byte_controller.\bit_controller.$verific$n1059$560 $flatten\byte_controller.\bit_controller.$verific$n1060$561 $flatten\byte_controller.\bit_controller.$verific$n1061$562 $flatten\byte_controller.\bit_controller.$verific$n1062$563 $flatten\byte_controller.\bit_controller.$verific$n1063$564 $flatten\byte_controller.\bit_controller.$verific$n1119$640 }
  transition: 18'000000000000000000 6'----00 -> 18'000000000000000000 36'100000000000000000000000000000000000
  transition: 18'000000000000000000 6'000010 -> 18'000000000000000000 36'100000000000000000000000000000000000
  transition: 18'000000000000000000 6'-1--10 -> 18'000000000000000001 36'100000000000000000000000000000000001
  transition: 18'000000000000000000 6'1---10 -> 18'000000000000100000 36'100000000000000000000000000000100000
  transition: 18'000000000000000000 6'--1-10 -> 18'000010000000000000 36'100000000000000000000010000000000000
  transition: 18'000000000000000000 6'---110 -> 18'000000001000000000 36'100000000000000000000000001000000000
  transition: 18'000000000000000000 6'-----1 -> 18'000000000000000000 36'100000000000000000000000000000000000
  transition: 18'010000000000000000 6'----00 -> 18'010000000000000000 36'000000000000000001010000000000000000
  transition: 18'010000000000000000 6'----10 -> 18'000000000000000000 36'000000000000000001000000000000000000
  transition: 18'010000000000000000 6'-----1 -> 18'000000000000000000 36'000000000000000001000000000000000000
  transition: 18'001000000000000000 6'----00 -> 18'001000000000000000 36'000000000000000010001000000000000000
  transition: 18'001000000000000000 6'----10 -> 18'010000000000000000 36'000000000000000010010000000000000000
  transition: 18'001000000000000000 6'-----1 -> 18'000000000000000000 36'000000000000000010000000000000000000
  transition: 18'000100000000000000 6'----00 -> 18'000100000000000000 36'000000000000000100000100000000000000
  transition: 18'000100000000000000 6'----10 -> 18'001000000000000000 36'000000000000000100001000000000000000
  transition: 18'000100000000000000 6'-----1 -> 18'000000000000000000 36'000000000000000100000000000000000000
  transition: 18'000010000000000000 6'----00 -> 18'000010000000000000 36'000000000000001000000010000000000000
  transition: 18'000010000000000000 6'----10 -> 18'000100000000000000 36'000000000000001000000100000000000000
  transition: 18'000010000000000000 6'-----1 -> 18'000000000000000000 36'000000000000001000000000000000000000
  transition: 18'000001000000000000 6'----00 -> 18'000001000000000000 36'000000000000010000000001000000000000
  transition: 18'000001000000000000 6'----10 -> 18'000000000000000000 36'000000000000010000000000000000000000
  transition: 18'000001000000000000 6'-----1 -> 18'000000000000000000 36'000000000000010000000000000000000000
  transition: 18'000000100000000000 6'----00 -> 18'000000100000000000 36'000000000000100000000000100000000000
  transition: 18'000000100000000000 6'----10 -> 18'000001000000000000 36'000000000000100000000001000000000000
  transition: 18'000000100000000000 6'-----1 -> 18'000000000000000000 36'000000000000100000000000000000000000
  transition: 18'000000010000000000 6'----00 -> 18'000000010000000000 36'000000000001000000000000010000000000
  transition: 18'000000010000000000 6'----10 -> 18'000000100000000000 36'000000000001000000000000100000000000
  transition: 18'000000010000000000 6'-----1 -> 18'000000000000000000 36'000000000001000000000000000000000000
  transition: 18'000000001000000000 6'----00 -> 18'000000001000000000 36'000000000010000000000000001000000000
  transition: 18'000000001000000000 6'----10 -> 18'000000010000000000 36'000000000010000000000000010000000000
  transition: 18'000000001000000000 6'-----1 -> 18'000000000000000000 36'000000000010000000000000000000000000
  transition: 18'000000000100000000 6'----00 -> 18'000000000100000000 36'000000000100000000000000000100000000
  transition: 18'000000000100000000 6'----10 -> 18'000000000000000000 36'000000000100000000000000000000000000
  transition: 18'000000000100000000 6'-----1 -> 18'000000000000000000 36'000000000100000000000000000000000000
  transition: 18'000000000010000000 6'----00 -> 18'000000000010000000 36'000000001000000000000000000010000000
  transition: 18'000000000010000000 6'----10 -> 18'000000000100000000 36'000000001000000000000000000100000000
  transition: 18'000000000010000000 6'-----1 -> 18'000000000000000000 36'000000001000000000000000000000000000
  transition: 18'000000000001000000 6'----00 -> 18'000000000001000000 36'000000010000000000000000000001000000
  transition: 18'000000000001000000 6'----10 -> 18'000000000010000000 36'000000010000000000000000000010000000
  transition: 18'000000000001000000 6'-----1 -> 18'000000000000000000 36'000000010000000000000000000000000000
  transition: 18'000000000000100000 6'----00 -> 18'000000000000100000 36'000000100000000000000000000000100000
  transition: 18'000000000000100000 6'----10 -> 18'000000000001000000 36'000000100000000000000000000001000000
  transition: 18'000000000000100000 6'-----1 -> 18'000000000000000000 36'000000100000000000000000000000000000
  transition: 18'000000000000010000 6'----00 -> 18'000000000000010000 36'000001000000000000000000000000010000
  transition: 18'000000000000010000 6'----10 -> 18'000000000000000000 36'000001000000000000000000000000000000
  transition: 18'000000000000010000 6'-----1 -> 18'000000000000000000 36'000001000000000000000000000000000000
  transition: 18'000000000000001000 6'----00 -> 18'000000000000001000 36'000010000000000000000000000000001000
  transition: 18'000000000000001000 6'----10 -> 18'000000000000010000 36'000010000000000000000000000000010000
  transition: 18'000000000000001000 6'-----1 -> 18'000000000000000000 36'000010000000000000000000000000000000
  transition: 18'000000000000000100 6'----00 -> 18'000000000000000100 36'000100000000000000000000000000000100
  transition: 18'000000000000000100 6'----10 -> 18'000000000000001000 36'000100000000000000000000000000001000
  transition: 18'000000000000000100 6'-----1 -> 18'000000000000000000 36'000100000000000000000000000000000000
  transition: 18'000000000000000010 6'----00 -> 18'000000000000000010 36'001000000000000000000000000000000010
  transition: 18'000000000000000010 6'----10 -> 18'000000000000000100 36'001000000000000000000000000000000100
  transition: 18'000000000000000010 6'-----1 -> 18'000000000000000000 36'001000000000000000000000000000000000
  transition: 18'000000000000000001 6'----00 -> 18'000000000000000001 36'010000000000000000000000000000000001
  transition: 18'000000000000000001 6'----10 -> 18'000000000000000010 36'010000000000000000000000000000000010
  transition: 18'000000000000000001 6'-----1 -> 18'000000000000000000 36'010000000000000000000000000000000000

yosys> fsm_opt

4.16.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\byte_controller.bit_controller.c_state$837' from module `\i2c_master'.

yosys> opt_clean

4.16.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..
Removed 23 unused cells and 23 unused wires.
<suppressed ~24 debug messages>

yosys> fsm_opt

4.16.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\byte_controller.bit_controller.c_state$837' from module `\i2c_master'.
  Removing unused output signal $flatten\byte_controller.\bit_controller.$verific$n1119$640 [0].
  Removing unused output signal $flatten\byte_controller.\bit_controller.$verific$n1119$640 [1].
  Removing unused output signal $flatten\byte_controller.\bit_controller.$verific$n1119$640 [2].
  Removing unused output signal $flatten\byte_controller.\bit_controller.$verific$n1119$640 [3].
  Removing unused output signal $flatten\byte_controller.\bit_controller.$verific$n1119$640 [4].
  Removing unused output signal $flatten\byte_controller.\bit_controller.$verific$n1119$640 [5].
  Removing unused output signal $flatten\byte_controller.\bit_controller.$verific$n1119$640 [6].
  Removing unused output signal $flatten\byte_controller.\bit_controller.$verific$n1119$640 [7].
  Removing unused output signal $flatten\byte_controller.\bit_controller.$verific$n1119$640 [8].
  Removing unused output signal $flatten\byte_controller.\bit_controller.$verific$n1119$640 [9].
  Removing unused output signal $flatten\byte_controller.\bit_controller.$verific$n1119$640 [10].
  Removing unused output signal $flatten\byte_controller.\bit_controller.$verific$n1119$640 [11].
  Removing unused output signal $flatten\byte_controller.\bit_controller.$verific$n1119$640 [12].
  Removing unused output signal $flatten\byte_controller.\bit_controller.$verific$n1119$640 [13].
  Removing unused output signal $flatten\byte_controller.\bit_controller.$verific$n1119$640 [14].
  Removing unused output signal $flatten\byte_controller.\bit_controller.$verific$n1119$640 [15].
  Removing unused output signal $flatten\byte_controller.\bit_controller.$verific$n1119$640 [16].
  Removing unused output signal $flatten\byte_controller.\bit_controller.$verific$n1119$640 [17].

yosys> fsm_recode -encoding binary

4.16.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\byte_controller.bit_controller.c_state$837' from module `\i2c_master' using `auto' encoding:
  mapping auto encoding to `binary` for this FSM.
  000000000000000000 -> 00000
  010000000000000000 -> 00001
  001000000000000000 -> 00010
  000100000000000000 -> 00011
  000010000000000000 -> 00100
  000001000000000000 -> 00101
  000000100000000000 -> 00110
  000000010000000000 -> 00111
  000000001000000000 -> 01000
  000000000100000000 -> 01001
  000000000010000000 -> 01010
  000000000001000000 -> 01011
  000000000000100000 -> 01100
  000000000000010000 -> 01101
  000000000000001000 -> 01110
  000000000000000100 -> 01111
  000000000000000010 -> 10000
  000000000000000001 -> 10001

yosys> fsm_info

4.16.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\byte_controller.bit_controller.c_state$837' from module `i2c_master':
-------------------------------------

  Information on FSM $fsm$\byte_controller.bit_controller.c_state$837 (\byte_controller.bit_controller.c_state):

  Number of input signals:    6
  Number of output signals:  18
  Number of state bits:       5

  Input signals:
    0: \wb_rst_i
    1: \byte_controller.bit_controller.clk_en
    2: $flatten\byte_controller.\bit_controller.$verific$n603$540
    3: $flatten\byte_controller.\bit_controller.$verific$n602$539
    4: $flatten\byte_controller.\bit_controller.$verific$n600$538
    5: $flatten\byte_controller.\bit_controller.$verific$n439$530

  Output signals:
    0: $flatten\byte_controller.\bit_controller.$verific$n1063$564
    1: $flatten\byte_controller.\bit_controller.$verific$n1062$563
    2: $flatten\byte_controller.\bit_controller.$verific$n1061$562
    3: $flatten\byte_controller.\bit_controller.$verific$n1060$561
    4: $flatten\byte_controller.\bit_controller.$verific$n1059$560
    5: $flatten\byte_controller.\bit_controller.$verific$n1058$559
    6: $flatten\byte_controller.\bit_controller.$verific$n1057$558
    7: $flatten\byte_controller.\bit_controller.$verific$n1056$557
    8: $flatten\byte_controller.\bit_controller.$verific$n1055$556
    9: $flatten\byte_controller.\bit_controller.$verific$n1054$555
   10: $flatten\byte_controller.\bit_controller.$verific$n1053$554
   11: $flatten\byte_controller.\bit_controller.$verific$n1052$553
   12: $flatten\byte_controller.\bit_controller.$verific$n1051$552
   13: $flatten\byte_controller.\bit_controller.$verific$n1050$551
   14: $flatten\byte_controller.\bit_controller.$verific$n1049$550
   15: $flatten\byte_controller.\bit_controller.$verific$n1048$549
   16: $flatten\byte_controller.\bit_controller.$verific$n1047$548
   17: $flatten\byte_controller.\bit_controller.$verific$n1046$547

  State encoding:
    0:    5'00000  <RESET STATE>
    1:    5'00001
    2:    5'00010
    3:    5'00011
    4:    5'00100
    5:    5'00101
    6:    5'00110
    7:    5'00111
    8:    5'01000
    9:    5'01001
   10:    5'01010
   11:    5'01011
   12:    5'01100
   13:    5'01101
   14:    5'01110
   15:    5'01111
   16:    5'10000
   17:    5'10001

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 6'----00   ->     0 18'100000000000000000
      1:     0 6'000010   ->     0 18'100000000000000000
      2:     0 6'-----1   ->     0 18'100000000000000000
      3:     0 6'--1-10   ->     4 18'100000000000000000
      4:     0 6'---110   ->     8 18'100000000000000000
      5:     0 6'1---10   ->    12 18'100000000000000000
      6:     0 6'-1--10   ->    17 18'100000000000000000
      7:     1 6'----10   ->     0 18'000000000000000001
      8:     1 6'-----1   ->     0 18'000000000000000001
      9:     1 6'----00   ->     1 18'000000000000000001
     10:     2 6'-----1   ->     0 18'000000000000000010
     11:     2 6'----10   ->     1 18'000000000000000010
     12:     2 6'----00   ->     2 18'000000000000000010
     13:     3 6'-----1   ->     0 18'000000000000000100
     14:     3 6'----10   ->     2 18'000000000000000100
     15:     3 6'----00   ->     3 18'000000000000000100
     16:     4 6'-----1   ->     0 18'000000000000001000
     17:     4 6'----10   ->     3 18'000000000000001000
     18:     4 6'----00   ->     4 18'000000000000001000
     19:     5 6'----10   ->     0 18'000000000000010000
     20:     5 6'-----1   ->     0 18'000000000000010000
     21:     5 6'----00   ->     5 18'000000000000010000
     22:     6 6'-----1   ->     0 18'000000000000100000
     23:     6 6'----10   ->     5 18'000000000000100000
     24:     6 6'----00   ->     6 18'000000000000100000
     25:     7 6'-----1   ->     0 18'000000000001000000
     26:     7 6'----10   ->     6 18'000000000001000000
     27:     7 6'----00   ->     7 18'000000000001000000
     28:     8 6'-----1   ->     0 18'000000000010000000
     29:     8 6'----10   ->     7 18'000000000010000000
     30:     8 6'----00   ->     8 18'000000000010000000
     31:     9 6'----10   ->     0 18'000000000100000000
     32:     9 6'-----1   ->     0 18'000000000100000000
     33:     9 6'----00   ->     9 18'000000000100000000
     34:    10 6'-----1   ->     0 18'000000001000000000
     35:    10 6'----10   ->     9 18'000000001000000000
     36:    10 6'----00   ->    10 18'000000001000000000
     37:    11 6'-----1   ->     0 18'000000010000000000
     38:    11 6'----10   ->    10 18'000000010000000000
     39:    11 6'----00   ->    11 18'000000010000000000
     40:    12 6'-----1   ->     0 18'000000100000000000
     41:    12 6'----10   ->    11 18'000000100000000000
     42:    12 6'----00   ->    12 18'000000100000000000
     43:    13 6'----10   ->     0 18'000001000000000000
     44:    13 6'-----1   ->     0 18'000001000000000000
     45:    13 6'----00   ->    13 18'000001000000000000
     46:    14 6'-----1   ->     0 18'000010000000000000
     47:    14 6'----10   ->    13 18'000010000000000000
     48:    14 6'----00   ->    14 18'000010000000000000
     49:    15 6'-----1   ->     0 18'000100000000000000
     50:    15 6'----10   ->    14 18'000100000000000000
     51:    15 6'----00   ->    15 18'000100000000000000
     52:    16 6'-----1   ->     0 18'001000000000000000
     53:    16 6'----10   ->    15 18'001000000000000000
     54:    16 6'----00   ->    16 18'001000000000000000
     55:    17 6'-----1   ->     0 18'010000000000000000
     56:    17 6'----10   ->    16 18'010000000000000000
     57:    17 6'----00   ->    17 18'010000000000000000

-------------------------------------

yosys> fsm_map

4.16.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\byte_controller.bit_controller.c_state$837' from module `\i2c_master'.

yosys> opt -sat -nosdff

4.17. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

4.17.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.
<suppressed ~20 debug messages>

yosys> opt_merge -nomux

4.17.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
<suppressed ~90 debug messages>
Removed a total of 30 cells.

yosys> opt_muxtree

4.17.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \i2c_master..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~41 debug messages>

yosys> opt_reduce

4.17.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \i2c_master.
Performed a total of 0 changes.

yosys> opt_merge

4.17.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
Removed a total of 0 cells.

yosys> opt_dff -sat -nosdff

4.17.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $verific$txr_reg$i2c_master.sv:217$87 ($adff) from module i2c_master (D = $verific$n232$51, Q = \txr).
Adding EN signal on $verific$prer_reg$i2c_master.sv:217$85 ($adff) from module i2c_master (D = 16'0000000000000000, Q = \prer).
Adding EN signal on $verific$ctr_reg$i2c_master.sv:217$86 ($adff) from module i2c_master (D = 8'10000000, Q = \ctr).
Adding EN signal on $verific$cr_reg$i2c_master.sv:237$97 ($adff) from module i2c_master (D = $verific$n338$56 [3], Q = \cr [3]).
Adding EN signal on $verific$cr_reg$i2c_master.sv:237$97 ($adff) from module i2c_master (D = $verific$n338$56 [7:4], Q = \cr [7:4]).
Adding EN signal on $verific$cr_reg$i2c_master.sv:237$97 ($adff) from module i2c_master (D = $verific$n338$56 [2:0], Q = \cr [2:0]).
Adding EN signal on $flatten\byte_controller.\bit_controller.$verific$sda_oen_reg$i2c_master_bit_ctrl.sv:597$816 ($adff) from module i2c_master (D = $flatten\byte_controller.\bit_controller.$verific$n1140$584, Q = \byte_controller.bit_controller.sda_oen).
Adding EN signal on $flatten\byte_controller.\bit_controller.$verific$scl_oen_reg$i2c_master_bit_ctrl.sv:597$815 ($adff) from module i2c_master (D = $flatten\byte_controller.\bit_controller.$verific$n1139$583, Q = \byte_controller.bit_controller.scl_oen).
Adding EN signal on $flatten\byte_controller.\bit_controller.$verific$fSDA_reg$i2c_master_bit_ctrl.sv:289$703 ($adff) from module i2c_master (D = $flatten\byte_controller.\bit_controller.$verific$n367$612, Q = \byte_controller.bit_controller.fSDA).
Adding EN signal on $flatten\byte_controller.\bit_controller.$verific$fSCL_reg$i2c_master_bit_ctrl.sv:289$702 ($adff) from module i2c_master (D = $flatten\byte_controller.\bit_controller.$verific$n363$611, Q = \byte_controller.bit_controller.fSCL).
Adding EN signal on $flatten\byte_controller.\bit_controller.$verific$dout_reg$i2c_master_bit_ctrl.sv:373$753 ($dff) from module i2c_master (D = \byte_controller.bit_controller.sSDA, Q = \byte_controller.bit_controller.dout).
Adding EN signal on $flatten\byte_controller.\bit_controller.$verific$cnt_reg$i2c_master_bit_ctrl.sv:241$675 ($adff) from module i2c_master (D = $flatten\byte_controller.\bit_controller.$verific$n137$592, Q = \byte_controller.bit_controller.cnt).
Adding EN signal on $flatten\byte_controller.$verific$dcnt_reg$i2c_master_byte_ctrl.sv:220$369 ($adff) from module i2c_master (D = $flatten\byte_controller.$verific$n59$244, Q = \byte_controller.dcnt).
Adding EN signal on $flatten\byte_controller.$verific$core_cmd_reg$i2c_master_byte_ctrl.sv:388$466 ($adff) from module i2c_master (D = $flatten\byte_controller.$verific$n626$313, Q = \byte_controller.core_cmd).
Adding EN signal on $flatten\byte_controller.$verific$c_state_reg$i2c_master_byte_ctrl.sv:388$471 ($adff) from module i2c_master (D = $flatten\byte_controller.$verific$n635$314, Q = \byte_controller.c_state).
Adding EN signal on $flatten\byte_controller.$verific$ack_out_reg$i2c_master_byte_ctrl.sv:388$472 ($adff) from module i2c_master (D = $flatten\byte_controller.$verific$n642$237, Q = \byte_controller.ack_out).
Setting constant 0-bit at position 0 on $verific$al_reg$i2c_master.sv:303$176 ($adff) from module i2c_master.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$1058 ($adffe) from module i2c_master.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$1058 ($adffe) from module i2c_master.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$1058 ($adffe) from module i2c_master.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$1058 ($adffe) from module i2c_master.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$1058 ($adffe) from module i2c_master.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$1058 ($adffe) from module i2c_master.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$1058 ($adffe) from module i2c_master.
Setting constant 1-bit at position 7 on $auto$ff.cc:262:slice$1058 ($adffe) from module i2c_master.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$1057 ($adffe) from module i2c_master.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$1057 ($adffe) from module i2c_master.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$1057 ($adffe) from module i2c_master.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$1057 ($adffe) from module i2c_master.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$1057 ($adffe) from module i2c_master.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$1057 ($adffe) from module i2c_master.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$1057 ($adffe) from module i2c_master.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$1057 ($adffe) from module i2c_master.
Setting constant 0-bit at position 8 on $auto$ff.cc:262:slice$1057 ($adffe) from module i2c_master.
Setting constant 0-bit at position 9 on $auto$ff.cc:262:slice$1057 ($adffe) from module i2c_master.
Setting constant 0-bit at position 10 on $auto$ff.cc:262:slice$1057 ($adffe) from module i2c_master.
Setting constant 0-bit at position 11 on $auto$ff.cc:262:slice$1057 ($adffe) from module i2c_master.
Setting constant 0-bit at position 12 on $auto$ff.cc:262:slice$1057 ($adffe) from module i2c_master.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$1057 ($adffe) from module i2c_master.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$1057 ($adffe) from module i2c_master.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$1057 ($adffe) from module i2c_master.

yosys> opt_clean

4.17.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..
Removed 12 unused cells and 61 unused wires.
<suppressed ~13 debug messages>

yosys> opt_expr

4.17.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.
<suppressed ~21 debug messages>

4.17.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

4.17.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \i2c_master..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~35 debug messages>

yosys> opt_reduce

4.17.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \i2c_master.
    New ctrl vector for $pmux cell $flatten\byte_controller.\bit_controller.$verific$Select_311$i2c_master_bit_ctrl.sv:596$802: $auto$opt_reduce.cc:134:opt_pmux$1143
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$1142: { $auto$fsm_map.cc:194:map_fsm$859 [14] $auto$fsm_map.cc:194:map_fsm$859 [10] $auto$fsm_map.cc:194:map_fsm$859 [6] $auto$fsm_map.cc:194:map_fsm$859 [2] }
  Optimizing cells in module \i2c_master.
Performed a total of 2 changes.

yosys> opt_merge

4.17.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
<suppressed ~39 debug messages>
Removed a total of 13 cells.

yosys> opt_dff -sat -nosdff

4.17.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$1097 ($adffe) from module i2c_master.
Setting constant 0-bit at position 13 on $flatten\byte_controller.\bit_controller.$verific$filter_cnt_reg$i2c_master_bit_ctrl.sv:271$694 ($adff) from module i2c_master.
Setting constant 0-bit at position 0 on $verific$wb_inta_o_reg$i2c_master.sv:312$183 ($adff) from module i2c_master.

yosys> opt_clean

4.17.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..
Removed 2 unused cells and 28 unused wires.
<suppressed ~3 debug messages>

yosys> opt_expr

4.17.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.

4.17.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

4.17.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \i2c_master..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~35 debug messages>

yosys> opt_reduce

4.17.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \i2c_master.
    New input vector for $reduce_or cell $flatten\byte_controller.\bit_controller.$verific$reduce_nor_60$i2c_master_bit_ctrl.sv:270$687: \byte_controller.bit_controller.filter_cnt [12:0]
    New input vector for $reduce_or cell $flatten\byte_controller.\bit_controller.$verific$reduce_nor_26$i2c_master_bit_ctrl.sv:227$663: \byte_controller.bit_controller.cnt [14:0]
    New ctrl vector for $pmux cell $flatten\byte_controller.$verific$Select_154$i2c_master_byte_ctrl.sv:387$450: { $flatten\byte_controller.$verific$n582$219 $auto$opt_reduce.cc:134:opt_pmux$1147 }
  Optimizing cells in module \i2c_master.
Performed a total of 3 changes.

yosys> opt_merge

4.17.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
Removed a total of 0 cells.

yosys> opt_dff -sat -nosdff

4.17.20. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$1144 ($adffe) from module i2c_master.
Setting constant 0-bit at position 12 on $auto$ff.cc:262:slice$1145 ($adff) from module i2c_master.

yosys> opt_clean

4.17.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..

yosys> opt_expr

4.17.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.

4.17.23. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

4.17.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \i2c_master..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~35 debug messages>

yosys> opt_reduce

4.17.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \i2c_master.
    New input vector for $reduce_or cell $flatten\byte_controller.\bit_controller.$verific$reduce_nor_60$i2c_master_bit_ctrl.sv:270$687: \byte_controller.bit_controller.filter_cnt [11:0]
    New input vector for $reduce_or cell $flatten\byte_controller.\bit_controller.$verific$reduce_nor_26$i2c_master_bit_ctrl.sv:227$663: \byte_controller.bit_controller.cnt [13:0]
  Optimizing cells in module \i2c_master.
Performed a total of 2 changes.

yosys> opt_merge

4.17.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
Removed a total of 0 cells.

yosys> opt_dff -sat -nosdff

4.17.27. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$1148 ($adffe) from module i2c_master.
Setting constant 0-bit at position 11 on $auto$ff.cc:262:slice$1149 ($adff) from module i2c_master.

yosys> opt_clean

4.17.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..

yosys> opt_expr

4.17.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.

4.17.30. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

4.17.31. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \i2c_master..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~35 debug messages>

yosys> opt_reduce

4.17.32. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \i2c_master.
    New input vector for $reduce_or cell $flatten\byte_controller.\bit_controller.$verific$reduce_nor_60$i2c_master_bit_ctrl.sv:270$687: \byte_controller.bit_controller.filter_cnt [10:0]
    New input vector for $reduce_or cell $flatten\byte_controller.\bit_controller.$verific$reduce_nor_26$i2c_master_bit_ctrl.sv:227$663: \byte_controller.bit_controller.cnt [12:0]
  Optimizing cells in module \i2c_master.
Performed a total of 2 changes.

yosys> opt_merge

4.17.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
Removed a total of 0 cells.

yosys> opt_dff -sat -nosdff

4.17.34. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 12 on $auto$ff.cc:262:slice$1150 ($adffe) from module i2c_master.
Setting constant 0-bit at position 10 on $auto$ff.cc:262:slice$1151 ($adff) from module i2c_master.

yosys> opt_clean

4.17.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..

yosys> opt_expr

4.17.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.

4.17.37. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

4.17.38. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \i2c_master..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~35 debug messages>

yosys> opt_reduce

4.17.39. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \i2c_master.
    New input vector for $reduce_or cell $flatten\byte_controller.\bit_controller.$verific$reduce_nor_60$i2c_master_bit_ctrl.sv:270$687: \byte_controller.bit_controller.filter_cnt [9:0]
    New input vector for $reduce_or cell $flatten\byte_controller.\bit_controller.$verific$reduce_nor_26$i2c_master_bit_ctrl.sv:227$663: \byte_controller.bit_controller.cnt [11:0]
  Optimizing cells in module \i2c_master.
Performed a total of 2 changes.

yosys> opt_merge

4.17.40. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
Removed a total of 0 cells.

yosys> opt_dff -sat -nosdff

4.17.41. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 11 on $auto$ff.cc:262:slice$1152 ($adffe) from module i2c_master.
Setting constant 0-bit at position 9 on $auto$ff.cc:262:slice$1153 ($adff) from module i2c_master.

yosys> opt_clean

4.17.42. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..

yosys> opt_expr

4.17.43. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.

4.17.44. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

4.17.45. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \i2c_master..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~35 debug messages>

yosys> opt_reduce

4.17.46. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \i2c_master.
    New input vector for $reduce_or cell $flatten\byte_controller.\bit_controller.$verific$reduce_nor_60$i2c_master_bit_ctrl.sv:270$687: \byte_controller.bit_controller.filter_cnt [8:0]
    New input vector for $reduce_or cell $flatten\byte_controller.\bit_controller.$verific$reduce_nor_26$i2c_master_bit_ctrl.sv:227$663: \byte_controller.bit_controller.cnt [10:0]
  Optimizing cells in module \i2c_master.
Performed a total of 2 changes.

yosys> opt_merge

4.17.47. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
Removed a total of 0 cells.

yosys> opt_dff -sat -nosdff

4.17.48. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 10 on $auto$ff.cc:262:slice$1154 ($adffe) from module i2c_master.
Setting constant 0-bit at position 8 on $auto$ff.cc:262:slice$1155 ($adff) from module i2c_master.

yosys> opt_clean

4.17.49. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..

yosys> opt_expr

4.17.50. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.

4.17.51. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

4.17.52. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \i2c_master..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~35 debug messages>

yosys> opt_reduce

4.17.53. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \i2c_master.
    New input vector for $reduce_or cell $flatten\byte_controller.\bit_controller.$verific$reduce_nor_60$i2c_master_bit_ctrl.sv:270$687: \byte_controller.bit_controller.filter_cnt [7:0]
    New input vector for $reduce_or cell $flatten\byte_controller.\bit_controller.$verific$reduce_nor_26$i2c_master_bit_ctrl.sv:227$663: \byte_controller.bit_controller.cnt [9:0]
  Optimizing cells in module \i2c_master.
Performed a total of 2 changes.

yosys> opt_merge

4.17.54. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
Removed a total of 0 cells.

yosys> opt_dff -sat -nosdff

4.17.55. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 9 on $auto$ff.cc:262:slice$1156 ($adffe) from module i2c_master.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$1157 ($adff) from module i2c_master.

yosys> opt_clean

4.17.56. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..

yosys> opt_expr

4.17.57. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.

4.17.58. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

4.17.59. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \i2c_master..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~35 debug messages>

yosys> opt_reduce

4.17.60. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \i2c_master.
    New input vector for $reduce_or cell $flatten\byte_controller.\bit_controller.$verific$reduce_nor_60$i2c_master_bit_ctrl.sv:270$687: \byte_controller.bit_controller.filter_cnt [6:0]
    New input vector for $reduce_or cell $flatten\byte_controller.\bit_controller.$verific$reduce_nor_26$i2c_master_bit_ctrl.sv:227$663: \byte_controller.bit_controller.cnt [8:0]
  Optimizing cells in module \i2c_master.
Performed a total of 2 changes.

yosys> opt_merge

4.17.61. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
Removed a total of 0 cells.

yosys> opt_dff -sat -nosdff

4.17.62. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 8 on $auto$ff.cc:262:slice$1158 ($adffe) from module i2c_master.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$1159 ($adff) from module i2c_master.

yosys> opt_clean

4.17.63. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..

yosys> opt_expr

4.17.64. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.

4.17.65. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

4.17.66. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \i2c_master..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~35 debug messages>

yosys> opt_reduce

4.17.67. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \i2c_master.
    New input vector for $reduce_or cell $flatten\byte_controller.\bit_controller.$verific$reduce_nor_60$i2c_master_bit_ctrl.sv:270$687: \byte_controller.bit_controller.filter_cnt [5:0]
    New input vector for $reduce_or cell $flatten\byte_controller.\bit_controller.$verific$reduce_nor_26$i2c_master_bit_ctrl.sv:227$663: \byte_controller.bit_controller.cnt [7:0]
  Optimizing cells in module \i2c_master.
Performed a total of 2 changes.

yosys> opt_merge

4.17.68. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
Removed a total of 0 cells.

yosys> opt_dff -sat -nosdff

4.17.69. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$1160 ($adffe) from module i2c_master.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$1161 ($adff) from module i2c_master.

yosys> opt_clean

4.17.70. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..

yosys> opt_expr

4.17.71. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.

4.17.72. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

4.17.73. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \i2c_master..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~35 debug messages>

yosys> opt_reduce

4.17.74. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \i2c_master.
    New input vector for $reduce_or cell $flatten\byte_controller.\bit_controller.$verific$reduce_nor_60$i2c_master_bit_ctrl.sv:270$687: \byte_controller.bit_controller.filter_cnt [4:0]
    New input vector for $reduce_or cell $flatten\byte_controller.\bit_controller.$verific$reduce_nor_26$i2c_master_bit_ctrl.sv:227$663: \byte_controller.bit_controller.cnt [6:0]
  Optimizing cells in module \i2c_master.
Performed a total of 2 changes.

yosys> opt_merge

4.17.75. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
Removed a total of 0 cells.

yosys> opt_dff -sat -nosdff

4.17.76. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$1162 ($adffe) from module i2c_master.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$1163 ($adff) from module i2c_master.

yosys> opt_clean

4.17.77. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..

yosys> opt_expr

4.17.78. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.

4.17.79. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

4.17.80. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \i2c_master..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~35 debug messages>

yosys> opt_reduce

4.17.81. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \i2c_master.
    New input vector for $reduce_or cell $flatten\byte_controller.\bit_controller.$verific$reduce_nor_60$i2c_master_bit_ctrl.sv:270$687: \byte_controller.bit_controller.filter_cnt [3:0]
    New input vector for $reduce_or cell $flatten\byte_controller.\bit_controller.$verific$reduce_nor_26$i2c_master_bit_ctrl.sv:227$663: \byte_controller.bit_controller.cnt [5:0]
  Optimizing cells in module \i2c_master.
Performed a total of 2 changes.

yosys> opt_merge

4.17.82. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
Removed a total of 0 cells.

yosys> opt_dff -sat -nosdff

4.17.83. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$1164 ($adffe) from module i2c_master.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$1165 ($adff) from module i2c_master.

yosys> opt_clean

4.17.84. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..

yosys> opt_expr

4.17.85. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.

4.17.86. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

4.17.87. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \i2c_master..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~35 debug messages>

yosys> opt_reduce

4.17.88. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \i2c_master.
    New input vector for $reduce_or cell $flatten\byte_controller.\bit_controller.$verific$reduce_nor_60$i2c_master_bit_ctrl.sv:270$687: \byte_controller.bit_controller.filter_cnt [2:0]
    New input vector for $reduce_or cell $flatten\byte_controller.\bit_controller.$verific$reduce_nor_26$i2c_master_bit_ctrl.sv:227$663: \byte_controller.bit_controller.cnt [4:0]
  Optimizing cells in module \i2c_master.
Performed a total of 2 changes.

yosys> opt_merge

4.17.89. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
Removed a total of 0 cells.

yosys> opt_dff -sat -nosdff

4.17.90. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$1166 ($adffe) from module i2c_master.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$1167 ($adff) from module i2c_master.

yosys> opt_clean

4.17.91. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..

yosys> opt_expr

4.17.92. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.

4.17.93. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

4.17.94. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \i2c_master..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~35 debug messages>

yosys> opt_reduce

4.17.95. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \i2c_master.
    New input vector for $reduce_or cell $flatten\byte_controller.\bit_controller.$verific$reduce_nor_60$i2c_master_bit_ctrl.sv:270$687: \byte_controller.bit_controller.filter_cnt [1:0]
    New input vector for $reduce_or cell $flatten\byte_controller.\bit_controller.$verific$reduce_nor_26$i2c_master_bit_ctrl.sv:227$663: \byte_controller.bit_controller.cnt [3:0]
  Optimizing cells in module \i2c_master.
Performed a total of 2 changes.

yosys> opt_merge

4.17.96. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
Removed a total of 0 cells.

yosys> opt_dff -sat -nosdff

4.17.97. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$1168 ($adffe) from module i2c_master.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$1169 ($adff) from module i2c_master.

yosys> opt_clean

4.17.98. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..

yosys> opt_expr

4.17.99. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.
<suppressed ~1 debug messages>

4.17.100. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

4.17.101. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \i2c_master..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~35 debug messages>

yosys> opt_reduce

4.17.102. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \i2c_master.
    New input vector for $reduce_or cell $flatten\byte_controller.\bit_controller.$verific$reduce_nor_26$i2c_master_bit_ctrl.sv:227$663: \byte_controller.bit_controller.cnt [2:0]
  Optimizing cells in module \i2c_master.
Performed a total of 1 changes.

yosys> opt_merge

4.17.103. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
Removed a total of 0 cells.

yosys> opt_dff -sat -nosdff

4.17.104. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$1170 ($adffe) from module i2c_master.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$1171 ($adff) from module i2c_master.

yosys> opt_clean

4.17.105. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..
Removed 3 unused cells and 5 unused wires.
<suppressed ~4 debug messages>

yosys> opt_expr

4.17.106. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.
<suppressed ~3 debug messages>

4.17.107. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

4.17.108. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \i2c_master..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~34 debug messages>

yosys> opt_reduce

4.17.109. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \i2c_master.
    New input vector for $reduce_or cell $flatten\byte_controller.\bit_controller.$verific$reduce_nor_26$i2c_master_bit_ctrl.sv:227$663: \byte_controller.bit_controller.cnt [1:0]
  Optimizing cells in module \i2c_master.
Performed a total of 1 changes.

yosys> opt_merge

4.17.110. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
Removed a total of 0 cells.

yosys> opt_dff -sat -nosdff

4.17.111. Executing OPT_DFF pass (perform DFF optimizations).
Removing always-active EN on $auto$ff.cc:262:slice$1093 ($adffe) from module i2c_master.
Removing always-active EN on $auto$ff.cc:262:slice$1090 ($adffe) from module i2c_master.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$1172 ($adffe) from module i2c_master.

yosys> opt_clean

4.17.112. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

4.17.113. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.
<suppressed ~1 debug messages>

4.17.114. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

4.17.115. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \i2c_master..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~34 debug messages>

yosys> opt_reduce

4.17.116. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \i2c_master.
Performed a total of 0 changes.

yosys> opt_merge

4.17.117. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
Removed a total of 0 cells.

yosys> opt_dff -sat -nosdff

4.17.118. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$1173 ($adffe) from module i2c_master.

yosys> opt_clean

4.17.119. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..
Removed 11 unused cells and 12 unused wires.
<suppressed ~14 debug messages>

yosys> opt_expr

4.17.120. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.
<suppressed ~4 debug messages>

4.17.121. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

4.17.122. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \i2c_master..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~32 debug messages>

yosys> opt_reduce

4.17.123. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \i2c_master.
Performed a total of 0 changes.

yosys> opt_merge

4.17.124. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
Removed a total of 0 cells.

yosys> opt_dff -sat -nosdff

4.17.125. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 1-bit at position 0 on $flatten\byte_controller.\bit_controller.$verific$clk_en_reg$i2c_master_bit_ctrl.sv:241$676 ($adff) from module i2c_master.

yosys> opt_clean

4.17.126. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..
Removed 3 unused cells and 7 unused wires.
<suppressed ~5 debug messages>

yosys> opt_expr

4.17.127. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.
<suppressed ~7 debug messages>

4.17.128. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

4.17.129. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \i2c_master..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~32 debug messages>

yosys> opt_reduce

4.17.130. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \i2c_master.
Performed a total of 0 changes.

yosys> opt_merge

4.17.131. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
Removed a total of 0 cells.

yosys> opt_dff -sat -nosdff

4.17.132. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

4.17.133. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..
Removed 0 unused cells and 6 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

4.17.134. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.

4.17.135. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

4.17.136. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \i2c_master..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~32 debug messages>

yosys> opt_reduce

4.17.137. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \i2c_master.
Performed a total of 0 changes.

yosys> opt_merge

4.17.138. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
Removed a total of 0 cells.

yosys> opt_dff -sat -nosdff

4.17.139. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

4.17.140. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..

yosys> opt_expr

4.17.141. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.

4.17.142. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

4.18. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 5) from port B of cell i2c_master.$auto$fsm_map.cc:215:map_fsm$875 ($eq).
Removed top 1 bits (of 5) from port B of cell i2c_master.$auto$fsm_map.cc:215:map_fsm$873 ($eq).
Removed top 1 bits (of 3) from port B of cell i2c_master.$verific$equal_33$i2c_master.sv:215$78 ($eq).
Removed top 1 bits (of 5) from port B of cell i2c_master.$auto$fsm_map.cc:215:map_fsm$870 ($eq).
Removed top 1 bits (of 3) from port B of cell i2c_master.$auto$opt_dff.cc:195:make_patterns_logic$1115 ($ne).
Removed top 1 bits (of 5) from port B of cell i2c_master.$auto$fsm_map.cc:215:map_fsm$871 ($eq).
Removed top 1 bits (of 5) from port B of cell i2c_master.$auto$fsm_map.cc:215:map_fsm$874 ($eq).
Removed top 4 bits (of 5) from port B of cell i2c_master.$auto$fsm_map.cc:215:map_fsm$861 ($eq).
Removed top 3 bits (of 5) from port B of cell i2c_master.$auto$fsm_map.cc:215:map_fsm$862 ($eq).
Removed top 3 bits (of 5) from port B of cell i2c_master.$auto$fsm_map.cc:215:map_fsm$863 ($eq).
Removed top 2 bits (of 5) from port B of cell i2c_master.$auto$fsm_map.cc:215:map_fsm$864 ($eq).
Removed top 2 bits (of 5) from port B of cell i2c_master.$auto$fsm_map.cc:215:map_fsm$865 ($eq).
Removed top 2 bits (of 5) from port B of cell i2c_master.$auto$fsm_map.cc:215:map_fsm$866 ($eq).
Removed top 1 bits (of 3) from port B of cell i2c_master.$auto$opt_dff.cc:195:make_patterns_logic$1063 ($ne).
Removed top 1 bits (of 5) from port B of cell i2c_master.$auto$fsm_map.cc:215:map_fsm$869 ($eq).
Removed top 1 bits (of 5) from port B of cell i2c_master.$auto$fsm_map.cc:215:map_fsm$868 ($eq).
Removed top 2 bits (of 5) from port B of cell i2c_master.$auto$fsm_map.cc:215:map_fsm$867 ($eq).
Removed top 1 bits (of 4) from port B of cell i2c_master.$flatten\byte_controller.\bit_controller.$verific$equal_178$i2c_master_bit_ctrl.sv:427$758 ($eq).
Removed top 3 bits (of 4) from port B of cell i2c_master.$flatten\byte_controller.\bit_controller.$verific$equal_176$i2c_master_bit_ctrl.sv:425$757 ($eq).
Removed top 2 bits (of 4) from port B of cell i2c_master.$flatten\byte_controller.\bit_controller.$verific$equal_141$i2c_master_bit_ctrl.sv:359$744 ($eq).
Removed top 5 bits (of 6) from port B of cell i2c_master.$flatten\byte_controller.$verific$equal_142$i2c_master_byte_ctrl.sv:289$436 ($eq).
Removed top 3 bits (of 6) from port B of cell i2c_master.$flatten\byte_controller.$verific$equal_144$i2c_master_byte_ctrl.sv:312$438 ($eq).
Removed top 4 bits (of 6) from port B of cell i2c_master.$flatten\byte_controller.$verific$equal_145$i2c_master_byte_ctrl.sv:327$439 ($eq).
Removed top 2 bits (of 6) from port B of cell i2c_master.$flatten\byte_controller.$verific$equal_146$i2c_master_byte_ctrl.sv:346$440 ($eq).
Removed top 1 bits (of 6) from port B of cell i2c_master.$flatten\byte_controller.$verific$equal_147$i2c_master_byte_ctrl.sv:373$441 ($eq).
Removed top 1 bits (of 5) from port B of cell i2c_master.$auto$fsm_map.cc:215:map_fsm$872 ($eq).
Removed top 1 bits (of 6) from mux cell i2c_master.$flatten\byte_controller.$verific$mux_119$i2c_master_byte_ctrl.sv:361$426 ($mux).
Removed top 2 bits (of 4) from mux cell i2c_master.$flatten\byte_controller.$verific$mux_120$i2c_master_byte_ctrl.sv:361$427 ($mux).
Removed top 2 bits (of 12) from mux cell i2c_master.$flatten\byte_controller.$verific$mux_186$i2c_master_byte_ctrl.sv:325$404 ($mux).
Removed top 2 bits (of 4) from mux cell i2c_master.$flatten\byte_controller.$verific$mux_65$i2c_master_byte_ctrl.sv:284$395 ($mux).
Removed top 3 bits (of 6) from mux cell i2c_master.$flatten\byte_controller.$verific$mux_78$i2c_master_byte_ctrl.sv:301$406 ($mux).
Removed top 3 bits (of 6) from port B of cell i2c_master.$flatten\byte_controller.$verific$not_equal_46$i2c_master_byte_ctrl.sv:253$382 ($ne).
Removed top 2 bits (of 3) from port B of cell i2c_master.$flatten\byte_controller.$verific$sub_15$i2c_master_byte_ctrl.sv:220$364 ($sub).
Removed top 2 bits (of 4) from wire i2c_master.$flatten\byte_controller.$verific$n241$262.
Removed top 3 bits (of 6) from wire i2c_master.$flatten\byte_controller.$verific$n308$273.
Removed top 2 bits (of 6) from wire i2c_master.$flatten\byte_controller.$verific$n390$284.
Removed top 1 bits (of 6) from wire i2c_master.$flatten\byte_controller.$verific$n511$302.
Removed top 2 bits (of 4) from wire i2c_master.$flatten\byte_controller.$verific$n518$303.

yosys> peepopt

4.19. Executing PEEPOPT pass (run peephole optimizers).

yosys> opt_clean

4.20. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..
Removed 0 unused cells and 5 unused wires.
<suppressed ~1 debug messages>

yosys> bmuxmap

4.21. Executing BMUXMAP pass.

yosys> demuxmap

4.22. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> alumacc

4.23. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module i2c_master:
  creating $macc model for $flatten\byte_controller.$verific$sub_15$i2c_master_byte_ctrl.sv:220$364 ($sub).
  creating $alu model for $macc $flatten\byte_controller.$verific$sub_15$i2c_master_byte_ctrl.sv:220$364.
  creating $alu cell for $flatten\byte_controller.$verific$sub_15$i2c_master_byte_ctrl.sv:220$364: $auto$alumacc.cc:485:replace_alu$1179
  created 1 $alu and 0 $macc cells.

yosys> opt_expr

4.24. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.

yosys> opt_merge -nomux

4.25. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
Removed a total of 0 cells.

yosys> opt_muxtree

4.26. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \i2c_master..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~32 debug messages>

yosys> opt_reduce

4.27. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \i2c_master.
Performed a total of 0 changes.

yosys> opt_merge

4.28. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
Removed a total of 0 cells.

yosys> opt_share

4.29. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe -nosdff

4.30. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

4.31. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..

yosys> opt_expr

4.32. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.
MAX OPT ITERATION = 1

yosys> stat

4.33. Printing statistics.

=== i2c_master ===

   Number of wires:                329
   Number of wire bits:            813
   Number of public wires:         114
   Number of public wire bits:     282
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                276
     $adff                          21
     $adffe                         10
     $alu                            1
     $and                           48
     $dff                            2
     $dffe                           1
     $eq                            33
     $logic_not                      3
     $mux                           71
     $ne                            13
     $not                           11
     $or                             9
     $pmux                          11
     $reduce_and                    10
     $reduce_bool                    4
     $reduce_or                     28


yosys> memory -nomap

4.34. Executing MEMORY pass.

yosys> opt_mem

4.34.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

4.34.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

4.34.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

4.34.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

4.34.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

4.34.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..

yosys> memory_share

4.34.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

4.34.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

4.34.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..

yosys> memory_collect

4.34.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

4.35. Printing statistics.

=== i2c_master ===

   Number of wires:                329
   Number of wire bits:            813
   Number of public wires:         114
   Number of public wire bits:     282
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                276
     $adff                          21
     $adffe                         10
     $alu                            1
     $and                           48
     $dff                            2
     $dffe                           1
     $eq                            33
     $logic_not                      3
     $mux                           71
     $ne                            13
     $not                           11
     $or                             9
     $pmux                          11
     $reduce_and                    10
     $reduce_bool                    4
     $reduce_or                     28


yosys> muxpack

4.36. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~65 debug messages>

yosys> opt_clean

4.37. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..

yosys> pmuxtree

4.38. Executing PMUXTREE pass.

yosys> muxpack

4.39. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converting i2c_master.$auto$pmuxtree.cc:65:recursive_mux_generator$1308 ... i2c_master.$auto$pmuxtree.cc:65:recursive_mux_generator$1310 to a pmux with 2 cases.
Converted 2 (p)mux cells into 1 pmux cells.
<suppressed ~108 debug messages>

yosys> memory_map

4.40. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> stat

4.41. Printing statistics.

=== i2c_master ===

   Number of wires:                416
   Number of wire bits:           1055
   Number of public wires:         114
   Number of public wire bits:     282
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                351
     $adff                          21
     $adffe                         10
     $alu                            1
     $and                           48
     $dff                            2
     $dffe                           1
     $eq                            33
     $logic_not                      3
     $mux                          119
     $ne                            13
     $not                           22
     $or                            19
     $pmux                           1
     $reduce_and                    10
     $reduce_bool                    4
     $reduce_or                     44


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

4.42. Executing TECHMAP pass (map to technology primitives).

4.42.1. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.42.2. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

4.42.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$bf2533632d512eac76dd186c0da49367e29b8e98\_90_pmux for cells of type $pmux.
Using template $paramod$b8c0a997bce700f23568a5ada79cc6781d1f5ca0\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000011 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
No more expansions possible.
<suppressed ~669 debug messages>

yosys> stat

4.43. Printing statistics.

=== i2c_master ===

   Number of wires:                761
   Number of wire bits:           2797
   Number of public wires:         114
   Number of public wire bits:     282
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1250
     $_AND_                         81
     $_DFFE_PP0P_                   30
     $_DFFE_PP1P_                    2
     $_DFFE_PP_                      1
     $_DFF_PP0_                     28
     $_DFF_PP1_                     10
     $_DFF_P_                        9
     $_MUX_                        514
     $_NOT_                         61
     $_OR_                         316
     $_XOR_                        198


yosys> opt_expr

4.44. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.
<suppressed ~421 debug messages>

yosys> opt_merge -nomux

4.45. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
<suppressed ~615 debug messages>
Removed a total of 205 cells.

yosys> opt_muxtree

4.46. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \i2c_master..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

4.47. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \i2c_master.
Performed a total of 0 changes.

yosys> opt_merge

4.48. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
Removed a total of 0 cells.

yosys> opt_share

4.49. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe -nosdff

4.50. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

4.51. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..
Removed 36 unused cells and 374 unused wires.
<suppressed ~37 debug messages>

yosys> opt_expr

4.52. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.
<suppressed ~5 debug messages>

yosys> opt_muxtree

4.53. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \i2c_master..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

4.54. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \i2c_master.
Performed a total of 0 changes.

yosys> opt_merge

4.55. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
Removed a total of 0 cells.

yosys> opt_share

4.56. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe -nosdff

4.57. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

4.58. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..

yosys> opt_expr

4.59. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.
MAX OPT ITERATION = 2

yosys> opt -nodffe -fast -full -nosdff

4.60. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

4.60.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.
<suppressed ~107 debug messages>

yosys> opt_merge

4.60.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_dff -nodffe -nosdff

4.60.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

4.60.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..
Removed 0 unused cells and 15 unused wires.
<suppressed ~1 debug messages>

4.60.5. Finished fast OPT passes.

yosys> techmap -map +/techmap.v

4.61. Executing TECHMAP pass (map to technology primitives).

4.61.1. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.61.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> opt -nodffe -sat -nosdff

4.62. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

4.62.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.

yosys> opt_merge -nomux

4.62.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
Removed a total of 0 cells.

yosys> opt_muxtree

4.62.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \i2c_master..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

4.62.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \i2c_master.
Performed a total of 0 changes.

yosys> opt_merge

4.62.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -sat -nosdff

4.62.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

4.62.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..

yosys> opt_expr

4.62.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.

4.62.9. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

4.63. Executing ABC pass (technology mapping using ABC).

4.63.1. Summary of detected clock domains:
  50 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1118, arst=\arst_i, srst={ }
  64 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1133, arst=\arst_i, srst={ }
  7 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1140, arst=\arst_i, srst={ }
  14 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$1101, arst=\arst_i, srst={ }
  38 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1055, arst=\arst_i, srst={ }
  3 cells in clk=\wb_clk_i, en=$flatten\byte_controller.\bit_controller.$verific$n452$535, arst={ }, srst={ }
  21 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$1086, arst=\arst_i, srst={ }
  20 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$1062, arst=\arst_i, srst={ }
  41 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1071, arst=\arst_i, srst={ }
  32 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$1079, arst=\arst_i, srst={ }
  5 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1064, arst=\arst_i, srst={ }
  37 cells in clk=\wb_clk_i, en={ }, arst={ }, srst={ }
  330 cells in clk=\wb_clk_i, en={ }, arst=\arst_i, srst={ }

4.63.2. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1118, asynchronously reset by \arst_i
Extracted 50 gates and 72 wires to a netlist network with 21 inputs and 11 outputs.

4.63.2.1. Executing ABC.

4.63.3. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1133, asynchronously reset by \arst_i
Extracted 64 gates and 90 wires to a netlist network with 24 inputs and 14 outputs.

4.63.3.1. Executing ABC.

4.63.4. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1140, asynchronously reset by \arst_i
Extracted 7 gates and 12 wires to a netlist network with 4 inputs and 4 outputs.

4.63.4.1. Executing ABC.

4.63.5. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$1101, asynchronously reset by \arst_i
Extracted 14 gates and 19 wires to a netlist network with 4 inputs and 5 outputs.

4.63.5.1. Executing ABC.

4.63.6. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1055, asynchronously reset by \arst_i
Extracted 38 gates and 56 wires to a netlist network with 17 inputs and 16 outputs.

4.63.6.1. Executing ABC.

4.63.7. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $flatten\byte_controller.\bit_controller.$verific$n452$535
Extracted 3 gates and 8 wires to a netlist network with 5 inputs and 3 outputs.

4.63.7.1. Executing ABC.

4.63.8. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$1086, asynchronously reset by \arst_i
Extracted 21 gates and 36 wires to a netlist network with 15 inputs and 8 outputs.

4.63.8.1. Executing ABC.

4.63.9. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$1062, asynchronously reset by \arst_i
Extracted 20 gates and 29 wires to a netlist network with 8 inputs and 6 outputs.

4.63.9.1. Executing ABC.

4.63.10. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1071, asynchronously reset by \arst_i
Extracted 41 gates and 58 wires to a netlist network with 16 inputs and 24 outputs.

4.63.10.1. Executing ABC.

4.63.11. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$1079, asynchronously reset by \arst_i
Extracted 32 gates and 54 wires to a netlist network with 21 inputs and 4 outputs.

4.63.11.1. Executing ABC.

4.63.12. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1064, asynchronously reset by \arst_i
Extracted 5 gates and 11 wires to a netlist network with 5 inputs and 4 outputs.

4.63.12.1. Executing ABC.

4.63.13. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i
Extracted 37 gates and 66 wires to a netlist network with 29 inputs and 10 outputs.

4.63.13.1. Executing ABC.

4.63.14. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, asynchronously reset by \arst_i
Extracted 330 gates and 384 wires to a netlist network with 52 inputs and 54 outputs.

4.63.14.1. Executing ABC.

yosys> abc -dff

4.64. Executing ABC pass (technology mapping using ABC).

4.64.1. Summary of detected clock domains:
  31 cells in clk=\wb_clk_i, en=$abc$3612$auto$opt_dff.cc:194:make_patterns_logic$1079, arst=\arst_i, srst={ }
  27 cells in clk=\wb_clk_i, en=$abc$3539$auto$opt_dff.cc:194:make_patterns_logic$1086, arst=\arst_i, srst={ }
  4 cells in clk=\wb_clk_i, en=$abc$3470$auto$opt_dff.cc:219:make_patterns_logic$1140, arst=\arst_i, srst={ }
  5 cells in clk=\wb_clk_i, en=$abc$3639$auto$opt_dff.cc:219:make_patterns_logic$1064, arst=\arst_i, srst={ }
  5 cells in clk=\wb_clk_i, en=$abc$3533$flatten\byte_controller.\bit_controller.$verific$n452$535, arst={ }, srst={ }
  14 cells in clk=\wb_clk_i, en=$abc$3559$auto$opt_dff.cc:194:make_patterns_logic$1062, arst=\arst_i, srst={ }
  53 cells in clk=\wb_clk_i, en=$abc$3358$auto$opt_dff.cc:219:make_patterns_logic$1118, arst=\arst_i, srst={ }
  61 cells in clk=\wb_clk_i, en={ }, arst={ }, srst={ }
  32 cells in clk=\wb_clk_i, en=$abc$3575$auto$opt_dff.cc:219:make_patterns_logic$1071, arst=\arst_i, srst={ }
  45 cells in clk=\wb_clk_i, en=$abc$3489$auto$opt_dff.cc:219:make_patterns_logic$1055, arst=\arst_i, srst={ }
  64 cells in clk=\wb_clk_i, en=$abc$3410$auto$opt_dff.cc:219:make_patterns_logic$1133, arst=\arst_i, srst={ }
  12 cells in clk=\wb_clk_i, en=$abc$3717$auto$opt_dff.cc:194:make_patterns_logic$1101, arst=\arst_i, srst={ }
  235 cells in clk=\wb_clk_i, en={ }, arst=\arst_i, srst={ }

4.64.2. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$3612$auto$opt_dff.cc:194:make_patterns_logic$1079, asynchronously reset by \arst_i
Extracted 31 gates and 53 wires to a netlist network with 22 inputs and 3 outputs.

4.64.2.1. Executing ABC.

4.64.3. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$3539$auto$opt_dff.cc:194:make_patterns_logic$1086, asynchronously reset by \arst_i
Extracted 27 gates and 41 wires to a netlist network with 14 inputs and 15 outputs.

4.64.3.1. Executing ABC.

4.64.4. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$3470$auto$opt_dff.cc:219:make_patterns_logic$1140, asynchronously reset by \arst_i
Extracted 4 gates and 8 wires to a netlist network with 4 inputs and 2 outputs.

4.64.4.1. Executing ABC.

4.64.5. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$3639$auto$opt_dff.cc:219:make_patterns_logic$1064, asynchronously reset by \arst_i
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 3 outputs.

4.64.5.1. Executing ABC.

4.64.6. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$3533$flatten\byte_controller.\bit_controller.$verific$n452$535
Extracted 5 gates and 12 wires to a netlist network with 7 inputs and 4 outputs.

4.64.6.1. Executing ABC.

4.64.7. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$3559$auto$opt_dff.cc:194:make_patterns_logic$1062, asynchronously reset by \arst_i
Extracted 14 gates and 22 wires to a netlist network with 8 inputs and 6 outputs.

4.64.7.1. Executing ABC.

4.64.8. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$3358$auto$opt_dff.cc:219:make_patterns_logic$1118, asynchronously reset by \arst_i
Extracted 53 gates and 71 wires to a netlist network with 18 inputs and 11 outputs.

4.64.8.1. Executing ABC.

4.64.9. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i
Extracted 61 gates and 90 wires to a netlist network with 29 inputs and 10 outputs.

4.64.9.1. Executing ABC.

4.64.10. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$3575$auto$opt_dff.cc:219:make_patterns_logic$1071, asynchronously reset by \arst_i
Extracted 32 gates and 48 wires to a netlist network with 16 inputs and 21 outputs.

4.64.10.1. Executing ABC.

4.64.11. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$3489$auto$opt_dff.cc:219:make_patterns_logic$1055, asynchronously reset by \arst_i
Extracted 45 gates and 72 wires to a netlist network with 27 inputs and 17 outputs.

4.64.11.1. Executing ABC.

4.64.12. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$3410$auto$opt_dff.cc:219:make_patterns_logic$1133, asynchronously reset by \arst_i
Extracted 64 gates and 83 wires to a netlist network with 19 inputs and 16 outputs.

4.64.12.1. Executing ABC.

4.64.13. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$3717$auto$opt_dff.cc:194:make_patterns_logic$1101, asynchronously reset by \arst_i
Extracted 12 gates and 18 wires to a netlist network with 6 inputs and 6 outputs.

4.64.13.1. Executing ABC.

4.64.14. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, asynchronously reset by \arst_i
Extracted 235 gates and 289 wires to a netlist network with 54 inputs and 62 outputs.

4.64.14.1. Executing ABC.

yosys> abc -dff

4.65. Executing ABC pass (technology mapping using ABC).

4.65.1. Summary of detected clock domains:
  30 cells in clk=\wb_clk_i, en=$abc$3984$abc$3612$auto$opt_dff.cc:194:make_patterns_logic$1079, arst=\arst_i, srst={ }
  24 cells in clk=\wb_clk_i, en=$abc$4012$abc$3539$auto$opt_dff.cc:194:make_patterns_logic$1086, arst=\arst_i, srst={ }
  4 cells in clk=\wb_clk_i, en=$abc$4040$abc$3470$auto$opt_dff.cc:219:make_patterns_logic$1140, arst=\arst_i, srst={ }
  5 cells in clk=\wb_clk_i, en=$abc$4045$abc$3639$auto$opt_dff.cc:219:make_patterns_logic$1064, arst=\arst_i, srst={ }
  5 cells in clk=\wb_clk_i, en=$abc$4051$abc$3533$flatten\byte_controller.\bit_controller.$verific$n452$535, arst={ }, srst={ }
  14 cells in clk=\wb_clk_i, en=$abc$4058$abc$3559$auto$opt_dff.cc:194:make_patterns_logic$1062, arst=\arst_i, srst={ }
  48 cells in clk=\wb_clk_i, en=$abc$4073$abc$3358$auto$opt_dff.cc:219:make_patterns_logic$1118, arst=\arst_i, srst={ }
  33 cells in clk=\wb_clk_i, en=$abc$4194$abc$3575$auto$opt_dff.cc:219:make_patterns_logic$1071, arst=\arst_i, srst={ }
  61 cells in clk=\wb_clk_i, en={ }, arst={ }, srst={ }
  12 cells in clk=\wb_clk_i, en=$abc$4332$abc$3717$auto$opt_dff.cc:194:make_patterns_logic$1101, arst=\arst_i, srst={ }
  44 cells in clk=\wb_clk_i, en=$abc$4227$abc$3489$auto$opt_dff.cc:219:make_patterns_logic$1055, arst=\arst_i, srst={ }
  57 cells in clk=\wb_clk_i, en=$abc$4272$abc$3410$auto$opt_dff.cc:219:make_patterns_logic$1133, arst=\arst_i, srst={ }
  236 cells in clk=\wb_clk_i, en={ }, arst=\arst_i, srst={ }

4.65.2. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$3984$abc$3612$auto$opt_dff.cc:194:make_patterns_logic$1079, asynchronously reset by \arst_i
Extracted 30 gates and 52 wires to a netlist network with 22 inputs and 5 outputs.

4.65.2.1. Executing ABC.

4.65.3. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$4012$abc$3539$auto$opt_dff.cc:194:make_patterns_logic$1086, asynchronously reset by \arst_i
Extracted 24 gates and 38 wires to a netlist network with 14 inputs and 12 outputs.

4.65.3.1. Executing ABC.

4.65.4. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$4040$abc$3470$auto$opt_dff.cc:219:make_patterns_logic$1140, asynchronously reset by \arst_i
Extracted 4 gates and 8 wires to a netlist network with 4 inputs and 2 outputs.

4.65.4.1. Executing ABC.

4.65.5. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$4045$abc$3639$auto$opt_dff.cc:219:make_patterns_logic$1064, asynchronously reset by \arst_i
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 3 outputs.

4.65.5.1. Executing ABC.

4.65.6. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$4051$abc$3533$flatten\byte_controller.\bit_controller.$verific$n452$535
Extracted 5 gates and 12 wires to a netlist network with 7 inputs and 4 outputs.

4.65.6.1. Executing ABC.

4.65.7. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$4058$abc$3559$auto$opt_dff.cc:194:make_patterns_logic$1062, asynchronously reset by \arst_i
Extracted 14 gates and 22 wires to a netlist network with 8 inputs and 6 outputs.

4.65.7.1. Executing ABC.

4.65.8. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$4073$abc$3358$auto$opt_dff.cc:219:make_patterns_logic$1118, asynchronously reset by \arst_i
Extracted 48 gates and 67 wires to a netlist network with 19 inputs and 10 outputs.

4.65.8.1. Executing ABC.

4.65.9. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$4194$abc$3575$auto$opt_dff.cc:219:make_patterns_logic$1071, asynchronously reset by \arst_i
Extracted 33 gates and 49 wires to a netlist network with 16 inputs and 22 outputs.

4.65.9.1. Executing ABC.

4.65.10. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i
Extracted 61 gates and 90 wires to a netlist network with 29 inputs and 10 outputs.

4.65.10.1. Executing ABC.

4.65.11. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$4332$abc$3717$auto$opt_dff.cc:194:make_patterns_logic$1101, asynchronously reset by \arst_i
Extracted 12 gates and 18 wires to a netlist network with 6 inputs and 6 outputs.

4.65.11.1. Executing ABC.

4.65.12. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$4227$abc$3489$auto$opt_dff.cc:219:make_patterns_logic$1055, asynchronously reset by \arst_i
Extracted 44 gates and 71 wires to a netlist network with 27 inputs and 17 outputs.

4.65.12.1. Executing ABC.

4.65.13. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$4272$abc$3410$auto$opt_dff.cc:219:make_patterns_logic$1133, asynchronously reset by \arst_i
Extracted 57 gates and 76 wires to a netlist network with 19 inputs and 13 outputs.

4.65.13.1. Executing ABC.

4.65.14. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, asynchronously reset by \arst_i
Extracted 236 gates and 288 wires to a netlist network with 52 inputs and 60 outputs.

4.65.14.1. Executing ABC.

yosys> abc -dff

4.66. Executing ABC pass (technology mapping using ABC).

4.66.1. Summary of detected clock domains:
  28 cells in clk=\wb_clk_i, en=$abc$4597$abc$3984$abc$3612$auto$opt_dff.cc:194:make_patterns_logic$1079, arst=\arst_i, srst={ }
  25 cells in clk=\wb_clk_i, en=$abc$4627$abc$4012$abc$3539$auto$opt_dff.cc:194:make_patterns_logic$1086, arst=\arst_i, srst={ }
  5 cells in clk=\wb_clk_i, en=$abc$4653$abc$4040$abc$3470$auto$opt_dff.cc:219:make_patterns_logic$1140, arst=\arst_i, srst={ }
  5 cells in clk=\wb_clk_i, en=$abc$4658$abc$4045$abc$3639$auto$opt_dff.cc:219:make_patterns_logic$1064, arst=\arst_i, srst={ }
  5 cells in clk=\wb_clk_i, en=$abc$4664$abc$4051$abc$3533$flatten\byte_controller.\bit_controller.$verific$n452$535, arst={ }, srst={ }
  14 cells in clk=\wb_clk_i, en=$abc$4671$abc$4058$abc$3559$auto$opt_dff.cc:194:make_patterns_logic$1062, arst=\arst_i, srst={ }
  48 cells in clk=\wb_clk_i, en=$abc$4686$abc$4073$abc$3358$auto$opt_dff.cc:219:make_patterns_logic$1118, arst=\arst_i, srst={ }
  32 cells in clk=\wb_clk_i, en=$abc$4732$abc$4194$abc$3575$auto$opt_dff.cc:219:make_patterns_logic$1071, arst=\arst_i, srst={ }
  12 cells in clk=\wb_clk_i, en=$abc$4837$abc$4332$abc$3717$auto$opt_dff.cc:194:make_patterns_logic$1101, arst=\arst_i, srst={ }
  61 cells in clk=\wb_clk_i, en={ }, arst={ }, srst={ }
  55 cells in clk=\wb_clk_i, en=$abc$4895$abc$4272$abc$3410$auto$opt_dff.cc:219:make_patterns_logic$1133, arst=\arst_i, srst={ }
  44 cells in clk=\wb_clk_i, en=$abc$4850$abc$4227$abc$3489$auto$opt_dff.cc:219:make_patterns_logic$1055, arst=\arst_i, srst={ }
  230 cells in clk=\wb_clk_i, en={ }, arst=\arst_i, srst={ }

4.66.2. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$4597$abc$3984$abc$3612$auto$opt_dff.cc:194:make_patterns_logic$1079, asynchronously reset by \arst_i
Extracted 28 gates and 50 wires to a netlist network with 22 inputs and 4 outputs.

4.66.2.1. Executing ABC.

4.66.3. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$4627$abc$4012$abc$3539$auto$opt_dff.cc:194:make_patterns_logic$1086, asynchronously reset by \arst_i
Extracted 25 gates and 39 wires to a netlist network with 14 inputs and 12 outputs.

4.66.3.1. Executing ABC.

4.66.4. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$4653$abc$4040$abc$3470$auto$opt_dff.cc:219:make_patterns_logic$1140, asynchronously reset by \arst_i
Extracted 5 gates and 9 wires to a netlist network with 4 inputs and 3 outputs.

4.66.4.1. Executing ABC.

4.66.5. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$4658$abc$4045$abc$3639$auto$opt_dff.cc:219:make_patterns_logic$1064, asynchronously reset by \arst_i
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 3 outputs.

4.66.5.1. Executing ABC.

4.66.6. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$4664$abc$4051$abc$3533$flatten\byte_controller.\bit_controller.$verific$n452$535
Extracted 5 gates and 12 wires to a netlist network with 7 inputs and 4 outputs.

4.66.6.1. Executing ABC.

4.66.7. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$4671$abc$4058$abc$3559$auto$opt_dff.cc:194:make_patterns_logic$1062, asynchronously reset by \arst_i
Extracted 14 gates and 22 wires to a netlist network with 8 inputs and 6 outputs.

4.66.7.1. Executing ABC.

4.66.8. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$4686$abc$4073$abc$3358$auto$opt_dff.cc:219:make_patterns_logic$1118, asynchronously reset by \arst_i
Extracted 48 gates and 65 wires to a netlist network with 17 inputs and 11 outputs.

4.66.8.1. Executing ABC.

4.66.9. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$4732$abc$4194$abc$3575$auto$opt_dff.cc:219:make_patterns_logic$1071, asynchronously reset by \arst_i
Extracted 32 gates and 48 wires to a netlist network with 16 inputs and 21 outputs.

4.66.9.1. Executing ABC.

4.66.10. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$4837$abc$4332$abc$3717$auto$opt_dff.cc:194:make_patterns_logic$1101, asynchronously reset by \arst_i
Extracted 12 gates and 18 wires to a netlist network with 6 inputs and 6 outputs.

4.66.10.1. Executing ABC.

4.66.11. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i
Extracted 61 gates and 90 wires to a netlist network with 29 inputs and 10 outputs.

4.66.11.1. Executing ABC.

4.66.12. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$4895$abc$4272$abc$3410$auto$opt_dff.cc:219:make_patterns_logic$1133, asynchronously reset by \arst_i
Extracted 55 gates and 74 wires to a netlist network with 19 inputs and 13 outputs.

4.66.12.1. Executing ABC.

4.66.13. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$4850$abc$4227$abc$3489$auto$opt_dff.cc:219:make_patterns_logic$1055, asynchronously reset by \arst_i
Extracted 44 gates and 71 wires to a netlist network with 27 inputs and 17 outputs.

4.66.13.1. Executing ABC.

4.66.14. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, asynchronously reset by \arst_i
Extracted 230 gates and 283 wires to a netlist network with 53 inputs and 59 outputs.

4.66.14.1. Executing ABC.

yosys> opt_ffinv

4.67. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt -sat -nosdff

4.68. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

4.68.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.

yosys> opt_merge -nomux

4.68.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
<suppressed ~24 debug messages>
Removed a total of 8 cells.

yosys> opt_muxtree

4.68.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \i2c_master..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

4.68.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \i2c_master.
Performed a total of 0 changes.

yosys> opt_merge

4.68.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
Removed a total of 0 cells.

yosys> opt_dff -sat -nosdff

4.68.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

4.68.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..
Removed 0 unused cells and 3132 unused wires.
<suppressed ~36 debug messages>

yosys> opt_expr

4.68.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.

4.68.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

4.68.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \i2c_master..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

4.68.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \i2c_master.
Performed a total of 0 changes.

yosys> opt_merge

4.68.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
Removed a total of 0 cells.

yosys> opt_dff -sat -nosdff

4.68.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

4.68.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..

yosys> opt_expr

4.68.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.

4.68.16. Finished OPT passes. (There is nothing left to do.)

yosys> bmuxmap

4.69. Executing BMUXMAP pass.

yosys> demuxmap

4.70. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> abc -script /home/users/temp_dir/yosys_3h2UeJ/abc_tmp_1.scr

4.71. Executing ABC pass (technology mapping using ABC).

4.71.1. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Extracted 476 gates and 565 wires to a netlist network with 89 inputs and 94 outputs.

4.71.1.1. Executing ABC.
DE:   #PIs =  89  #Luts =   154  Max Lvl =   6  Avg Lvl =   1.96  [   0.05 sec. at Pass 0]
DE:   #PIs =  89  #Luts =   120  Max Lvl =   5  Avg Lvl =   1.81  [   0.51 sec. at Pass 1]
DE:   #PIs =  89  #Luts =   118  Max Lvl =   5  Avg Lvl =   1.73  [   0.11 sec. at Pass 2]
DE:   #PIs =  89  #Luts =   116  Max Lvl =   4  Avg Lvl =   1.60  [   0.21 sec. at Pass 3]
DE:   #PIs =  89  #Luts =   116  Max Lvl =   4  Avg Lvl =   1.60  [   0.13 sec. at Pass 4]
DE:   #PIs =  89  #Luts =   115  Max Lvl =   4  Avg Lvl =   1.59  [   0.23 sec. at Pass 5]
DE:   #PIs =  89  #Luts =   115  Max Lvl =   4  Avg Lvl =   1.59  [   0.12 sec. at Pass 6]
DE:   #PIs =  89  #Luts =   114  Max Lvl =   4  Avg Lvl =   1.59  [   0.25 sec. at Pass 7]
DE:   #PIs =  89  #Luts =   114  Max Lvl =   4  Avg Lvl =   1.59  [   0.20 sec. at Pass 8]
DE:   #PIs =  89  #Luts =   114  Max Lvl =   4  Avg Lvl =   1.59  [   0.26 sec. at Pass 9]
DE:   #PIs =  89  #Luts =   114  Max Lvl =   4  Avg Lvl =   1.59  [   0.12 sec. at Pass 10]
DE:   #PIs =  89  #Luts =   113  Max Lvl =   4  Avg Lvl =   1.59  [   0.30 sec. at Pass 11]
DE:   #PIs =  89  #Luts =   112  Max Lvl =   4  Avg Lvl =   1.57  [   0.36 sec. at Pass 12]
DE:   #PIs =  89  #Luts =   112  Max Lvl =   4  Avg Lvl =   1.57  [   0.21 sec. at Pass 13]
DE:   #PIs =  89  #Luts =   112  Max Lvl =   4  Avg Lvl =   1.57  [   0.38 sec. at Pass 14]
DE:   #PIs =  89  #Luts =   112  Max Lvl =   4  Avg Lvl =   1.57  [   0.22 sec. at Pass 15]
DE:   #PIs =  89  #Luts =   112  Max Lvl =   4  Avg Lvl =   1.57  [   0.50 sec. at Pass 16]
DE:   #PIs =  89  #Luts =   112  Max Lvl =   4  Avg Lvl =   1.57  [   0.18 sec. at Pass 17]

yosys> opt_expr

4.72. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.

yosys> opt_merge -nomux

4.73. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
Removed a total of 0 cells.

yosys> opt_muxtree

4.74. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \i2c_master..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

4.75. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \i2c_master.
Performed a total of 0 changes.

yosys> opt_merge

4.76. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
Removed a total of 0 cells.

yosys> opt_share

4.77. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe -nosdff

4.78. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

4.79. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..
Removed 0 unused cells and 568 unused wires.
<suppressed ~9 debug messages>

yosys> opt_expr

4.80. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.
MAX OPT ITERATION = 1

yosys> opt_ffinv

4.81. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 3 inverters.

yosys> stat

4.82. Printing statistics.

=== i2c_master ===

   Number of wires:                245
   Number of wire bits:            355
   Number of public wires:          71
   Number of public wire bits:     181
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                188
     $_DFFE_PP0P_                   30
     $_DFFE_PP1P_                    2
     $_DFFE_PP_                      1
     $_DFF_PP0_                     38
     $_DFF_P_                        9
     $lut                          108


yosys> shregmap -minlen 8 -maxlen 20

4.83. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

4.84. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

4.85. Printing statistics.

=== i2c_master ===

   Number of wires:                245
   Number of wire bits:            355
   Number of public wires:          71
   Number of public wire bits:     181
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                188
     $_DFFE_PP0P_                   31
     $_DFFE_PP1P_                    2
     $_DFF_PP0_                     38
     $_DFF_P_                        9
     $lut                          108


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

4.86. Executing TECHMAP pass (map to technology primitives).

4.86.1. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.86.2. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

4.86.3. Continuing TECHMAP pass.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_DFFE_PP1P_ for cells of type $_DFFE_PP1P_.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using extmapper simplemap for cells of type $lut.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~395 debug messages>

yosys> opt_expr -mux_undef

4.87. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.
<suppressed ~2771 debug messages>

yosys> simplemap

4.88. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

4.89. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.

yosys> opt_merge

4.90. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
<suppressed ~618 debug messages>
Removed a total of 206 cells.

yosys> opt_dff -nodffe -nosdff

4.91. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

4.92. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..
Removed 1 unused cells and 680 unused wires.
<suppressed ~2 debug messages>

yosys> opt -nodffe -nosdff

4.93. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

4.93.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.
<suppressed ~9 debug messages>

yosys> opt_merge -nomux

4.93.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
Removed a total of 0 cells.

yosys> opt_muxtree

4.93.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \i2c_master..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

4.93.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \i2c_master.
Performed a total of 0 changes.

yosys> opt_merge

4.93.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

4.93.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

4.93.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

4.93.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.

4.93.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

4.93.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \i2c_master..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

4.93.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \i2c_master.
Performed a total of 0 changes.

yosys> opt_merge

4.93.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

4.93.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

4.93.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..

yosys> opt_expr

4.93.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.

4.93.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /home/users/temp_dir/yosys_3h2UeJ/abc_tmp_2.scr

4.94. Executing ABC pass (technology mapping using ABC).

4.94.1. Extracting gate netlist of module `\i2c_master' to `<abc-temp-dir>/input.blif'..
Extracted 374 gates and 464 wires to a netlist network with 88 inputs and 90 outputs.

4.94.1.1. Executing ABC.
DE:   #PIs =  88  #Luts =   108  Max Lvl =   4  Avg Lvl =   1.59  [   0.11 sec. at Pass 0]
DE:   #PIs =  88  #Luts =   108  Max Lvl =   4  Avg Lvl =   1.59  [   0.51 sec. at Pass 1]
DE:   #PIs =  88  #Luts =   108  Max Lvl =   4  Avg Lvl =   1.59  [   0.28 sec. at Pass 2]
DE:   #PIs =  88  #Luts =   108  Max Lvl =   4  Avg Lvl =   1.59  [   0.24 sec. at Pass 3]
DE:   #PIs =  88  #Luts =   108  Max Lvl =   4  Avg Lvl =   1.59  [   0.12 sec. at Pass 4]
DE:   #PIs =  88  #Luts =   108  Max Lvl =   4  Avg Lvl =   1.59  [   0.19 sec. at Pass 5]
DE:   #PIs =  88  #Luts =   108  Max Lvl =   4  Avg Lvl =   1.59  [   0.43 sec. at Pass 6]
DE:   #PIs =  88  #Luts =   108  Max Lvl =   4  Avg Lvl =   1.59  [   0.27 sec. at Pass 7]

yosys> opt_expr

4.95. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.

yosys> opt_merge -nomux

4.96. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
Removed a total of 0 cells.

yosys> opt_muxtree

4.97. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \i2c_master..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

4.98. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \i2c_master.
Performed a total of 0 changes.

yosys> opt_merge

4.99. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
Removed a total of 0 cells.

yosys> opt_share

4.100. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe -nosdff

4.101. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

4.102. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..
Removed 0 unused cells and 403 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

4.103. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.
MAX OPT ITERATION = 1

yosys> hierarchy -check

4.104. Executing HIERARCHY pass (managing design hierarchy).

4.104.1. Analyzing design hierarchy..
Top module:  \i2c_master

4.104.2. Analyzing design hierarchy..
Top module:  \i2c_master
Removed 0 unused modules.

yosys> stat

4.105. Printing statistics.

=== i2c_master ===

   Number of wires:                243
   Number of wire bits:            353
   Number of public wires:          71
   Number of public wire bits:     181
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                188
     $lut                          108
     dffsre                         80


yosys> opt_clean -purge

4.106. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..
Removed 0 unused cells and 47 unused wires.
<suppressed ~47 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

4.107. Executing Verilog backend.
Dumping module `\i2c_master'.

Warnings: 252 unique messages, 252 total
End of script. Logfile hash: cf8b995b42, CPU: user 4.09s system 0.23s, MEM: 29.11 MB peak
Yosys 0.18+10 (git sha1 7a7a25778, gcc 9.1.0 -fPIC -Os)
Time spent: 92% 6x abc (50 sec), 2% 36x opt_dff (1 sec), ...
real 18.84
user 39.97
sys 14.75
