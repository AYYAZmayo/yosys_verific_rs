
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.40
 Yosys 0.17+76 (git sha1 035496b50, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Apr22_SW_Release, released at Thu Apr 28 08:08:21 2022.

yosys> verilog_defaults -add -I.

yosys> read -vhdl b14.vhd

yosys> verific -vhdl b14.vhd

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Apr22_SW_Release, released at Thu Apr 28 08:08:21 2022.
VERIFIC-INFO [VHDL-1504] default VHDL library search path is now "/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008"
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'b14.vhd'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.standard' from file '/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/standard.vdb'
VERIFIC-INFO [VHDL-1012] b14.vhd:1: analyzing entity 'b14'
VERIFIC-INFO [VHDL-1010] b14.vhd:11: analyzing architecture 'behav'

yosys> synth_rs -top b14 -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.55

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\RS_DSP2_MULT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_sim'.
Generating RTLIL representation for module `\dsp_t1_20x18x64'.
Generating RTLIL representation for module `\dsp_t1_10x9x32'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top b14

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VHDL-1067] b14.vhd:1: processing 'b14(BEHAV)'
VERIFIC-INFO [VHDL-1172] b14.vhd:478: 'others' clause is never selected
Importing module b14.

3.3.1. Analyzing design hierarchy..
Top module:  \b14

3.3.2. Analyzing design hierarchy..
Top module:  \b14
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.4.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.4.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
<suppressed ~26 debug messages>

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
<suppressed ~7 debug messages>

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 7 unused cells and 160 unused wires.
<suppressed ~54 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module b14...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $verific$i684$b14.vhd:501$461.
    dead port 2/2 on $mux $verific$mux_672$b14.vhd:501$452.
    dead port 2/2 on $mux $verific$mux_685$b14.vhd:501$463.
Removed 3 multiplexer ports.
<suppressed ~19 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
    New ctrl vector for $pmux cell $verific$select_746$b14.vhd:486$414: { $verific$n2255$45 $auto$opt_reduce.cc:134:opt_pmux$505 }
    New ctrl vector for $pmux cell $verific$select_750$b14.vhd:486$355: { $verific$n2256$46 $auto$opt_reduce.cc:134:opt_pmux$507 }
    New ctrl vector for $pmux cell $verific$select_751$b14.vhd:486$432: { $verific$n2257$47 $auto$opt_reduce.cc:134:opt_pmux$509 }
    New ctrl vector for $pmux cell $verific$select_752$b14.vhd:486$433: { $verific$n2258$48 $auto$opt_reduce.cc:134:opt_pmux$511 }
  Optimizing cells in module \b14.
Performed a total of 4 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $verific$wr_reg$b14.vhd:505$498 ($aldff) from module b14.
Changing const-value async load to async reset on $verific$state_reg$b14.vhd:505$500 ($aldff) from module b14.
Changing const-value async load to async reset on $verific$reg3_reg$b14.vhd:505$495 ($aldff) from module b14.
Changing const-value async load to async reset on $verific$reg2_reg$b14.vhd:505$494 ($aldff) from module b14.
Changing const-value async load to async reset on $verific$reg1_reg$b14.vhd:505$493 ($aldff) from module b14.
Changing const-value async load to async reset on $verific$reg0_reg$b14.vhd:505$492 ($aldff) from module b14.
Changing const-value async load to async reset on $verific$rd_reg$b14.vhd:505$497 ($aldff) from module b14.
Changing const-value async load to async reset on $verific$IR_reg$b14.vhd:505$489 ($aldff) from module b14.
Changing const-value async load to async reset on $verific$B_reg$b14.vhd:505$491 ($aldff) from module b14.
Changing const-value async load to async reset on $verific$datao_reg$b14.vhd:505$499 ($aldff) from module b14.
Changing const-value async load to async reset on $verific$d_reg$b14.vhd:505$490 ($aldff) from module b14.
Changing const-value async load to async reset on $verific$addr_reg$b14.vhd:505$496 ($aldff) from module b14.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~19 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.

3.11.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).
Found FSM state register b14.d.

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\d' from module `\b14'.
  found $adff cell for state register: $verific$d_reg$b14.vhd:505$490
  root of input selection tree: $verific$n11472$295
  found reset state: 0 (from async reset)
  found ctrl input: \state
  found ctrl input: $verific$n341$141 [0]
  found ctrl input: $verific$n10346$112
  found ctrl input: $verific$n1405$39
  found ctrl input: $verific$n1440$40
  found ctrl input: $verific$n1474$41
  found ctrl input: $verific$n1475$42
  found ctrl input: $verific$n1476$43
  found ctrl input: $verific$n1477$44
  found state code: 1
  found state code: 2
  found state code: 3
  found ctrl input: \B
  ctrl inputs: { $verific$n341$141 [0] $verific$n10346$112 $verific$n1477$44 $verific$n1476$43 $verific$n1475$42 $verific$n1474$41 $verific$n1440$40 $verific$n1405$39 \state \B }
  ctrl outputs: $verific$n11472$295
  transition:          0 10'--------0- ->          0 0
  transition:          0 10'000000001- ->          0 0
  transition:          0 10'001000001- ->          0 0
  transition:          0 10'00-100001- ->          1 1
  transition:          0 10'00--10001- ->          2 2
  transition:          0 10'00---1001- ->          3 3
  transition:          0 10'00----1010 ->          0 0
  transition:          0 10'00----1011 ->          3 3
  transition:          0 10'00-----110 ->          3 3
  transition:          0 10'00-----111 ->          0 0
  transition:          0 10'01------1- ->          0 0
  transition:          0 10'1-------1- ->          0 0
  transition:          2 10'--------0- ->          2 2
  transition:          2 10'000000001- ->          2 2
  transition:          2 10'001000001- ->          0 0
  transition:          2 10'00-100001- ->          1 1
  transition:          2 10'00--10001- ->          2 2
  transition:          2 10'00---1001- ->          3 3
  transition:          2 10'00----1010 ->          2 2
  transition:          2 10'00----1011 ->          3 3
  transition:          2 10'00-----110 ->          3 3
  transition:          2 10'00-----111 ->          2 2
  transition:          2 10'01------1- ->          2 2
  transition:          2 10'1-------1- ->          2 2
  transition:          1 10'--------0- ->          1 1
  transition:          1 10'000000001- ->          1 1
  transition:          1 10'001000001- ->          0 0
  transition:          1 10'00-100001- ->          1 1
  transition:          1 10'00--10001- ->          2 2
  transition:          1 10'00---1001- ->          3 3
  transition:          1 10'00----1010 ->          1 1
  transition:          1 10'00----1011 ->          3 3
  transition:          1 10'00-----110 ->          3 3
  transition:          1 10'00-----111 ->          1 1
  transition:          1 10'01------1- ->          1 1
  transition:          1 10'1-------1- ->          1 1
  transition:          3 10'--------0- ->          3 3
  transition:          3 10'000000001- ->          3 3
  transition:          3 10'001000001- ->          0 0
  transition:          3 10'00-100001- ->          1 1
  transition:          3 10'00--10001- ->          2 2
  transition:          3 10'00---1001- ->          3 3
  transition:          3 10'00----1010 ->          3 3
  transition:          3 10'00----1011 ->          3 3
  transition:          3 10'00-----110 ->          3 3
  transition:          3 10'00-----111 ->          3 3
  transition:          3 10'01------1- ->          3 3
  transition:          3 10'1-------1- ->          3 3

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\d$512' from module `\b14'.
  Merging pattern 10'000000001- and 10'001000001- from group (0 0 0).
  Merging pattern 10'001000001- and 10'000000001- from group (0 0 0).
  Merging pattern 10'00----1010 and 10'00----1011 from group (3 3 3).
  Merging pattern 10'00-----110 and 10'00-----111 from group (3 3 3).
  Merging pattern 10'00----1011 and 10'00----1010 from group (3 3 3).
  Merging pattern 10'00-----111 and 10'00-----110 from group (3 3 3).

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 3 unused cells and 3 unused wires.
<suppressed ~4 debug messages>

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\d$512' from module `\b14'.

yosys> fsm_recode -encoding binary

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\d$512' from module `\b14' using `auto' encoding:
  mapping auto encoding to `binary` for this FSM.
  00000000000000000000000000000000 -> 00
  00000000000000000000000000000010 -> 01
  00000000000000000000000000000001 -> 10
  00000000000000000000000000000011 -> 11

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\d$512' from module `b14':
-------------------------------------

  Information on FSM $fsm$\d$512 (\d):

  Number of input signals:   10
  Number of output signals:  32
  Number of state bits:       2

  Input signals:
    0: \B
    1: \state
    2: $verific$n1405$39
    3: $verific$n1440$40
    4: $verific$n1474$41
    5: $verific$n1475$42
    6: $verific$n1476$43
    7: $verific$n1477$44
    8: $verific$n10346$112
    9: $verific$n341$141 [0]

  Output signals:
    0: $verific$n11472$295 [0]
    1: $verific$n11472$295 [1]
    2: $verific$n11472$295 [2]
    3: $verific$n11472$295 [3]
    4: $verific$n11472$295 [4]
    5: $verific$n11472$295 [5]
    6: $verific$n11472$295 [6]
    7: $verific$n11472$295 [7]
    8: $verific$n11472$295 [8]
    9: $verific$n11472$295 [9]
   10: $verific$n11472$295 [10]
   11: $verific$n11472$295 [11]
   12: $verific$n11472$295 [12]
   13: $verific$n11472$295 [13]
   14: $verific$n11472$295 [14]
   15: $verific$n11472$295 [15]
   16: $verific$n11472$295 [16]
   17: $verific$n11472$295 [17]
   18: $verific$n11472$295 [18]
   19: $verific$n11472$295 [19]
   20: $verific$n11472$295 [20]
   21: $verific$n11472$295 [21]
   22: $verific$n11472$295 [22]
   23: $verific$n11472$295 [23]
   24: $verific$n11472$295 [24]
   25: $verific$n11472$295 [25]
   26: $verific$n11472$295 [26]
   27: $verific$n11472$295 [27]
   28: $verific$n11472$295 [28]
   29: $verific$n11472$295 [29]
   30: $verific$n11472$295 [30]
   31: $verific$n11472$295 [31]

  State encoding:
    0:       2'00  <RESET STATE>
    1:       2'01
    2:       2'10
    3:       2'11

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 10'00----1010   ->     0 0
      1:     0 10'00-----111   ->     0 0
      2:     0 10'--------0-   ->     0 0
      3:     0 10'00-000001-   ->     0 0
      4:     0 10'01------1-   ->     0 0
      5:     0 10'1-------1-   ->     0 0
      6:     0 10'00--10001-   ->     1 2
      7:     0 10'00-100001-   ->     2 1
      8:     0 10'00-----110   ->     3 3
      9:     0 10'00----1011   ->     3 3
     10:     0 10'00---1001-   ->     3 3
     11:     1 10'001000001-   ->     0 0
     12:     1 10'00----1010   ->     1 2
     13:     1 10'00-----111   ->     1 2
     14:     1 10'--------0-   ->     1 2
     15:     1 10'000000001-   ->     1 2
     16:     1 10'00--10001-   ->     1 2
     17:     1 10'01------1-   ->     1 2
     18:     1 10'1-------1-   ->     1 2
     19:     1 10'00-100001-   ->     2 1
     20:     1 10'00-----110   ->     3 3
     21:     1 10'00----1011   ->     3 3
     22:     1 10'00---1001-   ->     3 3
     23:     2 10'001000001-   ->     0 0
     24:     2 10'00--10001-   ->     1 2
     25:     2 10'00----1010   ->     2 1
     26:     2 10'00-----111   ->     2 1
     27:     2 10'--------0-   ->     2 1
     28:     2 10'000000001-   ->     2 1
     29:     2 10'00-100001-   ->     2 1
     30:     2 10'01------1-   ->     2 1
     31:     2 10'1-------1-   ->     2 1
     32:     2 10'00-----110   ->     3 3
     33:     2 10'00----1011   ->     3 3
     34:     2 10'00---1001-   ->     3 3
     35:     3 10'001000001-   ->     0 0
     36:     3 10'00--10001-   ->     1 2
     37:     3 10'00-100001-   ->     2 1
     38:     3 10'--------0-   ->     3 3
     39:     3 10'000000001-   ->     3 3
     40:     3 10'00---1001-   ->     3 3
     41:     3 10'00----101-   ->     3 3
     42:     3 10'00-----11-   ->     3 3
     43:     3 10'01------1-   ->     3 3
     44:     3 10'1-------1-   ->     3 3

-------------------------------------

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\d$512' from module `\b14'.

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
<suppressed ~7 debug messages>

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
<suppressed ~162 debug messages>
Removed a total of 54 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~19 debug messages>

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $verific$reg3_reg$b14.vhd:505$495 ($adff) from module b14 (D = $verific$n11178$290 [31:3], Q = \reg3 [31:3]).
Adding EN signal on $verific$reg3_reg$b14.vhd:505$495 ($adff) from module b14 (D = $verific$n10312$265 [2:0], Q = \reg3 [2:0]).
Adding EN signal on $verific$reg2_reg$b14.vhd:505$494 ($adff) from module b14 (D = $verific$n10279$264, Q = \reg2).
Adding EN signal on $verific$reg1_reg$b14.vhd:505$493 ($adff) from module b14 (D = $verific$n10246$263, Q = \reg1).
Adding EN signal on $verific$reg0_reg$b14.vhd:505$492 ($adff) from module b14 (D = $verific$n10213$262, Q = \reg0).
Adding EN signal on $verific$datao_reg$b14.vhd:505$499 ($adff) from module b14 (D = { $verific$add_570$b14.vhd:466$423 $verific$n10514$273 [0] }, Q = \datao).
Adding EN signal on $verific$B_reg$b14.vhd:505$491 ($adff) from module b14 (D = $verific$n10979$120, Q = \B).

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 24 unused cells and 76 unused wires.
<suppressed ~25 debug messages>

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.

3.13.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~15 debug messages>

yosys> opt_reduce

3.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
<suppressed ~30 debug messages>
Removed a total of 10 cells.

yosys> opt_dff -sat

3.13.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 2 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 3 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 4 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 5 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 6 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 7 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 8 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 9 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 10 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 11 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 12 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 13 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 14 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 15 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 16 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 17 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 18 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 19 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 20 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 21 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 22 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 23 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 24 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 25 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 26 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 27 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 28 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 29 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 30 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 31 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.

yosys> opt_clean

3.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 0 unused cells and 10 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.

3.13.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~15 debug messages>

yosys> opt_reduce

3.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..

yosys> opt_expr

3.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.

3.13.23. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 2 bits (of 8) from port B of cell b14.$auto$fsm_map.cc:77:implement_pattern_cache$660 ($eq).
Removed top 3 bits (of 29) from FF cell b14.$auto$ff.cc:262:slice$733 ($adffe).
Removed top 1 bits (of 2) from port B of cell b14.$auto$opt_dff.cc:195:make_patterns_logic$769 ($ne).
Removed top 2 bits (of 6) from port B of cell b14.$auto$fsm_map.cc:77:implement_pattern_cache$685 ($eq).
Removed top 1 bits (of 32) from port A of cell b14.$verific$LessThan_14$b14.vhd:83$312 ($lt).
Removed top 1 bits (of 33) from port Y of cell b14.$verific$unary_minus_15$b14.vhd:84$313 ($neg).
Removed top 1 bits (of 33) from port A of cell b14.$verific$unary_minus_15$b14.vhd:84$313 ($neg).
Removed top 3 bits (of 5) from port Y of cell b14.$verific$add_21$b14.vhd:86$319 ($add).
Removed top 3 bits (of 5) from port A of cell b14.$verific$add_21$b14.vhd:86$319 ($add).
Removed top 2 bits (of 5) from port B of cell b14.$auto$fsm_map.cc:77:implement_pattern_cache$689 ($eq).
Removed top 5 bits (of 8) from port Y of cell b14.$verific$add_26$b14.vhd:88$326 ($add).
Removed top 5 bits (of 8) from port A of cell b14.$verific$add_26$b14.vhd:88$326 ($add).
Removed top 2 bits (of 6) from port B of cell b14.$auto$fsm_map.cc:77:implement_pattern_cache$691 ($eq).
Removed top 9 bits (of 13) from port Y of cell b14.$verific$add_31$b14.vhd:90$333 ($add).
Removed top 9 bits (of 13) from port A of cell b14.$verific$add_31$b14.vhd:90$333 ($add).
Removed top 2 bits (of 5) from port B of cell b14.$auto$fsm_map.cc:77:implement_pattern_cache$693 ($eq).
Removed top 8 bits (of 9) from port Y of cell b14.$verific$add_36$b14.vhd:92$340 ($add).
Removed top 8 bits (of 9) from port A of cell b14.$verific$add_36$b14.vhd:92$340 ($add).
Removed top 25 bits (of 26) from port B of cell b14.$verific$add_39$b14.vhd:95$346 ($add).
Removed top 1 bits (of 3) from port Y of cell b14.$verific$add_44$b14.vhd:96$350 ($add).
Removed top 1 bits (of 3) from port A of cell b14.$verific$add_44$b14.vhd:96$350 ($add).
Removed top 12 bits (of 32) from port A of cell b14.$verific$add_56$b14.vhd:110$358 ($add).
Removed top 12 bits (of 32) from port Y of cell b14.$verific$add_56$b14.vhd:110$358 ($add).
Removed top 12 bits (of 32) from port B of cell b14.$verific$add_56$b14.vhd:110$358 ($add).
Removed top 12 bits (of 32) from port A of cell b14.$verific$add_61$b14.vhd:113$360 ($add).
Removed top 12 bits (of 32) from port Y of cell b14.$verific$add_61$b14.vhd:113$360 ($add).
Removed top 12 bits (of 32) from port B of cell b14.$verific$add_61$b14.vhd:113$360 ($add).
Removed top 1 bits (of 32) from port B of cell b14.$verific$LessThan_83$b14.vhd:148$372 ($lt).
Removed top 2 bits (of 33) from port B of cell b14.$verific$sub_84$b14.vhd:149$373 ($sub).
Removed top 1 bits (of 33) from port Y of cell b14.$verific$sub_84$b14.vhd:149$373 ($sub).
Removed top 1 bits (of 33) from port A of cell b14.$verific$sub_84$b14.vhd:149$373 ($sub).
Removed top 8 bits (of 9) from port B of cell b14.$auto$fsm_map.cc:77:implement_pattern_cache$703 ($eq).
Removed top 30 bits (of 32) from mux cell b14.$verific$mux_138$b14.vhd:216$391 ($mux).
Removed top 30 bits (of 32) from mux cell b14.$verific$mux_140$b14.vhd:220$393 ($mux).
Removed top 1 bits (of 3) from port A of cell b14.$verific$equal_141$b14.vhd:221$394 ($eq).
Removed top 1 bits (of 3) from port A of cell b14.$verific$equal_142$b14.vhd:223$395 ($eq).
Removed top 2 bits (of 3) from port A of cell b14.$verific$equal_143$b14.vhd:224$396 ($eq).
Removed top 30 bits (of 32) from mux cell b14.$verific$mux_145$b14.vhd:226$398 ($mux).
Removed top 30 bits (of 32) from mux cell b14.$verific$mux_146$b14.vhd:226$399 ($mux).
Removed top 30 bits (of 32) from mux cell b14.$verific$mux_147$b14.vhd:226$400 ($mux).
Removed top 30 bits (of 32) from mux cell b14.$verific$mux_148$b14.vhd:226$401 ($mux).
Removed top 30 bits (of 32) from mux cell b14.$verific$mux_149$b14.vhd:226$402 ($mux).
Removed top 30 bits (of 32) from mux cell b14.$verific$mux_150$b14.vhd:226$403 ($mux).
Removed top 32 bits (of 33) from port A of cell b14.$verific$sub_168$b14.vhd:243$404 ($sub).
Removed top 1 bits (of 33) from port Y of cell b14.$verific$sub_168$b14.vhd:243$404 ($sub).
Removed top 1 bits (of 33) from port B of cell b14.$verific$sub_168$b14.vhd:243$404 ($sub).
Removed top 31 bits (of 32) from port A of cell b14.$verific$equal_177$b14.vhd:244$407 ($eq).
Removed top 30 bits (of 32) from port B of cell b14.$verific$equal_177$b14.vhd:244$407 ($eq).
Removed top 30 bits (of 32) from port A of cell b14.$verific$equal_178$b14.vhd:245$408 ($eq).
Removed top 30 bits (of 32) from port B of cell b14.$verific$equal_178$b14.vhd:245$408 ($eq).
Removed top 30 bits (of 32) from port A of cell b14.$verific$equal_179$b14.vhd:246$409 ($eq).
Removed top 30 bits (of 32) from port B of cell b14.$verific$equal_179$b14.vhd:246$409 ($eq).
Removed top 2 bits (of 32) from port Y of cell b14.$verific$add_283$b14.vhd:318$415 ($add).
Removed top 2 bits (of 32) from port A of cell b14.$verific$add_283$b14.vhd:318$415 ($add).
Removed top 2 bits (of 32) from port B of cell b14.$verific$add_283$b14.vhd:318$415 ($add).
Removed top 3 bits (of 33) from port Y of cell b14.$verific$sub_365$b14.vhd:358$417 ($sub).
Removed top 3 bits (of 33) from port A of cell b14.$verific$sub_365$b14.vhd:358$417 ($sub).
Removed top 3 bits (of 33) from port B of cell b14.$verific$sub_365$b14.vhd:358$417 ($sub).
Removed top 2 bits (of 7) from port B of cell b14.$auto$fsm_map.cc:77:implement_pattern_cache$709 ($eq).
Removed top 2 bits (of 6) from port B of cell b14.$auto$fsm_map.cc:77:implement_pattern_cache$711 ($eq).
Removed top 2 bits (of 5) from port B of cell b14.$auto$fsm_map.cc:77:implement_pattern_cache$713 ($eq).
Removed top 1 bits (of 2) from port B of cell b14.$auto$fsm_map.cc:215:map_fsm$518 ($eq).
Removed top 3 bits (of 32) from mux cell b14.$verific$mux_698$b14.vhd:502$473 ($mux).
Removed top 2 bits (of 4) from port B of cell b14.$auto$fsm_map.cc:77:implement_pattern_cache$717 ($eq).
Removed top 1 bits (of 3) from port B of cell b14.$auto$fsm_map.cc:77:implement_pattern_cache$721 ($eq).
Removed top 3 bits (of 32) from mux cell b14.$verific$mux_679$b14.vhd:501$459 ($mux).
Removed top 30 bits (of 32) from wire b14.$fsm$oldstate\d.
Removed top 20 bits (of 21) from wire b14.$verific$n10477$270.
Removed top 3 bits (of 32) from wire b14.$verific$n10755$281.
Removed top 3 bits (of 32) from wire b14.$verific$n11178$290.
Removed top 30 bits (of 32) from wire b14.$verific$n11472$295.
Removed top 30 bits (of 32) from wire b14.$verific$n1407$163.
Removed top 30 bits (of 32) from wire b14.$verific$n1441$164.
Removed top 1 bits (of 33) from wire b14.$verific$n184$132.
Removed top 9 bits (of 13) from wire b14.$verific$n318$139.
Removed top 2 bits (of 32) from wire b14.$verific$n4241$209.
Removed top 1 bits (of 3) from wire b14.$verific$n436$145.
Removed top 3 bits (of 33) from wire b14.$verific$n5666$223.
Removed top 1 bits (of 32) from wire b14.$verific$n862$158.
Removed top 1 bits (of 33) from wire b14.$verific$n933$160.
Removed top 3 bits (of 32) from wire b14.reg3.

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 10 unused cells and 58 unused wires.
<suppressed ~11 debug messages>

yosys> alumacc

3.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module b14:
  creating $macc model for $verific$add_21$b14.vhd:86$319 ($add).
  creating $macc model for $verific$add_26$b14.vhd:88$326 ($add).
  creating $macc model for $verific$add_283$b14.vhd:318$415 ($add).
  creating $macc model for $verific$add_31$b14.vhd:90$333 ($add).
  creating $macc model for $verific$add_36$b14.vhd:92$340 ($add).
  creating $macc model for $verific$add_39$b14.vhd:95$346 ($add).
  creating $macc model for $verific$add_44$b14.vhd:96$350 ($add).
  creating $macc model for $verific$add_56$b14.vhd:110$358 ($add).
  creating $macc model for $verific$add_570$b14.vhd:466$422 ($add).
  creating $macc model for $verific$add_61$b14.vhd:113$360 ($add).
  creating $macc model for $verific$add_662$b14.vhd:493$442 ($add).
  creating $macc model for $verific$add_664$b14.vhd:494$444 ($add).
  creating $macc model for $verific$mult_667$b14.vhd:497$448 ($mul).
  creating $macc model for $verific$sub_168$b14.vhd:243$404 ($sub).
  creating $macc model for $verific$sub_365$b14.vhd:358$417 ($sub).
  creating $macc model for $verific$sub_84$b14.vhd:149$373 ($sub).
  creating $macc model for $verific$unary_minus_15$b14.vhd:84$313 ($neg).
  creating $alu model for $macc $verific$unary_minus_15$b14.vhd:84$313.
  creating $alu model for $macc $verific$sub_84$b14.vhd:149$373.
  creating $alu model for $macc $verific$sub_365$b14.vhd:358$417.
  creating $alu model for $macc $verific$sub_168$b14.vhd:243$404.
  creating $alu model for $macc $verific$add_664$b14.vhd:494$444.
  creating $alu model for $macc $verific$add_662$b14.vhd:493$442.
  creating $alu model for $macc $verific$add_61$b14.vhd:113$360.
  creating $alu model for $macc $verific$add_570$b14.vhd:466$422.
  creating $alu model for $macc $verific$add_56$b14.vhd:110$358.
  creating $alu model for $macc $verific$add_44$b14.vhd:96$350.
  creating $alu model for $macc $verific$add_39$b14.vhd:95$346.
  creating $alu model for $macc $verific$add_36$b14.vhd:92$340.
  creating $alu model for $macc $verific$add_31$b14.vhd:90$333.
  creating $alu model for $macc $verific$add_283$b14.vhd:318$415.
  creating $alu model for $macc $verific$add_26$b14.vhd:88$326.
  creating $alu model for $macc $verific$add_21$b14.vhd:86$319.
  creating $macc cell for $verific$mult_667$b14.vhd:497$448: $auto$alumacc.cc:365:replace_macc$832
  creating $alu model for $verific$LessThan_14$b14.vhd:83$312 ($lt): new $alu
  creating $alu model for $verific$LessThan_68$b14.vhd:118$366 ($lt): new $alu
  creating $alu model for $verific$LessThan_78$b14.vhd:138$370 ($lt): merged with $verific$LessThan_68$b14.vhd:118$366.
  creating $alu model for $verific$LessThan_83$b14.vhd:148$372 ($lt): new $alu
  creating $alu model for $verific$LessThan_87$b14.vhd:151$377 ($lt): new $alu
  creating $alu cell for $verific$LessThan_87$b14.vhd:151$377: $auto$alumacc.cc:485:replace_alu$837
  creating $alu cell for $verific$LessThan_83$b14.vhd:148$372: $auto$alumacc.cc:485:replace_alu$848
  creating $alu cell for $verific$LessThan_68$b14.vhd:118$366, $verific$LessThan_78$b14.vhd:138$370: $auto$alumacc.cc:485:replace_alu$859
  creating $alu cell for $verific$LessThan_14$b14.vhd:83$312: $auto$alumacc.cc:485:replace_alu$870
  creating $alu cell for $verific$add_21$b14.vhd:86$319: $auto$alumacc.cc:485:replace_alu$875
  creating $alu cell for $verific$add_26$b14.vhd:88$326: $auto$alumacc.cc:485:replace_alu$878
  creating $alu cell for $verific$add_283$b14.vhd:318$415: $auto$alumacc.cc:485:replace_alu$881
  creating $alu cell for $verific$add_31$b14.vhd:90$333: $auto$alumacc.cc:485:replace_alu$884
  creating $alu cell for $verific$add_36$b14.vhd:92$340: $auto$alumacc.cc:485:replace_alu$887
  creating $alu cell for $verific$add_39$b14.vhd:95$346: $auto$alumacc.cc:485:replace_alu$890
  creating $alu cell for $verific$add_44$b14.vhd:96$350: $auto$alumacc.cc:485:replace_alu$893
  creating $alu cell for $verific$add_570$b14.vhd:466$422: $auto$alumacc.cc:485:replace_alu$896
  creating $alu cell for $verific$add_56$b14.vhd:110$358: $auto$alumacc.cc:485:replace_alu$899
  creating $alu cell for $verific$add_662$b14.vhd:493$442: $auto$alumacc.cc:485:replace_alu$902
  creating $alu cell for $verific$add_61$b14.vhd:113$360: $auto$alumacc.cc:485:replace_alu$905
  creating $alu cell for $verific$add_664$b14.vhd:494$444: $auto$alumacc.cc:485:replace_alu$908
  creating $alu cell for $verific$sub_168$b14.vhd:243$404: $auto$alumacc.cc:485:replace_alu$911
  creating $alu cell for $verific$sub_365$b14.vhd:358$417: $auto$alumacc.cc:485:replace_alu$914
  creating $alu cell for $verific$sub_84$b14.vhd:149$373: $auto$alumacc.cc:485:replace_alu$917
  creating $alu cell for $verific$unary_minus_15$b14.vhd:84$313: $auto$alumacc.cc:485:replace_alu$920
  created 20 $alu and 1 $macc cells.

yosys> opt

3.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
<suppressed ~5 debug messages>

yosys> opt_merge -nomux

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~15 debug messages>

yosys> opt_reduce

3.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 2 unused cells and 10 unused wires.
<suppressed ~3 debug messages>

yosys> opt_expr

3.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.

3.19.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~15 debug messages>

yosys> opt_reduce

3.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..

yosys> opt_expr

3.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.

3.19.16. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.20. Printing statistics.

=== b14 ===

   Number of wires:                249
   Number of wire bits:           4218
   Number of public wires:          15
   Number of public wire bits:     249
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                192
     $adff                           7
     $adffe                          7
     $alu                           20
     $and                           32
     $bmux                          16
     $eq                            25
     $logic_not                      2
     $macc                           1
     $mux                           36
     $ne                             1
     $not                           10
     $or                            12
     $reduce_and                     6
     $reduce_or                     17


yosys> memory -nomap

3.21. Executing MEMORY pass.

yosys> opt_mem

3.21.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.21.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.21.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.21.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.21.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.21.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..

yosys> memory_share

3.21.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.21.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.21.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..

yosys> memory_collect

3.21.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.22. Printing statistics.

=== b14 ===

   Number of wires:                249
   Number of wire bits:           4218
   Number of public wires:          15
   Number of public wire bits:     249
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                192
     $adff                           7
     $adffe                          7
     $alu                           20
     $and                           32
     $bmux                          16
     $eq                            25
     $logic_not                      2
     $macc                           1
     $mux                           36
     $ne                             1
     $not                           10
     $or                            12
     $reduce_and                     6
     $reduce_or                     17


yosys> opt_clean

3.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..

yosys> stat

3.24. Printing statistics.

=== b14 ===

   Number of wires:                249
   Number of wire bits:           4218
   Number of public wires:          15
   Number of public wire bits:     249
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                192
     $adff                           7
     $adffe                          7
     $alu                           20
     $and                           32
     $bmux                          16
     $eq                            25
     $logic_not                      2
     $macc                           1
     $mux                           36
     $ne                             1
     $not                           10
     $or                            12
     $reduce_and                     6
     $reduce_or                     17


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.25. Executing TECHMAP pass (map to technology primitives).

3.25.1. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.25.2. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.25.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $and.
Using extmapper maccmap for cells of type $macc.
  add 3'101 * $auto$wreduce.cc:454:run$774 [0] (3x1 bits, unsigned)
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $or.
Using template $paramod$175e67c02b86e96b1288b9dc100122520d7240d8\_90_alu for cells of type $alu.
Using template $paramod$79fc87901d7fd8aaad689b5406671422f5fa25b9\_80_rs_alu for cells of type $alu.
Using template $paramod$3ef7d3dd227da7627a99c5e5a6a4deb817573e39\_90_alu for cells of type $alu.
Using template $paramod$9e7011427f22271c0942bd67000ef26931352ace\_80_rs_alu for cells of type $alu.
/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:80: Warning: Range [-1:-1] select out of bounds on signal `\C': Setting 1 LSB bits to undef.
/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88: Warning: Range [-1:-1] select out of bounds on signal `\Y': Setting 1 LSB bits to undef.
/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88: Warning: Range [-1:-1] select out of bounds on signal `\S': Setting 1 LSB bits to undef.
/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88: Warning: Ignoring assignment to constant bits:
    old assignment: 1'x = $xor$/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88$2261_Y
    new assignment: { } = { }.
/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:89: Warning: Range [-1:-1] select out of bounds on signal `\S': Setting 1 LSB bits to undef.
/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:89: Warning: Range [-1:-1] select out of bounds on signal `\AA': Setting 1 LSB bits to undef.
Using template $paramod$fc972a7a46956c1788f3cb5257b53c8f1df2d0cc\_90_alu for cells of type $alu.
Using template $paramod$83784888def4f70dbbded37c6d05d2ea1157c936\_90_alu for cells of type $alu.
Using template $paramod$ee932b0f27f4b110ee21c85da6e79a9925243db9\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $bmux.
Using template $paramod$8027eda61d95ddd4d4dd7b5cb21f3830552ebe4e\_80_rs_alu for cells of type $alu.
Using template $paramod$e891e6b399cf52748460a311fafe476815d24bd7\_90_alu for cells of type $alu.
Using template $paramod$63a3f1ffa662be02d3403b533885c56d18ebe02a\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$83fc07d9557d32477a9ece9e4e82efd3bbe82ab8\_80_rs_alu for cells of type $alu.
Using template $paramod$32a7b7b86c07519b7537abc18e96f0331f97914d\_90_alu for cells of type $alu.
Using template $paramod$c32aaa9fd758c6ea2b382f4327253b21b576e597\_90_alu for cells of type $alu.
Using template $paramod$43e6bdbb0e8a6b23dfd3962c0280737d54f8e2be\_80_rs_alu for cells of type $alu.
Using template $paramod$6a42b6fefed750f8a1c58eab59479d960557103c\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000011011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000100 for cells of type $lcu.
No more expansions possible.
<suppressed ~2940 debug messages>

yosys> stat

3.26. Printing statistics.

=== b14 ===

   Number of wires:               1496
   Number of wire bits:          26605
   Number of public wires:          15
   Number of public wire bits:     249
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               8550
     $_AND_                        716
     $_DFFE_PP0P_                  158
     $_DFF_PP0_                     59
     $_MUX_                       5496
     $_NOT_                        473
     $_OR_                         616
     $_XOR_                        763
     adder_carry                   269


yosys> opt

3.27. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
<suppressed ~2878 debug messages>

yosys> opt_merge -nomux

3.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
<suppressed ~4575 debug messages>
Removed a total of 1525 cells.

yosys> opt_muxtree

3.27.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.27.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$6567 ($_DFF_PP0_) from module b14 (D = $verific$n11246$292 [19], Q = \addr [19]).
Adding EN signal on $auto$ff.cc:262:slice$6570 ($_DFFE_PP0P_) from module b14 (D = $verific$n10979$120, Q = \B).
Adding EN signal on $auto$ff.cc:262:slice$6548 ($_DFF_PP0_) from module b14 (D = $verific$n11246$292 [0], Q = \addr [0]).
Adding EN signal on $auto$ff.cc:262:slice$6549 ($_DFF_PP0_) from module b14 (D = $verific$n11246$292 [1], Q = \addr [1]).
Adding EN signal on $auto$ff.cc:262:slice$6550 ($_DFF_PP0_) from module b14 (D = $verific$n11246$292 [2], Q = \addr [2]).
Adding EN signal on $auto$ff.cc:262:slice$6551 ($_DFF_PP0_) from module b14 (D = $verific$n11246$292 [3], Q = \addr [3]).
Adding EN signal on $auto$ff.cc:262:slice$6552 ($_DFF_PP0_) from module b14 (D = $verific$n11246$292 [4], Q = \addr [4]).
Adding EN signal on $auto$ff.cc:262:slice$6553 ($_DFF_PP0_) from module b14 (D = $verific$n11246$292 [5], Q = \addr [5]).
Adding EN signal on $auto$ff.cc:262:slice$6554 ($_DFF_PP0_) from module b14 (D = $verific$n11246$292 [6], Q = \addr [6]).
Adding EN signal on $auto$ff.cc:262:slice$6555 ($_DFF_PP0_) from module b14 (D = $verific$n11246$292 [7], Q = \addr [7]).
Adding EN signal on $auto$ff.cc:262:slice$6556 ($_DFF_PP0_) from module b14 (D = $verific$n11246$292 [8], Q = \addr [8]).
Adding EN signal on $auto$ff.cc:262:slice$6557 ($_DFF_PP0_) from module b14 (D = $verific$n11246$292 [9], Q = \addr [9]).
Adding EN signal on $auto$ff.cc:262:slice$6558 ($_DFF_PP0_) from module b14 (D = $verific$n11246$292 [10], Q = \addr [10]).
Adding EN signal on $auto$ff.cc:262:slice$6559 ($_DFF_PP0_) from module b14 (D = $verific$n11246$292 [11], Q = \addr [11]).
Adding EN signal on $auto$ff.cc:262:slice$6560 ($_DFF_PP0_) from module b14 (D = $verific$n11246$292 [12], Q = \addr [12]).
Adding EN signal on $auto$ff.cc:262:slice$6561 ($_DFF_PP0_) from module b14 (D = $verific$n11246$292 [13], Q = \addr [13]).
Adding EN signal on $auto$ff.cc:262:slice$6562 ($_DFF_PP0_) from module b14 (D = $verific$n11246$292 [14], Q = \addr [14]).
Adding EN signal on $auto$ff.cc:262:slice$6563 ($_DFF_PP0_) from module b14 (D = $verific$n11246$292 [15], Q = \addr [15]).
Adding EN signal on $auto$ff.cc:262:slice$6564 ($_DFF_PP0_) from module b14 (D = $verific$n11246$292 [16], Q = \addr [16]).
Adding EN signal on $auto$ff.cc:262:slice$6565 ($_DFF_PP0_) from module b14 (D = $verific$n11246$292 [17], Q = \addr [17]).
Adding EN signal on $auto$ff.cc:262:slice$6566 ($_DFF_PP0_) from module b14 (D = $verific$n11246$292 [18], Q = \addr [18]).

yosys> opt_clean

3.27.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 353 unused cells and 1059 unused wires.
<suppressed ~354 debug messages>

yosys> opt_expr

3.27.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
<suppressed ~330 debug messages>

3.27.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.27.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.27.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
<suppressed ~525 debug messages>
Removed a total of 175 cells.

yosys> opt_dff

3.27.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$1799 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5900 [2], Q = \reg3 [2]).
Adding EN signal on $auto$ff.cc:262:slice$1798 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5900 [1], Q = \reg3 [1]).
Adding EN signal on $auto$ff.cc:262:slice$1797 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5900 [0], Q = \reg3 [0]).
Adding EN signal on $auto$ff.cc:262:slice$6509 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4932 [25], Q = \reg1 [25]).
Adding EN signal on $auto$ff.cc:262:slice$6508 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4932 [24], Q = \reg1 [24]).
Adding EN signal on $auto$ff.cc:262:slice$6507 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4932 [23], Q = \reg1 [23]).
Adding EN signal on $auto$ff.cc:262:slice$6506 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4932 [22], Q = \reg1 [22]).
Adding EN signal on $auto$ff.cc:262:slice$6505 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4932 [21], Q = \reg1 [21]).
Adding EN signal on $auto$ff.cc:262:slice$6504 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4932 [20], Q = \reg1 [20]).
Adding EN signal on $auto$ff.cc:262:slice$6503 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4932 [19], Q = \reg1 [19]).
Adding EN signal on $auto$ff.cc:262:slice$6502 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4932 [18], Q = \reg1 [18]).
Adding EN signal on $auto$ff.cc:262:slice$6501 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4932 [17], Q = \reg1 [17]).
Adding EN signal on $auto$ff.cc:262:slice$6500 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4932 [16], Q = \reg1 [16]).
Adding EN signal on $auto$ff.cc:262:slice$6499 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4932 [15], Q = \reg1 [15]).
Adding EN signal on $auto$ff.cc:262:slice$6498 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4932 [14], Q = \reg1 [14]).
Adding EN signal on $auto$ff.cc:262:slice$6497 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4932 [13], Q = \reg1 [13]).
Adding EN signal on $auto$ff.cc:262:slice$6496 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4932 [12], Q = \reg1 [12]).
Adding EN signal on $auto$ff.cc:262:slice$6495 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4932 [11], Q = \reg1 [11]).
Adding EN signal on $auto$ff.cc:262:slice$6494 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4932 [10], Q = \reg1 [10]).
Adding EN signal on $auto$ff.cc:262:slice$6493 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4932 [9], Q = \reg1 [9]).
Adding EN signal on $auto$ff.cc:262:slice$6492 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4932 [8], Q = \reg1 [8]).
Adding EN signal on $auto$ff.cc:262:slice$6491 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4932 [7], Q = \reg1 [7]).
Adding EN signal on $auto$ff.cc:262:slice$6490 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4932 [6], Q = \reg1 [6]).
Adding EN signal on $auto$ff.cc:262:slice$6489 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4932 [5], Q = \reg1 [5]).
Adding EN signal on $auto$ff.cc:262:slice$6488 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4932 [4], Q = \reg1 [4]).
Adding EN signal on $auto$ff.cc:262:slice$6487 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4932 [3], Q = \reg1 [3]).
Adding EN signal on $auto$ff.cc:262:slice$6486 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4932 [2], Q = \reg1 [2]).
Adding EN signal on $auto$ff.cc:262:slice$6485 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4932 [1], Q = \reg1 [1]).
Adding EN signal on $auto$ff.cc:262:slice$6484 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4932 [0], Q = \reg1 [0]).
Adding EN signal on $auto$ff.cc:262:slice$6483 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4448 [31], Q = \reg0 [31]).
Adding EN signal on $auto$ff.cc:262:slice$6482 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4448 [30], Q = \reg0 [30]).
Adding EN signal on $auto$ff.cc:262:slice$6481 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4448 [29], Q = \reg0 [29]).
Adding EN signal on $auto$ff.cc:262:slice$6480 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4448 [28], Q = \reg0 [28]).
Adding EN signal on $auto$ff.cc:262:slice$6479 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4448 [27], Q = \reg0 [27]).
Adding EN signal on $auto$ff.cc:262:slice$6478 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4448 [26], Q = \reg0 [26]).
Adding EN signal on $auto$ff.cc:262:slice$6477 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4448 [25], Q = \reg0 [25]).
Adding EN signal on $auto$ff.cc:262:slice$6476 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4448 [24], Q = \reg0 [24]).
Adding EN signal on $auto$ff.cc:262:slice$6475 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4448 [23], Q = \reg0 [23]).
Adding EN signal on $auto$ff.cc:262:slice$6474 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4448 [22], Q = \reg0 [22]).
Adding EN signal on $auto$ff.cc:262:slice$6473 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4448 [21], Q = \reg0 [21]).
Adding EN signal on $auto$ff.cc:262:slice$6472 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4448 [20], Q = \reg0 [20]).
Adding EN signal on $auto$ff.cc:262:slice$6471 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4448 [19], Q = \reg0 [19]).
Adding EN signal on $auto$ff.cc:262:slice$6470 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4448 [18], Q = \reg0 [18]).
Adding EN signal on $auto$ff.cc:262:slice$6469 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4448 [17], Q = \reg0 [17]).
Adding EN signal on $auto$ff.cc:262:slice$6468 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4448 [16], Q = \reg0 [16]).
Adding EN signal on $auto$ff.cc:262:slice$6467 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4448 [15], Q = \reg0 [15]).
Adding EN signal on $auto$ff.cc:262:slice$6466 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4448 [14], Q = \reg0 [14]).
Adding EN signal on $auto$ff.cc:262:slice$6465 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4448 [13], Q = \reg0 [13]).
Adding EN signal on $auto$ff.cc:262:slice$6464 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4448 [12], Q = \reg0 [12]).
Adding EN signal on $auto$ff.cc:262:slice$6463 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4448 [11], Q = \reg0 [11]).
Adding EN signal on $auto$ff.cc:262:slice$6462 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4448 [10], Q = \reg0 [10]).
Adding EN signal on $auto$ff.cc:262:slice$6461 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4448 [9], Q = \reg0 [9]).
Adding EN signal on $auto$ff.cc:262:slice$6460 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4448 [8], Q = \reg0 [8]).
Adding EN signal on $auto$ff.cc:262:slice$6459 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4448 [7], Q = \reg0 [7]).
Adding EN signal on $auto$ff.cc:262:slice$6458 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4448 [6], Q = \reg0 [6]).
Adding EN signal on $auto$ff.cc:262:slice$6457 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4448 [5], Q = \reg0 [5]).
Adding EN signal on $auto$ff.cc:262:slice$6456 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4448 [4], Q = \reg0 [4]).
Adding EN signal on $auto$ff.cc:262:slice$6455 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4448 [3], Q = \reg0 [3]).
Adding EN signal on $auto$ff.cc:262:slice$6454 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4448 [2], Q = \reg0 [2]).
Adding EN signal on $auto$ff.cc:262:slice$6453 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4448 [1], Q = \reg0 [1]).
Adding EN signal on $auto$ff.cc:262:slice$6452 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4448 [0], Q = \reg0 [0]).
Adding EN signal on $auto$ff.cc:262:slice$6547 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5416 [31], Q = \reg2 [31]).
Adding EN signal on $auto$ff.cc:262:slice$6546 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5416 [30], Q = \reg2 [30]).
Adding EN signal on $auto$ff.cc:262:slice$6545 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5416 [29], Q = \reg2 [29]).
Adding EN signal on $auto$ff.cc:262:slice$6544 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5416 [28], Q = \reg2 [28]).
Adding EN signal on $auto$ff.cc:262:slice$6543 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5416 [27], Q = \reg2 [27]).
Adding EN signal on $auto$ff.cc:262:slice$6542 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5416 [26], Q = \reg2 [26]).
Adding EN signal on $auto$ff.cc:262:slice$6541 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5416 [25], Q = \reg2 [25]).
Adding EN signal on $auto$ff.cc:262:slice$6540 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5416 [24], Q = \reg2 [24]).
Adding EN signal on $auto$ff.cc:262:slice$6539 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5416 [23], Q = \reg2 [23]).
Adding EN signal on $auto$ff.cc:262:slice$6538 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5416 [22], Q = \reg2 [22]).
Adding EN signal on $auto$ff.cc:262:slice$6537 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5416 [21], Q = \reg2 [21]).
Adding EN signal on $auto$ff.cc:262:slice$6536 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5416 [20], Q = \reg2 [20]).
Adding EN signal on $auto$ff.cc:262:slice$6535 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5416 [19], Q = \reg2 [19]).
Adding EN signal on $auto$ff.cc:262:slice$6534 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5416 [18], Q = \reg2 [18]).
Adding EN signal on $auto$ff.cc:262:slice$6533 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5416 [17], Q = \reg2 [17]).
Adding EN signal on $auto$ff.cc:262:slice$6532 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5416 [16], Q = \reg2 [16]).
Adding EN signal on $auto$ff.cc:262:slice$6531 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5416 [15], Q = \reg2 [15]).
Adding EN signal on $auto$ff.cc:262:slice$6530 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5416 [14], Q = \reg2 [14]).
Adding EN signal on $auto$ff.cc:262:slice$6529 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5416 [13], Q = \reg2 [13]).
Adding EN signal on $auto$ff.cc:262:slice$6528 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5416 [12], Q = \reg2 [12]).
Adding EN signal on $auto$ff.cc:262:slice$6527 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5416 [11], Q = \reg2 [11]).
Adding EN signal on $auto$ff.cc:262:slice$6526 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5416 [10], Q = \reg2 [10]).
Adding EN signal on $auto$ff.cc:262:slice$6525 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5416 [9], Q = \reg2 [9]).
Adding EN signal on $auto$ff.cc:262:slice$6524 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5416 [8], Q = \reg2 [8]).
Adding EN signal on $auto$ff.cc:262:slice$6523 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5416 [7], Q = \reg2 [7]).
Adding EN signal on $auto$ff.cc:262:slice$6522 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5416 [6], Q = \reg2 [6]).
Adding EN signal on $auto$ff.cc:262:slice$6521 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5416 [5], Q = \reg2 [5]).
Adding EN signal on $auto$ff.cc:262:slice$6520 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5416 [4], Q = \reg2 [4]).
Adding EN signal on $auto$ff.cc:262:slice$6519 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5416 [3], Q = \reg2 [3]).
Adding EN signal on $auto$ff.cc:262:slice$6518 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5416 [2], Q = \reg2 [2]).
Adding EN signal on $auto$ff.cc:262:slice$6517 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5416 [1], Q = \reg2 [1]).
Adding EN signal on $auto$ff.cc:262:slice$6516 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$5416 [0], Q = \reg2 [0]).
Adding EN signal on $auto$ff.cc:262:slice$6515 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4932 [31], Q = \reg1 [31]).
Adding EN signal on $auto$ff.cc:262:slice$6514 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4932 [30], Q = \reg1 [30]).
Adding EN signal on $auto$ff.cc:262:slice$6513 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4932 [29], Q = \reg1 [29]).
Adding EN signal on $auto$ff.cc:262:slice$6512 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4932 [28], Q = \reg1 [28]).
Adding EN signal on $auto$ff.cc:262:slice$6511 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4932 [27], Q = \reg1 [27]).
Adding EN signal on $auto$ff.cc:262:slice$6510 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4932 [26], Q = \reg1 [26]).

yosys> opt_clean

3.27.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 0 unused cells and 828 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.27.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
<suppressed ~2299 debug messages>

3.27.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.27.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.27.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
<suppressed ~10443 debug messages>
Removed a total of 3481 cells.

yosys> opt_dff

3.27.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 0 unused cells and 3324 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.27.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.

3.27.23. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.27.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.27.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.27. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..

yosys> opt_expr

3.27.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.

3.27.30. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
<suppressed ~637 debug messages>

yosys> opt_merge

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_dff

3.28.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$13733 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4932 [0], Q = \reg1 [0]).
Adding EN signal on $auto$ff.cc:262:slice$16900 ($_DFFE_PP0P_) from module b14 (D = $auto$simplemap.cc:309:simplemap_bmux$4448 [0], Q = \reg0 [0]).

yosys> opt_clean

3.28.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 0 unused cells and 13 unused wires.
<suppressed ~1 debug messages>

3.28.5. Rerunning OPT passes. (Removed registers in this run.)

yosys> opt_expr -full

3.28.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
<suppressed ~9 debug messages>

yosys> opt_merge

3.28.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

yosys> opt_dff

3.28.8. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

3.28.10. Finished fast OPT passes.

yosys> memory_map

3.29. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.30. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.

yosys> opt_merge -nomux

3.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_share

3.30.6. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$3017 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$3005
        $auto$simplemap.cc:86:simplemap_bitop$3004

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$3018 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$3007
        $auto$simplemap.cc:86:simplemap_bitop$3006

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$3019 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$3009
        $auto$simplemap.cc:86:simplemap_bitop$3008

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$3020 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$3011
        $auto$simplemap.cc:86:simplemap_bitop$3010


yosys> opt_dff

3.30.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 0 unused cells and 8 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.30.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
<suppressed ~4 debug messages>

3.30.10. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.30.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

yosys> opt_reduce -full

3.30.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.30.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_share

3.30.14. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$3024 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$3007
        $auto$simplemap.cc:86:simplemap_bitop$3005

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$3025 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$3011
        $auto$simplemap.cc:86:simplemap_bitop$3009


yosys> opt_dff

3.30.15. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.30.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
<suppressed ~2 debug messages>

3.30.18. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.30.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

yosys> opt_reduce -full

3.30.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.30.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_share

3.30.22. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$3028 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$3011
        $auto$simplemap.cc:86:simplemap_bitop$3007


yosys> opt_dff

3.30.23. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.30.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
<suppressed ~1 debug messages>

3.30.26. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.30.27. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

yosys> opt_reduce -full

3.30.28. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.30.29. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_share

3.30.30. Executing OPT_SHARE pass.

yosys> opt_dff

3.30.31. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.32. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..

yosys> opt_expr -full

3.30.33. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.

3.30.34. Finished OPT passes. (There is nothing left to do.)

yosys> techmap -map +/techmap.v

3.31. Executing TECHMAP pass (map to technology primitives).

3.31.1. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.31.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
No more expansions possible.
<suppressed ~78 debug messages>

yosys> opt -sat

3.32. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.

yosys> opt_merge -nomux

3.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
<suppressed ~21 debug messages>
Removed a total of 7 cells.

yosys> opt_muxtree

3.32.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.32.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.32.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.32.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.32.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.

3.32.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.32.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.32.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.32.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.32.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.32.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..

yosys> opt_expr

3.32.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.

3.32.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

3.33. Executing ABC pass (technology mapping using ABC).

3.33.1. Summary of detected clock domains:
  68 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$765, arst=\reset, srst={ }
  29 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$22763, arst=\reset, srst={ }
  34 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$22746, arst=\reset, srst={ }
  43 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$19646, arst=\reset, srst={ }
  530 cells in clk=\clock, en={ }, arst=\reset, srst={ }
  706 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$17042, arst=\reset, srst={ }
  641 cells in clk=\clock, en=\state, arst=\reset, srst={ }
  566 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$13889, arst=\reset, srst={ }
  582 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$11322, arst=\reset, srst={ }
  29 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$11226, arst=\reset, srst={ }
  72 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$11087, arst=\reset, srst={ }
  551 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$10463, arst=\reset, srst={ }
  58 cells in clk=\clock, en=$auto$opt_dff.cc:194:make_patterns_logic$10339, arst=\reset, srst={ }

3.33.2. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$765, asynchronously reset by \reset
Extracted 68 gates and 137 wires to a netlist network with 69 inputs and 66 outputs.

3.33.2.1. Executing ABC.

3.33.3. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$22763, asynchronously reset by \reset
Extracted 25 gates and 47 wires to a netlist network with 21 inputs and 8 outputs.

3.33.3.1. Executing ABC.

3.33.4. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$22746, asynchronously reset by \reset
Extracted 30 gates and 57 wires to a netlist network with 25 inputs and 9 outputs.

3.33.4.1. Executing ABC.

3.33.5. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$19646, asynchronously reset by \reset
Extracted 39 gates and 74 wires to a netlist network with 33 inputs and 18 outputs.

3.33.5.1. Executing ABC.

3.33.6. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 498 gates and 667 wires to a netlist network with 167 inputs and 105 outputs.

3.33.6.1. Executing ABC.

3.33.7. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$17042, asynchronously reset by \reset
Extracted 638 gates and 884 wires to a netlist network with 245 inputs and 172 outputs.

3.33.7.1. Executing ABC.

3.33.8. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$23140$lo38, asynchronously reset by \reset
Extracted 641 gates and 780 wires to a netlist network with 138 inputs and 45 outputs.

3.33.8.1. Executing ABC.

3.33.9. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$13889, asynchronously reset by \reset
Extracted 564 gates and 793 wires to a netlist network with 228 inputs and 70 outputs.

3.33.9.1. Executing ABC.

3.33.10. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$11322, asynchronously reset by \reset
Extracted 535 gates and 750 wires to a netlist network with 214 inputs and 102 outputs.

3.33.10.1. Executing ABC.

3.33.11. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$11226, asynchronously reset by \reset
Extracted 27 gates and 48 wires to a netlist network with 20 inputs and 11 outputs.

3.33.11.1. Executing ABC.

3.33.12. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$11087, asynchronously reset by \reset
Extracted 70 gates and 105 wires to a netlist network with 34 inputs and 26 outputs.

3.33.12.1. Executing ABC.

3.33.13. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$10463, asynchronously reset by \reset
Extracted 485 gates and 607 wires to a netlist network with 121 inputs and 69 outputs.

3.33.13.1. Executing ABC.

3.33.14. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10339, asynchronously reset by \reset
Extracted 58 gates and 114 wires to a netlist network with 56 inputs and 48 outputs.

3.33.14.1. Executing ABC.

yosys> abc -dff

3.34. Executing ABC pass (technology mapping using ABC).

3.34.1. Summary of detected clock domains:
  41 cells in clk=\clock, en=$abc$23044$auto$opt_dff.cc:219:make_patterns_logic$22746, arst=\reset, srst={ }
  30 cells in clk=\clock, en=$abc$23009$auto$opt_dff.cc:219:make_patterns_logic$22763, arst=\reset, srst={ }
  48 cells in clk=\clock, en=$abc$26617$auto$opt_dff.cc:219:make_patterns_logic$11226, arst=\reset, srst={ }
  34 cells in clk=\clock, en=$abc$23083$auto$opt_dff.cc:219:make_patterns_logic$19646, arst=\reset, srst={ }
  789 cells in clk=\clock, en=$abc$23140$lo38, arst=\reset, srst={ }
  67 cells in clk=\clock, en=$abc$22876$auto$opt_dff.cc:219:make_patterns_logic$765, arst=\reset, srst={ }
  242 cells in clk=\clock, en=$abc$26752$auto$opt_dff.cc:219:make_patterns_logic$10463, arst=\reset, srst={ }
  92 cells in clk=\clock, en=$abc$26657$auto$opt_dff.cc:219:make_patterns_logic$11087, arst=\reset, srst={ }
  892 cells in clk=\clock, en=$abc$25139$auto$opt_dff.cc:219:make_patterns_logic$13889, arst=\reset, srst={ }
  862 cells in clk=\clock, en=$abc$23488$auto$opt_dff.cc:219:make_patterns_logic$17042, arst=\reset, srst={ }
  689 cells in clk=\clock, en=$abc$25882$auto$opt_dff.cc:219:make_patterns_logic$11322, arst=\reset, srst={ }
  295 cells in clk=\clock, en={ }, arst=\reset, srst={ }
  153 cells in clk=\clock, en=$abc$26938$auto$opt_dff.cc:194:make_patterns_logic$10339, arst=\reset, srst={ }

3.34.2. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$23044$auto$opt_dff.cc:219:make_patterns_logic$22746, asynchronously reset by \reset
Extracted 37 gates and 65 wires to a netlist network with 28 inputs and 8 outputs.

3.34.2.1. Executing ABC.

3.34.3. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$23009$auto$opt_dff.cc:219:make_patterns_logic$22763, asynchronously reset by \reset
Extracted 30 gates and 49 wires to a netlist network with 19 inputs and 7 outputs.

3.34.3.1. Executing ABC.

3.34.4. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$26617$auto$opt_dff.cc:219:make_patterns_logic$11226, asynchronously reset by \reset
Extracted 46 gates and 71 wires to a netlist network with 25 inputs and 16 outputs.

3.34.4.1. Executing ABC.

3.34.5. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$23083$auto$opt_dff.cc:219:make_patterns_logic$19646, asynchronously reset by \reset
Extracted 30 gates and 47 wires to a netlist network with 17 inputs and 10 outputs.

3.34.5.1. Executing ABC.

3.34.6. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$23140$lo38, asynchronously reset by \reset
Extracted 789 gates and 928 wires to a netlist network with 139 inputs and 47 outputs.

3.34.6.1. Executing ABC.

3.34.7. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$22876$auto$opt_dff.cc:219:make_patterns_logic$765, asynchronously reset by \reset
Extracted 67 gates and 136 wires to a netlist network with 69 inputs and 34 outputs.

3.34.7.1. Executing ABC.

3.34.8. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$26752$auto$opt_dff.cc:219:make_patterns_logic$10463, asynchronously reset by \reset
Extracted 178 gates and 299 wires to a netlist network with 121 inputs and 64 outputs.

3.34.8.1. Executing ABC.

3.34.9. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$26657$auto$opt_dff.cc:219:make_patterns_logic$11087, asynchronously reset by \reset
Extracted 90 gates and 129 wires to a netlist network with 39 inputs and 27 outputs.

3.34.9.1. Executing ABC.

3.34.10. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$25139$auto$opt_dff.cc:219:make_patterns_logic$13889, asynchronously reset by \reset
Extracted 842 gates and 1081 wires to a netlist network with 239 inputs and 157 outputs.

3.34.10.1. Executing ABC.

3.34.11. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$23488$auto$opt_dff.cc:219:make_patterns_logic$17042, asynchronously reset by \reset
Extracted 811 gates and 1049 wires to a netlist network with 238 inputs and 144 outputs.

3.34.11.1. Executing ABC.

3.34.12. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$25882$auto$opt_dff.cc:219:make_patterns_logic$11322, asynchronously reset by \reset
Extracted 669 gates and 870 wires to a netlist network with 201 inputs and 74 outputs.

3.34.12.1. Executing ABC.

3.34.13. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 263 gates and 359 wires to a netlist network with 96 inputs and 106 outputs.

3.34.13.1. Executing ABC.

3.34.14. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$26938$auto$opt_dff.cc:194:make_patterns_logic$10339, asynchronously reset by \reset
Extracted 151 gates and 256 wires to a netlist network with 105 inputs and 26 outputs.

3.34.14.1. Executing ABC.

yosys> abc -dff

3.35. Executing ABC pass (technology mapping using ABC).

3.35.1. Summary of detected clock domains:
  43 cells in clk=\clock, en=$abc$27038$abc$23044$auto$opt_dff.cc:219:make_patterns_logic$22746, arst=\reset, srst={ }
  29 cells in clk=\clock, en=$abc$27080$abc$23009$auto$opt_dff.cc:219:make_patterns_logic$22763, arst=\reset, srst={ }
  52 cells in clk=\clock, en=$abc$27113$abc$26617$auto$opt_dff.cc:219:make_patterns_logic$11226, arst=\reset, srst={ }
  37 cells in clk=\clock, en=$abc$27161$abc$23083$auto$opt_dff.cc:219:make_patterns_logic$19646, arst=\reset, srst={ }
  850 cells in clk=\clock, en=$abc$30849$lo26, arst=\reset, srst={ }
  246 cells in clk=\clock, en=$abc$28144$abc$26752$auto$opt_dff.cc:219:make_patterns_logic$10463, arst=\reset, srst={ }
  90 cells in clk=\clock, en=$abc$28322$abc$26657$auto$opt_dff.cc:219:make_patterns_logic$11087, arst=\reset, srst={ }
  830 cells in clk=\clock, en=$abc$28414$abc$25139$auto$opt_dff.cc:219:make_patterns_logic$13889, arst=\reset, srst={ }
  877 cells in clk=\clock, en=$abc$29288$abc$23488$auto$opt_dff.cc:219:make_patterns_logic$17042, arst=\reset, srst={ }
  790 cells in clk=\clock, en=$abc$30132$abc$25882$auto$opt_dff.cc:219:make_patterns_logic$11322, arst=\reset, srst={ }
  67 cells in clk=\clock, en=$abc$28044$abc$22876$auto$opt_dff.cc:219:make_patterns_logic$765, arst=\reset, srst={ }
  267 cells in clk=\clock, en={ }, arst=\reset, srst={ }
  168 cells in clk=\clock, en=$abc$31108$abc$26938$auto$opt_dff.cc:194:make_patterns_logic$10339, arst=\reset, srst={ }

3.35.2. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$27038$abc$23044$auto$opt_dff.cc:219:make_patterns_logic$22746, asynchronously reset by \reset
Extracted 39 gates and 65 wires to a netlist network with 26 inputs and 7 outputs.

3.35.2.1. Executing ABC.

3.35.3. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$27080$abc$23009$auto$opt_dff.cc:219:make_patterns_logic$22763, asynchronously reset by \reset
Extracted 29 gates and 47 wires to a netlist network with 18 inputs and 5 outputs.

3.35.3.1. Executing ABC.

3.35.4. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$27113$abc$26617$auto$opt_dff.cc:219:make_patterns_logic$11226, asynchronously reset by \reset
Extracted 52 gates and 78 wires to a netlist network with 26 inputs and 20 outputs.

3.35.4.1. Executing ABC.

3.35.5. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$27161$abc$23083$auto$opt_dff.cc:219:make_patterns_logic$19646, asynchronously reset by \reset
Extracted 31 gates and 53 wires to a netlist network with 22 inputs and 14 outputs.

3.35.5.1. Executing ABC.

3.35.6. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$30849$lo26, asynchronously reset by \reset
Extracted 850 gates and 995 wires to a netlist network with 145 inputs and 47 outputs.

3.35.6.1. Executing ABC.

3.35.7. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$28144$abc$26752$auto$opt_dff.cc:219:make_patterns_logic$10463, asynchronously reset by \reset
Extracted 182 gates and 302 wires to a netlist network with 120 inputs and 68 outputs.

3.35.7.1. Executing ABC.

3.35.8. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$28322$abc$26657$auto$opt_dff.cc:219:make_patterns_logic$11087, asynchronously reset by \reset
Extracted 84 gates and 125 wires to a netlist network with 41 inputs and 24 outputs.

3.35.8.1. Executing ABC.

3.35.9. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$28414$abc$25139$auto$opt_dff.cc:219:make_patterns_logic$13889, asynchronously reset by \reset
Extracted 807 gates and 1011 wires to a netlist network with 204 inputs and 126 outputs.

3.35.9.1. Executing ABC.

3.35.10. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$29288$abc$23488$auto$opt_dff.cc:219:make_patterns_logic$17042, asynchronously reset by \reset
Extracted 826 gates and 1077 wires to a netlist network with 251 inputs and 126 outputs.

3.35.10.1. Executing ABC.

3.35.11. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$30132$abc$25882$auto$opt_dff.cc:219:make_patterns_logic$11322, asynchronously reset by \reset
Extracted 747 gates and 961 wires to a netlist network with 214 inputs and 119 outputs.

3.35.11.1. Executing ABC.

3.35.12. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$28044$abc$22876$auto$opt_dff.cc:219:make_patterns_logic$765, asynchronously reset by \reset
Extracted 67 gates and 136 wires to a netlist network with 69 inputs and 34 outputs.

3.35.12.1. Executing ABC.

3.35.13. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 235 gates and 316 wires to a netlist network with 81 inputs and 90 outputs.

3.35.13.1. Executing ABC.

3.35.14. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$31108$abc$26938$auto$opt_dff.cc:194:make_patterns_logic$10339, asynchronously reset by \reset
Extracted 166 gates and 273 wires to a netlist network with 107 inputs and 25 outputs.

3.35.14.1. Executing ABC.

yosys> abc -dff

3.36. Executing ABC pass (technology mapping using ABC).

3.36.1. Summary of detected clock domains:
  43 cells in clk=\clock, en=$abc$31293$abc$27038$abc$23044$auto$opt_dff.cc:219:make_patterns_logic$22746, arst=\reset, srst={ }
  30 cells in clk=\clock, en=$abc$31332$abc$27080$abc$23009$auto$opt_dff.cc:219:make_patterns_logic$22763, arst=\reset, srst={ }
  38 cells in clk=\clock, en=$abc$31363$abc$27113$abc$26617$auto$opt_dff.cc:219:make_patterns_logic$11226, arst=\reset, srst={ }
  35 cells in clk=\clock, en=$abc$31416$abc$27161$abc$23083$auto$opt_dff.cc:219:make_patterns_logic$19646, arst=\reset, srst={ }
  239 cells in clk=\clock, en=$abc$32348$abc$28144$abc$26752$auto$opt_dff.cc:219:make_patterns_logic$10463, arst=\reset, srst={ }
  88 cells in clk=\clock, en=$abc$32527$abc$28322$abc$26657$auto$opt_dff.cc:219:make_patterns_logic$11087, arst=\reset, srst={ }
  911 cells in clk=\clock, en=$abc$32609$abc$28414$abc$25139$auto$opt_dff.cc:219:make_patterns_logic$13889, arst=\reset, srst={ }
  855 cells in clk=\clock, en=$abc$33388$abc$29288$abc$23488$auto$opt_dff.cc:219:make_patterns_logic$17042, arst=\reset, srst={ }
  278 cells in clk=\clock, en={ }, arst=\reset, srst={ }
  881 cells in clk=\clock, en=$abc$35171$lo15, arst=\reset, srst={ }
  769 cells in clk=\clock, en=$abc$34256$abc$30132$abc$25882$auto$opt_dff.cc:219:make_patterns_logic$11322, arst=\reset, srst={ }
  67 cells in clk=\clock, en=$abc$35071$abc$28044$abc$22876$auto$opt_dff.cc:219:make_patterns_logic$765, arst=\reset, srst={ }
  165 cells in clk=\clock, en=$abc$35411$abc$31108$abc$26938$auto$opt_dff.cc:194:make_patterns_logic$10339, arst=\reset, srst={ }

3.36.2. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$31293$abc$27038$abc$23044$auto$opt_dff.cc:219:make_patterns_logic$22746, asynchronously reset by \reset
Extracted 39 gates and 65 wires to a netlist network with 26 inputs and 9 outputs.

3.36.2.1. Executing ABC.

3.36.3. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$31332$abc$27080$abc$23009$auto$opt_dff.cc:219:make_patterns_logic$22763, asynchronously reset by \reset
Extracted 30 gates and 49 wires to a netlist network with 19 inputs and 6 outputs.

3.36.3.1. Executing ABC.

3.36.4. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$31363$abc$27113$abc$26617$auto$opt_dff.cc:219:make_patterns_logic$11226, asynchronously reset by \reset
Extracted 38 gates and 61 wires to a netlist network with 23 inputs and 10 outputs.

3.36.4.1. Executing ABC.

3.36.5. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$31416$abc$27161$abc$23083$auto$opt_dff.cc:219:make_patterns_logic$19646, asynchronously reset by \reset
Extracted 31 gates and 50 wires to a netlist network with 19 inputs and 9 outputs.

3.36.5.1. Executing ABC.

3.36.6. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$32348$abc$28144$abc$26752$auto$opt_dff.cc:219:make_patterns_logic$10463, asynchronously reset by \reset
Extracted 175 gates and 295 wires to a netlist network with 120 inputs and 66 outputs.

3.36.6.1. Executing ABC.

3.36.7. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$32527$abc$28322$abc$26657$auto$opt_dff.cc:219:make_patterns_logic$11087, asynchronously reset by \reset
Extracted 82 gates and 127 wires to a netlist network with 45 inputs and 23 outputs.

3.36.7.1. Executing ABC.

3.36.8. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$32609$abc$28414$abc$25139$auto$opt_dff.cc:219:make_patterns_logic$13889, asynchronously reset by \reset
Extracted 847 gates and 1070 wires to a netlist network with 223 inputs and 192 outputs.

3.36.8.1. Executing ABC.

3.36.9. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$33388$abc$29288$abc$23488$auto$opt_dff.cc:219:make_patterns_logic$17042, asynchronously reset by \reset
Extracted 825 gates and 1075 wires to a netlist network with 250 inputs and 97 outputs.

3.36.9.1. Executing ABC.

3.36.10. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 246 gates and 337 wires to a netlist network with 91 inputs and 100 outputs.

3.36.10.1. Executing ABC.

3.36.11. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$37752$lo29, asynchronously reset by \reset
Extracted 881 gates and 1022 wires to a netlist network with 141 inputs and 45 outputs.

3.36.11.1. Executing ABC.

3.36.12. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$34256$abc$30132$abc$25882$auto$opt_dff.cc:219:make_patterns_logic$11322, asynchronously reset by \reset
Extracted 744 gates and 954 wires to a netlist network with 210 inputs and 87 outputs.

3.36.12.1. Executing ABC.

3.36.13. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$35071$abc$28044$abc$22876$auto$opt_dff.cc:219:make_patterns_logic$765, asynchronously reset by \reset
Extracted 67 gates and 136 wires to a netlist network with 69 inputs and 34 outputs.

3.36.13.1. Executing ABC.

3.36.14. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$35411$abc$31108$abc$26938$auto$opt_dff.cc:194:make_patterns_logic$10339, asynchronously reset by \reset
Extracted 163 gates and 269 wires to a netlist network with 106 inputs and 27 outputs.

3.36.14.1. Executing ABC.

yosys> opt_ffinv

3.37. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt -sat

3.38. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.38.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
<suppressed ~99 debug messages>

yosys> opt_merge -nomux

3.38.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
<suppressed ~228 debug messages>
Removed a total of 76 cells.

yosys> opt_muxtree

3.38.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.38.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.38.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.38.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.38.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 1 unused cells and 19275 unused wires.
<suppressed ~4 debug messages>

yosys> opt_expr

3.38.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.

3.38.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.38.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.38.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.38.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.38.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.38.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..

yosys> opt_expr

3.38.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.

3.38.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /home/users/temp_dir/yosys_yKVelS/abc_tmp_1.scr

3.39. Executing ABC pass (technology mapping using ABC).

3.39.1. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Extracted 3974 gates and 4350 wires to a netlist network with 376 inputs and 410 outputs.

3.39.1.1. Executing ABC.
DE:   #PIs = 376  #Luts =  1266  Max Lvl =  33  Avg Lvl =  10.19  [   0.14 sec. at Pass 0]
DE:   #PIs = 376  #Luts =   983  Max Lvl =  35  Avg Lvl =  11.54  [   5.98 sec. at Pass 1]
DE:   #PIs = 376  #Luts =   962  Max Lvl =  36  Avg Lvl =  12.37  [   1.04 sec. at Pass 2]
DE:   #PIs = 376  #Luts =   927  Max Lvl =  34  Avg Lvl =  11.34  [   2.81 sec. at Pass 3]
DE:   #PIs = 376  #Luts =   902  Max Lvl =  33  Avg Lvl =  11.18  [   1.49 sec. at Pass 4]
DE:   #PIs = 376  #Luts =   875  Max Lvl =  32  Avg Lvl =  11.19  [   3.78 sec. at Pass 5]
DE:   #PIs = 376  #Luts =   873  Max Lvl =  28  Avg Lvl =  10.40  [   1.43 sec. at Pass 6]
DE:   #PIs = 376  #Luts =   856  Max Lvl =  25  Avg Lvl =   9.70  [   3.25 sec. at Pass 7]
DE:   #PIs = 376  #Luts =   846  Max Lvl =  26  Avg Lvl =   9.46  [   1.29 sec. at Pass 8]
DE:   #PIs = 376  #Luts =   836  Max Lvl =  26  Avg Lvl =   9.46  [   2.86 sec. at Pass 9]
DE:   #PIs = 376  #Luts =   826  Max Lvl =  23  Avg Lvl =   9.17  [   1.21 sec. at Pass 10]
DE:   #PIs = 376  #Luts =   817  Max Lvl =  21  Avg Lvl =   9.20  [   2.73 sec. at Pass 11]
DE:   #PIs = 376  #Luts =   812  Max Lvl =  23  Avg Lvl =   9.54  [   1.41 sec. at Pass 12]
DE:   #PIs = 376  #Luts =   798  Max Lvl =  22  Avg Lvl =   9.47  [   2.80 sec. at Pass 13]
DE:   #PIs = 376  #Luts =   797  Max Lvl =  21  Avg Lvl =   9.22  [   1.38 sec. at Pass 14]
DE:   #PIs = 376  #Luts =   790  Max Lvl =  21  Avg Lvl =   8.72  [   2.23 sec. at Pass 15]
DE:   #PIs = 376  #Luts =   789  Max Lvl =  21  Avg Lvl =   8.80  [   1.27 sec. at Pass 16]
DE:   #PIs = 376  #Luts =   780  Max Lvl =  19  Avg Lvl =   8.50  [   1.98 sec. at Pass 17]
DE:   #PIs = 376  #Luts =   776  Max Lvl =  23  Avg Lvl =   9.59  [   1.06 sec. at Pass 18]
DE:   #PIs = 376  #Luts =   766  Max Lvl =  22  Avg Lvl =   9.46  [   1.67 sec. at Pass 19]
DE:   #PIs = 376  #Luts =   762  Max Lvl =  25  Avg Lvl =  10.06  [   0.92 sec. at Pass 20]
DE:   #PIs = 376  #Luts =   761  Max Lvl =  22  Avg Lvl =   9.67  [   1.57 sec. at Pass 21]
DE:   #PIs = 376  #Luts =   761  Max Lvl =  22  Avg Lvl =   9.67  [   0.99 sec. at Pass 22]
DE:   #PIs = 376  #Luts =   759  Max Lvl =  23  Avg Lvl =   9.25  [   1.80 sec. at Pass 23]
DE:   #PIs = 376  #Luts =   756  Max Lvl =  23  Avg Lvl =   9.60  [   0.98 sec. at Pass 24]
DE:   #PIs = 376  #Luts =   752  Max Lvl =  26  Avg Lvl =  10.28  [   2.05 sec. at Pass 25]
DE:   #PIs = 376  #Luts =   750  Max Lvl =  24  Avg Lvl =  10.08  [   1.19 sec. at Pass 26]
DE:   #PIs = 376  #Luts =   745  Max Lvl =  23  Avg Lvl =   9.80  [   2.19 sec. at Pass 27]
DE:   #PIs = 376  #Luts =   744  Max Lvl =  24  Avg Lvl =   9.93  [   1.28 sec. at Pass 28]
DE:   #PIs = 376  #Luts =   734  Max Lvl =  24  Avg Lvl =   9.92  [   1.74 sec. at Pass 29]
DE:   #PIs = 376  #Luts =   734  Max Lvl =  24  Avg Lvl =   9.92  [   1.12 sec. at Pass 30]
DE:   #PIs = 376  #Luts =   727  Max Lvl =  23  Avg Lvl =   9.81  [   1.77 sec. at Pass 31]
DE:   #PIs = 376  #Luts =   727  Max Lvl =  23  Avg Lvl =   9.81  [   1.10 sec. at Pass 32]
DE:   #PIs = 376  #Luts =   727  Max Lvl =  23  Avg Lvl =   9.81  [   1.60 sec. at Pass 33]
DE:   #PIs = 376  #Luts =   724  Max Lvl =  26  Avg Lvl =  10.35  [   1.03 sec. at Pass 34]
DE:   #PIs = 376  #Luts =   721  Max Lvl =  23  Avg Lvl =   9.91  [   1.51 sec. at Pass 35]
DE:   #PIs = 376  #Luts =   720  Max Lvl =  25  Avg Lvl =  10.22  [   0.98 sec. at Pass 36]
DE:   #PIs = 376  #Luts =   718  Max Lvl =  24  Avg Lvl =  10.07  [   1.55 sec. at Pass 37]
DE:   #PIs = 376  #Luts =   716  Max Lvl =  25  Avg Lvl =   9.95  [   0.91 sec. at Pass 38]
DE:   #PIs = 376  #Luts =   716  Max Lvl =  25  Avg Lvl =   9.95  [   1.26 sec. at Pass 39]
DE:   #PIs = 376  #Luts =   716  Max Lvl =  25  Avg Lvl =   9.95  [   0.84 sec. at Pass 40]
DE:   #PIs = 376  #Luts =   716  Max Lvl =  25  Avg Lvl =   9.95  [   1.31 sec. at Pass 41]
DE:   #PIs = 376  #Luts =   716  Max Lvl =  24  Avg Lvl =   9.95  [   0.29 sec. at Pass 42]

yosys> opt

3.40. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.40.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.

yosys> opt_merge -nomux

3.40.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

yosys> opt_muxtree

3.40.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.40.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.40.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_dff

3.40.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.40.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 0 unused cells and 4271 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.40.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.

3.40.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.40.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.40.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.40.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_dff

3.40.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.40.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..

yosys> opt_expr

3.40.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.

3.40.16. Finished OPT passes. (There is nothing left to do.)

yosys> opt_ffinv

3.41. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> stat

3.42. Printing statistics.

=== b14 ===

   Number of wires:                659
   Number of wire bits:           1671
   Number of public wires:          13
   Number of public wire bits:     215
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1131
     $_DFFE_PP0P_                  178
     $_DFF_PP0_                     37
     $lut                          685
     adder_carry                   231


yosys> shregmap -minlen 8 -maxlen 20

3.43. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.44. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.45. Printing statistics.

=== b14 ===

   Number of wires:                659
   Number of wire bits:           1671
   Number of public wires:          13
   Number of public wire bits:     215
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1131
     $_DFFE_PP0P_                  178
     $_DFF_PP0_                     37
     $lut                          685
     adder_carry                   231


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.46. Executing TECHMAP pass (map to technology primitives).

3.46.1. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.46.2. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.46.3. Continuing TECHMAP pass.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using extmapper simplemap for cells of type $lut.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~1251 debug messages>

yosys> opt_expr -mux_undef

3.47. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
<suppressed ~12754 debug messages>

yosys> simplemap

3.48. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.49. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.

yosys> opt_merge

3.50. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
<suppressed ~6141 debug messages>
Removed a total of 2047 cells.

yosys> opt_dff -nodffe -nosdff

3.51. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.52. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 0 unused cells and 2598 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.53. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.53.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
<suppressed ~544 debug messages>

yosys> opt_merge -nomux

3.53.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

yosys> opt_muxtree

3.53.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.53.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.53.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.53.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.53.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 0 unused cells and 167 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.53.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.

3.53.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.53.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.53.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.53.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.53.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.53.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..

yosys> opt_expr

3.53.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.

3.53.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /home/users/temp_dir/yosys_yKVelS/abc_tmp_2.scr

3.54. Executing ABC pass (technology mapping using ABC).

3.54.1. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Extracted 2289 gates and 2666 wires to a netlist network with 375 inputs and 380 outputs.

3.54.1.1. Executing ABC.
DE:   #PIs = 375  #Luts =   687  Max Lvl =  24  Avg Lvl =   9.94  [   0.10 sec. at Pass 0]
DE:   #PIs = 375  #Luts =   684  Max Lvl =  25  Avg Lvl =  10.21  [   3.78 sec. at Pass 1]
DE:   #PIs = 375  #Luts =   684  Max Lvl =  25  Avg Lvl =  10.21  [   0.75 sec. at Pass 2]
DE:   #PIs = 375  #Luts =   682  Max Lvl =  24  Avg Lvl =   9.89  [   1.27 sec. at Pass 3]
DE:   #PIs = 375  #Luts =   682  Max Lvl =  24  Avg Lvl =   9.89  [   0.98 sec. at Pass 4]
DE:   #PIs = 375  #Luts =   680  Max Lvl =  26  Avg Lvl =  10.27  [   1.47 sec. at Pass 5]
DE:   #PIs = 375  #Luts =   679  Max Lvl =  24  Avg Lvl =   9.87  [   0.88 sec. at Pass 6]
DE:   #PIs = 375  #Luts =   676  Max Lvl =  23  Avg Lvl =   9.81  [   1.23 sec. at Pass 7]
DE:   #PIs = 375  #Luts =   671  Max Lvl =  24  Avg Lvl =  10.00  [   0.87 sec. at Pass 8]
DE:   #PIs = 375  #Luts =   668  Max Lvl =  24  Avg Lvl =  10.02  [   1.72 sec. at Pass 9]
DE:   #PIs = 375  #Luts =   668  Max Lvl =  24  Avg Lvl =  10.02  [   1.06 sec. at Pass 10]
DE:   #PIs = 375  #Luts =   665  Max Lvl =  24  Avg Lvl =  10.02  [   1.51 sec. at Pass 11]
DE:   #PIs = 375  #Luts =   665  Max Lvl =  24  Avg Lvl =  10.02  [   0.93 sec. at Pass 12]
DE:   #PIs = 375  #Luts =   665  Max Lvl =  24  Avg Lvl =  10.02  [   1.32 sec. at Pass 13]
DE:   #PIs = 375  #Luts =   665  Max Lvl =  24  Avg Lvl =  10.02  [   0.73 sec. at Pass 14]
DE:   #PIs = 375  #Luts =   665  Max Lvl =  24  Avg Lvl =  10.02  [   0.22 sec. at Pass 15]

yosys> opt

3.55. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.55.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.

yosys> opt_merge -nomux

3.55.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.55.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.55.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.55.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_dff

3.55.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.55.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 0 unused cells and 2250 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.55.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.

3.55.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.55.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.55.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.55.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_dff

3.55.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.55.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..

yosys> opt_expr

3.55.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.

3.55.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.56. Executing HIERARCHY pass (managing design hierarchy).

3.56.1. Analyzing design hierarchy..
Top module:  \b14

3.56.2. Analyzing design hierarchy..
Top module:  \b14
Removed 0 unused modules.

yosys> stat

3.57. Printing statistics.

=== b14 ===

   Number of wires:                639
   Number of wire bits:           1651
   Number of public wires:          13
   Number of public wire bits:     215
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1111
     $lut                          665
     adder_carry                   231
     dffsre                        215


yosys> opt_clean -purge

3.58. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..

yosys> write_verilog -noattr -nohex synthesized.v

3.59. Executing Verilog backend.

yosys> bmuxmap

3.59.1. Executing BMUXMAP pass.

yosys> demuxmap

3.59.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\b14'.

Warnings: 5 unique messages, 6 total
End of script. Logfile hash: 57ca66c385, CPU: user 18.25s system 0.45s, MEM: 62.66 MB peak
Yosys 0.17+76 (git sha1 035496b50, gcc 9.1.0 -fPIC -Os)
Time spent: 98% 6x abc (964 sec), 0% 53x opt_expr (5 sec), ...
real 122.82
user 894.12
sys 86.81
