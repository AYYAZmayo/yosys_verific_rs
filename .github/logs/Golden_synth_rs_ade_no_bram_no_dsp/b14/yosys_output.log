
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.49
 Yosys 0.18+10 (git sha1 7a7a25778, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 05:39:28 2022.

yosys> verilog_defaults -add -I.

yosys> read -vhdl b14.vhd

yosys> verific -vhdl b14.vhd

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 05:39:28 2022.
VERIFIC-INFO [VHDL-1504] default VHDL library search path is now "/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008"
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'b14.vhd'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.standard' from file '/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/standard.vdb'
VERIFIC-INFO [VHDL-1012] b14.vhd:1: analyzing entity 'b14'
VERIFIC-INFO [VHDL-1010] b14.vhd:11: analyzing architecture 'behav'

yosys> synth_rs -top b14 -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.58

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\RS_DSP2_MULT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_sim'.
Generating RTLIL representation for module `\dsp_t1_20x18x64'.
Generating RTLIL representation for module `\dsp_t1_10x9x32'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top b14

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VHDL-1067] b14.vhd:1: processing 'b14(BEHAV)'
VERIFIC-INFO [VHDL-1172] b14.vhd:478: 'others' clause is never selected
Importing module b14.

3.3.1. Analyzing design hierarchy..
Top module:  \b14

3.3.2. Analyzing design hierarchy..
Top module:  \b14
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.4.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.4.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
<suppressed ~26 debug messages>

yosys> bmuxmap

3.5. Executing BMUXMAP pass.

yosys> demuxmap

3.6. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> flatten

3.7. Executing FLATTEN pass (flatten design).

yosys> bmuxmap

3.8. Executing BMUXMAP pass.

yosys> demuxmap

3.9. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> tribuf -logic

3.10. Executing TRIBUF pass.

yosys> deminout

3.11. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
<suppressed ~62 debug messages>

yosys> opt_clean

3.13. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 13 unused cells and 211 unused wires.
<suppressed ~60 debug messages>

yosys> check

3.14. Executing CHECK pass (checking for obvious problems).
Checking module b14...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.15. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.15.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
<suppressed ~1 debug messages>

yosys> opt_merge -nomux

3.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.15.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $verific$i684$b14.vhd:501$461.
    dead port 2/2 on $mux $verific$mux_672$b14.vhd:501$452.
    dead port 2/2 on $mux $verific$mux_685$b14.vhd:501$463.
Removed 3 multiplexer ports.
<suppressed ~24 debug messages>

yosys> opt_reduce

3.15.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
    New ctrl vector for $pmux cell $verific$select_746$b14.vhd:486$414: { $verific$n2255$45 $auto$opt_reduce.cc:134:opt_pmux$716 }
    New ctrl vector for $pmux cell $verific$select_750$b14.vhd:486$355: { $verific$n2256$46 $auto$opt_reduce.cc:134:opt_pmux$718 }
    New ctrl vector for $pmux cell $verific$select_751$b14.vhd:486$432: { $verific$n2257$47 $auto$opt_reduce.cc:134:opt_pmux$720 }
    New ctrl vector for $pmux cell $verific$select_752$b14.vhd:486$433: { $verific$n2258$48 $auto$opt_reduce.cc:134:opt_pmux$722 }
  Optimizing cells in module \b14.
Performed a total of 4 changes.

yosys> opt_merge

3.15.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

yosys> opt_dff -nodffe -nosdff

3.15.6. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $verific$wr_reg$b14.vhd:505$498 ($aldff) from module b14.
Changing const-value async load to async reset on $verific$state_reg$b14.vhd:505$500 ($aldff) from module b14.
Changing const-value async load to async reset on $verific$reg3_reg$b14.vhd:505$495 ($aldff) from module b14.
Changing const-value async load to async reset on $verific$reg2_reg$b14.vhd:505$494 ($aldff) from module b14.
Changing const-value async load to async reset on $verific$reg1_reg$b14.vhd:505$493 ($aldff) from module b14.
Changing const-value async load to async reset on $verific$reg0_reg$b14.vhd:505$492 ($aldff) from module b14.
Changing const-value async load to async reset on $verific$rd_reg$b14.vhd:505$497 ($aldff) from module b14.
Changing const-value async load to async reset on $verific$datao_reg$b14.vhd:505$499 ($aldff) from module b14.
Changing const-value async load to async reset on $verific$d_reg$b14.vhd:505$490 ($aldff) from module b14.
Changing const-value async load to async reset on $verific$addr_reg$b14.vhd:505$496 ($aldff) from module b14.
Changing const-value async load to async reset on $verific$IR_reg$b14.vhd:505$489 ($aldff) from module b14.
Changing const-value async load to async reset on $verific$B_reg$b14.vhd:505$491 ($aldff) from module b14.

yosys> opt_clean

3.15.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.15.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
<suppressed ~4 debug messages>

3.15.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.15.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

yosys> opt_reduce

3.15.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.15.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.15.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.15.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..

yosys> opt_expr

3.15.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.

3.15.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

3.16. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.16.1. Executing FSM_DETECT pass (finding FSMs in design).
Found FSM state register b14.d.

yosys> fsm_extract

3.16.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\d' from module `\b14'.
  found $adff cell for state register: $verific$d_reg$b14.vhd:505$490
  root of input selection tree: $verific$n11472$295
  found reset state: 0 (from async reset)
  found ctrl input: \state
  found ctrl input: $verific$n341$141 [0]
  found ctrl input: $verific$n10346$112
  found ctrl input: $verific$n1405$39
  found ctrl input: $verific$n1440$40
  found ctrl input: $verific$n1474$41
  found ctrl input: $verific$n1475$42
  found ctrl input: $verific$n1476$43
  found ctrl input: $verific$n1477$44
  found state code: 1
  found state code: 2
  found state code: 3
  found ctrl input: \B
  ctrl inputs: { $verific$n341$141 [0] $verific$n10346$112 $verific$n1477$44 $verific$n1476$43 $verific$n1475$42 $verific$n1474$41 $verific$n1440$40 $verific$n1405$39 \state \B }
  ctrl outputs: $verific$n11472$295
  transition:          0 10'--------0- ->          0 0
  transition:          0 10'000000001- ->          0 0
  transition:          0 10'001000001- ->          0 0
  transition:          0 10'00-100001- ->          1 1
  transition:          0 10'00--10001- ->          2 2
  transition:          0 10'00---1001- ->          3 3
  transition:          0 10'00----1010 ->          0 0
  transition:          0 10'00----1011 ->          3 3
  transition:          0 10'00-----110 ->          3 3
  transition:          0 10'00-----111 ->          0 0
  transition:          0 10'01------1- ->          0 0
  transition:          0 10'1-------1- ->          0 0
  transition:          2 10'--------0- ->          2 2
  transition:          2 10'000000001- ->          2 2
  transition:          2 10'001000001- ->          0 0
  transition:          2 10'00-100001- ->          1 1
  transition:          2 10'00--10001- ->          2 2
  transition:          2 10'00---1001- ->          3 3
  transition:          2 10'00----1010 ->          2 2
  transition:          2 10'00----1011 ->          3 3
  transition:          2 10'00-----110 ->          3 3
  transition:          2 10'00-----111 ->          2 2
  transition:          2 10'01------1- ->          2 2
  transition:          2 10'1-------1- ->          2 2
  transition:          1 10'--------0- ->          1 1
  transition:          1 10'000000001- ->          1 1
  transition:          1 10'001000001- ->          0 0
  transition:          1 10'00-100001- ->          1 1
  transition:          1 10'00--10001- ->          2 2
  transition:          1 10'00---1001- ->          3 3
  transition:          1 10'00----1010 ->          1 1
  transition:          1 10'00----1011 ->          3 3
  transition:          1 10'00-----110 ->          3 3
  transition:          1 10'00-----111 ->          1 1
  transition:          1 10'01------1- ->          1 1
  transition:          1 10'1-------1- ->          1 1
  transition:          3 10'--------0- ->          3 3
  transition:          3 10'000000001- ->          3 3
  transition:          3 10'001000001- ->          0 0
  transition:          3 10'00-100001- ->          1 1
  transition:          3 10'00--10001- ->          2 2
  transition:          3 10'00---1001- ->          3 3
  transition:          3 10'00----1010 ->          3 3
  transition:          3 10'00----1011 ->          3 3
  transition:          3 10'00-----110 ->          3 3
  transition:          3 10'00-----111 ->          3 3
  transition:          3 10'01------1- ->          3 3
  transition:          3 10'1-------1- ->          3 3

yosys> fsm_opt

3.16.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\d$723' from module `\b14'.
  Merging pattern 10'000000001- and 10'001000001- from group (0 0 0).
  Merging pattern 10'001000001- and 10'000000001- from group (0 0 0).
  Merging pattern 10'00----1010 and 10'00----1011 from group (3 3 3).
  Merging pattern 10'00-----110 and 10'00-----111 from group (3 3 3).
  Merging pattern 10'00----1011 and 10'00----1010 from group (3 3 3).
  Merging pattern 10'00-----111 and 10'00-----110 from group (3 3 3).

yosys> opt_clean

3.16.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 3 unused cells and 3 unused wires.
<suppressed ~4 debug messages>

yosys> fsm_opt

3.16.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\d$723' from module `\b14'.

yosys> fsm_recode -encoding binary

3.16.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\d$723' from module `\b14' using `auto' encoding:
  mapping auto encoding to `binary` for this FSM.
  00000000000000000000000000000000 -> 00
  00000000000000000000000000000010 -> 01
  00000000000000000000000000000001 -> 10
  00000000000000000000000000000011 -> 11

yosys> fsm_info

3.16.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\d$723' from module `b14':
-------------------------------------

  Information on FSM $fsm$\d$723 (\d):

  Number of input signals:   10
  Number of output signals:  32
  Number of state bits:       2

  Input signals:
    0: \B
    1: \state
    2: $verific$n1405$39
    3: $verific$n1440$40
    4: $verific$n1474$41
    5: $verific$n1475$42
    6: $verific$n1476$43
    7: $verific$n1477$44
    8: $verific$n10346$112
    9: $verific$n341$141 [0]

  Output signals:
    0: $verific$n11472$295 [0]
    1: $verific$n11472$295 [1]
    2: $verific$n11472$295 [2]
    3: $verific$n11472$295 [3]
    4: $verific$n11472$295 [4]
    5: $verific$n11472$295 [5]
    6: $verific$n11472$295 [6]
    7: $verific$n11472$295 [7]
    8: $verific$n11472$295 [8]
    9: $verific$n11472$295 [9]
   10: $verific$n11472$295 [10]
   11: $verific$n11472$295 [11]
   12: $verific$n11472$295 [12]
   13: $verific$n11472$295 [13]
   14: $verific$n11472$295 [14]
   15: $verific$n11472$295 [15]
   16: $verific$n11472$295 [16]
   17: $verific$n11472$295 [17]
   18: $verific$n11472$295 [18]
   19: $verific$n11472$295 [19]
   20: $verific$n11472$295 [20]
   21: $verific$n11472$295 [21]
   22: $verific$n11472$295 [22]
   23: $verific$n11472$295 [23]
   24: $verific$n11472$295 [24]
   25: $verific$n11472$295 [25]
   26: $verific$n11472$295 [26]
   27: $verific$n11472$295 [27]
   28: $verific$n11472$295 [28]
   29: $verific$n11472$295 [29]
   30: $verific$n11472$295 [30]
   31: $verific$n11472$295 [31]

  State encoding:
    0:       2'00  <RESET STATE>
    1:       2'01
    2:       2'10
    3:       2'11

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 10'00----1010   ->     0 0
      1:     0 10'00-----111   ->     0 0
      2:     0 10'--------0-   ->     0 0
      3:     0 10'00-000001-   ->     0 0
      4:     0 10'01------1-   ->     0 0
      5:     0 10'1-------1-   ->     0 0
      6:     0 10'00--10001-   ->     1 2
      7:     0 10'00-100001-   ->     2 1
      8:     0 10'00-----110   ->     3 3
      9:     0 10'00----1011   ->     3 3
     10:     0 10'00---1001-   ->     3 3
     11:     1 10'001000001-   ->     0 0
     12:     1 10'00----1010   ->     1 2
     13:     1 10'00-----111   ->     1 2
     14:     1 10'--------0-   ->     1 2
     15:     1 10'000000001-   ->     1 2
     16:     1 10'00--10001-   ->     1 2
     17:     1 10'01------1-   ->     1 2
     18:     1 10'1-------1-   ->     1 2
     19:     1 10'00-100001-   ->     2 1
     20:     1 10'00-----110   ->     3 3
     21:     1 10'00----1011   ->     3 3
     22:     1 10'00---1001-   ->     3 3
     23:     2 10'001000001-   ->     0 0
     24:     2 10'00--10001-   ->     1 2
     25:     2 10'00----1010   ->     2 1
     26:     2 10'00-----111   ->     2 1
     27:     2 10'--------0-   ->     2 1
     28:     2 10'000000001-   ->     2 1
     29:     2 10'00-100001-   ->     2 1
     30:     2 10'01------1-   ->     2 1
     31:     2 10'1-------1-   ->     2 1
     32:     2 10'00-----110   ->     3 3
     33:     2 10'00----1011   ->     3 3
     34:     2 10'00---1001-   ->     3 3
     35:     3 10'001000001-   ->     0 0
     36:     3 10'00--10001-   ->     1 2
     37:     3 10'00-100001-   ->     2 1
     38:     3 10'--------0-   ->     3 3
     39:     3 10'000000001-   ->     3 3
     40:     3 10'00---1001-   ->     3 3
     41:     3 10'00----101-   ->     3 3
     42:     3 10'00-----11-   ->     3 3
     43:     3 10'01------1-   ->     3 3
     44:     3 10'1-------1-   ->     3 3

-------------------------------------

yosys> fsm_map

3.16.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\d$723' from module `\b14'.

yosys> opt -sat

3.17. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.17.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
<suppressed ~7 debug messages>

yosys> opt_merge -nomux

3.17.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
<suppressed ~162 debug messages>
Removed a total of 54 cells.

yosys> opt_muxtree

3.17.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

yosys> opt_reduce

3.17.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.17.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.17.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $verific$reg3_reg$b14.vhd:505$495 ($adff) from module b14 (D = $verific$n11178$290 [31:3], Q = \reg3 [31:3]).
Adding EN signal on $verific$reg3_reg$b14.vhd:505$495 ($adff) from module b14 (D = $auto$bmuxmap.cc:58:execute$545 [2:0], Q = \reg3 [2:0]).
Adding EN signal on $verific$reg2_reg$b14.vhd:505$494 ($adff) from module b14 (D = $auto$bmuxmap.cc:58:execute$564, Q = \reg2).
Adding EN signal on $verific$reg1_reg$b14.vhd:505$493 ($adff) from module b14 (D = $auto$bmuxmap.cc:58:execute$583, Q = \reg1).
Adding EN signal on $verific$reg0_reg$b14.vhd:505$492 ($adff) from module b14 (D = $auto$bmuxmap.cc:58:execute$602, Q = \reg0).
Adding EN signal on $verific$datao_reg$b14.vhd:505$499 ($adff) from module b14 (D = { $auto$bmuxmap.cc:58:execute$708 [31:29] $auto$bmuxmap.cc:58:execute$661 [124:96] }, Q = \datao).
Adding EN signal on $verific$addr_reg$b14.vhd:505$496 ($adff) from module b14 (D = $verific$n11246$292, Q = \addr).
Adding EN signal on $verific$B_reg$b14.vhd:505$491 ($adff) from module b14 (D = $verific$n10979$120, Q = \B).

yosys> opt_clean

3.17.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 24 unused cells and 76 unused wires.
<suppressed ~25 debug messages>

yosys> opt_expr

3.17.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
<suppressed ~1 debug messages>

3.17.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.17.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

yosys> opt_reduce

3.17.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.17.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
<suppressed ~42 debug messages>
Removed a total of 14 cells.

yosys> opt_dff -sat

3.17.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 2 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 3 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 4 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 5 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 6 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 7 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 8 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 9 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 10 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 11 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 12 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 13 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 14 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 15 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 16 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 17 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 18 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 19 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 20 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 21 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 22 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 23 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 24 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 25 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 26 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 27 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 28 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 29 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 30 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 31 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.

yosys> opt_clean

3.17.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 0 unused cells and 14 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.17.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.

3.17.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.17.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

yosys> opt_reduce

3.17.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.17.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.17.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.17.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..

yosys> opt_expr

3.17.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.

3.17.23. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.18. Executing WREDUCE pass (reducing word size of cells).
Removed top 2 bits (of 6) from port B of cell b14.$auto$fsm_map.cc:77:implement_pattern_cache$896 ($eq).
Removed top 2 bits (of 5) from port B of cell b14.$auto$fsm_map.cc:77:implement_pattern_cache$900 ($eq).
Removed top 2 bits (of 6) from port B of cell b14.$auto$fsm_map.cc:77:implement_pattern_cache$902 ($eq).
Removed top 2 bits (of 5) from port B of cell b14.$auto$fsm_map.cc:77:implement_pattern_cache$904 ($eq).
Removed top 8 bits (of 9) from port B of cell b14.$auto$fsm_map.cc:77:implement_pattern_cache$914 ($eq).
Removed top 2 bits (of 7) from port B of cell b14.$auto$fsm_map.cc:77:implement_pattern_cache$920 ($eq).
Removed top 2 bits (of 6) from port B of cell b14.$auto$fsm_map.cc:77:implement_pattern_cache$922 ($eq).
Removed top 2 bits (of 5) from port B of cell b14.$auto$fsm_map.cc:77:implement_pattern_cache$924 ($eq).
Removed top 2 bits (of 4) from port B of cell b14.$auto$fsm_map.cc:77:implement_pattern_cache$928 ($eq).
Removed top 1 bits (of 3) from port B of cell b14.$auto$fsm_map.cc:77:implement_pattern_cache$932 ($eq).
Removed top 3 bits (of 29) from FF cell b14.$auto$ff.cc:262:slice$944 ($adffe).
Removed top 2 bits (of 8) from port B of cell b14.$auto$fsm_map.cc:77:implement_pattern_cache$871 ($eq).
Removed top 2 bits (of 9) from port B of cell b14.$auto$opt_dff.cc:195:make_patterns_logic$1046 ($ne).
Removed top 1 bits (of 9) from port B of cell b14.$auto$opt_dff.cc:195:make_patterns_logic$1044 ($ne).
Removed top 1 bits (of 32) from port A of cell b14.$verific$LessThan_14$b14.vhd:83$312 ($lt).
Removed top 1 bits (of 33) from port Y of cell b14.$verific$unary_minus_15$b14.vhd:84$313 ($neg).
Removed top 1 bits (of 33) from port A of cell b14.$verific$unary_minus_15$b14.vhd:84$313 ($neg).
Removed top 3 bits (of 5) from port Y of cell b14.$verific$add_21$b14.vhd:86$319 ($add).
Removed top 3 bits (of 5) from port A of cell b14.$verific$add_21$b14.vhd:86$319 ($add).
Removed top 5 bits (of 8) from port Y of cell b14.$verific$add_26$b14.vhd:88$326 ($add).
Removed top 5 bits (of 8) from port A of cell b14.$verific$add_26$b14.vhd:88$326 ($add).
Removed top 2 bits (of 9) from port B of cell b14.$auto$opt_dff.cc:195:make_patterns_logic$1040 ($ne).
Removed top 9 bits (of 13) from port Y of cell b14.$verific$add_31$b14.vhd:90$333 ($add).
Removed top 9 bits (of 13) from port A of cell b14.$verific$add_31$b14.vhd:90$333 ($add).
Removed top 8 bits (of 9) from port Y of cell b14.$verific$add_36$b14.vhd:92$340 ($add).
Removed top 8 bits (of 9) from port A of cell b14.$verific$add_36$b14.vhd:92$340 ($add).
Removed top 1 bits (of 9) from port B of cell b14.$auto$opt_dff.cc:195:make_patterns_logic$1038 ($ne).
Removed top 25 bits (of 26) from port B of cell b14.$verific$add_39$b14.vhd:95$346 ($add).
Removed top 1 bits (of 3) from port Y of cell b14.$verific$add_44$b14.vhd:96$350 ($add).
Removed top 1 bits (of 3) from port A of cell b14.$verific$add_44$b14.vhd:96$350 ($add).
Removed top 1 bits (of 5) from port B of cell b14.$auto$opt_dff.cc:195:make_patterns_logic$1048 ($ne).
Removed top 4 bits (of 9) from port B of cell b14.$auto$opt_dff.cc:195:make_patterns_logic$1036 ($ne).
Removed top 12 bits (of 32) from port A of cell b14.$verific$add_56$b14.vhd:110$358 ($add).
Removed top 12 bits (of 32) from port Y of cell b14.$verific$add_56$b14.vhd:110$358 ($add).
Removed top 12 bits (of 32) from port B of cell b14.$verific$add_56$b14.vhd:110$358 ($add).
Removed top 12 bits (of 32) from port A of cell b14.$verific$add_61$b14.vhd:113$360 ($add).
Removed top 12 bits (of 32) from port Y of cell b14.$verific$add_61$b14.vhd:113$360 ($add).
Removed top 12 bits (of 32) from port B of cell b14.$verific$add_61$b14.vhd:113$360 ($add).
Removed top 1 bits (of 9) from port B of cell b14.$auto$opt_dff.cc:195:make_patterns_logic$1026 ($ne).
Removed top 1 bits (of 32) from port B of cell b14.$verific$LessThan_83$b14.vhd:148$372 ($lt).
Removed top 2 bits (of 33) from port B of cell b14.$verific$sub_84$b14.vhd:149$373 ($sub).
Removed top 1 bits (of 33) from port Y of cell b14.$verific$sub_84$b14.vhd:149$373 ($sub).
Removed top 1 bits (of 33) from port A of cell b14.$verific$sub_84$b14.vhd:149$373 ($sub).
Removed top 30 bits (of 32) from mux cell b14.$verific$mux_138$b14.vhd:216$391 ($mux).
Removed top 30 bits (of 32) from mux cell b14.$verific$mux_140$b14.vhd:220$393 ($mux).
Removed top 1 bits (of 3) from port A of cell b14.$verific$equal_141$b14.vhd:221$394 ($eq).
Removed top 1 bits (of 3) from port A of cell b14.$verific$equal_142$b14.vhd:223$395 ($eq).
Removed top 2 bits (of 3) from port A of cell b14.$verific$equal_143$b14.vhd:224$396 ($eq).
Removed top 30 bits (of 32) from mux cell b14.$verific$mux_145$b14.vhd:226$398 ($mux).
Removed top 30 bits (of 32) from mux cell b14.$verific$mux_146$b14.vhd:226$399 ($mux).
Removed top 30 bits (of 32) from mux cell b14.$verific$mux_147$b14.vhd:226$400 ($mux).
Removed top 30 bits (of 32) from mux cell b14.$verific$mux_148$b14.vhd:226$401 ($mux).
Removed top 30 bits (of 32) from mux cell b14.$verific$mux_149$b14.vhd:226$402 ($mux).
Removed top 30 bits (of 32) from mux cell b14.$verific$mux_150$b14.vhd:226$403 ($mux).
Removed top 32 bits (of 33) from port A of cell b14.$verific$sub_168$b14.vhd:243$404 ($sub).
Removed top 1 bits (of 33) from port Y of cell b14.$verific$sub_168$b14.vhd:243$404 ($sub).
Removed top 1 bits (of 33) from port B of cell b14.$verific$sub_168$b14.vhd:243$404 ($sub).
Removed top 31 bits (of 32) from port A of cell b14.$verific$equal_177$b14.vhd:244$407 ($eq).
Removed top 30 bits (of 32) from port B of cell b14.$verific$equal_177$b14.vhd:244$407 ($eq).
Removed top 30 bits (of 32) from port A of cell b14.$verific$equal_178$b14.vhd:245$408 ($eq).
Removed top 30 bits (of 32) from port B of cell b14.$verific$equal_178$b14.vhd:245$408 ($eq).
Removed top 30 bits (of 32) from port A of cell b14.$verific$equal_179$b14.vhd:246$409 ($eq).
Removed top 30 bits (of 32) from port B of cell b14.$verific$equal_179$b14.vhd:246$409 ($eq).
Removed top 3 bits (of 9) from port B of cell b14.$auto$opt_dff.cc:195:make_patterns_logic$1042 ($ne).
Removed top 2 bits (of 32) from port Y of cell b14.$verific$add_283$b14.vhd:318$415 ($add).
Removed top 2 bits (of 32) from port A of cell b14.$verific$add_283$b14.vhd:318$415 ($add).
Removed top 2 bits (of 32) from port B of cell b14.$verific$add_283$b14.vhd:318$415 ($add).
Removed top 3 bits (of 33) from port Y of cell b14.$verific$sub_365$b14.vhd:358$417 ($sub).
Removed top 3 bits (of 33) from port A of cell b14.$verific$sub_365$b14.vhd:358$417 ($sub).
Removed top 3 bits (of 33) from port B of cell b14.$verific$sub_365$b14.vhd:358$417 ($sub).
Removed top 2 bits (of 9) from port B of cell b14.$auto$opt_dff.cc:195:make_patterns_logic$1028 ($ne).
Removed top 2 bits (of 9) from port B of cell b14.$auto$opt_dff.cc:195:make_patterns_logic$1034 ($ne).
Removed top 8 bits (of 9) from port B of cell b14.$auto$opt_dff.cc:195:make_patterns_logic$1024 ($ne).
Removed top 1 bits (of 9) from port B of cell b14.$auto$opt_dff.cc:195:make_patterns_logic$1032 ($ne).
Removed top 3 bits (of 9) from port B of cell b14.$auto$opt_dff.cc:195:make_patterns_logic$1030 ($ne).
Removed top 1 bits (of 2) from port B of cell b14.$auto$fsm_map.cc:215:map_fsm$729 ($eq).
Removed top 3 bits (of 32) from mux cell b14.$verific$mux_698$b14.vhd:502$473 ($mux).
Removed top 20 bits (of 21) from mux cell b14.$auto$bmuxmap.cc:60:execute$508 ($mux).
Removed top 1 bits (of 5) from port B of cell b14.$auto$opt_dff.cc:195:make_patterns_logic$1061 ($ne).
Removed top 1 bits (of 7) from port B of cell b14.$auto$opt_dff.cc:195:make_patterns_logic$1057 ($ne).
Removed top 1 bits (of 4) from port B of cell b14.$auto$opt_dff.cc:195:make_patterns_logic$1063 ($ne).
Removed top 1 bits (of 6) from port B of cell b14.$auto$opt_dff.cc:195:make_patterns_logic$1059 ($ne).
Removed top 1 bits (of 2) from port B of cell b14.$auto$opt_dff.cc:195:make_patterns_logic$1067 ($ne).
Removed top 2 bits (of 32) from mux cell b14.$auto$bmuxmap.cc:60:execute$533 ($mux).
Removed top 2 bits (of 32) from mux cell b14.$auto$bmuxmap.cc:60:execute$539 ($mux).
Removed top 3 bits (of 4) from port B of cell b14.$auto$opt_dff.cc:195:make_patterns_logic$1004 ($ne).
Removed top 1 bits (of 8) from port B of cell b14.$auto$opt_dff.cc:195:make_patterns_logic$1055 ($ne).
Removed top 3 bits (of 32) from mux cell b14.$verific$mux_679$b14.vhd:501$459 ($mux).
Removed top 20 bits (of 21) from mux cell b14.$auto$bmuxmap.cc:60:execute$506 ($mux).
Removed top 20 bits (of 21) from port Y of cell b14.$verific$add_662$b14.vhd:493$442 ($add).
Removed top 19 bits (of 20) from port A of cell b14.$verific$add_662$b14.vhd:493$442 ($add).
Removed top 19 bits (of 20) from port B of cell b14.$verific$add_662$b14.vhd:493$442 ($add).
Removed top 20 bits (of 21) from port Y of cell b14.$verific$add_664$b14.vhd:494$444 ($add).
Removed top 19 bits (of 20) from port A of cell b14.$verific$add_664$b14.vhd:494$444 ($add).
Removed top 19 bits (of 20) from port B of cell b14.$verific$add_664$b14.vhd:494$444 ($add).
Removed top 3 bits (of 32) from mux cell b14.$auto$bmuxmap.cc:60:execute$546 ($mux).
Removed top 3 bits (of 32) from mux cell b14.$auto$bmuxmap.cc:60:execute$543 ($mux).
Removed top 3 bits (of 32) from mux cell b14.$auto$bmuxmap.cc:60:execute$544 ($mux).
Removed top 1 bits (of 30) from mux cell b14.$auto$bmuxmap.cc:60:execute$533 ($mux).
Removed top 3 bits (of 32) from mux cell b14.$auto$bmuxmap.cc:60:execute$538 ($mux).
Removed top 1 bits (of 30) from mux cell b14.$auto$bmuxmap.cc:60:execute$539 ($mux).
Removed top 3 bits (of 32) from mux cell b14.$auto$bmuxmap.cc:60:execute$541 ($mux).
Removed top 3 bits (of 32) from mux cell b14.$auto$bmuxmap.cc:60:execute$529 ($mux).
Removed top 3 bits (of 32) from mux cell b14.$auto$bmuxmap.cc:60:execute$535 ($mux).
Removed top 2 bits (of 155) from mux cell b14.$verific$select_752$b14.vhd:486$433 ($pmux).
Removed top 20 bits (of 42) from wire b14.$auto$bmuxmap.cc:58:execute$504.
Removed top 20 bits (of 21) from wire b14.$auto$bmuxmap.cc:58:execute$507.
Removed top 2 bits (of 256) from wire b14.$auto$bmuxmap.cc:58:execute$528.
Removed top 3 bits (of 128) from wire b14.$auto$bmuxmap.cc:58:execute$537.
Removed top 3 bits (of 64) from wire b14.$auto$bmuxmap.cc:58:execute$542.
Removed top 3 bits (of 32) from wire b14.$auto$bmuxmap.cc:58:execute$545.
Removed top 2 bits (of 8) from wire b14.$auto$bmuxmap.cc:58:execute$623.
Removed top 1 bits (of 126) from wire b14.$auto$bmuxmap.cc:58:execute$661.
Removed top 17 bits (of 40) from wire b14.$auto$bmuxmap.cc:58:execute$695.
Removed top 30 bits (of 32) from wire b14.$fsm$oldstate\d.
Removed top 2 bits (of 31) from wire b14.$verific$n10126$259.
Removed top 19 bits (of 20) from wire b14.$verific$n10390$266.
Removed top 19 bits (of 20) from wire b14.$verific$n10434$268.
Removed top 3 bits (of 32) from wire b14.$verific$n10755$281.
Removed top 3 bits (of 32) from wire b14.$verific$n11178$290.
Removed top 30 bits (of 32) from wire b14.$verific$n11472$295.
Removed top 30 bits (of 32) from wire b14.$verific$n1407$163.
Removed top 30 bits (of 32) from wire b14.$verific$n1441$164.
Removed top 30 bits (of 32) from wire b14.$verific$n1478$165.
Removed top 30 bits (of 32) from wire b14.$verific$n1511$166.
Removed top 30 bits (of 32) from wire b14.$verific$n1577$168.
Removed top 1 bits (of 33) from wire b14.$verific$n184$132.
Removed top 1 bits (of 33) from wire b14.$verific$n1987$176.
Removed top 3 bits (of 5) from wire b14.$verific$n288$135.
Removed top 5 bits (of 8) from wire b14.$verific$n301$137.
Removed top 2 bits (of 32) from wire b14.$verific$n4241$209.
Removed top 3 bits (of 33) from wire b14.$verific$n5666$223.
Removed top 15 bits (of 32) from wire b14.IR.
Removed top 6 bits (of 32) from wire b14.reg3.

yosys> peepopt

3.19. Executing PEEPOPT pass (run peephole optimizers).

yosys> opt_clean

3.20. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 0 unused cells and 40 unused wires.
<suppressed ~1 debug messages>

yosys> bmuxmap

3.21. Executing BMUXMAP pass.

yosys> demuxmap

3.22. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> alumacc

3.23. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module b14:
  creating $macc model for $verific$add_21$b14.vhd:86$319 ($add).
  creating $macc model for $verific$add_26$b14.vhd:88$326 ($add).
  creating $macc model for $verific$add_283$b14.vhd:318$415 ($add).
  creating $macc model for $verific$add_31$b14.vhd:90$333 ($add).
  creating $macc model for $verific$add_36$b14.vhd:92$340 ($add).
  creating $macc model for $verific$add_39$b14.vhd:95$346 ($add).
  creating $macc model for $verific$add_44$b14.vhd:96$350 ($add).
  creating $macc model for $verific$add_56$b14.vhd:110$358 ($add).
  creating $macc model for $verific$add_570$b14.vhd:466$422 ($add).
  creating $macc model for $verific$add_61$b14.vhd:113$360 ($add).
  creating $macc model for $verific$add_662$b14.vhd:493$442 ($add).
  creating $macc model for $verific$add_664$b14.vhd:494$444 ($add).
  creating $macc model for $verific$mult_667$b14.vhd:497$448 ($mul).
  creating $macc model for $verific$sub_168$b14.vhd:243$404 ($sub).
  creating $macc model for $verific$sub_365$b14.vhd:358$417 ($sub).
  creating $macc model for $verific$sub_84$b14.vhd:149$373 ($sub).
  creating $macc model for $verific$unary_minus_15$b14.vhd:84$313 ($neg).
  creating $alu model for $macc $verific$unary_minus_15$b14.vhd:84$313.
  creating $alu model for $macc $verific$sub_84$b14.vhd:149$373.
  creating $alu model for $macc $verific$sub_365$b14.vhd:358$417.
  creating $alu model for $macc $verific$sub_168$b14.vhd:243$404.
  creating $alu model for $macc $verific$add_664$b14.vhd:494$444.
  creating $alu model for $macc $verific$add_662$b14.vhd:493$442.
  creating $alu model for $macc $verific$add_61$b14.vhd:113$360.
  creating $alu model for $macc $verific$add_570$b14.vhd:466$422.
  creating $alu model for $macc $verific$add_56$b14.vhd:110$358.
  creating $alu model for $macc $verific$add_44$b14.vhd:96$350.
  creating $alu model for $macc $verific$add_39$b14.vhd:95$346.
  creating $alu model for $macc $verific$add_36$b14.vhd:92$340.
  creating $alu model for $macc $verific$add_31$b14.vhd:90$333.
  creating $alu model for $macc $verific$add_283$b14.vhd:318$415.
  creating $alu model for $macc $verific$add_26$b14.vhd:88$326.
  creating $alu model for $macc $verific$add_21$b14.vhd:86$319.
  creating $macc cell for $verific$mult_667$b14.vhd:497$448: $auto$alumacc.cc:365:replace_macc$1100
  creating $alu model for $verific$LessThan_14$b14.vhd:83$312 ($lt): new $alu
  creating $alu model for $verific$LessThan_68$b14.vhd:118$366 ($lt): new $alu
  creating $alu model for $verific$LessThan_78$b14.vhd:138$370 ($lt): merged with $verific$LessThan_68$b14.vhd:118$366.
  creating $alu model for $verific$LessThan_83$b14.vhd:148$372 ($lt): new $alu
  creating $alu model for $verific$LessThan_87$b14.vhd:151$377 ($lt): new $alu
  creating $alu cell for $verific$LessThan_87$b14.vhd:151$377: $auto$alumacc.cc:485:replace_alu$1105
  creating $alu cell for $verific$LessThan_83$b14.vhd:148$372: $auto$alumacc.cc:485:replace_alu$1110
  creating $alu cell for $verific$LessThan_68$b14.vhd:118$366, $verific$LessThan_78$b14.vhd:138$370: $auto$alumacc.cc:485:replace_alu$1121
  creating $alu cell for $verific$LessThan_14$b14.vhd:83$312: $auto$alumacc.cc:485:replace_alu$1132
  creating $alu cell for $verific$add_21$b14.vhd:86$319: $auto$alumacc.cc:485:replace_alu$1137
  creating $alu cell for $verific$add_26$b14.vhd:88$326: $auto$alumacc.cc:485:replace_alu$1140
  creating $alu cell for $verific$add_283$b14.vhd:318$415: $auto$alumacc.cc:485:replace_alu$1143
  creating $alu cell for $verific$add_31$b14.vhd:90$333: $auto$alumacc.cc:485:replace_alu$1146
  creating $alu cell for $verific$add_36$b14.vhd:92$340: $auto$alumacc.cc:485:replace_alu$1149
  creating $alu cell for $verific$add_39$b14.vhd:95$346: $auto$alumacc.cc:485:replace_alu$1152
  creating $alu cell for $verific$add_44$b14.vhd:96$350: $auto$alumacc.cc:485:replace_alu$1155
  creating $alu cell for $verific$add_56$b14.vhd:110$358: $auto$alumacc.cc:485:replace_alu$1158
  creating $alu cell for $verific$add_570$b14.vhd:466$422: $auto$alumacc.cc:485:replace_alu$1161
  creating $alu cell for $verific$add_61$b14.vhd:113$360: $auto$alumacc.cc:485:replace_alu$1164
  creating $alu cell for $verific$add_662$b14.vhd:493$442: $auto$alumacc.cc:485:replace_alu$1167
  creating $alu cell for $verific$add_664$b14.vhd:494$444: $auto$alumacc.cc:485:replace_alu$1170
  creating $alu cell for $verific$sub_168$b14.vhd:243$404: $auto$alumacc.cc:485:replace_alu$1173
  creating $alu cell for $verific$sub_365$b14.vhd:358$417: $auto$alumacc.cc:485:replace_alu$1176
  creating $alu cell for $verific$sub_84$b14.vhd:149$373: $auto$alumacc.cc:485:replace_alu$1179
  creating $alu cell for $verific$unary_minus_15$b14.vhd:84$313: $auto$alumacc.cc:485:replace_alu$1182
  created 20 $alu and 1 $macc cells.

yosys> opt_expr

3.24. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
<suppressed ~5 debug messages>

yosys> opt_merge -nomux

3.25. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.26. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

yosys> opt_reduce

3.27. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.28. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_share

3.29. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $mux $auto$bmuxmap.cc:60:execute$506 in front of them:
        $auto$alumacc.cc:485:replace_alu$1170
        $auto$alumacc.cc:485:replace_alu$1167

    Found cells that share an operand and can be merged by moving the $mux $auto$bmuxmap.cc:60:execute$676 in front of them:
        $verific$i102$b14.vhd:169$380
        $verific$i98$b14.vhd:164$379

    Found cells that share an operand and can be merged by moving the $mux $auto$bmuxmap.cc:60:execute$677 in front of them:
        $verific$i109$b14.vhd:179$382
        $verific$i105$b14.vhd:174$381

    Found cells that share an operand and can be merged by moving the $mux $auto$bmuxmap.cc:60:execute$678 in front of them:
        $verific$i116$b14.vhd:189$384
        $verific$i113$b14.vhd:184$383

    Found cells that share an operand and can be merged by moving the $mux $auto$bmuxmap.cc:60:execute$679 in front of them:
        $verific$i131$b14.vhd:205$386
        $verific$i123$b14.vhd:197$385


yosys> opt_dff

3.30. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.31. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 2 unused cells and 24 unused wires.
<suppressed ~3 debug messages>

yosys> opt_expr

3.32. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
<suppressed ~5 debug messages>

yosys> opt_muxtree

3.33. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~29 debug messages>

yosys> opt_reduce

3.34. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.35. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

yosys> opt_share

3.36. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $mux $auto$bmuxmap.cc:60:execute$683 in front of them:
        $verific$i109$b14.vhd:179$382
        $verific$i102$b14.vhd:169$380

    Found cells that share an operand and can be merged by moving the $mux $auto$bmuxmap.cc:60:execute$684 in front of them:
        $verific$i131$b14.vhd:205$386
        $verific$i116$b14.vhd:189$384


yosys> opt_dff

3.37. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.38. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 0 unused cells and 9 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.39. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
<suppressed ~2 debug messages>

yosys> opt_muxtree

3.40. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~31 debug messages>

yosys> opt_reduce

3.41. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.42. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

yosys> opt_share

3.43. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $mux $auto$bmuxmap.cc:60:execute$687 in front of them:
        $verific$i131$b14.vhd:205$386
        $verific$i109$b14.vhd:179$382


yosys> opt_dff

3.44. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.45. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.46. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
<suppressed ~1 debug messages>

yosys> opt_muxtree

3.47. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~28 debug messages>

yosys> opt_reduce

3.48. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.49. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_share

3.50. Executing OPT_SHARE pass.

yosys> opt_dff

3.51. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.52. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.53. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.

yosys> opt_muxtree

3.54. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~26 debug messages>

yosys> opt_reduce

3.55. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.56. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_share

3.57. Executing OPT_SHARE pass.

yosys> opt_dff

3.58. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.59. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..

yosys> opt_expr

3.60. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
MAX OPT ITERATION = 5

yosys> stat

3.61. Printing statistics.

=== b14 ===

   Number of wires:                285
   Number of wire bits:           5914
   Number of public wires:          15
   Number of public wire bits:     231
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                278
     $adff                           6
     $adffe                          8
     $alu                           19
     $and                           32
     $eq                            25
     $logic_not                      2
     $macc                           1
     $mux                          106
     $ne                            35
     $not                            9
     $or                             3
     $pmux                           5
     $reduce_and                     9
     $reduce_bool                    1
     $reduce_or                     17


yosys> memory -nomap

3.62. Executing MEMORY pass.

yosys> opt_mem

3.62.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.62.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.62.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.62.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.62.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.62.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..

yosys> memory_share

3.62.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.62.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.62.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..

yosys> memory_collect

3.62.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.63. Printing statistics.

=== b14 ===

   Number of wires:                285
   Number of wire bits:           5914
   Number of public wires:          15
   Number of public wire bits:     231
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                278
     $adff                           6
     $adffe                          8
     $alu                           19
     $and                           32
     $eq                            25
     $logic_not                      2
     $macc                           1
     $mux                          106
     $ne                            35
     $not                            9
     $or                             3
     $pmux                           5
     $reduce_and                     9
     $reduce_bool                    1
     $reduce_or                     17


yosys> muxpack

3.64. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~101 debug messages>

yosys> opt_clean

3.65. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..

yosys> pmuxtree

3.66. Executing PMUXTREE pass.

yosys> muxpack

3.67. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~107 debug messages>

yosys> memory_map

3.68. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> stat

3.69. Printing statistics.

=== b14 ===

   Number of wires:                307
   Number of wire bits:           7197
   Number of public wires:          15
   Number of public wire bits:     231
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                295
     $adff                           6
     $adffe                          8
     $alu                           19
     $and                           32
     $eq                            25
     $logic_not                      2
     $macc                           1
     $mux                          117
     $ne                            35
     $not                           14
     $or                             4
     $reduce_and                     9
     $reduce_bool                    1
     $reduce_or                     22


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.70. Executing TECHMAP pass (map to technology primitives).

3.70.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.70.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.70.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $reduce_and.
Using template $paramod$79fc87901d7fd8aaad689b5406671422f5fa25b9\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $or.
Using template $paramod$175e67c02b86e96b1288b9dc100122520d7240d8\_90_alu for cells of type $alu.
Using template $paramod$3ef7d3dd227da7627a99c5e5a6a4deb817573e39\_90_alu for cells of type $alu.
Using template $paramod$9e7011427f22271c0942bd67000ef26931352ace\_80_rs_alu for cells of type $alu.
/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:80: Warning: Range [-1:-1] select out of bounds on signal `\C': Setting 1 LSB bits to undef.
/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88: Warning: Range [-1:-1] select out of bounds on signal `\Y': Setting 1 LSB bits to undef.
/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88: Warning: Range [-1:-1] select out of bounds on signal `\S': Setting 1 LSB bits to undef.
/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88: Warning: Ignoring assignment to constant bits:
    old assignment: 1'x = $xor$/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88$3280_Y
    new assignment: { } = { }.
/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:89: Warning: Range [-1:-1] select out of bounds on signal `\S': Setting 1 LSB bits to undef.
/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:89: Warning: Range [-1:-1] select out of bounds on signal `\AA': Setting 1 LSB bits to undef.
Using template $paramod$fc972a7a46956c1788f3cb5257b53c8f1df2d0cc\_90_alu for cells of type $alu.
Using template $paramod$83784888def4f70dbbded37c6d05d2ea1157c936\_90_alu for cells of type $alu.
Using extmapper maccmap for cells of type $macc.
  add 3'101 * $auto$bmuxmap.cc:58:execute$507 (3x1 bits, unsigned)
Using template $paramod$43e6bdbb0e8a6b23dfd3962c0280737d54f8e2be\_80_rs_alu for cells of type $alu.
Using template $paramod$ee932b0f27f4b110ee21c85da6e79a9925243db9\_80_rs_alu for cells of type $alu.
Using template $paramod$e891e6b399cf52748460a311fafe476815d24bd7\_90_alu for cells of type $alu.
Using template $paramod$63a3f1ffa662be02d3403b533885c56d18ebe02a\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$83fc07d9557d32477a9ece9e4e82efd3bbe82ab8\_80_rs_alu for cells of type $alu.
Using template $paramod$32a7b7b86c07519b7537abc18e96f0331f97914d\_90_alu for cells of type $alu.
Using template $paramod$c32aaa9fd758c6ea2b382f4327253b21b576e597\_90_alu for cells of type $alu.
Using template $paramod$6a42b6fefed750f8a1c58eab59479d960557103c\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000011011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000100 for cells of type $lcu.
No more expansions possible.
<suppressed ~3004 debug messages>

yosys> stat

3.71. Printing statistics.

=== b14 ===

   Number of wires:               1647
   Number of wire bits:          26985
   Number of public wires:          15
   Number of public wire bits:     231
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               7748
     $_AND_                        734
     $_DFFE_PP0P_                  178
     $_DFF_PP0_                     39
     $_MUX_                       4403
     $_NOT_                        436
     $_OR_                         797
     $_XOR_                        934
     adder_carry                   227


yosys> opt_expr

3.72. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
<suppressed ~2323 debug messages>

yosys> opt_merge -nomux

3.73. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
<suppressed ~4482 debug messages>
Removed a total of 1494 cells.

yosys> opt_muxtree

3.74. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.75. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.76. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_share

3.77. Executing OPT_SHARE pass.

yosys> opt_dff

3.78. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.79. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 279 unused cells and 1169 unused wires.
<suppressed ~280 debug messages>

yosys> opt_expr

3.80. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
<suppressed ~72 debug messages>

yosys> opt_muxtree

3.81. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.82. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.83. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_share

3.84. Executing OPT_SHARE pass.

yosys> opt_dff

3.85. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.86. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.87. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
MAX OPT ITERATION = 2

yosys> opt -fast -full

3.88. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.88.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
<suppressed ~661 debug messages>

yosys> opt_merge

3.88.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_dff

3.88.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.88.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 0 unused cells and 12 unused wires.
<suppressed ~1 debug messages>

3.88.5. Finished fast OPT passes.

yosys> techmap -map +/techmap.v

3.89. Executing TECHMAP pass (map to technology primitives).

3.89.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.89.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> opt -sat

3.90. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.90.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.

yosys> opt_merge -nomux

3.90.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.90.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.90.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.90.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.90.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.90.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..

yosys> opt_expr

3.90.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.

3.90.9. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

3.91. Executing ABC pass (technology mapping using ABC).

3.91.1. Summary of detected clock domains:
  78 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$1051, arst=\reset, srst={ }
  494 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$1068, arst=\reset, srst={ }
  769 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$977, arst=\reset, srst={ }
  596 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$996, arst=\reset, srst={ }
  524 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$1015, arst=\reset, srst={ }
  68 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$1020, arst=\reset, srst={ }
  649 cells in clk=\clock, en=\state, arst=\reset, srst={ }
  96 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$960, arst=\reset, srst={ }
  587 cells in clk=\clock, en={ }, arst=\reset, srst={ }

3.91.2. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1051, asynchronously reset by \reset
Extracted 78 gates and 118 wires to a netlist network with 40 inputs and 21 outputs.

3.91.2.1. Executing ABC.

3.91.3. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1068, asynchronously reset by \reset
Extracted 427 gates and 574 wires to a netlist network with 145 inputs and 94 outputs.

3.91.3.1. Executing ABC.

3.91.4. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$977, asynchronously reset by \reset
Extracted 709 gates and 979 wires to a netlist network with 269 inputs and 185 outputs.

3.91.4.1. Executing ABC.

3.91.5. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$996, asynchronously reset by \reset
Extracted 596 gates and 832 wires to a netlist network with 235 inputs and 91 outputs.

3.91.5.1. Executing ABC.

3.91.6. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1015, asynchronously reset by \reset
Extracted 500 gates and 717 wires to a netlist network with 215 inputs and 75 outputs.

3.91.6.1. Executing ABC.

3.91.7. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1020, asynchronously reset by \reset
Extracted 68 gates and 137 wires to a netlist network with 69 inputs and 66 outputs.

3.91.7.1. Executing ABC.

3.91.8. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by \state, asynchronously reset by \reset
Extracted 649 gates and 796 wires to a netlist network with 146 inputs and 48 outputs.

3.91.8.1. Executing ABC.

3.91.9. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$960, asynchronously reset by \reset
Extracted 92 gates and 135 wires to a netlist network with 42 inputs and 32 outputs.

3.91.9.1. Executing ABC.

3.91.10. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 515 gates and 665 wires to a netlist network with 148 inputs and 119 outputs.

3.91.10.1. Executing ABC.

yosys> abc -dff

3.92. Executing ABC pass (technology mapping using ABC).

3.92.1. Summary of detected clock domains:
  149 cells in clk=\clock, en=$abc$13842$auto$opt_dff.cc:219:make_patterns_logic$960, arst=\reset, srst={ }
  556 cells in clk=\clock, en=$abc$12290$auto$opt_dff.cc:219:make_patterns_logic$1015, arst=\reset, srst={ }
  1010 cells in clk=\clock, en=$abc$11507$auto$opt_dff.cc:219:make_patterns_logic$996, arst=\reset, srst={ }
  788 cells in clk=\clock, en=$abc$10606$auto$opt_dff.cc:219:make_patterns_logic$977, arst=\reset, srst={ }
  249 cells in clk=\clock, en=$abc$10402$auto$opt_dff.cc:219:make_patterns_logic$1068, arst=\reset, srst={ }
  67 cells in clk=\clock, en=$abc$12901$auto$opt_dff.cc:219:make_patterns_logic$1020, arst=\reset, srst={ }
  112 cells in clk=\clock, en=$abc$10320$auto$opt_dff.cc:219:make_patterns_logic$1051, arst=\reset, srst={ }
  798 cells in clk=\clock, en=$abc$13973$lo38, arst=\reset, srst={ }
  368 cells in clk=\clock, en={ }, arst=\reset, srst={ }

3.92.2. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$13842$auto$opt_dff.cc:219:make_patterns_logic$960, asynchronously reset by \reset
Extracted 139 gates and 200 wires to a netlist network with 61 inputs and 42 outputs.

3.92.2.1. Executing ABC.

3.92.3. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$12290$auto$opt_dff.cc:219:make_patterns_logic$1015, asynchronously reset by \reset
Extracted 556 gates and 756 wires to a netlist network with 200 inputs and 47 outputs.

3.92.3.1. Executing ABC.

3.92.4. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$11507$auto$opt_dff.cc:219:make_patterns_logic$996, asynchronously reset by \reset
Extracted 941 gates and 1173 wires to a netlist network with 232 inputs and 246 outputs.

3.92.4.1. Executing ABC.

3.92.5. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$10606$auto$opt_dff.cc:219:make_patterns_logic$977, asynchronously reset by \reset
Extracted 776 gates and 1025 wires to a netlist network with 249 inputs and 78 outputs.

3.92.5.1. Executing ABC.

3.92.6. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$10402$auto$opt_dff.cc:219:make_patterns_logic$1068, asynchronously reset by \reset
Extracted 185 gates and 334 wires to a netlist network with 149 inputs and 69 outputs.

3.92.6.1. Executing ABC.

3.92.7. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$12901$auto$opt_dff.cc:219:make_patterns_logic$1020, asynchronously reset by \reset
Extracted 67 gates and 136 wires to a netlist network with 69 inputs and 34 outputs.

3.92.7.1. Executing ABC.

3.92.8. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$10320$auto$opt_dff.cc:219:make_patterns_logic$1051, asynchronously reset by \reset
Extracted 110 gates and 183 wires to a netlist network with 73 inputs and 22 outputs.

3.92.8.1. Executing ABC.

3.92.9. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$13973$lo38, asynchronously reset by \reset
Extracted 798 gates and 937 wires to a netlist network with 139 inputs and 47 outputs.

3.92.9.1. Executing ABC.

3.92.10. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 298 gates and 410 wires to a netlist network with 112 inputs and 115 outputs.

3.92.10.1. Executing ABC.

yosys> abc -dff

3.93. Executing ABC pass (technology mapping using ABC).

3.93.1. Summary of detected clock domains:
  112 cells in clk=\clock, en=$abc$14355$abc$13842$auto$opt_dff.cc:219:make_patterns_logic$960, arst=\reset, srst={ }
  562 cells in clk=\clock, en=$abc$14508$abc$12290$auto$opt_dff.cc:219:make_patterns_logic$1015, arst=\reset, srst={ }
  995 cells in clk=\clock, en=$abc$15083$abc$11507$auto$opt_dff.cc:219:make_patterns_logic$996, arst=\reset, srst={ }
  246 cells in clk=\clock, en=$abc$16830$abc$10402$auto$opt_dff.cc:219:make_patterns_logic$1068, arst=\reset, srst={ }
  855 cells in clk=\clock, en=$abc$16084$abc$10606$auto$opt_dff.cc:219:make_patterns_logic$977, arst=\reset, srst={ }
  806 cells in clk=\clock, en=$abc$18058$lo38, arst=\reset, srst={ }
  120 cells in clk=\clock, en=$abc$17108$abc$10320$auto$opt_dff.cc:219:make_patterns_logic$1051, arst=\reset, srst={ }
  67 cells in clk=\clock, en=$abc$17008$abc$12901$auto$opt_dff.cc:219:make_patterns_logic$1020, arst=\reset, srst={ }
  358 cells in clk=\clock, en={ }, arst=\reset, srst={ }

3.93.2. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$14355$abc$13842$auto$opt_dff.cc:219:make_patterns_logic$960, asynchronously reset by \reset
Extracted 112 gates and 158 wires to a netlist network with 46 inputs and 24 outputs.

3.93.2.1. Executing ABC.

3.93.3. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$14508$abc$12290$auto$opt_dff.cc:219:make_patterns_logic$1015, asynchronously reset by \reset
Extracted 562 gates and 762 wires to a netlist network with 200 inputs and 44 outputs.

3.93.3.1. Executing ABC.

3.93.4. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$15083$abc$11507$auto$opt_dff.cc:219:make_patterns_logic$996, asynchronously reset by \reset
Extracted 936 gates and 1171 wires to a netlist network with 235 inputs and 202 outputs.

3.93.4.1. Executing ABC.

3.93.5. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$16830$abc$10402$auto$opt_dff.cc:219:make_patterns_logic$1068, asynchronously reset by \reset
Extracted 182 gates and 329 wires to a netlist network with 147 inputs and 71 outputs.

3.93.5.1. Executing ABC.

3.93.6. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$16084$abc$10606$auto$opt_dff.cc:219:make_patterns_logic$977, asynchronously reset by \reset
Extracted 823 gates and 1096 wires to a netlist network with 273 inputs and 140 outputs.

3.93.6.1. Executing ABC.

3.93.7. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$18058$lo38, asynchronously reset by \reset
Extracted 806 gates and 951 wires to a netlist network with 145 inputs and 50 outputs.

3.93.7.1. Executing ABC.

3.93.8. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$17108$abc$10320$auto$opt_dff.cc:219:make_patterns_logic$1051, asynchronously reset by \reset
Extracted 118 gates and 191 wires to a netlist network with 73 inputs and 24 outputs.

3.93.8.1. Executing ABC.

3.93.9. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$17008$abc$12901$auto$opt_dff.cc:219:make_patterns_logic$1020, asynchronously reset by \reset
Extracted 67 gates and 136 wires to a netlist network with 69 inputs and 34 outputs.

3.93.9.1. Executing ABC.

3.93.10. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 288 gates and 400 wires to a netlist network with 112 inputs and 114 outputs.

3.93.10.1. Executing ABC.

yosys> abc -dff

3.94. Executing ABC pass (technology mapping using ABC).

3.94.1. Summary of detected clock domains:
  139 cells in clk=\clock, en=$abc$18353$abc$14355$abc$13842$auto$opt_dff.cc:219:make_patterns_logic$960, arst=\reset, srst={ }
  559 cells in clk=\clock, en=$abc$18457$abc$14508$abc$12290$auto$opt_dff.cc:219:make_patterns_logic$1015, arst=\reset, srst={ }
  241 cells in clk=\clock, en=$abc$19980$abc$16830$abc$10402$auto$opt_dff.cc:219:make_patterns_logic$1068, arst=\reset, srst={ }
  924 cells in clk=\clock, en=$abc$19035$abc$15083$abc$11507$auto$opt_dff.cc:219:make_patterns_logic$996, arst=\reset, srst={ }
  790 cells in clk=\clock, en=$abc$22014$lo38, arst=\reset, srst={ }
  67 cells in clk=\clock, en=$abc$21914$abc$17008$abc$12901$auto$opt_dff.cc:219:make_patterns_logic$1020, arst=\reset, srst={ }
  112 cells in clk=\clock, en=$abc$21784$abc$17108$abc$10320$auto$opt_dff.cc:219:make_patterns_logic$1051, arst=\reset, srst={ }
  889 cells in clk=\clock, en=$abc$20160$abc$16084$abc$10606$auto$opt_dff.cc:219:make_patterns_logic$977, arst=\reset, srst={ }
  357 cells in clk=\clock, en={ }, arst=\reset, srst={ }

3.94.2. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$18353$abc$14355$abc$13842$auto$opt_dff.cc:219:make_patterns_logic$960, asynchronously reset by \reset
Extracted 131 gates and 192 wires to a netlist network with 61 inputs and 37 outputs.

3.94.2.1. Executing ABC.

3.94.3. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$18457$abc$14508$abc$12290$auto$opt_dff.cc:219:make_patterns_logic$1015, asynchronously reset by \reset
Extracted 559 gates and 763 wires to a netlist network with 204 inputs and 46 outputs.

3.94.3.1. Executing ABC.

3.94.4. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$19980$abc$16830$abc$10402$auto$opt_dff.cc:219:make_patterns_logic$1068, asynchronously reset by \reset
Extracted 177 gates and 323 wires to a netlist network with 146 inputs and 68 outputs.

3.94.4.1. Executing ABC.

3.94.5. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$19035$abc$15083$abc$11507$auto$opt_dff.cc:219:make_patterns_logic$996, asynchronously reset by \reset
Extracted 891 gates and 1103 wires to a netlist network with 212 inputs and 181 outputs.

3.94.5.1. Executing ABC.

3.94.6. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$22014$lo38, asynchronously reset by \reset
Extracted 788 gates and 934 wires to a netlist network with 146 inputs and 50 outputs.

3.94.6.1. Executing ABC.

3.94.7. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$21914$abc$17008$abc$12901$auto$opt_dff.cc:219:make_patterns_logic$1020, asynchronously reset by \reset
Extracted 67 gates and 136 wires to a netlist network with 69 inputs and 34 outputs.

3.94.7.1. Executing ABC.

3.94.8. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$21784$abc$17108$abc$10320$auto$opt_dff.cc:219:make_patterns_logic$1051, asynchronously reset by \reset
Extracted 110 gates and 183 wires to a netlist network with 73 inputs and 24 outputs.

3.94.8.1. Executing ABC.

3.94.9. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$20160$abc$16084$abc$10606$auto$opt_dff.cc:219:make_patterns_logic$977, asynchronously reset by \reset
Extracted 841 gates and 1116 wires to a netlist network with 275 inputs and 149 outputs.

3.94.9.1. Executing ABC.

3.94.10. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 287 gates and 399 wires to a netlist network with 112 inputs and 114 outputs.

3.94.10.1. Executing ABC.

yosys> opt_ffinv

3.95. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt -sat

3.96. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.96.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
<suppressed ~217 debug messages>

yosys> opt_merge -nomux

3.96.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
<suppressed ~183 debug messages>
Removed a total of 61 cells.

yosys> opt_muxtree

3.96.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.96.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.96.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.96.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.96.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 0 unused cells and 18338 unused wires.
<suppressed ~5 debug messages>

yosys> opt_expr

3.96.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.

3.96.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.96.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.96.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.96.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.96.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.96.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..

yosys> opt_expr

3.96.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.

3.96.16. Finished OPT passes. (There is nothing left to do.)

yosys> bmuxmap

3.97. Executing BMUXMAP pass.

yosys> demuxmap

3.98. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> abc -script /home/users/temp_dir/yosys_p8WQl0/abc_tmp_1.scr

3.99. Executing ABC pass (technology mapping using ABC).

3.99.1. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Extracted 3611 gates and 3965 wires to a netlist network with 354 inputs and 448 outputs.

3.99.1.1. Executing ABC.
DE:   #PIs = 354  #Luts =  1190  Max Lvl =  37  Avg Lvl =  10.66  [   0.65 sec. at Pass 0]
DE:   #PIs = 354  #Luts =   893  Max Lvl =  32  Avg Lvl =  10.34  [  16.74 sec. at Pass 1]
DE:   #PIs = 354  #Luts =   875  Max Lvl =  32  Avg Lvl =  10.57  [   3.10 sec. at Pass 2]
DE:   #PIs = 354  #Luts =   847  Max Lvl =  27  Avg Lvl =  10.26  [   6.76 sec. at Pass 3]
DE:   #PIs = 354  #Luts =   844  Max Lvl =  26  Avg Lvl =  10.28  [   3.24 sec. at Pass 4]
DE:   #PIs = 354  #Luts =   825  Max Lvl =  25  Avg Lvl =   9.70  [   6.27 sec. at Pass 5]
DE:   #PIs = 354  #Luts =   817  Max Lvl =  23  Avg Lvl =   9.70  [   2.53 sec. at Pass 6]
DE:   #PIs = 354  #Luts =   794  Max Lvl =  22  Avg Lvl =   9.43  [   5.50 sec. at Pass 7]
DE:   #PIs = 354  #Luts =   785  Max Lvl =  21  Avg Lvl =   8.24  [   3.63 sec. at Pass 8]
DE:   #PIs = 354  #Luts =   781  Max Lvl =  20  Avg Lvl =   8.09  [   6.21 sec. at Pass 9]
DE:   #PIs = 354  #Luts =   779  Max Lvl =  20  Avg Lvl =   8.47  [   3.29 sec. at Pass 10]
DE:   #PIs = 354  #Luts =   777  Max Lvl =  24  Avg Lvl =   9.73  [   4.43 sec. at Pass 11]
DE:   #PIs = 354  #Luts =   774  Max Lvl =  24  Avg Lvl =   8.49  [   3.07 sec. at Pass 12]
DE:   #PIs = 354  #Luts =   772  Max Lvl =  23  Avg Lvl =   8.35  [   5.64 sec. at Pass 13]
DE:   #PIs = 354  #Luts =   768  Max Lvl =  24  Avg Lvl =   9.65  [   3.07 sec. at Pass 14]
DE:   #PIs = 354  #Luts =   768  Max Lvl =  22  Avg Lvl =   8.41  [   4.54 sec. at Pass 15]
DE:   #PIs = 354  #Luts =   765  Max Lvl =  24  Avg Lvl =   9.65  [   2.55 sec. at Pass 16]
DE:   #PIs = 354  #Luts =   765  Max Lvl =  24  Avg Lvl =   9.65  [   5.21 sec. at Pass 17]
DE:   #PIs = 354  #Luts =   764  Max Lvl =  25  Avg Lvl =   9.83  [   2.94 sec. at Pass 18]
DE:   #PIs = 354  #Luts =   764  Max Lvl =  25  Avg Lvl =   9.83  [   4.19 sec. at Pass 19]
DE:   #PIs = 354  #Luts =   764  Max Lvl =  23  Avg Lvl =   9.63  [   2.65 sec. at Pass 20]
DE:   #PIs = 354  #Luts =   763  Max Lvl =  25  Avg Lvl =   8.76  [   2.95 sec. at Pass 21]
DE:   #PIs = 354  #Luts =   761  Max Lvl =  23  Avg Lvl =   9.04  [   2.99 sec. at Pass 22]
DE:   #PIs = 354  #Luts =   761  Max Lvl =  23  Avg Lvl =   9.04  [   4.58 sec. at Pass 23]
DE:   #PIs = 354  #Luts =   756  Max Lvl =  24  Avg Lvl =   9.15  [   2.64 sec. at Pass 24]
DE:   #PIs = 354  #Luts =   756  Max Lvl =  24  Avg Lvl =   9.15  [   4.91 sec. at Pass 25]
DE:   #PIs = 354  #Luts =   756  Max Lvl =  24  Avg Lvl =   9.15  [   2.56 sec. at Pass 26]
DE:   #PIs = 354  #Luts =   756  Max Lvl =  24  Avg Lvl =   9.15  [   4.25 sec. at Pass 27]
DE:   #PIs = 354  #Luts =   756  Max Lvl =  24  Avg Lvl =   9.15  [   1.09 sec. at Pass 28]

yosys> opt_expr

3.100. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.

yosys> opt_merge -nomux

3.101. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

yosys> opt_muxtree

3.102. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.103. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.104. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_share

3.105. Executing OPT_SHARE pass.

yosys> opt_dff

3.106. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.107. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 0 unused cells and 3880 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.108. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
MAX OPT ITERATION = 1

yosys> opt_ffinv

3.109. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> stat

3.110. Printing statistics.

=== b14 ===

   Number of wires:                698
   Number of wire bits:           1613
   Number of public wires:          11
   Number of public wire bits:     179
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1145
     $_DFFE_PP0P_                  178
     $_DFF_PP0_                     37
     $lut                          703
     adder_carry                   227


yosys> shregmap -minlen 8 -maxlen 20

3.111. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.112. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.113. Printing statistics.

=== b14 ===

   Number of wires:                698
   Number of wire bits:           1613
   Number of public wires:          11
   Number of public wire bits:     179
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1145
     $_DFFE_PP0P_                  178
     $_DFF_PP0_                     37
     $lut                          703
     adder_carry                   227


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.114. Executing TECHMAP pass (map to technology primitives).

3.114.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.114.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.114.3. Continuing TECHMAP pass.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~1269 debug messages>

yosys> opt_expr -mux_undef

3.115. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
<suppressed ~14266 debug messages>

yosys> simplemap

3.116. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.117. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.

yosys> opt_merge

3.118. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
<suppressed ~7551 debug messages>
Removed a total of 2517 cells.

yosys> opt_dff -nodffe -nosdff

3.119. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.120. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 0 unused cells and 2662 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.121. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.121.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
<suppressed ~595 debug messages>

yosys> opt_merge -nomux

3.121.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

yosys> opt_muxtree

3.121.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.121.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.121.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.121.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.121.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 0 unused cells and 174 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.121.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.

3.121.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.121.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.121.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.121.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.121.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.121.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..

yosys> opt_expr

3.121.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.

3.121.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /home/users/temp_dir/yosys_p8WQl0/abc_tmp_2.scr

3.122. Executing ABC pass (technology mapping using ABC).

3.122.1. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Extracted 2472 gates and 2827 wires to a netlist network with 353 inputs and 396 outputs.

3.122.1.1. Executing ABC.
DE:   #PIs = 353  #Luts =   711  Max Lvl =  25  Avg Lvl =   9.88  [   0.33 sec. at Pass 0]
DE:   #PIs = 353  #Luts =   709  Max Lvl =  24  Avg Lvl =   9.59  [  10.39 sec. at Pass 1]
DE:   #PIs = 353  #Luts =   703  Max Lvl =  24  Avg Lvl =   9.57  [   2.31 sec. at Pass 2]
DE:   #PIs = 353  #Luts =   703  Max Lvl =  24  Avg Lvl =   9.57  [   3.25 sec. at Pass 3]
DE:   #PIs = 353  #Luts =   701  Max Lvl =  26  Avg Lvl =   9.93  [   3.47 sec. at Pass 4]
DE:   #PIs = 353  #Luts =   701  Max Lvl =  26  Avg Lvl =   9.93  [   4.18 sec. at Pass 5]
DE:   #PIs = 353  #Luts =   699  Max Lvl =  23  Avg Lvl =  10.15  [   3.88 sec. at Pass 6]
DE:   #PIs = 353  #Luts =   697  Max Lvl =  24  Avg Lvl =   8.45  [   4.93 sec. at Pass 7]
DE:   #PIs = 353  #Luts =   697  Max Lvl =  24  Avg Lvl =   8.45  [   3.48 sec. at Pass 8]
DE:   #PIs = 353  #Luts =   697  Max Lvl =  24  Avg Lvl =   8.45  [   4.91 sec. at Pass 9]
DE:   #PIs = 353  #Luts =   696  Max Lvl =  27  Avg Lvl =  11.24  [   2.52 sec. at Pass 10]
DE:   #PIs = 353  #Luts =   695  Max Lvl =  27  Avg Lvl =  10.63  [   4.66 sec. at Pass 11]
DE:   #PIs = 353  #Luts =   695  Max Lvl =  27  Avg Lvl =  10.63  [   2.53 sec. at Pass 12]
DE:   #PIs = 353  #Luts =   695  Max Lvl =  26  Avg Lvl =   9.97  [   4.73 sec. at Pass 13]
DE:   #PIs = 353  #Luts =   694  Max Lvl =  26  Avg Lvl =   9.19  [   4.18 sec. at Pass 14]
DE:   #PIs = 353  #Luts =   693  Max Lvl =  29  Avg Lvl =  10.84  [   4.39 sec. at Pass 15]
DE:   #PIs = 353  #Luts =   693  Max Lvl =  29  Avg Lvl =  10.84  [   2.45 sec. at Pass 16]
DE:   #PIs = 353  #Luts =   693  Max Lvl =  27  Avg Lvl =  10.16  [   4.35 sec. at Pass 17]
DE:   #PIs = 353  #Luts =   691  Max Lvl =  21  Avg Lvl =   8.05  [   2.82 sec. at Pass 18]
DE:   #PIs = 353  #Luts =   691  Max Lvl =  21  Avg Lvl =   8.05  [   3.76 sec. at Pass 19]
DE:   #PIs = 353  #Luts =   690  Max Lvl =  25  Avg Lvl =   8.59  [   2.22 sec. at Pass 20]
DE:   #PIs = 353  #Luts =   690  Max Lvl =  23  Avg Lvl =   8.73  [   2.64 sec. at Pass 21]
DE:   #PIs = 353  #Luts =   690  Max Lvl =  23  Avg Lvl =   8.73  [   2.45 sec. at Pass 22]
DE:   #PIs = 353  #Luts =   689  Max Lvl =  25  Avg Lvl =   8.57  [   3.56 sec. at Pass 23]
DE:   #PIs = 353  #Luts =   689  Max Lvl =  25  Avg Lvl =   8.57  [   2.86 sec. at Pass 24]
DE:   #PIs = 353  #Luts =   689  Max Lvl =  25  Avg Lvl =   8.57  [   4.17 sec. at Pass 25]
DE:   #PIs = 353  #Luts =   689  Max Lvl =  25  Avg Lvl =   8.57  [   2.58 sec. at Pass 26]
DE:   #PIs = 353  #Luts =   689  Max Lvl =  25  Avg Lvl =   8.57  [   0.91 sec. at Pass 27]

yosys> opt_expr

3.123. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.

yosys> opt_merge -nomux

3.124. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.125. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.126. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.127. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_share

3.128. Executing OPT_SHARE pass.

yosys> opt_dff

3.129. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.130. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 0 unused cells and 2312 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.131. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
MAX OPT ITERATION = 1

yosys> hierarchy -check

3.132. Executing HIERARCHY pass (managing design hierarchy).

3.132.1. Analyzing design hierarchy..
Top module:  \b14

3.132.2. Analyzing design hierarchy..
Top module:  \b14
Removed 0 unused modules.

yosys> stat

3.133. Printing statistics.

=== b14 ===

   Number of wires:                684
   Number of wire bits:           1599
   Number of public wires:          11
   Number of public wire bits:     179
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1131
     $lut                          689
     adder_carry                   227
     dffsre                        215


yosys> opt_clean -purge

3.134. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..

yosys> write_verilog -noattr -nohex synthesized.v

3.135. Executing Verilog backend.
Dumping module `\b14'.

Warnings: 5 unique messages, 6 total
End of script. Logfile hash: f53c09754d, CPU: user 24.29s system 0.71s, MEM: 62.57 MB peak
Yosys 0.18+10 (git sha1 7a7a25778, gcc 9.1.0 -fPIC -Os)
Time spent: 98% 6x abc (1238 sec), 0% 27x opt_dff (6 sec), ...
real 300.75
user 1146.21
sys 114.38
