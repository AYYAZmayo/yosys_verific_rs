
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.49
 Yosys 0.18+10 (git sha1 7a7a25778, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 05:39:28 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k defines.vh cavlc.v cavlc_fsm.v cavlc_len_gen.v cavlc_read_levels.v cavlc_read_run_befores.v cavlc_read_total_coeffs.v cavlc_read_total_zeros.v

yosys> verific -vlog2k defines.vh cavlc.v cavlc_fsm.v cavlc_len_gen.v cavlc_read_levels.v cavlc_read_run_befores.v cavlc_read_total_coeffs.v cavlc_read_total_zeros.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 05:39:28 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'defines.vh'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'cavlc.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'cavlc_fsm.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'cavlc_len_gen.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'cavlc_read_levels.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'cavlc_read_run_befores.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'cavlc_read_total_coeffs.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'cavlc_read_total_zeros.v'

yosys> synth_rs -top cavlc -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.58

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\RS_DSP2_MULT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_sim'.
Generating RTLIL representation for module `\dsp_t1_20x18x64'.
Generating RTLIL representation for module `\dsp_t1_10x9x32'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top cavlc

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] cavlc.v:41: compiling module 'cavlc'
VERIFIC-INFO [VERI-1018] cavlc_read_total_coeffs.v:43: compiling module 'cavlc_read_total_coeffs'
VERIFIC-INFO [VERI-1018] cavlc_read_levels.v:44: compiling module 'cavlc_read_levels'
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:155: expression size 32 truncated to fit in target size 4
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:212: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:226: expression size 10 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:229: expression size 31 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:259: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:261: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:263: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:266: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:268: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:270: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:273: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:275: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:277: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:280: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:282: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:284: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:287: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:289: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:291: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:294: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:296: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:298: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:301: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:303: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:305: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:308: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:310: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:312: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:315: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:317: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:319: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:322: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:324: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:326: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:329: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:331: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:333: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:336: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:338: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:340: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:343: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:345: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:347: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:350: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:352: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:354: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:357: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:359: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:361: expression size 32 truncated to fit in target size 9
VERIFIC-INFO [VERI-1018] cavlc_read_total_zeros.v:41: compiling module 'cavlc_read_total_zeros'
VERIFIC-WARNING [VERI-1209] cavlc_read_total_zeros.v:92: expression size 16 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_total_zeros.v:93: expression size 16 truncated to fit in target size 6
VERIFIC-WARNING [VERI-1209] cavlc_read_total_zeros.v:96: expression size 16 truncated to fit in target size 3
VERIFIC-WARNING [VERI-1209] cavlc_read_total_zeros.v:98: expression size 16 truncated to fit in target size 6
VERIFIC-WARNING [VERI-1209] cavlc_read_total_zeros.v:101: expression size 16 truncated to fit in target size 3
VERIFIC-WARNING [VERI-1209] cavlc_read_total_zeros.v:102: expression size 16 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_total_zeros.v:106: expression size 16 truncated to fit in target size 3
VERIFIC-WARNING [VERI-1209] cavlc_read_total_zeros.v:107: expression size 16 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_total_zeros.v:108: expression size 16 truncated to fit in target size 6
VERIFIC-WARNING [VERI-1209] cavlc_read_total_zeros.v:320: expression size 32 truncated to fit in target size 4
VERIFIC-WARNING [VERI-1209] cavlc_read_total_zeros.v:321: expression size 32 truncated to fit in target size 4
VERIFIC-WARNING [VERI-1209] cavlc_read_total_zeros.v:688: expression size 32 truncated to fit in target size 3
VERIFIC-WARNING [VERI-1209] cavlc_read_total_zeros.v:689: expression size 32 truncated to fit in target size 4
VERIFIC-INFO [VERI-1018] cavlc_read_run_befores.v:41: compiling module 'cavlc_read_run_befores'
VERIFIC-WARNING [VERI-1209] cavlc_read_run_befores.v:196: expression size 32 truncated to fit in target size 4
VERIFIC-WARNING [VERI-1209] cavlc_read_run_befores.v:201: expression size 32 truncated to fit in target size 4
VERIFIC-WARNING [VERI-1209] cavlc_read_run_befores.v:242: expression size 32 truncated to fit in target size 4
VERIFIC-WARNING [VERI-1209] cavlc_read_run_befores.v:255: expression size 32 truncated to fit in target size 4
VERIFIC-WARNING [VERI-1209] cavlc_read_run_befores.v:255: expression size 32 truncated to fit in target size 4
VERIFIC-INFO [VERI-1018] cavlc_len_gen.v:41: compiling module 'cavlc_len_gen'
VERIFIC-WARNING [VERI-1174] cavlc_len_gen.v:70: synthesis - simulation differences may occur when using parallel_case directive
VERIFIC-WARNING [VERI-1209] cavlc_len_gen.v:79: expression size 32 truncated to fit in target size 5
VERIFIC-INFO [VERI-1018] cavlc_fsm.v:41: compiling module 'cavlc_fsm'
VERIFIC-WARNING [VERI-1209] cavlc_fsm.v:106: expression size 32 truncated to fit in target size 4
VERIFIC-WARNING [VERI-1209] cavlc_fsm.v:135: expression size 32 truncated to fit in target size 4
VERIFIC-WARNING [VERI-1209] cavlc_fsm.v:139: expression size 32 truncated to fit in target size 4
VERIFIC-WARNING [VERI-1209] cavlc_fsm.v:144: expression size 32 truncated to fit in target size 4
VERIFIC-WARNING [VERI-1209] cavlc_fsm.v:153: expression size 32 truncated to fit in target size 4
Importing module cavlc.
Importing module cavlc_fsm.
Importing module cavlc_len_gen.
Importing module cavlc_read_levels.
Importing module cavlc_read_run_befores.
Importing module cavlc_read_total_coeffs.
Importing module cavlc_read_total_zeros.

3.3.1. Analyzing design hierarchy..
Top module:  \cavlc
Used module:     \cavlc_fsm
Used module:     \cavlc_len_gen
Used module:     \cavlc_read_run_befores
Used module:     \cavlc_read_total_zeros
Used module:     \cavlc_read_levels
Used module:     \cavlc_read_total_coeffs

3.3.2. Analyzing design hierarchy..
Top module:  \cavlc
Used module:     \cavlc_fsm
Used module:     \cavlc_len_gen
Used module:     \cavlc_read_run_befores
Used module:     \cavlc_read_total_zeros
Used module:     \cavlc_read_levels
Used module:     \cavlc_read_total_coeffs
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.4.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.4.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc_read_total_zeros.
<suppressed ~63 debug messages>
Optimizing module cavlc_read_total_coeffs.
<suppressed ~127 debug messages>
Optimizing module cavlc_read_run_befores.
<suppressed ~31 debug messages>
Optimizing module cavlc_read_levels.
<suppressed ~43 debug messages>
Optimizing module cavlc_len_gen.
Optimizing module cavlc_fsm.
<suppressed ~15 debug messages>
Optimizing module cavlc.

yosys> bmuxmap

3.5. Executing BMUXMAP pass.

yosys> demuxmap

3.6. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> flatten

3.7. Executing FLATTEN pass (flatten design).
Deleting now unused module cavlc_fsm.
Deleting now unused module cavlc_len_gen.
Deleting now unused module cavlc_read_levels.
Deleting now unused module cavlc_read_run_befores.
Deleting now unused module cavlc_read_total_coeffs.
Deleting now unused module cavlc_read_total_zeros.
<suppressed ~6 debug messages>

yosys> bmuxmap

3.8. Executing BMUXMAP pass.

yosys> demuxmap

3.9. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> tribuf -logic

3.10. Executing TRIBUF pass.

yosys> deminout

3.11. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.
<suppressed ~344 debug messages>

yosys> opt_clean

3.13. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..
Removed 4 unused cells and 1355 unused wires.
<suppressed ~87 debug messages>

yosys> check

3.14. Executing CHECK pass (checking for obvious problems).
Checking module cavlc...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.15. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.15.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

yosys> opt_merge -nomux

3.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

yosys> opt_muxtree

3.15.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $flatten\cavlc_read_levels.$verific$mux_134$cavlc_read_levels.v:244$1092: \cavlc_read_levels.level -> { 1'0 \cavlc_read_levels.level [7:0] }
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\cavlc_read_total_zeros.$verific$mux_590$cavlc_read_total_zeros.v:712$3697.
Removed 1 multiplexer ports.
<suppressed ~75 debug messages>

yosys> opt_reduce

3.15.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
    New ctrl vector for $pmux cell $flatten\cavlc_fsm.$verific$select_78$cavlc_fsm.v:156$734: { $flatten\cavlc_fsm.$verific$n328$618 $flatten\cavlc_fsm.$verific$n329$619 $flatten\cavlc_fsm.$verific$n332$622 $flatten\cavlc_fsm.$verific$n333$623 $flatten\cavlc_fsm.$verific$n334$624 $auto$opt_reduce.cc:134:opt_pmux$4555 }
    New ctrl vector for $pmux cell $flatten\cavlc_len_gen.$verific$select_18$cavlc_len_gen.v:80$757: { \cavlc_fsm.state [1] $auto$opt_reduce.cc:134:opt_pmux$4557 \cavlc_fsm.state [6] \cavlc_fsm.state [7] $flatten\cavlc_len_gen.$verific$n48$745 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_run_befores.$verific$select_121$cavlc_read_run_befores.v:259$1572: { $flatten\cavlc_read_run_befores.$verific$n400$1264 $flatten\cavlc_read_run_befores.$verific$n401$1265 $flatten\cavlc_read_run_befores.$verific$n402$1266 $flatten\cavlc_read_run_befores.$verific$n403$1267 $flatten\cavlc_read_run_befores.$verific$n404$1268 $flatten\cavlc_read_run_befores.$verific$n405$1269 $flatten\cavlc_read_run_befores.$verific$n406$1270 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_run_befores.$verific$select_122$cavlc_read_run_befores.v:259$1573: { $flatten\cavlc_read_run_befores.$verific$n400$1264 $flatten\cavlc_read_run_befores.$verific$n401$1265 $flatten\cavlc_read_run_befores.$verific$n402$1266 $flatten\cavlc_read_run_befores.$verific$n403$1267 $flatten\cavlc_read_run_befores.$verific$n404$1268 $flatten\cavlc_read_run_befores.$verific$n405$1269 $flatten\cavlc_read_run_befores.$verific$n406$1270 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_run_befores.$verific$select_236$cavlc_read_run_befores.v:348$1614: { $flatten\cavlc_read_run_befores.$verific$n1178$1278 $auto$opt_reduce.cc:134:opt_pmux$4559 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_run_befores.$verific$select_237$cavlc_read_run_befores.v:348$1615: { $flatten\cavlc_read_run_befores.$verific$n1179$1279 $auto$opt_reduce.cc:134:opt_pmux$4561 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_run_befores.$verific$select_238$cavlc_read_run_befores.v:348$1616: { $flatten\cavlc_read_run_befores.$verific$n1180$1280 $auto$opt_reduce.cc:134:opt_pmux$4563 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_run_befores.$verific$select_239$cavlc_read_run_befores.v:348$1617: { $flatten\cavlc_read_run_befores.$verific$n1181$1281 $auto$opt_reduce.cc:134:opt_pmux$4565 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_run_befores.$verific$select_240$cavlc_read_run_befores.v:348$1618: { $flatten\cavlc_read_run_befores.$verific$n1182$1282 $auto$opt_reduce.cc:134:opt_pmux$4567 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_run_befores.$verific$select_241$cavlc_read_run_befores.v:348$1619: { $flatten\cavlc_read_run_befores.$verific$n1183$1283 $auto$opt_reduce.cc:134:opt_pmux$4569 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_run_befores.$verific$select_242$cavlc_read_run_befores.v:348$1620: { $flatten\cavlc_read_run_befores.$verific$n1184$1284 $auto$opt_reduce.cc:134:opt_pmux$4571 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_run_befores.$verific$select_243$cavlc_read_run_befores.v:348$1621: { $flatten\cavlc_read_run_befores.$verific$n1185$1285 $auto$opt_reduce.cc:134:opt_pmux$4573 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_run_befores.$verific$select_244$cavlc_read_run_befores.v:348$1622: { $flatten\cavlc_read_run_befores.$verific$n1186$1286 $auto$opt_reduce.cc:134:opt_pmux$4575 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_run_befores.$verific$select_245$cavlc_read_run_befores.v:348$1623: { $flatten\cavlc_read_run_befores.$verific$n1187$1287 $auto$opt_reduce.cc:134:opt_pmux$4577 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_run_befores.$verific$select_246$cavlc_read_run_befores.v:348$1624: { $flatten\cavlc_read_run_befores.$verific$n1188$1288 $auto$opt_reduce.cc:134:opt_pmux$4579 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_run_befores.$verific$select_247$cavlc_read_run_befores.v:348$1625: { $flatten\cavlc_read_run_befores.$verific$n1189$1289 $auto$opt_reduce.cc:134:opt_pmux$4581 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_run_befores.$verific$select_248$cavlc_read_run_befores.v:348$1626: { $flatten\cavlc_read_run_befores.$verific$n1190$1290 $auto$opt_reduce.cc:134:opt_pmux$4583 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_run_befores.$verific$select_249$cavlc_read_run_befores.v:348$1627: { $flatten\cavlc_read_run_befores.$verific$n1191$1291 $auto$opt_reduce.cc:134:opt_pmux$4585 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_run_befores.$verific$select_250$cavlc_read_run_befores.v:348$1628: { $auto$opt_reduce.cc:134:opt_pmux$4587 $flatten\cavlc_read_run_befores.$verific$n1192$1292 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_total_coeffs.$verific$select_1051$cavlc_read_total_coeffs.v:1147$3102: { \cavlc_read_total_coeffs.rbsp_5 [0] $flatten\cavlc_read_total_coeffs.$verific$n4152$1943 $flatten\cavlc_read_total_coeffs.$verific$n4155$1946 $flatten\cavlc_read_total_coeffs.$verific$n4161$1952 $flatten\cavlc_read_total_coeffs.$verific$n4164$1955 $flatten\cavlc_read_total_coeffs.$verific$n4166$1957 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_total_coeffs.$verific$select_1052$cavlc_read_total_coeffs.v:1147$3103: { \cavlc_read_total_coeffs.rbsp_5 [0] $flatten\cavlc_read_total_coeffs.$verific$n4152$1943 $flatten\cavlc_read_total_coeffs.$verific$n4155$1946 $flatten\cavlc_read_total_coeffs.$verific$n4158$1949 $flatten\cavlc_read_total_coeffs.$verific$n4161$1952 $auto$opt_reduce.cc:134:opt_pmux$4589 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_total_coeffs.$verific$select_1053$cavlc_read_total_coeffs.v:1147$3104: { \cavlc_read_total_coeffs.rbsp_5 [0] $flatten\cavlc_read_total_coeffs.$verific$n4149$1940 $flatten\cavlc_read_total_coeffs.$verific$n4152$1943 $auto$opt_reduce.cc:134:opt_pmux$4593 $flatten\cavlc_read_total_coeffs.$verific$n4164$1955 $auto$opt_reduce.cc:134:opt_pmux$4591 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_total_coeffs.$verific$select_384$cavlc_read_total_coeffs.v:444$2771: { $flatten\cavlc_read_total_coeffs.$verific$n1613$1792 $flatten\cavlc_read_total_coeffs.$verific$n1616$1795 $flatten\cavlc_read_total_coeffs.$verific$n1619$1798 $flatten\cavlc_read_total_coeffs.$verific$n1622$1801 $flatten\cavlc_read_total_coeffs.$verific$n1625$1804 $flatten\cavlc_read_total_coeffs.$verific$n1628$1807 $flatten\cavlc_read_total_coeffs.$verific$n1631$1810 $flatten\cavlc_read_total_coeffs.$verific$n1634$1813 $flatten\cavlc_read_total_coeffs.$verific$n1637$1816 $flatten\cavlc_read_total_coeffs.$verific$n1640$1819 $flatten\cavlc_read_total_coeffs.$verific$n1643$1822 $flatten\cavlc_read_total_coeffs.$verific$n1646$1825 $auto$opt_reduce.cc:134:opt_pmux$4595 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_total_coeffs.$verific$select_385$cavlc_read_total_coeffs.v:444$2772: { $flatten\cavlc_read_total_coeffs.$verific$n1610$1789 $flatten\cavlc_read_total_coeffs.$verific$n1613$1792 $flatten\cavlc_read_total_coeffs.$verific$n1616$1795 $flatten\cavlc_read_total_coeffs.$verific$n1619$1798 $flatten\cavlc_read_total_coeffs.$verific$n1622$1801 $flatten\cavlc_read_total_coeffs.$verific$n1625$1804 $flatten\cavlc_read_total_coeffs.$verific$n1628$1807 $flatten\cavlc_read_total_coeffs.$verific$n1631$1810 $flatten\cavlc_read_total_coeffs.$verific$n1634$1813 $flatten\cavlc_read_total_coeffs.$verific$n1637$1816 $flatten\cavlc_read_total_coeffs.$verific$n1640$1819 $flatten\cavlc_read_total_coeffs.$verific$n1643$1822 $flatten\cavlc_read_total_coeffs.$verific$n1646$1825 $flatten\cavlc_read_total_coeffs.$verific$n1648$1827 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_total_coeffs.$verific$select_386$cavlc_read_total_coeffs.v:444$2773: { \cavlc_read_total_coeffs.rbsp_1 [0] $flatten\cavlc_read_total_coeffs.$verific$n1610$1789 $flatten\cavlc_read_total_coeffs.$verific$n1613$1792 $flatten\cavlc_read_total_coeffs.$verific$n1616$1795 $flatten\cavlc_read_total_coeffs.$verific$n1619$1798 $flatten\cavlc_read_total_coeffs.$verific$n1622$1801 $flatten\cavlc_read_total_coeffs.$verific$n1625$1804 $flatten\cavlc_read_total_coeffs.$verific$n1628$1807 $flatten\cavlc_read_total_coeffs.$verific$n1631$1810 $flatten\cavlc_read_total_coeffs.$verific$n1634$1813 $flatten\cavlc_read_total_coeffs.$verific$n1637$1816 $auto$opt_reduce.cc:134:opt_pmux$4599 $auto$opt_reduce.cc:134:opt_pmux$4597 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_total_coeffs.$verific$select_741$cavlc_read_total_coeffs.v:748$2967: { \cavlc_read_total_coeffs.rbsp_2 [0] $flatten\cavlc_read_total_coeffs.$verific$n2947$1870 $flatten\cavlc_read_total_coeffs.$verific$n2950$1873 $flatten\cavlc_read_total_coeffs.$verific$n2953$1876 $flatten\cavlc_read_total_coeffs.$verific$n2956$1879 $flatten\cavlc_read_total_coeffs.$verific$n2959$1882 $flatten\cavlc_read_total_coeffs.$verific$n2962$1885 $flatten\cavlc_read_total_coeffs.$verific$n2965$1888 $flatten\cavlc_read_total_coeffs.$verific$n2968$1891 $flatten\cavlc_read_total_coeffs.$verific$n2974$1897 $flatten\cavlc_read_total_coeffs.$verific$n2977$1900 $auto$opt_reduce.cc:134:opt_pmux$4601 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_total_coeffs.$verific$select_959$cavlc_read_total_coeffs.v:1052$3052: { \cavlc_read_total_coeffs.rbsp_3 [0] $flatten\cavlc_read_total_coeffs.$verific$n3828$1910 $flatten\cavlc_read_total_coeffs.$verific$n3831$1913 $flatten\cavlc_read_total_coeffs.$verific$n3834$1916 $flatten\cavlc_read_total_coeffs.$verific$n3837$1919 $flatten\cavlc_read_total_coeffs.$verific$n3840$1922 $flatten\cavlc_read_total_coeffs.$verific$n3843$1925 $auto$opt_reduce.cc:134:opt_pmux$4603 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_total_coeffs.$verific$select_960$cavlc_read_total_coeffs.v:1052$3053: { \cavlc_read_total_coeffs.rbsp_3 [0] $flatten\cavlc_read_total_coeffs.$verific$n3828$1910 $flatten\cavlc_read_total_coeffs.$verific$n3831$1913 $flatten\cavlc_read_total_coeffs.$verific$n3834$1916 $flatten\cavlc_read_total_coeffs.$verific$n3837$1919 $flatten\cavlc_read_total_coeffs.$verific$n3840$1922 $flatten\cavlc_read_total_coeffs.$verific$n3843$1925 $flatten\cavlc_read_total_coeffs.$verific$n3846$1928 $flatten\cavlc_read_total_coeffs.$verific$n3849$1931 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_total_coeffs.$verific$select_961$cavlc_read_total_coeffs.v:1052$3054: { \cavlc_read_total_coeffs.rbsp_3 [0] $flatten\cavlc_read_total_coeffs.$verific$n3828$1910 $flatten\cavlc_read_total_coeffs.$verific$n3831$1913 $flatten\cavlc_read_total_coeffs.$verific$n3834$1916 $flatten\cavlc_read_total_coeffs.$verific$n3837$1919 $flatten\cavlc_read_total_coeffs.$verific$n3840$1922 $flatten\cavlc_read_total_coeffs.$verific$n3843$1925 $flatten\cavlc_read_total_coeffs.$verific$n3846$1928 $auto$opt_reduce.cc:134:opt_pmux$4605 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_total_zeros.$verific$select_138$cavlc_read_total_zeros.v:217$3590: { $flatten\cavlc_read_total_zeros.$verific$n440$3154 $flatten\cavlc_read_total_zeros.$verific$n443$3157 $flatten\cavlc_read_total_zeros.$verific$n446$3160 $flatten\cavlc_read_total_zeros.$verific$n449$3163 $flatten\cavlc_read_total_zeros.$verific$n452$3166 $flatten\cavlc_read_total_zeros.$verific$n455$3169 $flatten\cavlc_read_total_zeros.$verific$n458$3172 $flatten\cavlc_read_total_zeros.$verific$n460$3174 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_total_zeros.$verific$select_139$cavlc_read_total_zeros.v:217$3591: { \cavlc_read_total_zeros.rbsp_LE3 [0] $flatten\cavlc_read_total_zeros.$verific$n440$3154 $flatten\cavlc_read_total_zeros.$verific$n443$3157 $flatten\cavlc_read_total_zeros.$verific$n446$3160 $flatten\cavlc_read_total_zeros.$verific$n449$3163 $flatten\cavlc_read_total_zeros.$verific$n452$3166 $flatten\cavlc_read_total_zeros.$verific$n455$3169 $auto$opt_reduce.cc:134:opt_pmux$4607 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_total_zeros.$verific$select_230$cavlc_read_total_zeros.v:317$3616: { \cavlc_read_total_zeros.rbsp_LE3 [0] $flatten\cavlc_read_total_zeros.$verific$n440$3154 $flatten\cavlc_read_total_zeros.$verific$n443$3157 $auto$opt_reduce.cc:134:opt_pmux$4609 $flatten\cavlc_read_total_zeros.$verific$n451$3165 }
  Optimizing cells in module \cavlc.
Performed a total of 32 changes.

yosys> opt_merge

3.15.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
<suppressed ~36 debug messages>
Removed a total of 12 cells.

yosys> opt_dff -nodffe -nosdff

3.15.6. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $flatten\cavlc_read_total_coeffs.$verific$rbsp_5_reg$cavlc_read_total_coeffs.v:149$2550 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_total_coeffs.$verific$rbsp_4_reg$cavlc_read_total_coeffs.v:149$2549 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_total_coeffs.$verific$rbsp_3_reg$cavlc_read_total_coeffs.v:149$2548 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_total_coeffs.$verific$rbsp_2_reg$cavlc_read_total_coeffs.v:149$2547 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_total_coeffs.$verific$rbsp_1_reg$cavlc_read_total_coeffs.v:149$2546 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_total_coeffs.$verific$TrailingOnes_reg$cavlc_read_total_coeffs.v:1193$3136 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_total_coeffs.$verific$TotalCoeff_reg$cavlc_read_total_coeffs.v:1193$3137 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_run_befores.$verific$coeff_9_reg$cavlc_read_run_befores.v:366$1732 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_run_befores.$verific$coeff_8_reg$cavlc_read_run_befores.v:366$1731 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_run_befores.$verific$coeff_7_reg$cavlc_read_run_befores.v:366$1730 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_run_befores.$verific$coeff_6_reg$cavlc_read_run_befores.v:366$1729 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_run_befores.$verific$coeff_5_reg$cavlc_read_run_befores.v:366$1728 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_run_befores.$verific$coeff_4_reg$cavlc_read_run_befores.v:366$1727 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_run_befores.$verific$coeff_3_reg$cavlc_read_run_befores.v:366$1726 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_run_befores.$verific$coeff_2_reg$cavlc_read_run_befores.v:366$1725 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_run_befores.$verific$coeff_1_reg$cavlc_read_run_befores.v:366$1724 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_run_befores.$verific$coeff_15_reg$cavlc_read_run_befores.v:366$1738 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_run_befores.$verific$coeff_14_reg$cavlc_read_run_befores.v:366$1737 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_run_befores.$verific$coeff_13_reg$cavlc_read_run_befores.v:366$1736 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_run_befores.$verific$coeff_12_reg$cavlc_read_run_befores.v:366$1735 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_run_befores.$verific$coeff_11_reg$cavlc_read_run_befores.v:366$1734 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_run_befores.$verific$coeff_10_reg$cavlc_read_run_befores.v:366$1733 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_run_befores.$verific$coeff_0_reg$cavlc_read_run_befores.v:366$1723 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_run_befores.$verific$ZeroLeft_reg$cavlc_read_run_befores.v:286$1587 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$suffixLength_reg$cavlc_read_levels.v:187$1054 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_prefix_reg$cavlc_read_levels.v:165$1026 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_code_tmp_reg$cavlc_read_levels.v:213$1077 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_abs_reg$cavlc_read_levels.v:245$1095 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_9_reg$cavlc_read_levels.v:382$1210 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_8_reg$cavlc_read_levels.v:382$1209 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_7_reg$cavlc_read_levels.v:382$1208 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_6_reg$cavlc_read_levels.v:382$1207 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_5_reg$cavlc_read_levels.v:382$1206 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_4_reg$cavlc_read_levels.v:382$1205 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_3_reg$cavlc_read_levels.v:382$1204 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_2_reg$cavlc_read_levels.v:382$1203 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_1_reg$cavlc_read_levels.v:382$1202 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_15_reg$cavlc_read_levels.v:382$1216 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_14_reg$cavlc_read_levels.v:382$1215 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_13_reg$cavlc_read_levels.v:382$1214 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_12_reg$cavlc_read_levels.v:382$1213 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_11_reg$cavlc_read_levels.v:382$1212 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_10_reg$cavlc_read_levels.v:382$1211 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_0_reg$cavlc_read_levels.v:382$1201 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_fsm.$verific$valid_reg$cavlc_fsm.v:156$740 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_fsm.$verific$state_reg$cavlc_fsm.v:156$738 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_fsm.$verific$i_reg$cavlc_fsm.v:156$739 ($aldff) from module cavlc.

yosys> opt_clean

3.15.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..
Removed 0 unused cells and 8 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.15.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.
<suppressed ~2 debug messages>

3.15.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.15.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~82 debug messages>

yosys> opt_reduce

3.15.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
Performed a total of 0 changes.

yosys> opt_merge

3.15.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.15.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.15.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.15.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

3.15.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.15.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~82 debug messages>

yosys> opt_reduce

3.15.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
Performed a total of 0 changes.

yosys> opt_merge

3.15.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.15.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.15.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..

yosys> opt_expr

3.15.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

3.15.23. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

3.16. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.16.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking cavlc.cavlc_fsm.state as FSM state register:
    Register is connected to module port.
    Users of register don't seem to benefit from recoding.
Not marking cavlc.cavlc_read_levels.level_prefix as FSM state register:
    Users of register don't seem to benefit from recoding.

yosys> fsm_extract

3.16.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.16.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.16.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..

yosys> fsm_opt

3.16.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.16.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.16.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.16.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat

3.17. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.17.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

yosys> opt_merge -nomux

3.17.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.17.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~82 debug messages>

yosys> opt_reduce

3.17.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
Performed a total of 0 changes.

yosys> opt_merge

3.17.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.17.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\cavlc_read_total_coeffs.$verific$rbsp_5_reg$cavlc_read_total_coeffs.v:149$2550 ($adff) from module cavlc (D = { \rbsp [0] \rbsp [1] \rbsp [2] \rbsp [3] \rbsp [4] \rbsp [5] \rbsp [6] \rbsp [7] }, Q = { \cavlc_read_total_coeffs.rbsp_5 [0] \cavlc_read_total_coeffs.rbsp_5 [1] \cavlc_read_total_coeffs.rbsp_5 [2] \cavlc_read_total_coeffs.rbsp_5 [3] \cavlc_read_total_coeffs.rbsp_5 [4] \cavlc_read_total_coeffs.rbsp_5 [5] \cavlc_read_total_coeffs.rbsp_5 [6] \cavlc_read_total_coeffs.rbsp_5 [7] }).
Adding EN signal on $flatten\cavlc_read_total_coeffs.$verific$rbsp_4_reg$cavlc_read_total_coeffs.v:149$2549 ($adff) from module cavlc (D = { \rbsp [0] \rbsp [1] \rbsp [2] \rbsp [3] \rbsp [4] \rbsp [5] }, Q = { \cavlc_read_total_coeffs.rbsp_4 [0] \cavlc_read_total_coeffs.rbsp_4 [1] \cavlc_read_total_coeffs.rbsp_4 [2] \cavlc_read_total_coeffs.rbsp_4 [3] \cavlc_read_total_coeffs.rbsp_4 [4] \cavlc_read_total_coeffs.rbsp_4 [5] }).
Adding EN signal on $flatten\cavlc_read_total_coeffs.$verific$rbsp_3_reg$cavlc_read_total_coeffs.v:149$2548 ($adff) from module cavlc (D = { \rbsp [0] \rbsp [1] \rbsp [2] \rbsp [3] \rbsp [4] \rbsp [5] \rbsp [6] \rbsp [7] \rbsp [8] \rbsp [9] }, Q = { \cavlc_read_total_coeffs.rbsp_3 [0] \cavlc_read_total_coeffs.rbsp_3 [1] \cavlc_read_total_coeffs.rbsp_3 [2] \cavlc_read_total_coeffs.rbsp_3 [3] \cavlc_read_total_coeffs.rbsp_3 [4] \cavlc_read_total_coeffs.rbsp_3 [5] \cavlc_read_total_coeffs.rbsp_3 [6] \cavlc_read_total_coeffs.rbsp_3 [7] \cavlc_read_total_coeffs.rbsp_3 [8] \cavlc_read_total_coeffs.rbsp_3 [9] }).
Adding EN signal on $flatten\cavlc_read_total_coeffs.$verific$rbsp_2_reg$cavlc_read_total_coeffs.v:149$2547 ($adff) from module cavlc (D = { \rbsp [0] \rbsp [1] \rbsp [2] \rbsp [3] \rbsp [4] \rbsp [5] \rbsp [6] \rbsp [7] \rbsp [8] \rbsp [9] \rbsp [10] \rbsp [11] \rbsp [12] \rbsp [13] }, Q = { \cavlc_read_total_coeffs.rbsp_2 [0] \cavlc_read_total_coeffs.rbsp_2 [1] \cavlc_read_total_coeffs.rbsp_2 [2] \cavlc_read_total_coeffs.rbsp_2 [3] \cavlc_read_total_coeffs.rbsp_2 [4] \cavlc_read_total_coeffs.rbsp_2 [5] \cavlc_read_total_coeffs.rbsp_2 [6] \cavlc_read_total_coeffs.rbsp_2 [7] \cavlc_read_total_coeffs.rbsp_2 [8] \cavlc_read_total_coeffs.rbsp_2 [9] \cavlc_read_total_coeffs.rbsp_2 [10] \cavlc_read_total_coeffs.rbsp_2 [11] \cavlc_read_total_coeffs.rbsp_2 [12] \cavlc_read_total_coeffs.rbsp_2 [13] }).
Adding EN signal on $flatten\cavlc_read_total_coeffs.$verific$rbsp_1_reg$cavlc_read_total_coeffs.v:149$2546 ($adff) from module cavlc (D = { \rbsp [0] \rbsp [1] \rbsp [2] \rbsp [3] \rbsp [4] \rbsp [5] \rbsp [6] \rbsp [7] \rbsp [8] \rbsp [9] \rbsp [10] \rbsp [11] \rbsp [12] \rbsp [13] \rbsp [14] \rbsp [15] }, Q = { \cavlc_read_total_coeffs.rbsp_1 [0] \cavlc_read_total_coeffs.rbsp_1 [1] \cavlc_read_total_coeffs.rbsp_1 [2] \cavlc_read_total_coeffs.rbsp_1 [3] \cavlc_read_total_coeffs.rbsp_1 [4] \cavlc_read_total_coeffs.rbsp_1 [5] \cavlc_read_total_coeffs.rbsp_1 [6] \cavlc_read_total_coeffs.rbsp_1 [7] \cavlc_read_total_coeffs.rbsp_1 [8] \cavlc_read_total_coeffs.rbsp_1 [9] \cavlc_read_total_coeffs.rbsp_1 [10] \cavlc_read_total_coeffs.rbsp_1 [11] \cavlc_read_total_coeffs.rbsp_1 [12] \cavlc_read_total_coeffs.rbsp_1 [13] \cavlc_read_total_coeffs.rbsp_1 [14] \cavlc_read_total_coeffs.rbsp_1 [15] }).
Adding EN signal on $flatten\cavlc_read_total_coeffs.$verific$TrailingOnes_reg$cavlc_read_total_coeffs.v:1193$3136 ($adff) from module cavlc (D = \cavlc_fsm.TrailingOnes_comb, Q = \cavlc_read_total_coeffs.TrailingOnes).
Adding EN signal on $flatten\cavlc_read_total_coeffs.$verific$TotalCoeff_reg$cavlc_read_total_coeffs.v:1193$3137 ($adff) from module cavlc (D = \cavlc_fsm.TotalCoeff_comb, Q = \cavlc_read_total_coeffs.TotalCoeff).
Adding EN signal on $flatten\cavlc_read_run_befores.$verific$coeff_9_reg$cavlc_read_run_befores.v:366$1732 ($adff) from module cavlc (D = $flatten\cavlc_read_run_befores.$verific$n2079$1494, Q = \cavlc_read_run_befores.coeff_9).
Adding EN signal on $flatten\cavlc_read_run_befores.$verific$coeff_8_reg$cavlc_read_run_befores.v:366$1731 ($adff) from module cavlc (D = $flatten\cavlc_read_run_befores.$verific$n2069$1493, Q = \cavlc_read_run_befores.coeff_8).
Adding EN signal on $flatten\cavlc_read_run_befores.$verific$coeff_7_reg$cavlc_read_run_befores.v:366$1730 ($adff) from module cavlc (D = $flatten\cavlc_read_run_befores.$verific$n2059$1492, Q = \cavlc_read_run_befores.coeff_7).
Adding EN signal on $flatten\cavlc_read_run_befores.$verific$coeff_6_reg$cavlc_read_run_befores.v:366$1729 ($adff) from module cavlc (D = $flatten\cavlc_read_run_befores.$verific$n2049$1491, Q = \cavlc_read_run_befores.coeff_6).
Adding EN signal on $flatten\cavlc_read_run_befores.$verific$coeff_5_reg$cavlc_read_run_befores.v:366$1728 ($adff) from module cavlc (D = $flatten\cavlc_read_run_befores.$verific$n2039$1490, Q = \cavlc_read_run_befores.coeff_5).
Adding EN signal on $flatten\cavlc_read_run_befores.$verific$coeff_4_reg$cavlc_read_run_befores.v:366$1727 ($adff) from module cavlc (D = $flatten\cavlc_read_run_befores.$verific$n2029$1489, Q = \cavlc_read_run_befores.coeff_4).
Adding EN signal on $flatten\cavlc_read_run_befores.$verific$coeff_3_reg$cavlc_read_run_befores.v:366$1726 ($adff) from module cavlc (D = $flatten\cavlc_read_run_befores.$verific$n2019$1488, Q = \cavlc_read_run_befores.coeff_3).
Adding EN signal on $flatten\cavlc_read_run_befores.$verific$coeff_2_reg$cavlc_read_run_befores.v:366$1725 ($adff) from module cavlc (D = $flatten\cavlc_read_run_befores.$verific$n2009$1487, Q = \cavlc_read_run_befores.coeff_2).
Adding EN signal on $flatten\cavlc_read_run_befores.$verific$coeff_1_reg$cavlc_read_run_befores.v:366$1724 ($adff) from module cavlc (D = $flatten\cavlc_read_run_befores.$verific$n1999$1486, Q = \cavlc_read_run_befores.coeff_1).
Adding EN signal on $flatten\cavlc_read_run_befores.$verific$coeff_15_reg$cavlc_read_run_befores.v:366$1738 ($adff) from module cavlc (D = $flatten\cavlc_read_run_befores.$verific$n2139$1500, Q = \cavlc_read_run_befores.coeff_15).
Adding EN signal on $flatten\cavlc_read_run_befores.$verific$coeff_14_reg$cavlc_read_run_befores.v:366$1737 ($adff) from module cavlc (D = $flatten\cavlc_read_run_befores.$verific$n2129$1499, Q = \cavlc_read_run_befores.coeff_14).
Adding EN signal on $flatten\cavlc_read_run_befores.$verific$coeff_13_reg$cavlc_read_run_befores.v:366$1736 ($adff) from module cavlc (D = $flatten\cavlc_read_run_befores.$verific$n2119$1498, Q = \cavlc_read_run_befores.coeff_13).
Adding EN signal on $flatten\cavlc_read_run_befores.$verific$coeff_12_reg$cavlc_read_run_befores.v:366$1735 ($adff) from module cavlc (D = $flatten\cavlc_read_run_befores.$verific$n2109$1497, Q = \cavlc_read_run_befores.coeff_12).
Adding EN signal on $flatten\cavlc_read_run_befores.$verific$coeff_11_reg$cavlc_read_run_befores.v:366$1734 ($adff) from module cavlc (D = $flatten\cavlc_read_run_befores.$verific$n2099$1496, Q = \cavlc_read_run_befores.coeff_11).
Adding EN signal on $flatten\cavlc_read_run_befores.$verific$coeff_10_reg$cavlc_read_run_befores.v:366$1733 ($adff) from module cavlc (D = $flatten\cavlc_read_run_befores.$verific$n2089$1495, Q = \cavlc_read_run_befores.coeff_10).
Adding EN signal on $flatten\cavlc_read_run_befores.$verific$coeff_0_reg$cavlc_read_run_befores.v:366$1723 ($adff) from module cavlc (D = $flatten\cavlc_read_run_befores.$verific$n1989$1485, Q = \cavlc_read_run_befores.coeff_0).
Adding EN signal on $flatten\cavlc_read_run_befores.$verific$ZeroLeft_reg$cavlc_read_run_befores.v:286$1587 ($adff) from module cavlc (D = $flatten\cavlc_read_run_befores.$verific$n494$1386, Q = \cavlc_read_run_befores.ZeroLeft).
Adding EN signal on $flatten\cavlc_read_levels.$verific$suffixLength_reg$cavlc_read_levels.v:187$1054 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n363$844, Q = \cavlc_read_levels.suffixLength).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_prefix_reg$cavlc_read_levels.v:165$1026 ($adff) from module cavlc (D = \cavlc_read_levels.level_prefix_comb, Q = \cavlc_read_levels.level_prefix).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_code_tmp_reg$cavlc_read_levels.v:213$1077 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n551$857 [8:0], Q = \cavlc_read_levels.level_code_tmp).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_abs_reg$cavlc_read_levels.v:245$1095 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n800$868, Q = \cavlc_read_levels.level_abs).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_9_reg$cavlc_read_levels.v:382$1210 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3944$961, Q = \cavlc_read_levels.level_9).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_8_reg$cavlc_read_levels.v:382$1209 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3954$962, Q = \cavlc_read_levels.level_8).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_7_reg$cavlc_read_levels.v:382$1208 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3964$963, Q = \cavlc_read_levels.level_7).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_6_reg$cavlc_read_levels.v:382$1207 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3974$964, Q = \cavlc_read_levels.level_6).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_5_reg$cavlc_read_levels.v:382$1206 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3984$965, Q = \cavlc_read_levels.level_5).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_4_reg$cavlc_read_levels.v:382$1205 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3994$966, Q = \cavlc_read_levels.level_4).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_3_reg$cavlc_read_levels.v:382$1204 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4004$967, Q = \cavlc_read_levels.level_3).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_2_reg$cavlc_read_levels.v:382$1203 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4014$968, Q = \cavlc_read_levels.level_2).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_1_reg$cavlc_read_levels.v:382$1202 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4024$969, Q = \cavlc_read_levels.level_1).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_15_reg$cavlc_read_levels.v:382$1216 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3884$955, Q = \cavlc_read_levels.level_15).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_14_reg$cavlc_read_levels.v:382$1215 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3894$956, Q = \cavlc_read_levels.level_14).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_13_reg$cavlc_read_levels.v:382$1214 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3904$957, Q = \cavlc_read_levels.level_13).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_12_reg$cavlc_read_levels.v:382$1213 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3914$958, Q = \cavlc_read_levels.level_12).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_11_reg$cavlc_read_levels.v:382$1212 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3924$959, Q = \cavlc_read_levels.level_11).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_10_reg$cavlc_read_levels.v:382$1211 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3934$960, Q = \cavlc_read_levels.level_10).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_0_reg$cavlc_read_levels.v:382$1201 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4034$970, Q = \cavlc_read_levels.level_0).
Adding EN signal on $flatten\cavlc_fsm.$verific$valid_reg$cavlc_fsm.v:156$740 ($adff) from module cavlc (D = $flatten\cavlc_fsm.$verific$n346$627, Q = \cavlc_fsm.valid).
Adding EN signal on $flatten\cavlc_fsm.$verific$state_reg$cavlc_fsm.v:156$738 ($adff) from module cavlc (D = $flatten\cavlc_fsm.$verific$n336$667, Q = \cavlc_fsm.state).
Adding EN signal on $flatten\cavlc_fsm.$verific$i_reg$cavlc_fsm.v:156$739 ($adff) from module cavlc (D = $flatten\cavlc_fsm.$verific$n347$668, Q = \cavlc_fsm.i).

yosys> opt_clean

3.17.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..
Removed 28 unused cells and 28 unused wires.
<suppressed ~29 debug messages>

yosys> opt_expr

3.17.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.
<suppressed ~38 debug messages>

3.17.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.17.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~73 debug messages>

yosys> opt_reduce

3.17.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
Performed a total of 0 changes.

yosys> opt_merge

3.17.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
<suppressed ~630 debug messages>
Removed a total of 210 cells.

yosys> opt_dff -sat

3.17.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.17.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..
Removed 0 unused cells and 195 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.17.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

3.17.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.17.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~111 debug messages>

yosys> opt_reduce

3.17.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
Performed a total of 0 changes.

yosys> opt_merge

3.17.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.17.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.17.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..

yosys> opt_expr

3.17.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

3.17.23. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.18. Executing WREDUCE pass (reducing word size of cells).
Removed top 3 bits (of 6) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$5159 ($ne).
Removed top 3 bits (of 6) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$5163 ($ne).
Removed top 2 bits (of 6) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$5171 ($ne).
Removed top 2 bits (of 5) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$5173 ($ne).
Removed top 1 bits (of 3) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$5186 ($ne).
Removed top 2 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$auto$bmuxmap.cc:60:execute$3705 ($mux).
Removed top 1 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$auto$bmuxmap.cc:60:execute$3706 ($mux).
Removed top 1 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$auto$bmuxmap.cc:60:execute$3708 ($mux).
Removed top 1 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$auto$bmuxmap.cc:60:execute$3710 ($mux).
Removed top 3 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$auto$bmuxmap.cc:60:execute$3715 ($mux).
Removed top 3 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$auto$bmuxmap.cc:60:execute$3716 ($mux).
Removed top 1 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$auto$bmuxmap.cc:60:execute$3718 ($mux).
Removed top 1 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$auto$bmuxmap.cc:60:execute$3721 ($mux).
Removed top 1 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$auto$bmuxmap.cc:60:execute$3723 ($mux).
Removed top 1 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$auto$bmuxmap.cc:60:execute$3735 ($mux).
Removed top 2 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$auto$bmuxmap.cc:60:execute$3736 ($mux).
Removed top 1 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$auto$bmuxmap.cc:60:execute$3738 ($mux).
Removed top 2 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$auto$bmuxmap.cc:60:execute$3740 ($mux).
Removed top 1 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$auto$bmuxmap.cc:60:execute$3741 ($mux).
Removed top 1 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$auto$bmuxmap.cc:60:execute$3743 ($mux).
Removed top 3 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$auto$bmuxmap.cc:60:execute$3745 ($mux).
Removed top 3 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$auto$bmuxmap.cc:60:execute$3746 ($mux).
Removed top 2 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$auto$bmuxmap.cc:60:execute$3748 ($mux).
Removed top 3 bits (of 4) from port B of cell cavlc.$flatten\cavlc_read_total_zeros.$verific$equal_30$cavlc_read_total_zeros.v:115$3523 ($eq).
Removed top 2 bits (of 4) from port B of cell cavlc.$flatten\cavlc_read_total_zeros.$verific$equal_45$cavlc_read_total_zeros.v:131$3531 ($eq).
Removed top 1 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_101$cavlc_read_total_zeros.v:204$3565 ($mux).
Removed top 2 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_105$cavlc_read_total_zeros.v:211$3567 ($mux).
Removed top 2 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_151$cavlc_read_total_zeros.v:240$3595 ($mux).
Removed top 2 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_152$cavlc_read_total_zeros.v:241$3596 ($mux).
Removed top 1 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_153$cavlc_read_total_zeros.v:241$3597 ($mux).
Removed top 2 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_161$cavlc_read_total_zeros.v:255$3600 ($mux).
Removed top 1 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_195$cavlc_read_total_zeros.v:289$3609 ($mux).
Removed top 1 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_196$cavlc_read_total_zeros.v:290$3610 ($mux).
Removed top 1 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_211$cavlc_read_total_zeros.v:315$3615 ($mux).
Removed top 3 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_247$cavlc_read_total_zeros.v:351$3625 ($mux).
Removed top 3 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_283$cavlc_read_total_zeros.v:393$3641 ($mux).
Removed top 1 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_284$cavlc_read_total_zeros.v:394$3642 ($mux).
Removed top 2 bits (of 3) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_359$cavlc_read_total_zeros.v:468$3654 ($mux).
Removed top 1 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_471$cavlc_read_total_zeros.v:576$3667 ($mux).
Removed top 3 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_552$cavlc_read_total_zeros.v:664$3680 ($mux).
Removed top 1 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_591$cavlc_read_total_zeros.v:712$3698 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_60$cavlc_read_total_zeros.v:150$3536 ($mux).
Removed top 3 bits (of 12) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_626$cavlc_read_total_zeros.v:685$3513 ($mux).
Removed top 3 bits (of 8) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_628$cavlc_read_total_zeros.v:678$3688 ($mux).
Removed top 5 bits (of 6) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_664$cavlc_read_total_zeros.v:678$3686 ($mux).
Removed top 1 bits (of 8) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_682$cavlc_read_total_zeros.v:610$3678 ($mux).
Removed top 3 bits (of 8) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_686$cavlc_read_total_zeros.v:595$3671 ($mux).
Removed top 3 bits (of 8) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_689$cavlc_read_total_zeros.v:505$3666 ($mux).
Removed top 1 bits (of 12) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_690$cavlc_read_total_zeros.v:512$3658 ($mux).
Removed top 3 bits (of 16) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_692$cavlc_read_total_zeros.v:565$3657 ($mux).
Removed top 1 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_85$cavlc_read_total_zeros.v:176$3557 ($mux).
Removed top 2 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_89$cavlc_read_total_zeros.v:183$3559 ($mux).
Removed top 2 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_97$cavlc_read_total_zeros.v:197$3563 ($mux).
Removed top 1 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$select_182$cavlc_read_total_zeros.v:266$3602 ($pmux).
Removed top 1 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$select_230$cavlc_read_total_zeros.v:317$3616 ($pmux).
Removed top 1 bits (of 8) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$select_685$cavlc_read_total_zeros.v:597$3628 ($pmux).
Removed top 1 bits (of 16) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$select_688$cavlc_read_total_zeros.v:567$3668 ($pmux).
Removed top 1 bits (of 6) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$4852 ($ne).
Removed top 1 bits (of 5) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$4854 ($ne).
Removed top 2 bits (of 4) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$4856 ($ne).
Removed top 1 bits (of 5) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$4862 ($ne).
Removed top 1 bits (of 4) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$4864 ($ne).
Removed top 2 bits (of 3) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$4868 ($ne).
Removed top 1 bits (of 6) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$4875 ($ne).
Removed top 1 bits (of 6) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$4879 ($ne).
Removed top 1 bits (of 6) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$4902 ($ne).
Removed top 1 bits (of 6) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$4906 ($ne).
Removed top 1 bits (of 5) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$4908 ($ne).
Removed top 1 bits (of 6) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$4914 ($ne).
Removed top 1 bits (of 5) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$4916 ($ne).
Removed top 1 bits (of 6) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$4925 ($ne).
Removed top 1 bits (of 6) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$4929 ($ne).
Removed top 1 bits (of 6) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$4937 ($ne).
Removed top 1 bits (of 5) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$4939 ($ne).
Removed top 1 bits (of 6) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$4948 ($ne).
Removed top 2 bits (of 6) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$4952 ($ne).
Removed top 3 bits (of 5) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$4954 ($ne).
Removed top 1 bits (of 4) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$4956 ($ne).
Removed top 1 bits (of 6) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$4960 ($ne).
Removed top 2 bits (of 5) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$4962 ($ne).
Removed top 3 bits (of 4) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$4964 ($ne).
Removed top 1 bits (of 4) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$4966 ($ne).
Removed top 2 bits (of 6) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$4973 ($ne).
Removed top 2 bits (of 6) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$4977 ($ne).
Removed top 1 bits (of 6) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$4985 ($ne).
Removed top 1 bits (of 5) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$4987 ($ne).
Removed top 2 bits (of 6) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$4998 ($ne).
Removed top 4 bits (of 6) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$5002 ($ne).
Removed top 2 bits (of 5) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$5004 ($ne).
Removed top 2 bits (of 6) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$5010 ($ne).
Removed top 4 bits (of 5) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$5012 ($ne).
Removed top 1 bits (of 3) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$5014 ($ne).
Removed top 2 bits (of 4) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$4714 ($ne).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$auto$bmuxmap.cc:60:execute$3793 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$auto$bmuxmap.cc:60:execute$3794 ($mux).
Removed top 4 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$auto$bmuxmap.cc:60:execute$3798 ($mux).
Removed top 2 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$auto$bmuxmap.cc:60:execute$3799 ($mux).
Removed top 4 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$auto$bmuxmap.cc:60:execute$3800 ($mux).
Removed top 4 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$auto$bmuxmap.cc:60:execute$3801 ($mux).
Removed top 2 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$auto$bmuxmap.cc:60:execute$3803 ($mux).
Removed top 2 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$auto$bmuxmap.cc:60:execute$3804 ($mux).
Removed top 2 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$auto$bmuxmap.cc:60:execute$3806 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$auto$bmuxmap.cc:60:execute$3809 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$auto$bmuxmap.cc:60:execute$3810 ($mux).
Removed top 2 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$auto$bmuxmap.cc:60:execute$3818 ($mux).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$auto$bmuxmap.cc:60:execute$3819 ($mux).
Removed top 4 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$auto$bmuxmap.cc:60:execute$3820 ($mux).
Removed top 4 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$auto$bmuxmap.cc:60:execute$3821 ($mux).
Removed top 2 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$auto$bmuxmap.cc:60:execute$3823 ($mux).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$auto$bmuxmap.cc:60:execute$3824 ($mux).
Removed top 2 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$auto$bmuxmap.cc:60:execute$3826 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$auto$bmuxmap.cc:60:execute$3828 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$auto$bmuxmap.cc:60:execute$3829 ($mux).
Removed top 4 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$auto$bmuxmap.cc:60:execute$3838 ($mux).
Removed top 1 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$auto$bmuxmap.cc:60:execute$3839 ($mux).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$auto$bmuxmap.cc:60:execute$3840 ($mux).
Removed top 1 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$auto$bmuxmap.cc:60:execute$3841 ($mux).
Removed top 1 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$auto$bmuxmap.cc:60:execute$3843 ($mux).
Removed top 1 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$auto$bmuxmap.cc:60:execute$3844 ($mux).
Removed top 1 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$auto$bmuxmap.cc:60:execute$3846 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$auto$bmuxmap.cc:60:execute$3850 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$auto$bmuxmap.cc:60:execute$3851 ($mux).
Removed top 2 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$auto$bmuxmap.cc:60:execute$3858 ($mux).
Removed top 2 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$auto$bmuxmap.cc:60:execute$3859 ($mux).
Removed top 1 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$auto$bmuxmap.cc:60:execute$3860 ($mux).
Removed top 2 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$auto$bmuxmap.cc:60:execute$3861 ($mux).
Removed top 2 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$auto$bmuxmap.cc:60:execute$3863 ($mux).
Removed top 1 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$auto$bmuxmap.cc:60:execute$3864 ($mux).
Removed top 1 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$auto$bmuxmap.cc:60:execute$3866 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$auto$bmuxmap.cc:60:execute$3869 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$auto$bmuxmap.cc:60:execute$3870 ($mux).
Removed top 1 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$auto$bmuxmap.cc:60:execute$3880 ($mux).
Removed top 4 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$auto$bmuxmap.cc:60:execute$3881 ($mux).
Removed top 4 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$auto$bmuxmap.cc:60:execute$3883 ($mux).
Removed top 1 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$auto$bmuxmap.cc:60:execute$3884 ($mux).
Removed top 1 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$auto$bmuxmap.cc:60:execute$3886 ($mux).
Removed top 4 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$auto$bmuxmap.cc:60:execute$3898 ($mux).
Removed top 4 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$auto$bmuxmap.cc:60:execute$3900 ($mux).
Removed top 4 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$auto$bmuxmap.cc:60:execute$3901 ($mux).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$auto$bmuxmap.cc:60:execute$3903 ($mux).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$auto$bmuxmap.cc:60:execute$3904 ($mux).
Removed top 2 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$auto$bmuxmap.cc:60:execute$3906 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$auto$bmuxmap.cc:60:execute$3910 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$auto$bmuxmap.cc:60:execute$3911 ($mux).
Removed top 3 bits (of 4) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$add_967$cavlc_read_total_coeffs.v:1066$3058 ($add).
Removed top 1 bits (of 2) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_110$cavlc_read_total_coeffs.v:233$2591 ($eq).
Removed top 1 bits (of 2) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_128$cavlc_read_total_coeffs.v:252$2601 ($eq).
Removed top 1 bits (of 2) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_146$cavlc_read_total_coeffs.v:271$2611 ($eq).
Removed top 1 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_161$cavlc_read_total_coeffs.v:286$2620 ($eq).
Removed top 1 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_170$cavlc_read_total_coeffs.v:298$2625 ($eq).
Removed top 2 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_176$cavlc_read_total_coeffs.v:306$2628 ($eq).
Removed top 1 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_202$cavlc_read_total_coeffs.v:325$2648 ($eq).
Removed top 1 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_205$cavlc_read_total_coeffs.v:329$2650 ($eq).
Removed top 2 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_211$cavlc_read_total_coeffs.v:337$2652 ($eq).
Removed top 1 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_240$cavlc_read_total_coeffs.v:360$2672 ($eq).
Removed top 1 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_243$cavlc_read_total_coeffs.v:364$2674 ($eq).
Removed top 2 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_249$cavlc_read_total_coeffs.v:372$2676 ($eq).
Removed top 1 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_275$cavlc_read_total_coeffs.v:391$2695 ($eq).
Removed top 1 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_284$cavlc_read_total_coeffs.v:403$2699 ($eq).
Removed top 2 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_287$cavlc_read_total_coeffs.v:407$2701 ($eq).
Removed top 1 bits (of 2) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_428$cavlc_read_total_coeffs.v:500$2790 ($eq).
Removed top 1 bits (of 2) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_475$cavlc_read_total_coeffs.v:540$2814 ($eq).
Removed top 1 bits (of 2) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_511$cavlc_read_total_coeffs.v:578$2832 ($eq).
Removed top 1 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_526$cavlc_read_total_coeffs.v:593$2841 ($eq).
Removed top 1 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_535$cavlc_read_total_coeffs.v:605$2844 ($eq).
Removed top 2 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_538$cavlc_read_total_coeffs.v:609$2845 ($eq).
Removed top 1 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_564$cavlc_read_total_coeffs.v:628$2862 ($eq).
Removed top 1 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_576$cavlc_read_total_coeffs.v:644$2866 ($eq).
Removed top 2 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_579$cavlc_read_total_coeffs.v:648$2867 ($eq).
Removed top 1 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_608$cavlc_read_total_coeffs.v:671$2885 ($eq).
Removed top 1 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_611$cavlc_read_total_coeffs.v:675$2886 ($eq).
Removed top 2 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_614$cavlc_read_total_coeffs.v:679$2887 ($eq).
Removed top 1 bits (of 2) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_648$cavlc_read_total_coeffs.v:708$2907 ($eq).
Removed top 2 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_866$cavlc_read_total_coeffs.v:989$2996 ($eq).
Removed top 1 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_874$cavlc_read_total_coeffs.v:999$2998 ($eq).
Removed top 1 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_878$cavlc_read_total_coeffs.v:1004$2999 ($eq).
Removed top 1 bits (of 2) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_92$cavlc_read_total_coeffs.v:214$2581 ($eq).
Removed top 4 bits (of 5) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_963$cavlc_read_total_coeffs.v:1060$3056 ($eq).
Removed top 2 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_1005$cavlc_read_total_coeffs.v:1118$3076 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_115$cavlc_read_total_coeffs.v:240$2593 ($mux).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_116$cavlc_read_total_coeffs.v:240$2594 ($mux).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_118$cavlc_read_total_coeffs.v:240$2596 ($mux).
Removed top 2 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_120$cavlc_read_total_coeffs.v:240$2598 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_133$cavlc_read_total_coeffs.v:259$2603 ($mux).
Removed top 1 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_134$cavlc_read_total_coeffs.v:259$2604 ($mux).
Removed top 1 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_136$cavlc_read_total_coeffs.v:259$2606 ($mux).
Removed top 1 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_138$cavlc_read_total_coeffs.v:259$2608 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_151$cavlc_read_total_coeffs.v:278$2613 ($mux).
Removed top 1 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_152$cavlc_read_total_coeffs.v:278$2614 ($mux).
Removed top 1 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_154$cavlc_read_total_coeffs.v:278$2616 ($mux).
Removed top 1 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_156$cavlc_read_total_coeffs.v:278$2618 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_181$cavlc_read_total_coeffs.v:313$2631 ($mux).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_182$cavlc_read_total_coeffs.v:313$2632 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_183$cavlc_read_total_coeffs.v:313$2633 ($mux).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_184$cavlc_read_total_coeffs.v:313$2634 ($mux).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_186$cavlc_read_total_coeffs.v:313$2636 ($mux).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_188$cavlc_read_total_coeffs.v:313$2638 ($mux).
Removed top 1 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_190$cavlc_read_total_coeffs.v:313$2640 ($mux).
Removed top 1 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_192$cavlc_read_total_coeffs.v:313$2642 ($mux).
Removed top 1 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_194$cavlc_read_total_coeffs.v:313$2644 ($mux).
Removed top 2 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_220$cavlc_read_total_coeffs.v:348$2657 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_221$cavlc_read_total_coeffs.v:348$2658 ($mux).
Removed top 2 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_222$cavlc_read_total_coeffs.v:348$2659 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_223$cavlc_read_total_coeffs.v:348$2660 ($mux).
Removed top 2 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_224$cavlc_read_total_coeffs.v:348$2661 ($mux).
Removed top 2 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_226$cavlc_read_total_coeffs.v:348$2663 ($mux).
Removed top 2 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_228$cavlc_read_total_coeffs.v:348$2665 ($mux).
Removed top 2 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_230$cavlc_read_total_coeffs.v:348$2667 ($mux).
Removed top 2 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_232$cavlc_read_total_coeffs.v:348$2669 ($mux).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_258$cavlc_read_total_coeffs.v:383$2681 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_259$cavlc_read_total_coeffs.v:383$2682 ($mux).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_260$cavlc_read_total_coeffs.v:383$2683 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_261$cavlc_read_total_coeffs.v:383$2684 ($mux).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_262$cavlc_read_total_coeffs.v:383$2685 ($mux).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_264$cavlc_read_total_coeffs.v:383$2687 ($mux).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_266$cavlc_read_total_coeffs.v:383$2689 ($mux).
Removed top 2 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_268$cavlc_read_total_coeffs.v:383$2691 ($mux).
Removed top 2 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_270$cavlc_read_total_coeffs.v:383$2693 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_297$cavlc_read_total_coeffs.v:418$2707 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_393$cavlc_read_total_coeffs.v:460$2776 ($mux).
Removed top 4 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_394$cavlc_read_total_coeffs.v:460$2777 ($mux).
Removed top 2 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_407$cavlc_read_total_coeffs.v:477$2780 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_409$cavlc_read_total_coeffs.v:477$2782 ($mux).
Removed top 2 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_410$cavlc_read_total_coeffs.v:477$2783 ($mux).
Removed top 2 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_411$cavlc_read_total_coeffs.v:477$2784 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_435$cavlc_read_total_coeffs.v:509$2793 ($mux).
Removed top 2 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_436$cavlc_read_total_coeffs.v:509$2794 ($mux).
Removed top 2 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_439$cavlc_read_total_coeffs.v:509$2797 ($mux).
Removed top 2 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_442$cavlc_read_total_coeffs.v:509$2800 ($mux).
Removed top 2 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_445$cavlc_read_total_coeffs.v:509$2803 ($mux).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_446$cavlc_read_total_coeffs.v:509$2804 ($mux).
Removed top 2 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_448$cavlc_read_total_coeffs.v:509$2806 ($mux).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_449$cavlc_read_total_coeffs.v:509$2807 ($mux).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_463$cavlc_read_total_coeffs.v:528$2809 ($mux).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_465$cavlc_read_total_coeffs.v:528$2810 ($mux).
Removed top 2 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_467$cavlc_read_total_coeffs.v:528$2811 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_480$cavlc_read_total_coeffs.v:547$2815 ($mux).
Removed top 1 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_481$cavlc_read_total_coeffs.v:547$2816 ($mux).
Removed top 1 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_483$cavlc_read_total_coeffs.v:547$2818 ($mux).
Removed top 1 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_485$cavlc_read_total_coeffs.v:547$2820 ($mux).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_501$cavlc_read_total_coeffs.v:566$2827 ($mux).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_503$cavlc_read_total_coeffs.v:566$2829 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_516$cavlc_read_total_coeffs.v:585$2834 ($mux).
Removed top 1 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_517$cavlc_read_total_coeffs.v:585$2835 ($mux).
Removed top 1 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_519$cavlc_read_total_coeffs.v:585$2837 ($mux).
Removed top 1 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_521$cavlc_read_total_coeffs.v:585$2839 ($mux).
Removed top 4 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_547$cavlc_read_total_coeffs.v:620$2848 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_548$cavlc_read_total_coeffs.v:620$2849 ($mux).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_549$cavlc_read_total_coeffs.v:620$2850 ($mux).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_551$cavlc_read_total_coeffs.v:620$2852 ($mux).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_553$cavlc_read_total_coeffs.v:620$2854 ($mux).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_555$cavlc_read_total_coeffs.v:620$2856 ($mux).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_557$cavlc_read_total_coeffs.v:620$2858 ($mux).
Removed top 1 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_559$cavlc_read_total_coeffs.v:620$2860 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_584$cavlc_read_total_coeffs.v:655$2868 ($mux).
Removed top 2 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_585$cavlc_read_total_coeffs.v:655$2869 ($mux).
Removed top 2 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_587$cavlc_read_total_coeffs.v:655$2871 ($mux).
Removed top 2 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_589$cavlc_read_total_coeffs.v:655$2873 ($mux).
Removed top 2 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_591$cavlc_read_total_coeffs.v:655$2875 ($mux).
Removed top 2 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_593$cavlc_read_total_coeffs.v:655$2877 ($mux).
Removed top 2 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_595$cavlc_read_total_coeffs.v:655$2879 ($mux).
Removed top 2 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_597$cavlc_read_total_coeffs.v:655$2881 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_62$cavlc_read_total_coeffs.v:185$2560 ($mux).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_623$cavlc_read_total_coeffs.v:690$2891 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_624$cavlc_read_total_coeffs.v:690$2892 ($mux).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_625$cavlc_read_total_coeffs.v:690$2893 ($mux).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_627$cavlc_read_total_coeffs.v:690$2895 ($mux).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_629$cavlc_read_total_coeffs.v:690$2897 ($mux).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_63$cavlc_read_total_coeffs.v:185$2561 ($mux).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_631$cavlc_read_total_coeffs.v:690$2899 ($mux).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_633$cavlc_read_total_coeffs.v:690$2901 ($mux).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_635$cavlc_read_total_coeffs.v:690$2903 ($mux).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_66$cavlc_read_total_coeffs.v:185$2564 ($mux).
Removed top 4 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_666$cavlc_read_total_coeffs.v:722$2917 ($mux).
Removed top 4 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_669$cavlc_read_total_coeffs.v:722$2920 ($mux).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_67$cavlc_read_total_coeffs.v:185$2565 ($mux).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_670$cavlc_read_total_coeffs.v:722$2921 ($mux).
Removed top 4 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_672$cavlc_read_total_coeffs.v:722$2923 ($mux).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_673$cavlc_read_total_coeffs.v:722$2924 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_686$cavlc_read_total_coeffs.v:741$2927 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_79$cavlc_read_total_coeffs.v:202$2570 ($mux).
Removed top 2 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_80$cavlc_read_total_coeffs.v:202$2571 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_82$cavlc_read_total_coeffs.v:202$2573 ($mux).
Removed top 2 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_83$cavlc_read_total_coeffs.v:202$2574 ($mux).
Removed top 4 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_84$cavlc_read_total_coeffs.v:202$2575 ($mux).
Removed top 4 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_886$cavlc_read_total_coeffs.v:1013$3002 ($mux).
Removed top 4 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_889$cavlc_read_total_coeffs.v:1013$3005 ($mux).
Removed top 4 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_892$cavlc_read_total_coeffs.v:1013$3008 ($mux).
Removed top 4 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_895$cavlc_read_total_coeffs.v:1013$3011 ($mux).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_898$cavlc_read_total_coeffs.v:1013$3014 ($mux).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_901$cavlc_read_total_coeffs.v:1013$3017 ($mux).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_902$cavlc_read_total_coeffs.v:1013$3018 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_97$cavlc_read_total_coeffs.v:221$2583 ($mux).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_98$cavlc_read_total_coeffs.v:221$2584 ($mux).
Removed top 4 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_993$cavlc_read_total_coeffs.v:1107$3069 ($mux).
Removed top 4 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_995$cavlc_read_total_coeffs.v:1107$3071 ($mux).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_997$cavlc_read_total_coeffs.v:1107$3073 ($mux).
Removed top 2 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$select_1052$cavlc_read_total_coeffs.v:1147$3103 ($pmux).
Removed top 1 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$select_1053$cavlc_read_total_coeffs.v:1147$3104 ($pmux).
Removed top 1 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$select_741$cavlc_read_total_coeffs.v:748$2967 ($pmux).
Removed top 1 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$select_959$cavlc_read_total_coeffs.v:1052$3052 ($pmux).
Removed top 2 bits (of 4) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$4723 ($ne).
Removed top 2 bits (of 4) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$4732 ($ne).
Removed top 2 bits (of 4) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$4741 ($ne).
Removed top 2 bits (of 4) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$4750 ($ne).
Removed top 2 bits (of 4) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$4759 ($ne).
Removed top 2 bits (of 4) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$4768 ($ne).
Removed top 2 bits (of 4) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$4777 ($ne).
Removed top 1 bits (of 2) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$4786 ($ne).
Removed top 1 bits (of 3) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$4812 ($ne).
Removed top 1 bits (of 2) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$4820 ($ne).
Removed top 2 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_run_befores.$auto$bmuxmap.cc:60:execute$3937 ($mux).
Removed top 1 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_run_befores.$auto$bmuxmap.cc:60:execute$3938 ($mux).
Removed top 2 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_run_befores.$auto$bmuxmap.cc:60:execute$3939 ($mux).
Removed top 1 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_run_befores.$auto$bmuxmap.cc:60:execute$3942 ($mux).
Removed top 2 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_run_befores.$auto$bmuxmap.cc:60:execute$3943 ($mux).
Removed top 1 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_run_befores.$auto$bmuxmap.cc:60:execute$3945 ($mux).
Removed top 3 bits (of 4) from port A of cell cavlc.$flatten\cavlc_read_run_befores.$verific$LessThan_127$cavlc_read_run_befores.v:269$1576 ($lt).
Removed top 3 bits (of 4) from port A of cell cavlc.$flatten\cavlc_read_run_befores.$verific$LessThan_203$cavlc_read_run_befores.v:330$1593 ($lt).
Removed top 3 bits (of 4) from port A of cell cavlc.$flatten\cavlc_read_run_befores.$verific$LessThan_253$cavlc_read_run_befores.v:351$1630 ($le).
Removed top 2 bits (of 4) from port A of cell cavlc.$flatten\cavlc_read_run_befores.$verific$LessThan_256$cavlc_read_run_befores.v:352$1633 ($le).
Removed top 2 bits (of 4) from port A of cell cavlc.$flatten\cavlc_read_run_befores.$verific$LessThan_259$cavlc_read_run_befores.v:353$1636 ($le).
Removed top 1 bits (of 4) from port A of cell cavlc.$flatten\cavlc_read_run_befores.$verific$LessThan_262$cavlc_read_run_befores.v:354$1639 ($le).
Removed top 1 bits (of 4) from port A of cell cavlc.$flatten\cavlc_read_run_befores.$verific$LessThan_265$cavlc_read_run_befores.v:355$1642 ($le).
Removed top 1 bits (of 4) from port A of cell cavlc.$flatten\cavlc_read_run_befores.$verific$LessThan_268$cavlc_read_run_befores.v:356$1645 ($le).
Removed top 1 bits (of 4) from port A of cell cavlc.$flatten\cavlc_read_run_befores.$verific$LessThan_271$cavlc_read_run_befores.v:357$1648 ($le).
Removed top 3 bits (of 4) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_114$cavlc_read_run_befores.v:181$1563 ($eq).
Removed top 2 bits (of 4) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_115$cavlc_read_run_befores.v:182$1564 ($eq).
Removed top 2 bits (of 4) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_116$cavlc_read_run_befores.v:195$1565 ($eq).
Removed top 1 bits (of 4) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_117$cavlc_read_run_befores.v:199$1566 ($eq).
Removed top 1 bits (of 4) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_118$cavlc_read_run_befores.v:209$1567 ($eq).
Removed top 1 bits (of 4) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_119$cavlc_read_run_befores.v:223$1568 ($eq).
Removed top 4 bits (of 5) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_221$cavlc_read_run_befores.v:332$1597 ($eq).
Removed top 3 bits (of 5) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_222$cavlc_read_run_befores.v:333$1598 ($eq).
Removed top 3 bits (of 5) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_223$cavlc_read_run_befores.v:334$1599 ($eq).
Removed top 2 bits (of 5) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_224$cavlc_read_run_befores.v:335$1600 ($eq).
Removed top 2 bits (of 5) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_225$cavlc_read_run_befores.v:336$1601 ($eq).
Removed top 2 bits (of 5) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_226$cavlc_read_run_befores.v:337$1602 ($eq).
Removed top 2 bits (of 5) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_227$cavlc_read_run_befores.v:338$1603 ($eq).
Removed top 1 bits (of 5) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_228$cavlc_read_run_befores.v:339$1604 ($eq).
Removed top 1 bits (of 5) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_229$cavlc_read_run_befores.v:340$1605 ($eq).
Removed top 1 bits (of 5) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_230$cavlc_read_run_befores.v:341$1606 ($eq).
Removed top 1 bits (of 5) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_231$cavlc_read_run_befores.v:342$1607 ($eq).
Removed top 1 bits (of 5) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_232$cavlc_read_run_befores.v:343$1608 ($eq).
Removed top 1 bits (of 5) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_233$cavlc_read_run_befores.v:344$1609 ($eq).
Removed top 1 bits (of 5) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_234$cavlc_read_run_befores.v:345$1610 ($eq).
Removed top 3 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_run_befores.$verific$mux_30$cavlc_read_run_befores.v:207$1521 ($mux).
Removed top 2 bits (of 8) from mux cell cavlc.$flatten\cavlc_read_run_befores.$verific$mux_364$cavlc_read_run_befores.v:193$1514 ($mux).
Removed top 2 bits (of 8) from mux cell cavlc.$flatten\cavlc_read_run_befores.$verific$mux_372$cavlc_read_run_befores.v:193$1506 ($mux).
Removed top 1 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_run_befores.$verific$mux_55$cavlc_read_run_befores.v:238$1528 ($mux).
Removed top 3 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_run_befores.$verific$mux_56$cavlc_read_run_befores.v:238$1529 ($mux).
Removed top 1 bits (of 3) from port A of cell cavlc.$flatten\cavlc_read_run_befores.$verific$sub_19$cavlc_read_run_befores.v:196$1516 ($sub).
Removed top 1 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$sub_19$cavlc_read_run_befores.v:196$1516 ($sub).
Removed top 1 bits (of 4) from port A of cell cavlc.$flatten\cavlc_read_run_befores.$verific$sub_58$cavlc_read_run_befores.v:242$1531 ($sub).
Removed top 1 bits (of 4) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$sub_58$cavlc_read_run_befores.v:242$1531 ($sub).
Removed top 2 bits (of 4) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$4651 ($ne).
Removed top 2 bits (of 4) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$4660 ($ne).
Removed top 2 bits (of 4) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$4669 ($ne).
Removed top 2 bits (of 4) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$4678 ($ne).
Removed top 2 bits (of 4) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$4687 ($ne).
Removed top 2 bits (of 4) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$4696 ($ne).
Removed top 2 bits (of 4) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$4705 ($ne).
Removed top 1 bits (of 5) from port A of cell cavlc.$flatten\cavlc_read_levels.$verific$LessThan_59$cavlc_read_levels.v:177$1032 ($lt).
Removed top 7 bits (of 9) from port A of cell cavlc.$flatten\cavlc_read_levels.$verific$LessThan_66$cavlc_read_levels.v:181$1038 ($lt).
Removed top 2 bits (of 3) from port A of cell cavlc.$flatten\cavlc_read_levels.$verific$LessThan_85$cavlc_read_levels.v:194$1055 ($lt).
Removed top 23 bits (of 32) from port B of cell cavlc.$flatten\cavlc_read_levels.$verific$add_105$cavlc_read_levels.v:211$1071 ($add).
Removed top 28 bits (of 32) from port B of cell cavlc.$flatten\cavlc_read_levels.$verific$add_110$cavlc_read_levels.v:212$1073 ($add).
Removed top 23 bits (of 32) from port Y of cell cavlc.$flatten\cavlc_read_levels.$verific$add_110$cavlc_read_levels.v:212$1073 ($add).
Removed top 23 bits (of 32) from port A of cell cavlc.$flatten\cavlc_read_levels.$verific$add_110$cavlc_read_levels.v:212$1073 ($add).
Removed top 7 bits (of 9) from port B of cell cavlc.$flatten\cavlc_read_levels.$verific$add_119$cavlc_read_levels.v:226$1080 ($add).
Removed top 8 bits (of 9) from port B of cell cavlc.$flatten\cavlc_read_levels.$verific$add_120$cavlc_read_levels.v:226$1082 ($add).
Removed top 3 bits (of 4) from port B of cell cavlc.$flatten\cavlc_read_levels.$verific$add_389$cavlc_read_levels.v:388$1218 ($add).
Removed top 2 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_levels.$verific$add_76$cavlc_read_levels.v:186$1046 ($add).
Removed top 28 bits (of 32) from port A of cell cavlc.$flatten\cavlc_read_levels.$verific$equal_52$cavlc_read_levels.v:171$1029 ($eq).
Removed top 23 bits (of 32) from mux cell cavlc.$flatten\cavlc_read_levels.$verific$mux_158$cavlc_read_levels.v:259$1097 ($mux).
Removed top 23 bits (of 32) from mux cell cavlc.$flatten\cavlc_read_levels.$verific$mux_162$cavlc_read_levels.v:263$1100 ($mux).
Removed top 23 bits (of 32) from mux cell cavlc.$flatten\cavlc_read_levels.$verific$mux_171$cavlc_read_levels.v:270$1106 ($mux).
Removed top 1 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_levels.$verific$mux_403$cavlc_read_levels.v:396$1227 ($mux).
Removed top 1 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_levels.$verific$mux_404$cavlc_read_levels.v:396$1228 ($mux).
Removed top 1 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_levels.$verific$mux_405$cavlc_read_levels.v:396$1229 ($mux).
Removed top 28 bits (of 32) from port A of cell cavlc.$flatten\cavlc_read_levels.$verific$shift_left_104$cavlc_read_levels.v:211$1070 ($shl).
Removed top 7 bits (of 9) from port A of cell cavlc.$flatten\cavlc_read_levels.$verific$shift_left_72$cavlc_read_levels.v:185$1042 ($shl).
Removed top 30 bits (of 32) from port B of cell cavlc.$flatten\cavlc_read_levels.$verific$sub_123$cavlc_read_levels.v:229$1084 ($sub).
Removed top 31 bits (of 32) from port B of cell cavlc.$flatten\cavlc_read_levels.$verific$sub_124$cavlc_read_levels.v:229$1085 ($sub).
Removed top 22 bits (of 32) from port Y of cell cavlc.$flatten\cavlc_read_levels.$verific$sub_124$cavlc_read_levels.v:229$1085 ($sub).
Removed top 22 bits (of 32) from port A of cell cavlc.$flatten\cavlc_read_levels.$verific$sub_124$cavlc_read_levels.v:229$1085 ($sub).
Removed top 1 bits (of 6) from port A of cell cavlc.$flatten\cavlc_read_levels.$verific$sub_50$cavlc_read_levels.v:171$1027 ($sub).
Removed top 4 bits (of 6) from port B of cell cavlc.$flatten\cavlc_read_levels.$verific$sub_50$cavlc_read_levels.v:171$1027 ($sub).
Removed top 31 bits (of 32) from port B of cell cavlc.$flatten\cavlc_read_levels.$verific$sub_51$cavlc_read_levels.v:171$1028 ($sub).
Removed top 2 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_levels.$verific$sub_71$cavlc_read_levels.v:185$1041 ($sub).
Removed top 23 bits (of 32) from port A of cell cavlc.$flatten\cavlc_read_levels.$verific$unary_minus_122$cavlc_read_levels.v:229$1083 ($neg).
Removed top 1 bits (of 2) from port A of cell cavlc.$flatten\cavlc_fsm.$verific$LessThan_16$cavlc_fsm.v:107$683 ($lt).
Removed top 4 bits (of 5) from port A of cell cavlc.$flatten\cavlc_fsm.$verific$LessThan_17$cavlc_fsm.v:107$684 ($lt).
Removed top 3 bits (of 5) from port A of cell cavlc.$flatten\cavlc_fsm.$verific$equal_28$cavlc_fsm.v:117$693 ($eq).
Removed top 7 bits (of 8) from port B of cell cavlc.$flatten\cavlc_fsm.$verific$equal_66$cavlc_fsm.v:96$720 ($eq).
Removed top 6 bits (of 8) from port B of cell cavlc.$flatten\cavlc_fsm.$verific$equal_67$cavlc_fsm.v:105$721 ($eq).
Removed top 5 bits (of 8) from port B of cell cavlc.$flatten\cavlc_fsm.$verific$equal_68$cavlc_fsm.v:116$722 ($eq).
Removed top 4 bits (of 8) from port B of cell cavlc.$flatten\cavlc_fsm.$verific$equal_69$cavlc_fsm.v:124$723 ($eq).
Removed top 3 bits (of 8) from port B of cell cavlc.$flatten\cavlc_fsm.$verific$equal_70$cavlc_fsm.v:127$724 ($eq).
Removed top 2 bits (of 8) from port B of cell cavlc.$flatten\cavlc_fsm.$verific$equal_71$cavlc_fsm.v:130$725 ($eq).
Removed top 1 bits (of 8) from port B of cell cavlc.$flatten\cavlc_fsm.$verific$equal_72$cavlc_fsm.v:142$726 ($eq).
Removed top 6 bits (of 8) from mux cell cavlc.$flatten\cavlc_fsm.$verific$mux_12$cavlc_fsm.v:103$678 ($mux).
Removed top 4 bits (of 8) from mux cell cavlc.$flatten\cavlc_fsm.$verific$mux_24$cavlc_fsm.v:114$689 ($mux).
Removed top 4 bits (of 8) from mux cell cavlc.$flatten\cavlc_fsm.$verific$mux_26$cavlc_fsm.v:114$691 ($mux).
Removed top 1 bits (of 8) from mux cell cavlc.$flatten\cavlc_fsm.$verific$mux_33$cavlc_fsm.v:122$697 ($mux).
Removed top 1 bits (of 6) from port A of cell cavlc.$flatten\cavlc_fsm.$verific$sub_14$cavlc_fsm.v:106$680 ($sub).
Removed top 5 bits (of 6) from port B of cell cavlc.$flatten\cavlc_fsm.$verific$sub_14$cavlc_fsm.v:106$680 ($sub).
Removed top 2 bits (of 6) from port Y of cell cavlc.$flatten\cavlc_fsm.$verific$sub_14$cavlc_fsm.v:106$680 ($sub).
Removed top 1 bits (of 5) from port A of cell cavlc.$flatten\cavlc_fsm.$verific$sub_14$cavlc_fsm.v:106$680 ($sub).
Removed top 2 bits (of 4) from port B of cell cavlc.$flatten\cavlc_fsm.$verific$sub_31$cavlc_fsm.v:121$695 ($sub).
Removed top 1 bits (of 6) from port A of cell cavlc.$flatten\cavlc_fsm.$verific$sub_43$cavlc_fsm.v:135$704 ($sub).
Removed top 5 bits (of 6) from port B of cell cavlc.$flatten\cavlc_fsm.$verific$sub_43$cavlc_fsm.v:135$704 ($sub).
Removed top 2 bits (of 6) from port Y of cell cavlc.$flatten\cavlc_fsm.$verific$sub_43$cavlc_fsm.v:135$704 ($sub).
Removed top 1 bits (of 5) from port A of cell cavlc.$flatten\cavlc_fsm.$verific$sub_43$cavlc_fsm.v:135$704 ($sub).
Removed top 1 bits (of 5) from port A of cell cavlc.$flatten\cavlc_fsm.$verific$sub_46$cavlc_fsm.v:139$707 ($sub).
Removed top 4 bits (of 5) from port B of cell cavlc.$flatten\cavlc_fsm.$verific$sub_46$cavlc_fsm.v:139$707 ($sub).
Removed top 1 bits (of 5) from port Y of cell cavlc.$flatten\cavlc_fsm.$verific$sub_46$cavlc_fsm.v:139$707 ($sub).
Removed top 23 bits (of 32) from port Y of cell cavlc.$flatten\cavlc_read_levels.$verific$add_105$cavlc_read_levels.v:211$1071 ($add).
Removed top 23 bits (of 32) from port A of cell cavlc.$flatten\cavlc_read_levels.$verific$add_105$cavlc_read_levels.v:211$1071 ($add).
Removed top 22 bits (of 32) from port Y of cell cavlc.$flatten\cavlc_read_levels.$verific$sub_123$cavlc_read_levels.v:229$1084 ($sub).
Removed top 22 bits (of 32) from port A of cell cavlc.$flatten\cavlc_read_levels.$verific$sub_123$cavlc_read_levels.v:229$1084 ($sub).
Removed top 23 bits (of 32) from port Y of cell cavlc.$flatten\cavlc_read_levels.$verific$shift_left_104$cavlc_read_levels.v:211$1070 ($shl).
Removed top 22 bits (of 32) from port Y of cell cavlc.$flatten\cavlc_read_levels.$verific$unary_minus_122$cavlc_read_levels.v:229$1083 ($neg).
Removed top 4 bits (of 8) from wire cavlc.$flatten\cavlc_fsm.$verific$n105$640.
Removed top 1 bits (of 8) from wire cavlc.$flatten\cavlc_fsm.$verific$n144$645.
Removed top 2 bits (of 6) from wire cavlc.$flatten\cavlc_fsm.$verific$n198$651.
Removed top 1 bits (of 5) from wire cavlc.$flatten\cavlc_fsm.$verific$n219$654.
Removed top 6 bits (of 8) from wire cavlc.$flatten\cavlc_fsm.$verific$n41$633.
Removed top 2 bits (of 6) from wire cavlc.$flatten\cavlc_fsm.$verific$n51$634.
Removed top 4 bits (of 8) from wire cavlc.$flatten\cavlc_fsm.$verific$n95$639.
Removed top 23 bits (of 32) from wire cavlc.$flatten\cavlc_read_levels.$verific$n1004$871.
Removed top 23 bits (of 32) from wire cavlc.$flatten\cavlc_read_levels.$verific$n1090$873.
Removed top 23 bits (of 32) from wire cavlc.$flatten\cavlc_read_levels.$verific$n1240$877.
Removed top 1 bits (of 5) from wire cavlc.$flatten\cavlc_read_levels.$verific$n4254$978.
Removed top 1 bits (of 5) from wire cavlc.$flatten\cavlc_read_levels.$verific$n4260$979.
Removed top 1 bits (of 5) from wire cavlc.$flatten\cavlc_read_levels.$verific$n4266$980.
Removed top 23 bits (of 32) from wire cavlc.$flatten\cavlc_read_levels.$verific$n475$855.
Removed top 23 bits (of 32) from wire cavlc.$flatten\cavlc_read_levels.$verific$n509$856.
Removed top 23 bits (of 32) from wire cavlc.$flatten\cavlc_read_levels.$verific$n551$857.
Removed top 22 bits (of 32) from wire cavlc.$flatten\cavlc_read_levels.$verific$n656$863.
Removed top 22 bits (of 32) from wire cavlc.$flatten\cavlc_read_levels.$verific$n689$864.
Removed top 22 bits (of 32) from wire cavlc.$flatten\cavlc_read_levels.$verific$n722$865.
Removed top 6 bits (of 16) from wire cavlc.$flatten\cavlc_read_run_befores.$auto$bmuxmap.cc:58:execute$3936.
Removed top 2 bits (of 8) from wire cavlc.$flatten\cavlc_read_run_befores.$auto$bmuxmap.cc:58:execute$3941.
Removed top 1 bits (of 4) from wire cavlc.$flatten\cavlc_read_run_befores.$auto$bmuxmap.cc:58:execute$3944.
Removed top 1 bits (of 4) from wire cavlc.$flatten\cavlc_read_run_befores.$verific$n109$1328.
Removed top 3 bits (of 4) from wire cavlc.$flatten\cavlc_read_run_befores.$verific$n124$1331.
Removed top 1 bits (of 4) from wire cavlc.$flatten\cavlc_read_run_befores.$verific$n233$1350.
Removed top 3 bits (of 4) from wire cavlc.$flatten\cavlc_read_run_befores.$verific$n238$1351.
Removed top 2 bits (of 4) from wire cavlc.$flatten\cavlc_read_run_befores.$verific$n56$1319.
Removed top 2 bits (of 4) from wire cavlc.$flatten\cavlc_read_run_befores.$verific$n71$1322.
Removed top 5 bits (of 10) from wire cavlc.$flatten\cavlc_read_total_coeffs.$auto$bmuxmap.cc:58:execute$3787.
Removed top 1 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_coeffs.$auto$bmuxmap.cc:58:execute$3792.
Removed top 4 bits (of 20) from wire cavlc.$flatten\cavlc_read_total_coeffs.$auto$bmuxmap.cc:58:execute$3797.
Removed top 2 bits (of 10) from wire cavlc.$flatten\cavlc_read_total_coeffs.$auto$bmuxmap.cc:58:execute$3802.
Removed top 2 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$auto$bmuxmap.cc:58:execute$3805.
Removed top 1 bits (of 8) from wire cavlc.$flatten\cavlc_read_total_coeffs.$auto$bmuxmap.cc:58:execute$3807.
Removed top 4 bits (of 20) from wire cavlc.$flatten\cavlc_read_total_coeffs.$auto$bmuxmap.cc:58:execute$3817.
Removed top 3 bits (of 10) from wire cavlc.$flatten\cavlc_read_total_coeffs.$auto$bmuxmap.cc:58:execute$3822.
Removed top 1 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$auto$bmuxmap.cc:58:execute$3845.
Removed top 1 bits (of 8) from wire cavlc.$flatten\cavlc_read_total_coeffs.$auto$bmuxmap.cc:58:execute$3847.
Removed top 2 bits (of 20) from wire cavlc.$flatten\cavlc_read_total_coeffs.$auto$bmuxmap.cc:58:execute$3857.
Removed top 1 bits (of 10) from wire cavlc.$flatten\cavlc_read_total_coeffs.$auto$bmuxmap.cc:58:execute$3862.
Removed top 4 bits (of 20) from wire cavlc.$flatten\cavlc_read_total_coeffs.$auto$bmuxmap.cc:58:execute$3877.
Removed top 1 bits (of 8) from wire cavlc.$flatten\cavlc_read_total_coeffs.$auto$bmuxmap.cc:58:execute$3907.
Removed top 2 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n1354$2126.
Removed top 4 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n3631$2410.
Removed top 4 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n3646$2413.
Removed top 4 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n3661$2416.
Removed top 4 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n3676$2419.
Removed top 3 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n3691$2422.
Removed top 3 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n3706$2425.
Removed top 3 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n3712$2426.
Removed top 4 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n4000$2462.
Removed top 4 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n4009$2464.
Removed top 3 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n4018$2466.
Removed top 2 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n4052$2471.
Removed top 1 bits (of 2) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n521$2007.
Removed top 3 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n524$2008.
Removed top 3 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n539$2011.
Removed top 3 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n545$2012.
Removed top 1 bits (of 2) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n598$2021.
Removed top 2 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n601$2022.
Removed top 1 bits (of 2) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n613$2024.
Removed top 2 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n616$2025.
Removed top 4 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n622$2026.
Removed top 1 bits (of 2) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n673$2033.
Removed top 3 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n676$2034.
Removed top 1 bits (of 2) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n745$2042.
Removed top 3 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n748$2043.
Removed top 3 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n757$2045.
Removed top 2 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n766$2047.
Removed top 1 bits (of 2) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n817$2051.
Removed top 1 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n820$2052.
Removed top 1 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n829$2054.
Removed top 1 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n838$2056.
Removed top 1 bits (of 2) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n889$2060.
Removed top 1 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n892$2061.
Removed top 1 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n901$2063.
Removed top 1 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n910$2065.
Removed top 1 bits (of 8) from wire cavlc.$flatten\cavlc_read_total_zeros.$auto$bmuxmap.cc:58:execute$3704.
Removed top 1 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$auto$bmuxmap.cc:58:execute$3707.
Removed top 2 bits (of 8) from wire cavlc.$flatten\cavlc_read_total_zeros.$auto$bmuxmap.cc:58:execute$3734.
Removed top 1 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$auto$bmuxmap.cc:58:execute$3737.
Removed top 3 bits (of 8) from wire cavlc.$flatten\cavlc_read_total_zeros.$auto$bmuxmap.cc:58:execute$3744.
Removed top 2 bits (of 3) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n1246$3374.
Removed top 3 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n1356$3394.
Removed top 1 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n1375$3398.
Removed top 3 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n1522$3421.
Removed top 1 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n1549$3423.
Removed top 1 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n1568$3425.
Removed top 3 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n1614$3433.
Removed top 1 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n1637$3435.
Removed top 1 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n1665$3441.
Removed top 3 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n1818$3465.
Removed top 2 bits (of 3) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n1832$3468.
Removed top 3 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n1872$3477.
Removed top 3 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n1904$3484.
Removed top 1 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n1978$3496.
Removed top 1 bits (of 2) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n223$3211.
Removed top 1 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n316$3234.
Removed top 2 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n336$3238.
Removed top 2 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n376$3246.
Removed top 1 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n396$3250.
Removed top 2 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n416$3254.
Removed top 2 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n526$3265.
Removed top 1 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n536$3267.
Removed top 2 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n576$3271.
Removed top 1 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n625$3278.
Removed top 1 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n690$3289.
Removed top 1 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n695$3290.
Removed top 3 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n875$3315.

yosys> peepopt

3.19. Executing PEEPOPT pass (run peephole optimizers).

yosys> opt_clean

3.20. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..
Removed 0 unused cells and 118 unused wires.
<suppressed ~1 debug messages>

yosys> bmuxmap

3.21. Executing BMUXMAP pass.

yosys> demuxmap

3.22. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> alumacc

3.23. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module cavlc:
  creating $macc model for $flatten\cavlc_fsm.$verific$sub_14$cavlc_fsm.v:106$680 ($sub).
  creating $macc model for $flatten\cavlc_fsm.$verific$sub_31$cavlc_fsm.v:121$695 ($sub).
  creating $macc model for $flatten\cavlc_fsm.$verific$sub_43$cavlc_fsm.v:135$704 ($sub).
  creating $macc model for $flatten\cavlc_fsm.$verific$sub_46$cavlc_fsm.v:139$707 ($sub).
  creating $macc model for $flatten\cavlc_read_levels.$verific$add_105$cavlc_read_levels.v:211$1071 ($add).
  creating $macc model for $flatten\cavlc_read_levels.$verific$add_110$cavlc_read_levels.v:212$1073 ($add).
  creating $macc model for $flatten\cavlc_read_levels.$verific$add_119$cavlc_read_levels.v:226$1080 ($add).
  creating $macc model for $flatten\cavlc_read_levels.$verific$add_120$cavlc_read_levels.v:226$1082 ($add).
  creating $macc model for $flatten\cavlc_read_levels.$verific$add_389$cavlc_read_levels.v:388$1218 ($add).
  creating $macc model for $flatten\cavlc_read_levels.$verific$add_76$cavlc_read_levels.v:186$1046 ($add).
  creating $macc model for $flatten\cavlc_read_levels.$verific$sub_123$cavlc_read_levels.v:229$1084 ($sub).
  creating $macc model for $flatten\cavlc_read_levels.$verific$sub_124$cavlc_read_levels.v:229$1085 ($sub).
  creating $macc model for $flatten\cavlc_read_levels.$verific$sub_50$cavlc_read_levels.v:171$1027 ($sub).
  creating $macc model for $flatten\cavlc_read_levels.$verific$sub_51$cavlc_read_levels.v:171$1028 ($sub).
  creating $macc model for $flatten\cavlc_read_levels.$verific$sub_71$cavlc_read_levels.v:185$1041 ($sub).
  creating $macc model for $flatten\cavlc_read_levels.$verific$sub_88$cavlc_read_levels.v:195$1058 ($sub).
  creating $macc model for $flatten\cavlc_read_levels.$verific$unary_minus_122$cavlc_read_levels.v:229$1083 ($neg).
  creating $macc model for $flatten\cavlc_read_levels.$verific$unary_minus_133$cavlc_read_levels.v:244$1091 ($neg).
  creating $macc model for $flatten\cavlc_read_run_befores.$verific$add_205$cavlc_read_run_befores.v:331$1595 ($add).
  creating $macc model for $flatten\cavlc_read_run_befores.$verific$sub_140$cavlc_read_run_befores.v:286$1582 ($sub).
  creating $macc model for $flatten\cavlc_read_run_befores.$verific$sub_19$cavlc_read_run_befores.v:196$1516 ($sub).
  creating $macc model for $flatten\cavlc_read_run_befores.$verific$sub_58$cavlc_read_run_befores.v:242$1531 ($sub).
  creating $macc model for $flatten\cavlc_read_total_coeffs.$verific$add_967$cavlc_read_total_coeffs.v:1066$3058 ($add).
  merging $macc model for $flatten\cavlc_read_levels.$verific$sub_123$cavlc_read_levels.v:229$1084 into $flatten\cavlc_read_levels.$verific$sub_124$cavlc_read_levels.v:229$1085.
  merging $macc model for $flatten\cavlc_read_levels.$verific$unary_minus_122$cavlc_read_levels.v:229$1083 into $flatten\cavlc_read_levels.$verific$sub_124$cavlc_read_levels.v:229$1085.
  merging $macc model for $flatten\cavlc_read_levels.$verific$add_105$cavlc_read_levels.v:211$1071 into $flatten\cavlc_read_levels.$verific$add_110$cavlc_read_levels.v:212$1073.
  creating $alu model for $macc $flatten\cavlc_read_run_befores.$verific$sub_140$cavlc_read_run_befores.v:286$1582.
  creating $alu model for $macc $flatten\cavlc_read_run_befores.$verific$add_205$cavlc_read_run_befores.v:331$1595.
  creating $alu model for $macc $flatten\cavlc_read_levels.$verific$unary_minus_133$cavlc_read_levels.v:244$1091.
  creating $alu model for $macc $flatten\cavlc_read_run_befores.$verific$sub_58$cavlc_read_run_befores.v:242$1531.
  creating $alu model for $macc $flatten\cavlc_read_levels.$verific$sub_88$cavlc_read_levels.v:195$1058.
  creating $alu model for $macc $flatten\cavlc_read_levels.$verific$sub_71$cavlc_read_levels.v:185$1041.
  creating $alu model for $macc $flatten\cavlc_read_levels.$verific$sub_51$cavlc_read_levels.v:171$1028.
  creating $alu model for $macc $flatten\cavlc_read_levels.$verific$sub_50$cavlc_read_levels.v:171$1027.
  creating $alu model for $macc $flatten\cavlc_read_run_befores.$verific$sub_19$cavlc_read_run_befores.v:196$1516.
  creating $alu model for $macc $flatten\cavlc_read_levels.$verific$add_76$cavlc_read_levels.v:186$1046.
  creating $alu model for $macc $flatten\cavlc_read_levels.$verific$add_389$cavlc_read_levels.v:388$1218.
  creating $alu model for $macc $flatten\cavlc_read_levels.$verific$add_120$cavlc_read_levels.v:226$1082.
  creating $alu model for $macc $flatten\cavlc_read_levels.$verific$add_119$cavlc_read_levels.v:226$1080.
  creating $alu model for $macc $flatten\cavlc_read_total_coeffs.$verific$add_967$cavlc_read_total_coeffs.v:1066$3058.
  creating $alu model for $macc $flatten\cavlc_fsm.$verific$sub_46$cavlc_fsm.v:139$707.
  creating $alu model for $macc $flatten\cavlc_fsm.$verific$sub_43$cavlc_fsm.v:135$704.
  creating $alu model for $macc $flatten\cavlc_fsm.$verific$sub_31$cavlc_fsm.v:121$695.
  creating $alu model for $macc $flatten\cavlc_fsm.$verific$sub_14$cavlc_fsm.v:106$680.
  creating $macc cell for $flatten\cavlc_read_levels.$verific$add_110$cavlc_read_levels.v:212$1073: $auto$alumacc.cc:365:replace_macc$5318
  creating $macc cell for $flatten\cavlc_read_levels.$verific$sub_124$cavlc_read_levels.v:229$1085: $auto$alumacc.cc:365:replace_macc$5319
  creating $alu model for $flatten\cavlc_fsm.$verific$LessThan_16$cavlc_fsm.v:107$683 ($lt): new $alu
  creating $alu model for $flatten\cavlc_fsm.$verific$LessThan_17$cavlc_fsm.v:107$684 ($lt): new $alu
  creating $alu model for $flatten\cavlc_fsm.$verific$LessThan_38$cavlc_fsm.v:131$701 ($lt): new $alu
  creating $alu model for $flatten\cavlc_read_levels.$verific$LessThan_59$cavlc_read_levels.v:177$1032 ($lt): new $alu
  creating $alu model for $flatten\cavlc_read_levels.$verific$LessThan_60$cavlc_read_levels.v:177$1033 ($lt): new $alu
  creating $alu model for $flatten\cavlc_read_levels.$verific$LessThan_66$cavlc_read_levels.v:181$1038 ($lt): new $alu
  creating $alu model for $flatten\cavlc_read_levels.$verific$LessThan_73$cavlc_read_levels.v:185$1043 ($lt): new $alu
  creating $alu model for $flatten\cavlc_read_levels.$verific$LessThan_74$cavlc_read_levels.v:185$1044 ($lt): new $alu
  creating $alu model for $flatten\cavlc_read_levels.$verific$LessThan_85$cavlc_read_levels.v:194$1055 ($lt): new $alu
  creating $alu model for $flatten\cavlc_read_levels.$verific$LessThan_86$cavlc_read_levels.v:194$1056 ($le): new $alu
  creating $alu model for $flatten\cavlc_read_run_befores.$verific$LessThan_127$cavlc_read_run_befores.v:269$1576 ($lt): new $alu
  creating $alu model for $flatten\cavlc_read_run_befores.$verific$LessThan_203$cavlc_read_run_befores.v:330$1593 ($lt): new $alu
  creating $alu model for $flatten\cavlc_read_run_befores.$verific$LessThan_253$cavlc_read_run_befores.v:351$1630 ($le): new $alu
  creating $alu model for $flatten\cavlc_read_run_befores.$verific$LessThan_256$cavlc_read_run_befores.v:352$1633 ($le): new $alu
  creating $alu model for $flatten\cavlc_read_run_befores.$verific$LessThan_259$cavlc_read_run_befores.v:353$1636 ($le): new $alu
  creating $alu model for $flatten\cavlc_read_run_befores.$verific$LessThan_262$cavlc_read_run_befores.v:354$1639 ($le): new $alu
  creating $alu model for $flatten\cavlc_read_run_befores.$verific$LessThan_265$cavlc_read_run_befores.v:355$1642 ($le): new $alu
  creating $alu model for $flatten\cavlc_read_run_befores.$verific$LessThan_268$cavlc_read_run_befores.v:356$1645 ($le): new $alu
  creating $alu model for $flatten\cavlc_read_run_befores.$verific$LessThan_271$cavlc_read_run_befores.v:357$1648 ($le): new $alu
  creating $alu model for $flatten\cavlc_read_run_befores.$verific$LessThan_274$cavlc_read_run_befores.v:358$1651 ($le): new $alu
  creating $alu model for $flatten\cavlc_read_run_befores.$verific$LessThan_277$cavlc_read_run_befores.v:359$1654 ($le): new $alu
  creating $alu model for $flatten\cavlc_read_run_befores.$verific$LessThan_280$cavlc_read_run_befores.v:360$1657 ($le): new $alu
  creating $alu model for $flatten\cavlc_read_run_befores.$verific$LessThan_283$cavlc_read_run_befores.v:361$1660 ($le): new $alu
  creating $alu model for $flatten\cavlc_read_run_befores.$verific$LessThan_286$cavlc_read_run_befores.v:362$1663 ($le): new $alu
  creating $alu model for $flatten\cavlc_read_run_befores.$verific$LessThan_289$cavlc_read_run_befores.v:363$1666 ($le): new $alu
  creating $alu model for $flatten\cavlc_read_run_befores.$verific$LessThan_292$cavlc_read_run_befores.v:364$1669 ($le): new $alu
  creating $alu model for $flatten\cavlc_read_levels.$verific$equal_170$cavlc_read_levels.v:269$1105 ($eq): merged with $flatten\cavlc_read_levels.$verific$LessThan_60$cavlc_read_levels.v:177$1033.
  creating $alu model for $flatten\cavlc_read_levels.$verific$equal_91$cavlc_read_levels.v:196$1061 ($eq): merged with $flatten\cavlc_read_levels.$verific$LessThan_86$cavlc_read_levels.v:194$1056.
  creating $alu model for $flatten\cavlc_read_run_befores.$verific$equal_44$cavlc_read_run_befores.v:224$1523 ($eq): merged with $flatten\cavlc_read_run_befores.$verific$sub_19$cavlc_read_run_befores.v:196$1516.
  creating $alu cell for $flatten\cavlc_read_run_befores.$verific$LessThan_292$cavlc_read_run_befores.v:364$1669: $auto$alumacc.cc:485:replace_alu$5346
  creating $alu cell for $flatten\cavlc_read_run_befores.$verific$LessThan_289$cavlc_read_run_befores.v:363$1666: $auto$alumacc.cc:485:replace_alu$5359
  creating $alu cell for $flatten\cavlc_read_run_befores.$verific$LessThan_286$cavlc_read_run_befores.v:362$1663: $auto$alumacc.cc:485:replace_alu$5372
  creating $alu cell for $flatten\cavlc_read_run_befores.$verific$LessThan_283$cavlc_read_run_befores.v:361$1660: $auto$alumacc.cc:485:replace_alu$5385
  creating $alu cell for $flatten\cavlc_read_run_befores.$verific$LessThan_280$cavlc_read_run_befores.v:360$1657: $auto$alumacc.cc:485:replace_alu$5398
  creating $alu cell for $flatten\cavlc_read_run_befores.$verific$LessThan_277$cavlc_read_run_befores.v:359$1654: $auto$alumacc.cc:485:replace_alu$5411
  creating $alu cell for $flatten\cavlc_read_run_befores.$verific$LessThan_274$cavlc_read_run_befores.v:358$1651: $auto$alumacc.cc:485:replace_alu$5424
  creating $alu cell for $flatten\cavlc_read_run_befores.$verific$LessThan_271$cavlc_read_run_befores.v:357$1648: $auto$alumacc.cc:485:replace_alu$5437
  creating $alu cell for $flatten\cavlc_read_run_befores.$verific$LessThan_268$cavlc_read_run_befores.v:356$1645: $auto$alumacc.cc:485:replace_alu$5446
  creating $alu cell for $flatten\cavlc_read_run_befores.$verific$LessThan_265$cavlc_read_run_befores.v:355$1642: $auto$alumacc.cc:485:replace_alu$5455
  creating $alu cell for $flatten\cavlc_read_run_befores.$verific$LessThan_262$cavlc_read_run_befores.v:354$1639: $auto$alumacc.cc:485:replace_alu$5464
  creating $alu cell for $flatten\cavlc_read_run_befores.$verific$LessThan_259$cavlc_read_run_befores.v:353$1636: $auto$alumacc.cc:485:replace_alu$5473
  creating $alu cell for $flatten\cavlc_read_run_befores.$verific$LessThan_256$cavlc_read_run_befores.v:352$1633: $auto$alumacc.cc:485:replace_alu$5482
  creating $alu cell for $flatten\cavlc_read_run_befores.$verific$LessThan_253$cavlc_read_run_befores.v:351$1630: $auto$alumacc.cc:485:replace_alu$5491
  creating $alu cell for $flatten\cavlc_read_run_befores.$verific$LessThan_203$cavlc_read_run_befores.v:330$1593: $auto$alumacc.cc:485:replace_alu$5500
  creating $alu cell for $flatten\cavlc_read_run_befores.$verific$LessThan_127$cavlc_read_run_befores.v:269$1576: $auto$alumacc.cc:485:replace_alu$5505
  creating $alu cell for $flatten\cavlc_read_levels.$verific$LessThan_86$cavlc_read_levels.v:194$1056, $flatten\cavlc_read_levels.$verific$equal_91$cavlc_read_levels.v:196$1061: $auto$alumacc.cc:485:replace_alu$5510
  creating $alu cell for $flatten\cavlc_read_levels.$verific$LessThan_85$cavlc_read_levels.v:194$1055: $auto$alumacc.cc:485:replace_alu$5519
  creating $alu cell for $flatten\cavlc_read_levels.$verific$LessThan_74$cavlc_read_levels.v:185$1044: $auto$alumacc.cc:485:replace_alu$5524
  creating $alu cell for $flatten\cavlc_read_levels.$verific$LessThan_73$cavlc_read_levels.v:185$1043: $auto$alumacc.cc:485:replace_alu$5529
  creating $alu cell for $flatten\cavlc_read_levels.$verific$LessThan_66$cavlc_read_levels.v:181$1038: $auto$alumacc.cc:485:replace_alu$5540
  creating $alu cell for $flatten\cavlc_read_levels.$verific$LessThan_60$cavlc_read_levels.v:177$1033, $flatten\cavlc_read_levels.$verific$equal_170$cavlc_read_levels.v:269$1105: $auto$alumacc.cc:485:replace_alu$5545
  creating $alu cell for $flatten\cavlc_read_levels.$verific$LessThan_59$cavlc_read_levels.v:177$1032: $auto$alumacc.cc:485:replace_alu$5556
  creating $alu cell for $flatten\cavlc_fsm.$verific$LessThan_38$cavlc_fsm.v:131$701: $auto$alumacc.cc:485:replace_alu$5561
  creating $alu cell for $flatten\cavlc_fsm.$verific$LessThan_17$cavlc_fsm.v:107$684: $auto$alumacc.cc:485:replace_alu$5566
  creating $alu cell for $flatten\cavlc_fsm.$verific$LessThan_16$cavlc_fsm.v:107$683: $auto$alumacc.cc:485:replace_alu$5571
  creating $alu cell for $flatten\cavlc_fsm.$verific$sub_14$cavlc_fsm.v:106$680: $auto$alumacc.cc:485:replace_alu$5576
  creating $alu cell for $flatten\cavlc_fsm.$verific$sub_31$cavlc_fsm.v:121$695: $auto$alumacc.cc:485:replace_alu$5579
  creating $alu cell for $flatten\cavlc_fsm.$verific$sub_43$cavlc_fsm.v:135$704: $auto$alumacc.cc:485:replace_alu$5582
  creating $alu cell for $flatten\cavlc_fsm.$verific$sub_46$cavlc_fsm.v:139$707: $auto$alumacc.cc:485:replace_alu$5585
  creating $alu cell for $flatten\cavlc_read_total_coeffs.$verific$add_967$cavlc_read_total_coeffs.v:1066$3058: $auto$alumacc.cc:485:replace_alu$5588
  creating $alu cell for $flatten\cavlc_read_levels.$verific$add_119$cavlc_read_levels.v:226$1080: $auto$alumacc.cc:485:replace_alu$5591
  creating $alu cell for $flatten\cavlc_read_levels.$verific$add_120$cavlc_read_levels.v:226$1082: $auto$alumacc.cc:485:replace_alu$5594
  creating $alu cell for $flatten\cavlc_read_levels.$verific$add_389$cavlc_read_levels.v:388$1218: $auto$alumacc.cc:485:replace_alu$5597
  creating $alu cell for $flatten\cavlc_read_levels.$verific$add_76$cavlc_read_levels.v:186$1046: $auto$alumacc.cc:485:replace_alu$5600
  creating $alu cell for $flatten\cavlc_read_run_befores.$verific$sub_19$cavlc_read_run_befores.v:196$1516, $flatten\cavlc_read_run_befores.$verific$equal_44$cavlc_read_run_befores.v:224$1523: $auto$alumacc.cc:485:replace_alu$5603
  creating $alu cell for $flatten\cavlc_read_levels.$verific$sub_50$cavlc_read_levels.v:171$1027: $auto$alumacc.cc:485:replace_alu$5608
  creating $alu cell for $flatten\cavlc_read_levels.$verific$sub_51$cavlc_read_levels.v:171$1028: $auto$alumacc.cc:485:replace_alu$5611
  creating $alu cell for $flatten\cavlc_read_levels.$verific$sub_71$cavlc_read_levels.v:185$1041: $auto$alumacc.cc:485:replace_alu$5614
  creating $alu cell for $flatten\cavlc_read_levels.$verific$sub_88$cavlc_read_levels.v:195$1058: $auto$alumacc.cc:485:replace_alu$5617
  creating $alu cell for $flatten\cavlc_read_run_befores.$verific$sub_58$cavlc_read_run_befores.v:242$1531: $auto$alumacc.cc:485:replace_alu$5620
  creating $alu cell for $flatten\cavlc_read_levels.$verific$unary_minus_133$cavlc_read_levels.v:244$1091: $auto$alumacc.cc:485:replace_alu$5623
  creating $alu cell for $flatten\cavlc_read_run_befores.$verific$add_205$cavlc_read_run_befores.v:331$1595: $auto$alumacc.cc:485:replace_alu$5626
  creating $alu cell for $flatten\cavlc_read_run_befores.$verific$sub_140$cavlc_read_run_befores.v:286$1582: $auto$alumacc.cc:485:replace_alu$5629
  created 44 $alu and 2 $macc cells.

yosys> opt_expr

3.24. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.
<suppressed ~3 debug messages>

yosys> opt_merge -nomux

3.25. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.26. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~111 debug messages>

yosys> opt_reduce

3.27. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
Performed a total of 0 changes.

yosys> opt_merge

3.28. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
<suppressed ~81 debug messages>
Removed a total of 27 cells.

yosys> opt_share

3.29. Executing OPT_SHARE pass.

yosys> opt_dff

3.30. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.31. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..
Removed 4 unused cells and 43 unused wires.
<suppressed ~5 debug messages>

yosys> opt_expr

3.32. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

yosys> opt_muxtree

3.33. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~119 debug messages>

yosys> opt_reduce

3.34. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
Performed a total of 0 changes.

yosys> opt_merge

3.35. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_share

3.36. Executing OPT_SHARE pass.

yosys> opt_dff

3.37. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.38. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..

yosys> opt_expr

3.39. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.
MAX OPT ITERATION = 2

yosys> stat

3.40. Printing statistics.

=== cavlc ===

   Number of wires:               1581
   Number of wire bits:           6941
   Number of public wires:         207
   Number of public wire bits:    1260
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1402
     $adffe                         47
     $alu                           44
     $and                           86
     $eq                           123
     $logic_not                     10
     $macc                           2
     $mux                          624
     $ne                           125
     $not                          110
     $or                            69
     $pmux                          47
     $reduce_and                    59
     $reduce_bool                    6
     $reduce_or                     47
     $shl                            2
     $shr                            1


yosys> memory -nomap

3.41. Executing MEMORY pass.

yosys> opt_mem

3.41.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.41.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.41.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.41.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.41.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.41.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..

yosys> memory_share

3.41.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.41.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.41.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..

yosys> memory_collect

3.41.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.42. Printing statistics.

=== cavlc ===

   Number of wires:               1581
   Number of wire bits:           6941
   Number of public wires:         207
   Number of public wire bits:    1260
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1402
     $adffe                         47
     $alu                           44
     $and                           86
     $eq                           123
     $logic_not                     10
     $macc                           2
     $mux                          624
     $ne                           125
     $not                          110
     $or                            69
     $pmux                          47
     $reduce_and                    59
     $reduce_bool                    6
     $reduce_or                     47
     $shl                            2
     $shr                            1


yosys> muxpack

3.43. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converting cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_100$cavlc_read_total_coeffs.v:221$2586 ... cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_102$cavlc_read_total_coeffs.v:221$2588 to a pmux with 2 cases.
Converting cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_117$cavlc_read_total_coeffs.v:240$2595 ... cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_119$cavlc_read_total_coeffs.v:240$2597 to a pmux with 2 cases.
Converting cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_135$cavlc_read_total_coeffs.v:259$2605 ... cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_137$cavlc_read_total_coeffs.v:259$2607 to a pmux with 2 cases.
Converting cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_153$cavlc_read_total_coeffs.v:278$2615 ... cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_155$cavlc_read_total_coeffs.v:278$2617 to a pmux with 2 cases.
Converting cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_185$cavlc_read_total_coeffs.v:313$2635 ... cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_193$cavlc_read_total_coeffs.v:313$2643 to a pmux with 5 cases.
Converting cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_190$cavlc_read_total_coeffs.v:313$2640 ... cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_194$cavlc_read_total_coeffs.v:313$2644 to a pmux with 3 cases.
Converting cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_225$cavlc_read_total_coeffs.v:348$2662 ... cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_231$cavlc_read_total_coeffs.v:348$2668 to a pmux with 4 cases.
Converting cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_263$cavlc_read_total_coeffs.v:383$2686 ... cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_269$cavlc_read_total_coeffs.v:383$2692 to a pmux with 4 cases.
Converting cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_268$cavlc_read_total_coeffs.v:383$2691 ... cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_270$cavlc_read_total_coeffs.v:383$2693 to a pmux with 2 cases.
Converting cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_299$cavlc_read_total_coeffs.v:418$2709 ... cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_307$cavlc_read_total_coeffs.v:418$2717 to a pmux with 5 cases.
Converting cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_438$cavlc_read_total_coeffs.v:509$2796 ... cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_441$cavlc_read_total_coeffs.v:509$2799 to a pmux with 2 cases.
Converting cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_444$cavlc_read_total_coeffs.v:509$2802 ... cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_447$cavlc_read_total_coeffs.v:509$2805 to a pmux with 2 cases.
Converting cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_445$cavlc_read_total_coeffs.v:509$2803 ... cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_448$cavlc_read_total_coeffs.v:509$2806 to a pmux with 2 cases.
Converting cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_482$cavlc_read_total_coeffs.v:547$2817 ... cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_484$cavlc_read_total_coeffs.v:547$2819 to a pmux with 2 cases.
Converting cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_518$cavlc_read_total_coeffs.v:585$2836 ... cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_520$cavlc_read_total_coeffs.v:585$2838 to a pmux with 2 cases.
Converting cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_549$cavlc_read_total_coeffs.v:620$2850 ... cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_557$cavlc_read_total_coeffs.v:620$2858 to a pmux with 5 cases.
Converting cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_550$cavlc_read_total_coeffs.v:620$2851 ... cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_558$cavlc_read_total_coeffs.v:620$2859 to a pmux with 5 cases.
Converting cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_586$cavlc_read_total_coeffs.v:655$2870 ... cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_596$cavlc_read_total_coeffs.v:655$2880 to a pmux with 6 cases.
Converting cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_626$cavlc_read_total_coeffs.v:690$2894 ... cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_634$cavlc_read_total_coeffs.v:690$2902 to a pmux with 5 cases.
Converting cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_668$cavlc_read_total_coeffs.v:722$2919 ... cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_671$cavlc_read_total_coeffs.v:722$2922 to a pmux with 2 cases.
Converting cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_669$cavlc_read_total_coeffs.v:722$2920 ... cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_672$cavlc_read_total_coeffs.v:722$2923 to a pmux with 2 cases.
Converting cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_688$cavlc_read_total_coeffs.v:741$2929 ... cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_690$cavlc_read_total_coeffs.v:741$2931 to a pmux with 2 cases.
Converting cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_99$cavlc_read_total_coeffs.v:221$2585 ... cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_101$cavlc_read_total_coeffs.v:221$2587 to a pmux with 2 cases.
Converted 70 (p)mux cells into 23 pmux cells.
<suppressed ~467 debug messages>

yosys> opt_clean

3.44. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..
Removed 0 unused cells and 47 unused wires.
<suppressed ~1 debug messages>

yosys> pmuxtree

3.45. Executing PMUXTREE pass.

yosys> muxpack

3.46. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converting cavlc.$auto$pmuxtree.cc:65:recursive_mux_generator$6182 ... cavlc.$auto$pmuxtree.cc:65:recursive_mux_generator$6184 to a pmux with 2 cases.
Converting cavlc.$auto$pmuxtree.cc:65:recursive_mux_generator$6174 ... cavlc.$auto$pmuxtree.cc:65:recursive_mux_generator$6176 to a pmux with 2 cases.
Converting cavlc.$auto$pmuxtree.cc:65:recursive_mux_generator$6166 ... cavlc.$auto$pmuxtree.cc:65:recursive_mux_generator$6168 to a pmux with 2 cases.
Converting cavlc.$auto$pmuxtree.cc:65:recursive_mux_generator$6158 ... cavlc.$auto$pmuxtree.cc:65:recursive_mux_generator$6160 to a pmux with 2 cases.
Converting cavlc.$auto$pmuxtree.cc:65:recursive_mux_generator$6146 ... cavlc.$auto$pmuxtree.cc:65:recursive_mux_generator$6148 to a pmux with 2 cases.
Converting cavlc.$auto$pmuxtree.cc:65:recursive_mux_generator$6110 ... cavlc.$auto$pmuxtree.cc:65:recursive_mux_generator$6112 to a pmux with 2 cases.
Converting cavlc.$auto$pmuxtree.cc:65:recursive_mux_generator$6094 ... cavlc.$auto$pmuxtree.cc:65:recursive_mux_generator$6096 to a pmux with 2 cases.
Converting cavlc.$auto$pmuxtree.cc:65:recursive_mux_generator$6082 ... cavlc.$auto$pmuxtree.cc:65:recursive_mux_generator$6084 to a pmux with 2 cases.
Converting cavlc.$auto$pmuxtree.cc:65:recursive_mux_generator$6074 ... cavlc.$auto$pmuxtree.cc:65:recursive_mux_generator$6076 to a pmux with 2 cases.
Converting cavlc.$auto$pmuxtree.cc:65:recursive_mux_generator$6066 ... cavlc.$auto$pmuxtree.cc:65:recursive_mux_generator$6068 to a pmux with 2 cases.
Converting cavlc.$auto$pmuxtree.cc:65:recursive_mux_generator$6050 ... cavlc.$auto$pmuxtree.cc:65:recursive_mux_generator$6052 to a pmux with 2 cases.
Converting cavlc.$auto$pmuxtree.cc:65:recursive_mux_generator$6038 ... cavlc.$auto$pmuxtree.cc:65:recursive_mux_generator$6040 to a pmux with 2 cases.
Converting cavlc.$auto$pmuxtree.cc:65:recursive_mux_generator$6026 ... cavlc.$auto$pmuxtree.cc:65:recursive_mux_generator$6028 to a pmux with 2 cases.
Converting cavlc.$auto$pmuxtree.cc:65:recursive_mux_generator$6014 ... cavlc.$auto$pmuxtree.cc:65:recursive_mux_generator$6016 to a pmux with 2 cases.
Converting cavlc.$auto$pmuxtree.cc:65:recursive_mux_generator$6000 ... cavlc.$auto$pmuxtree.cc:65:recursive_mux_generator$6002 to a pmux with 2 cases.
Converting cavlc.$auto$pmuxtree.cc:65:recursive_mux_generator$5974 ... cavlc.$auto$pmuxtree.cc:65:recursive_mux_generator$5976 to a pmux with 2 cases.
Converting cavlc.$auto$pmuxtree.cc:65:recursive_mux_generator$5962 ... cavlc.$auto$pmuxtree.cc:65:recursive_mux_generator$5964 to a pmux with 2 cases.
Converting cavlc.$auto$pmuxtree.cc:65:recursive_mux_generator$5954 ... cavlc.$auto$pmuxtree.cc:65:recursive_mux_generator$5956 to a pmux with 2 cases.
Converting cavlc.$auto$pmuxtree.cc:65:recursive_mux_generator$5946 ... cavlc.$auto$pmuxtree.cc:65:recursive_mux_generator$5948 to a pmux with 2 cases.
Converting cavlc.$auto$pmuxtree.cc:65:recursive_mux_generator$5938 ... cavlc.$auto$pmuxtree.cc:65:recursive_mux_generator$5940 to a pmux with 2 cases.
Converting cavlc.$auto$pmuxtree.cc:65:recursive_mux_generator$5662 ... cavlc.$auto$pmuxtree.cc:65:recursive_mux_generator$5664 to a pmux with 2 cases.
Converting cavlc.$auto$pmuxtree.cc:65:recursive_mux_generator$5652 ... cavlc.$auto$pmuxtree.cc:65:recursive_mux_generator$5654 to a pmux with 2 cases.
Converted 44 (p)mux cells into 22 pmux cells.
<suppressed ~682 debug messages>

yosys> memory_map

3.47. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> stat

3.48. Printing statistics.

=== cavlc ===

   Number of wires:               2112
   Number of wire bits:           8625
   Number of public wires:         207
   Number of public wire bits:    1260
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1841
     $adffe                         47
     $alu                           44
     $and                           86
     $eq                           123
     $logic_not                     10
     $macc                           2
     $mux                          855
     $ne                           125
     $not                          180
     $or                           115
     $pmux                          22
     $reduce_and                    59
     $reduce_bool                    6
     $reduce_or                    164
     $shl                            2
     $shr                            1


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.49. Executing TECHMAP pass (map to technology primitives).

3.49.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.49.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.49.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $ne.
Using template $paramod$521ce43182eecb9f60c72393a788160d2c356bf5\_90_pmux for cells of type $pmux.
Using template $paramod$32e7c4d6f92ff4337599ece53082d2e88a82a9f2\_90_pmux for cells of type $pmux.
Using template $paramod$c5c783b17ab1d780abfad8cfe6563a0a7b47a3b0\_90_pmux for cells of type $pmux.
Using extmapper maccmap for cells of type $macc.
  add $auto$wreduce.cc:455:run$5222 [8:0] (9 bits, unsigned)
  add { $flatten\cavlc_read_levels.$verific$n544$783 $flatten\cavlc_read_levels.$verific$n544$783 $flatten\cavlc_read_levels.$verific$n544$783 $flatten\cavlc_read_levels.$verific$n544$783 } (4 bits, unsigned)
  add \cavlc_read_levels.level_suffix (9 bits, unsigned)
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $adffe.
Using template $paramod$fc16b9f758000d363d24f130038bd99b46b4fa1b\_90_pmux for cells of type $pmux.
Using template $paramod$70d30c21ff772b34d0d1da2801fbd781dc3c70e4\_90_pmux for cells of type $pmux.
Using template $paramod$de9286bb3f6c9573089ef1694e580944d318189a\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod$740b056ede97228d3eae64ea2fdc81f0a33e0fe7\_90_alu for cells of type $alu.
Using template $paramod$32a7b7b86c07519b7537abc18e96f0331f97914d\_90_alu for cells of type $alu.
Using template $paramod$f85408ed1aa3d09e465edae8a7bf590332ae9f7b\_90_alu for cells of type $alu.
Using template $paramod$1a3a0c35c4a4896fbfd612699525c057298e72d2\_90_alu for cells of type $alu.
Using template $paramod$e23c72610957bd76b0654139c354e282891d4e8f\_90_alu for cells of type $alu.
Using template $paramod$8045f2881226ae434b154710c783ad25023f386c\_90_alu for cells of type $alu.
Using template $paramod$b18e16801adf491a64caa0542270798e5d4ac6b6\_90_alu for cells of type $alu.
Using template $paramod$7e708ae28ab761f11d0fb59d3ffc72f6a4baf5d9\_90_alu for cells of type $alu.
Using template $paramod$5a51f938fa54bf7015d956f06feadaa94e2be5b1\_90_alu for cells of type $alu.
Using template $paramod$b8c0a997bce700f23568a5ada79cc6781d1f5ca0\_90_alu for cells of type $alu.
Using template $paramod$constmap:1e83989bdaaeae429b09a33fcb9a97ba54f64e9f$paramod$fb16e0492dc88ab7064d5e90ab6662c825c4229e\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$d2fa05d38998afabc6d4f34471305d0af4b8b2df\_90_alu for cells of type $alu.
Using template $paramod$78e969f2586efcf3a5b0b0440bcca0db83d5cca2\_90_alu for cells of type $alu.
  sub \cavlc_read_levels.level_code_tmp (9 bits, unsigned)
  sub { \cavlc_read_levels.tmp1 [1] 1'0 } (2 bits, unsigned)
  add 10'1111111111 (10 bits, unsigned)
  packed 1 (1) bits / 1 words into adder tree
Using template $paramod$53700bbee849b2010ad0b60a61ccd204a10e24ca\_90_alu for cells of type $alu.
Using template $paramod$943564b9366bbc392bf4bbc801aa0a2d7742a4e0\_90_alu for cells of type $alu.
Using template $paramod$3ef7d3dd227da7627a99c5e5a6a4deb817573e39\_90_alu for cells of type $alu.
Using template $paramod$649fc39eef2451024566705288528c8671211199\_90_alu for cells of type $alu.
Using template $paramod$83dd457849c736323edf2edb15923eb27f99c683\_90_alu for cells of type $alu.
Using template $paramod$constmap:2a5a90c887f7f17a34d4032fe665c7aac02a3bb8$paramod$27be44c49fb1346b96bf9a9013de8943094e1f11\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:3e07689e7ff5356da68de1ee7387179a05a469ef$paramod$b54d5ebdaecd24844fc43a347f4baf80efcdaf00\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$c04af8dbf0e5d1d69bbccb2c7bd8a93fc9ef54dc\_90_alu for cells of type $alu.
Using template $paramod$0563fff2c395e9892f21c131fa33d5e0ad144e72\_90_alu for cells of type $alu.
Using template $paramod$b85fbb3374a1d9ba7ee4f4d6323c30f939df3ada\_90_alu for cells of type $alu.
Using template $paramod$8742280fdebca84e1c87f2a86ed84f62d558f4cc\_90_alu for cells of type $alu.
Using template $paramod$175e67c02b86e96b1288b9dc100122520d7240d8\_90_alu for cells of type $alu.
Using template $paramod$672a140277c71df8314410f22acc08d55222c3c7\_90_alu for cells of type $alu.
Using template $paramod$5ccf584370207a3ccc3032757a8e590623d4de56\_90_alu for cells of type $alu.
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000000001001 for cells of type $fa.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001010 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000110 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000101 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000011 for cells of type $lcu.
Using template $paramod$484d51534650924b7ed4c69e46eed3a56904771f\_90_alu for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100000 for cells of type $lcu.
No more expansions possible.
<suppressed ~7091 debug messages>

yosys> stat

3.50. Printing statistics.

=== cavlc ===

   Number of wires:               5686
   Number of wire bits:          74150
   Number of public wires:         207
   Number of public wire bits:    1260
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              10300
     $_AND_                       1155
     $_DFFE_PN0P_                  390
     $_DFFE_PN1P_                    1
     $_MUX_                       4619
     $_NOT_                        582
     $_OR_                        1974
     $_XOR_                       1579


yosys> opt_expr

3.51. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.
<suppressed ~4014 debug messages>

yosys> opt_merge -nomux

3.52. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
<suppressed ~5892 debug messages>
Removed a total of 1964 cells.

yosys> opt_muxtree

3.53. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.54. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
Performed a total of 0 changes.

yosys> opt_merge

3.55. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_share

3.56. Executing OPT_SHARE pass.

yosys> opt_dff

3.57. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.58. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..
Removed 370 unused cells and 4124 unused wires.
<suppressed ~371 debug messages>

yosys> opt_expr

3.59. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.
<suppressed ~3 debug messages>

yosys> opt_muxtree

3.60. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.61. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
Performed a total of 0 changes.

yosys> opt_merge

3.62. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_share

3.63. Executing OPT_SHARE pass.

yosys> opt_dff

3.64. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.65. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..

yosys> opt_expr

3.66. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.
MAX OPT ITERATION = 2

yosys> opt -fast -full

3.67. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.67.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.
<suppressed ~1362 debug messages>

yosys> opt_merge

3.67.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
<suppressed ~249 debug messages>
Removed a total of 83 cells.

yosys> opt_dff

3.67.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.67.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..
Removed 1 unused cells and 145 unused wires.
<suppressed ~2 debug messages>

3.67.5. Finished fast OPT passes.

yosys> techmap -map +/techmap.v

3.68. Executing TECHMAP pass (map to technology primitives).

3.68.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.68.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> opt -sat

3.69. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.69.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

yosys> opt_merge -nomux

3.69.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.69.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.69.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
Performed a total of 0 changes.

yosys> opt_merge

3.69.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.69.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.69.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..

yosys> opt_expr

3.69.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

3.69.9. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

3.70. Executing ABC pass (technology mapping using ABC).

3.70.1. Summary of detected clock domains:
  47 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4611, arst=!\rst_n, srst={ }
  385 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$5196, arst=!\rst_n, srst={ }
  312 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$5207, arst=!\rst_n, srst={ }
  68 cells in clk=\clk, en=$flatten\cavlc_read_levels.$verific$n231$765, arst=!\rst_n, srst={ }
  226 cells in clk=\clk, en=$flatten\cavlc_read_levels.$verific$n474$782, arst=!\rst_n, srst={ }
  91 cells in clk=\clk, en=\cavlc_read_levels.level_abs_refresh, arst=!\rst_n, srst={ }
  61 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4821, arst=!\rst_n, srst={ }
  52 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4844, arst=!\rst_n, srst={ }
  57 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4871, arst=!\rst_n, srst={ }
  56 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4898, arst=!\rst_n, srst={ }
  42 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4921, arst=!\rst_n, srst={ }
  41 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4944, arst=!\rst_n, srst={ }
  55 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4969, arst=!\rst_n, srst={ }
  49 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4994, arst=!\rst_n, srst={ }
  39 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$5017, arst=!\rst_n, srst={ }
  72 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$5038, arst=!\rst_n, srst={ }
  52 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$5059, arst=!\rst_n, srst={ }
  45 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$5082, arst=!\rst_n, srst={ }
  42 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$5105, arst=!\rst_n, srst={ }
  47 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$5130, arst=!\rst_n, srst={ }
  59 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$5155, arst=!\rst_n, srst={ }
  33 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$5178, arst=!\rst_n, srst={ }
  32 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$5191, arst=!\rst_n, srst={ }
  39 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4663, arst=!\rst_n, srst={ }
  32 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4672, arst=!\rst_n, srst={ }
  33 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4681, arst=!\rst_n, srst={ }
  31 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4690, arst=!\rst_n, srst={ }
  32 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4699, arst=!\rst_n, srst={ }
  33 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4708, arst=!\rst_n, srst={ }
  33 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4717, arst=!\rst_n, srst={ }
  32 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4726, arst=!\rst_n, srst={ }
  26 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4735, arst=!\rst_n, srst={ }
  32 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4744, arst=!\rst_n, srst={ }
  32 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4753, arst=!\rst_n, srst={ }
  33 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4762, arst=!\rst_n, srst={ }
  33 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4771, arst=!\rst_n, srst={ }
  34 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4780, arst=!\rst_n, srst={ }
  14 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4787, arst=!\rst_n, srst={ }
  151 cells in clk=\clk, en=$auto$opt_dff.cc:194:make_patterns_logic$4790, arst=!\rst_n, srst={ }
  188 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4795, arst=!\rst_n, srst={ }
  23 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4616, arst=!\rst_n, srst={ }
  110 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4623, arst=!\rst_n, srst={ }
  111 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4632, arst=!\rst_n, srst={ }
  118 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4643, arst=!\rst_n, srst={ }
  1095 cells in clk=\clk, en=$auto$simplemap.cc:251:simplemap_eqne$10448 [3], arst=!\rst_n, srst={ }
  34 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4654, arst=!\rst_n, srst={ }

3.70.2. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4611, asynchronously reset by !\rst_n
Extracted 47 gates and 59 wires to a netlist network with 11 inputs and 19 outputs.

3.70.2.1. Executing ABC.

3.70.3. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5196, asynchronously reset by !\rst_n
Extracted 385 gates and 537 wires to a netlist network with 150 inputs and 77 outputs.

3.70.3.1. Executing ABC.

3.70.4. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5207, asynchronously reset by !\rst_n
Extracted 312 gates and 504 wires to a netlist network with 191 inputs and 96 outputs.

3.70.4.1. Executing ABC.

3.70.5. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$21765$flatten\cavlc_read_levels.$verific$n231$765, asynchronously reset by !\rst_n
Extracted 68 gates and 87 wires to a netlist network with 17 inputs and 16 outputs.

3.70.5.1. Executing ABC.

3.70.6. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$21765$flatten\cavlc_read_levels.$verific$n474$782, asynchronously reset by !\rst_n
Extracted 226 gates and 266 wires to a netlist network with 38 inputs and 18 outputs.

3.70.6.1. Executing ABC.

3.70.7. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$21765$cavlc_read_levels.level_abs_refresh, asynchronously reset by !\rst_n
Extracted 91 gates and 107 wires to a netlist network with 15 inputs and 25 outputs.

3.70.7.1. Executing ABC.

3.70.8. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4821, asynchronously reset by !\rst_n
Extracted 61 gates and 100 wires to a netlist network with 37 inputs and 41 outputs.

3.70.8.1. Executing ABC.

3.70.9. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4844, asynchronously reset by !\rst_n
Extracted 52 gates and 90 wires to a netlist network with 37 inputs and 32 outputs.

3.70.9.1. Executing ABC.

3.70.10. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4871, asynchronously reset by !\rst_n
Extracted 57 gates and 99 wires to a netlist network with 41 inputs and 28 outputs.

3.70.10.1. Executing ABC.

3.70.11. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4898, asynchronously reset by !\rst_n
Extracted 56 gates and 99 wires to a netlist network with 42 inputs and 26 outputs.

3.70.11.1. Executing ABC.

3.70.12. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4921, asynchronously reset by !\rst_n
Extracted 42 gates and 77 wires to a netlist network with 34 inputs and 22 outputs.

3.70.12.1. Executing ABC.

3.70.13. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4944, asynchronously reset by !\rst_n
Extracted 41 gates and 75 wires to a netlist network with 33 inputs and 21 outputs.

3.70.13.1. Executing ABC.

3.70.14. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4969, asynchronously reset by !\rst_n
Extracted 55 gates and 94 wires to a netlist network with 38 inputs and 32 outputs.

3.70.14.1. Executing ABC.

3.70.15. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4994, asynchronously reset by !\rst_n
Extracted 49 gates and 85 wires to a netlist network with 35 inputs and 30 outputs.

3.70.15.1. Executing ABC.

3.70.16. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5017, asynchronously reset by !\rst_n
Extracted 39 gates and 71 wires to a netlist network with 31 inputs and 20 outputs.

3.70.16.1. Executing ABC.

3.70.17. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5038, asynchronously reset by !\rst_n
Extracted 72 gates and 118 wires to a netlist network with 45 inputs and 42 outputs.

3.70.17.1. Executing ABC.

3.70.18. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5059, asynchronously reset by !\rst_n
Extracted 52 gates and 89 wires to a netlist network with 36 inputs and 26 outputs.

3.70.18.1. Executing ABC.

3.70.19. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5082, asynchronously reset by !\rst_n
Extracted 45 gates and 82 wires to a netlist network with 36 inputs and 25 outputs.

3.70.19.1. Executing ABC.

3.70.20. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5105, asynchronously reset by !\rst_n
Extracted 42 gates and 77 wires to a netlist network with 34 inputs and 22 outputs.

3.70.20.1. Executing ABC.

3.70.21. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5130, asynchronously reset by !\rst_n
Extracted 47 gates and 85 wires to a netlist network with 37 inputs and 26 outputs.

3.70.21.1. Executing ABC.

3.70.22. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5155, asynchronously reset by !\rst_n
Extracted 59 gates and 106 wires to a netlist network with 46 inputs and 28 outputs.

3.70.22.1. Executing ABC.

3.70.23. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5178, asynchronously reset by !\rst_n
Extracted 33 gates and 57 wires to a netlist network with 23 inputs and 24 outputs.

3.70.23.1. Executing ABC.

3.70.24. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5191, asynchronously reset by !\rst_n
Extracted 32 gates and 53 wires to a netlist network with 20 inputs and 9 outputs.

3.70.24.1. Executing ABC.

3.70.25. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4663, asynchronously reset by !\rst_n
Extracted 39 gates and 66 wires to a netlist network with 26 inputs and 13 outputs.

3.70.25.1. Executing ABC.

3.70.26. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4672, asynchronously reset by !\rst_n
Extracted 32 gates and 54 wires to a netlist network with 21 inputs and 11 outputs.

3.70.26.1. Executing ABC.

3.70.27. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4681, asynchronously reset by !\rst_n
Extracted 33 gates and 56 wires to a netlist network with 22 inputs and 10 outputs.

3.70.27.1. Executing ABC.

3.70.28. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4690, asynchronously reset by !\rst_n
Extracted 31 gates and 52 wires to a netlist network with 20 inputs and 10 outputs.

3.70.28.1. Executing ABC.

3.70.29. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4699, asynchronously reset by !\rst_n
Extracted 32 gates and 54 wires to a netlist network with 21 inputs and 10 outputs.

3.70.29.1. Executing ABC.

3.70.30. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4708, asynchronously reset by !\rst_n
Extracted 33 gates and 56 wires to a netlist network with 22 inputs and 12 outputs.

3.70.30.1. Executing ABC.

3.70.31. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4717, asynchronously reset by !\rst_n
Extracted 33 gates and 55 wires to a netlist network with 21 inputs and 11 outputs.

3.70.31.1. Executing ABC.

3.70.32. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4726, asynchronously reset by !\rst_n
Extracted 32 gates and 54 wires to a netlist network with 21 inputs and 10 outputs.

3.70.32.1. Executing ABC.

3.70.33. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4735, asynchronously reset by !\rst_n
Extracted 26 gates and 43 wires to a netlist network with 16 inputs and 11 outputs.

3.70.33.1. Executing ABC.

3.70.34. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4744, asynchronously reset by !\rst_n
Extracted 32 gates and 53 wires to a netlist network with 20 inputs and 10 outputs.

3.70.34.1. Executing ABC.

3.70.35. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4753, asynchronously reset by !\rst_n
Extracted 32 gates and 52 wires to a netlist network with 19 inputs and 10 outputs.

3.70.35.1. Executing ABC.

3.70.36. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4762, asynchronously reset by !\rst_n
Extracted 33 gates and 54 wires to a netlist network with 20 inputs and 10 outputs.

3.70.36.1. Executing ABC.

3.70.37. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4771, asynchronously reset by !\rst_n
Extracted 33 gates and 54 wires to a netlist network with 20 inputs and 10 outputs.

3.70.37.1. Executing ABC.

3.70.38. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4780, asynchronously reset by !\rst_n
Extracted 34 gates and 57 wires to a netlist network with 22 inputs and 10 outputs.

3.70.38.1. Executing ABC.

3.70.39. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4787, asynchronously reset by !\rst_n
Extracted 14 gates and 26 wires to a netlist network with 12 inputs and 12 outputs.

3.70.39.1. Executing ABC.

3.70.40. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:194:make_patterns_logic$4790, asynchronously reset by !\rst_n
Extracted 151 gates and 196 wires to a netlist network with 43 inputs and 25 outputs.

3.70.40.1. Executing ABC.

3.70.41. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4795, asynchronously reset by !\rst_n
Extracted 188 gates and 263 wires to a netlist network with 73 inputs and 45 outputs.

3.70.41.1. Executing ABC.

3.70.42. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4616, asynchronously reset by !\rst_n
Extracted 23 gates and 33 wires to a netlist network with 10 inputs and 11 outputs.

3.70.42.1. Executing ABC.

3.70.43. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4623, asynchronously reset by !\rst_n
Extracted 110 gates and 126 wires to a netlist network with 14 inputs and 54 outputs.

3.70.43.1. Executing ABC.

3.70.44. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4632, asynchronously reset by !\rst_n
Extracted 111 gates and 132 wires to a netlist network with 19 inputs and 65 outputs.

3.70.44.1. Executing ABC.

3.70.45. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4643, asynchronously reset by !\rst_n
Extracted 118 gates and 140 wires to a netlist network with 21 inputs and 71 outputs.

3.70.45.1. Executing ABC.

3.70.46. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$21765$auto$simplemap.cc:251:simplemap_eqne$10448[3], asynchronously reset by !\rst_n
Extracted 1095 gates and 1323 wires to a netlist network with 226 inputs and 83 outputs.

3.70.46.1. Executing ABC.

3.70.47. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4654, asynchronously reset by !\rst_n
Extracted 34 gates and 55 wires to a netlist network with 20 inputs and 11 outputs.

3.70.47.1. Executing ABC.

yosys> abc -dff

3.71. Executing ABC pass (technology mapping using ABC).

3.71.1. Summary of detected clock domains:
  38 cells in clk=\clk, en=$abc$21717$auto$opt_dff.cc:219:make_patterns_logic$4611, arst=!\rst_n, srst={ }
  117 cells in clk=\clk, en=$abc$24966$auto$opt_dff.cc:219:make_patterns_logic$4795, arst=!\rst_n, srst={ }
  58 cells in clk=\clk, en=$abc$24647$auto$opt_dff.cc:219:make_patterns_logic$4762, arst=!\rst_n, srst={ }
  47 cells in clk=\clk, en=$abc$22903$auto$opt_dff.cc:219:make_patterns_logic$4821, arst=!\rst_n, srst={ }
  21 cells in clk=\clk, en=$abc$25087$auto$opt_dff.cc:219:make_patterns_logic$4616, arst=!\rst_n, srst={ }
  160 cells in clk=\clk, en=$abc$22127$auto$opt_dff.cc:219:make_patterns_logic$5207, arst=!\rst_n, srst={ }
  40 cells in clk=\clk, en=$abc$23576$auto$opt_dff.cc:219:make_patterns_logic$5017, arst=!\rst_n, srst={ }
  62 cells in clk=\clk, en=$abc$24458$auto$opt_dff.cc:219:make_patterns_logic$4717, arst=!\rst_n, srst={ }
  49 cells in clk=\clk, en=$abc$23756$auto$opt_dff.cc:219:make_patterns_logic$5059, arst=!\rst_n, srst={ }
  849 cells in clk=\clk, en=$abc$21765$auto$simplemap.cc:251:simplemap_eqne$10448[3], arst=!\rst_n, srst={ }
  34 cells in clk=\clk, en=$abc$24684$auto$opt_dff.cc:219:make_patterns_logic$4771, arst=!\rst_n, srst={ }
  60 cells in clk=\clk, en=$abc$24418$auto$opt_dff.cc:219:make_patterns_logic$4708, arst=!\rst_n, srst={ }
  103 cells in clk=\clk, en=$abc$25116$auto$opt_dff.cc:219:make_patterns_logic$4623, arst=!\rst_n, srst={ }
  137 cells in clk=\clk, en=$abc$23978$auto$opt_dff.cc:219:make_patterns_logic$5130, arst=!\rst_n, srst={ }
  27 cells in clk=\clk, en=$abc$24610$auto$opt_dff.cc:219:make_patterns_logic$4753, arst=!\rst_n, srst={ }
  65 cells in clk=\clk, en=$abc$21765$cavlc_read_levels.level_abs_refresh, arst=!\rst_n, srst={ }
  93 cells in clk=\clk, en=$abc$25330$auto$opt_dff.cc:219:make_patterns_logic$4643, arst=!\rst_n, srst={ }
  54 cells in clk=\clk, en=$abc$21765$flatten\cavlc_read_levels.$verific$n231$765, arst=!\rst_n, srst={ }
  161 cells in clk=\clk, en=$abc$21765$flatten\cavlc_read_levels.$verific$n474$782, arst=!\rst_n, srst={ }
  47 cells in clk=\clk, en=$abc$23651$auto$opt_dff.cc:219:make_patterns_logic$5038, arst=!\rst_n, srst={ }
  20 cells in clk=\clk, en=$abc$24762$auto$opt_dff.cc:219:make_patterns_logic$4787, arst=!\rst_n, srst={ }
  52 cells in clk=\clk, en=$abc$23490$auto$opt_dff.cc:219:make_patterns_logic$4994, arst=!\rst_n, srst={ }
  65 cells in clk=\clk, en=$abc$24216$auto$opt_dff.cc:219:make_patterns_logic$4663, arst=!\rst_n, srst={ }
  335 cells in clk=\clk, en=$abc$21765$auto$opt_dff.cc:219:make_patterns_logic$5196, arst=!\rst_n, srst={ }
  28 cells in clk=\clk, en=$abc$24139$auto$opt_dff.cc:219:make_patterns_logic$5178, arst=!\rst_n, srst={ }
  85 cells in clk=\clk, en=$abc$25220$auto$opt_dff.cc:219:make_patterns_logic$4632, arst=!\rst_n, srst={ }
  36 cells in clk=\clk, en=$abc$23242$auto$opt_dff.cc:219:make_patterns_logic$4921, arst=!\rst_n, srst={ }
  42 cells in clk=\clk, en=$abc$23320$auto$opt_dff.cc:219:make_patterns_logic$4944, arst=!\rst_n, srst={ }
  48 cells in clk=\clk, en=$abc$23000$auto$opt_dff.cc:219:make_patterns_logic$4844, arst=!\rst_n, srst={ }
  130 cells in clk=\clk, en=$abc$23175$auto$opt_dff.cc:219:make_patterns_logic$4898, arst=!\rst_n, srst={ }
  55 cells in clk=\clk, en=$abc$23089$auto$opt_dff.cc:219:make_patterns_logic$4871, arst=!\rst_n, srst={ }
  53 cells in clk=\clk, en=$abc$23397$auto$opt_dff.cc:219:make_patterns_logic$4969, arst=!\rst_n, srst={ }
  30 cells in clk=\clk, en=$abc$24189$auto$opt_dff.cc:219:make_patterns_logic$5191, arst=!\rst_n, srst={ }
  64 cells in clk=\clk, en=$abc$24340$auto$opt_dff.cc:219:make_patterns_logic$4690, arst=!\rst_n, srst={ }
  33 cells in clk=\clk, en=$abc$24299$auto$opt_dff.cc:219:make_patterns_logic$4681, arst=!\rst_n, srst={ }
  66 cells in clk=\clk, en=$abc$24379$auto$opt_dff.cc:219:make_patterns_logic$4699, arst=!\rst_n, srst={ }
  62 cells in clk=\clk, en=$abc$24572$auto$opt_dff.cc:219:make_patterns_logic$4744, arst=!\rst_n, srst={ }
  60 cells in clk=\clk, en=$abc$24498$auto$opt_dff.cc:219:make_patterns_logic$4726, arst=!\rst_n, srst={ }
  37 cells in clk=\clk, en=$abc$23900$auto$opt_dff.cc:219:make_patterns_logic$5105, arst=!\rst_n, srst={ }
  114 cells in clk=\clk, en=$abc$23837$auto$opt_dff.cc:219:make_patterns_logic$5082, arst=!\rst_n, srst={ }
  63 cells in clk=\clk, en=$abc$24259$auto$opt_dff.cc:219:make_patterns_logic$4672, arst=!\rst_n, srst={ }
  62 cells in clk=\clk, en=$abc$24044$auto$opt_dff.cc:219:make_patterns_logic$5155, arst=!\rst_n, srst={ }
  436 cells in clk=\clk, en=$abc$24794$auto$opt_dff.cc:194:make_patterns_logic$4790, arst=!\rst_n, srst={ }
  65 cells in clk=\clk, en=$abc$24722$auto$opt_dff.cc:219:make_patterns_logic$4780, arst=!\rst_n, srst={ }
  62 cells in clk=\clk, en=$abc$24537$auto$opt_dff.cc:219:make_patterns_logic$4735, arst=!\rst_n, srst={ }
  57 cells in clk=\clk, en=$abc$26556$auto$opt_dff.cc:219:make_patterns_logic$4654, arst=!\rst_n, srst={ }

3.71.2. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$21717$auto$opt_dff.cc:219:make_patterns_logic$4611, asynchronously reset by !\rst_n
Extracted 38 gates and 49 wires to a netlist network with 11 inputs and 21 outputs.

3.71.2.1. Executing ABC.

3.71.3. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$24966$auto$opt_dff.cc:219:make_patterns_logic$4795, asynchronously reset by !\rst_n
Extracted 117 gates and 168 wires to a netlist network with 51 inputs and 32 outputs.

3.71.3.1. Executing ABC.

3.71.4. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$24647$auto$opt_dff.cc:219:make_patterns_logic$4762, asynchronously reset by !\rst_n
Extracted 58 gates and 90 wires to a netlist network with 32 inputs and 13 outputs.

3.71.4.1. Executing ABC.

3.71.5. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$22903$auto$opt_dff.cc:219:make_patterns_logic$4821, asynchronously reset by !\rst_n
Extracted 47 gates and 77 wires to a netlist network with 30 inputs and 23 outputs.

3.71.5.1. Executing ABC.

3.71.6. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$25087$auto$opt_dff.cc:219:make_patterns_logic$4616, asynchronously reset by !\rst_n
Extracted 21 gates and 31 wires to a netlist network with 10 inputs and 11 outputs.

3.71.6.1. Executing ABC.

3.71.7. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$22127$auto$opt_dff.cc:219:make_patterns_logic$5207, asynchronously reset by !\rst_n
Extracted 160 gates and 224 wires to a netlist network with 64 inputs and 72 outputs.

3.71.7.1. Executing ABC.

3.71.8. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$23576$auto$opt_dff.cc:219:make_patterns_logic$5017, asynchronously reset by !\rst_n
Extracted 40 gates and 71 wires to a netlist network with 31 inputs and 25 outputs.

3.71.8.1. Executing ABC.

3.71.9. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$24458$auto$opt_dff.cc:219:make_patterns_logic$4717, asynchronously reset by !\rst_n
Extracted 62 gates and 96 wires to a netlist network with 34 inputs and 14 outputs.

3.71.9.1. Executing ABC.

3.71.10. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$23756$auto$opt_dff.cc:219:make_patterns_logic$5059, asynchronously reset by !\rst_n
Extracted 49 gates and 73 wires to a netlist network with 24 inputs and 23 outputs.

3.71.10.1. Executing ABC.

3.71.11. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$21765$auto$simplemap.cc:251:simplemap_eqne$10448[3], asynchronously reset by !\rst_n
Extracted 849 gates and 1086 wires to a netlist network with 237 inputs and 133 outputs.

3.71.11.1. Executing ABC.

3.71.12. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$24684$auto$opt_dff.cc:219:make_patterns_logic$4771, asynchronously reset by !\rst_n
Extracted 34 gates and 56 wires to a netlist network with 22 inputs and 15 outputs.

3.71.12.1. Executing ABC.

3.71.13. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$24418$auto$opt_dff.cc:219:make_patterns_logic$4708, asynchronously reset by !\rst_n
Extracted 60 gates and 94 wires to a netlist network with 34 inputs and 14 outputs.

3.71.13.1. Executing ABC.

3.71.14. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$25116$auto$opt_dff.cc:219:make_patterns_logic$4623, asynchronously reset by !\rst_n
Extracted 103 gates and 117 wires to a netlist network with 14 inputs and 54 outputs.

3.71.14.1. Executing ABC.

3.71.15. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$23978$auto$opt_dff.cc:219:make_patterns_logic$5130, asynchronously reset by !\rst_n
Extracted 137 gates and 222 wires to a netlist network with 85 inputs and 34 outputs.

3.71.15.1. Executing ABC.

3.71.16. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$24610$auto$opt_dff.cc:219:make_patterns_logic$4753, asynchronously reset by !\rst_n
Extracted 27 gates and 46 wires to a netlist network with 19 inputs and 10 outputs.

3.71.16.1. Executing ABC.

3.71.17. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$21765$cavlc_read_levels.level_abs_refresh, asynchronously reset by !\rst_n
Extracted 65 gates and 84 wires to a netlist network with 19 inputs and 25 outputs.

3.71.17.1. Executing ABC.

3.71.18. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$25330$auto$opt_dff.cc:219:make_patterns_logic$4643, asynchronously reset by !\rst_n
Extracted 93 gates and 114 wires to a netlist network with 21 inputs and 67 outputs.

3.71.18.1. Executing ABC.

3.71.19. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$21765$flatten\cavlc_read_levels.$verific$n231$765, asynchronously reset by !\rst_n
Extracted 54 gates and 70 wires to a netlist network with 16 inputs and 26 outputs.

3.71.19.1. Executing ABC.

3.71.20. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$21765$flatten\cavlc_read_levels.$verific$n474$782, asynchronously reset by !\rst_n
Extracted 161 gates and 199 wires to a netlist network with 38 inputs and 20 outputs.

3.71.20.1. Executing ABC.

3.71.21. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$23651$auto$opt_dff.cc:219:make_patterns_logic$5038, asynchronously reset by !\rst_n
Extracted 47 gates and 73 wires to a netlist network with 26 inputs and 22 outputs.

3.71.21.1. Executing ABC.

3.71.22. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$24762$auto$opt_dff.cc:219:make_patterns_logic$4787, asynchronously reset by !\rst_n
Extracted 20 gates and 32 wires to a netlist network with 12 inputs and 12 outputs.

3.71.22.1. Executing ABC.

3.71.23. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$23490$auto$opt_dff.cc:219:make_patterns_logic$4994, asynchronously reset by !\rst_n
Extracted 52 gates and 82 wires to a netlist network with 30 inputs and 24 outputs.

3.71.23.1. Executing ABC.

3.71.24. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$24216$auto$opt_dff.cc:219:make_patterns_logic$4663, asynchronously reset by !\rst_n
Extracted 65 gates and 103 wires to a netlist network with 38 inputs and 15 outputs.

3.71.24.1. Executing ABC.

3.71.25. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$21765$auto$opt_dff.cc:219:make_patterns_logic$5196, asynchronously reset by !\rst_n
Extracted 335 gates and 501 wires to a netlist network with 166 inputs and 84 outputs.

3.71.25.1. Executing ABC.

3.71.26. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$24139$auto$opt_dff.cc:219:make_patterns_logic$5178, asynchronously reset by !\rst_n
Extracted 28 gates and 57 wires to a netlist network with 29 inputs and 18 outputs.

3.71.26.1. Executing ABC.

3.71.27. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$25220$auto$opt_dff.cc:219:make_patterns_logic$4632, asynchronously reset by !\rst_n
Extracted 85 gates and 104 wires to a netlist network with 19 inputs and 61 outputs.

3.71.27.1. Executing ABC.

3.71.28. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$23242$auto$opt_dff.cc:219:make_patterns_logic$4921, asynchronously reset by !\rst_n
Extracted 36 gates and 65 wires to a netlist network with 29 inputs and 24 outputs.

3.71.28.1. Executing ABC.

3.71.29. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$23320$auto$opt_dff.cc:219:make_patterns_logic$4944, asynchronously reset by !\rst_n
Extracted 42 gates and 75 wires to a netlist network with 33 inputs and 28 outputs.

3.71.29.1. Executing ABC.

3.71.30. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$23000$auto$opt_dff.cc:219:make_patterns_logic$4844, asynchronously reset by !\rst_n
Extracted 48 gates and 83 wires to a netlist network with 35 inputs and 25 outputs.

3.71.30.1. Executing ABC.

3.71.31. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$23175$auto$opt_dff.cc:219:make_patterns_logic$4898, asynchronously reset by !\rst_n
Extracted 130 gates and 214 wires to a netlist network with 84 inputs and 27 outputs.

3.71.31.1. Executing ABC.

3.71.32. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$23089$auto$opt_dff.cc:219:make_patterns_logic$4871, asynchronously reset by !\rst_n
Extracted 55 gates and 86 wires to a netlist network with 31 inputs and 26 outputs.

3.71.32.1. Executing ABC.

3.71.33. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$23397$auto$opt_dff.cc:219:make_patterns_logic$4969, asynchronously reset by !\rst_n
Extracted 53 gates and 81 wires to a netlist network with 28 inputs and 23 outputs.

3.71.33.1. Executing ABC.

3.71.34. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$24189$auto$opt_dff.cc:219:make_patterns_logic$5191, asynchronously reset by !\rst_n
Extracted 30 gates and 51 wires to a netlist network with 21 inputs and 7 outputs.

3.71.34.1. Executing ABC.

3.71.35. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$24340$auto$opt_dff.cc:219:make_patterns_logic$4690, asynchronously reset by !\rst_n
Extracted 64 gates and 99 wires to a netlist network with 35 inputs and 15 outputs.

3.71.35.1. Executing ABC.

3.71.36. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$24299$auto$opt_dff.cc:219:make_patterns_logic$4681, asynchronously reset by !\rst_n
Extracted 33 gates and 55 wires to a netlist network with 22 inputs and 12 outputs.

3.71.36.1. Executing ABC.

3.71.37. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$24379$auto$opt_dff.cc:219:make_patterns_logic$4699, asynchronously reset by !\rst_n
Extracted 66 gates and 103 wires to a netlist network with 37 inputs and 18 outputs.

3.71.37.1. Executing ABC.

3.71.38. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$24572$auto$opt_dff.cc:219:make_patterns_logic$4744, asynchronously reset by !\rst_n
Extracted 62 gates and 97 wires to a netlist network with 35 inputs and 15 outputs.

3.71.38.1. Executing ABC.

3.71.39. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$24498$auto$opt_dff.cc:219:make_patterns_logic$4726, asynchronously reset by !\rst_n
Extracted 60 gates and 94 wires to a netlist network with 34 inputs and 12 outputs.

3.71.39.1. Executing ABC.

3.71.40. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$23900$auto$opt_dff.cc:219:make_patterns_logic$5105, asynchronously reset by !\rst_n
Extracted 37 gates and 66 wires to a netlist network with 29 inputs and 24 outputs.

3.71.40.1. Executing ABC.

3.71.41. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$23837$auto$opt_dff.cc:219:make_patterns_logic$5082, asynchronously reset by !\rst_n
Extracted 114 gates and 198 wires to a netlist network with 84 inputs and 29 outputs.

3.71.41.1. Executing ABC.

3.71.42. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$24259$auto$opt_dff.cc:219:make_patterns_logic$4672, asynchronously reset by !\rst_n
Extracted 63 gates and 98 wires to a netlist network with 35 inputs and 15 outputs.

3.71.42.1. Executing ABC.

3.71.43. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$24044$auto$opt_dff.cc:219:make_patterns_logic$5155, asynchronously reset by !\rst_n
Extracted 62 gates and 99 wires to a netlist network with 37 inputs and 29 outputs.

3.71.43.1. Executing ABC.

3.71.44. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$24794$auto$opt_dff.cc:194:make_patterns_logic$4790, asynchronously reset by !\rst_n
Extracted 436 gates and 529 wires to a netlist network with 93 inputs and 26 outputs.

3.71.44.1. Executing ABC.

3.71.45. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$24722$auto$opt_dff.cc:219:make_patterns_logic$4780, asynchronously reset by !\rst_n
Extracted 65 gates and 104 wires to a netlist network with 39 inputs and 14 outputs.

3.71.45.1. Executing ABC.

3.71.46. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$24537$auto$opt_dff.cc:219:make_patterns_logic$4735, asynchronously reset by !\rst_n
Extracted 62 gates and 97 wires to a netlist network with 35 inputs and 15 outputs.

3.71.46.1. Executing ABC.

3.71.47. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$26556$auto$opt_dff.cc:219:make_patterns_logic$4654, asynchronously reset by !\rst_n
Extracted 57 gates and 89 wires to a netlist network with 32 inputs and 12 outputs.

3.71.47.1. Executing ABC.

yosys> abc -dff

3.72. Executing ABC pass (technology mapping using ABC).

3.72.1. Summary of detected clock domains:
  104 cells in clk=\clk, en=$abc$26640$abc$24966$auto$opt_dff.cc:219:make_patterns_logic$4795, arst=!\rst_n, srst={ }
  54 cells in clk=\clk, en=$abc$26751$abc$24647$auto$opt_dff.cc:219:make_patterns_logic$4762, arst=!\rst_n, srst={ }
  149 cells in clk=\clk, en=$abc$26891$abc$22127$auto$opt_dff.cc:219:make_patterns_logic$5207, arst=!\rst_n, srst={ }
  43 cells in clk=\clk, en=$abc$27043$abc$23576$auto$opt_dff.cc:219:make_patterns_logic$5017, arst=!\rst_n, srst={ }
  56 cells in clk=\clk, en=$abc$31057$abc$24537$auto$opt_dff.cc:219:make_patterns_logic$4735, arst=!\rst_n, srst={ }
  59 cells in clk=\clk, en=$abc$27095$abc$24458$auto$opt_dff.cc:219:make_patterns_logic$4717, arst=!\rst_n, srst={ }
  830 cells in clk=\clk, en=$abc$27208$abc$21765$auto$simplemap.cc:251:simplemap_eqne$10448[3], arst=!\rst_n, srst={ }
  66 cells in clk=\clk, en=$abc$28062$abc$24684$auto$opt_dff.cc:219:make_patterns_logic$4771, arst=!\rst_n, srst={ }
  21 cells in clk=\clk, en=$abc$26863$abc$25087$auto$opt_dff.cc:219:make_patterns_logic$4616, arst=!\rst_n, srst={ }
  51 cells in clk=\clk, en=$abc$28105$abc$24418$auto$opt_dff.cc:219:make_patterns_logic$4708, arst=!\rst_n, srst={ }
  42 cells in clk=\clk, en=$abc$26811$abc$22903$auto$opt_dff.cc:219:make_patterns_logic$4821, arst=!\rst_n, srst={ }
  36 cells in clk=\clk, en=$abc$26594$abc$21717$auto$opt_dff.cc:219:make_patterns_logic$4611, arst=!\rst_n, srst={ }
  68 cells in clk=\clk, en=$abc$28166$abc$25116$auto$opt_dff.cc:219:make_patterns_logic$4623, arst=!\rst_n, srst={ }
  53 cells in clk=\clk, en=$abc$28278$abc$23978$auto$opt_dff.cc:219:make_patterns_logic$5130, arst=!\rst_n, srst={ }
  46 cells in clk=\clk, en=$abc$28426$abc$24610$auto$opt_dff.cc:219:make_patterns_logic$4753, arst=!\rst_n, srst={ }
  63 cells in clk=\clk, en=$abc$28463$abc$21765$cavlc_read_levels.level_abs_refresh, arst=!\rst_n, srst={ }
  52 cells in clk=\clk, en=$abc$29059$abc$21765$flatten\cavlc_read_levels.$verific$n231$765, arst=!\rst_n, srst={ }
  171 cells in clk=\clk, en=$abc$28699$abc$21765$flatten\cavlc_read_levels.$verific$n474$782, arst=!\rst_n, srst={ }
  48 cells in clk=\clk, en=$abc$28860$abc$23651$auto$opt_dff.cc:219:make_patterns_logic$5038, arst=!\rst_n, srst={ }
  16 cells in clk=\clk, en=$abc$28909$abc$24762$auto$opt_dff.cc:219:make_patterns_logic$4787, arst=!\rst_n, srst={ }
  52 cells in clk=\clk, en=$abc$28940$abc$23490$auto$opt_dff.cc:219:make_patterns_logic$4994, arst=!\rst_n, srst={ }
  53 cells in clk=\clk, en=$abc$28994$abc$24216$auto$opt_dff.cc:219:make_patterns_logic$4663, arst=!\rst_n, srst={ }
  259 cells in clk=\clk, en=$abc$29059$abc$21765$auto$opt_dff.cc:219:make_patterns_logic$5196, arst=!\rst_n, srst={ }
  38 cells in clk=\clk, en=$abc$29389$abc$24139$auto$opt_dff.cc:219:make_patterns_logic$5178, arst=!\rst_n, srst={ }
  84 cells in clk=\clk, en=$abc$29434$abc$25220$auto$opt_dff.cc:219:make_patterns_logic$4632, arst=!\rst_n, srst={ }
  38 cells in clk=\clk, en=$abc$29534$abc$23242$auto$opt_dff.cc:219:make_patterns_logic$4921, arst=!\rst_n, srst={ }
  42 cells in clk=\clk, en=$abc$29585$abc$23320$auto$opt_dff.cc:219:make_patterns_logic$4944, arst=!\rst_n, srst={ }
  50 cells in clk=\clk, en=$abc$29641$abc$23000$auto$opt_dff.cc:219:make_patterns_logic$4844, arst=!\rst_n, srst={ }
  54 cells in clk=\clk, en=$abc$29695$abc$23175$auto$opt_dff.cc:219:make_patterns_logic$4898, arst=!\rst_n, srst={ }
  93 cells in clk=\clk, en=$abc$28528$abc$25330$auto$opt_dff.cc:219:make_patterns_logic$4643, arst=!\rst_n, srst={ }
  57 cells in clk=\clk, en=$abc$29836$abc$23089$auto$opt_dff.cc:219:make_patterns_logic$4871, arst=!\rst_n, srst={ }
  27 cells in clk=\clk, en=$abc$29948$abc$24189$auto$opt_dff.cc:219:make_patterns_logic$5191, arst=!\rst_n, srst={ }
  52 cells in clk=\clk, en=$abc$29974$abc$24340$auto$opt_dff.cc:219:make_patterns_logic$4690, arst=!\rst_n, srst={ }
  52 cells in clk=\clk, en=$abc$30039$abc$24299$auto$opt_dff.cc:219:make_patterns_logic$4681, arst=!\rst_n, srst={ }
  52 cells in clk=\clk, en=$abc$30082$abc$24379$auto$opt_dff.cc:219:make_patterns_logic$4699, arst=!\rst_n, srst={ }
  56 cells in clk=\clk, en=$abc$30150$abc$24572$auto$opt_dff.cc:219:make_patterns_logic$4744, arst=!\rst_n, srst={ }
  52 cells in clk=\clk, en=$abc$30214$abc$24498$auto$opt_dff.cc:219:make_patterns_logic$4726, arst=!\rst_n, srst={ }
  38 cells in clk=\clk, en=$abc$30275$abc$23900$auto$opt_dff.cc:219:make_patterns_logic$5105, arst=!\rst_n, srst={ }
  44 cells in clk=\clk, en=$abc$30327$abc$23837$auto$opt_dff.cc:219:make_patterns_logic$5082, arst=!\rst_n, srst={ }
  59 cells in clk=\clk, en=$abc$30465$abc$24259$auto$opt_dff.cc:219:make_patterns_logic$4672, arst=!\rst_n, srst={ }
  63 cells in clk=\clk, en=$abc$30529$abc$24044$auto$opt_dff.cc:219:make_patterns_logic$5155, arst=!\rst_n, srst={ }
  504 cells in clk=\clk, en=$abc$30594$abc$24794$auto$opt_dff.cc:194:make_patterns_logic$4790, arst=!\rst_n, srst={ }
  50 cells in clk=\clk, en=$abc$30990$abc$24722$auto$opt_dff.cc:219:make_patterns_logic$4780, arst=!\rst_n, srst={ }
  52 cells in clk=\clk, en=$abc$29893$abc$23397$auto$opt_dff.cc:219:make_patterns_logic$4969, arst=!\rst_n, srst={ }
  52 cells in clk=\clk, en=$abc$27158$abc$23756$auto$opt_dff.cc:219:make_patterns_logic$5059, arst=!\rst_n, srst={ }
  228 cells in clk=\clk, en=$abc$31121$abc$26556$auto$opt_dff.cc:219:make_patterns_logic$4654, arst=!\rst_n, srst={ }

3.72.2. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$26640$abc$24966$auto$opt_dff.cc:219:make_patterns_logic$4795, asynchronously reset by !\rst_n
Extracted 104 gates and 155 wires to a netlist network with 51 inputs and 32 outputs.

3.72.2.1. Executing ABC.

3.72.3. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$26751$abc$24647$auto$opt_dff.cc:219:make_patterns_logic$4762, asynchronously reset by !\rst_n
Extracted 54 gates and 91 wires to a netlist network with 37 inputs and 13 outputs.

3.72.3.1. Executing ABC.

3.72.4. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$26891$abc$22127$auto$opt_dff.cc:219:make_patterns_logic$5207, asynchronously reset by !\rst_n
Extracted 149 gates and 212 wires to a netlist network with 63 inputs and 68 outputs.

3.72.4.1. Executing ABC.

3.72.5. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$27043$abc$23576$auto$opt_dff.cc:219:make_patterns_logic$5017, asynchronously reset by !\rst_n
Extracted 43 gates and 74 wires to a netlist network with 31 inputs and 26 outputs.

3.72.5.1. Executing ABC.

3.72.6. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$31057$abc$24537$auto$opt_dff.cc:219:make_patterns_logic$4735, asynchronously reset by !\rst_n
Extracted 56 gates and 90 wires to a netlist network with 34 inputs and 14 outputs.

3.72.6.1. Executing ABC.

3.72.7. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$27095$abc$24458$auto$opt_dff.cc:219:make_patterns_logic$4717, asynchronously reset by !\rst_n
Extracted 59 gates and 97 wires to a netlist network with 38 inputs and 18 outputs.

3.72.7.1. Executing ABC.

3.72.8. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$27208$abc$21765$auto$simplemap.cc:251:simplemap_eqne$10448[3], asynchronously reset by !\rst_n
Extracted 830 gates and 1071 wires to a netlist network with 241 inputs and 126 outputs.

3.72.8.1. Executing ABC.

3.72.9. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$28062$abc$24684$auto$opt_dff.cc:219:make_patterns_logic$4771, asynchronously reset by !\rst_n
Extracted 66 gates and 106 wires to a netlist network with 40 inputs and 21 outputs.

3.72.9.1. Executing ABC.

3.72.10. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$26863$abc$25087$auto$opt_dff.cc:219:make_patterns_logic$4616, asynchronously reset by !\rst_n
Extracted 21 gates and 31 wires to a netlist network with 10 inputs and 11 outputs.

3.72.10.1. Executing ABC.

3.72.11. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$28105$abc$24418$auto$opt_dff.cc:219:make_patterns_logic$4708, asynchronously reset by !\rst_n
Extracted 51 gates and 85 wires to a netlist network with 34 inputs and 13 outputs.

3.72.11.1. Executing ABC.

3.72.12. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$26811$abc$22903$auto$opt_dff.cc:219:make_patterns_logic$4821, asynchronously reset by !\rst_n
Extracted 42 gates and 70 wires to a netlist network with 28 inputs and 20 outputs.

3.72.12.1. Executing ABC.

3.72.13. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$26594$abc$21717$auto$opt_dff.cc:219:make_patterns_logic$4611, asynchronously reset by !\rst_n
Extracted 36 gates and 47 wires to a netlist network with 11 inputs and 20 outputs.

3.72.13.1. Executing ABC.

3.72.14. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$28166$abc$25116$auto$opt_dff.cc:219:make_patterns_logic$4623, asynchronously reset by !\rst_n
Extracted 68 gates and 82 wires to a netlist network with 14 inputs and 51 outputs.

3.72.14.1. Executing ABC.

3.72.15. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$28278$abc$23978$auto$opt_dff.cc:219:make_patterns_logic$5130, asynchronously reset by !\rst_n
Extracted 53 gates and 82 wires to a netlist network with 29 inputs and 23 outputs.

3.72.15.1. Executing ABC.

3.72.16. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$28426$abc$24610$auto$opt_dff.cc:219:make_patterns_logic$4753, asynchronously reset by !\rst_n
Extracted 46 gates and 76 wires to a netlist network with 30 inputs and 10 outputs.

3.72.16.1. Executing ABC.

3.72.17. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$28463$abc$21765$cavlc_read_levels.level_abs_refresh, asynchronously reset by !\rst_n
Extracted 63 gates and 82 wires to a netlist network with 19 inputs and 24 outputs.

3.72.17.1. Executing ABC.

3.72.18. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$29059$abc$21765$flatten\cavlc_read_levels.$verific$n231$765, asynchronously reset by !\rst_n
Extracted 52 gates and 71 wires to a netlist network with 19 inputs and 24 outputs.

3.72.18.1. Executing ABC.

3.72.19. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$28699$abc$21765$flatten\cavlc_read_levels.$verific$n474$782, asynchronously reset by !\rst_n
Extracted 171 gates and 212 wires to a netlist network with 41 inputs and 19 outputs.

3.72.19.1. Executing ABC.

3.72.20. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$28860$abc$23651$auto$opt_dff.cc:219:make_patterns_logic$5038, asynchronously reset by !\rst_n
Extracted 48 gates and 74 wires to a netlist network with 26 inputs and 23 outputs.

3.72.20.1. Executing ABC.

3.72.21. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$28909$abc$24762$auto$opt_dff.cc:219:make_patterns_logic$4787, asynchronously reset by !\rst_n
Extracted 16 gates and 28 wires to a netlist network with 12 inputs and 12 outputs.

3.72.21.1. Executing ABC.

3.72.22. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$28940$abc$23490$auto$opt_dff.cc:219:make_patterns_logic$4994, asynchronously reset by !\rst_n
Extracted 52 gates and 82 wires to a netlist network with 30 inputs and 24 outputs.

3.72.22.1. Executing ABC.

3.72.23. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$28994$abc$24216$auto$opt_dff.cc:219:make_patterns_logic$4663, asynchronously reset by !\rst_n
Extracted 53 gates and 88 wires to a netlist network with 35 inputs and 12 outputs.

3.72.23.1. Executing ABC.

3.72.24. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$29059$abc$21765$auto$opt_dff.cc:219:make_patterns_logic$5196, asynchronously reset by !\rst_n
Extracted 259 gates and 373 wires to a netlist network with 114 inputs and 67 outputs.

3.72.24.1. Executing ABC.

3.72.25. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$29389$abc$24139$auto$opt_dff.cc:219:make_patterns_logic$5178, asynchronously reset by !\rst_n
Extracted 38 gates and 69 wires to a netlist network with 31 inputs and 25 outputs.

3.72.25.1. Executing ABC.

3.72.26. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$29434$abc$25220$auto$opt_dff.cc:219:make_patterns_logic$4632, asynchronously reset by !\rst_n
Extracted 84 gates and 103 wires to a netlist network with 19 inputs and 60 outputs.

3.72.26.1. Executing ABC.

3.72.27. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$29534$abc$23242$auto$opt_dff.cc:219:make_patterns_logic$4921, asynchronously reset by !\rst_n
Extracted 38 gates and 67 wires to a netlist network with 29 inputs and 25 outputs.

3.72.27.1. Executing ABC.

3.72.28. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$29585$abc$23320$auto$opt_dff.cc:219:make_patterns_logic$4944, asynchronously reset by !\rst_n
Extracted 42 gates and 74 wires to a netlist network with 32 inputs and 24 outputs.

3.72.28.1. Executing ABC.

3.72.29. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$29641$abc$23000$auto$opt_dff.cc:219:make_patterns_logic$4844, asynchronously reset by !\rst_n
Extracted 50 gates and 87 wires to a netlist network with 37 inputs and 26 outputs.

3.72.29.1. Executing ABC.

3.72.30. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$29695$abc$23175$auto$opt_dff.cc:219:make_patterns_logic$4898, asynchronously reset by !\rst_n
Extracted 54 gates and 87 wires to a netlist network with 33 inputs and 23 outputs.

3.72.30.1. Executing ABC.

3.72.31. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$28528$abc$25330$auto$opt_dff.cc:219:make_patterns_logic$4643, asynchronously reset by !\rst_n
Extracted 93 gates and 114 wires to a netlist network with 21 inputs and 67 outputs.

3.72.31.1. Executing ABC.

3.72.32. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$29836$abc$23089$auto$opt_dff.cc:219:make_patterns_logic$4871, asynchronously reset by !\rst_n
Extracted 57 gates and 87 wires to a netlist network with 30 inputs and 28 outputs.

3.72.32.1. Executing ABC.

3.72.33. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$29948$abc$24189$auto$opt_dff.cc:219:make_patterns_logic$5191, asynchronously reset by !\rst_n
Extracted 27 gates and 48 wires to a netlist network with 21 inputs and 10 outputs.

3.72.33.1. Executing ABC.

3.72.34. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$29974$abc$24340$auto$opt_dff.cc:219:make_patterns_logic$4690, asynchronously reset by !\rst_n
Extracted 52 gates and 85 wires to a netlist network with 33 inputs and 12 outputs.

3.72.34.1. Executing ABC.

3.72.35. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$30039$abc$24299$auto$opt_dff.cc:219:make_patterns_logic$4681, asynchronously reset by !\rst_n
Extracted 52 gates and 87 wires to a netlist network with 35 inputs and 11 outputs.

3.72.35.1. Executing ABC.

3.72.36. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$30082$abc$24379$auto$opt_dff.cc:219:make_patterns_logic$4699, asynchronously reset by !\rst_n
Extracted 52 gates and 86 wires to a netlist network with 34 inputs and 12 outputs.

3.72.36.1. Executing ABC.

3.72.37. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$30150$abc$24572$auto$opt_dff.cc:219:make_patterns_logic$4744, asynchronously reset by !\rst_n
Extracted 56 gates and 93 wires to a netlist network with 37 inputs and 15 outputs.

3.72.37.1. Executing ABC.

3.72.38. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$30214$abc$24498$auto$opt_dff.cc:219:make_patterns_logic$4726, asynchronously reset by !\rst_n
Extracted 52 gates and 87 wires to a netlist network with 35 inputs and 12 outputs.

3.72.38.1. Executing ABC.

3.72.39. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$30275$abc$23900$auto$opt_dff.cc:219:make_patterns_logic$5105, asynchronously reset by !\rst_n
Extracted 38 gates and 67 wires to a netlist network with 29 inputs and 23 outputs.

3.72.39.1. Executing ABC.

3.72.40. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$30327$abc$23837$auto$opt_dff.cc:219:make_patterns_logic$5082, asynchronously reset by !\rst_n
Extracted 44 gates and 75 wires to a netlist network with 31 inputs and 28 outputs.

3.72.40.1. Executing ABC.

3.72.41. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$30465$abc$24259$auto$opt_dff.cc:219:make_patterns_logic$4672, asynchronously reset by !\rst_n
Extracted 59 gates and 96 wires to a netlist network with 37 inputs and 17 outputs.

3.72.41.1. Executing ABC.

3.72.42. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$30529$abc$24044$auto$opt_dff.cc:219:make_patterns_logic$5155, asynchronously reset by !\rst_n
Extracted 63 gates and 100 wires to a netlist network with 37 inputs and 29 outputs.

3.72.42.1. Executing ABC.

3.72.43. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$30594$abc$24794$auto$opt_dff.cc:194:make_patterns_logic$4790, asynchronously reset by !\rst_n
Extracted 504 gates and 590 wires to a netlist network with 86 inputs and 26 outputs.

3.72.43.1. Executing ABC.

3.72.44. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$30990$abc$24722$auto$opt_dff.cc:219:make_patterns_logic$4780, asynchronously reset by !\rst_n
Extracted 50 gates and 83 wires to a netlist network with 33 inputs and 11 outputs.

3.72.44.1. Executing ABC.

3.72.45. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$29893$abc$23397$auto$opt_dff.cc:219:make_patterns_logic$4969, asynchronously reset by !\rst_n
Extracted 52 gates and 80 wires to a netlist network with 28 inputs and 22 outputs.

3.72.45.1. Executing ABC.

3.72.46. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$27158$abc$23756$auto$opt_dff.cc:219:make_patterns_logic$5059, asynchronously reset by !\rst_n
Extracted 52 gates and 79 wires to a netlist network with 27 inputs and 26 outputs.

3.72.46.1. Executing ABC.

3.72.47. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$31121$abc$26556$auto$opt_dff.cc:219:make_patterns_logic$4654, asynchronously reset by !\rst_n
Extracted 228 gates and 360 wires to a netlist network with 132 inputs and 21 outputs.

3.72.47.1. Executing ABC.

yosys> abc -dff

3.73. Executing ABC pass (technology mapping using ABC).

3.73.1. Summary of detected clock domains:
  47 cells in clk=\clk, en=$abc$35439$abc$27158$abc$23756$auto$opt_dff.cc:219:make_patterns_logic$5059, arst=!\rst_n, srst={ }
  100 cells in clk=\clk, en=$abc$31180$abc$26640$abc$24966$auto$opt_dff.cc:219:make_patterns_logic$4795, arst=!\rst_n, srst={ }
  54 cells in clk=\clk, en=$abc$31285$abc$26751$abc$24647$auto$opt_dff.cc:219:make_patterns_logic$4762, arst=!\rst_n, srst={ }
  148 cells in clk=\clk, en=$abc$31348$abc$26891$abc$22127$auto$opt_dff.cc:219:make_patterns_logic$5207, arst=!\rst_n, srst={ }
  47 cells in clk=\clk, en=$abc$31500$abc$27043$abc$23576$auto$opt_dff.cc:219:make_patterns_logic$5017, arst=!\rst_n, srst={ }
  53 cells in clk=\clk, en=$abc$31553$abc$31057$abc$24537$auto$opt_dff.cc:219:make_patterns_logic$4735, arst=!\rst_n, srst={ }
  55 cells in clk=\clk, en=$abc$31615$abc$27095$abc$24458$auto$opt_dff.cc:219:make_patterns_logic$4717, arst=!\rst_n, srst={ }
  829 cells in clk=\clk, en=$abc$31685$abc$27208$abc$21765$auto$simplemap.cc:251:simplemap_eqne$10448[3], arst=!\rst_n, srst={ }
  62 cells in clk=\clk, en=$abc$32518$abc$28062$abc$24684$auto$opt_dff.cc:219:make_patterns_logic$4771, arst=!\rst_n, srst={ }
  22 cells in clk=\clk, en=$abc$32593$abc$26863$abc$25087$auto$opt_dff.cc:219:make_patterns_logic$4616, arst=!\rst_n, srst={ }
  51 cells in clk=\clk, en=$abc$32621$abc$28105$abc$24418$auto$opt_dff.cc:219:make_patterns_logic$4708, arst=!\rst_n, srst={ }
  46 cells in clk=\clk, en=$abc$32681$abc$26811$abc$22903$auto$opt_dff.cc:219:make_patterns_logic$4821, arst=!\rst_n, srst={ }
  36 cells in clk=\clk, en=$abc$32730$abc$26594$abc$21717$auto$opt_dff.cc:219:make_patterns_logic$4611, arst=!\rst_n, srst={ }
  68 cells in clk=\clk, en=$abc$32775$abc$28166$abc$25116$auto$opt_dff.cc:219:make_patterns_logic$4623, arst=!\rst_n, srst={ }
  51 cells in clk=\clk, en=$abc$32854$abc$28278$abc$23978$auto$opt_dff.cc:219:make_patterns_logic$5130, arst=!\rst_n, srst={ }
  48 cells in clk=\clk, en=$abc$32908$abc$28426$abc$24610$auto$opt_dff.cc:219:make_patterns_logic$4753, arst=!\rst_n, srst={ }
  63 cells in clk=\clk, en=$abc$32964$abc$28463$abc$21765$cavlc_read_levels.level_abs_refresh, arst=!\rst_n, srst={ }
  56 cells in clk=\clk, en=$abc$33028$abc$29059$abc$21765$flatten\cavlc_read_levels.$verific$n231$765, arst=!\rst_n, srst={ }
  176 cells in clk=\clk, en=$abc$33085$abc$28699$abc$21765$flatten\cavlc_read_levels.$verific$n474$782, arst=!\rst_n, srst={ }
  48 cells in clk=\clk, en=$abc$33263$abc$28860$abc$23651$auto$opt_dff.cc:219:make_patterns_logic$5038, arst=!\rst_n, srst={ }
  18 cells in clk=\clk, en=$abc$33313$abc$28909$abc$24762$auto$opt_dff.cc:219:make_patterns_logic$4787, arst=!\rst_n, srst={ }
  56 cells in clk=\clk, en=$abc$33344$abc$28940$abc$23490$auto$opt_dff.cc:219:make_patterns_logic$4994, arst=!\rst_n, srst={ }
  51 cells in clk=\clk, en=$abc$33398$abc$28994$abc$24216$auto$opt_dff.cc:219:make_patterns_logic$4663, arst=!\rst_n, srst={ }
  247 cells in clk=\clk, en=$abc$33459$abc$29059$abc$21765$auto$opt_dff.cc:219:make_patterns_logic$5196, arst=!\rst_n, srst={ }
  35 cells in clk=\clk, en=$abc$33721$abc$29389$abc$24139$auto$opt_dff.cc:219:make_patterns_logic$5178, arst=!\rst_n, srst={ }
  84 cells in clk=\clk, en=$abc$33773$abc$29434$abc$25220$auto$opt_dff.cc:219:make_patterns_logic$4632, arst=!\rst_n, srst={ }
  42 cells in clk=\clk, en=$abc$33872$abc$29534$abc$23242$auto$opt_dff.cc:219:make_patterns_logic$4921, arst=!\rst_n, srst={ }
  44 cells in clk=\clk, en=$abc$33924$abc$29585$abc$23320$auto$opt_dff.cc:219:make_patterns_logic$4944, arst=!\rst_n, srst={ }
  43 cells in clk=\clk, en=$abc$33976$abc$29641$abc$23000$auto$opt_dff.cc:219:make_patterns_logic$4844, arst=!\rst_n, srst={ }
  54 cells in clk=\clk, en=$abc$34031$abc$29695$abc$23175$auto$opt_dff.cc:219:make_patterns_logic$4898, arst=!\rst_n, srst={ }
  90 cells in clk=\clk, en=$abc$34087$abc$28528$abc$25330$auto$opt_dff.cc:219:make_patterns_logic$4643, arst=!\rst_n, srst={ }
  55 cells in clk=\clk, en=$abc$34196$abc$29836$abc$23089$auto$opt_dff.cc:219:make_patterns_logic$4871, arst=!\rst_n, srst={ }
  28 cells in clk=\clk, en=$abc$34255$abc$29948$abc$24189$auto$opt_dff.cc:219:make_patterns_logic$5191, arst=!\rst_n, srst={ }
  51 cells in clk=\clk, en=$abc$34284$abc$29974$abc$24340$auto$opt_dff.cc:219:make_patterns_logic$4690, arst=!\rst_n, srst={ }
  51 cells in clk=\clk, en=$abc$34345$abc$30039$abc$24299$auto$opt_dff.cc:219:make_patterns_logic$4681, arst=!\rst_n, srst={ }
  57 cells in clk=\clk, en=$abc$34407$abc$30082$abc$24379$auto$opt_dff.cc:219:make_patterns_logic$4699, arst=!\rst_n, srst={ }
  52 cells in clk=\clk, en=$abc$34467$abc$30150$abc$24572$auto$opt_dff.cc:219:make_patterns_logic$4744, arst=!\rst_n, srst={ }
  53 cells in clk=\clk, en=$abc$34531$abc$30214$abc$24498$auto$opt_dff.cc:219:make_patterns_logic$4726, arst=!\rst_n, srst={ }
  48 cells in clk=\clk, en=$abc$34592$abc$30275$abc$23900$auto$opt_dff.cc:219:make_patterns_logic$5105, arst=!\rst_n, srst={ }
  42 cells in clk=\clk, en=$abc$34643$abc$30327$abc$23837$auto$opt_dff.cc:219:make_patterns_logic$5082, arst=!\rst_n, srst={ }
  57 cells in clk=\clk, en=$abc$34699$abc$30465$abc$24259$auto$opt_dff.cc:219:make_patterns_logic$4672, arst=!\rst_n, srst={ }
  498 cells in clk=\clk, en=$abc$34831$abc$30594$abc$24794$auto$opt_dff.cc:194:make_patterns_logic$4790, arst=!\rst_n, srst={ }
  50 cells in clk=\clk, en=$abc$35325$abc$30990$abc$24722$auto$opt_dff.cc:219:make_patterns_logic$4780, arst=!\rst_n, srst={ }
  54 cells in clk=\clk, en=$abc$35385$abc$29893$abc$23397$auto$opt_dff.cc:219:make_patterns_logic$4969, arst=!\rst_n, srst={ }
  67 cells in clk=\clk, en=$abc$34767$abc$30529$abc$24044$auto$opt_dff.cc:219:make_patterns_logic$5155, arst=!\rst_n, srst={ }
  226 cells in clk=\clk, en=$abc$35493$abc$31121$abc$26556$auto$opt_dff.cc:219:make_patterns_logic$4654, arst=!\rst_n, srst={ }

3.73.2. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$35439$abc$27158$abc$23756$auto$opt_dff.cc:219:make_patterns_logic$5059, asynchronously reset by !\rst_n
Extracted 47 gates and 71 wires to a netlist network with 24 inputs and 22 outputs.

3.73.2.1. Executing ABC.

3.73.3. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$31180$abc$26640$abc$24966$auto$opt_dff.cc:219:make_patterns_logic$4795, asynchronously reset by !\rst_n
Extracted 100 gates and 152 wires to a netlist network with 52 inputs and 30 outputs.

3.73.3.1. Executing ABC.

3.73.4. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$31285$abc$26751$abc$24647$auto$opt_dff.cc:219:make_patterns_logic$4762, asynchronously reset by !\rst_n
Extracted 54 gates and 91 wires to a netlist network with 37 inputs and 14 outputs.

3.73.4.1. Executing ABC.

3.73.5. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$31348$abc$26891$abc$22127$auto$opt_dff.cc:219:make_patterns_logic$5207, asynchronously reset by !\rst_n
Extracted 148 gates and 211 wires to a netlist network with 63 inputs and 67 outputs.

3.73.5.1. Executing ABC.

3.73.6. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$31500$abc$27043$abc$23576$auto$opt_dff.cc:219:make_patterns_logic$5017, asynchronously reset by !\rst_n
Extracted 47 gates and 82 wires to a netlist network with 35 inputs and 23 outputs.

3.73.6.1. Executing ABC.

3.73.7. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$31553$abc$31057$abc$24537$auto$opt_dff.cc:219:make_patterns_logic$4735, asynchronously reset by !\rst_n
Extracted 53 gates and 88 wires to a netlist network with 35 inputs and 14 outputs.

3.73.7.1. Executing ABC.

3.73.8. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$31615$abc$27095$abc$24458$auto$opt_dff.cc:219:make_patterns_logic$4717, asynchronously reset by !\rst_n
Extracted 55 gates and 92 wires to a netlist network with 37 inputs and 16 outputs.

3.73.8.1. Executing ABC.

3.73.9. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$31685$abc$27208$abc$21765$auto$simplemap.cc:251:simplemap_eqne$10448[3], asynchronously reset by !\rst_n
Extracted 829 gates and 1070 wires to a netlist network with 241 inputs and 126 outputs.

3.73.9.1. Executing ABC.

3.73.10. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$32518$abc$28062$abc$24684$auto$opt_dff.cc:219:make_patterns_logic$4771, asynchronously reset by !\rst_n
Extracted 62 gates and 103 wires to a netlist network with 41 inputs and 20 outputs.

3.73.10.1. Executing ABC.

3.73.11. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$32593$abc$26863$abc$25087$auto$opt_dff.cc:219:make_patterns_logic$4616, asynchronously reset by !\rst_n
Extracted 22 gates and 32 wires to a netlist network with 10 inputs and 12 outputs.

3.73.11.1. Executing ABC.

3.73.12. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$32621$abc$28105$abc$24418$auto$opt_dff.cc:219:make_patterns_logic$4708, asynchronously reset by !\rst_n
Extracted 51 gates and 85 wires to a netlist network with 34 inputs and 14 outputs.

3.73.12.1. Executing ABC.

3.73.13. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$32681$abc$26811$abc$22903$auto$opt_dff.cc:219:make_patterns_logic$4821, asynchronously reset by !\rst_n
Extracted 46 gates and 77 wires to a netlist network with 31 inputs and 21 outputs.

3.73.13.1. Executing ABC.

3.73.14. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$32730$abc$26594$abc$21717$auto$opt_dff.cc:219:make_patterns_logic$4611, asynchronously reset by !\rst_n
Extracted 36 gates and 47 wires to a netlist network with 11 inputs and 20 outputs.

3.73.14.1. Executing ABC.

3.73.15. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$32775$abc$28166$abc$25116$auto$opt_dff.cc:219:make_patterns_logic$4623, asynchronously reset by !\rst_n
Extracted 68 gates and 82 wires to a netlist network with 14 inputs and 51 outputs.

3.73.15.1. Executing ABC.

3.73.16. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$32854$abc$28278$abc$23978$auto$opt_dff.cc:219:make_patterns_logic$5130, asynchronously reset by !\rst_n
Extracted 51 gates and 79 wires to a netlist network with 28 inputs and 22 outputs.

3.73.16.1. Executing ABC.

3.73.17. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$32908$abc$28426$abc$24610$auto$opt_dff.cc:219:make_patterns_logic$4753, asynchronously reset by !\rst_n
Extracted 48 gates and 78 wires to a netlist network with 30 inputs and 12 outputs.

3.73.17.1. Executing ABC.

3.73.18. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$32964$abc$28463$abc$21765$cavlc_read_levels.level_abs_refresh, asynchronously reset by !\rst_n
Extracted 63 gates and 83 wires to a netlist network with 20 inputs and 24 outputs.

3.73.18.1. Executing ABC.

3.73.19. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$33028$abc$29059$abc$21765$flatten\cavlc_read_levels.$verific$n231$765, asynchronously reset by !\rst_n
Extracted 56 gates and 76 wires to a netlist network with 20 inputs and 25 outputs.

3.73.19.1. Executing ABC.

3.73.20. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$33085$abc$28699$abc$21765$flatten\cavlc_read_levels.$verific$n474$782, asynchronously reset by !\rst_n
Extracted 176 gates and 217 wires to a netlist network with 41 inputs and 20 outputs.

3.73.20.1. Executing ABC.

3.73.21. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$33263$abc$28860$abc$23651$auto$opt_dff.cc:219:make_patterns_logic$5038, asynchronously reset by !\rst_n
Extracted 48 gates and 74 wires to a netlist network with 26 inputs and 23 outputs.

3.73.21.1. Executing ABC.

3.73.22. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$33313$abc$28909$abc$24762$auto$opt_dff.cc:219:make_patterns_logic$4787, asynchronously reset by !\rst_n
Extracted 18 gates and 30 wires to a netlist network with 12 inputs and 12 outputs.

3.73.22.1. Executing ABC.

3.73.23. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$33344$abc$28940$abc$23490$auto$opt_dff.cc:219:make_patterns_logic$4994, asynchronously reset by !\rst_n
Extracted 56 gates and 85 wires to a netlist network with 29 inputs and 28 outputs.

3.73.23.1. Executing ABC.

3.73.24. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$33398$abc$28994$abc$24216$auto$opt_dff.cc:219:make_patterns_logic$4663, asynchronously reset by !\rst_n
Extracted 51 gates and 85 wires to a netlist network with 34 inputs and 12 outputs.

3.73.24.1. Executing ABC.

3.73.25. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$33459$abc$29059$abc$21765$auto$opt_dff.cc:219:make_patterns_logic$5196, asynchronously reset by !\rst_n
Extracted 247 gates and 366 wires to a netlist network with 119 inputs and 71 outputs.

3.73.25.1. Executing ABC.

3.73.26. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$33721$abc$29389$abc$24139$auto$opt_dff.cc:219:make_patterns_logic$5178, asynchronously reset by !\rst_n
Extracted 35 gates and 62 wires to a netlist network with 27 inputs and 19 outputs.

3.73.26.1. Executing ABC.

3.73.27. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$33773$abc$29434$abc$25220$auto$opt_dff.cc:219:make_patterns_logic$4632, asynchronously reset by !\rst_n
Extracted 84 gates and 103 wires to a netlist network with 19 inputs and 60 outputs.

3.73.27.1. Executing ABC.

3.73.28. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$33872$abc$29534$abc$23242$auto$opt_dff.cc:219:make_patterns_logic$4921, asynchronously reset by !\rst_n
Extracted 42 gates and 72 wires to a netlist network with 30 inputs and 22 outputs.

3.73.28.1. Executing ABC.

3.73.29. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$33924$abc$29585$abc$23320$auto$opt_dff.cc:219:make_patterns_logic$4944, asynchronously reset by !\rst_n
Extracted 44 gates and 75 wires to a netlist network with 31 inputs and 22 outputs.

3.73.29.1. Executing ABC.

3.73.30. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$33976$abc$29641$abc$23000$auto$opt_dff.cc:219:make_patterns_logic$4844, asynchronously reset by !\rst_n
Extracted 43 gates and 72 wires to a netlist network with 29 inputs and 22 outputs.

3.73.30.1. Executing ABC.

3.73.31. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$34031$abc$29695$abc$23175$auto$opt_dff.cc:219:make_patterns_logic$4898, asynchronously reset by !\rst_n
Extracted 54 gates and 85 wires to a netlist network with 31 inputs and 23 outputs.

3.73.31.1. Executing ABC.

3.73.32. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$34087$abc$28528$abc$25330$auto$opt_dff.cc:219:make_patterns_logic$4643, asynchronously reset by !\rst_n
Extracted 90 gates and 111 wires to a netlist network with 21 inputs and 66 outputs.

3.73.32.1. Executing ABC.

3.73.33. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$34196$abc$29836$abc$23089$auto$opt_dff.cc:219:make_patterns_logic$4871, asynchronously reset by !\rst_n
Extracted 55 gates and 85 wires to a netlist network with 30 inputs and 26 outputs.

3.73.33.1. Executing ABC.

3.73.34. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$34255$abc$29948$abc$24189$auto$opt_dff.cc:219:make_patterns_logic$5191, asynchronously reset by !\rst_n
Extracted 28 gates and 50 wires to a netlist network with 22 inputs and 12 outputs.

3.73.34.1. Executing ABC.

3.73.35. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$34284$abc$29974$abc$24340$auto$opt_dff.cc:219:make_patterns_logic$4690, asynchronously reset by !\rst_n
Extracted 51 gates and 84 wires to a netlist network with 33 inputs and 12 outputs.

3.73.35.1. Executing ABC.

3.73.36. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$34345$abc$30039$abc$24299$auto$opt_dff.cc:219:make_patterns_logic$4681, asynchronously reset by !\rst_n
Extracted 51 gates and 84 wires to a netlist network with 33 inputs and 11 outputs.

3.73.36.1. Executing ABC.

3.73.37. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$34407$abc$30082$abc$24379$auto$opt_dff.cc:219:make_patterns_logic$4699, asynchronously reset by !\rst_n
Extracted 57 gates and 94 wires to a netlist network with 37 inputs and 17 outputs.

3.73.37.1. Executing ABC.

3.73.38. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$34467$abc$30150$abc$24572$auto$opt_dff.cc:219:make_patterns_logic$4744, asynchronously reset by !\rst_n
Extracted 52 gates and 85 wires to a netlist network with 33 inputs and 13 outputs.

3.73.38.1. Executing ABC.

3.73.39. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$34531$abc$30214$abc$24498$auto$opt_dff.cc:219:make_patterns_logic$4726, asynchronously reset by !\rst_n
Extracted 53 gates and 90 wires to a netlist network with 37 inputs and 13 outputs.

3.73.39.1. Executing ABC.

3.73.40. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$34592$abc$30275$abc$23900$auto$opt_dff.cc:219:make_patterns_logic$5105, asynchronously reset by !\rst_n
Extracted 48 gates and 82 wires to a netlist network with 34 inputs and 24 outputs.

3.73.40.1. Executing ABC.

3.73.41. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$34643$abc$30327$abc$23837$auto$opt_dff.cc:219:make_patterns_logic$5082, asynchronously reset by !\rst_n
Extracted 42 gates and 71 wires to a netlist network with 29 inputs and 22 outputs.

3.73.41.1. Executing ABC.

3.73.42. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$34699$abc$30465$abc$24259$auto$opt_dff.cc:219:make_patterns_logic$4672, asynchronously reset by !\rst_n
Extracted 57 gates and 94 wires to a netlist network with 37 inputs and 18 outputs.

3.73.42.1. Executing ABC.

3.73.43. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$34831$abc$30594$abc$24794$auto$opt_dff.cc:194:make_patterns_logic$4790, asynchronously reset by !\rst_n
Extracted 498 gates and 583 wires to a netlist network with 85 inputs and 27 outputs.

3.73.43.1. Executing ABC.

3.73.44. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$35325$abc$30990$abc$24722$auto$opt_dff.cc:219:make_patterns_logic$4780, asynchronously reset by !\rst_n
Extracted 50 gates and 84 wires to a netlist network with 34 inputs and 11 outputs.

3.73.44.1. Executing ABC.

3.73.45. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$35385$abc$29893$abc$23397$auto$opt_dff.cc:219:make_patterns_logic$4969, asynchronously reset by !\rst_n
Extracted 54 gates and 83 wires to a netlist network with 29 inputs and 25 outputs.

3.73.45.1. Executing ABC.

3.73.46. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$34767$abc$30529$abc$24044$auto$opt_dff.cc:219:make_patterns_logic$5155, asynchronously reset by !\rst_n
Extracted 67 gates and 107 wires to a netlist network with 40 inputs and 28 outputs.

3.73.46.1. Executing ABC.

3.73.47. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$35493$abc$31121$abc$26556$auto$opt_dff.cc:219:make_patterns_logic$4654, asynchronously reset by !\rst_n
Extracted 226 gates and 359 wires to a netlist network with 133 inputs and 19 outputs.

3.73.47.1. Executing ABC.

yosys> opt_ffinv

3.74. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt -sat

3.75. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.75.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.
<suppressed ~18 debug messages>

yosys> opt_merge -nomux

3.75.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
<suppressed ~318 debug messages>
Removed a total of 106 cells.

yosys> opt_muxtree

3.75.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.75.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
Performed a total of 0 changes.

yosys> opt_merge

3.75.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.75.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.75.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..
Removed 0 unused cells and 23850 unused wires.
<suppressed ~63 debug messages>

yosys> opt_expr

3.75.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

3.75.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.75.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.75.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
Performed a total of 0 changes.

yosys> opt_merge

3.75.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.75.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.75.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..

yosys> opt_expr

3.75.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

3.75.16. Finished OPT passes. (There is nothing left to do.)

yosys> bmuxmap

3.76. Executing BMUXMAP pass.

yosys> demuxmap

3.77. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> abc -script /home/users/temp_dir/yosys_5Yauri/abc_tmp_1.scr

3.78. Executing ABC pass (technology mapping using ABC).

3.78.1. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Extracted 3710 gates and 3984 wires to a netlist network with 274 inputs and 309 outputs.

3.78.1.1. Executing ABC.
DE:   #PIs = 274  #Luts =  1010  Max Lvl =  16  Avg Lvl =   6.13  [   0.35 sec. at Pass 0]
DE:   #PIs = 274  #Luts =   812  Max Lvl =  13  Avg Lvl =   5.33  [  12.02 sec. at Pass 1]
DE:   #PIs = 274  #Luts =   802  Max Lvl =  13  Avg Lvl =   5.28  [   2.07 sec. at Pass 2]
DE:   #PIs = 274  #Luts =   784  Max Lvl =  14  Avg Lvl =   5.37  [   6.37 sec. at Pass 3]
DE:   #PIs = 274  #Luts =   769  Max Lvl =  12  Avg Lvl =   5.06  [   2.96 sec. at Pass 4]
DE:   #PIs = 274  #Luts =   762  Max Lvl =  13  Avg Lvl =   5.40  [   5.45 sec. at Pass 5]
DE:   #PIs = 274  #Luts =   755  Max Lvl =  12  Avg Lvl =   5.19  [   2.72 sec. at Pass 6]
DE:   #PIs = 274  #Luts =   755  Max Lvl =  12  Avg Lvl =   5.19  [   5.76 sec. at Pass 7]
DE:   #PIs = 274  #Luts =   750  Max Lvl =  13  Avg Lvl =   5.35  [   2.84 sec. at Pass 8]
DE:   #PIs = 274  #Luts =   750  Max Lvl =  13  Avg Lvl =   5.35  [   5.76 sec. at Pass 9]
DE:   #PIs = 274  #Luts =   750  Max Lvl =  13  Avg Lvl =   5.35  [   3.09 sec. at Pass 10]
DE:   #PIs = 274  #Luts =   748  Max Lvl =  15  Avg Lvl =   5.08  [   5.04 sec. at Pass 11]
DE:   #PIs = 274  #Luts =   745  Max Lvl =  13  Avg Lvl =   5.09  [   3.09 sec. at Pass 12]
DE:   #PIs = 274  #Luts =   737  Max Lvl =  14  Avg Lvl =   5.10  [   6.03 sec. at Pass 13]
DE:   #PIs = 274  #Luts =   737  Max Lvl =  14  Avg Lvl =   5.10  [   2.60 sec. at Pass 14]
DE:   #PIs = 274  #Luts =   737  Max Lvl =  14  Avg Lvl =   5.10  [   5.19 sec. at Pass 15]
DE:   #PIs = 274  #Luts =   737  Max Lvl =  14  Avg Lvl =   5.10  [   2.65 sec. at Pass 16]
DE:   #PIs = 274  #Luts =   737  Max Lvl =  14  Avg Lvl =   5.10  [   0.95 sec. at Pass 17]

yosys> opt_expr

3.79. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

yosys> opt_merge -nomux

3.80. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.81. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.82. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
Performed a total of 0 changes.

yosys> opt_merge

3.83. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_share

3.84. Executing OPT_SHARE pass.

yosys> opt_dff

3.85. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.86. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..
Removed 0 unused cells and 3913 unused wires.
<suppressed ~14 debug messages>

yosys> opt_expr

3.87. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.
MAX OPT ITERATION = 1

yosys> opt_ffinv

3.88. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> stat

3.89. Printing statistics.

=== cavlc ===

   Number of wires:               1071
   Number of wire bits:           1715
   Number of public wires:         132
   Number of public wire bits:     776
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1128
     $_DFFE_PN0P_                  391
     $lut                          737


yosys> shregmap -minlen 8 -maxlen 20

3.90. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.91. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.92. Printing statistics.

=== cavlc ===

   Number of wires:               1071
   Number of wire bits:           1715
   Number of public wires:         132
   Number of public wire bits:     776
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1128
     $_DFFE_PN0P_                  391
     $lut                          737


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.93. Executing TECHMAP pass (map to technology primitives).

3.93.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.93.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.93.3. Continuing TECHMAP pass.
Using template \$_DFFE_PN0P_ for cells of type $_DFFE_PN0P_.
Using extmapper simplemap for cells of type $lut.
No more expansions possible.
<suppressed ~1264 debug messages>

yosys> opt_expr -mux_undef

3.94. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.
<suppressed ~19995 debug messages>

yosys> simplemap

3.95. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.96. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

yosys> opt_merge

3.97. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
<suppressed ~10020 debug messages>
Removed a total of 3340 cells.

yosys> opt_dff -nodffe -nosdff

3.98. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.99. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..
Removed 0 unused cells and 3490 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.100. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.100.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.
<suppressed ~603 debug messages>

yosys> opt_merge -nomux

3.100.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

yosys> opt_muxtree

3.100.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.100.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
Performed a total of 0 changes.

yosys> opt_merge

3.100.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.100.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.100.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..
Removed 0 unused cells and 103 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.100.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

3.100.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.100.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.100.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
Performed a total of 0 changes.

yosys> opt_merge

3.100.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.100.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.100.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..

yosys> opt_expr

3.100.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

3.100.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /home/users/temp_dir/yosys_5Yauri/abc_tmp_2.scr

3.101. Executing ABC pass (technology mapping using ABC).

3.101.1. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Extracted 3553 gates and 3829 wires to a netlist network with 274 inputs and 309 outputs.

3.101.1.1. Executing ABC.
DE:   #PIs = 274  #Luts =   743  Max Lvl =  13  Avg Lvl =   5.07  [   0.64 sec. at Pass 0]
DE:   #PIs = 274  #Luts =   743  Max Lvl =  13  Avg Lvl =   5.07  [  13.27 sec. at Pass 1]
DE:   #PIs = 274  #Luts =   743  Max Lvl =  13  Avg Lvl =   5.07  [   2.50 sec. at Pass 2]
DE:   #PIs = 274  #Luts =   741  Max Lvl =  14  Avg Lvl =   5.09  [   6.86 sec. at Pass 3]
DE:   #PIs = 274  #Luts =   740  Max Lvl =  14  Avg Lvl =   5.13  [   3.54 sec. at Pass 4]
DE:   #PIs = 274  #Luts =   738  Max Lvl =  14  Avg Lvl =   5.16  [   6.94 sec. at Pass 5]
DE:   #PIs = 274  #Luts =   738  Max Lvl =  14  Avg Lvl =   5.16  [   3.23 sec. at Pass 6]
DE:   #PIs = 274  #Luts =   738  Max Lvl =  14  Avg Lvl =   5.16  [   6.98 sec. at Pass 7]
DE:   #PIs = 274  #Luts =   738  Max Lvl =  12  Avg Lvl =   5.03  [   3.09 sec. at Pass 8]
DE:   #PIs = 274  #Luts =   737  Max Lvl =  12  Avg Lvl =   5.00  [   5.74 sec. at Pass 9]
DE:   #PIs = 274  #Luts =   736  Max Lvl =  11  Avg Lvl =   4.98  [   2.94 sec. at Pass 10]
DE:   #PIs = 274  #Luts =   736  Max Lvl =  11  Avg Lvl =   4.98  [   5.47 sec. at Pass 11]
DE:   #PIs = 274  #Luts =   733  Max Lvl =  11  Avg Lvl =   4.99  [   2.33 sec. at Pass 12]
DE:   #PIs = 274  #Luts =   732  Max Lvl =  13  Avg Lvl =   5.25  [   6.64 sec. at Pass 13]
DE:   #PIs = 274  #Luts =   727  Max Lvl =  14  Avg Lvl =   5.06  [   2.85 sec. at Pass 14]
DE:   #PIs = 274  #Luts =   725  Max Lvl =  13  Avg Lvl =   5.06  [   5.74 sec. at Pass 15]
DE:   #PIs = 274  #Luts =   722  Max Lvl =  12  Avg Lvl =   5.04  [   2.88 sec. at Pass 16]
DE:   #PIs = 274  #Luts =   722  Max Lvl =  12  Avg Lvl =   5.04  [   3.83 sec. at Pass 17]
DE:   #PIs = 274  #Luts =   722  Max Lvl =  12  Avg Lvl =   5.04  [   2.63 sec. at Pass 18]
DE:   #PIs = 274  #Luts =   722  Max Lvl =  12  Avg Lvl =   5.04  [   4.80 sec. at Pass 19]
DE:   #PIs = 274  #Luts =   721  Max Lvl =  14  Avg Lvl =   5.09  [   0.93 sec. at Pass 20]

yosys> opt_expr

3.102. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

yosys> opt_merge -nomux

3.103. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.104. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.105. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
Performed a total of 0 changes.

yosys> opt_merge

3.106. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_share

3.107. Executing OPT_SHARE pass.

yosys> opt_dff

3.108. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.109. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..
Removed 0 unused cells and 2889 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.110. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.
MAX OPT ITERATION = 1

yosys> hierarchy -check

3.111. Executing HIERARCHY pass (managing design hierarchy).

3.111.1. Analyzing design hierarchy..
Top module:  \cavlc

3.111.2. Analyzing design hierarchy..
Top module:  \cavlc
Removed 0 unused modules.

yosys> stat

3.112. Printing statistics.

=== cavlc ===

   Number of wires:               1055
   Number of wire bits:           1699
   Number of public wires:         132
   Number of public wire bits:     776
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1112
     $lut                          721
     dffsre                        391


yosys> opt_clean -purge

3.113. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..
Removed 0 unused cells and 93 unused wires.
<suppressed ~93 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.114. Executing Verilog backend.
Dumping module `\cavlc'.

Warnings: 73 unique messages, 74 total
End of script. Logfile hash: f701bb74b8, CPU: user 35.88s system 2.46s, MEM: 79.89 MB peak
Yosys 0.18+10 (git sha1 7a7a25778, gcc 9.1.0 -fPIC -Os)
Time spent: 97% 6x abc (977 sec), 0% 53x opt_expr (8 sec), ...
real 274.13
user 922.33
sys 85.29
