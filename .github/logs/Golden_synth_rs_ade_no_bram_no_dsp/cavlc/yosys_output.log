
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.47
 Yosys 0.18+10 (git sha1 8217e4c48, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Apr22_SW_Release, released at Thu Apr 28 20:08:21 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k defines.vh cavlc.v cavlc_fsm.v cavlc_len_gen.v cavlc_read_levels.v cavlc_read_run_befores.v cavlc_read_total_coeffs.v cavlc_read_total_zeros.v

yosys> verific -vlog2k defines.vh cavlc.v cavlc_fsm.v cavlc_len_gen.v cavlc_read_levels.v cavlc_read_run_befores.v cavlc_read_total_coeffs.v cavlc_read_total_zeros.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Apr22_SW_Release, released at Thu Apr 28 20:08:21 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'defines.vh'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'cavlc.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'cavlc_fsm.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'cavlc_len_gen.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'cavlc_read_levels.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'cavlc_read_run_befores.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'cavlc_read_total_coeffs.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'cavlc_read_total_zeros.v'

yosys> synth_rs -top cavlc -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.57

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\RS_DSP2_MULT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_sim'.
Generating RTLIL representation for module `\dsp_t1_20x18x64'.
Generating RTLIL representation for module `\dsp_t1_10x9x32'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top cavlc

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] cavlc.v:41: compiling module 'cavlc'
VERIFIC-INFO [VERI-1018] cavlc_read_total_coeffs.v:43: compiling module 'cavlc_read_total_coeffs'
VERIFIC-INFO [VERI-1018] cavlc_read_levels.v:44: compiling module 'cavlc_read_levels'
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:155: expression size 32 truncated to fit in target size 4
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:212: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:226: expression size 10 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:229: expression size 31 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:259: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:261: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:263: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:266: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:268: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:270: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:273: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:275: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:277: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:280: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:282: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:284: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:287: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:289: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:291: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:294: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:296: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:298: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:301: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:303: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:305: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:308: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:310: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:312: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:315: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:317: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:319: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:322: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:324: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:326: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:329: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:331: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:333: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:336: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:338: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:340: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:343: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:345: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:347: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:350: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:352: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:354: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:357: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:359: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_levels.v:361: expression size 32 truncated to fit in target size 9
VERIFIC-INFO [VERI-1018] cavlc_read_total_zeros.v:41: compiling module 'cavlc_read_total_zeros'
VERIFIC-WARNING [VERI-1209] cavlc_read_total_zeros.v:92: expression size 16 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_total_zeros.v:93: expression size 16 truncated to fit in target size 6
VERIFIC-WARNING [VERI-1209] cavlc_read_total_zeros.v:96: expression size 16 truncated to fit in target size 3
VERIFIC-WARNING [VERI-1209] cavlc_read_total_zeros.v:98: expression size 16 truncated to fit in target size 6
VERIFIC-WARNING [VERI-1209] cavlc_read_total_zeros.v:101: expression size 16 truncated to fit in target size 3
VERIFIC-WARNING [VERI-1209] cavlc_read_total_zeros.v:102: expression size 16 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_total_zeros.v:106: expression size 16 truncated to fit in target size 3
VERIFIC-WARNING [VERI-1209] cavlc_read_total_zeros.v:107: expression size 16 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] cavlc_read_total_zeros.v:108: expression size 16 truncated to fit in target size 6
VERIFIC-WARNING [VERI-1209] cavlc_read_total_zeros.v:320: expression size 32 truncated to fit in target size 4
VERIFIC-WARNING [VERI-1209] cavlc_read_total_zeros.v:321: expression size 32 truncated to fit in target size 4
VERIFIC-WARNING [VERI-1209] cavlc_read_total_zeros.v:688: expression size 32 truncated to fit in target size 3
VERIFIC-WARNING [VERI-1209] cavlc_read_total_zeros.v:689: expression size 32 truncated to fit in target size 4
VERIFIC-INFO [VERI-1018] cavlc_read_run_befores.v:41: compiling module 'cavlc_read_run_befores'
VERIFIC-WARNING [VERI-1209] cavlc_read_run_befores.v:196: expression size 32 truncated to fit in target size 4
VERIFIC-WARNING [VERI-1209] cavlc_read_run_befores.v:201: expression size 32 truncated to fit in target size 4
VERIFIC-WARNING [VERI-1209] cavlc_read_run_befores.v:242: expression size 32 truncated to fit in target size 4
VERIFIC-WARNING [VERI-1209] cavlc_read_run_befores.v:255: expression size 32 truncated to fit in target size 4
VERIFIC-WARNING [VERI-1209] cavlc_read_run_befores.v:255: expression size 32 truncated to fit in target size 4
VERIFIC-INFO [VERI-1018] cavlc_len_gen.v:41: compiling module 'cavlc_len_gen'
VERIFIC-WARNING [VERI-1174] cavlc_len_gen.v:70: synthesis - simulation differences may occur when using parallel_case directive
VERIFIC-WARNING [VERI-1209] cavlc_len_gen.v:79: expression size 32 truncated to fit in target size 5
VERIFIC-INFO [VERI-1018] cavlc_fsm.v:41: compiling module 'cavlc_fsm'
VERIFIC-WARNING [VERI-1209] cavlc_fsm.v:106: expression size 32 truncated to fit in target size 4
VERIFIC-WARNING [VERI-1209] cavlc_fsm.v:135: expression size 32 truncated to fit in target size 4
VERIFIC-WARNING [VERI-1209] cavlc_fsm.v:139: expression size 32 truncated to fit in target size 4
VERIFIC-WARNING [VERI-1209] cavlc_fsm.v:144: expression size 32 truncated to fit in target size 4
VERIFIC-WARNING [VERI-1209] cavlc_fsm.v:153: expression size 32 truncated to fit in target size 4
Importing module cavlc.
Importing module cavlc_fsm.
Importing module cavlc_len_gen.
Importing module cavlc_read_levels.
Importing module cavlc_read_run_befores.
Importing module cavlc_read_total_coeffs.
Importing module cavlc_read_total_zeros.

3.3.1. Analyzing design hierarchy..
Top module:  \cavlc
Used module:     \cavlc_fsm
Used module:     \cavlc_len_gen
Used module:     \cavlc_read_run_befores
Used module:     \cavlc_read_total_zeros
Used module:     \cavlc_read_levels
Used module:     \cavlc_read_total_coeffs

3.3.2. Analyzing design hierarchy..
Top module:  \cavlc
Used module:     \cavlc_fsm
Used module:     \cavlc_len_gen
Used module:     \cavlc_read_run_befores
Used module:     \cavlc_read_total_zeros
Used module:     \cavlc_read_levels
Used module:     \cavlc_read_total_coeffs
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.4.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.4.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc_read_total_zeros.
<suppressed ~63 debug messages>
Optimizing module cavlc_read_total_coeffs.
<suppressed ~127 debug messages>
Optimizing module cavlc_read_run_befores.
<suppressed ~31 debug messages>
Optimizing module cavlc_read_levels.
<suppressed ~43 debug messages>
Optimizing module cavlc_len_gen.
Optimizing module cavlc_fsm.
<suppressed ~15 debug messages>
Optimizing module cavlc.

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).
Deleting now unused module cavlc_read_total_zeros.
Deleting now unused module cavlc_read_total_coeffs.
Deleting now unused module cavlc_read_run_befores.
Deleting now unused module cavlc_read_levels.
Deleting now unused module cavlc_len_gen.
Deleting now unused module cavlc_fsm.
<suppressed ~6 debug messages>

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..
Removed 4 unused cells and 1296 unused wires.
<suppressed ~87 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module cavlc...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $flatten\cavlc_read_levels.$verific$mux_134$cavlc_read_levels.v:244$1092: \cavlc_read_levels.level -> { 1'0 \cavlc_read_levels.level [7:0] }
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\cavlc_read_total_zeros.$verific$mux_590$cavlc_read_total_zeros.v:712$3697.
Removed 1 multiplexer ports.
<suppressed ~110 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
    New ctrl vector for $pmux cell $flatten\cavlc_fsm.$verific$select_78$cavlc_fsm.v:156$734: { $flatten\cavlc_fsm.$verific$n328$618 $flatten\cavlc_fsm.$verific$n329$619 $flatten\cavlc_fsm.$verific$n332$622 $flatten\cavlc_fsm.$verific$n333$623 $flatten\cavlc_fsm.$verific$n334$624 $auto$opt_reduce.cc:134:opt_pmux$3705 }
    New ctrl vector for $pmux cell $flatten\cavlc_len_gen.$verific$select_18$cavlc_len_gen.v:80$757: { \cavlc_fsm.state [1] $auto$opt_reduce.cc:134:opt_pmux$3707 \cavlc_fsm.state [6] \cavlc_fsm.state [7] $flatten\cavlc_len_gen.$verific$n48$745 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_run_befores.$verific$select_121$cavlc_read_run_befores.v:259$1572: { $flatten\cavlc_read_run_befores.$verific$n400$1264 $flatten\cavlc_read_run_befores.$verific$n401$1265 $flatten\cavlc_read_run_befores.$verific$n402$1266 $flatten\cavlc_read_run_befores.$verific$n403$1267 $flatten\cavlc_read_run_befores.$verific$n404$1268 $flatten\cavlc_read_run_befores.$verific$n405$1269 $flatten\cavlc_read_run_befores.$verific$n406$1270 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_run_befores.$verific$select_122$cavlc_read_run_befores.v:259$1573: { $flatten\cavlc_read_run_befores.$verific$n400$1264 $flatten\cavlc_read_run_befores.$verific$n401$1265 $flatten\cavlc_read_run_befores.$verific$n402$1266 $flatten\cavlc_read_run_befores.$verific$n403$1267 $flatten\cavlc_read_run_befores.$verific$n404$1268 $flatten\cavlc_read_run_befores.$verific$n405$1269 $flatten\cavlc_read_run_befores.$verific$n406$1270 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_run_befores.$verific$select_236$cavlc_read_run_befores.v:348$1614: { $flatten\cavlc_read_run_befores.$verific$n1178$1278 $auto$opt_reduce.cc:134:opt_pmux$3709 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_run_befores.$verific$select_237$cavlc_read_run_befores.v:348$1615: { $flatten\cavlc_read_run_befores.$verific$n1179$1279 $auto$opt_reduce.cc:134:opt_pmux$3711 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_run_befores.$verific$select_238$cavlc_read_run_befores.v:348$1616: { $flatten\cavlc_read_run_befores.$verific$n1180$1280 $auto$opt_reduce.cc:134:opt_pmux$3713 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_run_befores.$verific$select_239$cavlc_read_run_befores.v:348$1617: { $flatten\cavlc_read_run_befores.$verific$n1181$1281 $auto$opt_reduce.cc:134:opt_pmux$3715 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_run_befores.$verific$select_240$cavlc_read_run_befores.v:348$1618: { $flatten\cavlc_read_run_befores.$verific$n1182$1282 $auto$opt_reduce.cc:134:opt_pmux$3717 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_run_befores.$verific$select_241$cavlc_read_run_befores.v:348$1619: { $flatten\cavlc_read_run_befores.$verific$n1183$1283 $auto$opt_reduce.cc:134:opt_pmux$3719 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_run_befores.$verific$select_242$cavlc_read_run_befores.v:348$1620: { $flatten\cavlc_read_run_befores.$verific$n1184$1284 $auto$opt_reduce.cc:134:opt_pmux$3721 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_run_befores.$verific$select_243$cavlc_read_run_befores.v:348$1621: { $flatten\cavlc_read_run_befores.$verific$n1185$1285 $auto$opt_reduce.cc:134:opt_pmux$3723 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_run_befores.$verific$select_244$cavlc_read_run_befores.v:348$1622: { $flatten\cavlc_read_run_befores.$verific$n1186$1286 $auto$opt_reduce.cc:134:opt_pmux$3725 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_run_befores.$verific$select_245$cavlc_read_run_befores.v:348$1623: { $flatten\cavlc_read_run_befores.$verific$n1187$1287 $auto$opt_reduce.cc:134:opt_pmux$3727 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_run_befores.$verific$select_246$cavlc_read_run_befores.v:348$1624: { $flatten\cavlc_read_run_befores.$verific$n1188$1288 $auto$opt_reduce.cc:134:opt_pmux$3729 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_run_befores.$verific$select_247$cavlc_read_run_befores.v:348$1625: { $flatten\cavlc_read_run_befores.$verific$n1189$1289 $auto$opt_reduce.cc:134:opt_pmux$3731 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_run_befores.$verific$select_248$cavlc_read_run_befores.v:348$1626: { $flatten\cavlc_read_run_befores.$verific$n1190$1290 $auto$opt_reduce.cc:134:opt_pmux$3733 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_run_befores.$verific$select_249$cavlc_read_run_befores.v:348$1627: { $flatten\cavlc_read_run_befores.$verific$n1191$1291 $auto$opt_reduce.cc:134:opt_pmux$3735 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_run_befores.$verific$select_250$cavlc_read_run_befores.v:348$1628: { $auto$opt_reduce.cc:134:opt_pmux$3737 $flatten\cavlc_read_run_befores.$verific$n1192$1292 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_total_coeffs.$verific$select_1051$cavlc_read_total_coeffs.v:1147$3102: { \cavlc_read_total_coeffs.rbsp_5 [0] $flatten\cavlc_read_total_coeffs.$verific$n4152$1943 $flatten\cavlc_read_total_coeffs.$verific$n4155$1946 $flatten\cavlc_read_total_coeffs.$verific$n4161$1952 $flatten\cavlc_read_total_coeffs.$verific$n4164$1955 $flatten\cavlc_read_total_coeffs.$verific$n4166$1957 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_total_coeffs.$verific$select_1052$cavlc_read_total_coeffs.v:1147$3103: { \cavlc_read_total_coeffs.rbsp_5 [0] $flatten\cavlc_read_total_coeffs.$verific$n4152$1943 $flatten\cavlc_read_total_coeffs.$verific$n4155$1946 $flatten\cavlc_read_total_coeffs.$verific$n4158$1949 $flatten\cavlc_read_total_coeffs.$verific$n4161$1952 $auto$opt_reduce.cc:134:opt_pmux$3739 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_total_coeffs.$verific$select_1053$cavlc_read_total_coeffs.v:1147$3104: { \cavlc_read_total_coeffs.rbsp_5 [0] $flatten\cavlc_read_total_coeffs.$verific$n4149$1940 $flatten\cavlc_read_total_coeffs.$verific$n4152$1943 $auto$opt_reduce.cc:134:opt_pmux$3743 $flatten\cavlc_read_total_coeffs.$verific$n4164$1955 $auto$opt_reduce.cc:134:opt_pmux$3741 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_total_coeffs.$verific$select_384$cavlc_read_total_coeffs.v:444$2771: { $flatten\cavlc_read_total_coeffs.$verific$n1613$1792 $flatten\cavlc_read_total_coeffs.$verific$n1616$1795 $flatten\cavlc_read_total_coeffs.$verific$n1619$1798 $flatten\cavlc_read_total_coeffs.$verific$n1622$1801 $flatten\cavlc_read_total_coeffs.$verific$n1625$1804 $flatten\cavlc_read_total_coeffs.$verific$n1628$1807 $flatten\cavlc_read_total_coeffs.$verific$n1631$1810 $flatten\cavlc_read_total_coeffs.$verific$n1634$1813 $flatten\cavlc_read_total_coeffs.$verific$n1637$1816 $flatten\cavlc_read_total_coeffs.$verific$n1640$1819 $flatten\cavlc_read_total_coeffs.$verific$n1643$1822 $flatten\cavlc_read_total_coeffs.$verific$n1646$1825 $auto$opt_reduce.cc:134:opt_pmux$3745 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_total_coeffs.$verific$select_385$cavlc_read_total_coeffs.v:444$2772: { $flatten\cavlc_read_total_coeffs.$verific$n1610$1789 $flatten\cavlc_read_total_coeffs.$verific$n1613$1792 $flatten\cavlc_read_total_coeffs.$verific$n1616$1795 $flatten\cavlc_read_total_coeffs.$verific$n1619$1798 $flatten\cavlc_read_total_coeffs.$verific$n1622$1801 $flatten\cavlc_read_total_coeffs.$verific$n1625$1804 $flatten\cavlc_read_total_coeffs.$verific$n1628$1807 $flatten\cavlc_read_total_coeffs.$verific$n1631$1810 $flatten\cavlc_read_total_coeffs.$verific$n1634$1813 $flatten\cavlc_read_total_coeffs.$verific$n1637$1816 $flatten\cavlc_read_total_coeffs.$verific$n1640$1819 $flatten\cavlc_read_total_coeffs.$verific$n1643$1822 $flatten\cavlc_read_total_coeffs.$verific$n1646$1825 $flatten\cavlc_read_total_coeffs.$verific$n1648$1827 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_total_coeffs.$verific$select_386$cavlc_read_total_coeffs.v:444$2773: { \cavlc_read_total_coeffs.rbsp_1 [0] $flatten\cavlc_read_total_coeffs.$verific$n1610$1789 $flatten\cavlc_read_total_coeffs.$verific$n1613$1792 $flatten\cavlc_read_total_coeffs.$verific$n1616$1795 $flatten\cavlc_read_total_coeffs.$verific$n1619$1798 $flatten\cavlc_read_total_coeffs.$verific$n1622$1801 $flatten\cavlc_read_total_coeffs.$verific$n1625$1804 $flatten\cavlc_read_total_coeffs.$verific$n1628$1807 $flatten\cavlc_read_total_coeffs.$verific$n1631$1810 $flatten\cavlc_read_total_coeffs.$verific$n1634$1813 $flatten\cavlc_read_total_coeffs.$verific$n1637$1816 $auto$opt_reduce.cc:134:opt_pmux$3749 $auto$opt_reduce.cc:134:opt_pmux$3747 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_total_coeffs.$verific$select_741$cavlc_read_total_coeffs.v:748$2967: { \cavlc_read_total_coeffs.rbsp_2 [0] $flatten\cavlc_read_total_coeffs.$verific$n2947$1870 $flatten\cavlc_read_total_coeffs.$verific$n2950$1873 $flatten\cavlc_read_total_coeffs.$verific$n2953$1876 $flatten\cavlc_read_total_coeffs.$verific$n2956$1879 $flatten\cavlc_read_total_coeffs.$verific$n2959$1882 $flatten\cavlc_read_total_coeffs.$verific$n2962$1885 $flatten\cavlc_read_total_coeffs.$verific$n2965$1888 $flatten\cavlc_read_total_coeffs.$verific$n2968$1891 $flatten\cavlc_read_total_coeffs.$verific$n2974$1897 $flatten\cavlc_read_total_coeffs.$verific$n2977$1900 $auto$opt_reduce.cc:134:opt_pmux$3751 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_total_coeffs.$verific$select_959$cavlc_read_total_coeffs.v:1052$3052: { \cavlc_read_total_coeffs.rbsp_3 [0] $flatten\cavlc_read_total_coeffs.$verific$n3828$1910 $flatten\cavlc_read_total_coeffs.$verific$n3831$1913 $flatten\cavlc_read_total_coeffs.$verific$n3834$1916 $flatten\cavlc_read_total_coeffs.$verific$n3837$1919 $flatten\cavlc_read_total_coeffs.$verific$n3840$1922 $flatten\cavlc_read_total_coeffs.$verific$n3843$1925 $auto$opt_reduce.cc:134:opt_pmux$3753 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_total_coeffs.$verific$select_960$cavlc_read_total_coeffs.v:1052$3053: { \cavlc_read_total_coeffs.rbsp_3 [0] $flatten\cavlc_read_total_coeffs.$verific$n3828$1910 $flatten\cavlc_read_total_coeffs.$verific$n3831$1913 $flatten\cavlc_read_total_coeffs.$verific$n3834$1916 $flatten\cavlc_read_total_coeffs.$verific$n3837$1919 $flatten\cavlc_read_total_coeffs.$verific$n3840$1922 $flatten\cavlc_read_total_coeffs.$verific$n3843$1925 $flatten\cavlc_read_total_coeffs.$verific$n3846$1928 $flatten\cavlc_read_total_coeffs.$verific$n3849$1931 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_total_coeffs.$verific$select_961$cavlc_read_total_coeffs.v:1052$3054: { \cavlc_read_total_coeffs.rbsp_3 [0] $flatten\cavlc_read_total_coeffs.$verific$n3828$1910 $flatten\cavlc_read_total_coeffs.$verific$n3831$1913 $flatten\cavlc_read_total_coeffs.$verific$n3834$1916 $flatten\cavlc_read_total_coeffs.$verific$n3837$1919 $flatten\cavlc_read_total_coeffs.$verific$n3840$1922 $flatten\cavlc_read_total_coeffs.$verific$n3843$1925 $flatten\cavlc_read_total_coeffs.$verific$n3846$1928 $auto$opt_reduce.cc:134:opt_pmux$3755 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_total_zeros.$verific$select_138$cavlc_read_total_zeros.v:217$3590: { $flatten\cavlc_read_total_zeros.$verific$n440$3154 $flatten\cavlc_read_total_zeros.$verific$n443$3157 $flatten\cavlc_read_total_zeros.$verific$n446$3160 $flatten\cavlc_read_total_zeros.$verific$n449$3163 $flatten\cavlc_read_total_zeros.$verific$n452$3166 $flatten\cavlc_read_total_zeros.$verific$n455$3169 $flatten\cavlc_read_total_zeros.$verific$n458$3172 $flatten\cavlc_read_total_zeros.$verific$n460$3174 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_total_zeros.$verific$select_139$cavlc_read_total_zeros.v:217$3591: { \cavlc_read_total_zeros.rbsp_LE3 [0] $flatten\cavlc_read_total_zeros.$verific$n440$3154 $flatten\cavlc_read_total_zeros.$verific$n443$3157 $flatten\cavlc_read_total_zeros.$verific$n446$3160 $flatten\cavlc_read_total_zeros.$verific$n449$3163 $flatten\cavlc_read_total_zeros.$verific$n452$3166 $flatten\cavlc_read_total_zeros.$verific$n455$3169 $auto$opt_reduce.cc:134:opt_pmux$3757 }
    New ctrl vector for $pmux cell $flatten\cavlc_read_total_zeros.$verific$select_230$cavlc_read_total_zeros.v:317$3616: { \cavlc_read_total_zeros.rbsp_LE3 [0] $flatten\cavlc_read_total_zeros.$verific$n440$3154 $flatten\cavlc_read_total_zeros.$verific$n443$3157 $auto$opt_reduce.cc:134:opt_pmux$3759 $flatten\cavlc_read_total_zeros.$verific$n451$3165 }
  Optimizing cells in module \cavlc.
Performed a total of 32 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $flatten\cavlc_read_total_coeffs.$verific$rbsp_5_reg$cavlc_read_total_coeffs.v:149$2550 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_total_coeffs.$verific$rbsp_4_reg$cavlc_read_total_coeffs.v:149$2549 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_total_coeffs.$verific$rbsp_3_reg$cavlc_read_total_coeffs.v:149$2548 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_total_coeffs.$verific$rbsp_2_reg$cavlc_read_total_coeffs.v:149$2547 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_total_coeffs.$verific$rbsp_1_reg$cavlc_read_total_coeffs.v:149$2546 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_total_coeffs.$verific$TrailingOnes_reg$cavlc_read_total_coeffs.v:1193$3136 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_total_coeffs.$verific$TotalCoeff_reg$cavlc_read_total_coeffs.v:1193$3137 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_run_befores.$verific$coeff_9_reg$cavlc_read_run_befores.v:366$1732 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_run_befores.$verific$coeff_8_reg$cavlc_read_run_befores.v:366$1731 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_run_befores.$verific$coeff_7_reg$cavlc_read_run_befores.v:366$1730 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_run_befores.$verific$coeff_6_reg$cavlc_read_run_befores.v:366$1729 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_run_befores.$verific$coeff_5_reg$cavlc_read_run_befores.v:366$1728 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_run_befores.$verific$coeff_4_reg$cavlc_read_run_befores.v:366$1727 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_run_befores.$verific$coeff_3_reg$cavlc_read_run_befores.v:366$1726 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_run_befores.$verific$coeff_2_reg$cavlc_read_run_befores.v:366$1725 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_run_befores.$verific$coeff_1_reg$cavlc_read_run_befores.v:366$1724 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_run_befores.$verific$coeff_15_reg$cavlc_read_run_befores.v:366$1738 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_run_befores.$verific$coeff_14_reg$cavlc_read_run_befores.v:366$1737 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_run_befores.$verific$coeff_13_reg$cavlc_read_run_befores.v:366$1736 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_run_befores.$verific$coeff_12_reg$cavlc_read_run_befores.v:366$1735 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_run_befores.$verific$coeff_11_reg$cavlc_read_run_befores.v:366$1734 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_run_befores.$verific$coeff_10_reg$cavlc_read_run_befores.v:366$1733 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_run_befores.$verific$coeff_0_reg$cavlc_read_run_befores.v:366$1723 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_run_befores.$verific$ZeroLeft_reg$cavlc_read_run_befores.v:286$1587 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$suffixLength_reg$cavlc_read_levels.v:187$1054 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_prefix_reg$cavlc_read_levels.v:165$1026 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_code_tmp_reg$cavlc_read_levels.v:213$1077 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_abs_reg$cavlc_read_levels.v:245$1095 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_9_reg$cavlc_read_levels.v:382$1210 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_8_reg$cavlc_read_levels.v:382$1209 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_7_reg$cavlc_read_levels.v:382$1208 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_6_reg$cavlc_read_levels.v:382$1207 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_5_reg$cavlc_read_levels.v:382$1206 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_4_reg$cavlc_read_levels.v:382$1205 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_3_reg$cavlc_read_levels.v:382$1204 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_2_reg$cavlc_read_levels.v:382$1203 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_1_reg$cavlc_read_levels.v:382$1202 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_15_reg$cavlc_read_levels.v:382$1216 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_14_reg$cavlc_read_levels.v:382$1215 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_13_reg$cavlc_read_levels.v:382$1214 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_12_reg$cavlc_read_levels.v:382$1213 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_11_reg$cavlc_read_levels.v:382$1212 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_10_reg$cavlc_read_levels.v:382$1211 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_read_levels.$verific$level_0_reg$cavlc_read_levels.v:382$1201 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_fsm.$verific$valid_reg$cavlc_fsm.v:156$740 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_fsm.$verific$state_reg$cavlc_fsm.v:156$738 ($aldff) from module cavlc.
Changing const-value async load to async reset on $flatten\cavlc_fsm.$verific$i_reg$cavlc_fsm.v:156$739 ($aldff) from module cavlc.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..
Removed 0 unused cells and 5 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~110 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

3.11.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking cavlc.cavlc_fsm.state as FSM state register:
    Register is connected to module port.
    Users of register don't seem to benefit from recoding.
Not marking cavlc.cavlc_read_levels.level_prefix as FSM state register:
    Users of register don't seem to benefit from recoding.

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~110 debug messages>

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\cavlc_read_total_coeffs.$verific$rbsp_5_reg$cavlc_read_total_coeffs.v:149$2550 ($adff) from module cavlc (D = { \rbsp [0] \rbsp [1] \rbsp [2] \rbsp [3] \rbsp [4] \rbsp [5] \rbsp [6] \rbsp [7] }, Q = { \cavlc_read_total_coeffs.rbsp_5 [0] \cavlc_read_total_coeffs.rbsp_5 [1] \cavlc_read_total_coeffs.rbsp_5 [2] \cavlc_read_total_coeffs.rbsp_5 [3] \cavlc_read_total_coeffs.rbsp_5 [4] \cavlc_read_total_coeffs.rbsp_5 [5] \cavlc_read_total_coeffs.rbsp_5 [6] \cavlc_read_total_coeffs.rbsp_5 [7] }).
Adding EN signal on $flatten\cavlc_read_total_coeffs.$verific$rbsp_4_reg$cavlc_read_total_coeffs.v:149$2549 ($adff) from module cavlc (D = { \rbsp [0] \rbsp [1] \rbsp [2] \rbsp [3] \rbsp [4] \rbsp [5] }, Q = { \cavlc_read_total_coeffs.rbsp_4 [0] \cavlc_read_total_coeffs.rbsp_4 [1] \cavlc_read_total_coeffs.rbsp_4 [2] \cavlc_read_total_coeffs.rbsp_4 [3] \cavlc_read_total_coeffs.rbsp_4 [4] \cavlc_read_total_coeffs.rbsp_4 [5] }).
Adding EN signal on $flatten\cavlc_read_total_coeffs.$verific$rbsp_3_reg$cavlc_read_total_coeffs.v:149$2548 ($adff) from module cavlc (D = { \rbsp [0] \rbsp [1] \rbsp [2] \rbsp [3] \rbsp [4] \rbsp [5] \rbsp [6] \rbsp [7] \rbsp [8] \rbsp [9] }, Q = { \cavlc_read_total_coeffs.rbsp_3 [0] \cavlc_read_total_coeffs.rbsp_3 [1] \cavlc_read_total_coeffs.rbsp_3 [2] \cavlc_read_total_coeffs.rbsp_3 [3] \cavlc_read_total_coeffs.rbsp_3 [4] \cavlc_read_total_coeffs.rbsp_3 [5] \cavlc_read_total_coeffs.rbsp_3 [6] \cavlc_read_total_coeffs.rbsp_3 [7] \cavlc_read_total_coeffs.rbsp_3 [8] \cavlc_read_total_coeffs.rbsp_3 [9] }).
Adding EN signal on $flatten\cavlc_read_total_coeffs.$verific$rbsp_2_reg$cavlc_read_total_coeffs.v:149$2547 ($adff) from module cavlc (D = { \rbsp [0] \rbsp [1] \rbsp [2] \rbsp [3] \rbsp [4] \rbsp [5] \rbsp [6] \rbsp [7] \rbsp [8] \rbsp [9] \rbsp [10] \rbsp [11] \rbsp [12] \rbsp [13] }, Q = { \cavlc_read_total_coeffs.rbsp_2 [0] \cavlc_read_total_coeffs.rbsp_2 [1] \cavlc_read_total_coeffs.rbsp_2 [2] \cavlc_read_total_coeffs.rbsp_2 [3] \cavlc_read_total_coeffs.rbsp_2 [4] \cavlc_read_total_coeffs.rbsp_2 [5] \cavlc_read_total_coeffs.rbsp_2 [6] \cavlc_read_total_coeffs.rbsp_2 [7] \cavlc_read_total_coeffs.rbsp_2 [8] \cavlc_read_total_coeffs.rbsp_2 [9] \cavlc_read_total_coeffs.rbsp_2 [10] \cavlc_read_total_coeffs.rbsp_2 [11] \cavlc_read_total_coeffs.rbsp_2 [12] \cavlc_read_total_coeffs.rbsp_2 [13] }).
Adding EN signal on $flatten\cavlc_read_total_coeffs.$verific$rbsp_1_reg$cavlc_read_total_coeffs.v:149$2546 ($adff) from module cavlc (D = { \rbsp [0] \rbsp [1] \rbsp [2] \rbsp [3] \rbsp [4] \rbsp [5] \rbsp [6] \rbsp [7] \rbsp [8] \rbsp [9] \rbsp [10] \rbsp [11] \rbsp [12] \rbsp [13] \rbsp [14] \rbsp [15] }, Q = { \cavlc_read_total_coeffs.rbsp_1 [0] \cavlc_read_total_coeffs.rbsp_1 [1] \cavlc_read_total_coeffs.rbsp_1 [2] \cavlc_read_total_coeffs.rbsp_1 [3] \cavlc_read_total_coeffs.rbsp_1 [4] \cavlc_read_total_coeffs.rbsp_1 [5] \cavlc_read_total_coeffs.rbsp_1 [6] \cavlc_read_total_coeffs.rbsp_1 [7] \cavlc_read_total_coeffs.rbsp_1 [8] \cavlc_read_total_coeffs.rbsp_1 [9] \cavlc_read_total_coeffs.rbsp_1 [10] \cavlc_read_total_coeffs.rbsp_1 [11] \cavlc_read_total_coeffs.rbsp_1 [12] \cavlc_read_total_coeffs.rbsp_1 [13] \cavlc_read_total_coeffs.rbsp_1 [14] \cavlc_read_total_coeffs.rbsp_1 [15] }).
Adding EN signal on $flatten\cavlc_read_total_coeffs.$verific$TrailingOnes_reg$cavlc_read_total_coeffs.v:1193$3136 ($adff) from module cavlc (D = \cavlc_fsm.TrailingOnes_comb, Q = \cavlc_read_total_coeffs.TrailingOnes).
Adding EN signal on $flatten\cavlc_read_total_coeffs.$verific$TotalCoeff_reg$cavlc_read_total_coeffs.v:1193$3137 ($adff) from module cavlc (D = \cavlc_fsm.TotalCoeff_comb, Q = \cavlc_read_total_coeffs.TotalCoeff).
Adding EN signal on $flatten\cavlc_read_run_befores.$verific$coeff_9_reg$cavlc_read_run_befores.v:366$1732 ($adff) from module cavlc (D = $flatten\cavlc_read_run_befores.$verific$n2079$1494, Q = \cavlc_read_run_befores.coeff_9).
Adding EN signal on $flatten\cavlc_read_run_befores.$verific$coeff_8_reg$cavlc_read_run_befores.v:366$1731 ($adff) from module cavlc (D = $flatten\cavlc_read_run_befores.$verific$n2069$1493, Q = \cavlc_read_run_befores.coeff_8).
Adding EN signal on $flatten\cavlc_read_run_befores.$verific$coeff_7_reg$cavlc_read_run_befores.v:366$1730 ($adff) from module cavlc (D = $flatten\cavlc_read_run_befores.$verific$n2059$1492, Q = \cavlc_read_run_befores.coeff_7).
Adding EN signal on $flatten\cavlc_read_run_befores.$verific$coeff_6_reg$cavlc_read_run_befores.v:366$1729 ($adff) from module cavlc (D = $flatten\cavlc_read_run_befores.$verific$n2049$1491, Q = \cavlc_read_run_befores.coeff_6).
Adding EN signal on $flatten\cavlc_read_run_befores.$verific$coeff_5_reg$cavlc_read_run_befores.v:366$1728 ($adff) from module cavlc (D = $flatten\cavlc_read_run_befores.$verific$n2039$1490, Q = \cavlc_read_run_befores.coeff_5).
Adding EN signal on $flatten\cavlc_read_run_befores.$verific$coeff_4_reg$cavlc_read_run_befores.v:366$1727 ($adff) from module cavlc (D = $flatten\cavlc_read_run_befores.$verific$n2029$1489, Q = \cavlc_read_run_befores.coeff_4).
Adding EN signal on $flatten\cavlc_read_run_befores.$verific$coeff_3_reg$cavlc_read_run_befores.v:366$1726 ($adff) from module cavlc (D = $flatten\cavlc_read_run_befores.$verific$n2019$1488, Q = \cavlc_read_run_befores.coeff_3).
Adding EN signal on $flatten\cavlc_read_run_befores.$verific$coeff_2_reg$cavlc_read_run_befores.v:366$1725 ($adff) from module cavlc (D = $flatten\cavlc_read_run_befores.$verific$n2009$1487, Q = \cavlc_read_run_befores.coeff_2).
Adding EN signal on $flatten\cavlc_read_run_befores.$verific$coeff_1_reg$cavlc_read_run_befores.v:366$1724 ($adff) from module cavlc (D = $flatten\cavlc_read_run_befores.$verific$n1999$1486, Q = \cavlc_read_run_befores.coeff_1).
Adding EN signal on $flatten\cavlc_read_run_befores.$verific$coeff_15_reg$cavlc_read_run_befores.v:366$1738 ($adff) from module cavlc (D = $flatten\cavlc_read_run_befores.$verific$n2139$1500, Q = \cavlc_read_run_befores.coeff_15).
Adding EN signal on $flatten\cavlc_read_run_befores.$verific$coeff_14_reg$cavlc_read_run_befores.v:366$1737 ($adff) from module cavlc (D = $flatten\cavlc_read_run_befores.$verific$n2129$1499, Q = \cavlc_read_run_befores.coeff_14).
Adding EN signal on $flatten\cavlc_read_run_befores.$verific$coeff_13_reg$cavlc_read_run_befores.v:366$1736 ($adff) from module cavlc (D = $flatten\cavlc_read_run_befores.$verific$n2119$1498, Q = \cavlc_read_run_befores.coeff_13).
Adding EN signal on $flatten\cavlc_read_run_befores.$verific$coeff_12_reg$cavlc_read_run_befores.v:366$1735 ($adff) from module cavlc (D = $flatten\cavlc_read_run_befores.$verific$n2109$1497, Q = \cavlc_read_run_befores.coeff_12).
Adding EN signal on $flatten\cavlc_read_run_befores.$verific$coeff_11_reg$cavlc_read_run_befores.v:366$1734 ($adff) from module cavlc (D = $flatten\cavlc_read_run_befores.$verific$n2099$1496, Q = \cavlc_read_run_befores.coeff_11).
Adding EN signal on $flatten\cavlc_read_run_befores.$verific$coeff_10_reg$cavlc_read_run_befores.v:366$1733 ($adff) from module cavlc (D = $flatten\cavlc_read_run_befores.$verific$n2089$1495, Q = \cavlc_read_run_befores.coeff_10).
Adding EN signal on $flatten\cavlc_read_run_befores.$verific$coeff_0_reg$cavlc_read_run_befores.v:366$1723 ($adff) from module cavlc (D = $flatten\cavlc_read_run_befores.$verific$n1989$1485, Q = \cavlc_read_run_befores.coeff_0).
Adding EN signal on $flatten\cavlc_read_run_befores.$verific$ZeroLeft_reg$cavlc_read_run_befores.v:286$1587 ($adff) from module cavlc (D = $flatten\cavlc_read_run_befores.$verific$n494$1386, Q = \cavlc_read_run_befores.ZeroLeft).
Adding EN signal on $flatten\cavlc_read_levels.$verific$suffixLength_reg$cavlc_read_levels.v:187$1054 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n363$844, Q = \cavlc_read_levels.suffixLength).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_prefix_reg$cavlc_read_levels.v:165$1026 ($adff) from module cavlc (D = \cavlc_read_levels.level_prefix_comb, Q = \cavlc_read_levels.level_prefix).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_code_tmp_reg$cavlc_read_levels.v:213$1077 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n551$857 [8:0], Q = \cavlc_read_levels.level_code_tmp).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_abs_reg$cavlc_read_levels.v:245$1095 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n800$868, Q = \cavlc_read_levels.level_abs).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_9_reg$cavlc_read_levels.v:382$1210 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3944$961, Q = \cavlc_read_levels.level_9).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_8_reg$cavlc_read_levels.v:382$1209 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3954$962, Q = \cavlc_read_levels.level_8).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_7_reg$cavlc_read_levels.v:382$1208 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3964$963, Q = \cavlc_read_levels.level_7).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_6_reg$cavlc_read_levels.v:382$1207 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3974$964, Q = \cavlc_read_levels.level_6).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_5_reg$cavlc_read_levels.v:382$1206 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3984$965, Q = \cavlc_read_levels.level_5).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_4_reg$cavlc_read_levels.v:382$1205 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3994$966, Q = \cavlc_read_levels.level_4).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_3_reg$cavlc_read_levels.v:382$1204 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4004$967, Q = \cavlc_read_levels.level_3).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_2_reg$cavlc_read_levels.v:382$1203 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4014$968, Q = \cavlc_read_levels.level_2).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_1_reg$cavlc_read_levels.v:382$1202 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4024$969, Q = \cavlc_read_levels.level_1).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_15_reg$cavlc_read_levels.v:382$1216 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3884$955, Q = \cavlc_read_levels.level_15).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_14_reg$cavlc_read_levels.v:382$1215 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3894$956, Q = \cavlc_read_levels.level_14).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_13_reg$cavlc_read_levels.v:382$1214 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3904$957, Q = \cavlc_read_levels.level_13).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_12_reg$cavlc_read_levels.v:382$1213 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3914$958, Q = \cavlc_read_levels.level_12).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_11_reg$cavlc_read_levels.v:382$1212 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3924$959, Q = \cavlc_read_levels.level_11).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_10_reg$cavlc_read_levels.v:382$1211 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3934$960, Q = \cavlc_read_levels.level_10).
Adding EN signal on $flatten\cavlc_read_levels.$verific$level_0_reg$cavlc_read_levels.v:382$1201 ($adff) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4034$970, Q = \cavlc_read_levels.level_0).
Adding EN signal on $flatten\cavlc_fsm.$verific$valid_reg$cavlc_fsm.v:156$740 ($adff) from module cavlc (D = $flatten\cavlc_fsm.$verific$n346$627, Q = \cavlc_fsm.valid).
Adding EN signal on $flatten\cavlc_fsm.$verific$state_reg$cavlc_fsm.v:156$738 ($adff) from module cavlc (D = $flatten\cavlc_fsm.$verific$n336$667, Q = \cavlc_fsm.state).
Adding EN signal on $flatten\cavlc_fsm.$verific$i_reg$cavlc_fsm.v:156$739 ($adff) from module cavlc (D = $flatten\cavlc_fsm.$verific$n347$668, Q = \cavlc_fsm.i).

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..
Removed 28 unused cells and 28 unused wires.
<suppressed ~29 debug messages>

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.
<suppressed ~38 debug messages>

3.13.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~101 debug messages>

yosys> opt_reduce

3.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
Performed a total of 0 changes.

yosys> opt_merge

3.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
<suppressed ~108 debug messages>
Removed a total of 36 cells.

yosys> opt_dff -sat

3.13.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..
Removed 0 unused cells and 37 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

3.13.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~101 debug messages>

yosys> opt_reduce

3.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
Performed a total of 0 changes.

yosys> opt_merge

3.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..

yosys> opt_expr

3.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

3.13.23. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 4 bits (of 5) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_963$cavlc_read_total_coeffs.v:1060$3056 ($eq).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_902$cavlc_read_total_coeffs.v:1013$3018 ($mux).
Removed top 4 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_886$cavlc_read_total_coeffs.v:1013$3002 ($mux).
Removed top 1 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_878$cavlc_read_total_coeffs.v:1004$2999 ($eq).
Removed top 1 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_874$cavlc_read_total_coeffs.v:999$2998 ($eq).
Removed top 2 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_866$cavlc_read_total_coeffs.v:989$2996 ($eq).
Removed top 1 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$select_959$cavlc_read_total_coeffs.v:1052$3052 ($pmux).
Removed top 3 bits (of 4) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$add_967$cavlc_read_total_coeffs.v:1066$3058 ($add).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_686$cavlc_read_total_coeffs.v:741$2927 ($mux).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_670$cavlc_read_total_coeffs.v:722$2921 ($mux).
Removed top 4 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_666$cavlc_read_total_coeffs.v:722$2917 ($mux).
Removed top 4 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_993$cavlc_read_total_coeffs.v:1107$3069 ($mux).
Removed top 1 bits (of 2) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_648$cavlc_read_total_coeffs.v:708$2907 ($eq).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_624$cavlc_read_total_coeffs.v:690$2892 ($mux).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_623$cavlc_read_total_coeffs.v:690$2891 ($mux).
Removed top 4 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_995$cavlc_read_total_coeffs.v:1107$3071 ($mux).
Removed top 2 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_614$cavlc_read_total_coeffs.v:679$2887 ($eq).
Removed top 1 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_611$cavlc_read_total_coeffs.v:675$2886 ($eq).
Removed top 1 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_608$cavlc_read_total_coeffs.v:671$2885 ($eq).
Removed top 2 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_585$cavlc_read_total_coeffs.v:655$2869 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_584$cavlc_read_total_coeffs.v:655$2868 ($mux).
Removed top 2 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_579$cavlc_read_total_coeffs.v:648$2867 ($eq).
Removed top 1 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_576$cavlc_read_total_coeffs.v:644$2866 ($eq).
Removed top 1 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_564$cavlc_read_total_coeffs.v:628$2862 ($eq).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_548$cavlc_read_total_coeffs.v:620$2849 ($mux).
Removed top 4 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_547$cavlc_read_total_coeffs.v:620$2848 ($mux).
Removed top 2 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_538$cavlc_read_total_coeffs.v:609$2845 ($eq).
Removed top 1 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_535$cavlc_read_total_coeffs.v:605$2844 ($eq).
Removed top 1 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_526$cavlc_read_total_coeffs.v:593$2841 ($eq).
Removed top 1 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_517$cavlc_read_total_coeffs.v:585$2835 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_516$cavlc_read_total_coeffs.v:585$2834 ($mux).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_997$cavlc_read_total_coeffs.v:1107$3073 ($mux).
Removed top 1 bits (of 2) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_511$cavlc_read_total_coeffs.v:578$2832 ($eq).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_501$cavlc_read_total_coeffs.v:566$2827 ($mux).
Removed top 1 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_481$cavlc_read_total_coeffs.v:547$2816 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_480$cavlc_read_total_coeffs.v:547$2815 ($mux).
Removed top 1 bits (of 2) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_475$cavlc_read_total_coeffs.v:540$2814 ($eq).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_463$cavlc_read_total_coeffs.v:528$2809 ($mux).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_446$cavlc_read_total_coeffs.v:509$2804 ($mux).
Removed top 2 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_1005$cavlc_read_total_coeffs.v:1118$3076 ($mux).
Removed top 2 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_436$cavlc_read_total_coeffs.v:509$2794 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_435$cavlc_read_total_coeffs.v:509$2793 ($mux).
Removed top 1 bits (of 2) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_428$cavlc_read_total_coeffs.v:500$2790 ($eq).
Removed top 2 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_411$cavlc_read_total_coeffs.v:477$2784 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_409$cavlc_read_total_coeffs.v:477$2782 ($mux).
Removed top 2 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_407$cavlc_read_total_coeffs.v:477$2780 ($mux).
Removed top 4 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_394$cavlc_read_total_coeffs.v:460$2777 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_393$cavlc_read_total_coeffs.v:460$2776 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_297$cavlc_read_total_coeffs.v:418$2707 ($mux).
Removed top 2 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_287$cavlc_read_total_coeffs.v:407$2701 ($eq).
Removed top 1 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_284$cavlc_read_total_coeffs.v:403$2699 ($eq).
Removed top 1 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_275$cavlc_read_total_coeffs.v:391$2695 ($eq).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_259$cavlc_read_total_coeffs.v:383$2682 ($mux).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_258$cavlc_read_total_coeffs.v:383$2681 ($mux).
Removed top 2 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_249$cavlc_read_total_coeffs.v:372$2676 ($eq).
Removed top 1 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_243$cavlc_read_total_coeffs.v:364$2674 ($eq).
Removed top 1 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_240$cavlc_read_total_coeffs.v:360$2672 ($eq).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_221$cavlc_read_total_coeffs.v:348$2658 ($mux).
Removed top 2 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_220$cavlc_read_total_coeffs.v:348$2657 ($mux).
Removed top 2 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$select_1052$cavlc_read_total_coeffs.v:1147$3103 ($pmux).
Removed top 1 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$select_1053$cavlc_read_total_coeffs.v:1147$3104 ($pmux).
Removed top 2 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_211$cavlc_read_total_coeffs.v:337$2652 ($eq).
Removed top 1 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_205$cavlc_read_total_coeffs.v:329$2650 ($eq).
Removed top 1 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_202$cavlc_read_total_coeffs.v:325$2648 ($eq).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_182$cavlc_read_total_coeffs.v:313$2632 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_181$cavlc_read_total_coeffs.v:313$2631 ($mux).
Removed top 2 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_176$cavlc_read_total_coeffs.v:306$2628 ($eq).
Removed top 1 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_170$cavlc_read_total_coeffs.v:298$2625 ($eq).
Removed top 1 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_161$cavlc_read_total_coeffs.v:286$2620 ($eq).
Removed top 1 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_152$cavlc_read_total_coeffs.v:278$2614 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_151$cavlc_read_total_coeffs.v:278$2613 ($mux).
Removed top 1 bits (of 2) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_146$cavlc_read_total_coeffs.v:271$2611 ($eq).
Removed top 1 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_134$cavlc_read_total_coeffs.v:259$2604 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_133$cavlc_read_total_coeffs.v:259$2603 ($mux).
Removed top 1 bits (of 2) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_128$cavlc_read_total_coeffs.v:252$2601 ($eq).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_116$cavlc_read_total_coeffs.v:240$2594 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_115$cavlc_read_total_coeffs.v:240$2593 ($mux).
Removed top 1 bits (of 2) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_110$cavlc_read_total_coeffs.v:233$2591 ($eq).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_98$cavlc_read_total_coeffs.v:221$2584 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_97$cavlc_read_total_coeffs.v:221$2583 ($mux).
Removed top 1 bits (of 2) from port B of cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$equal_92$cavlc_read_total_coeffs.v:214$2581 ($eq).
Removed top 4 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_84$cavlc_read_total_coeffs.v:202$2575 ($mux).
Removed top 2 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_80$cavlc_read_total_coeffs.v:202$2571 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_79$cavlc_read_total_coeffs.v:202$2570 ($mux).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_67$cavlc_read_total_coeffs.v:185$2565 ($mux).
Removed top 3 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_63$cavlc_read_total_coeffs.v:185$2561 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_62$cavlc_read_total_coeffs.v:185$2560 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_coeffs.$verific$mux_920$cavlc_read_total_coeffs.v:1045$3025 ($mux).
Removed top 23 bits (of 32) from mux cell cavlc.$flatten\cavlc_read_levels.$verific$mux_171$cavlc_read_levels.v:270$1106 ($mux).
Removed top 23 bits (of 32) from mux cell cavlc.$flatten\cavlc_read_levels.$verific$mux_162$cavlc_read_levels.v:263$1100 ($mux).
Removed top 23 bits (of 32) from mux cell cavlc.$flatten\cavlc_read_levels.$verific$mux_158$cavlc_read_levels.v:259$1097 ($mux).
Removed top 31 bits (of 32) from port B of cell cavlc.$flatten\cavlc_read_levels.$verific$sub_124$cavlc_read_levels.v:229$1085 ($sub).
Removed top 22 bits (of 32) from port Y of cell cavlc.$flatten\cavlc_read_levels.$verific$sub_124$cavlc_read_levels.v:229$1085 ($sub).
Removed top 22 bits (of 32) from port A of cell cavlc.$flatten\cavlc_read_levels.$verific$sub_124$cavlc_read_levels.v:229$1085 ($sub).
Removed top 30 bits (of 32) from port B of cell cavlc.$flatten\cavlc_read_levels.$verific$sub_123$cavlc_read_levels.v:229$1084 ($sub).
Removed top 22 bits (of 32) from port Y of cell cavlc.$flatten\cavlc_read_levels.$verific$sub_123$cavlc_read_levels.v:229$1084 ($sub).
Removed top 22 bits (of 32) from port A of cell cavlc.$flatten\cavlc_read_levels.$verific$sub_123$cavlc_read_levels.v:229$1084 ($sub).
Removed top 23 bits (of 32) from port A of cell cavlc.$flatten\cavlc_read_levels.$verific$unary_minus_122$cavlc_read_levels.v:229$1083 ($neg).
Removed top 22 bits (of 32) from port Y of cell cavlc.$flatten\cavlc_read_levels.$verific$unary_minus_122$cavlc_read_levels.v:229$1083 ($neg).
Removed top 8 bits (of 9) from port B of cell cavlc.$flatten\cavlc_read_levels.$verific$add_120$cavlc_read_levels.v:226$1082 ($add).
Removed top 7 bits (of 9) from port B of cell cavlc.$flatten\cavlc_read_levels.$verific$add_119$cavlc_read_levels.v:226$1080 ($add).
Removed top 28 bits (of 32) from port B of cell cavlc.$flatten\cavlc_read_levels.$verific$add_110$cavlc_read_levels.v:212$1073 ($add).
Removed top 23 bits (of 32) from port Y of cell cavlc.$flatten\cavlc_read_levels.$verific$add_110$cavlc_read_levels.v:212$1073 ($add).
Removed top 23 bits (of 32) from port A of cell cavlc.$flatten\cavlc_read_levels.$verific$add_110$cavlc_read_levels.v:212$1073 ($add).
Removed top 23 bits (of 32) from port B of cell cavlc.$flatten\cavlc_read_levels.$verific$add_105$cavlc_read_levels.v:211$1071 ($add).
Removed top 23 bits (of 32) from port Y of cell cavlc.$flatten\cavlc_read_levels.$verific$add_105$cavlc_read_levels.v:211$1071 ($add).
Removed top 23 bits (of 32) from port A of cell cavlc.$flatten\cavlc_read_levels.$verific$add_105$cavlc_read_levels.v:211$1071 ($add).
Removed top 28 bits (of 32) from port A of cell cavlc.$flatten\cavlc_read_levels.$verific$shift_left_104$cavlc_read_levels.v:211$1070 ($shl).
Removed top 23 bits (of 32) from port Y of cell cavlc.$flatten\cavlc_read_levels.$verific$shift_left_104$cavlc_read_levels.v:211$1070 ($shl).
Removed top 2 bits (of 3) from port A of cell cavlc.$flatten\cavlc_read_levels.$verific$LessThan_85$cavlc_read_levels.v:194$1055 ($lt).
Removed top 2 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_levels.$verific$add_76$cavlc_read_levels.v:186$1046 ($add).
Removed top 7 bits (of 9) from port A of cell cavlc.$flatten\cavlc_read_levels.$verific$shift_left_72$cavlc_read_levels.v:185$1042 ($shl).
Removed top 2 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_levels.$verific$sub_71$cavlc_read_levels.v:185$1041 ($sub).
Removed top 7 bits (of 9) from port A of cell cavlc.$flatten\cavlc_read_levels.$verific$LessThan_66$cavlc_read_levels.v:181$1038 ($lt).
Removed top 1 bits (of 5) from port A of cell cavlc.$flatten\cavlc_read_levels.$verific$LessThan_59$cavlc_read_levels.v:177$1032 ($lt).
Removed top 28 bits (of 32) from port A of cell cavlc.$flatten\cavlc_read_levels.$verific$equal_52$cavlc_read_levels.v:171$1029 ($eq).
Removed top 31 bits (of 32) from port B of cell cavlc.$flatten\cavlc_read_levels.$verific$sub_51$cavlc_read_levels.v:171$1028 ($sub).
Removed top 1 bits (of 6) from port A of cell cavlc.$flatten\cavlc_read_levels.$verific$sub_50$cavlc_read_levels.v:171$1027 ($sub).
Removed top 4 bits (of 6) from port B of cell cavlc.$flatten\cavlc_read_levels.$verific$sub_50$cavlc_read_levels.v:171$1027 ($sub).
Removed top 3 bits (of 4) from port B of cell cavlc.$flatten\cavlc_read_levels.$verific$add_389$cavlc_read_levels.v:388$1218 ($add).
Removed top 1 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_levels.$verific$mux_403$cavlc_read_levels.v:396$1227 ($mux).
Removed top 1 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_levels.$verific$mux_404$cavlc_read_levels.v:396$1228 ($mux).
Removed top 1 bits (of 5) from mux cell cavlc.$flatten\cavlc_read_levels.$verific$mux_405$cavlc_read_levels.v:396$1229 ($mux).
Removed top 1 bits (of 2) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$4004 ($ne).
Removed top 1 bits (of 2) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$3936 ($ne).
Removed top 2 bits (of 4) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$3925 ($ne).
Removed top 2 bits (of 4) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$3916 ($ne).
Removed top 2 bits (of 4) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$3907 ($ne).
Removed top 2 bits (of 4) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$3898 ($ne).
Removed top 2 bits (of 4) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$3889 ($ne).
Removed top 2 bits (of 4) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$3880 ($ne).
Removed top 2 bits (of 4) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$3871 ($ne).
Removed top 2 bits (of 4) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$3862 ($ne).
Removed top 3 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_283$cavlc_read_total_zeros.v:393$3641 ($mux).
Removed top 3 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_357$cavlc_read_total_zeros.v:467$3653 ($mux).
Removed top 3 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_247$cavlc_read_total_zeros.v:351$3625 ($mux).
Removed top 3 bits (of 8) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_689$cavlc_read_total_zeros.v:505$3666 ($mux).
Removed top 1 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_471$cavlc_read_total_zeros.v:576$3667 ($mux).
Removed top 1 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_211$cavlc_read_total_zeros.v:315$3615 ($mux).
Removed top 1 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_591$cavlc_read_total_zeros.v:712$3698 ($mux).
Removed top 1 bits (of 12) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_690$cavlc_read_total_zeros.v:512$3658 ($mux).
Removed top 1 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_195$cavlc_read_total_zeros.v:289$3609 ($mux).
Removed top 3 bits (of 8) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_686$cavlc_read_total_zeros.v:595$3671 ($mux).
Removed top 2 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_161$cavlc_read_total_zeros.v:255$3600 ($mux).
Removed top 1 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_153$cavlc_read_total_zeros.v:241$3597 ($mux).
Removed top 2 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_151$cavlc_read_total_zeros.v:240$3595 ($mux).
Removed top 2 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_105$cavlc_read_total_zeros.v:211$3567 ($mux).
Removed top 1 bits (of 8) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_682$cavlc_read_total_zeros.v:610$3678 ($mux).
Removed top 1 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_101$cavlc_read_total_zeros.v:204$3565 ($mux).
Removed top 2 bits (of 3) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_359$cavlc_read_total_zeros.v:468$3654 ($mux).
Removed top 2 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_97$cavlc_read_total_zeros.v:197$3563 ($mux).
Removed top 3 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_552$cavlc_read_total_zeros.v:664$3680 ($mux).
Removed top 3 bits (of 16) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_692$cavlc_read_total_zeros.v:565$3657 ($mux).
Removed top 2 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_89$cavlc_read_total_zeros.v:183$3559 ($mux).
Removed top 1 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_85$cavlc_read_total_zeros.v:176$3557 ($mux).
Removed top 2 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_81$cavlc_read_total_zeros.v:169$3555 ($mux).
Removed top 1 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_284$cavlc_read_total_zeros.v:394$3642 ($mux).
Removed top 5 bits (of 6) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_664$cavlc_read_total_zeros.v:678$3686 ($mux).
Removed top 1 bits (of 2) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_60$cavlc_read_total_zeros.v:150$3536 ($mux).
Removed top 1 bits (of 6) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_663$cavlc_read_total_zeros.v:678$3687 ($mux).
Removed top 2 bits (of 4) from port B of cell cavlc.$flatten\cavlc_read_total_zeros.$verific$equal_45$cavlc_read_total_zeros.v:131$3531 ($eq).
Removed top 3 bits (of 8) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_628$cavlc_read_total_zeros.v:678$3688 ($mux).
Removed top 3 bits (of 4) from port B of cell cavlc.$flatten\cavlc_read_total_zeros.$verific$equal_30$cavlc_read_total_zeros.v:115$3523 ($eq).
Removed top 3 bits (of 12) from mux cell cavlc.$flatten\cavlc_read_total_zeros.$verific$mux_626$cavlc_read_total_zeros.v:685$3513 ($mux).
Removed top 2 bits (of 4) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$3853 ($ne).
Removed top 2 bits (of 4) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$3844 ($ne).
Removed top 2 bits (of 4) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$3835 ($ne).
Removed top 2 bits (of 4) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$3826 ($ne).
Removed top 2 bits (of 4) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$3817 ($ne).
Removed top 2 bits (of 4) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$3808 ($ne).
Removed top 2 bits (of 4) from port B of cell cavlc.$auto$opt_dff.cc:195:make_patterns_logic$3799 ($ne).
Removed top 1 bits (of 4) from port A of cell cavlc.$flatten\cavlc_read_run_befores.$verific$LessThan_271$cavlc_read_run_befores.v:357$1648 ($le).
Removed top 1 bits (of 4) from port A of cell cavlc.$flatten\cavlc_read_run_befores.$verific$LessThan_268$cavlc_read_run_befores.v:356$1645 ($le).
Removed top 1 bits (of 4) from port A of cell cavlc.$flatten\cavlc_read_run_befores.$verific$LessThan_265$cavlc_read_run_befores.v:355$1642 ($le).
Removed top 1 bits (of 4) from port A of cell cavlc.$flatten\cavlc_read_run_befores.$verific$LessThan_262$cavlc_read_run_befores.v:354$1639 ($le).
Removed top 2 bits (of 4) from port A of cell cavlc.$flatten\cavlc_read_run_befores.$verific$LessThan_259$cavlc_read_run_befores.v:353$1636 ($le).
Removed top 2 bits (of 4) from port A of cell cavlc.$flatten\cavlc_read_run_befores.$verific$LessThan_256$cavlc_read_run_befores.v:352$1633 ($le).
Removed top 3 bits (of 4) from port A of cell cavlc.$flatten\cavlc_read_run_befores.$verific$LessThan_253$cavlc_read_run_befores.v:351$1630 ($le).
Removed top 1 bits (of 5) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_234$cavlc_read_run_befores.v:345$1610 ($eq).
Removed top 1 bits (of 5) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_233$cavlc_read_run_befores.v:344$1609 ($eq).
Removed top 1 bits (of 5) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_232$cavlc_read_run_befores.v:343$1608 ($eq).
Removed top 1 bits (of 5) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_231$cavlc_read_run_befores.v:342$1607 ($eq).
Removed top 1 bits (of 5) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_230$cavlc_read_run_befores.v:341$1606 ($eq).
Removed top 1 bits (of 5) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_229$cavlc_read_run_befores.v:340$1605 ($eq).
Removed top 1 bits (of 5) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_228$cavlc_read_run_befores.v:339$1604 ($eq).
Removed top 2 bits (of 5) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_227$cavlc_read_run_befores.v:338$1603 ($eq).
Removed top 2 bits (of 5) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_226$cavlc_read_run_befores.v:337$1602 ($eq).
Removed top 2 bits (of 5) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_225$cavlc_read_run_befores.v:336$1601 ($eq).
Removed top 2 bits (of 5) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_224$cavlc_read_run_befores.v:335$1600 ($eq).
Removed top 3 bits (of 5) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_223$cavlc_read_run_befores.v:334$1599 ($eq).
Removed top 3 bits (of 5) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_222$cavlc_read_run_befores.v:333$1598 ($eq).
Removed top 4 bits (of 5) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_221$cavlc_read_run_befores.v:332$1597 ($eq).
Removed top 3 bits (of 4) from port A of cell cavlc.$flatten\cavlc_read_run_befores.$verific$LessThan_203$cavlc_read_run_befores.v:330$1593 ($lt).
Removed top 3 bits (of 4) from port A of cell cavlc.$flatten\cavlc_read_run_befores.$verific$LessThan_127$cavlc_read_run_befores.v:269$1576 ($lt).
Removed top 1 bits (of 4) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_119$cavlc_read_run_befores.v:223$1568 ($eq).
Removed top 1 bits (of 4) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_118$cavlc_read_run_befores.v:209$1567 ($eq).
Removed top 1 bits (of 4) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_117$cavlc_read_run_befores.v:199$1566 ($eq).
Removed top 2 bits (of 4) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_116$cavlc_read_run_befores.v:195$1565 ($eq).
Removed top 2 bits (of 4) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_115$cavlc_read_run_befores.v:182$1564 ($eq).
Removed top 3 bits (of 4) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$equal_114$cavlc_read_run_befores.v:181$1563 ($eq).
Removed top 1 bits (of 4) from port A of cell cavlc.$flatten\cavlc_read_run_befores.$verific$sub_58$cavlc_read_run_befores.v:242$1531 ($sub).
Removed top 1 bits (of 4) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$sub_58$cavlc_read_run_befores.v:242$1531 ($sub).
Removed top 3 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_run_befores.$verific$mux_56$cavlc_read_run_befores.v:238$1529 ($mux).
Removed top 3 bits (of 4) from mux cell cavlc.$flatten\cavlc_read_run_befores.$verific$mux_30$cavlc_read_run_befores.v:207$1521 ($mux).
Removed top 1 bits (of 3) from port A of cell cavlc.$flatten\cavlc_read_run_befores.$verific$sub_19$cavlc_read_run_befores.v:196$1516 ($sub).
Removed top 1 bits (of 3) from port B of cell cavlc.$flatten\cavlc_read_run_befores.$verific$sub_19$cavlc_read_run_befores.v:196$1516 ($sub).
Removed top 2 bits (of 8) from mux cell cavlc.$flatten\cavlc_read_run_befores.$verific$mux_364$cavlc_read_run_befores.v:193$1514 ($mux).
Removed top 2 bits (of 8) from mux cell cavlc.$flatten\cavlc_read_run_befores.$verific$mux_363$cavlc_read_run_befores.v:193$1507 ($mux).
Removed top 2 bits (of 8) from mux cell cavlc.$flatten\cavlc_read_run_befores.$verific$mux_372$cavlc_read_run_befores.v:193$1506 ($mux).
Removed top 1 bits (of 8) from port B of cell cavlc.$flatten\cavlc_fsm.$verific$equal_72$cavlc_fsm.v:142$726 ($eq).
Removed top 2 bits (of 8) from port B of cell cavlc.$flatten\cavlc_fsm.$verific$equal_71$cavlc_fsm.v:130$725 ($eq).
Removed top 3 bits (of 8) from port B of cell cavlc.$flatten\cavlc_fsm.$verific$equal_70$cavlc_fsm.v:127$724 ($eq).
Removed top 4 bits (of 8) from port B of cell cavlc.$flatten\cavlc_fsm.$verific$equal_69$cavlc_fsm.v:124$723 ($eq).
Removed top 5 bits (of 8) from port B of cell cavlc.$flatten\cavlc_fsm.$verific$equal_68$cavlc_fsm.v:116$722 ($eq).
Removed top 6 bits (of 8) from port B of cell cavlc.$flatten\cavlc_fsm.$verific$equal_67$cavlc_fsm.v:105$721 ($eq).
Removed top 7 bits (of 8) from port B of cell cavlc.$flatten\cavlc_fsm.$verific$equal_66$cavlc_fsm.v:96$720 ($eq).
Removed top 1 bits (of 5) from port A of cell cavlc.$flatten\cavlc_fsm.$verific$sub_46$cavlc_fsm.v:139$707 ($sub).
Removed top 4 bits (of 5) from port B of cell cavlc.$flatten\cavlc_fsm.$verific$sub_46$cavlc_fsm.v:139$707 ($sub).
Removed top 1 bits (of 5) from port Y of cell cavlc.$flatten\cavlc_fsm.$verific$sub_46$cavlc_fsm.v:139$707 ($sub).
Removed top 1 bits (of 6) from port A of cell cavlc.$flatten\cavlc_fsm.$verific$sub_43$cavlc_fsm.v:135$704 ($sub).
Removed top 5 bits (of 6) from port B of cell cavlc.$flatten\cavlc_fsm.$verific$sub_43$cavlc_fsm.v:135$704 ($sub).
Removed top 2 bits (of 6) from port Y of cell cavlc.$flatten\cavlc_fsm.$verific$sub_43$cavlc_fsm.v:135$704 ($sub).
Removed top 1 bits (of 5) from port A of cell cavlc.$flatten\cavlc_fsm.$verific$sub_43$cavlc_fsm.v:135$704 ($sub).
Removed top 1 bits (of 8) from mux cell cavlc.$flatten\cavlc_fsm.$verific$mux_33$cavlc_fsm.v:122$697 ($mux).
Removed top 2 bits (of 4) from port B of cell cavlc.$flatten\cavlc_fsm.$verific$sub_31$cavlc_fsm.v:121$695 ($sub).
Removed top 3 bits (of 5) from port A of cell cavlc.$flatten\cavlc_fsm.$verific$equal_28$cavlc_fsm.v:117$693 ($eq).
Removed top 4 bits (of 8) from mux cell cavlc.$flatten\cavlc_fsm.$verific$mux_24$cavlc_fsm.v:114$689 ($mux).
Removed top 4 bits (of 5) from port A of cell cavlc.$flatten\cavlc_fsm.$verific$LessThan_17$cavlc_fsm.v:107$684 ($lt).
Removed top 1 bits (of 2) from port A of cell cavlc.$flatten\cavlc_fsm.$verific$LessThan_16$cavlc_fsm.v:107$683 ($lt).
Removed top 1 bits (of 6) from port A of cell cavlc.$flatten\cavlc_fsm.$verific$sub_14$cavlc_fsm.v:106$680 ($sub).
Removed top 5 bits (of 6) from port B of cell cavlc.$flatten\cavlc_fsm.$verific$sub_14$cavlc_fsm.v:106$680 ($sub).
Removed top 2 bits (of 6) from port Y of cell cavlc.$flatten\cavlc_fsm.$verific$sub_14$cavlc_fsm.v:106$680 ($sub).
Removed top 1 bits (of 5) from port A of cell cavlc.$flatten\cavlc_fsm.$verific$sub_14$cavlc_fsm.v:106$680 ($sub).
Removed top 6 bits (of 8) from mux cell cavlc.$flatten\cavlc_fsm.$verific$mux_12$cavlc_fsm.v:103$678 ($mux).
Removed top 1 bits (of 8) from wire cavlc.$flatten\cavlc_fsm.$verific$n144$645.
Removed top 1 bits (of 4) from wire cavlc.$flatten\cavlc_fsm.$verific$n153$646.
Removed top 2 bits (of 6) from wire cavlc.$flatten\cavlc_fsm.$verific$n198$651.
Removed top 1 bits (of 5) from wire cavlc.$flatten\cavlc_fsm.$verific$n219$654.
Removed top 6 bits (of 8) from wire cavlc.$flatten\cavlc_fsm.$verific$n41$633.
Removed top 3 bits (of 6) from wire cavlc.$flatten\cavlc_fsm.$verific$n51$634.
Removed top 4 bits (of 8) from wire cavlc.$flatten\cavlc_fsm.$verific$n95$639.
Removed top 23 bits (of 32) from wire cavlc.$flatten\cavlc_read_levels.$verific$n1004$871.
Removed top 23 bits (of 32) from wire cavlc.$flatten\cavlc_read_levels.$verific$n1090$873.
Removed top 23 bits (of 32) from wire cavlc.$flatten\cavlc_read_levels.$verific$n1240$877.
Removed top 1 bits (of 5) from wire cavlc.$flatten\cavlc_read_levels.$verific$n4254$978.
Removed top 1 bits (of 5) from wire cavlc.$flatten\cavlc_read_levels.$verific$n4260$979.
Removed top 1 bits (of 5) from wire cavlc.$flatten\cavlc_read_levels.$verific$n4266$980.
Removed top 1 bits (of 4) from wire cavlc.$flatten\cavlc_read_run_befores.$verific$n109$1328.
Removed top 3 bits (of 4) from wire cavlc.$flatten\cavlc_read_run_befores.$verific$n124$1331.
Removed top 3 bits (of 4) from wire cavlc.$flatten\cavlc_read_run_befores.$verific$n238$1351.
Removed top 2 bits (of 4) from wire cavlc.$flatten\cavlc_read_run_befores.$verific$n56$1319.
Removed top 2 bits (of 4) from wire cavlc.$flatten\cavlc_read_run_befores.$verific$n66$1321.
Removed top 2 bits (of 4) from wire cavlc.$flatten\cavlc_read_run_befores.$verific$n71$1322.
Removed top 1 bits (of 3) from wire cavlc.$flatten\cavlc_read_run_befores.$verific$n76$1323.
Removed top 1 bits (of 2) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n1001$2072.
Removed top 3 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n1004$2073.
Removed top 2 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n1152$2095.
Removed top 1 bits (of 2) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n1158$2096.
Removed top 3 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n1300$2114.
Removed top 1 bits (of 2) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n1306$2115.
Removed top 1 bits (of 2) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n1454$2134.
Removed top 1 bits (of 2) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n1689$2164.
Removed top 4 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n1692$2165.
Removed top 2 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n1748$2171.
Removed top 1 bits (of 2) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n1760$2173.
Removed top 2 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n1769$2175.
Removed top 1 bits (of 2) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n1870$2179.
Removed top 2 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n1873$2180.
Removed top 3 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n1924$2190.
Removed top 3 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n1993$2197.
Removed top 1 bits (of 2) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n2062$2203.
Removed top 1 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n2065$2204.
Removed top 3 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n2146$2213.
Removed top 1 bits (of 2) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n2206$2217.
Removed top 1 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n2209$2218.
Removed top 4 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n2321$2227.
Removed top 1 bits (of 2) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n2327$2228.
Removed top 1 bits (of 2) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n2466$2241.
Removed top 2 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n2469$2242.
Removed top 3 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n2617$2257.
Removed top 1 bits (of 2) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n2623$2258.
Removed top 4 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n2805$2281.
Removed top 3 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n2826$2285.
Removed top 1 bits (of 2) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n2892$2290.
Removed top 4 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n3631$2410.
Removed top 3 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n3712$2426.
Removed top 1 bits (of 2) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n3794$2439.
Removed top 4 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n4000$2462.
Removed top 4 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n4009$2464.
Removed top 3 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n4018$2466.
Removed top 2 bits (of 5) from wire cavlc.$flatten\cavlc_read_total_coeffs.$verific$n4052$2471.
Removed top 3 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n1008$3334.
Removed top 1 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n1013$3335.
Removed top 3 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n1236$3372.
Removed top 2 bits (of 3) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n1246$3374.
Removed top 3 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n1356$3394.
Removed top 1 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n1375$3398.
Removed top 3 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n1522$3421.
Removed top 1 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n1568$3425.
Removed top 3 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n1614$3433.
Removed top 1 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n1665$3441.
Removed top 3 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n1818$3465.
Removed top 2 bits (of 3) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n1832$3468.
Removed top 3 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n1872$3477.
Removed top 1 bits (of 3) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n1886$3480.
Removed top 3 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n1904$3484.
Removed top 1 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n1978$3496.
Removed top 1 bits (of 2) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n223$3211.
Removed top 2 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n296$3230.
Removed top 1 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n316$3234.
Removed top 2 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n336$3238.
Removed top 2 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n376$3246.
Removed top 1 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n396$3250.
Removed top 2 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n416$3254.
Removed top 2 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n526$3265.
Removed top 1 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n531$3266.
Removed top 1 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n536$3267.
Removed top 1 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n556$3269.
Removed top 3 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n576$3271.
Removed top 1 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n690$3289.
Removed top 1 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n695$3290.
Removed top 1 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n770$3301.
Removed top 3 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n875$3315.
Removed top 1 bits (of 4) from wire cavlc.$flatten\cavlc_read_total_zeros.$verific$n880$3316.

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..
Removed 94 unused cells and 252 unused wires.
<suppressed ~95 debug messages>

yosys> alumacc

3.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module cavlc:
  creating $macc model for $flatten\cavlc_fsm.$verific$sub_14$cavlc_fsm.v:106$680 ($sub).
  creating $macc model for $flatten\cavlc_fsm.$verific$sub_31$cavlc_fsm.v:121$695 ($sub).
  creating $macc model for $flatten\cavlc_fsm.$verific$sub_43$cavlc_fsm.v:135$704 ($sub).
  creating $macc model for $flatten\cavlc_fsm.$verific$sub_46$cavlc_fsm.v:139$707 ($sub).
  creating $macc model for $flatten\cavlc_read_levels.$verific$add_105$cavlc_read_levels.v:211$1071 ($add).
  creating $macc model for $flatten\cavlc_read_levels.$verific$add_110$cavlc_read_levels.v:212$1073 ($add).
  creating $macc model for $flatten\cavlc_read_levels.$verific$add_119$cavlc_read_levels.v:226$1080 ($add).
  creating $macc model for $flatten\cavlc_read_levels.$verific$add_120$cavlc_read_levels.v:226$1082 ($add).
  creating $macc model for $flatten\cavlc_read_levels.$verific$add_389$cavlc_read_levels.v:388$1218 ($add).
  creating $macc model for $flatten\cavlc_read_levels.$verific$add_76$cavlc_read_levels.v:186$1046 ($add).
  creating $macc model for $flatten\cavlc_read_levels.$verific$sub_123$cavlc_read_levels.v:229$1084 ($sub).
  creating $macc model for $flatten\cavlc_read_levels.$verific$sub_124$cavlc_read_levels.v:229$1085 ($sub).
  creating $macc model for $flatten\cavlc_read_levels.$verific$sub_50$cavlc_read_levels.v:171$1027 ($sub).
  creating $macc model for $flatten\cavlc_read_levels.$verific$sub_51$cavlc_read_levels.v:171$1028 ($sub).
  creating $macc model for $flatten\cavlc_read_levels.$verific$sub_71$cavlc_read_levels.v:185$1041 ($sub).
  creating $macc model for $flatten\cavlc_read_levels.$verific$sub_88$cavlc_read_levels.v:195$1058 ($sub).
  creating $macc model for $flatten\cavlc_read_levels.$verific$unary_minus_122$cavlc_read_levels.v:229$1083 ($neg).
  creating $macc model for $flatten\cavlc_read_levels.$verific$unary_minus_133$cavlc_read_levels.v:244$1091 ($neg).
  creating $macc model for $flatten\cavlc_read_run_befores.$verific$add_205$cavlc_read_run_befores.v:331$1595 ($add).
  creating $macc model for $flatten\cavlc_read_run_befores.$verific$sub_140$cavlc_read_run_befores.v:286$1582 ($sub).
  creating $macc model for $flatten\cavlc_read_run_befores.$verific$sub_19$cavlc_read_run_befores.v:196$1516 ($sub).
  creating $macc model for $flatten\cavlc_read_run_befores.$verific$sub_58$cavlc_read_run_befores.v:242$1531 ($sub).
  creating $macc model for $flatten\cavlc_read_total_coeffs.$verific$add_967$cavlc_read_total_coeffs.v:1066$3058 ($add).
  merging $macc model for $flatten\cavlc_read_levels.$verific$sub_123$cavlc_read_levels.v:229$1084 into $flatten\cavlc_read_levels.$verific$sub_124$cavlc_read_levels.v:229$1085.
  merging $macc model for $flatten\cavlc_read_levels.$verific$unary_minus_122$cavlc_read_levels.v:229$1083 into $flatten\cavlc_read_levels.$verific$sub_124$cavlc_read_levels.v:229$1085.
  merging $macc model for $flatten\cavlc_read_levels.$verific$add_105$cavlc_read_levels.v:211$1071 into $flatten\cavlc_read_levels.$verific$add_110$cavlc_read_levels.v:212$1073.
  creating $alu model for $macc $flatten\cavlc_read_run_befores.$verific$sub_140$cavlc_read_run_befores.v:286$1582.
  creating $alu model for $macc $flatten\cavlc_read_run_befores.$verific$add_205$cavlc_read_run_befores.v:331$1595.
  creating $alu model for $macc $flatten\cavlc_read_levels.$verific$unary_minus_133$cavlc_read_levels.v:244$1091.
  creating $alu model for $macc $flatten\cavlc_read_run_befores.$verific$sub_58$cavlc_read_run_befores.v:242$1531.
  creating $alu model for $macc $flatten\cavlc_read_levels.$verific$sub_88$cavlc_read_levels.v:195$1058.
  creating $alu model for $macc $flatten\cavlc_read_levels.$verific$sub_71$cavlc_read_levels.v:185$1041.
  creating $alu model for $macc $flatten\cavlc_read_levels.$verific$sub_51$cavlc_read_levels.v:171$1028.
  creating $alu model for $macc $flatten\cavlc_read_levels.$verific$sub_50$cavlc_read_levels.v:171$1027.
  creating $alu model for $macc $flatten\cavlc_read_run_befores.$verific$sub_19$cavlc_read_run_befores.v:196$1516.
  creating $alu model for $macc $flatten\cavlc_read_levels.$verific$add_76$cavlc_read_levels.v:186$1046.
  creating $alu model for $macc $flatten\cavlc_read_levels.$verific$add_389$cavlc_read_levels.v:388$1218.
  creating $alu model for $macc $flatten\cavlc_read_levels.$verific$add_120$cavlc_read_levels.v:226$1082.
  creating $alu model for $macc $flatten\cavlc_read_levels.$verific$add_119$cavlc_read_levels.v:226$1080.
  creating $alu model for $macc $flatten\cavlc_read_total_coeffs.$verific$add_967$cavlc_read_total_coeffs.v:1066$3058.
  creating $alu model for $macc $flatten\cavlc_fsm.$verific$sub_46$cavlc_fsm.v:139$707.
  creating $alu model for $macc $flatten\cavlc_fsm.$verific$sub_43$cavlc_fsm.v:135$704.
  creating $alu model for $macc $flatten\cavlc_fsm.$verific$sub_31$cavlc_fsm.v:121$695.
  creating $alu model for $macc $flatten\cavlc_fsm.$verific$sub_14$cavlc_fsm.v:106$680.
  creating $macc cell for $flatten\cavlc_read_levels.$verific$add_110$cavlc_read_levels.v:212$1073: $auto$alumacc.cc:365:replace_macc$5021
  creating $macc cell for $flatten\cavlc_read_levels.$verific$sub_124$cavlc_read_levels.v:229$1085: $auto$alumacc.cc:365:replace_macc$5022
  creating $alu model for $flatten\cavlc_fsm.$verific$LessThan_16$cavlc_fsm.v:107$683 ($lt): new $alu
  creating $alu model for $flatten\cavlc_fsm.$verific$LessThan_17$cavlc_fsm.v:107$684 ($lt): new $alu
  creating $alu model for $flatten\cavlc_fsm.$verific$LessThan_38$cavlc_fsm.v:131$701 ($lt): new $alu
  creating $alu model for $flatten\cavlc_read_levels.$verific$LessThan_59$cavlc_read_levels.v:177$1032 ($lt): new $alu
  creating $alu model for $flatten\cavlc_read_levels.$verific$LessThan_60$cavlc_read_levels.v:177$1033 ($lt): new $alu
  creating $alu model for $flatten\cavlc_read_levels.$verific$LessThan_66$cavlc_read_levels.v:181$1038 ($lt): new $alu
  creating $alu model for $flatten\cavlc_read_levels.$verific$LessThan_73$cavlc_read_levels.v:185$1043 ($lt): new $alu
  creating $alu model for $flatten\cavlc_read_levels.$verific$LessThan_74$cavlc_read_levels.v:185$1044 ($lt): new $alu
  creating $alu model for $flatten\cavlc_read_levels.$verific$LessThan_85$cavlc_read_levels.v:194$1055 ($lt): new $alu
  creating $alu model for $flatten\cavlc_read_levels.$verific$LessThan_86$cavlc_read_levels.v:194$1056 ($le): new $alu
  creating $alu model for $flatten\cavlc_read_run_befores.$verific$LessThan_127$cavlc_read_run_befores.v:269$1576 ($lt): new $alu
  creating $alu model for $flatten\cavlc_read_run_befores.$verific$LessThan_203$cavlc_read_run_befores.v:330$1593 ($lt): new $alu
  creating $alu model for $flatten\cavlc_read_run_befores.$verific$LessThan_253$cavlc_read_run_befores.v:351$1630 ($le): new $alu
  creating $alu model for $flatten\cavlc_read_run_befores.$verific$LessThan_256$cavlc_read_run_befores.v:352$1633 ($le): new $alu
  creating $alu model for $flatten\cavlc_read_run_befores.$verific$LessThan_259$cavlc_read_run_befores.v:353$1636 ($le): new $alu
  creating $alu model for $flatten\cavlc_read_run_befores.$verific$LessThan_262$cavlc_read_run_befores.v:354$1639 ($le): new $alu
  creating $alu model for $flatten\cavlc_read_run_befores.$verific$LessThan_265$cavlc_read_run_befores.v:355$1642 ($le): new $alu
  creating $alu model for $flatten\cavlc_read_run_befores.$verific$LessThan_268$cavlc_read_run_befores.v:356$1645 ($le): new $alu
  creating $alu model for $flatten\cavlc_read_run_befores.$verific$LessThan_271$cavlc_read_run_befores.v:357$1648 ($le): new $alu
  creating $alu model for $flatten\cavlc_read_run_befores.$verific$LessThan_274$cavlc_read_run_befores.v:358$1651 ($le): new $alu
  creating $alu model for $flatten\cavlc_read_run_befores.$verific$LessThan_277$cavlc_read_run_befores.v:359$1654 ($le): new $alu
  creating $alu model for $flatten\cavlc_read_run_befores.$verific$LessThan_280$cavlc_read_run_befores.v:360$1657 ($le): new $alu
  creating $alu model for $flatten\cavlc_read_run_befores.$verific$LessThan_283$cavlc_read_run_befores.v:361$1660 ($le): new $alu
  creating $alu model for $flatten\cavlc_read_run_befores.$verific$LessThan_286$cavlc_read_run_befores.v:362$1663 ($le): new $alu
  creating $alu model for $flatten\cavlc_read_run_befores.$verific$LessThan_289$cavlc_read_run_befores.v:363$1666 ($le): new $alu
  creating $alu model for $flatten\cavlc_read_run_befores.$verific$LessThan_292$cavlc_read_run_befores.v:364$1669 ($le): new $alu
  creating $alu model for $flatten\cavlc_read_levels.$verific$equal_170$cavlc_read_levels.v:269$1105 ($eq): merged with $flatten\cavlc_read_levels.$verific$LessThan_60$cavlc_read_levels.v:177$1033.
  creating $alu model for $flatten\cavlc_read_levels.$verific$equal_91$cavlc_read_levels.v:196$1061 ($eq): merged with $flatten\cavlc_read_levels.$verific$LessThan_86$cavlc_read_levels.v:194$1056.
  creating $alu model for $flatten\cavlc_read_run_befores.$verific$equal_44$cavlc_read_run_befores.v:224$1523 ($eq): merged with $flatten\cavlc_read_run_befores.$verific$sub_19$cavlc_read_run_befores.v:196$1516.
  creating $alu cell for $flatten\cavlc_read_run_befores.$verific$LessThan_292$cavlc_read_run_befores.v:364$1669: $auto$alumacc.cc:485:replace_alu$5049
  creating $alu cell for $flatten\cavlc_read_run_befores.$verific$LessThan_289$cavlc_read_run_befores.v:363$1666: $auto$alumacc.cc:485:replace_alu$5062
  creating $alu cell for $flatten\cavlc_read_run_befores.$verific$LessThan_286$cavlc_read_run_befores.v:362$1663: $auto$alumacc.cc:485:replace_alu$5075
  creating $alu cell for $flatten\cavlc_read_run_befores.$verific$LessThan_283$cavlc_read_run_befores.v:361$1660: $auto$alumacc.cc:485:replace_alu$5088
  creating $alu cell for $flatten\cavlc_read_run_befores.$verific$LessThan_280$cavlc_read_run_befores.v:360$1657: $auto$alumacc.cc:485:replace_alu$5101
  creating $alu cell for $flatten\cavlc_read_run_befores.$verific$LessThan_277$cavlc_read_run_befores.v:359$1654: $auto$alumacc.cc:485:replace_alu$5114
  creating $alu cell for $flatten\cavlc_read_run_befores.$verific$LessThan_274$cavlc_read_run_befores.v:358$1651: $auto$alumacc.cc:485:replace_alu$5127
  creating $alu cell for $flatten\cavlc_read_run_befores.$verific$LessThan_271$cavlc_read_run_befores.v:357$1648: $auto$alumacc.cc:485:replace_alu$5140
  creating $alu cell for $flatten\cavlc_read_run_befores.$verific$LessThan_268$cavlc_read_run_befores.v:356$1645: $auto$alumacc.cc:485:replace_alu$5149
  creating $alu cell for $flatten\cavlc_read_run_befores.$verific$LessThan_265$cavlc_read_run_befores.v:355$1642: $auto$alumacc.cc:485:replace_alu$5158
  creating $alu cell for $flatten\cavlc_read_run_befores.$verific$LessThan_262$cavlc_read_run_befores.v:354$1639: $auto$alumacc.cc:485:replace_alu$5167
  creating $alu cell for $flatten\cavlc_read_run_befores.$verific$LessThan_259$cavlc_read_run_befores.v:353$1636: $auto$alumacc.cc:485:replace_alu$5176
  creating $alu cell for $flatten\cavlc_read_run_befores.$verific$LessThan_256$cavlc_read_run_befores.v:352$1633: $auto$alumacc.cc:485:replace_alu$5185
  creating $alu cell for $flatten\cavlc_read_run_befores.$verific$LessThan_253$cavlc_read_run_befores.v:351$1630: $auto$alumacc.cc:485:replace_alu$5194
  creating $alu cell for $flatten\cavlc_read_run_befores.$verific$LessThan_203$cavlc_read_run_befores.v:330$1593: $auto$alumacc.cc:485:replace_alu$5203
  creating $alu cell for $flatten\cavlc_read_run_befores.$verific$LessThan_127$cavlc_read_run_befores.v:269$1576: $auto$alumacc.cc:485:replace_alu$5208
  creating $alu cell for $flatten\cavlc_read_levels.$verific$LessThan_86$cavlc_read_levels.v:194$1056, $flatten\cavlc_read_levels.$verific$equal_91$cavlc_read_levels.v:196$1061: $auto$alumacc.cc:485:replace_alu$5213
  creating $alu cell for $flatten\cavlc_read_levels.$verific$LessThan_85$cavlc_read_levels.v:194$1055: $auto$alumacc.cc:485:replace_alu$5222
  creating $alu cell for $flatten\cavlc_read_levels.$verific$LessThan_74$cavlc_read_levels.v:185$1044: $auto$alumacc.cc:485:replace_alu$5227
  creating $alu cell for $flatten\cavlc_read_levels.$verific$LessThan_73$cavlc_read_levels.v:185$1043: $auto$alumacc.cc:485:replace_alu$5232
  creating $alu cell for $flatten\cavlc_read_levels.$verific$LessThan_66$cavlc_read_levels.v:181$1038: $auto$alumacc.cc:485:replace_alu$5243
  creating $alu cell for $flatten\cavlc_read_levels.$verific$LessThan_60$cavlc_read_levels.v:177$1033, $flatten\cavlc_read_levels.$verific$equal_170$cavlc_read_levels.v:269$1105: $auto$alumacc.cc:485:replace_alu$5248
  creating $alu cell for $flatten\cavlc_read_levels.$verific$LessThan_59$cavlc_read_levels.v:177$1032: $auto$alumacc.cc:485:replace_alu$5259
  creating $alu cell for $flatten\cavlc_fsm.$verific$LessThan_38$cavlc_fsm.v:131$701: $auto$alumacc.cc:485:replace_alu$5264
  creating $alu cell for $flatten\cavlc_fsm.$verific$LessThan_17$cavlc_fsm.v:107$684: $auto$alumacc.cc:485:replace_alu$5269
  creating $alu cell for $flatten\cavlc_fsm.$verific$LessThan_16$cavlc_fsm.v:107$683: $auto$alumacc.cc:485:replace_alu$5274
  creating $alu cell for $flatten\cavlc_fsm.$verific$sub_14$cavlc_fsm.v:106$680: $auto$alumacc.cc:485:replace_alu$5279
  creating $alu cell for $flatten\cavlc_fsm.$verific$sub_31$cavlc_fsm.v:121$695: $auto$alumacc.cc:485:replace_alu$5282
  creating $alu cell for $flatten\cavlc_fsm.$verific$sub_43$cavlc_fsm.v:135$704: $auto$alumacc.cc:485:replace_alu$5285
  creating $alu cell for $flatten\cavlc_fsm.$verific$sub_46$cavlc_fsm.v:139$707: $auto$alumacc.cc:485:replace_alu$5288
  creating $alu cell for $flatten\cavlc_read_total_coeffs.$verific$add_967$cavlc_read_total_coeffs.v:1066$3058: $auto$alumacc.cc:485:replace_alu$5291
  creating $alu cell for $flatten\cavlc_read_levels.$verific$add_119$cavlc_read_levels.v:226$1080: $auto$alumacc.cc:485:replace_alu$5294
  creating $alu cell for $flatten\cavlc_read_levels.$verific$add_120$cavlc_read_levels.v:226$1082: $auto$alumacc.cc:485:replace_alu$5297
  creating $alu cell for $flatten\cavlc_read_levels.$verific$add_389$cavlc_read_levels.v:388$1218: $auto$alumacc.cc:485:replace_alu$5300
  creating $alu cell for $flatten\cavlc_read_levels.$verific$add_76$cavlc_read_levels.v:186$1046: $auto$alumacc.cc:485:replace_alu$5303
  creating $alu cell for $flatten\cavlc_read_run_befores.$verific$sub_19$cavlc_read_run_befores.v:196$1516, $flatten\cavlc_read_run_befores.$verific$equal_44$cavlc_read_run_befores.v:224$1523: $auto$alumacc.cc:485:replace_alu$5306
  creating $alu cell for $flatten\cavlc_read_levels.$verific$sub_50$cavlc_read_levels.v:171$1027: $auto$alumacc.cc:485:replace_alu$5311
  creating $alu cell for $flatten\cavlc_read_levels.$verific$sub_51$cavlc_read_levels.v:171$1028: $auto$alumacc.cc:485:replace_alu$5314
  creating $alu cell for $flatten\cavlc_read_levels.$verific$sub_71$cavlc_read_levels.v:185$1041: $auto$alumacc.cc:485:replace_alu$5317
  creating $alu cell for $flatten\cavlc_read_levels.$verific$sub_88$cavlc_read_levels.v:195$1058: $auto$alumacc.cc:485:replace_alu$5320
  creating $alu cell for $flatten\cavlc_read_run_befores.$verific$sub_58$cavlc_read_run_befores.v:242$1531: $auto$alumacc.cc:485:replace_alu$5323
  creating $alu cell for $flatten\cavlc_read_levels.$verific$unary_minus_133$cavlc_read_levels.v:244$1091: $auto$alumacc.cc:485:replace_alu$5326
  creating $alu cell for $flatten\cavlc_read_run_befores.$verific$add_205$cavlc_read_run_befores.v:331$1595: $auto$alumacc.cc:485:replace_alu$5329
  creating $alu cell for $flatten\cavlc_read_run_befores.$verific$sub_140$cavlc_read_run_befores.v:286$1582: $auto$alumacc.cc:485:replace_alu$5332
  created 44 $alu and 2 $macc cells.

yosys> opt

3.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.
<suppressed ~25 debug messages>

yosys> opt_merge -nomux

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
<suppressed ~66 debug messages>
Removed a total of 22 cells.

yosys> opt_muxtree

3.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $auto$pmuxtree.cc:65:recursive_mux_generator$4415.
Removed 1 multiplexer ports.
<suppressed ~103 debug messages>

yosys> opt_reduce

3.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$4897: { $flatten\cavlc_read_total_zeros.$verific$n443$3157 $flatten\cavlc_read_total_zeros.$verific$n446$3160 $flatten\cavlc_read_total_zeros.$verific$n449$3163 $flatten\cavlc_read_total_zeros.$verific$n451$3165 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$4675: { $flatten\cavlc_read_total_coeffs.$verific$n2962$1885 $flatten\cavlc_read_total_coeffs.$verific$n2965$1888 $flatten\cavlc_read_total_coeffs.$verific$n2974$1897 $flatten\cavlc_read_total_coeffs.$verific$n2977$1900 $flatten\cavlc_read_total_coeffs.$verific$n2979$1902 $auto$rtlil.cc:2400:Or$4652 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$4615: { $flatten\cavlc_read_total_coeffs.$verific$n2971$1894 $flatten\cavlc_read_total_coeffs.$verific$n2974$1897 $flatten\cavlc_read_total_coeffs.$verific$n2977$1900 $flatten\cavlc_read_total_coeffs.$verific$n2979$1902 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$4635: { $flatten\cavlc_read_total_coeffs.$verific$n2962$1885 $flatten\cavlc_read_total_coeffs.$verific$n2965$1888 $flatten\cavlc_read_total_coeffs.$verific$n2968$1891 $flatten\cavlc_read_total_coeffs.$verific$n2971$1894 $flatten\cavlc_read_total_coeffs.$verific$n2974$1897 $flatten\cavlc_read_total_coeffs.$verific$n2977$1900 $flatten\cavlc_read_total_coeffs.$verific$n2979$1902 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$4579: { $flatten\cavlc_read_total_coeffs.$verific$n1637$1816 $flatten\cavlc_read_total_coeffs.$verific$n1640$1819 $flatten\cavlc_read_total_coeffs.$verific$n1643$1822 $flatten\cavlc_read_total_coeffs.$verific$n1646$1825 $flatten\cavlc_read_total_coeffs.$verific$n1648$1827 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$4599: { $flatten\cavlc_read_total_coeffs.$verific$n1625$1804 $flatten\cavlc_read_total_coeffs.$verific$n1628$1807 $flatten\cavlc_read_total_coeffs.$verific$n1637$1816 $flatten\cavlc_read_total_coeffs.$verific$n1640$1819 $flatten\cavlc_read_total_coeffs.$verific$n1643$1822 $flatten\cavlc_read_total_coeffs.$verific$n1646$1825 $flatten\cavlc_read_total_coeffs.$verific$n1648$1827 $auto$rtlil.cc:2400:Or$4576 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$4495: { $flatten\cavlc_read_total_coeffs.$verific$n1610$1789 $flatten\cavlc_read_total_coeffs.$verific$n1643$1822 $flatten\cavlc_read_total_coeffs.$verific$n1646$1825 $flatten\cavlc_read_total_coeffs.$verific$n1648$1827 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$4515: { $flatten\cavlc_read_total_coeffs.$verific$n1610$1789 $flatten\cavlc_read_total_coeffs.$verific$n1631$1810 $flatten\cavlc_read_total_coeffs.$verific$n1634$1813 $flatten\cavlc_read_total_coeffs.$verific$n1643$1822 $flatten\cavlc_read_total_coeffs.$verific$n1646$1825 $flatten\cavlc_read_total_coeffs.$verific$n1648$1827 $auto$rtlil.cc:2400:Or$4492 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$4475: { $flatten\cavlc_read_total_coeffs.$verific$n4155$1946 $flatten\cavlc_read_total_coeffs.$verific$n4158$1949 $flatten\cavlc_read_total_coeffs.$verific$n4161$1952 $flatten\cavlc_read_total_coeffs.$verific$n4164$1955 $flatten\cavlc_read_total_coeffs.$verific$n4166$1957 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$4175: { $flatten\cavlc_fsm.$verific$n327$617 $flatten\cavlc_fsm.$verific$n330$620 $flatten\cavlc_fsm.$verific$n331$621 $flatten\cavlc_fsm.$verific$n333$623 $flatten\cavlc_fsm.$verific$n334$624 $flatten\cavlc_fsm.$verific$n335$625 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$4559: { $flatten\cavlc_read_total_coeffs.$verific$n1631$1810 $flatten\cavlc_read_total_coeffs.$verific$n1634$1813 $flatten\cavlc_read_total_coeffs.$verific$n1643$1822 $flatten\cavlc_read_total_coeffs.$verific$n1646$1825 $flatten\cavlc_read_total_coeffs.$verific$n1648$1827 $auto$rtlil.cc:2400:Or$4492 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$4455: { $flatten\cavlc_read_total_coeffs.$verific$n4158$1949 $flatten\cavlc_read_total_coeffs.$verific$n4161$1952 $flatten\cavlc_read_total_coeffs.$verific$n4164$1955 $flatten\cavlc_read_total_coeffs.$verific$n4166$1957 }
  Optimizing cells in module \cavlc.
Performed a total of 12 changes.

yosys> opt_merge

3.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
<suppressed ~24 debug messages>
Removed a total of 8 cells.

yosys> opt_dff

3.19.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..
Removed 5 unused cells and 65 unused wires.
<suppressed ~6 debug messages>

yosys> opt_expr

3.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

3.19.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~108 debug messages>

yosys> opt_reduce

3.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
Performed a total of 0 changes.

yosys> opt_merge

3.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..

yosys> opt_expr

3.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

3.19.16. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.20. Printing statistics.

=== cavlc ===

   Number of wires:               1712
   Number of wire bits:           6875
   Number of public wires:         207
   Number of public wire bits:    1260
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1483
     $adffe                         47
     $alu                           44
     $and                           86
     $bmux                          59
     $eq                           123
     $logic_not                     10
     $macc                           2
     $mux                          736
     $ne                            38
     $not                          110
     $or                            98
     $reduce_and                    43
     $reduce_bool                    6
     $reduce_or                     78
     $shl                            2
     $shr                            1


yosys> memory -nomap

3.21. Executing MEMORY pass.

yosys> opt_mem

3.21.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.21.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.21.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.21.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.21.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `$auto$memory_bmux2rom.cc:63:execute$5371'[0] in module `\cavlc': no output FF found.
Checking read port `$auto$memory_bmux2rom.cc:63:execute$5368'[0] in module `\cavlc': no output FF found.
Checking read port `$auto$memory_bmux2rom.cc:63:execute$5365'[0] in module `\cavlc': no output FF found.
Checking read port `$auto$memory_bmux2rom.cc:63:execute$5362'[0] in module `\cavlc': no output FF found.
Checking read port `$auto$memory_bmux2rom.cc:63:execute$5359'[0] in module `\cavlc': no output FF found.
Checking read port `$auto$memory_bmux2rom.cc:63:execute$5356'[0] in module `\cavlc': no output FF found.
Checking read port `$auto$memory_bmux2rom.cc:63:execute$5353'[0] in module `\cavlc': no output FF found.
Checking read port `$auto$memory_bmux2rom.cc:63:execute$5350'[0] in module `\cavlc': no output FF found.
Checking read port `$auto$memory_bmux2rom.cc:63:execute$5347'[0] in module `\cavlc': no output FF found.
Checking read port `$auto$memory_bmux2rom.cc:63:execute$5344'[0] in module `\cavlc': no output FF found.
Checking read port `$auto$memory_bmux2rom.cc:63:execute$5341'[0] in module `\cavlc': no output FF found.
Checking read port `$auto$memory_bmux2rom.cc:63:execute$5338'[0] in module `\cavlc': no output FF found.
Checking read port `$auto$memory_bmux2rom.cc:63:execute$5335'[0] in module `\cavlc': no output FF found.
Checking read port address `$auto$memory_bmux2rom.cc:63:execute$5371'[0] in module `\cavlc': address FF has async set and/or reset, not supported.
Checking read port address `$auto$memory_bmux2rom.cc:63:execute$5368'[0] in module `\cavlc': address FF has async set and/or reset, not supported.
Checking read port address `$auto$memory_bmux2rom.cc:63:execute$5365'[0] in module `\cavlc': address FF has async set and/or reset, not supported.
Checking read port address `$auto$memory_bmux2rom.cc:63:execute$5362'[0] in module `\cavlc': address FF has async set and/or reset, not supported.
Checking read port address `$auto$memory_bmux2rom.cc:63:execute$5359'[0] in module `\cavlc': address FF has async set and/or reset, not supported.
Checking read port address `$auto$memory_bmux2rom.cc:63:execute$5356'[0] in module `\cavlc': address FF has async set and/or reset, not supported.
Checking read port address `$auto$memory_bmux2rom.cc:63:execute$5353'[0] in module `\cavlc': address FF has async set and/or reset, not supported.
Checking read port address `$auto$memory_bmux2rom.cc:63:execute$5350'[0] in module `\cavlc': address FF has async set and/or reset, not supported.
Checking read port address `$auto$memory_bmux2rom.cc:63:execute$5347'[0] in module `\cavlc': address FF has async set and/or reset, not supported.
Checking read port address `$auto$memory_bmux2rom.cc:63:execute$5344'[0] in module `\cavlc': address FF has async set and/or reset, not supported.
Checking read port address `$auto$memory_bmux2rom.cc:63:execute$5341'[0] in module `\cavlc': address FF has async set and/or reset, not supported.
Checking read port address `$auto$memory_bmux2rom.cc:63:execute$5338'[0] in module `\cavlc': address FF has async set and/or reset, not supported.
Checking read port address `$auto$memory_bmux2rom.cc:63:execute$5335'[0] in module `\cavlc': no address FF found.

yosys> opt_clean

3.21.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..

yosys> memory_share

3.21.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.21.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.21.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..

yosys> memory_collect

3.21.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.22. Printing statistics.

=== cavlc ===

   Number of wires:               1712
   Number of wire bits:           6875
   Number of public wires:         207
   Number of public wire bits:    1260
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1483
     $adffe                         47
     $alu                           44
     $and                           86
     $bmux                          46
     $eq                           123
     $logic_not                     10
     $macc                           2
     $mem_v2                        13
     $mux                          736
     $ne                            38
     $not                          110
     $or                            98
     $reduce_and                    43
     $reduce_bool                    6
     $reduce_or                     78
     $shl                            2
     $shr                            1


yosys> opt_clean

3.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..

yosys> stat

3.24. Printing statistics.

=== cavlc ===

   Number of wires:               1712
   Number of wire bits:           6875
   Number of public wires:         207
   Number of public wire bits:    1260
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1483
     $adffe                         47
     $alu                           44
     $and                           86
     $bmux                          46
     $eq                           123
     $logic_not                     10
     $macc                           2
     $mem_v2                        13
     $mux                          736
     $ne                            38
     $not                          110
     $or                            98
     $reduce_and                    43
     $reduce_bool                    6
     $reduce_or                     78
     $shl                            2
     $shr                            1


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.25. Executing TECHMAP pass (map to technology primitives).

3.25.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.25.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.25.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using extmapper maccmap for cells of type $macc.
  add $flatten\cavlc_read_levels.$verific$n475$855 [8:0] (9 bits, unsigned)
  add { $flatten\cavlc_read_levels.$verific$n544$783 $flatten\cavlc_read_levels.$verific$n544$783 $flatten\cavlc_read_levels.$verific$n544$783 $flatten\cavlc_read_levels.$verific$n544$783 } (4 bits, unsigned)
  add \cavlc_read_levels.level_suffix (9 bits, unsigned)
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $or.
Using template $paramod$740b056ede97228d3eae64ea2fdc81f0a33e0fe7\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $bmux.
Using extmapper simplemap for cells of type $and.
Using template $paramod$de9286bb3f6c9573089ef1694e580944d318189a\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $adffe.
Using template $paramod$83dd457849c736323edf2edb15923eb27f99c683\_90_alu for cells of type $alu.
Using template $paramod$b85fbb3374a1d9ba7ee4f4d6323c30f939df3ada\_90_alu for cells of type $alu.
Using template $paramod$943564b9366bbc392bf4bbc801aa0a2d7742a4e0\_90_alu for cells of type $alu.
Using template $paramod$53700bbee849b2010ad0b60a61ccd204a10e24ca\_90_alu for cells of type $alu.
  sub \cavlc_read_levels.level_code_tmp (9 bits, unsigned)
  sub { \cavlc_read_levels.tmp1 [1] 1'0 } (2 bits, unsigned)
  add 10'1111111111 (10 bits, unsigned)
  packed 1 (1) bits / 1 words into adder tree
Using template $paramod$constmap:2a5a90c887f7f17a34d4032fe665c7aac02a3bb8$paramod$27be44c49fb1346b96bf9a9013de8943094e1f11\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$3ef7d3dd227da7627a99c5e5a6a4deb817573e39\_90_alu for cells of type $alu.
Using template $paramod$78e969f2586efcf3a5b0b0440bcca0db83d5cca2\_90_alu for cells of type $alu.
Using template $paramod$constmap:3e07689e7ff5356da68de1ee7387179a05a469ef$paramod$b54d5ebdaecd24844fc43a347f4baf80efcdaf00\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$0563fff2c395e9892f21c131fa33d5e0ad144e72\_90_alu for cells of type $alu.
Using template $paramod$649fc39eef2451024566705288528c8671211199\_90_alu for cells of type $alu.
Using template $paramod$b8c0a997bce700f23568a5ada79cc6781d1f5ca0\_90_alu for cells of type $alu.
Using template $paramod$constmap:1e83989bdaaeae429b09a33fcb9a97ba54f64e9f$paramod$fb16e0492dc88ab7064d5e90ab6662c825c4229e\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$d2fa05d38998afabc6d4f34471305d0af4b8b2df\_90_alu for cells of type $alu.
Using template $paramod$5a51f938fa54bf7015d956f06feadaa94e2be5b1\_90_alu for cells of type $alu.
Using template $paramod$7e708ae28ab761f11d0fb59d3ffc72f6a4baf5d9\_90_alu for cells of type $alu.
Using template $paramod$b18e16801adf491a64caa0542270798e5d4ac6b6\_90_alu for cells of type $alu.
Using template $paramod$e23c72610957bd76b0654139c354e282891d4e8f\_90_alu for cells of type $alu.
Using template $paramod$c04af8dbf0e5d1d69bbccb2c7bd8a93fc9ef54dc\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod$1a3a0c35c4a4896fbfd612699525c057298e72d2\_90_alu for cells of type $alu.
Using template $paramod$f85408ed1aa3d09e465edae8a7bf590332ae9f7b\_90_alu for cells of type $alu.
Using template $paramod$32a7b7b86c07519b7537abc18e96f0331f97914d\_90_alu for cells of type $alu.
Using template $paramod$8045f2881226ae434b154710c783ad25023f386c\_90_alu for cells of type $alu.
Using template $paramod$8742280fdebca84e1c87f2a86ed84f62d558f4cc\_90_alu for cells of type $alu.
Using template $paramod$672a140277c71df8314410f22acc08d55222c3c7\_90_alu for cells of type $alu.
Using template $paramod$175e67c02b86e96b1288b9dc100122520d7240d8\_90_alu for cells of type $alu.
Using template $paramod$5ccf584370207a3ccc3032757a8e590623d4de56\_90_alu for cells of type $alu.
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000000001001 for cells of type $fa.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000100 for cells of type $lcu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000101 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001001 for cells of type $lcu.
Using template $paramod$484d51534650924b7ed4c69e46eed3a56904771f\_90_alu for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000110 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100000 for cells of type $lcu.
No more expansions possible.
<suppressed ~6507 debug messages>

yosys> stat

3.26. Printing statistics.

=== cavlc ===

   Number of wires:               4455
   Number of wire bits:          74913
   Number of public wires:         207
   Number of public wire bits:    1260
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              12908
     $_AND_                        885
     $_DFFE_PN0P_                  390
     $_DFFE_PN1P_                    1
     $_MUX_                       8751
     $_NOT_                        512
     $_OR_                        1228
     $_XOR_                       1128
     $mem_v2                        13


yosys> opt

3.27. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.
<suppressed ~6725 debug messages>

yosys> opt_merge -nomux

3.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
<suppressed ~2976 debug messages>
Removed a total of 992 cells.

yosys> opt_muxtree

3.27.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
Performed a total of 0 changes.

yosys> opt_merge

3.27.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$14249 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3944$961 [5], Q = \cavlc_read_levels.level_9 [5]).
Adding EN signal on $auto$ff.cc:262:slice$14250 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3944$961 [6], Q = \cavlc_read_levels.level_9 [6]).
Adding EN signal on $auto$ff.cc:262:slice$14449 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3924$959 [2], Q = \cavlc_read_levels.level_11 [2]).
Adding EN signal on $auto$ff.cc:262:slice$14448 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3924$959 [1], Q = \cavlc_read_levels.level_11 [1]).
Adding EN signal on $auto$ff.cc:262:slice$14247 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3944$961 [3], Q = \cavlc_read_levels.level_9 [3]).
Adding EN signal on $auto$ff.cc:262:slice$14412 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3934$960 [1], Q = \cavlc_read_levels.level_10 [1]).
Adding EN signal on $auto$ff.cc:262:slice$14992 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4034$970 [4], Q = \cavlc_read_levels.level_0 [4]).
Adding EN signal on $auto$ff.cc:262:slice$14411 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3934$960 [0], Q = \cavlc_read_levels.level_10 [0]).
Adding EN signal on $auto$ff.cc:262:slice$14248 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3944$961 [4], Q = \cavlc_read_levels.level_9 [4]).
Adding EN signal on $auto$ff.cc:262:slice$14417 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3934$960 [6], Q = \cavlc_read_levels.level_10 [6]).
Adding EN signal on $auto$ff.cc:262:slice$14996 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4034$970 [8], Q = \cavlc_read_levels.level_0 [8]).
Adding EN signal on $auto$ff.cc:262:slice$14419 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3934$960 [8], Q = \cavlc_read_levels.level_10 [8]).
Adding EN signal on $auto$ff.cc:262:slice$14455 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3924$959 [8], Q = \cavlc_read_levels.level_11 [8]).
Adding EN signal on $auto$ff.cc:262:slice$14755 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3914$958 [8], Q = \cavlc_read_levels.level_12 [8]).
Adding EN signal on $auto$ff.cc:262:slice$14782 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3904$957 [8], Q = \cavlc_read_levels.level_13 [8]).
Adding EN signal on $auto$ff.cc:262:slice$14805 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3894$956 [8], Q = \cavlc_read_levels.level_14 [8]).
Adding EN signal on $auto$ff.cc:262:slice$9205 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3884$955 [8], Q = \cavlc_read_levels.level_15 [8]).
Adding EN signal on $auto$ff.cc:262:slice$9196 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4024$969 [8], Q = \cavlc_read_levels.level_1 [8]).
Adding EN signal on $auto$ff.cc:262:slice$9187 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4014$968 [8], Q = \cavlc_read_levels.level_2 [8]).
Adding EN signal on $auto$ff.cc:262:slice$9178 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4004$967 [8], Q = \cavlc_read_levels.level_3 [8]).
Adding EN signal on $auto$ff.cc:262:slice$9169 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3994$966 [8], Q = \cavlc_read_levels.level_4 [8]).
Adding EN signal on $auto$ff.cc:262:slice$9160 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3984$965 [8], Q = \cavlc_read_levels.level_5 [8]).
Adding EN signal on $auto$ff.cc:262:slice$9151 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3974$964 [8], Q = \cavlc_read_levels.level_6 [8]).
Adding EN signal on $auto$ff.cc:262:slice$9142 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3964$963 [8], Q = \cavlc_read_levels.level_7 [8]).
Adding EN signal on $auto$ff.cc:262:slice$9133 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3954$962 [8], Q = \cavlc_read_levels.level_8 [8]).
Adding EN signal on $auto$ff.cc:262:slice$14252 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3944$961 [8], Q = \cavlc_read_levels.level_9 [8]).
Adding EN signal on $auto$ff.cc:262:slice$14251 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3944$961 [7], Q = \cavlc_read_levels.level_9 [7]).
Adding EN signal on $auto$ff.cc:262:slice$14991 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4034$970 [3], Q = \cavlc_read_levels.level_0 [3]).
Adding EN signal on $auto$ff.cc:262:slice$14416 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3934$960 [5], Q = \cavlc_read_levels.level_10 [5]).
Adding EN signal on $auto$ff.cc:262:slice$14988 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4034$970 [0], Q = \cavlc_read_levels.level_0 [0]).
Adding EN signal on $auto$ff.cc:262:slice$14781 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3904$957 [7], Q = \cavlc_read_levels.level_13 [7]).
Adding EN signal on $auto$ff.cc:262:slice$14780 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3904$957 [6], Q = \cavlc_read_levels.level_13 [6]).
Adding EN signal on $auto$ff.cc:262:slice$14414 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3934$960 [3], Q = \cavlc_read_levels.level_10 [3]).
Adding EN signal on $auto$ff.cc:262:slice$14990 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4034$970 [2], Q = \cavlc_read_levels.level_0 [2]).
Adding EN signal on $auto$ff.cc:262:slice$14779 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3904$957 [5], Q = \cavlc_read_levels.level_13 [5]).
Adding EN signal on $auto$ff.cc:262:slice$14989 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4034$970 [1], Q = \cavlc_read_levels.level_0 [1]).
Adding EN signal on $auto$ff.cc:262:slice$9125 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3954$962 [0], Q = \cavlc_read_levels.level_8 [0]).
Adding EN signal on $auto$ff.cc:262:slice$9126 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3954$962 [1], Q = \cavlc_read_levels.level_8 [1]).
Adding EN signal on $auto$ff.cc:262:slice$9127 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3954$962 [2], Q = \cavlc_read_levels.level_8 [2]).
Adding EN signal on $auto$ff.cc:262:slice$9128 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3954$962 [3], Q = \cavlc_read_levels.level_8 [3]).
Adding EN signal on $auto$ff.cc:262:slice$9129 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3954$962 [4], Q = \cavlc_read_levels.level_8 [4]).
Adding EN signal on $auto$ff.cc:262:slice$9130 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3954$962 [5], Q = \cavlc_read_levels.level_8 [5]).
Adding EN signal on $auto$ff.cc:262:slice$9131 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3954$962 [6], Q = \cavlc_read_levels.level_8 [6]).
Adding EN signal on $auto$ff.cc:262:slice$9132 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3954$962 [7], Q = \cavlc_read_levels.level_8 [7]).
Adding EN signal on $auto$ff.cc:262:slice$9134 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3964$963 [0], Q = \cavlc_read_levels.level_7 [0]).
Adding EN signal on $auto$ff.cc:262:slice$9135 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3964$963 [1], Q = \cavlc_read_levels.level_7 [1]).
Adding EN signal on $auto$ff.cc:262:slice$9136 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3964$963 [2], Q = \cavlc_read_levels.level_7 [2]).
Adding EN signal on $auto$ff.cc:262:slice$9137 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3964$963 [3], Q = \cavlc_read_levels.level_7 [3]).
Adding EN signal on $auto$ff.cc:262:slice$9138 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3964$963 [4], Q = \cavlc_read_levels.level_7 [4]).
Adding EN signal on $auto$ff.cc:262:slice$9139 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3964$963 [5], Q = \cavlc_read_levels.level_7 [5]).
Adding EN signal on $auto$ff.cc:262:slice$9140 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3964$963 [6], Q = \cavlc_read_levels.level_7 [6]).
Adding EN signal on $auto$ff.cc:262:slice$9141 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3964$963 [7], Q = \cavlc_read_levels.level_7 [7]).
Adding EN signal on $auto$ff.cc:262:slice$9143 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3974$964 [0], Q = \cavlc_read_levels.level_6 [0]).
Adding EN signal on $auto$ff.cc:262:slice$9144 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3974$964 [1], Q = \cavlc_read_levels.level_6 [1]).
Adding EN signal on $auto$ff.cc:262:slice$9145 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3974$964 [2], Q = \cavlc_read_levels.level_6 [2]).
Adding EN signal on $auto$ff.cc:262:slice$9146 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3974$964 [3], Q = \cavlc_read_levels.level_6 [3]).
Adding EN signal on $auto$ff.cc:262:slice$9147 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3974$964 [4], Q = \cavlc_read_levels.level_6 [4]).
Adding EN signal on $auto$ff.cc:262:slice$9148 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3974$964 [5], Q = \cavlc_read_levels.level_6 [5]).
Adding EN signal on $auto$ff.cc:262:slice$9149 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3974$964 [6], Q = \cavlc_read_levels.level_6 [6]).
Adding EN signal on $auto$ff.cc:262:slice$9150 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3974$964 [7], Q = \cavlc_read_levels.level_6 [7]).
Adding EN signal on $auto$ff.cc:262:slice$9152 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3984$965 [0], Q = \cavlc_read_levels.level_5 [0]).
Adding EN signal on $auto$ff.cc:262:slice$9153 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3984$965 [1], Q = \cavlc_read_levels.level_5 [1]).
Adding EN signal on $auto$ff.cc:262:slice$9154 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3984$965 [2], Q = \cavlc_read_levels.level_5 [2]).
Adding EN signal on $auto$ff.cc:262:slice$9155 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3984$965 [3], Q = \cavlc_read_levels.level_5 [3]).
Adding EN signal on $auto$ff.cc:262:slice$9156 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3984$965 [4], Q = \cavlc_read_levels.level_5 [4]).
Adding EN signal on $auto$ff.cc:262:slice$9157 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3984$965 [5], Q = \cavlc_read_levels.level_5 [5]).
Adding EN signal on $auto$ff.cc:262:slice$9158 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3984$965 [6], Q = \cavlc_read_levels.level_5 [6]).
Adding EN signal on $auto$ff.cc:262:slice$9159 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3984$965 [7], Q = \cavlc_read_levels.level_5 [7]).
Adding EN signal on $auto$ff.cc:262:slice$9161 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3994$966 [0], Q = \cavlc_read_levels.level_4 [0]).
Adding EN signal on $auto$ff.cc:262:slice$9162 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3994$966 [1], Q = \cavlc_read_levels.level_4 [1]).
Adding EN signal on $auto$ff.cc:262:slice$9163 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3994$966 [2], Q = \cavlc_read_levels.level_4 [2]).
Adding EN signal on $auto$ff.cc:262:slice$9164 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3994$966 [3], Q = \cavlc_read_levels.level_4 [3]).
Adding EN signal on $auto$ff.cc:262:slice$9165 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3994$966 [4], Q = \cavlc_read_levels.level_4 [4]).
Adding EN signal on $auto$ff.cc:262:slice$9166 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3994$966 [5], Q = \cavlc_read_levels.level_4 [5]).
Adding EN signal on $auto$ff.cc:262:slice$9167 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3994$966 [6], Q = \cavlc_read_levels.level_4 [6]).
Adding EN signal on $auto$ff.cc:262:slice$9168 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3994$966 [7], Q = \cavlc_read_levels.level_4 [7]).
Adding EN signal on $auto$ff.cc:262:slice$9170 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4004$967 [0], Q = \cavlc_read_levels.level_3 [0]).
Adding EN signal on $auto$ff.cc:262:slice$9171 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4004$967 [1], Q = \cavlc_read_levels.level_3 [1]).
Adding EN signal on $auto$ff.cc:262:slice$9172 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4004$967 [2], Q = \cavlc_read_levels.level_3 [2]).
Adding EN signal on $auto$ff.cc:262:slice$9173 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4004$967 [3], Q = \cavlc_read_levels.level_3 [3]).
Adding EN signal on $auto$ff.cc:262:slice$9174 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4004$967 [4], Q = \cavlc_read_levels.level_3 [4]).
Adding EN signal on $auto$ff.cc:262:slice$9175 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4004$967 [5], Q = \cavlc_read_levels.level_3 [5]).
Adding EN signal on $auto$ff.cc:262:slice$9176 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4004$967 [6], Q = \cavlc_read_levels.level_3 [6]).
Adding EN signal on $auto$ff.cc:262:slice$9177 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4004$967 [7], Q = \cavlc_read_levels.level_3 [7]).
Adding EN signal on $auto$ff.cc:262:slice$9179 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4014$968 [0], Q = \cavlc_read_levels.level_2 [0]).
Adding EN signal on $auto$ff.cc:262:slice$9180 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4014$968 [1], Q = \cavlc_read_levels.level_2 [1]).
Adding EN signal on $auto$ff.cc:262:slice$9181 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4014$968 [2], Q = \cavlc_read_levels.level_2 [2]).
Adding EN signal on $auto$ff.cc:262:slice$9182 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4014$968 [3], Q = \cavlc_read_levels.level_2 [3]).
Adding EN signal on $auto$ff.cc:262:slice$9183 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4014$968 [4], Q = \cavlc_read_levels.level_2 [4]).
Adding EN signal on $auto$ff.cc:262:slice$9184 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4014$968 [5], Q = \cavlc_read_levels.level_2 [5]).
Adding EN signal on $auto$ff.cc:262:slice$9185 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4014$968 [6], Q = \cavlc_read_levels.level_2 [6]).
Adding EN signal on $auto$ff.cc:262:slice$9186 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4014$968 [7], Q = \cavlc_read_levels.level_2 [7]).
Adding EN signal on $auto$ff.cc:262:slice$9188 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4024$969 [0], Q = \cavlc_read_levels.level_1 [0]).
Adding EN signal on $auto$ff.cc:262:slice$9189 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4024$969 [1], Q = \cavlc_read_levels.level_1 [1]).
Adding EN signal on $auto$ff.cc:262:slice$9190 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4024$969 [2], Q = \cavlc_read_levels.level_1 [2]).
Adding EN signal on $auto$ff.cc:262:slice$9191 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4024$969 [3], Q = \cavlc_read_levels.level_1 [3]).
Adding EN signal on $auto$ff.cc:262:slice$9192 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4024$969 [4], Q = \cavlc_read_levels.level_1 [4]).
Adding EN signal on $auto$ff.cc:262:slice$9193 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4024$969 [5], Q = \cavlc_read_levels.level_1 [5]).
Adding EN signal on $auto$ff.cc:262:slice$9194 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4024$969 [6], Q = \cavlc_read_levels.level_1 [6]).
Adding EN signal on $auto$ff.cc:262:slice$9195 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4024$969 [7], Q = \cavlc_read_levels.level_1 [7]).
Adding EN signal on $auto$ff.cc:262:slice$9197 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3884$955 [0], Q = \cavlc_read_levels.level_15 [0]).
Adding EN signal on $auto$ff.cc:262:slice$9198 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3884$955 [1], Q = \cavlc_read_levels.level_15 [1]).
Adding EN signal on $auto$ff.cc:262:slice$9199 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3884$955 [2], Q = \cavlc_read_levels.level_15 [2]).
Adding EN signal on $auto$ff.cc:262:slice$9200 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3884$955 [3], Q = \cavlc_read_levels.level_15 [3]).
Adding EN signal on $auto$ff.cc:262:slice$9201 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3884$955 [4], Q = \cavlc_read_levels.level_15 [4]).
Adding EN signal on $auto$ff.cc:262:slice$9202 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3884$955 [5], Q = \cavlc_read_levels.level_15 [5]).
Adding EN signal on $auto$ff.cc:262:slice$9203 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3884$955 [6], Q = \cavlc_read_levels.level_15 [6]).
Adding EN signal on $auto$ff.cc:262:slice$9204 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3884$955 [7], Q = \cavlc_read_levels.level_15 [7]).
Adding EN signal on $auto$ff.cc:262:slice$14754 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3914$958 [7], Q = \cavlc_read_levels.level_12 [7]).
Adding EN signal on $auto$ff.cc:262:slice$14418 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3934$960 [7], Q = \cavlc_read_levels.level_10 [7]).
Adding EN signal on $auto$ff.cc:262:slice$14753 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3914$958 [6], Q = \cavlc_read_levels.level_12 [6]).
Adding EN signal on $auto$ff.cc:262:slice$14244 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3944$961 [0], Q = \cavlc_read_levels.level_9 [0]).
Adding EN signal on $auto$ff.cc:262:slice$14994 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4034$970 [6], Q = \cavlc_read_levels.level_0 [6]).
Adding EN signal on $auto$ff.cc:262:slice$14750 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3914$958 [3], Q = \cavlc_read_levels.level_12 [3]).
Adding EN signal on $auto$ff.cc:262:slice$14993 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4034$970 [5], Q = \cavlc_read_levels.level_0 [5]).
Adding EN signal on $auto$ff.cc:262:slice$14749 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3914$958 [2], Q = \cavlc_read_levels.level_12 [2]).
Adding EN signal on $auto$ff.cc:262:slice$14804 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3894$956 [7], Q = \cavlc_read_levels.level_14 [7]).
Adding EN signal on $auto$ff.cc:262:slice$14802 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3894$956 [5], Q = \cavlc_read_levels.level_14 [5]).
Adding EN signal on $auto$ff.cc:262:slice$14752 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3914$958 [5], Q = \cavlc_read_levels.level_12 [5]).
Adding EN signal on $auto$ff.cc:262:slice$14801 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3894$956 [4], Q = \cavlc_read_levels.level_14 [4]).
Adding EN signal on $auto$ff.cc:262:slice$14800 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3894$956 [3], Q = \cavlc_read_levels.level_14 [3]).
Adding EN signal on $auto$ff.cc:262:slice$14798 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3894$956 [1], Q = \cavlc_read_levels.level_14 [1]).
Adding EN signal on $auto$ff.cc:262:slice$14797 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3894$956 [0], Q = \cavlc_read_levels.level_14 [0]).
Adding EN signal on $auto$ff.cc:262:slice$14748 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3914$958 [1], Q = \cavlc_read_levels.level_12 [1]).
Adding EN signal on $auto$ff.cc:262:slice$14803 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3894$956 [6], Q = \cavlc_read_levels.level_14 [6]).
Adding EN signal on $auto$ff.cc:262:slice$14799 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3894$956 [2], Q = \cavlc_read_levels.level_14 [2]).
Adding EN signal on $auto$ff.cc:262:slice$14751 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3914$958 [4], Q = \cavlc_read_levels.level_12 [4]).
Adding EN signal on $auto$ff.cc:262:slice$14778 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3904$957 [4], Q = \cavlc_read_levels.level_13 [4]).
Adding EN signal on $auto$ff.cc:262:slice$14777 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3904$957 [3], Q = \cavlc_read_levels.level_13 [3]).
Adding EN signal on $auto$ff.cc:262:slice$14775 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3904$957 [1], Q = \cavlc_read_levels.level_13 [1]).
Adding EN signal on $auto$ff.cc:262:slice$14774 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3904$957 [0], Q = \cavlc_read_levels.level_13 [0]).
Adding EN signal on $auto$ff.cc:262:slice$14995 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n4034$970 [7], Q = \cavlc_read_levels.level_0 [7]).
Adding EN signal on $auto$ff.cc:262:slice$14246 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3944$961 [2], Q = \cavlc_read_levels.level_9 [2]).
Adding EN signal on $auto$ff.cc:262:slice$14776 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3904$957 [2], Q = \cavlc_read_levels.level_13 [2]).
Adding EN signal on $auto$ff.cc:262:slice$14747 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3914$958 [0], Q = \cavlc_read_levels.level_12 [0]).
Adding EN signal on $auto$ff.cc:262:slice$14245 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3944$961 [1], Q = \cavlc_read_levels.level_9 [1]).
Adding EN signal on $auto$ff.cc:262:slice$14413 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3934$960 [2], Q = \cavlc_read_levels.level_10 [2]).
Adding EN signal on $auto$ff.cc:262:slice$14415 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3934$960 [4], Q = \cavlc_read_levels.level_10 [4]).
Adding EN signal on $auto$ff.cc:262:slice$14453 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3924$959 [6], Q = \cavlc_read_levels.level_11 [6]).
Adding EN signal on $auto$ff.cc:262:slice$14452 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3924$959 [5], Q = \cavlc_read_levels.level_11 [5]).
Adding EN signal on $auto$ff.cc:262:slice$14450 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3924$959 [3], Q = \cavlc_read_levels.level_11 [3]).
Adding EN signal on $auto$ff.cc:262:slice$14451 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3924$959 [4], Q = \cavlc_read_levels.level_11 [4]).
Adding EN signal on $auto$ff.cc:262:slice$14454 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3924$959 [7], Q = \cavlc_read_levels.level_11 [7]).
Adding EN signal on $auto$ff.cc:262:slice$14447 ($_DFFE_PN0P_) from module cavlc (D = $flatten\cavlc_read_levels.$verific$n3924$959 [0], Q = \cavlc_read_levels.level_11 [0]).

yosys> opt_clean

3.27.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..
Removed 218 unused cells and 4275 unused wires.
<suppressed ~219 debug messages>

yosys> opt_expr

3.27.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.
<suppressed ~5972 debug messages>

3.27.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.27.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
Performed a total of 0 changes.

yosys> opt_merge

3.27.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
<suppressed ~30801 debug messages>
Removed a total of 10267 cells.

yosys> opt_dff

3.27.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..
Removed 0 unused cells and 8385 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.27.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

3.27.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.27.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
Performed a total of 0 changes.

yosys> opt_merge

3.27.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..

yosys> opt_expr

3.27.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

3.27.23. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.
<suppressed ~1422 debug messages>

yosys> opt_merge

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
<suppressed ~246 debug messages>
Removed a total of 82 cells.

yosys> opt_dff

3.28.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..
Removed 1 unused cells and 144 unused wires.
<suppressed ~2 debug messages>

3.28.5. Finished fast OPT passes.

yosys> memory_map

3.29. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory $auto$memory_bmux2rom.cc:63:execute$5335 in module \cavlc:
  created 8 $dff cells and 0 static cells of width 4.
  read interface: 0 $dff and 7 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $auto$memory_bmux2rom.cc:63:execute$5338 in module \cavlc:
  created 8 $dff cells and 0 static cells of width 2.
  read interface: 0 $dff and 7 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $auto$memory_bmux2rom.cc:63:execute$5341 in module \cavlc:
  created 8 $dff cells and 0 static cells of width 5.
  read interface: 0 $dff and 7 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $auto$memory_bmux2rom.cc:63:execute$5344 in module \cavlc:
  created 8 $dff cells and 0 static cells of width 2.
  read interface: 0 $dff and 7 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $auto$memory_bmux2rom.cc:63:execute$5347 in module \cavlc:
  created 8 $dff cells and 0 static cells of width 5.
  read interface: 0 $dff and 7 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $auto$memory_bmux2rom.cc:63:execute$5350 in module \cavlc:
  created 8 $dff cells and 0 static cells of width 2.
  read interface: 0 $dff and 7 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $auto$memory_bmux2rom.cc:63:execute$5353 in module \cavlc:
  created 8 $dff cells and 0 static cells of width 5.
  read interface: 0 $dff and 7 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $auto$memory_bmux2rom.cc:63:execute$5356 in module \cavlc:
  created 8 $dff cells and 0 static cells of width 2.
  read interface: 0 $dff and 7 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $auto$memory_bmux2rom.cc:63:execute$5359 in module \cavlc:
  created 8 $dff cells and 0 static cells of width 5.
  read interface: 0 $dff and 7 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $auto$memory_bmux2rom.cc:63:execute$5362 in module \cavlc:
  created 8 $dff cells and 0 static cells of width 2.
  read interface: 0 $dff and 7 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $auto$memory_bmux2rom.cc:63:execute$5365 in module \cavlc:
  created 8 $dff cells and 0 static cells of width 5.
  read interface: 0 $dff and 7 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $auto$memory_bmux2rom.cc:63:execute$5368 in module \cavlc:
  created 8 $dff cells and 0 static cells of width 2.
  read interface: 0 $dff and 7 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $auto$memory_bmux2rom.cc:63:execute$5371 in module \cavlc:
  created 8 $dff cells and 0 static cells of width 5.
  read interface: 0 $dff and 7 $mux cells.
  write interface: 0 write mux blocks.

yosys> opt -full

3.30. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.
<suppressed ~8 debug messages>

yosys> opt_merge -nomux

3.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_muxtree

3.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~13 debug messages>

yosys> opt_reduce -full

3.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
Performed a total of 0 changes.

yosys> opt_merge

3.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_share

3.30.6. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$15574 in front of them:
        $auto$simplemap.cc:278:simplemap_mux$5854
        $auto$simplemap.cc:278:simplemap_mux$5891

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$15825 in front of them:
        $auto$simplemap.cc:278:simplemap_mux$5565
        $auto$simplemap.cc:278:simplemap_mux$5595


yosys> opt_dff

3.30.7. Executing OPT_DFF pass (perform DFF optimizations).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5335[0]$51193 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5335[1]$51195 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5335[2]$51197 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5335[3]$51199 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5335[4]$51201 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5335[5]$51203 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5335[6]$51205 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5335[7]$51207 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5338[0]$51230 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5338[1]$51232 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5338[2]$51234 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5338[3]$51236 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5338[4]$51238 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5338[5]$51240 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5338[6]$51242 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5338[7]$51244 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5341[0]$51267 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5341[1]$51269 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5341[2]$51271 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5341[3]$51273 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5341[4]$51275 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5341[5]$51277 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5341[6]$51279 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5341[7]$51281 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5344[0]$51304 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5344[1]$51306 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5344[2]$51308 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5344[3]$51310 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5344[4]$51312 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5344[5]$51314 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5344[6]$51316 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5344[7]$51318 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5347[0]$51341 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5347[1]$51343 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5347[2]$51345 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5347[3]$51347 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5347[4]$51349 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5347[5]$51351 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5347[6]$51353 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5347[7]$51355 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5350[0]$51378 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5350[1]$51380 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5350[2]$51382 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5350[3]$51384 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5350[4]$51386 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5350[5]$51388 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5350[6]$51390 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5350[7]$51392 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5353[0]$51415 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5353[1]$51417 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5353[2]$51419 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5353[3]$51421 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5353[4]$51423 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5353[5]$51425 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5353[6]$51427 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5353[7]$51429 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5356[0]$51452 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5356[1]$51454 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5356[2]$51456 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5356[3]$51458 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5356[4]$51460 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5356[5]$51462 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5356[6]$51464 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5356[7]$51466 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5359[0]$51489 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5359[1]$51491 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5359[2]$51493 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5359[3]$51495 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5359[4]$51497 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5359[5]$51499 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5359[6]$51501 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5359[7]$51503 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5362[0]$51526 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5362[1]$51528 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5362[2]$51530 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5362[3]$51532 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5362[4]$51534 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5362[5]$51536 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5362[6]$51538 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5362[7]$51540 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5365[0]$51563 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5365[1]$51565 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5365[2]$51567 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5365[3]$51569 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5365[4]$51571 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5365[5]$51573 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5365[6]$51575 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5365[7]$51577 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5368[0]$51600 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5368[1]$51602 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5368[2]$51604 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5368[3]$51606 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5368[4]$51608 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5368[5]$51610 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5368[6]$51612 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5368[7]$51614 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5371[0]$51637 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5371[1]$51639 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5371[2]$51641 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5371[3]$51643 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5371[4]$51645 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5371[5]$51647 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5371[6]$51649 ($dff) from module cavlc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$5371[7]$51651 ($dff) from module cavlc (removing D path).

yosys> opt_clean

3.30.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..
Removed 0 unused cells and 312 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.30.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.
<suppressed ~9 debug messages>

3.30.10. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.30.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~15 debug messages>

yosys> opt_reduce -full

3.30.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5335$rdmux[0][2][0]$51218:
      Old ports: A=4'0001, B=4'0010, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5335$rdmux[0][1][0]$a$51213
      New ports: A=2'01, B=2'10, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5335$rdmux[0][1][0]$a$51213 [1:0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$5335$rdmux[0][1][0]$a$51213 [3:2] = 2'00
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5335$rdmux[0][2][1]$51221:
      Old ports: A=4'0100, B=4'0011, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5335$rdmux[0][1][0]$b$51214
      New ports: A=2'10, B=2'01, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$5335$rdmux[0][1][0]$b$51214 [2] $memory$auto$memory_bmux2rom.cc:63:execute$5335$rdmux[0][1][0]$b$51214 [0] }
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$5335$rdmux[0][1][0]$b$51214 [3] $memory$auto$memory_bmux2rom.cc:63:execute$5335$rdmux[0][1][0]$b$51214 [1] } = { 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$5335$rdmux[0][1][0]$b$51214 [0] }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5335$rdmux[0][2][2]$51224:
      Old ports: A=4'0110, B=4'0101, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5335$rdmux[0][1][1]$a$51216
      New ports: A=2'10, B=2'01, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5335$rdmux[0][1][1]$a$51216 [1:0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$5335$rdmux[0][1][1]$a$51216 [3:2] = 2'01
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5338$rdmux[0][2][2]$51261:
      Old ports: A=2'11, B=2'10, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5338$rdmux[0][1][1]$a$51253
      New ports: A=1'1, B=1'0, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5338$rdmux[0][1][1]$a$51253 [0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$5338$rdmux[0][1][1]$a$51253 [1] = 1'1
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5338$rdmux[0][2][3]$51264:
      Old ports: A=2'01, B=2'00, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5338$rdmux[0][1][1]$b$51254
      New ports: A=1'1, B=1'0, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5338$rdmux[0][1][1]$b$51254 [0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$5338$rdmux[0][1][1]$b$51254 [1] = 1'0
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5341$rdmux[0][2][0]$51292:
      Old ports: A=5'00111, B=5'00110, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5341$rdmux[0][1][0]$a$51287
      New ports: A=1'1, B=1'0, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5341$rdmux[0][1][0]$a$51287 [0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$5341$rdmux[0][1][0]$a$51287 [4:1] = 4'0011
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5341$rdmux[0][2][1]$51295:
      Old ports: A=5'00101, B=5'00100, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5341$rdmux[0][1][0]$b$51288
      New ports: A=1'1, B=1'0, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5341$rdmux[0][1][0]$b$51288 [0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$5341$rdmux[0][1][0]$b$51288 [4:1] = 4'0010
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5341$rdmux[0][2][2]$51298:
      Old ports: A=5'00011, B=5'00010, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5341$rdmux[0][1][1]$a$51290
      New ports: A=1'1, B=1'0, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5341$rdmux[0][1][1]$a$51290 [0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$5341$rdmux[0][1][1]$a$51290 [4:1] = 4'0001
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5341$rdmux[0][2][3]$51301:
      Old ports: A=5'00001, B=5'00000, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5341$rdmux[0][1][1]$b$51291
      New ports: A=1'1, B=1'0, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5341$rdmux[0][1][1]$b$51291 [0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$5341$rdmux[0][1][1]$b$51291 [4:1] = 4'0000
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5344$rdmux[0][2][2]$51335:
      Old ports: A=2'01, B=2'11, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5344$rdmux[0][1][1]$a$51327
      New ports: A=1'0, B=1'1, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5344$rdmux[0][1][1]$a$51327 [1]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$5344$rdmux[0][1][1]$a$51327 [0] = 1'1
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5347$rdmux[0][1][0]$51360:
      Old ports: A=5'00101, B=5'00100, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5347$rdmux[0][0][0]$a$51358
      New ports: A=1'1, B=1'0, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5347$rdmux[0][0][0]$a$51358 [0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$5347$rdmux[0][0][0]$a$51358 [4:1] = 4'0010
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5347$rdmux[0][2][2]$51372:
      Old ports: A=5'00011, B=5'01000, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5347$rdmux[0][1][1]$a$51364
      New ports: A=2'01, B=2'10, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$5347$rdmux[0][1][1]$a$51364 [3] $memory$auto$memory_bmux2rom.cc:63:execute$5347$rdmux[0][1][1]$a$51364 [0] }
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$5347$rdmux[0][1][1]$a$51364 [4] $memory$auto$memory_bmux2rom.cc:63:execute$5347$rdmux[0][1][1]$a$51364 [2:1] } = { 2'00 $memory$auto$memory_bmux2rom.cc:63:execute$5347$rdmux[0][1][1]$a$51364 [0] }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5347$rdmux[0][2][3]$51375:
      Old ports: A=5'00011, B=5'00010, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5347$rdmux[0][1][1]$b$51365
      New ports: A=1'1, B=1'0, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5347$rdmux[0][1][1]$b$51365 [0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$5347$rdmux[0][1][1]$b$51365 [4:1] = 4'0001
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5350$rdmux[0][2][0]$51403:
      Old ports: A=2'00, B=2'10, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5350$rdmux[0][1][0]$a$51398
      New ports: A=1'0, B=1'1, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5350$rdmux[0][1][0]$a$51398 [1]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$5350$rdmux[0][1][0]$a$51398 [0] = 1'0
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5350$rdmux[0][2][1]$51406:
      Old ports: A=2'01, B=2'00, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5350$rdmux[0][1][0]$b$51399
      New ports: A=1'1, B=1'0, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5350$rdmux[0][1][0]$b$51399 [0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$5350$rdmux[0][1][0]$b$51399 [1] = 1'0
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5350$rdmux[0][2][2]$51409:
      Old ports: A=2'11, B=2'10, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5350$rdmux[0][1][1]$a$51401
      New ports: A=1'1, B=1'0, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5350$rdmux[0][1][1]$a$51401 [0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$5350$rdmux[0][1][1]$a$51401 [1] = 1'1
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5350$rdmux[0][2][3]$51412:
      Old ports: A=2'01, B=2'00, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5350$rdmux[0][1][1]$b$51402
      New ports: A=1'1, B=1'0, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5350$rdmux[0][1][1]$b$51402 [0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$5350$rdmux[0][1][1]$b$51402 [1] = 1'0
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5353$rdmux[0][2][0]$51440:
      Old ports: A=5'00011, B=5'00111, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5353$rdmux[0][1][0]$a$51435
      New ports: A=1'0, B=1'1, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5353$rdmux[0][1][0]$a$51435 [2]
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$5353$rdmux[0][1][0]$a$51435 [4:3] $memory$auto$memory_bmux2rom.cc:63:execute$5353$rdmux[0][1][0]$a$51435 [1:0] } = 4'0011
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5353$rdmux[0][2][1]$51443:
      Old ports: A=5'00111, B=5'00010, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5353$rdmux[0][1][0]$b$51436
      New ports: A=1'1, B=1'0, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5353$rdmux[0][1][0]$b$51436 [0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$5353$rdmux[0][1][0]$b$51436 [4:1] = { 2'00 $memory$auto$memory_bmux2rom.cc:63:execute$5353$rdmux[0][1][0]$b$51436 [0] 1'1 }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5353$rdmux[0][2][2]$51446:
      Old ports: A=5'01001, B=5'00110, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5353$rdmux[0][1][1]$a$51438
      New ports: A=2'01, B=2'10, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5353$rdmux[0][1][1]$a$51438 [1:0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$5353$rdmux[0][1][1]$a$51438 [4:2] = { 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$5353$rdmux[0][1][1]$a$51438 [0] $memory$auto$memory_bmux2rom.cc:63:execute$5353$rdmux[0][1][1]$a$51438 [1] }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5353$rdmux[0][2][3]$51449:
      Old ports: A=5'00110, B=5'00001, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5353$rdmux[0][1][1]$b$51439
      New ports: A=2'10, B=2'01, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5353$rdmux[0][1][1]$b$51439 [1:0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$5353$rdmux[0][1][1]$b$51439 [4:2] = { 2'00 $memory$auto$memory_bmux2rom.cc:63:execute$5353$rdmux[0][1][1]$b$51439 [1] }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5356$rdmux[0][2][1]$51480:
      Old ports: A=2'10, B=2'00, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5356$rdmux[0][1][0]$b$51473
      New ports: A=1'1, B=1'0, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5356$rdmux[0][1][0]$b$51473 [1]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$5356$rdmux[0][1][0]$b$51473 [0] = 1'0
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5356$rdmux[0][2][2]$51483:
      Old ports: A=2'11, B=2'10, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5356$rdmux[0][1][1]$a$51475
      New ports: A=1'1, B=1'0, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5356$rdmux[0][1][1]$a$51475 [0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$5356$rdmux[0][1][1]$a$51475 [1] = 1'1
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5356$rdmux[0][2][3]$51486:
      Old ports: A=2'01, B=2'00, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5356$rdmux[0][1][1]$b$51476
      New ports: A=1'1, B=1'0, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5356$rdmux[0][1][1]$b$51476 [0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$5356$rdmux[0][1][1]$b$51476 [1] = 1'0
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5359$rdmux[0][2][0]$51514:
      Old ports: A=5'00111, B=5'00110, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5359$rdmux[0][1][0]$a$51509
      New ports: A=1'1, B=1'0, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5359$rdmux[0][1][0]$a$51509 [0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$5359$rdmux[0][1][0]$a$51509 [4:1] = 4'0011
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5359$rdmux[0][2][1]$51517:
      Old ports: A=5'01001, B=5'00101, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5359$rdmux[0][1][0]$b$51510
      New ports: A=2'10, B=2'01, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5359$rdmux[0][1][0]$b$51510 [3:2]
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$5359$rdmux[0][1][0]$b$51510 [4] $memory$auto$memory_bmux2rom.cc:63:execute$5359$rdmux[0][1][0]$b$51510 [1:0] } = 3'001
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5359$rdmux[0][2][2]$51520:
      Old ports: A=5'01010, B=5'01000, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5359$rdmux[0][1][1]$a$51512
      New ports: A=1'1, B=1'0, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5359$rdmux[0][1][1]$a$51512 [1]
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$5359$rdmux[0][1][1]$a$51512 [4:2] $memory$auto$memory_bmux2rom.cc:63:execute$5359$rdmux[0][1][1]$a$51512 [0] } = 4'0100
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5359$rdmux[0][2][3]$51523:
      Old ports: A=5'01000, B=5'00100, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5359$rdmux[0][1][1]$b$51513
      New ports: A=2'10, B=2'01, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5359$rdmux[0][1][1]$b$51513 [3:2]
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$5359$rdmux[0][1][1]$b$51513 [4] $memory$auto$memory_bmux2rom.cc:63:execute$5359$rdmux[0][1][1]$b$51513 [1:0] } = 3'000
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5362$rdmux[0][2][0]$51551:
      Old ports: A=2'11, B=2'10, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5362$rdmux[0][1][0]$a$51546
      New ports: A=1'1, B=1'0, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5362$rdmux[0][1][0]$a$51546 [0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$5362$rdmux[0][1][0]$a$51546 [1] = 1'1
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5362$rdmux[0][2][1]$51554:
      Old ports: A=2'01, B=2'00, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5362$rdmux[0][1][0]$b$51547
      New ports: A=1'1, B=1'0, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5362$rdmux[0][1][0]$b$51547 [0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$5362$rdmux[0][1][0]$b$51547 [1] = 1'0
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5362$rdmux[0][2][2]$51557:
      Old ports: A=2'11, B=2'10, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5362$rdmux[0][1][1]$a$51549
      New ports: A=1'1, B=1'0, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5362$rdmux[0][1][1]$a$51549 [0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$5362$rdmux[0][1][1]$a$51549 [1] = 1'1
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5362$rdmux[0][2][3]$51560:
      Old ports: A=2'01, B=2'00, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5362$rdmux[0][1][1]$b$51550
      New ports: A=1'1, B=1'0, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5362$rdmux[0][1][1]$b$51550 [0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$5362$rdmux[0][1][1]$b$51550 [1] = 1'0
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5365$rdmux[0][2][0]$51588:
      Old ports: A=5'01100, B=5'01011, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5365$rdmux[0][1][0]$a$51583
      New ports: A=2'10, B=2'01, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$5365$rdmux[0][1][0]$a$51583 [2] $memory$auto$memory_bmux2rom.cc:63:execute$5365$rdmux[0][1][0]$a$51583 [0] }
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$5365$rdmux[0][1][0]$a$51583 [4:3] $memory$auto$memory_bmux2rom.cc:63:execute$5365$rdmux[0][1][0]$a$51583 [1] } = { 2'01 $memory$auto$memory_bmux2rom.cc:63:execute$5365$rdmux[0][1][0]$a$51583 [0] }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5365$rdmux[0][2][1]$51591:
      Old ports: A=5'01010, B=5'01001, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5365$rdmux[0][1][0]$b$51584
      New ports: A=2'10, B=2'01, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5365$rdmux[0][1][0]$b$51584 [1:0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$5365$rdmux[0][1][0]$b$51584 [4:2] = 3'010
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5365$rdmux[0][2][2]$51594:
      Old ports: A=5'01011, B=5'01010, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5365$rdmux[0][1][1]$a$51586
      New ports: A=1'1, B=1'0, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5365$rdmux[0][1][1]$a$51586 [0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$5365$rdmux[0][1][1]$a$51586 [4:1] = 4'0101
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5365$rdmux[0][2][3]$51597:
      Old ports: A=5'01001, B=5'01000, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5365$rdmux[0][1][1]$b$51587
      New ports: A=1'1, B=1'0, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5365$rdmux[0][1][1]$b$51587 [0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$5365$rdmux[0][1][1]$b$51587 [4:1] = 4'0100
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5368$rdmux[0][2][0]$51625:
      Old ports: A=2'00, B=2'10, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5368$rdmux[0][1][0]$a$51620
      New ports: A=1'0, B=1'1, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5368$rdmux[0][1][0]$a$51620 [1]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$5368$rdmux[0][1][0]$a$51620 [0] = 1'0
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5368$rdmux[0][2][1]$51628:
      Old ports: A=2'01, B=2'00, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5368$rdmux[0][1][0]$b$51621
      New ports: A=1'1, B=1'0, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5368$rdmux[0][1][0]$b$51621 [0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$5368$rdmux[0][1][0]$b$51621 [1] = 1'0
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5368$rdmux[0][2][2]$51631:
      Old ports: A=2'11, B=2'10, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5368$rdmux[0][1][1]$a$51623
      New ports: A=1'1, B=1'0, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5368$rdmux[0][1][1]$a$51623 [0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$5368$rdmux[0][1][1]$a$51623 [1] = 1'1
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5368$rdmux[0][2][3]$51634:
      Old ports: A=2'01, B=2'00, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5368$rdmux[0][1][1]$b$51624
      New ports: A=1'1, B=1'0, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5368$rdmux[0][1][1]$b$51624 [0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$5368$rdmux[0][1][1]$b$51624 [1] = 1'0
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5371$rdmux[0][2][0]$51662:
      Old ports: A=5'01100, B=5'01101, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5371$rdmux[0][1][0]$a$51657
      New ports: A=1'0, B=1'1, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5371$rdmux[0][1][0]$a$51657 [0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$5371$rdmux[0][1][0]$a$51657 [4:1] = 4'0110
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5371$rdmux[0][2][1]$51665:
      Old ports: A=5'01100, B=5'01011, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5371$rdmux[0][1][0]$b$51658
      New ports: A=2'10, B=2'01, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$5371$rdmux[0][1][0]$b$51658 [2] $memory$auto$memory_bmux2rom.cc:63:execute$5371$rdmux[0][1][0]$b$51658 [0] }
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$5371$rdmux[0][1][0]$b$51658 [4:3] $memory$auto$memory_bmux2rom.cc:63:execute$5371$rdmux[0][1][0]$b$51658 [1] } = { 2'01 $memory$auto$memory_bmux2rom.cc:63:execute$5371$rdmux[0][1][0]$b$51658 [0] }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5371$rdmux[0][2][2]$51668:
      Old ports: A=5'01101, B=5'01100, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5371$rdmux[0][1][1]$a$51660
      New ports: A=1'1, B=1'0, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5371$rdmux[0][1][1]$a$51660 [0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$5371$rdmux[0][1][1]$a$51660 [4:1] = 4'0110
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5371$rdmux[0][2][3]$51671:
      Old ports: A=5'01011, B=5'01010, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5371$rdmux[0][1][1]$b$51661
      New ports: A=1'1, B=1'0, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5371$rdmux[0][1][1]$b$51661 [0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$5371$rdmux[0][1][1]$b$51661 [4:1] = 4'0101
  Optimizing cells in module \cavlc.
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5335$rdmux[0][1][0]$51212:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$5335$rdmux[0][1][0]$a$51213, B=$memory$auto$memory_bmux2rom.cc:63:execute$5335$rdmux[0][1][0]$b$51214, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5335$rdmux[0][0][0]$a$51210
      New ports: A={ 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$5335$rdmux[0][1][0]$a$51213 [1:0] }, B={ $memory$auto$memory_bmux2rom.cc:63:execute$5335$rdmux[0][1][0]$b$51214 [2] $memory$auto$memory_bmux2rom.cc:63:execute$5335$rdmux[0][1][0]$b$51214 [0] $memory$auto$memory_bmux2rom.cc:63:execute$5335$rdmux[0][1][0]$b$51214 [0] }, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5335$rdmux[0][0][0]$a$51210 [2:0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$5335$rdmux[0][0][0]$a$51210 [3] = 1'0
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5335$rdmux[0][1][1]$51215:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$5335$rdmux[0][1][1]$a$51216, B=4'0110, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5335$rdmux[0][0][0]$b$51211
      New ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$5335$rdmux[0][1][1]$a$51216 [1:0], B=2'10, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5335$rdmux[0][0][0]$b$51211 [1:0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$5335$rdmux[0][0][0]$b$51211 [3:2] = 2'01
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5341$rdmux[0][1][0]$51286:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$5341$rdmux[0][1][0]$a$51287, B=$memory$auto$memory_bmux2rom.cc:63:execute$5341$rdmux[0][1][0]$b$51288, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5341$rdmux[0][0][0]$a$51284
      New ports: A={ 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$5341$rdmux[0][1][0]$a$51287 [0] }, B={ 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$5341$rdmux[0][1][0]$b$51288 [0] }, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5341$rdmux[0][0][0]$a$51284 [1:0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$5341$rdmux[0][0][0]$a$51284 [4:2] = 3'001
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5341$rdmux[0][1][1]$51289:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$5341$rdmux[0][1][1]$a$51290, B=$memory$auto$memory_bmux2rom.cc:63:execute$5341$rdmux[0][1][1]$b$51291, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5341$rdmux[0][0][0]$b$51285
      New ports: A={ 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$5341$rdmux[0][1][1]$a$51290 [0] }, B={ 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$5341$rdmux[0][1][1]$b$51291 [0] }, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5341$rdmux[0][0][0]$b$51285 [1:0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$5341$rdmux[0][0][0]$b$51285 [4:2] = 3'000
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5347$rdmux[0][1][1]$51363:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$5347$rdmux[0][1][1]$a$51364, B=$memory$auto$memory_bmux2rom.cc:63:execute$5347$rdmux[0][1][1]$b$51365, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5347$rdmux[0][0][0]$b$51359
      New ports: A={ $memory$auto$memory_bmux2rom.cc:63:execute$5347$rdmux[0][1][1]$a$51364 [3] $memory$auto$memory_bmux2rom.cc:63:execute$5347$rdmux[0][1][1]$a$51364 [0] $memory$auto$memory_bmux2rom.cc:63:execute$5347$rdmux[0][1][1]$a$51364 [0] }, B={ 2'01 $memory$auto$memory_bmux2rom.cc:63:execute$5347$rdmux[0][1][1]$b$51365 [0] }, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$5347$rdmux[0][0][0]$b$51359 [3] $memory$auto$memory_bmux2rom.cc:63:execute$5347$rdmux[0][0][0]$b$51359 [1:0] }
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$5347$rdmux[0][0][0]$b$51359 [4] $memory$auto$memory_bmux2rom.cc:63:execute$5347$rdmux[0][0][0]$b$51359 [2] } = 2'00
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5353$rdmux[0][1][0]$51434:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$5353$rdmux[0][1][0]$a$51435, B=$memory$auto$memory_bmux2rom.cc:63:execute$5353$rdmux[0][1][0]$b$51436, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5353$rdmux[0][0][0]$a$51432
      New ports: A={ $memory$auto$memory_bmux2rom.cc:63:execute$5353$rdmux[0][1][0]$a$51435 [2] 1'1 }, B={ $memory$auto$memory_bmux2rom.cc:63:execute$5353$rdmux[0][1][0]$b$51436 [0] $memory$auto$memory_bmux2rom.cc:63:execute$5353$rdmux[0][1][0]$b$51436 [0] }, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$5353$rdmux[0][0][0]$a$51432 [2] $memory$auto$memory_bmux2rom.cc:63:execute$5353$rdmux[0][0][0]$a$51432 [0] }
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$5353$rdmux[0][0][0]$a$51432 [4:3] $memory$auto$memory_bmux2rom.cc:63:execute$5353$rdmux[0][0][0]$a$51432 [1] } = 3'001
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5353$rdmux[0][1][1]$51437:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$5353$rdmux[0][1][1]$a$51438, B=$memory$auto$memory_bmux2rom.cc:63:execute$5353$rdmux[0][1][1]$b$51439, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5353$rdmux[0][0][0]$b$51433
      New ports: A={ $memory$auto$memory_bmux2rom.cc:63:execute$5353$rdmux[0][1][1]$a$51438 [0] $memory$auto$memory_bmux2rom.cc:63:execute$5353$rdmux[0][1][1]$a$51438 [1:0] }, B={ 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$5353$rdmux[0][1][1]$b$51439 [1:0] }, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$5353$rdmux[0][0][0]$b$51433 [3] $memory$auto$memory_bmux2rom.cc:63:execute$5353$rdmux[0][0][0]$b$51433 [1:0] }
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$5353$rdmux[0][0][0]$b$51433 [4] $memory$auto$memory_bmux2rom.cc:63:execute$5353$rdmux[0][0][0]$b$51433 [2] } = { 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$5353$rdmux[0][0][0]$b$51433 [1] }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5356$rdmux[0][1][0]$51471:
      Old ports: A=2'00, B=$memory$auto$memory_bmux2rom.cc:63:execute$5356$rdmux[0][1][0]$b$51473, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5356$rdmux[0][0][0]$a$51469
      New ports: A=1'0, B=$memory$auto$memory_bmux2rom.cc:63:execute$5356$rdmux[0][1][0]$b$51473 [1], Y=$memory$auto$memory_bmux2rom.cc:63:execute$5356$rdmux[0][0][0]$a$51469 [1]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$5356$rdmux[0][0][0]$a$51469 [0] = 1'0
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5359$rdmux[0][1][0]$51508:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$5359$rdmux[0][1][0]$a$51509, B=$memory$auto$memory_bmux2rom.cc:63:execute$5359$rdmux[0][1][0]$b$51510, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5359$rdmux[0][0][0]$a$51506
      New ports: A={ 3'011 $memory$auto$memory_bmux2rom.cc:63:execute$5359$rdmux[0][1][0]$a$51509 [0] }, B={ $memory$auto$memory_bmux2rom.cc:63:execute$5359$rdmux[0][1][0]$b$51510 [3:2] 2'01 }, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5359$rdmux[0][0][0]$a$51506 [3:0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$5359$rdmux[0][0][0]$a$51506 [4] = 1'0
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5359$rdmux[0][1][1]$51511:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$5359$rdmux[0][1][1]$a$51512, B=$memory$auto$memory_bmux2rom.cc:63:execute$5359$rdmux[0][1][1]$b$51513, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5359$rdmux[0][0][0]$b$51507
      New ports: A={ 2'10 $memory$auto$memory_bmux2rom.cc:63:execute$5359$rdmux[0][1][1]$a$51512 [1] }, B={ $memory$auto$memory_bmux2rom.cc:63:execute$5359$rdmux[0][1][1]$b$51513 [3:2] 1'0 }, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5359$rdmux[0][0][0]$b$51507 [3:1]
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$5359$rdmux[0][0][0]$b$51507 [4] $memory$auto$memory_bmux2rom.cc:63:execute$5359$rdmux[0][0][0]$b$51507 [0] } = 2'00
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5365$rdmux[0][1][0]$51582:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$5365$rdmux[0][1][0]$a$51583, B=$memory$auto$memory_bmux2rom.cc:63:execute$5365$rdmux[0][1][0]$b$51584, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5365$rdmux[0][0][0]$a$51580
      New ports: A={ $memory$auto$memory_bmux2rom.cc:63:execute$5365$rdmux[0][1][0]$a$51583 [2] $memory$auto$memory_bmux2rom.cc:63:execute$5365$rdmux[0][1][0]$a$51583 [0] $memory$auto$memory_bmux2rom.cc:63:execute$5365$rdmux[0][1][0]$a$51583 [0] }, B={ 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$5365$rdmux[0][1][0]$b$51584 [1:0] }, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5365$rdmux[0][0][0]$a$51580 [2:0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$5365$rdmux[0][0][0]$a$51580 [4:3] = 2'01
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5365$rdmux[0][1][1]$51585:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$5365$rdmux[0][1][1]$a$51586, B=$memory$auto$memory_bmux2rom.cc:63:execute$5365$rdmux[0][1][1]$b$51587, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5365$rdmux[0][0][0]$b$51581
      New ports: A={ 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$5365$rdmux[0][1][1]$a$51586 [0] }, B={ 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$5365$rdmux[0][1][1]$b$51587 [0] }, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5365$rdmux[0][0][0]$b$51581 [1:0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$5365$rdmux[0][0][0]$b$51581 [4:2] = 3'010
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5371$rdmux[0][1][0]$51656:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$5371$rdmux[0][1][0]$a$51657, B=$memory$auto$memory_bmux2rom.cc:63:execute$5371$rdmux[0][1][0]$b$51658, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5371$rdmux[0][0][0]$a$51654
      New ports: A={ 2'10 $memory$auto$memory_bmux2rom.cc:63:execute$5371$rdmux[0][1][0]$a$51657 [0] }, B={ $memory$auto$memory_bmux2rom.cc:63:execute$5371$rdmux[0][1][0]$b$51658 [2] $memory$auto$memory_bmux2rom.cc:63:execute$5371$rdmux[0][1][0]$b$51658 [0] $memory$auto$memory_bmux2rom.cc:63:execute$5371$rdmux[0][1][0]$b$51658 [0] }, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5371$rdmux[0][0][0]$a$51654 [2:0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$5371$rdmux[0][0][0]$a$51654 [4:3] = 2'01
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5371$rdmux[0][1][1]$51659:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$5371$rdmux[0][1][1]$a$51660, B=$memory$auto$memory_bmux2rom.cc:63:execute$5371$rdmux[0][1][1]$b$51661, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5371$rdmux[0][0][0]$b$51655
      New ports: A={ 2'10 $memory$auto$memory_bmux2rom.cc:63:execute$5371$rdmux[0][1][1]$a$51660 [0] }, B={ 2'01 $memory$auto$memory_bmux2rom.cc:63:execute$5371$rdmux[0][1][1]$b$51661 [0] }, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5371$rdmux[0][0][0]$b$51655 [2:0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$5371$rdmux[0][0][0]$b$51655 [4:3] = 2'01
  Optimizing cells in module \cavlc.
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5335$rdmux[0][0][0]$51209:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$5335$rdmux[0][0][0]$a$51210, B=$memory$auto$memory_bmux2rom.cc:63:execute$5335$rdmux[0][0][0]$b$51211, Y=$flatten\cavlc_read_run_befores.$verific$n228$1349
      New ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$5335$rdmux[0][0][0]$a$51210 [2:0], B={ 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$5335$rdmux[0][0][0]$b$51211 [1:0] }, Y=$flatten\cavlc_read_run_befores.$verific$n228$1349 [2:0]
      New connections: $flatten\cavlc_read_run_befores.$verific$n228$1349 [3] = 1'0
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5341$rdmux[0][0][0]$51283:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$5341$rdmux[0][0][0]$a$51284, B=$memory$auto$memory_bmux2rom.cc:63:execute$5341$rdmux[0][0][0]$b$51285, Y=$flatten\cavlc_read_total_coeffs.$verific$n3076$2315
      New ports: A={ 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$5341$rdmux[0][0][0]$a$51284 [1:0] }, B={ 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$5341$rdmux[0][0][0]$b$51285 [1:0] }, Y=$flatten\cavlc_read_total_coeffs.$verific$n3076$2315 [2:0]
      New connections: $flatten\cavlc_read_total_coeffs.$verific$n3076$2315 [4:3] = 2'00
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5347$rdmux[0][0][0]$51357:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$5347$rdmux[0][0][0]$a$51358, B=$memory$auto$memory_bmux2rom.cc:63:execute$5347$rdmux[0][0][0]$b$51359, Y=$flatten\cavlc_read_total_coeffs.$verific$n3163$2334
      New ports: A={ 3'010 $memory$auto$memory_bmux2rom.cc:63:execute$5347$rdmux[0][0][0]$a$51358 [0] }, B={ $memory$auto$memory_bmux2rom.cc:63:execute$5347$rdmux[0][0][0]$b$51359 [3] 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$5347$rdmux[0][0][0]$b$51359 [1:0] }, Y=$flatten\cavlc_read_total_coeffs.$verific$n3163$2334 [3:0]
      New connections: $flatten\cavlc_read_total_coeffs.$verific$n3163$2334 [4] = 1'0
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5353$rdmux[0][0][0]$51431:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$5353$rdmux[0][0][0]$a$51432, B=$memory$auto$memory_bmux2rom.cc:63:execute$5353$rdmux[0][0][0]$b$51433, Y=$flatten\cavlc_read_total_coeffs.$verific$n3250$2353
      New ports: A={ 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$5353$rdmux[0][0][0]$a$51432 [2] 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$5353$rdmux[0][0][0]$a$51432 [0] }, B={ $memory$auto$memory_bmux2rom.cc:63:execute$5353$rdmux[0][0][0]$b$51433 [3] $memory$auto$memory_bmux2rom.cc:63:execute$5353$rdmux[0][0][0]$b$51433 [1] $memory$auto$memory_bmux2rom.cc:63:execute$5353$rdmux[0][0][0]$b$51433 [1:0] }, Y=$flatten\cavlc_read_total_coeffs.$verific$n3250$2353 [3:0]
      New connections: $flatten\cavlc_read_total_coeffs.$verific$n3250$2353 [4] = 1'0
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5359$rdmux[0][0][0]$51505:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$5359$rdmux[0][0][0]$a$51506, B=$memory$auto$memory_bmux2rom.cc:63:execute$5359$rdmux[0][0][0]$b$51507, Y=$flatten\cavlc_read_total_coeffs.$verific$n3337$2372
      New ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$5359$rdmux[0][0][0]$a$51506 [3:0], B={ $memory$auto$memory_bmux2rom.cc:63:execute$5359$rdmux[0][0][0]$b$51507 [3:1] 1'0 }, Y=$flatten\cavlc_read_total_coeffs.$verific$n3337$2372 [3:0]
      New connections: $flatten\cavlc_read_total_coeffs.$verific$n3337$2372 [4] = 1'0
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5365$rdmux[0][0][0]$51579:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$5365$rdmux[0][0][0]$a$51580, B=$memory$auto$memory_bmux2rom.cc:63:execute$5365$rdmux[0][0][0]$b$51581, Y=$flatten\cavlc_read_total_coeffs.$verific$n3424$2391
      New ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$5365$rdmux[0][0][0]$a$51580 [2:0], B={ 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$5365$rdmux[0][0][0]$b$51581 [1:0] }, Y=$flatten\cavlc_read_total_coeffs.$verific$n3424$2391 [2:0]
      New connections: $flatten\cavlc_read_total_coeffs.$verific$n3424$2391 [4:3] = 2'01
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5371$rdmux[0][0][0]$51653:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$5371$rdmux[0][0][0]$a$51654, B=$memory$auto$memory_bmux2rom.cc:63:execute$5371$rdmux[0][0][0]$b$51655, Y=$flatten\cavlc_read_total_coeffs.$verific$n3511$2402
      New ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$5371$rdmux[0][0][0]$a$51654 [2:0], B=$memory$auto$memory_bmux2rom.cc:63:execute$5371$rdmux[0][0][0]$b$51655 [2:0], Y=$flatten\cavlc_read_total_coeffs.$verific$n3511$2402 [2:0]
      New connections: $flatten\cavlc_read_total_coeffs.$verific$n3511$2402 [4:3] = 2'01
  Optimizing cells in module \cavlc.
Performed a total of 65 changes.

yosys> opt_merge

3.30.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
<suppressed ~102 debug messages>
Removed a total of 34 cells.

yosys> opt_share

3.30.14. Executing OPT_SHARE pass.

yosys> opt_dff

3.30.15. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..
Removed 0 unused cells and 40 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.30.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.
<suppressed ~21 debug messages>

3.30.18. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.30.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~19 debug messages>

yosys> opt_reduce -full

3.30.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5338$rdmux[0][1][1]$51252:
      Old ports: A={ 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$5338$rdmux[0][1][1]$a$51253 [0] }, B={ 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$5338$rdmux[0][1][1]$a$51253 [0] }, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5338$rdmux[0][0][0]$b$51248
      New ports: A=1'1, B=1'0, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5338$rdmux[0][0][0]$b$51248 [1]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$5338$rdmux[0][0][0]$b$51248 [0] = $memory$auto$memory_bmux2rom.cc:63:execute$5338$rdmux[0][1][1]$a$51253 [0]
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5341$rdmux[0][0][0]$51283:
      Old ports: A={ 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$5338$rdmux[0][0][0]$b$51248 }, B={ 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$5338$rdmux[0][0][0]$b$51248 }, Y=$flatten\cavlc_read_total_coeffs.$verific$n3076$2315 [2:0]
      New ports: A=1'1, B=1'0, Y=$flatten\cavlc_read_total_coeffs.$verific$n3076$2315 [2]
      New connections: $flatten\cavlc_read_total_coeffs.$verific$n3076$2315 [1:0] = $memory$auto$memory_bmux2rom.cc:63:execute$5338$rdmux[0][0][0]$b$51248
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5350$rdmux[0][1][1]$51400:
      Old ports: A={ 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$5350$rdmux[0][1][0]$b$51399 [0] }, B={ 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$5350$rdmux[0][1][0]$b$51399 [0] }, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5350$rdmux[0][0][0]$b$51396
      New ports: A=1'1, B=1'0, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5350$rdmux[0][0][0]$b$51396 [1]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$5350$rdmux[0][0][0]$b$51396 [0] = $memory$auto$memory_bmux2rom.cc:63:execute$5350$rdmux[0][1][0]$b$51399 [0]
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5356$rdmux[0][1][1]$51474:
      Old ports: A={ 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$5356$rdmux[0][1][0]$b$51473 [1] }, B={ 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$5356$rdmux[0][1][0]$b$51473 [1] }, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5356$rdmux[0][0][0]$b$51470
      New ports: A=1'1, B=1'0, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5356$rdmux[0][0][0]$b$51470 [1]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$5356$rdmux[0][0][0]$b$51470 [0] = $memory$auto$memory_bmux2rom.cc:63:execute$5356$rdmux[0][1][0]$b$51473 [1]
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5362$rdmux[0][1][0]$51545:
      Old ports: A={ 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$5362$rdmux[0][1][0]$a$51546 [0] }, B={ 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$5362$rdmux[0][1][0]$a$51546 [0] }, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5362$rdmux[0][0][0]$a$51543
      New ports: A=1'1, B=1'0, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5362$rdmux[0][0][0]$a$51543 [1]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$5362$rdmux[0][0][0]$a$51543 [0] = $memory$auto$memory_bmux2rom.cc:63:execute$5362$rdmux[0][1][0]$a$51546 [0]
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5365$rdmux[0][1][0]$51582:
      Old ports: A={ $memory$auto$memory_bmux2rom.cc:63:execute$5365$rdmux[0][1][0]$a$51583 [2:1] $memory$auto$memory_bmux2rom.cc:63:execute$5365$rdmux[0][1][0]$a$51583 [1] }, B={ 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$5365$rdmux[0][1][0]$a$51583 [2:1] }, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5365$rdmux[0][0][0]$a$51580 [2:0]
      New ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$5365$rdmux[0][1][0]$a$51583 [2:1], B={ 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$5365$rdmux[0][1][0]$a$51583 [2] }, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5365$rdmux[0][0][0]$a$51580 [2:1]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$5365$rdmux[0][0][0]$a$51580 [0] = $memory$auto$memory_bmux2rom.cc:63:execute$5365$rdmux[0][1][0]$a$51583 [1]
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5368$rdmux[0][1][1]$51622:
      Old ports: A={ 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$5368$rdmux[0][1][0]$b$51621 [0] }, B={ 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$5368$rdmux[0][1][0]$b$51621 [0] }, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5368$rdmux[0][0][0]$b$51618
      New ports: A=1'1, B=1'0, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5368$rdmux[0][0][0]$b$51618 [1]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$5368$rdmux[0][0][0]$b$51618 [0] = $memory$auto$memory_bmux2rom.cc:63:execute$5368$rdmux[0][1][0]$b$51621 [0]
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$5371$rdmux[0][1][1]$51659:
      Old ports: A={ 2'10 $memory$auto$memory_bmux2rom.cc:63:execute$5368$rdmux[0][1][0]$b$51621 [0] }, B={ 2'01 $memory$auto$memory_bmux2rom.cc:63:execute$5368$rdmux[0][1][0]$b$51621 [0] }, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5371$rdmux[0][0][0]$b$51655 [2:0]
      New ports: A=2'10, B=2'01, Y=$memory$auto$memory_bmux2rom.cc:63:execute$5371$rdmux[0][0][0]$b$51655 [2:1]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$5371$rdmux[0][0][0]$b$51655 [0] = $memory$auto$memory_bmux2rom.cc:63:execute$5368$rdmux[0][1][0]$b$51621 [0]
  Optimizing cells in module \cavlc.
Performed a total of 8 changes.

yosys> opt_merge

3.30.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_share

3.30.22. Executing OPT_SHARE pass.

yosys> opt_dff

3.30.23. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..
Removed 0 unused cells and 12 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.30.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.
<suppressed ~9 debug messages>

3.30.26. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.30.27. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~17 debug messages>

yosys> opt_reduce -full

3.30.28. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
Performed a total of 0 changes.

yosys> opt_merge

3.30.29. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

yosys> opt_share

3.30.30. Executing OPT_SHARE pass.

yosys> opt_dff

3.30.31. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.32. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.30.33. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

3.30.34. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.30.35. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~17 debug messages>

yosys> opt_reduce -full

3.30.36. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
Performed a total of 0 changes.

yosys> opt_merge

3.30.37. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_share

3.30.38. Executing OPT_SHARE pass.

yosys> opt_dff

3.30.39. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.40. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..

yosys> opt_expr -full

3.30.41. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

3.30.42. Finished OPT passes. (There is nothing left to do.)

yosys> techmap -map +/techmap.v

3.31. Executing TECHMAP pass (map to technology primitives).

3.31.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.31.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $and.
No more expansions possible.
<suppressed ~114 debug messages>

yosys> opt -sat

3.32. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.
<suppressed ~11 debug messages>

yosys> opt_merge -nomux

3.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
<suppressed ~42 debug messages>
Removed a total of 14 cells.

yosys> opt_muxtree

3.32.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.32.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
Performed a total of 0 changes.

yosys> opt_merge

3.32.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.32.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.32.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..
Removed 0 unused cells and 10 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.
<suppressed ~2 debug messages>

3.32.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.32.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.32.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
Performed a total of 0 changes.

yosys> opt_merge

3.32.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.32.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.32.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..

yosys> opt_expr

3.32.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

3.32.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

3.33. Executing ABC pass (technology mapping using ABC).

3.33.1. Summary of detected clock domains:
  29 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4009, arst=!\rst_n, srst={ }
  40 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$3804, arst=!\rst_n, srst={ }
  1064 cells in clk=\clk, en=$auto$simplemap.cc:251:simplemap_eqne$15241 [1], arst=!\rst_n, srst={ }
  117 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$3793, arst=!\rst_n, srst={ }
  112 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$3782, arst=!\rst_n, srst={ }
  110 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$3773, arst=!\rst_n, srst={ }
  23 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$3766, arst=!\rst_n, srst={ }
  59 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$25661, arst=!\rst_n, srst={ }
  57 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$25505, arst=!\rst_n, srst={ }
  61 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$25318, arst=!\rst_n, srst={ }
  49 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$25133, arst=!\rst_n, srst={ }
  52 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$24979, arst=!\rst_n, srst={ }
  47 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$24824, arst=!\rst_n, srst={ }
  53 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$24653, arst=!\rst_n, srst={ }
  52 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$24483, arst=!\rst_n, srst={ }
  47 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$24330, arst=!\rst_n, srst={ }
  56 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$24201, arst=!\rst_n, srst={ }
  51 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$24069, arst=!\rst_n, srst={ }
  54 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$23915, arst=!\rst_n, srst={ }
  34 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$22769, arst=!\rst_n, srst={ }
  55 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$22614, arst=!\rst_n, srst={ }
  56 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$22118, arst=!\rst_n, srst={ }
  53 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$21794, arst=!\rst_n, srst={ }
  390 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4014, arst=!\rst_n, srst={ }
  239 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4025, arst=!\rst_n, srst={ }
  38 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$3912, arst=!\rst_n, srst={ }
  33 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$3894, arst=!\rst_n, srst={ }
  35 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$3903, arst=!\rst_n, srst={ }
  32 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$3921, arst=!\rst_n, srst={ }
  37 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$3930, arst=!\rst_n, srst={ }
  12 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$3937, arst=!\rst_n, srst={ }
  34 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$3813, arst=!\rst_n, srst={ }
  29 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$3822, arst=!\rst_n, srst={ }
  35 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$3831, arst=!\rst_n, srst={ }
  193 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$3945, arst=!\rst_n, srst={ }
  32 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$3840, arst=!\rst_n, srst={ }
  151 cells in clk=\clk, en=$auto$opt_dff.cc:194:make_patterns_logic$3940, arst=!\rst_n, srst={ }
  37 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$3885, arst=!\rst_n, srst={ }
  34 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$3876, arst=!\rst_n, srst={ }
  34 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$3867, arst=!\rst_n, srst={ }
  29 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$3858, arst=!\rst_n, srst={ }
  39 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$3849, arst=!\rst_n, srst={ }
  47 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$3761, arst=!\rst_n, srst={ }
  225 cells in clk=\clk, en=$flatten\cavlc_read_levels.$verific$n474$782, arst=!\rst_n, srst={ }
  64 cells in clk=\clk, en=$flatten\cavlc_read_levels.$verific$n231$765, arst=!\rst_n, srst={ }
  91 cells in clk=\clk, en=\cavlc_read_levels.level_abs_refresh, arst=!\rst_n, srst={ }

3.33.2. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4009, asynchronously reset by !\rst_n
Extracted 29 gates and 47 wires to a netlist network with 18 inputs and 7 outputs.

3.33.2.1. Executing ABC.

3.33.3. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3804, asynchronously reset by !\rst_n
Extracted 40 gates and 65 wires to a netlist network with 24 inputs and 15 outputs.

3.33.3.1. Executing ABC.

3.33.4. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$simplemap.cc:251:simplemap_eqne$15241 [1], asynchronously reset by !\rst_n
Extracted 1064 gates and 1296 wires to a netlist network with 230 inputs and 81 outputs.

3.33.4.1. Executing ABC.

3.33.5. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3793, asynchronously reset by !\rst_n
Extracted 117 gates and 139 wires to a netlist network with 21 inputs and 70 outputs.

3.33.5.1. Executing ABC.

3.33.6. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3782, asynchronously reset by !\rst_n
Extracted 112 gates and 133 wires to a netlist network with 19 inputs and 65 outputs.

3.33.6.1. Executing ABC.

3.33.7. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3773, asynchronously reset by !\rst_n
Extracted 110 gates and 126 wires to a netlist network with 14 inputs and 53 outputs.

3.33.7.1. Executing ABC.

3.33.8. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3766, asynchronously reset by !\rst_n
Extracted 23 gates and 32 wires to a netlist network with 9 inputs and 11 outputs.

3.33.8.1. Executing ABC.

3.33.9. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$25661, asynchronously reset by !\rst_n
Extracted 59 gates and 110 wires to a netlist network with 50 inputs and 28 outputs.

3.33.9.1. Executing ABC.

3.33.10. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$25505, asynchronously reset by !\rst_n
Extracted 57 gates and 102 wires to a netlist network with 44 inputs and 26 outputs.

3.33.10.1. Executing ABC.

3.33.11. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$25318, asynchronously reset by !\rst_n
Extracted 61 gates and 109 wires to a netlist network with 47 inputs and 24 outputs.

3.33.11.1. Executing ABC.

3.33.12. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$25133, asynchronously reset by !\rst_n
Extracted 49 gates and 90 wires to a netlist network with 40 inputs and 29 outputs.

3.33.12.1. Executing ABC.

3.33.13. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$24979, asynchronously reset by !\rst_n
Extracted 52 gates and 97 wires to a netlist network with 44 inputs and 23 outputs.

3.33.13.1. Executing ABC.

3.33.14. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$24824, asynchronously reset by !\rst_n
Extracted 47 gates and 87 wires to a netlist network with 39 inputs and 25 outputs.

3.33.14.1. Executing ABC.

3.33.15. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$24653, asynchronously reset by !\rst_n
Extracted 53 gates and 97 wires to a netlist network with 43 inputs and 26 outputs.

3.33.15.1. Executing ABC.

3.33.16. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$24483, asynchronously reset by !\rst_n
Extracted 52 gates and 97 wires to a netlist network with 44 inputs and 27 outputs.

3.33.16.1. Executing ABC.

3.33.17. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$24330, asynchronously reset by !\rst_n
Extracted 47 gates and 82 wires to a netlist network with 35 inputs and 30 outputs.

3.33.17.1. Executing ABC.

3.33.18. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$24201, asynchronously reset by !\rst_n
Extracted 56 gates and 100 wires to a netlist network with 43 inputs and 22 outputs.

3.33.18.1. Executing ABC.

3.33.19. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$24069, asynchronously reset by !\rst_n
Extracted 51 gates and 94 wires to a netlist network with 42 inputs and 25 outputs.

3.33.19.1. Executing ABC.

3.33.20. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$23915, asynchronously reset by !\rst_n
Extracted 54 gates and 97 wires to a netlist network with 42 inputs and 30 outputs.

3.33.20.1. Executing ABC.

3.33.21. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$22769, asynchronously reset by !\rst_n
Extracted 34 gates and 61 wires to a netlist network with 26 inputs and 22 outputs.

3.33.21.1. Executing ABC.

3.33.22. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$22614, asynchronously reset by !\rst_n
Extracted 55 gates and 99 wires to a netlist network with 43 inputs and 30 outputs.

3.33.22.1. Executing ABC.

3.33.23. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$22118, asynchronously reset by !\rst_n
Extracted 56 gates and 102 wires to a netlist network with 45 inputs and 29 outputs.

3.33.23.1. Executing ABC.

3.33.24. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$21794, asynchronously reset by !\rst_n
Extracted 53 gates and 98 wires to a netlist network with 44 inputs and 25 outputs.

3.33.24.1. Executing ABC.

3.33.25. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4014, asynchronously reset by !\rst_n
Extracted 390 gates and 541 wires to a netlist network with 149 inputs and 81 outputs.

3.33.25.1. Executing ABC.

3.33.26. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4025, asynchronously reset by !\rst_n
Extracted 239 gates and 358 wires to a netlist network with 118 inputs and 97 outputs.

3.33.26.1. Executing ABC.

3.33.27. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3912, asynchronously reset by !\rst_n
Extracted 38 gates and 62 wires to a netlist network with 23 inputs and 14 outputs.

3.33.27.1. Executing ABC.

3.33.28. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3894, asynchronously reset by !\rst_n
Extracted 33 gates and 56 wires to a netlist network with 22 inputs and 10 outputs.

3.33.28.1. Executing ABC.

3.33.29. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3903, asynchronously reset by !\rst_n
Extracted 35 gates and 58 wires to a netlist network with 22 inputs and 12 outputs.

3.33.29.1. Executing ABC.

3.33.30. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3921, asynchronously reset by !\rst_n
Extracted 32 gates and 53 wires to a netlist network with 20 inputs and 10 outputs.

3.33.30.1. Executing ABC.

3.33.31. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3930, asynchronously reset by !\rst_n
Extracted 37 gates and 62 wires to a netlist network with 24 inputs and 13 outputs.

3.33.31.1. Executing ABC.

3.33.32. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3937, asynchronously reset by !\rst_n
Extracted 12 gates and 24 wires to a netlist network with 12 inputs and 11 outputs.

3.33.32.1. Executing ABC.

3.33.33. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3813, asynchronously reset by !\rst_n
Extracted 34 gates and 57 wires to a netlist network with 22 inputs and 10 outputs.

3.33.33.1. Executing ABC.

3.33.34. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3822, asynchronously reset by !\rst_n
Extracted 29 gates and 49 wires to a netlist network with 19 inputs and 10 outputs.

3.33.34.1. Executing ABC.

3.33.35. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3831, asynchronously reset by !\rst_n
Extracted 35 gates and 60 wires to a netlist network with 24 inputs and 12 outputs.

3.33.35.1. Executing ABC.

3.33.36. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3945, asynchronously reset by !\rst_n
Extracted 193 gates and 266 wires to a netlist network with 71 inputs and 43 outputs.

3.33.36.1. Executing ABC.

3.33.37. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3840, asynchronously reset by !\rst_n
Extracted 32 gates and 55 wires to a netlist network with 22 inputs and 10 outputs.

3.33.37.1. Executing ABC.

3.33.38. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:194:make_patterns_logic$3940, asynchronously reset by !\rst_n
Extracted 151 gates and 196 wires to a netlist network with 43 inputs and 25 outputs.

3.33.38.1. Executing ABC.

3.33.39. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3885, asynchronously reset by !\rst_n
Extracted 37 gates and 64 wires to a netlist network with 26 inputs and 16 outputs.

3.33.39.1. Executing ABC.

3.33.40. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3876, asynchronously reset by !\rst_n
Extracted 34 gates and 58 wires to a netlist network with 23 inputs and 12 outputs.

3.33.40.1. Executing ABC.

3.33.41. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3867, asynchronously reset by !\rst_n
Extracted 34 gates and 56 wires to a netlist network with 21 inputs and 13 outputs.

3.33.41.1. Executing ABC.

3.33.42. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3858, asynchronously reset by !\rst_n
Extracted 29 gates and 49 wires to a netlist network with 19 inputs and 10 outputs.

3.33.42.1. Executing ABC.

3.33.43. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3849, asynchronously reset by !\rst_n
Extracted 39 gates and 68 wires to a netlist network with 28 inputs and 14 outputs.

3.33.43.1. Executing ABC.

3.33.44. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3761, asynchronously reset by !\rst_n
Extracted 47 gates and 59 wires to a netlist network with 11 inputs and 19 outputs.

3.33.44.1. Executing ABC.

3.33.45. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$54536$flatten\cavlc_read_levels.$verific$n474$782, asynchronously reset by !\rst_n
Extracted 225 gates and 265 wires to a netlist network with 38 inputs and 17 outputs.

3.33.45.1. Executing ABC.

3.33.46. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$54536$flatten\cavlc_read_levels.$verific$n231$765, asynchronously reset by !\rst_n
Extracted 64 gates and 82 wires to a netlist network with 16 inputs and 16 outputs.

3.33.46.1. Executing ABC.

3.33.47. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$54536$cavlc_read_levels.level_abs_refresh, asynchronously reset by !\rst_n
Extracted 91 gates and 107 wires to a netlist network with 15 inputs and 25 outputs.

3.33.47.1. Executing ABC.

yosys> abc -dff

3.34. Executing ABC pass (technology mapping using ABC).

3.34.1. Summary of detected clock domains:
  35 cells in clk=\clk, en=$abc$55921$auto$opt_dff.cc:219:make_patterns_logic$3885, arst=!\rst_n, srst={ }
  524 cells in clk=\clk, en=$abc$55751$auto$opt_dff.cc:194:make_patterns_logic$3940, arst=!\rst_n, srst={ }
  64 cells in clk=\clk, en=$abc$55469$auto$opt_dff.cc:219:make_patterns_logic$3813, arst=!\rst_n, srst={ }
  22 cells in clk=\clk, en=$abc$55439$auto$opt_dff.cc:219:make_patterns_logic$3937, arst=!\rst_n, srst={ }
  34 cells in clk=\clk, en=$abc$55396$auto$opt_dff.cc:219:make_patterns_logic$3930, arst=!\rst_n, srst={ }
  109 cells in clk=\clk, en=$abc$55586$auto$opt_dff.cc:219:make_patterns_logic$3945, arst=!\rst_n, srst={ }
  57 cells in clk=\clk, en=$abc$55359$auto$opt_dff.cc:219:make_patterns_logic$3921, arst=!\rst_n, srst={ }
  64 cells in clk=\clk, en=$abc$55966$auto$opt_dff.cc:219:make_patterns_logic$3876, arst=!\rst_n, srst={ }
  28 cells in clk=\clk, en=$abc$55507$auto$opt_dff.cc:219:make_patterns_logic$3822, arst=!\rst_n, srst={ }
  37 cells in clk=\clk, en=$abc$56130$auto$opt_dff.cc:219:make_patterns_logic$3761, arst=!\rst_n, srst={ }
  17 cells in clk=\clk, en=$abc$51848$auto$opt_dff.cc:219:make_patterns_logic$4009, arst=!\rst_n, srst={ }
  273 cells in clk=\clk, en=$abc$54892$auto$opt_dff.cc:219:make_patterns_logic$4025, arst=!\rst_n, srst={ }
  61 cells in clk=\clk, en=$abc$53453$auto$opt_dff.cc:219:make_patterns_logic$25505, arst=!\rst_n, srst={ }
  21 cells in clk=\clk, en=$abc$53334$auto$opt_dff.cc:219:make_patterns_logic$3766, arst=!\rst_n, srst={ }
  59 cells in clk=\clk, en=$abc$53520$auto$opt_dff.cc:219:make_patterns_logic$25318, arst=!\rst_n, srst={ }
  131 cells in clk=\clk, en=$abc$53979$auto$opt_dff.cc:219:make_patterns_logic$24330, arst=!\rst_n, srst={ }
  55 cells in clk=\clk, en=$abc$54113$auto$opt_dff.cc:219:make_patterns_logic$24069, arst=!\rst_n, srst={ }
  48 cells in clk=\clk, en=$abc$54470$auto$opt_dff.cc:219:make_patterns_logic$21794, arst=!\rst_n, srst={ }
  37 cells in clk=\clk, en=$abc$54177$auto$opt_dff.cc:219:make_patterns_logic$23915, arst=!\rst_n, srst={ }
  39 cells in clk=\clk, en=$abc$54036$auto$opt_dff.cc:219:make_patterns_logic$24201, arst=!\rst_n, srst={ }
  63 cells in clk=\clk, en=$abc$54536$flatten\cavlc_read_levels.$verific$n231$765, arst=!\rst_n, srst={ }
  39 cells in clk=\clk, en=$abc$53896$auto$opt_dff.cc:219:make_patterns_logic$24483, arst=!\rst_n, srst={ }
  26 cells in clk=\clk, en=$abc$54264$auto$opt_dff.cc:219:make_patterns_logic$22769, arst=!\rst_n, srst={ }
  60 cells in clk=\clk, en=$abc$54312$auto$opt_dff.cc:219:make_patterns_logic$22614, arst=!\rst_n, srst={ }
  38 cells in clk=\clk, en=$abc$54384$auto$opt_dff.cc:219:make_patterns_logic$22118, arst=!\rst_n, srst={ }
  257 cells in clk=\clk, en=$abc$54536$auto$opt_dff.cc:219:make_patterns_logic$4014, arst=!\rst_n, srst={ }
  30 cells in clk=\clk, en=$abc$55319$auto$opt_dff.cc:219:make_patterns_logic$3903, arst=!\rst_n, srst={ }
  32 cells in clk=\clk, en=$abc$55543$auto$opt_dff.cc:219:make_patterns_logic$3831, arst=!\rst_n, srst={ }
  162 cells in clk=\clk, en=$abc$54536$flatten\cavlc_read_levels.$verific$n474$782, arst=!\rst_n, srst={ }
  62 cells in clk=\clk, en=$abc$56007$auto$opt_dff.cc:219:make_patterns_logic$3867, arst=!\rst_n, srst={ }
  33 cells in clk=\clk, en=$abc$55711$auto$opt_dff.cc:219:make_patterns_logic$3840, arst=!\rst_n, srst={ }
  59 cells in clk=\clk, en=$abc$55280$auto$opt_dff.cc:219:make_patterns_logic$3894, arst=!\rst_n, srst={ }
  34 cells in clk=\clk, en=$abc$51873$auto$opt_dff.cc:219:make_patterns_logic$3804, arst=!\rst_n, srst={ }
  107 cells in clk=\clk, en=$abc$53231$auto$opt_dff.cc:219:make_patterns_logic$3773, arst=!\rst_n, srst={ }
  69 cells in clk=\clk, en=$abc$56084$auto$opt_dff.cc:219:make_patterns_logic$3849, arst=!\rst_n, srst={ }
  61 cells in clk=\clk, en=$abc$53584$auto$opt_dff.cc:219:make_patterns_logic$25133, arst=!\rst_n, srst={ }
  87 cells in clk=\clk, en=$abc$53121$auto$opt_dff.cc:219:make_patterns_logic$3782, arst=!\rst_n, srst={ }
  58 cells in clk=\clk, en=$abc$56048$auto$opt_dff.cc:219:make_patterns_logic$3858, arst=!\rst_n, srst={ }
  46 cells in clk=\clk, en=$abc$53814$auto$opt_dff.cc:219:make_patterns_logic$24653, arst=!\rst_n, srst={ }
  42 cells in clk=\clk, en=$abc$53731$auto$opt_dff.cc:219:make_patterns_logic$24824, arst=!\rst_n, srst={ }
  93 cells in clk=\clk, en=$abc$53002$auto$opt_dff.cc:219:make_patterns_logic$3793, arst=!\rst_n, srst={ }
  61 cells in clk=\clk, en=$abc$55238$auto$opt_dff.cc:219:make_patterns_logic$3912, arst=!\rst_n, srst={ }
  812 cells in clk=\clk, en=$abc$51918$auto$simplemap.cc:251:simplemap_eqne$15241[1], arst=!\rst_n, srst={ }
  39 cells in clk=\clk, en=$abc$53363$auto$opt_dff.cc:219:make_patterns_logic$25661, arst=!\rst_n, srst={ }
  41 cells in clk=\clk, en=$abc$53650$auto$opt_dff.cc:219:make_patterns_logic$24979, arst=!\rst_n, srst={ }
  78 cells in clk=\clk, en=$abc$54536$cavlc_read_levels.level_abs_refresh, arst=!\rst_n, srst={ }

3.34.2. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$55921$auto$opt_dff.cc:219:make_patterns_logic$3885, asynchronously reset by !\rst_n
Extracted 35 gates and 60 wires to a netlist network with 25 inputs and 14 outputs.

3.34.2.1. Executing ABC.

3.34.3. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$55751$auto$opt_dff.cc:194:make_patterns_logic$3940, asynchronously reset by !\rst_n
Extracted 524 gates and 605 wires to a netlist network with 81 inputs and 34 outputs.

3.34.3.1. Executing ABC.

3.34.4. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$55469$auto$opt_dff.cc:219:make_patterns_logic$3813, asynchronously reset by !\rst_n
Extracted 64 gates and 102 wires to a netlist network with 38 inputs and 15 outputs.

3.34.4.1. Executing ABC.

3.34.5. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$55439$auto$opt_dff.cc:219:make_patterns_logic$3937, asynchronously reset by !\rst_n
Extracted 22 gates and 34 wires to a netlist network with 12 inputs and 12 outputs.

3.34.5.1. Executing ABC.

3.34.6. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$55396$auto$opt_dff.cc:219:make_patterns_logic$3930, asynchronously reset by !\rst_n
Extracted 34 gates and 58 wires to a netlist network with 24 inputs and 14 outputs.

3.34.6.1. Executing ABC.

3.34.7. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$55586$auto$opt_dff.cc:219:make_patterns_logic$3945, asynchronously reset by !\rst_n
Extracted 109 gates and 164 wires to a netlist network with 55 inputs and 31 outputs.

3.34.7.1. Executing ABC.

3.34.8. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$55359$auto$opt_dff.cc:219:make_patterns_logic$3921, asynchronously reset by !\rst_n
Extracted 57 gates and 90 wires to a netlist network with 33 inputs and 12 outputs.

3.34.8.1. Executing ABC.

3.34.9. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$55966$auto$opt_dff.cc:219:make_patterns_logic$3876, asynchronously reset by !\rst_n
Extracted 64 gates and 101 wires to a netlist network with 37 inputs and 16 outputs.

3.34.9.1. Executing ABC.

3.34.10. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$55507$auto$opt_dff.cc:219:make_patterns_logic$3822, asynchronously reset by !\rst_n
Extracted 28 gates and 48 wires to a netlist network with 20 inputs and 12 outputs.

3.34.10.1. Executing ABC.

3.34.11. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$56130$auto$opt_dff.cc:219:make_patterns_logic$3761, asynchronously reset by !\rst_n
Extracted 37 gates and 47 wires to a netlist network with 10 inputs and 20 outputs.

3.34.11.1. Executing ABC.

3.34.12. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$51848$auto$opt_dff.cc:219:make_patterns_logic$4009, asynchronously reset by !\rst_n
Extracted 17 gates and 30 wires to a netlist network with 13 inputs and 4 outputs.

3.34.12.1. Executing ABC.

3.34.13. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$54892$auto$opt_dff.cc:219:make_patterns_logic$4025, asynchronously reset by !\rst_n
Extracted 273 gates and 419 wires to a netlist network with 146 inputs and 86 outputs.

3.34.13.1. Executing ABC.

3.34.14. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$53453$auto$opt_dff.cc:219:make_patterns_logic$25505, asynchronously reset by !\rst_n
Extracted 61 gates and 108 wires to a netlist network with 47 inputs and 26 outputs.

3.34.14.1. Executing ABC.

3.34.15. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$53334$auto$opt_dff.cc:219:make_patterns_logic$3766, asynchronously reset by !\rst_n
Extracted 21 gates and 31 wires to a netlist network with 10 inputs and 11 outputs.

3.34.15.1. Executing ABC.

3.34.16. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$53520$auto$opt_dff.cc:219:make_patterns_logic$25318, asynchronously reset by !\rst_n
Extracted 59 gates and 103 wires to a netlist network with 44 inputs and 22 outputs.

3.34.16.1. Executing ABC.

3.34.17. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$53979$auto$opt_dff.cc:219:make_patterns_logic$24330, asynchronously reset by !\rst_n
Extracted 131 gates and 207 wires to a netlist network with 76 inputs and 31 outputs.

3.34.17.1. Executing ABC.

3.34.18. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$54113$auto$opt_dff.cc:219:make_patterns_logic$24069, asynchronously reset by !\rst_n
Extracted 55 gates and 98 wires to a netlist network with 43 inputs and 28 outputs.

3.34.18.1. Executing ABC.

3.34.19. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$54470$auto$opt_dff.cc:219:make_patterns_logic$21794, asynchronously reset by !\rst_n
Extracted 48 gates and 90 wires to a netlist network with 42 inputs and 24 outputs.

3.34.19.1. Executing ABC.

3.34.20. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$54177$auto$opt_dff.cc:219:make_patterns_logic$23915, asynchronously reset by !\rst_n
Extracted 37 gates and 62 wires to a netlist network with 25 inputs and 22 outputs.

3.34.20.1. Executing ABC.

3.34.21. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$54036$auto$opt_dff.cc:219:make_patterns_logic$24201, asynchronously reset by !\rst_n
Extracted 39 gates and 63 wires to a netlist network with 24 inputs and 23 outputs.

3.34.21.1. Executing ABC.

3.34.22. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$54536$flatten\cavlc_read_levels.$verific$n231$765, asynchronously reset by !\rst_n
Extracted 63 gates and 84 wires to a netlist network with 21 inputs and 32 outputs.

3.34.22.1. Executing ABC.

3.34.23. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$53896$auto$opt_dff.cc:219:make_patterns_logic$24483, asynchronously reset by !\rst_n
Extracted 39 gates and 70 wires to a netlist network with 31 inputs and 22 outputs.

3.34.23.1. Executing ABC.

3.34.24. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$54264$auto$opt_dff.cc:219:make_patterns_logic$22769, asynchronously reset by !\rst_n
Extracted 26 gates and 50 wires to a netlist network with 24 inputs and 17 outputs.

3.34.24.1. Executing ABC.

3.34.25. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$54312$auto$opt_dff.cc:219:make_patterns_logic$22614, asynchronously reset by !\rst_n
Extracted 60 gates and 104 wires to a netlist network with 44 inputs and 26 outputs.

3.34.25.1. Executing ABC.

3.34.26. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$54384$auto$opt_dff.cc:219:make_patterns_logic$22118, asynchronously reset by !\rst_n
Extracted 38 gates and 62 wires to a netlist network with 24 inputs and 19 outputs.

3.34.26.1. Executing ABC.

3.34.27. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$54536$auto$opt_dff.cc:219:make_patterns_logic$4014, asynchronously reset by !\rst_n
Extracted 257 gates and 371 wires to a netlist network with 114 inputs and 64 outputs.

3.34.27.1. Executing ABC.

3.34.28. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$55319$auto$opt_dff.cc:219:make_patterns_logic$3903, asynchronously reset by !\rst_n
Extracted 30 gates and 52 wires to a netlist network with 22 inputs and 12 outputs.

3.34.28.1. Executing ABC.

3.34.29. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$55543$auto$opt_dff.cc:219:make_patterns_logic$3831, asynchronously reset by !\rst_n
Extracted 32 gates and 55 wires to a netlist network with 23 inputs and 11 outputs.

3.34.29.1. Executing ABC.

3.34.30. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$54536$flatten\cavlc_read_levels.$verific$n474$782, asynchronously reset by !\rst_n
Extracted 162 gates and 201 wires to a netlist network with 39 inputs and 18 outputs.

3.34.30.1. Executing ABC.

3.34.31. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$56007$auto$opt_dff.cc:219:make_patterns_logic$3867, asynchronously reset by !\rst_n
Extracted 62 gates and 96 wires to a netlist network with 34 inputs and 16 outputs.

3.34.31.1. Executing ABC.

3.34.32. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$55711$auto$opt_dff.cc:219:make_patterns_logic$3840, asynchronously reset by !\rst_n
Extracted 33 gates and 56 wires to a netlist network with 23 inputs and 13 outputs.

3.34.32.1. Executing ABC.

3.34.33. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$55280$auto$opt_dff.cc:219:make_patterns_logic$3894, asynchronously reset by !\rst_n
Extracted 59 gates and 94 wires to a netlist network with 35 inputs and 12 outputs.

3.34.33.1. Executing ABC.

3.34.34. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$51873$auto$opt_dff.cc:219:make_patterns_logic$3804, asynchronously reset by !\rst_n
Extracted 34 gates and 58 wires to a netlist network with 24 inputs and 14 outputs.

3.34.34.1. Executing ABC.

3.34.35. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$53231$auto$opt_dff.cc:219:make_patterns_logic$3773, asynchronously reset by !\rst_n
Extracted 107 gates and 121 wires to a netlist network with 14 inputs and 53 outputs.

3.34.35.1. Executing ABC.

3.34.36. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$56084$auto$opt_dff.cc:219:make_patterns_logic$3849, asynchronously reset by !\rst_n
Extracted 69 gates and 110 wires to a netlist network with 41 inputs and 16 outputs.

3.34.36.1. Executing ABC.

3.34.37. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$53584$auto$opt_dff.cc:219:make_patterns_logic$25133, asynchronously reset by !\rst_n
Extracted 61 gates and 108 wires to a netlist network with 47 inputs and 38 outputs.

3.34.37.1. Executing ABC.

3.34.38. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$53121$auto$opt_dff.cc:219:make_patterns_logic$3782, asynchronously reset by !\rst_n
Extracted 87 gates and 106 wires to a netlist network with 19 inputs and 63 outputs.

3.34.38.1. Executing ABC.

3.34.39. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$56048$auto$opt_dff.cc:219:make_patterns_logic$3858, asynchronously reset by !\rst_n
Extracted 58 gates and 91 wires to a netlist network with 33 inputs and 12 outputs.

3.34.39.1. Executing ABC.

3.34.40. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$53814$auto$opt_dff.cc:219:make_patterns_logic$24653, asynchronously reset by !\rst_n
Extracted 46 gates and 80 wires to a netlist network with 34 inputs and 22 outputs.

3.34.40.1. Executing ABC.

3.34.41. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$53731$auto$opt_dff.cc:219:make_patterns_logic$24824, asynchronously reset by !\rst_n
Extracted 42 gates and 70 wires to a netlist network with 28 inputs and 22 outputs.

3.34.41.1. Executing ABC.

3.34.42. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$53002$auto$opt_dff.cc:219:make_patterns_logic$3793, asynchronously reset by !\rst_n
Extracted 93 gates and 114 wires to a netlist network with 21 inputs and 68 outputs.

3.34.42.1. Executing ABC.

3.34.43. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$55238$auto$opt_dff.cc:219:make_patterns_logic$3912, asynchronously reset by !\rst_n
Extracted 61 gates and 97 wires to a netlist network with 36 inputs and 15 outputs.

3.34.43.1. Executing ABC.

3.34.44. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$51918$auto$simplemap.cc:251:simplemap_eqne$15241[1], asynchronously reset by !\rst_n
Extracted 812 gates and 1056 wires to a netlist network with 244 inputs and 126 outputs.

3.34.44.1. Executing ABC.

3.34.45. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$53363$auto$opt_dff.cc:219:make_patterns_logic$25661, asynchronously reset by !\rst_n
Extracted 39 gates and 70 wires to a netlist network with 31 inputs and 24 outputs.

3.34.45.1. Executing ABC.

3.34.46. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$53650$auto$opt_dff.cc:219:make_patterns_logic$24979, asynchronously reset by !\rst_n
Extracted 41 gates and 73 wires to a netlist network with 32 inputs and 28 outputs.

3.34.46.1. Executing ABC.

3.34.47. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$58648$abc$54536$cavlc_read_levels.level_abs_refresh, asynchronously reset by !\rst_n
Extracted 78 gates and 98 wires to a netlist network with 20 inputs and 30 outputs.

3.34.47.1. Executing ABC.

yosys> abc -dff

3.35. Executing ABC pass (technology mapping using ABC).

3.35.1. Summary of detected clock domains:
  53 cells in clk=\clk, en=$abc$60926$abc$53650$auto$opt_dff.cc:219:make_patterns_logic$24979, arst=!\rst_n, srst={ }
  512 cells in clk=\clk, en=$abc$56524$abc$55751$auto$opt_dff.cc:194:make_patterns_logic$3940, arst=!\rst_n, srst={ }
  53 cells in clk=\clk, en=$abc$57000$abc$55469$auto$opt_dff.cc:219:make_patterns_logic$3813, arst=!\rst_n, srst={ }
  21 cells in clk=\clk, en=$abc$57066$abc$55439$auto$opt_dff.cc:219:make_patterns_logic$3937, arst=!\rst_n, srst={ }
  103 cells in clk=\clk, en=$abc$57142$abc$55586$auto$opt_dff.cc:219:make_patterns_logic$3945, arst=!\rst_n, srst={ }
  48 cells in clk=\clk, en=$abc$57246$abc$55359$auto$opt_dff.cc:219:make_patterns_logic$3921, arst=!\rst_n, srst={ }
  52 cells in clk=\clk, en=$abc$57305$abc$55966$auto$opt_dff.cc:219:make_patterns_logic$3876, arst=!\rst_n, srst={ }
  29 cells in clk=\clk, en=$abc$57370$abc$55507$auto$opt_dff.cc:219:make_patterns_logic$3822, arst=!\rst_n, srst={ }
  17 cells in clk=\clk, en=$abc$57453$abc$51848$auto$opt_dff.cc:219:make_patterns_logic$4009, arst=!\rst_n, srst={ }
  251 cells in clk=\clk, en=$abc$57471$abc$54892$auto$opt_dff.cc:219:make_patterns_logic$4025, arst=!\rst_n, srst={ }
  22 cells in clk=\clk, en=$abc$57854$abc$53334$auto$opt_dff.cc:219:make_patterns_logic$3766, arst=!\rst_n, srst={ }
  42 cells in clk=\clk, en=$abc$57882$abc$53520$auto$opt_dff.cc:219:make_patterns_logic$25318, arst=!\rst_n, srst={ }
  155 cells in clk=\clk, en=$abc$57962$abc$53979$auto$opt_dff.cc:219:make_patterns_logic$24330, arst=!\rst_n, srst={ }
  47 cells in clk=\clk, en=$abc$58102$abc$54113$auto$opt_dff.cc:219:make_patterns_logic$24069, arst=!\rst_n, srst={ }
  32 cells in clk=\clk, en=$abc$57098$abc$55396$auto$opt_dff.cc:219:make_patterns_logic$3930, arst=!\rst_n, srst={ }
  60 cells in clk=\clk, en=$abc$57786$abc$53453$auto$opt_dff.cc:219:make_patterns_logic$25505, arst=!\rst_n, srst={ }
  40 cells in clk=\clk, en=$abc$57408$abc$56130$auto$opt_dff.cc:219:make_patterns_logic$3761, arst=!\rst_n, srst={ }
  39 cells in clk=\clk, en=$abc$58190$abc$54470$auto$opt_dff.cc:219:make_patterns_logic$21794, arst=!\rst_n, srst={ }
  40 cells in clk=\clk, en=$abc$58272$abc$54177$auto$opt_dff.cc:219:make_patterns_logic$23915, arst=!\rst_n, srst={ }
  56 cells in clk=\clk, en=$abc$58372$abc$54536$flatten\cavlc_read_levels.$verific$n231$765, arst=!\rst_n, srst={ }
  39 cells in clk=\clk, en=$abc$58437$abc$53896$auto$opt_dff.cc:219:make_patterns_logic$24483, arst=!\rst_n, srst={ }
  24 cells in clk=\clk, en=$abc$58487$abc$54264$auto$opt_dff.cc:219:make_patterns_logic$22769, arst=!\rst_n, srst={ }
  64 cells in clk=\clk, en=$abc$58530$abc$54312$auto$opt_dff.cc:219:make_patterns_logic$22614, arst=!\rst_n, srst={ }
  51 cells in clk=\clk, en=$abc$58322$abc$54036$auto$opt_dff.cc:219:make_patterns_logic$24201, arst=!\rst_n, srst={ }
  47 cells in clk=\clk, en=$abc$58600$abc$54384$auto$opt_dff.cc:219:make_patterns_logic$22118, arst=!\rst_n, srst={ }
  276 cells in clk=\clk, en=$abc$58648$abc$54536$auto$opt_dff.cc:219:make_patterns_logic$4014, arst=!\rst_n, srst={ }
  62 cells in clk=\clk, en=$abc$58899$abc$55319$auto$opt_dff.cc:219:make_patterns_logic$3903, arst=!\rst_n, srst={ }
  35 cells in clk=\clk, en=$abc$56481$abc$55921$auto$opt_dff.cc:219:make_patterns_logic$3885, arst=!\rst_n, srst={ }
  66 cells in clk=\clk, en=$abc$58939$abc$55543$auto$opt_dff.cc:219:make_patterns_logic$3831, arst=!\rst_n, srst={ }
  166 cells in clk=\clk, en=$abc$58981$abc$54536$flatten\cavlc_read_levels.$verific$n474$782, arst=!\rst_n, srst={ }
  57 cells in clk=\clk, en=$abc$59142$abc$56007$auto$opt_dff.cc:219:make_patterns_logic$3867, arst=!\rst_n, srst={ }
  34 cells in clk=\clk, en=$abc$59206$abc$55711$auto$opt_dff.cc:219:make_patterns_logic$3840, arst=!\rst_n, srst={ }
  50 cells in clk=\clk, en=$abc$59249$abc$55280$auto$opt_dff.cc:219:make_patterns_logic$3894, arst=!\rst_n, srst={ }
  59 cells in clk=\clk, en=$abc$59310$abc$51873$auto$opt_dff.cc:219:make_patterns_logic$3804, arst=!\rst_n, srst={ }
  71 cells in clk=\clk, en=$abc$59354$abc$53231$auto$opt_dff.cc:219:make_patterns_logic$3773, arst=!\rst_n, srst={ }
  57 cells in clk=\clk, en=$abc$59465$abc$56084$auto$opt_dff.cc:219:make_patterns_logic$3849, arst=!\rst_n, srst={ }
  59 cells in clk=\clk, en=$abc$59533$abc$53584$auto$opt_dff.cc:219:make_patterns_logic$25133, arst=!\rst_n, srst={ }
  84 cells in clk=\clk, en=$abc$59608$abc$53121$auto$opt_dff.cc:219:make_patterns_logic$3782, arst=!\rst_n, srst={ }
  48 cells in clk=\clk, en=$abc$59710$abc$56048$auto$opt_dff.cc:219:make_patterns_logic$3858, arst=!\rst_n, srst={ }
  45 cells in clk=\clk, en=$abc$59768$abc$53814$auto$opt_dff.cc:219:make_patterns_logic$24653, arst=!\rst_n, srst={ }
  44 cells in clk=\clk, en=$abc$59818$abc$53731$auto$opt_dff.cc:219:make_patterns_logic$24824, arst=!\rst_n, srst={ }
  92 cells in clk=\clk, en=$abc$59871$abc$53002$auto$opt_dff.cc:219:make_patterns_logic$3793, arst=!\rst_n, srst={ }
  786 cells in clk=\clk, en=$abc$60045$abc$51918$auto$simplemap.cc:251:simplemap_eqne$15241[1], arst=!\rst_n, srst={ }
  48 cells in clk=\clk, en=$abc$60873$abc$53363$auto$opt_dff.cc:219:make_patterns_logic$25661, arst=!\rst_n, srst={ }
  53 cells in clk=\clk, en=$abc$59982$abc$55238$auto$opt_dff.cc:219:make_patterns_logic$3912, arst=!\rst_n, srst={ }
  79 cells in clk=\clk, en=$abc$58648$abc$54536$cavlc_read_levels.level_abs_refresh, arst=!\rst_n, srst={ }

3.35.2. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$60926$abc$53650$auto$opt_dff.cc:219:make_patterns_logic$24979, asynchronously reset by !\rst_n
Extracted 53 gates and 93 wires to a netlist network with 40 inputs and 28 outputs.

3.35.2.1. Executing ABC.

3.35.3. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$56524$abc$55751$auto$opt_dff.cc:194:make_patterns_logic$3940, asynchronously reset by !\rst_n
Extracted 512 gates and 583 wires to a netlist network with 71 inputs and 39 outputs.

3.35.3.1. Executing ABC.

3.35.4. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$57000$abc$55469$auto$opt_dff.cc:219:make_patterns_logic$3813, asynchronously reset by !\rst_n
Extracted 53 gates and 89 wires to a netlist network with 36 inputs and 13 outputs.

3.35.4.1. Executing ABC.

3.35.5. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$57066$abc$55439$auto$opt_dff.cc:219:make_patterns_logic$3937, asynchronously reset by !\rst_n
Extracted 21 gates and 33 wires to a netlist network with 12 inputs and 12 outputs.

3.35.5.1. Executing ABC.

3.35.6. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$57142$abc$55586$auto$opt_dff.cc:219:make_patterns_logic$3945, asynchronously reset by !\rst_n
Extracted 103 gates and 156 wires to a netlist network with 53 inputs and 30 outputs.

3.35.6.1. Executing ABC.

3.35.7. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$57246$abc$55359$auto$opt_dff.cc:219:make_patterns_logic$3921, asynchronously reset by !\rst_n
Extracted 48 gates and 81 wires to a netlist network with 33 inputs and 11 outputs.

3.35.7.1. Executing ABC.

3.35.8. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$57305$abc$55966$auto$opt_dff.cc:219:make_patterns_logic$3876, asynchronously reset by !\rst_n
Extracted 52 gates and 86 wires to a netlist network with 34 inputs and 13 outputs.

3.35.8.1. Executing ABC.

3.35.9. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$57370$abc$55507$auto$opt_dff.cc:219:make_patterns_logic$3822, asynchronously reset by !\rst_n
Extracted 29 gates and 49 wires to a netlist network with 20 inputs and 13 outputs.

3.35.9.1. Executing ABC.

3.35.10. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$57453$abc$51848$auto$opt_dff.cc:219:make_patterns_logic$4009, asynchronously reset by !\rst_n
Extracted 17 gates and 29 wires to a netlist network with 12 inputs and 5 outputs.

3.35.10.1. Executing ABC.

3.35.11. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$57471$abc$54892$auto$opt_dff.cc:219:make_patterns_logic$4025, asynchronously reset by !\rst_n
Extracted 251 gates and 418 wires to a netlist network with 167 inputs and 104 outputs.

3.35.11.1. Executing ABC.

3.35.12. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$57854$abc$53334$auto$opt_dff.cc:219:make_patterns_logic$3766, asynchronously reset by !\rst_n
Extracted 22 gates and 32 wires to a netlist network with 10 inputs and 12 outputs.

3.35.12.1. Executing ABC.

3.35.13. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$57882$abc$53520$auto$opt_dff.cc:219:make_patterns_logic$25318, asynchronously reset by !\rst_n
Extracted 42 gates and 71 wires to a netlist network with 29 inputs and 21 outputs.

3.35.13.1. Executing ABC.

3.35.14. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$57962$abc$53979$auto$opt_dff.cc:219:make_patterns_logic$24330, asynchronously reset by !\rst_n
Extracted 155 gates and 243 wires to a netlist network with 88 inputs and 32 outputs.

3.35.14.1. Executing ABC.

3.35.15. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$58102$abc$54113$auto$opt_dff.cc:219:make_patterns_logic$24069, asynchronously reset by !\rst_n
Extracted 47 gates and 74 wires to a netlist network with 27 inputs and 26 outputs.

3.35.15.1. Executing ABC.

3.35.16. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$57098$abc$55396$auto$opt_dff.cc:219:make_patterns_logic$3930, asynchronously reset by !\rst_n
Extracted 32 gates and 56 wires to a netlist network with 24 inputs and 12 outputs.

3.35.16.1. Executing ABC.

3.35.17. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$57786$abc$53453$auto$opt_dff.cc:219:make_patterns_logic$25505, asynchronously reset by !\rst_n
Extracted 60 gates and 104 wires to a netlist network with 44 inputs and 27 outputs.

3.35.17.1. Executing ABC.

3.35.18. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$57408$abc$56130$auto$opt_dff.cc:219:make_patterns_logic$3761, asynchronously reset by !\rst_n
Extracted 40 gates and 50 wires to a netlist network with 10 inputs and 19 outputs.

3.35.18.1. Executing ABC.

3.35.19. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$58190$abc$54470$auto$opt_dff.cc:219:make_patterns_logic$21794, asynchronously reset by !\rst_n
Extracted 39 gates and 65 wires to a netlist network with 26 inputs and 23 outputs.

3.35.19.1. Executing ABC.

3.35.20. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$58272$abc$54177$auto$opt_dff.cc:219:make_patterns_logic$23915, asynchronously reset by !\rst_n
Extracted 40 gates and 65 wires to a netlist network with 25 inputs and 20 outputs.

3.35.20.1. Executing ABC.

3.35.21. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$58372$abc$54536$flatten\cavlc_read_levels.$verific$n231$765, asynchronously reset by !\rst_n
Extracted 56 gates and 76 wires to a netlist network with 20 inputs and 28 outputs.

3.35.21.1. Executing ABC.

3.35.22. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$58437$abc$53896$auto$opt_dff.cc:219:make_patterns_logic$24483, asynchronously reset by !\rst_n
Extracted 39 gates and 64 wires to a netlist network with 25 inputs and 27 outputs.

3.35.22.1. Executing ABC.

3.35.23. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$58487$abc$54264$auto$opt_dff.cc:219:make_patterns_logic$22769, asynchronously reset by !\rst_n
Extracted 24 gates and 47 wires to a netlist network with 23 inputs and 13 outputs.

3.35.23.1. Executing ABC.

3.35.24. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$58530$abc$54312$auto$opt_dff.cc:219:make_patterns_logic$22614, asynchronously reset by !\rst_n
Extracted 64 gates and 107 wires to a netlist network with 43 inputs and 25 outputs.

3.35.24.1. Executing ABC.

3.35.25. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$58322$abc$54036$auto$opt_dff.cc:219:make_patterns_logic$24201, asynchronously reset by !\rst_n
Extracted 51 gates and 80 wires to a netlist network with 29 inputs and 28 outputs.

3.35.25.1. Executing ABC.

3.35.26. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$58600$abc$54384$auto$opt_dff.cc:219:make_patterns_logic$22118, asynchronously reset by !\rst_n
Extracted 47 gates and 73 wires to a netlist network with 26 inputs and 21 outputs.

3.35.26.1. Executing ABC.

3.35.27. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$58648$abc$54536$auto$opt_dff.cc:219:make_patterns_logic$4014, asynchronously reset by !\rst_n
Extracted 276 gates and 406 wires to a netlist network with 130 inputs and 72 outputs.

3.35.27.1. Executing ABC.

3.35.28. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$58899$abc$55319$auto$opt_dff.cc:219:make_patterns_logic$3903, asynchronously reset by !\rst_n
Extracted 62 gates and 98 wires to a netlist network with 36 inputs and 15 outputs.

3.35.28.1. Executing ABC.

3.35.29. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$56481$abc$55921$auto$opt_dff.cc:219:make_patterns_logic$3885, asynchronously reset by !\rst_n
Extracted 35 gates and 60 wires to a netlist network with 25 inputs and 15 outputs.

3.35.29.1. Executing ABC.

3.35.30. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$58939$abc$55543$auto$opt_dff.cc:219:make_patterns_logic$3831, asynchronously reset by !\rst_n
Extracted 66 gates and 106 wires to a netlist network with 40 inputs and 14 outputs.

3.35.30.1. Executing ABC.

3.35.31. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$58981$abc$54536$flatten\cavlc_read_levels.$verific$n474$782, asynchronously reset by !\rst_n
Extracted 166 gates and 207 wires to a netlist network with 41 inputs and 17 outputs.

3.35.31.1. Executing ABC.

3.35.32. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$59142$abc$56007$auto$opt_dff.cc:219:make_patterns_logic$3867, asynchronously reset by !\rst_n
Extracted 57 gates and 93 wires to a netlist network with 36 inputs and 15 outputs.

3.35.32.1. Executing ABC.

3.35.33. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$59206$abc$55711$auto$opt_dff.cc:219:make_patterns_logic$3840, asynchronously reset by !\rst_n
Extracted 34 gates and 59 wires to a netlist network with 25 inputs and 13 outputs.

3.35.33.1. Executing ABC.

3.35.34. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$59249$abc$55280$auto$opt_dff.cc:219:make_patterns_logic$3894, asynchronously reset by !\rst_n
Extracted 50 gates and 83 wires to a netlist network with 33 inputs and 12 outputs.

3.35.34.1. Executing ABC.

3.35.35. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$59310$abc$51873$auto$opt_dff.cc:219:make_patterns_logic$3804, asynchronously reset by !\rst_n
Extracted 59 gates and 94 wires to a netlist network with 35 inputs and 12 outputs.

3.35.35.1. Executing ABC.

3.35.36. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$59354$abc$53231$auto$opt_dff.cc:219:make_patterns_logic$3773, asynchronously reset by !\rst_n
Extracted 71 gates and 85 wires to a netlist network with 14 inputs and 52 outputs.

3.35.36.1. Executing ABC.

3.35.37. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$59465$abc$56084$auto$opt_dff.cc:219:make_patterns_logic$3849, asynchronously reset by !\rst_n
Extracted 57 gates and 96 wires to a netlist network with 39 inputs and 14 outputs.

3.35.37.1. Executing ABC.

3.35.38. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$59533$abc$53584$auto$opt_dff.cc:219:make_patterns_logic$25133, asynchronously reset by !\rst_n
Extracted 59 gates and 102 wires to a netlist network with 43 inputs and 30 outputs.

3.35.38.1. Executing ABC.

3.35.39. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$59608$abc$53121$auto$opt_dff.cc:219:make_patterns_logic$3782, asynchronously reset by !\rst_n
Extracted 84 gates and 104 wires to a netlist network with 20 inputs and 60 outputs.

3.35.39.1. Executing ABC.

3.35.40. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$59710$abc$56048$auto$opt_dff.cc:219:make_patterns_logic$3858, asynchronously reset by !\rst_n
Extracted 48 gates and 79 wires to a netlist network with 31 inputs and 11 outputs.

3.35.40.1. Executing ABC.

3.35.41. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$59768$abc$53814$auto$opt_dff.cc:219:make_patterns_logic$24653, asynchronously reset by !\rst_n
Extracted 45 gates and 75 wires to a netlist network with 30 inputs and 26 outputs.

3.35.41.1. Executing ABC.

3.35.42. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$59818$abc$53731$auto$opt_dff.cc:219:make_patterns_logic$24824, asynchronously reset by !\rst_n
Extracted 44 gates and 71 wires to a netlist network with 27 inputs and 24 outputs.

3.35.42.1. Executing ABC.

3.35.43. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$59871$abc$53002$auto$opt_dff.cc:219:make_patterns_logic$3793, asynchronously reset by !\rst_n
Extracted 92 gates and 113 wires to a netlist network with 21 inputs and 67 outputs.

3.35.43.1. Executing ABC.

3.35.44. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$63155$abc$60045$abc$51918$auto$simplemap.cc:251:simplemap_eqne$15241[1], asynchronously reset by !\rst_n
Extracted 786 gates and 1018 wires to a netlist network with 232 inputs and 100 outputs.

3.35.44.1. Executing ABC.

3.35.45. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$60873$abc$53363$auto$opt_dff.cc:219:make_patterns_logic$25661, asynchronously reset by !\rst_n
Extracted 48 gates and 80 wires to a netlist network with 32 inputs and 28 outputs.

3.35.45.1. Executing ABC.

3.35.46. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$59982$abc$55238$auto$opt_dff.cc:219:make_patterns_logic$3912, asynchronously reset by !\rst_n
Extracted 53 gates and 89 wires to a netlist network with 36 inputs and 14 outputs.

3.35.46.1. Executing ABC.

3.35.47. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$63155$abc$58648$abc$54536$cavlc_read_levels.level_abs_refresh, asynchronously reset by !\rst_n
Extracted 79 gates and 100 wires to a netlist network with 21 inputs and 30 outputs.

3.35.47.1. Executing ABC.

yosys> abc -dff

3.36. Executing ABC pass (technology mapping using ABC).

3.36.1. Summary of detected clock domains:
  56 cells in clk=\clk, en=$abc$65446$abc$59982$abc$55238$auto$opt_dff.cc:219:make_patterns_logic$3912, arst=!\rst_n, srst={ }
  497 cells in clk=\clk, en=$abc$61127$abc$56524$abc$55751$auto$opt_dff.cc:194:make_patterns_logic$3940, arst=!\rst_n, srst={ }
  50 cells in clk=\clk, en=$abc$61625$abc$57000$abc$55469$auto$opt_dff.cc:219:make_patterns_logic$3813, arst=!\rst_n, srst={ }
  106 cells in clk=\clk, en=$abc$61718$abc$57142$abc$55586$auto$opt_dff.cc:219:make_patterns_logic$3945, arst=!\rst_n, srst={ }
  48 cells in clk=\clk, en=$abc$61823$abc$57246$abc$55359$auto$opt_dff.cc:219:make_patterns_logic$3921, arst=!\rst_n, srst={ }
  52 cells in clk=\clk, en=$abc$61881$abc$57305$abc$55966$auto$opt_dff.cc:219:make_patterns_logic$3876, arst=!\rst_n, srst={ }
  48 cells in clk=\clk, en=$abc$61069$abc$60926$abc$53650$auto$opt_dff.cc:219:make_patterns_logic$24979, arst=!\rst_n, srst={ }
  21 cells in clk=\clk, en=$abc$61687$abc$57066$abc$55439$auto$opt_dff.cc:219:make_patterns_logic$3937, arst=!\rst_n, srst={ }
  15 cells in clk=\clk, en=$abc$61981$abc$57453$abc$51848$auto$opt_dff.cc:219:make_patterns_logic$4009, arst=!\rst_n, srst={ }
  237 cells in clk=\clk, en=$abc$61999$abc$57471$abc$54892$auto$opt_dff.cc:219:make_patterns_logic$4025, arst=!\rst_n, srst={ }
  21 cells in clk=\clk, en=$abc$62257$abc$57854$abc$53334$auto$opt_dff.cc:219:make_patterns_logic$3766, arst=!\rst_n, srst={ }
  42 cells in clk=\clk, en=$abc$62286$abc$57882$abc$53520$auto$opt_dff.cc:219:make_patterns_logic$25318, arst=!\rst_n, srst={ }
  168 cells in clk=\clk, en=$abc$62337$abc$57962$abc$53979$auto$opt_dff.cc:219:make_patterns_logic$24330, arst=!\rst_n, srst={ }
  48 cells in clk=\clk, en=$abc$62498$abc$58102$abc$54113$auto$opt_dff.cc:219:make_patterns_logic$24069, arst=!\rst_n, srst={ }
  65 cells in clk=\clk, en=$abc$62553$abc$57098$abc$55396$auto$opt_dff.cc:219:make_patterns_logic$3930, arst=!\rst_n, srst={ }
  66 cells in clk=\clk, en=$abc$62595$abc$57786$abc$53453$auto$opt_dff.cc:219:make_patterns_logic$25505, arst=!\rst_n, srst={ }
  36 cells in clk=\clk, en=$abc$62664$abc$57408$abc$56130$auto$opt_dff.cc:219:make_patterns_logic$3761, arst=!\rst_n, srst={ }
  41 cells in clk=\clk, en=$abc$62711$abc$58190$abc$54470$auto$opt_dff.cc:219:make_patterns_logic$21794, arst=!\rst_n, srst={ }
  48 cells in clk=\clk, en=$abc$62762$abc$58272$abc$54177$auto$opt_dff.cc:219:make_patterns_logic$23915, arst=!\rst_n, srst={ }
  53 cells in clk=\clk, en=$abc$62810$abc$58372$abc$54536$flatten\cavlc_read_levels.$verific$n231$765, arst=!\rst_n, srst={ }
  41 cells in clk=\clk, en=$abc$62870$abc$58437$abc$53896$auto$opt_dff.cc:219:make_patterns_logic$24483, arst=!\rst_n, srst={ }
  27 cells in clk=\clk, en=$abc$62925$abc$58487$abc$54264$auto$opt_dff.cc:219:make_patterns_logic$22769, arst=!\rst_n, srst={ }
  52 cells in clk=\clk, en=$abc$62964$abc$58530$abc$54312$auto$opt_dff.cc:219:make_patterns_logic$22614, arst=!\rst_n, srst={ }
  46 cells in clk=\clk, en=$abc$63050$abc$58322$abc$54036$auto$opt_dff.cc:219:make_patterns_logic$24201, arst=!\rst_n, srst={ }
  50 cells in clk=\clk, en=$abc$63105$abc$58600$abc$54384$auto$opt_dff.cc:219:make_patterns_logic$22118, arst=!\rst_n, srst={ }
  245 cells in clk=\clk, en=$abc$63155$abc$58648$abc$54536$auto$opt_dff.cc:219:make_patterns_logic$4014, arst=!\rst_n, srst={ }
  51 cells in clk=\clk, en=$abc$63423$abc$58899$abc$55319$auto$opt_dff.cc:219:make_patterns_logic$3903, arst=!\rst_n, srst={ }
  35 cells in clk=\clk, en=$abc$63486$abc$56481$abc$55921$auto$opt_dff.cc:219:make_patterns_logic$3885, arst=!\rst_n, srst={ }
  27 cells in clk=\clk, en=$abc$61942$abc$57370$abc$55507$auto$opt_dff.cc:219:make_patterns_logic$3822, arst=!\rst_n, srst={ }
  54 cells in clk=\clk, en=$abc$63530$abc$58939$abc$55543$auto$opt_dff.cc:219:make_patterns_logic$3831, arst=!\rst_n, srst={ }
  168 cells in clk=\clk, en=$abc$63598$abc$58981$abc$54536$flatten\cavlc_read_levels.$verific$n474$782, arst=!\rst_n, srst={ }
  52 cells in clk=\clk, en=$abc$63766$abc$59142$abc$56007$auto$opt_dff.cc:219:make_patterns_logic$3867, arst=!\rst_n, srst={ }
  63 cells in clk=\clk, en=$abc$63830$abc$59206$abc$55711$auto$opt_dff.cc:219:make_patterns_logic$3840, arst=!\rst_n, srst={ }
  51 cells in clk=\clk, en=$abc$63874$abc$59249$abc$55280$auto$opt_dff.cc:219:make_patterns_logic$3894, arst=!\rst_n, srst={ }
  51 cells in clk=\clk, en=$abc$63934$abc$59310$abc$51873$auto$opt_dff.cc:219:make_patterns_logic$3804, arst=!\rst_n, srst={ }
  70 cells in clk=\clk, en=$abc$63995$abc$59354$abc$53231$auto$opt_dff.cc:219:make_patterns_logic$3773, arst=!\rst_n, srst={ }
  55 cells in clk=\clk, en=$abc$64077$abc$59465$abc$56084$auto$opt_dff.cc:219:make_patterns_logic$3849, arst=!\rst_n, srst={ }
  42 cells in clk=\clk, en=$abc$64141$abc$59533$abc$53584$auto$opt_dff.cc:219:make_patterns_logic$25133, arst=!\rst_n, srst={ }
  84 cells in clk=\clk, en=$abc$64229$abc$59608$abc$53121$auto$opt_dff.cc:219:make_patterns_logic$3782, arst=!\rst_n, srst={ }
  47 cells in clk=\clk, en=$abc$64328$abc$59710$abc$56048$auto$opt_dff.cc:219:make_patterns_logic$3858, arst=!\rst_n, srst={ }
  42 cells in clk=\clk, en=$abc$64384$abc$59768$abc$53814$auto$opt_dff.cc:219:make_patterns_logic$24653, arst=!\rst_n, srst={ }
  49 cells in clk=\clk, en=$abc$64440$abc$59818$abc$53731$auto$opt_dff.cc:219:make_patterns_logic$24824, arst=!\rst_n, srst={ }
  802 cells in clk=\clk, en=$abc$63155$abc$60045$abc$51918$auto$simplemap.cc:251:simplemap_eqne$15241[1], arst=!\rst_n, srst={ }
  54 cells in clk=\clk, en=$abc$65389$abc$60873$abc$53363$auto$opt_dff.cc:219:make_patterns_logic$25661, arst=!\rst_n, srst={ }
  93 cells in clk=\clk, en=$abc$64495$abc$59871$abc$53002$auto$opt_dff.cc:219:make_patterns_logic$3793, arst=!\rst_n, srst={ }
  79 cells in clk=\clk, en=$abc$63155$abc$58648$abc$54536$cavlc_read_levels.level_abs_refresh, arst=!\rst_n, srst={ }

3.36.2. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$65446$abc$59982$abc$55238$auto$opt_dff.cc:219:make_patterns_logic$3912, asynchronously reset by !\rst_n
Extracted 56 gates and 93 wires to a netlist network with 37 inputs and 17 outputs.

3.36.2.1. Executing ABC.

3.36.3. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$61127$abc$56524$abc$55751$auto$opt_dff.cc:194:make_patterns_logic$3940, asynchronously reset by !\rst_n
Extracted 497 gates and 568 wires to a netlist network with 71 inputs and 38 outputs.

3.36.3.1. Executing ABC.

3.36.4. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$61625$abc$57000$abc$55469$auto$opt_dff.cc:219:make_patterns_logic$3813, asynchronously reset by !\rst_n
Extracted 50 gates and 84 wires to a netlist network with 34 inputs and 11 outputs.

3.36.4.1. Executing ABC.

3.36.5. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$61718$abc$57142$abc$55586$auto$opt_dff.cc:219:make_patterns_logic$3945, asynchronously reset by !\rst_n
Extracted 106 gates and 160 wires to a netlist network with 54 inputs and 30 outputs.

3.36.5.1. Executing ABC.

3.36.6. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$61823$abc$57246$abc$55359$auto$opt_dff.cc:219:make_patterns_logic$3921, asynchronously reset by !\rst_n
Extracted 48 gates and 81 wires to a netlist network with 33 inputs and 11 outputs.

3.36.6.1. Executing ABC.

3.36.7. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$61881$abc$57305$abc$55966$auto$opt_dff.cc:219:make_patterns_logic$3876, asynchronously reset by !\rst_n
Extracted 52 gates and 88 wires to a netlist network with 36 inputs and 13 outputs.

3.36.7.1. Executing ABC.

3.36.8. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$61069$abc$60926$abc$53650$auto$opt_dff.cc:219:make_patterns_logic$24979, asynchronously reset by !\rst_n
Extracted 48 gates and 81 wires to a netlist network with 33 inputs and 23 outputs.

3.36.8.1. Executing ABC.

3.36.9. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$61687$abc$57066$abc$55439$auto$opt_dff.cc:219:make_patterns_logic$3937, asynchronously reset by !\rst_n
Extracted 21 gates and 33 wires to a netlist network with 12 inputs and 12 outputs.

3.36.9.1. Executing ABC.

3.36.10. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$61981$abc$57453$abc$51848$auto$opt_dff.cc:219:make_patterns_logic$4009, asynchronously reset by !\rst_n
Extracted 15 gates and 28 wires to a netlist network with 13 inputs and 3 outputs.

3.36.10.1. Executing ABC.

3.36.11. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$61999$abc$57471$abc$54892$auto$opt_dff.cc:219:make_patterns_logic$4025, asynchronously reset by !\rst_n
Extracted 237 gates and 396 wires to a netlist network with 159 inputs and 100 outputs.

3.36.11.1. Executing ABC.

3.36.12. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$62257$abc$57854$abc$53334$auto$opt_dff.cc:219:make_patterns_logic$3766, asynchronously reset by !\rst_n
Extracted 21 gates and 31 wires to a netlist network with 10 inputs and 11 outputs.

3.36.12.1. Executing ABC.

3.36.13. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$62286$abc$57882$abc$53520$auto$opt_dff.cc:219:make_patterns_logic$25318, asynchronously reset by !\rst_n
Extracted 42 gates and 69 wires to a netlist network with 27 inputs and 22 outputs.

3.36.13.1. Executing ABC.

3.36.14. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$62337$abc$57962$abc$53979$auto$opt_dff.cc:219:make_patterns_logic$24330, asynchronously reset by !\rst_n
Extracted 168 gates and 265 wires to a netlist network with 97 inputs and 29 outputs.

3.36.14.1. Executing ABC.

3.36.15. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$62498$abc$58102$abc$54113$auto$opt_dff.cc:219:make_patterns_logic$24069, asynchronously reset by !\rst_n
Extracted 48 gates and 76 wires to a netlist network with 28 inputs and 22 outputs.

3.36.15.1. Executing ABC.

3.36.16. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$62553$abc$57098$abc$55396$auto$opt_dff.cc:219:make_patterns_logic$3930, asynchronously reset by !\rst_n
Extracted 65 gates and 105 wires to a netlist network with 40 inputs and 16 outputs.

3.36.16.1. Executing ABC.

3.36.17. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$62595$abc$57786$abc$53453$auto$opt_dff.cc:219:make_patterns_logic$25505, asynchronously reset by !\rst_n
Extracted 66 gates and 111 wires to a netlist network with 45 inputs and 28 outputs.

3.36.17.1. Executing ABC.

3.36.18. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$62664$abc$57408$abc$56130$auto$opt_dff.cc:219:make_patterns_logic$3761, asynchronously reset by !\rst_n
Extracted 36 gates and 46 wires to a netlist network with 10 inputs and 20 outputs.

3.36.18.1. Executing ABC.

3.36.19. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$62711$abc$58190$abc$54470$auto$opt_dff.cc:219:make_patterns_logic$21794, asynchronously reset by !\rst_n
Extracted 41 gates and 65 wires to a netlist network with 24 inputs and 20 outputs.

3.36.19.1. Executing ABC.

3.36.20. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$62762$abc$58272$abc$54177$auto$opt_dff.cc:219:make_patterns_logic$23915, asynchronously reset by !\rst_n
Extracted 48 gates and 77 wires to a netlist network with 29 inputs and 23 outputs.

3.36.20.1. Executing ABC.

3.36.21. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$62810$abc$58372$abc$54536$flatten\cavlc_read_levels.$verific$n231$765, asynchronously reset by !\rst_n
Extracted 53 gates and 71 wires to a netlist network with 18 inputs and 26 outputs.

3.36.21.1. Executing ABC.

3.36.22. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$62870$abc$58437$abc$53896$auto$opt_dff.cc:219:make_patterns_logic$24483, asynchronously reset by !\rst_n
Extracted 41 gates and 66 wires to a netlist network with 25 inputs and 24 outputs.

3.36.22.1. Executing ABC.

3.36.23. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$62925$abc$58487$abc$54264$auto$opt_dff.cc:219:make_patterns_logic$22769, asynchronously reset by !\rst_n
Extracted 27 gates and 48 wires to a netlist network with 21 inputs and 12 outputs.

3.36.23.1. Executing ABC.

3.36.24. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$62964$abc$58530$abc$54312$auto$opt_dff.cc:219:make_patterns_logic$22614, asynchronously reset by !\rst_n
Extracted 52 gates and 82 wires to a netlist network with 30 inputs and 21 outputs.

3.36.24.1. Executing ABC.

3.36.25. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$63050$abc$58322$abc$54036$auto$opt_dff.cc:219:make_patterns_logic$24201, asynchronously reset by !\rst_n
Extracted 46 gates and 73 wires to a netlist network with 27 inputs and 23 outputs.

3.36.25.1. Executing ABC.

3.36.26. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$63105$abc$58600$abc$54384$auto$opt_dff.cc:219:make_patterns_logic$22118, asynchronously reset by !\rst_n
Extracted 50 gates and 78 wires to a netlist network with 28 inputs and 23 outputs.

3.36.26.1. Executing ABC.

3.36.27. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$63155$abc$58648$abc$54536$auto$opt_dff.cc:219:make_patterns_logic$4014, asynchronously reset by !\rst_n
Extracted 245 gates and 370 wires to a netlist network with 125 inputs and 79 outputs.

3.36.27.1. Executing ABC.

3.36.28. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$63423$abc$58899$abc$55319$auto$opt_dff.cc:219:make_patterns_logic$3903, asynchronously reset by !\rst_n
Extracted 51 gates and 86 wires to a netlist network with 35 inputs and 13 outputs.

3.36.28.1. Executing ABC.

3.36.29. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$63486$abc$56481$abc$55921$auto$opt_dff.cc:219:make_patterns_logic$3885, asynchronously reset by !\rst_n
Extracted 35 gates and 60 wires to a netlist network with 25 inputs and 15 outputs.

3.36.29.1. Executing ABC.

3.36.30. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$61942$abc$57370$abc$55507$auto$opt_dff.cc:219:make_patterns_logic$3822, asynchronously reset by !\rst_n
Extracted 27 gates and 48 wires to a netlist network with 21 inputs and 12 outputs.

3.36.30.1. Executing ABC.

3.36.31. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$63530$abc$58939$abc$55543$auto$opt_dff.cc:219:make_patterns_logic$3831, asynchronously reset by !\rst_n
Extracted 54 gates and 90 wires to a netlist network with 36 inputs and 12 outputs.

3.36.31.1. Executing ABC.

3.36.32. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$63598$abc$58981$abc$54536$flatten\cavlc_read_levels.$verific$n474$782, asynchronously reset by !\rst_n
Extracted 168 gates and 209 wires to a netlist network with 41 inputs and 17 outputs.

3.36.32.1. Executing ABC.

3.36.33. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$63766$abc$59142$abc$56007$auto$opt_dff.cc:219:make_patterns_logic$3867, asynchronously reset by !\rst_n
Extracted 52 gates and 88 wires to a netlist network with 36 inputs and 14 outputs.

3.36.33.1. Executing ABC.

3.36.34. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$63830$abc$59206$abc$55711$auto$opt_dff.cc:219:make_patterns_logic$3840, asynchronously reset by !\rst_n
Extracted 63 gates and 101 wires to a netlist network with 38 inputs and 15 outputs.

3.36.34.1. Executing ABC.

3.36.35. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$63874$abc$59249$abc$55280$auto$opt_dff.cc:219:make_patterns_logic$3894, asynchronously reset by !\rst_n
Extracted 51 gates and 85 wires to a netlist network with 34 inputs and 12 outputs.

3.36.35.1. Executing ABC.

3.36.36. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$63934$abc$59310$abc$51873$auto$opt_dff.cc:219:make_patterns_logic$3804, asynchronously reset by !\rst_n
Extracted 51 gates and 85 wires to a netlist network with 34 inputs and 12 outputs.

3.36.36.1. Executing ABC.

3.36.37. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$63995$abc$59354$abc$53231$auto$opt_dff.cc:219:make_patterns_logic$3773, asynchronously reset by !\rst_n
Extracted 70 gates and 84 wires to a netlist network with 14 inputs and 51 outputs.

3.36.37.1. Executing ABC.

3.36.38. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$64077$abc$59465$abc$56084$auto$opt_dff.cc:219:make_patterns_logic$3849, asynchronously reset by !\rst_n
Extracted 55 gates and 92 wires to a netlist network with 37 inputs and 12 outputs.

3.36.38.1. Executing ABC.

3.36.39. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$64141$abc$59533$abc$53584$auto$opt_dff.cc:219:make_patterns_logic$25133, asynchronously reset by !\rst_n
Extracted 42 gates and 68 wires to a netlist network with 26 inputs and 24 outputs.

3.36.39.1. Executing ABC.

3.36.40. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$64229$abc$59608$abc$53121$auto$opt_dff.cc:219:make_patterns_logic$3782, asynchronously reset by !\rst_n
Extracted 84 gates and 104 wires to a netlist network with 20 inputs and 60 outputs.

3.36.40.1. Executing ABC.

3.36.41. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$64328$abc$59710$abc$56048$auto$opt_dff.cc:219:make_patterns_logic$3858, asynchronously reset by !\rst_n
Extracted 47 gates and 79 wires to a netlist network with 32 inputs and 12 outputs.

3.36.41.1. Executing ABC.

3.36.42. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$64384$abc$59768$abc$53814$auto$opt_dff.cc:219:make_patterns_logic$24653, asynchronously reset by !\rst_n
Extracted 42 gates and 69 wires to a netlist network with 27 inputs and 25 outputs.

3.36.42.1. Executing ABC.

3.36.43. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$64440$abc$59818$abc$53731$auto$opt_dff.cc:219:make_patterns_logic$24824, asynchronously reset by !\rst_n
Extracted 49 gates and 78 wires to a netlist network with 29 inputs and 28 outputs.

3.36.43.1. Executing ABC.

3.36.44. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$67706$abc$63155$abc$60045$abc$51918$auto$simplemap.cc:251:simplemap_eqne$15241[1], asynchronously reset by !\rst_n
Extracted 802 gates and 1046 wires to a netlist network with 244 inputs and 106 outputs.

3.36.44.1. Executing ABC.

3.36.45. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$65389$abc$60873$abc$53363$auto$opt_dff.cc:219:make_patterns_logic$25661, asynchronously reset by !\rst_n
Extracted 54 gates and 91 wires to a netlist network with 37 inputs and 26 outputs.

3.36.45.1. Executing ABC.

3.36.46. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$64495$abc$59871$abc$53002$auto$opt_dff.cc:219:make_patterns_logic$3793, asynchronously reset by !\rst_n
Extracted 93 gates and 114 wires to a netlist network with 21 inputs and 68 outputs.

3.36.46.1. Executing ABC.

3.36.47. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$67706$abc$63155$abc$58648$abc$54536$cavlc_read_levels.level_abs_refresh, asynchronously reset by !\rst_n
Extracted 79 gates and 100 wires to a netlist network with 21 inputs and 30 outputs.

3.36.47.1. Executing ABC.

yosys> opt_ffinv

3.37. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt -sat

3.38. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.38.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.
<suppressed ~31 debug messages>

yosys> opt_merge -nomux

3.38.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
<suppressed ~297 debug messages>
Removed a total of 99 cells.

yosys> opt_muxtree

3.38.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.38.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
Performed a total of 0 changes.

yosys> opt_merge

3.38.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.38.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.38.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..
Removed 0 unused cells and 23606 unused wires.
<suppressed ~56 debug messages>

yosys> opt_expr

3.38.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

3.38.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.38.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.38.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
Performed a total of 0 changes.

yosys> opt_merge

3.38.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.38.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.38.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..

yosys> opt_expr

3.38.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

3.38.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /home/users/temp_dir/yosys_bpSVv6/abc_tmp_1.scr

3.39. Executing ABC pass (technology mapping using ABC).

3.39.1. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Extracted 3661 gates and 3935 wires to a netlist network with 274 inputs and 310 outputs.

3.39.1.1. Executing ABC.
DE:   #PIs = 274  #Luts =  1039  Max Lvl =  15  Avg Lvl =   6.96  [   0.34 sec. at Pass 0]
DE:   #PIs = 274  #Luts =   795  Max Lvl =  17  Avg Lvl =   5.62  [   6.79 sec. at Pass 1]
DE:   #PIs = 274  #Luts =   784  Max Lvl =  14  Avg Lvl =   5.36  [   1.05 sec. at Pass 2]
DE:   #PIs = 274  #Luts =   781  Max Lvl =  14  Avg Lvl =   4.97  [   3.23 sec. at Pass 3]
DE:   #PIs = 274  #Luts =   764  Max Lvl =  14  Avg Lvl =   5.31  [   1.55 sec. at Pass 4]
DE:   #PIs = 274  #Luts =   761  Max Lvl =  16  Avg Lvl =   5.01  [   3.17 sec. at Pass 5]
DE:   #PIs = 274  #Luts =   757  Max Lvl =  14  Avg Lvl =   4.92  [   1.74 sec. at Pass 6]
DE:   #PIs = 274  #Luts =   755  Max Lvl =  13  Avg Lvl =   5.02  [   3.33 sec. at Pass 7]
DE:   #PIs = 274  #Luts =   751  Max Lvl =  12  Avg Lvl =   5.10  [   2.36 sec. at Pass 8]
DE:   #PIs = 274  #Luts =   749  Max Lvl =  16  Avg Lvl =   5.11  [   3.93 sec. at Pass 9]
DE:   #PIs = 274  #Luts =   743  Max Lvl =  14  Avg Lvl =   5.08  [   2.33 sec. at Pass 10]
DE:   #PIs = 274  #Luts =   743  Max Lvl =  14  Avg Lvl =   5.08  [   3.87 sec. at Pass 11]
DE:   #PIs = 274  #Luts =   742  Max Lvl =  12  Avg Lvl =   5.00  [   2.00 sec. at Pass 12]
DE:   #PIs = 274  #Luts =   742  Max Lvl =  12  Avg Lvl =   5.00  [   4.18 sec. at Pass 13]
DE:   #PIs = 274  #Luts =   738  Max Lvl =  13  Avg Lvl =   5.01  [   2.10 sec. at Pass 14]
DE:   #PIs = 274  #Luts =   737  Max Lvl =  14  Avg Lvl =   5.01  [   3.43 sec. at Pass 15]
DE:   #PIs = 274  #Luts =   735  Max Lvl =  12  Avg Lvl =   4.97  [   1.99 sec. at Pass 16]
DE:   #PIs = 274  #Luts =   735  Max Lvl =  12  Avg Lvl =   4.97  [   3.11 sec. at Pass 17]
DE:   #PIs = 274  #Luts =   735  Max Lvl =  12  Avg Lvl =   4.97  [   1.71 sec. at Pass 18]
DE:   #PIs = 274  #Luts =   735  Max Lvl =  12  Avg Lvl =   4.97  [   3.66 sec. at Pass 19]
DE:   #PIs = 274  #Luts =   732  Max Lvl =  13  Avg Lvl =   4.90  [   0.57 sec. at Pass 20]

yosys> opt

3.40. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.40.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

yosys> opt_merge -nomux

3.40.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.40.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.40.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
Performed a total of 0 changes.

yosys> opt_merge

3.40.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_dff

3.40.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.40.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..
Removed 0 unused cells and 3861 unused wires.
<suppressed ~9 debug messages>

yosys> opt_expr

3.40.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

3.40.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.40.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.40.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
Performed a total of 0 changes.

yosys> opt_merge

3.40.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_dff

3.40.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.40.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..

yosys> opt_expr

3.40.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

3.40.16. Finished OPT passes. (There is nothing left to do.)

yosys> opt_ffinv

3.41. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> stat

3.42. Printing statistics.

=== cavlc ===

   Number of wires:               1072
   Number of wire bits:           1794
   Number of public wires:         144
   Number of public wire bits:     866
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1122
     $_DFFE_PN0P_                  391
     $lut                          731


yosys> shregmap -minlen 8 -maxlen 20

3.43. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.44. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.45. Printing statistics.

=== cavlc ===

   Number of wires:               1072
   Number of wire bits:           1794
   Number of public wires:         144
   Number of public wire bits:     866
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1122
     $_DFFE_PN0P_                  391
     $lut                          731


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.46. Executing TECHMAP pass (map to technology primitives).

3.46.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.46.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.46.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFFE_PN0P_ for cells of type $_DFFE_PN0P_.
No more expansions possible.
<suppressed ~1258 debug messages>

yosys> opt_expr -mux_undef

3.47. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.
<suppressed ~18056 debug messages>

yosys> simplemap

3.48. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.49. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

yosys> opt_merge

3.50. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
<suppressed ~6612 debug messages>
Removed a total of 2204 cells.

yosys> opt_dff -nodffe -nosdff

3.51. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.52. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..
Removed 0 unused cells and 3376 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.53. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.53.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.
<suppressed ~551 debug messages>

yosys> opt_merge -nomux

3.53.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_muxtree

3.53.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.53.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
Performed a total of 0 changes.

yosys> opt_merge

3.53.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.53.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.53.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..
Removed 0 unused cells and 40 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.53.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

3.53.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.53.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.53.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
Performed a total of 0 changes.

yosys> opt_merge

3.53.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.53.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.53.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..

yosys> opt_expr

3.53.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

3.53.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /home/users/temp_dir/yosys_bpSVv6/abc_tmp_2.scr

3.54. Executing ABC pass (technology mapping using ABC).

3.54.1. Extracting gate netlist of module `\cavlc' to `<abc-temp-dir>/input.blif'..
Extracted 3467 gates and 3743 wires to a netlist network with 274 inputs and 309 outputs.

3.54.1.1. Executing ABC.
DE:   #PIs = 274  #Luts =   737  Max Lvl =  14  Avg Lvl =   4.94  [   0.31 sec. at Pass 0]
DE:   #PIs = 274  #Luts =   737  Max Lvl =  14  Avg Lvl =   4.94  [   9.38 sec. at Pass 1]
DE:   #PIs = 274  #Luts =   737  Max Lvl =  14  Avg Lvl =   4.94  [   1.71 sec. at Pass 2]
DE:   #PIs = 274  #Luts =   735  Max Lvl =  13  Avg Lvl =   4.93  [   2.50 sec. at Pass 3]
DE:   #PIs = 274  #Luts =   730  Max Lvl =  12  Avg Lvl =   4.97  [   1.54 sec. at Pass 4]
DE:   #PIs = 274  #Luts =   730  Max Lvl =  12  Avg Lvl =   4.97  [   2.65 sec. at Pass 5]
DE:   #PIs = 274  #Luts =   730  Max Lvl =  11  Avg Lvl =   5.05  [   1.34 sec. at Pass 6]
DE:   #PIs = 274  #Luts =   730  Max Lvl =  11  Avg Lvl =   5.05  [   2.73 sec. at Pass 7]
DE:   #PIs = 274  #Luts =   729  Max Lvl =  13  Avg Lvl =   4.98  [   1.52 sec. at Pass 8]
DE:   #PIs = 274  #Luts =   729  Max Lvl =  13  Avg Lvl =   4.98  [   2.72 sec. at Pass 9]
DE:   #PIs = 274  #Luts =   729  Max Lvl =  13  Avg Lvl =   4.98  [   1.46 sec. at Pass 10]
DE:   #PIs = 274  #Luts =   729  Max Lvl =  13  Avg Lvl =   4.98  [   2.04 sec. at Pass 11]
DE:   #PIs = 274  #Luts =   729  Max Lvl =  12  Avg Lvl =   5.04  [   0.37 sec. at Pass 12]

yosys> opt

3.55. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.55.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

yosys> opt_merge -nomux

3.55.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.55.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.55.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
Performed a total of 0 changes.

yosys> opt_merge

3.55.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_dff

3.55.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.55.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..
Removed 0 unused cells and 2866 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.55.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

3.55.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.55.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cavlc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.55.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cavlc.
Performed a total of 0 changes.

yosys> opt_merge

3.55.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cavlc'.
Removed a total of 0 cells.

yosys> opt_dff

3.55.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.55.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..

yosys> opt_expr

3.55.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module cavlc.

3.55.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.56. Executing HIERARCHY pass (managing design hierarchy).

3.56.1. Analyzing design hierarchy..
Top module:  \cavlc

3.56.2. Analyzing design hierarchy..
Top module:  \cavlc
Removed 0 unused modules.

yosys> stat

3.57. Printing statistics.

=== cavlc ===

   Number of wires:               1070
   Number of wire bits:           1792
   Number of public wires:         144
   Number of public wire bits:     866
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1120
     $lut                          729
     dffsre                        391


yosys> opt_clean -purge

3.58. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cavlc..
Removed 0 unused cells and 102 unused wires.
<suppressed ~102 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.59. Executing Verilog backend.
Dumping module `\cavlc'.

Warnings: 73 unique messages, 74 total
End of script. Logfile hash: 23a3b09678, CPU: user 43.44s system 1.68s, MEM: 85.14 MB peak
Yosys 0.18+10 (git sha1 8217e4c48, gcc 9.1.0 -fPIC -Os)
Time spent: 95% 6x abc (760 sec), 1% 62x opt_expr (11 sec), ...
real 161.26
user 731.52
sys 66.63
