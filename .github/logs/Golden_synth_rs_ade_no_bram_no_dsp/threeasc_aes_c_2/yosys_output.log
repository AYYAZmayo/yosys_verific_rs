
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.24
 Yosys 0.16+65 (git sha1 03bd62bb8, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.

yosys> verilog_defaults -add -I.

yosys> read -vhdl aes_lib.vhd dual_mem.vhd aes_enc.vhd aes_fsm_enc.vhd

yosys> verific -vhdl aes_lib.vhd dual_mem.vhd aes_enc.vhd aes_fsm_enc.vhd

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.
VERIFIC-INFO [VHDL-1504] default VHDL library search path is now "/home/users/aram/Workspace/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008"
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'aes_lib.vhd'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_1164' from file '/home/users/aram/Workspace/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_1164.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.standard' from file '/home/users/aram/Workspace/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/standard.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.textio' from file '/home/users/aram/Workspace/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/textio.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_arith' from file '/home/users/aram/Workspace/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_arith.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_unsigned' from file '/home/users/aram/Workspace/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_unsigned.vdb'
VERIFIC-INFO [VHDL-1014] aes_lib.vhd:11: analyzing package 'aes_lib'
VERIFIC-INFO [VHDL-1013] aes_lib.vhd:25: analyzing package body 'aes_lib'
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'dual_mem.vhd'
VERIFIC-INFO [VHDL-1012] dual_mem.vhd:20: analyzing entity 'dual_mem'
VERIFIC-INFO [VHDL-1010] dual_mem.vhd:33: analyzing architecture 'rtl'
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'aes_enc.vhd'
VERIFIC-INFO [VHDL-1012] aes_enc.vhd:24: analyzing entity 'aes_enc'
VERIFIC-INFO [VHDL-1010] aes_enc.vhd:32: analyzing architecture 'behavioral'
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'aes_fsm_enc.vhd'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.numeric_std' from file '/home/users/aram/Workspace/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/numeric_std.vdb'
VERIFIC-INFO [VHDL-1012] aes_fsm_enc.vhd:25: analyzing entity 'aes_fsm_enc'
VERIFIC-INFO [VHDL-1010] aes_fsm_enc.vhd:35: analyzing architecture 'behavioral'

yosys> synth_rs -top aes_fsm_enc -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.47

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\dsp_t1_sim'.
Generating RTLIL representation for module `\dsp_t1_20x18x64'.
Generating RTLIL representation for module `\dsp_t1_10x9x32'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top aes_fsm_enc

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VHDL-1067] aes_fsm_enc.vhd:25: processing 'aes_fsm_enc(Behavioral)'
VERIFIC-WARNING [VHDL-1251] aes_fsm_enc.vhd:102: 'key_data_1' should be on the sensitivity list of the process
VERIFIC-WARNING [VHDL-1251] aes_fsm_enc.vhd:109: 'key_data_1' should be on the sensitivity list of the process
VERIFIC-WARNING [VHDL-1251] aes_fsm_enc.vhd:111: 'block_out_s' should be on the sensitivity list of the process
VERIFIC-WARNING [VHDL-1251] aes_fsm_enc.vhd:117: 'key_data_1' should be on the sensitivity list of the process
VERIFIC-WARNING [VHDL-1251] aes_fsm_enc.vhd:118: 'block_out_s' should be on the sensitivity list of the process
VERIFIC-WARNING [VHDL-1251] aes_fsm_enc.vhd:120: 'count' should be on the sensitivity list of the process
VERIFIC-WARNING [VHDL-1613] aes_fsm_enc.vhd:135: incomplete sensitivity list specified; assuming completeness
VERIFIC-INFO [VHDL-1067] aes_enc.vhd:24: processing 'aes_enc(Behavioral)'
VERIFIC-INFO [VHDL-1067] dual_mem.vhd:20: processing 'dual_mem(rtl)'
VERIFIC-INFO [VHDL-1754] dual_mem.vhd:36: extracting RAM for identifier 'RAM'
VERIFIC-INFO [VHDL-1067] dual_mem.vhd:20: processing 'dual_mem(addr_length=4,data_length=128,n_addr=10)(rtl)'
VERIFIC-INFO [VHDL-1754] dual_mem.vhd:36: extracting RAM for identifier 'RAM'
Importing module aes_fsm_enc.
Importing module aes_enc(Behavioral).
Importing module dual_mem(rtl).
Importing module dual_mem(addr_length=4,data_length=128,n_addr=10)(rtl).

3.3.1. Analyzing design hierarchy..
Top module:  \aes_fsm_enc
Used module:     \dual_mem(addr_length=4,data_length=128,n_addr=10)(rtl)
Used module:     \aes_enc(Behavioral)
Used module:         \dual_mem(rtl)

3.3.2. Analyzing design hierarchy..
Top module:  \aes_fsm_enc
Used module:     \dual_mem(addr_length=4,data_length=128,n_addr=10)(rtl)
Used module:     \aes_enc(Behavioral)
Used module:         \dual_mem(rtl)
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_mux

3.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.8. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module dual_mem(addr_length=4,data_length=128,n_addr=10)(rtl).
Optimizing module dual_mem(rtl).
Optimizing module aes_enc(Behavioral).
Optimizing module aes_fsm_enc.
<suppressed ~5 debug messages>

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).
Deleting now unused module dual_mem(addr_length=4,data_length=128,n_addr=10)(rtl).
Deleting now unused module dual_mem(rtl).
Deleting now unused module aes_enc(Behavioral).
<suppressed ~10 debug messages>

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.
<suppressed ~9 debug messages>

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..
Removed 2 unused cells and 243 unused wires.
<suppressed ~106 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module aes_fsm_enc...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \aes_fsm_enc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \aes_fsm_enc.
Performed a total of 0 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $verific$state_reg$aes_fsm_enc.vhd:64$45 ($aldff) from module aes_fsm_enc.
Removing never-active async load on $verific$count_reg$aes_fsm_enc.vhd:150$73 ($aldff) from module aes_fsm_enc.
Removing never-active async load on $flatten\SUB_KEYS_DRAM.$verific$read_a_reg$dual_mem.vhd:52$474 ($aldff) from module aes_fsm_enc.
Removing never-active async load on $flatten\AES_ROUND_N.\S_BOX_DUAL_8.$verific$read_dpra_reg$dual_mem.vhd:52$450 ($aldff) from module aes_fsm_enc.
Removing never-active async load on $flatten\AES_ROUND_N.\S_BOX_DUAL_8.$verific$read_a_reg$dual_mem.vhd:52$449 ($aldff) from module aes_fsm_enc.
Removing never-active async load on $flatten\AES_ROUND_N.\S_BOX_DUAL_7.$verific$read_dpra_reg$dual_mem.vhd:52$450 ($aldff) from module aes_fsm_enc.
Removing never-active async load on $flatten\AES_ROUND_N.\S_BOX_DUAL_7.$verific$read_a_reg$dual_mem.vhd:52$449 ($aldff) from module aes_fsm_enc.
Removing never-active async load on $flatten\AES_ROUND_N.\S_BOX_DUAL_6.$verific$read_dpra_reg$dual_mem.vhd:52$450 ($aldff) from module aes_fsm_enc.
Removing never-active async load on $flatten\AES_ROUND_N.\S_BOX_DUAL_6.$verific$read_a_reg$dual_mem.vhd:52$449 ($aldff) from module aes_fsm_enc.
Removing never-active async load on $flatten\AES_ROUND_N.\S_BOX_DUAL_5.$verific$read_dpra_reg$dual_mem.vhd:52$450 ($aldff) from module aes_fsm_enc.
Removing never-active async load on $flatten\AES_ROUND_N.\S_BOX_DUAL_5.$verific$read_a_reg$dual_mem.vhd:52$449 ($aldff) from module aes_fsm_enc.
Removing never-active async load on $flatten\AES_ROUND_N.\S_BOX_DUAL_4.$verific$read_dpra_reg$dual_mem.vhd:52$450 ($aldff) from module aes_fsm_enc.
Removing never-active async load on $flatten\AES_ROUND_N.\S_BOX_DUAL_4.$verific$read_a_reg$dual_mem.vhd:52$449 ($aldff) from module aes_fsm_enc.
Removing never-active async load on $flatten\AES_ROUND_N.\S_BOX_DUAL_3.$verific$read_dpra_reg$dual_mem.vhd:52$450 ($aldff) from module aes_fsm_enc.
Removing never-active async load on $flatten\AES_ROUND_N.\S_BOX_DUAL_3.$verific$read_a_reg$dual_mem.vhd:52$449 ($aldff) from module aes_fsm_enc.
Removing never-active async load on $flatten\AES_ROUND_N.\S_BOX_DUAL_2.$verific$read_dpra_reg$dual_mem.vhd:52$450 ($aldff) from module aes_fsm_enc.
Removing never-active async load on $flatten\AES_ROUND_N.\S_BOX_DUAL_2.$verific$read_a_reg$dual_mem.vhd:52$449 ($aldff) from module aes_fsm_enc.
Removing never-active async load on $flatten\AES_ROUND_N.\S_BOX_DUAL_1.$verific$read_dpra_reg$dual_mem.vhd:52$450 ($aldff) from module aes_fsm_enc.
Removing never-active async load on $flatten\AES_ROUND_N.\S_BOX_DUAL_1.$verific$read_a_reg$dual_mem.vhd:52$449 ($aldff) from module aes_fsm_enc.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \aes_fsm_enc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \aes_fsm_enc.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

3.11.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \aes_fsm_enc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \aes_fsm_enc.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $verific$count_reg$aes_fsm_enc.vhd:150$73 ($dff) from module aes_fsm_enc (D = $verific$n1601$38, Q = \count, rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$482 ($sdff) from module aes_fsm_enc (D = $verific$n1596$37, Q = \count).
Adding SRST signal on $verific$clk_div_2_reg$aes_fsm_enc.vhd:178$91 ($dff) from module aes_fsm_enc (D = $verific$n2410$9, Q = \clk_div_2, rval = 1'0).

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..
Removed 3 unused cells and 3 unused wires.
<suppressed ~4 debug messages>

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

3.13.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \aes_fsm_enc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~6 debug messages>

yosys> opt_reduce

3.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \aes_fsm_enc.
Performed a total of 0 changes.

yosys> opt_merge

3.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..

yosys> opt_expr

3.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

3.13.16. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 3) from mux cell aes_fsm_enc.$verific$mux_49$aes_fsm_enc.vhd:128$58 ($mux).
Removed top 3 bits (of 4) from port B of cell aes_fsm_enc.$verific$add_66$aes_fsm_enc.vhd:147$69 ($add).
Removed top 1 bits (of 2) from port A of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_358$aes_lib.vhd:33$416 ($and).
Removed top 1 bits (of 2) from port B of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_358$aes_lib.vhd:33$416 ($and).
Removed top 1 bits (of 2) from port Y of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_358$aes_lib.vhd:33$416 ($and).
Removed top 1 bits (of 2) from port A of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_356$aes_lib.vhd:33$407 ($and).
Removed top 1 bits (of 2) from port B of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_356$aes_lib.vhd:33$407 ($and).
Removed top 1 bits (of 2) from port Y of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_356$aes_lib.vhd:33$407 ($and).
Removed top 1 bits (of 2) from port A of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_354$aes_lib.vhd:33$397 ($and).
Removed top 1 bits (of 2) from port B of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_354$aes_lib.vhd:33$397 ($and).
Removed top 1 bits (of 2) from port Y of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_354$aes_lib.vhd:33$397 ($and).
Removed top 1 bits (of 2) from port A of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_353$aes_lib.vhd:33$395 ($and).
Removed top 1 bits (of 2) from port B of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_353$aes_lib.vhd:33$395 ($and).
Removed top 1 bits (of 2) from port Y of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_353$aes_lib.vhd:33$395 ($and).
Removed top 1 bits (of 2) from port A of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_350$aes_lib.vhd:33$384 ($and).
Removed top 1 bits (of 2) from port B of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_350$aes_lib.vhd:33$384 ($and).
Removed top 1 bits (of 2) from port Y of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_350$aes_lib.vhd:33$384 ($and).
Removed top 1 bits (of 2) from port A of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_348$aes_lib.vhd:33$375 ($and).
Removed top 1 bits (of 2) from port B of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_348$aes_lib.vhd:33$375 ($and).
Removed top 1 bits (of 2) from port Y of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_348$aes_lib.vhd:33$375 ($and).
Removed top 1 bits (of 2) from port A of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_346$aes_lib.vhd:33$365 ($and).
Removed top 1 bits (of 2) from port B of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_346$aes_lib.vhd:33$365 ($and).
Removed top 1 bits (of 2) from port Y of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_346$aes_lib.vhd:33$365 ($and).
Removed top 1 bits (of 2) from port A of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_345$aes_lib.vhd:33$363 ($and).
Removed top 1 bits (of 2) from port B of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_345$aes_lib.vhd:33$363 ($and).
Removed top 1 bits (of 2) from port Y of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_345$aes_lib.vhd:33$363 ($and).
Removed top 1 bits (of 2) from port A of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_342$aes_lib.vhd:33$352 ($and).
Removed top 1 bits (of 2) from port B of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_342$aes_lib.vhd:33$352 ($and).
Removed top 1 bits (of 2) from port Y of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_342$aes_lib.vhd:33$352 ($and).
Removed top 1 bits (of 2) from port A of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_340$aes_lib.vhd:33$343 ($and).
Removed top 1 bits (of 2) from port B of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_340$aes_lib.vhd:33$343 ($and).
Removed top 1 bits (of 2) from port Y of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_340$aes_lib.vhd:33$343 ($and).
Removed top 1 bits (of 2) from port A of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_338$aes_lib.vhd:33$333 ($and).
Removed top 1 bits (of 2) from port B of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_338$aes_lib.vhd:33$333 ($and).
Removed top 1 bits (of 2) from port Y of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_338$aes_lib.vhd:33$333 ($and).
Removed top 1 bits (of 2) from port A of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_337$aes_lib.vhd:33$331 ($and).
Removed top 1 bits (of 2) from port B of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_337$aes_lib.vhd:33$331 ($and).
Removed top 1 bits (of 2) from port Y of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_337$aes_lib.vhd:33$331 ($and).
Removed top 1 bits (of 2) from port A of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_335$aes_lib.vhd:33$320 ($and).
Removed top 1 bits (of 2) from port B of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_335$aes_lib.vhd:33$320 ($and).
Removed top 1 bits (of 2) from port Y of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_335$aes_lib.vhd:33$320 ($and).
Removed top 1 bits (of 2) from port A of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_334$aes_lib.vhd:33$318 ($and).
Removed top 1 bits (of 2) from port B of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_334$aes_lib.vhd:33$318 ($and).
Removed top 1 bits (of 2) from port Y of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_334$aes_lib.vhd:33$318 ($and).
Removed top 1 bits (of 2) from port A of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_332$aes_lib.vhd:33$309 ($and).
Removed top 1 bits (of 2) from port B of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_332$aes_lib.vhd:33$309 ($and).
Removed top 1 bits (of 2) from port Y of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_332$aes_lib.vhd:33$309 ($and).
Removed top 1 bits (of 2) from port A of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_330$aes_lib.vhd:33$300 ($and).
Removed top 1 bits (of 2) from port B of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_330$aes_lib.vhd:33$300 ($and).
Removed top 1 bits (of 2) from port Y of cell aes_fsm_enc.$flatten\AES_ROUND_N.$verific$and_330$aes_lib.vhd:33$300 ($and).
Removed top 3 bits (of 8) from wire aes_fsm_enc.$flatten\AES_ROUND_N.$verific$n1133$132.
Removed top 3 bits (of 8) from wire aes_fsm_enc.$flatten\AES_ROUND_N.$verific$n1160$135.
Removed top 3 bits (of 8) from wire aes_fsm_enc.$flatten\AES_ROUND_N.$verific$n1349$145.
Removed top 3 bits (of 8) from wire aes_fsm_enc.$flatten\AES_ROUND_N.$verific$n1538$155.
Removed top 3 bits (of 8) from wire aes_fsm_enc.$flatten\AES_ROUND_N.$verific$n1853$168.
Removed top 3 bits (of 8) from wire aes_fsm_enc.$flatten\AES_ROUND_N.$verific$n1880$171.
Removed top 3 bits (of 8) from wire aes_fsm_enc.$flatten\AES_ROUND_N.$verific$n2069$181.
Removed top 3 bits (of 8) from wire aes_fsm_enc.$flatten\AES_ROUND_N.$verific$n2258$191.
Removed top 3 bits (of 8) from wire aes_fsm_enc.$flatten\AES_ROUND_N.$verific$n2573$204.
Removed top 3 bits (of 8) from wire aes_fsm_enc.$flatten\AES_ROUND_N.$verific$n2600$207.
Removed top 3 bits (of 8) from wire aes_fsm_enc.$flatten\AES_ROUND_N.$verific$n2789$217.
Removed top 3 bits (of 8) from wire aes_fsm_enc.$flatten\AES_ROUND_N.$verific$n2978$227.
Removed top 3 bits (of 8) from wire aes_fsm_enc.$flatten\AES_ROUND_N.$verific$n440$97.
Removed top 3 bits (of 8) from wire aes_fsm_enc.$flatten\AES_ROUND_N.$verific$n629$107.
Removed top 3 bits (of 8) from wire aes_fsm_enc.$flatten\AES_ROUND_N.$verific$n818$117.
Removed top 3 bits (of 8) from wire aes_fsm_enc.$flatten\AES_ROUND_N.$verific$n953$124.
Removed top 1 bits (of 3) from wire aes_fsm_enc.$verific$n1238$31.

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..
Removed 0 unused cells and 17 unused wires.
<suppressed ~1 debug messages>

yosys> alumacc

3.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module aes_fsm_enc:
  creating $macc model for $verific$add_66$aes_fsm_enc.vhd:147$69 ($add).
  creating $alu model for $macc $verific$add_66$aes_fsm_enc.vhd:147$69.
  creating $alu cell for $verific$add_66$aes_fsm_enc.vhd:147$69: $auto$alumacc.cc:485:replace_alu$502
  created 1 $alu and 0 $macc cells.

yosys> opt

3.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.
<suppressed ~16 debug messages>

yosys> opt_merge -nomux

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \aes_fsm_enc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~6 debug messages>

yosys> opt_reduce

3.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \aes_fsm_enc.
Performed a total of 0 changes.

yosys> opt_merge

3.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..
Removed 0 unused cells and 16 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

3.19.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \aes_fsm_enc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~6 debug messages>

yosys> opt_reduce

3.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \aes_fsm_enc.
Performed a total of 0 changes.

yosys> opt_merge

3.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..

yosys> opt_expr

3.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

3.19.16. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.20. Printing statistics.

=== aes_fsm_enc ===

   Number of wires:                198
   Number of wire bits:           3093
   Number of public wires:         107
   Number of public wire bits:    2299
   Number of memories:               9
   Number of memory bits:        17664
   Number of processes:              0
   Number of cells:                144
     $adff                           1
     $alu                            1
     $bmux                           7
     $dff                           17
     $eq                             1
     $memrd                         17
     $memwr                          9
     $mux                            6
     $not                            1
     $sdff                           1
     $sdffe                          1
     $xor                           82


yosys> memory -nomap

3.21. Executing MEMORY pass.

yosys> opt_mem

3.21.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 18 transformations.

yosys> opt_mem_priority

3.21.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.21.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_dff

3.21.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.21.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..
Removed 19 unused cells and 36 unused wires.
<suppressed ~55 debug messages>

yosys> memory_share

3.21.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.21.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.21.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..

yosys> memory_collect

3.21.9. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.22. Printing statistics.

=== aes_fsm_enc ===

   Number of wires:                162
   Number of wire bits:           2449
   Number of public wires:          72
   Number of public wire bits:    1783
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 99
     $adff                           1
     $alu                            1
     $bmux                           6
     $eq                             1
     $mux                            6
     $not                            1
     $sdff                           1
     $sdffe                          1
     $xor                           81


yosys> opt_clean

3.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..

yosys> stat

3.24. Printing statistics.

=== aes_fsm_enc ===

   Number of wires:                162
   Number of wire bits:           2449
   Number of public wires:          72
   Number of public wire bits:    1783
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 99
     $adff                           1
     $alu                            1
     $bmux                           6
     $eq                             1
     $mux                            6
     $not                            1
     $sdff                           1
     $sdffe                          1
     $xor                           81


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.25. Executing TECHMAP pass (map to technology primitives).

3.25.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.25.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.25.3. Continuing TECHMAP pass.
Using template $paramod$32a7b7b86c07519b7537abc18e96f0331f97914d\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $bmux.
Using extmapper simplemap for cells of type $sdff.
Using extmapper simplemap for cells of type $sdffe.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000100 for cells of type $lcu.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $or.
No more expansions possible.
<suppressed ~394 debug messages>

yosys> stat

3.26. Printing statistics.

=== aes_fsm_enc ===

   Number of wires:                215
   Number of wire bits:           4570
   Number of public wires:          72
   Number of public wire bits:    1783
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1897
     $_AND_                         10
     $_DFF_PP0_                      3
     $_MUX_                       1084
     $_NOT_                          6
     $_OR_                           8
     $_SDFFE_PP0P_                   4
     $_SDFF_PP0_                     1
     $_XOR_                        781


yosys> opt

3.27. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.
<suppressed ~822 debug messages>

yosys> opt_merge -nomux

3.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
<suppressed ~3096 debug messages>
Removed a total of 1032 cells.

yosys> opt_muxtree

3.27.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \aes_fsm_enc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \aes_fsm_enc.
Performed a total of 0 changes.

yosys> opt_merge

3.27.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..
Removed 4 unused cells and 128 unused wires.
<suppressed ~5 debug messages>

yosys> opt_expr

3.27.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

3.27.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.27.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \aes_fsm_enc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \aes_fsm_enc.
Performed a total of 0 changes.

yosys> opt_merge

3.27.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..

yosys> opt_expr

3.27.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

3.27.16. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.
<suppressed ~16 debug messages>

yosys> opt_merge

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_dff

3.28.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..
Removed 1 unused cells and 5 unused wires.
<suppressed ~4 debug messages>

3.28.5. Finished fast OPT passes.

yosys> memory_map

3.29. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.30. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.
<suppressed ~1 debug messages>

yosys> opt_merge -nomux

3.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \aes_fsm_enc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \aes_fsm_enc.
Performed a total of 0 changes.

yosys> opt_merge

3.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_share

3.30.6. Executing OPT_SHARE pass.

yosys> opt_dff

3.30.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..

yosys> opt_expr -full

3.30.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

3.30.10. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

3.31. Executing ABC pass (technology mapping using ABC).

3.31.1. Summary of detected clock domains:
  3 cells in clk=\clk, en={ }, arst={ }, srst=\rst_cnt
  16 cells in clk=\clk, en={ }, arst=\rst, srst={ }
  18 cells in clk=\clk_div_2, en=\en_cnt, arst={ }, srst=\rst_cnt

3.31.2. Extracting gate netlist of module `\aes_fsm_enc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by \rst_cnt
Extracted 3 gates and 6 wires to a netlist network with 2 inputs and 2 outputs.

3.31.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.2.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        2
ABC RESULTS:          output signals:        2
Removing temp directory.

3.31.3. Extracting gate netlist of module `\aes_fsm_enc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, asynchronously reset by \rst
Extracted 16 gates and 19 wires to a netlist network with 2 inputs and 4 outputs.

3.31.3.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.3.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:              NAND cells:        1
ABC RESULTS:            ANDNOT cells:        6
ABC RESULTS:               NOR cells:        4
ABC RESULTS:               MUX cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:       13
ABC RESULTS:           input signals:        2
ABC RESULTS:          output signals:        4
Removing temp directory.

3.31.4. Extracting gate netlist of module `\aes_fsm_enc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$2543$lo0, enabled by $abc$2548$en_cnt, synchronously reset by $abc$2543$rst_cnt
Extracted 18 gates and 18 wires to a netlist network with 0 inputs and 1 outputs.

3.31.4.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.4.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        4
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               NOR cells:        1
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               XOR cells:        2
ABC RESULTS:                OR cells:        1
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:               AND cells:        5
ABC RESULTS:        internal signals:       17
ABC RESULTS:           input signals:        0
ABC RESULTS:          output signals:        1
Removing temp directory.

yosys> abc -dff

3.32. Executing ABC pass (technology mapping using ABC).

3.32.1. Summary of detected clock domains:
  2 cells in clk=\clk, en={ }, arst={ }, srst=$abc$2543$rst_cnt
  16 cells in clk=\clk, en={ }, arst=\rst, srst={ }
  17 cells in clk=$abc$2543$lo0, en=$abc$2548$en_cnt, arst={ }, srst=$abc$2543$rst_cnt

3.32.2. Extracting gate netlist of module `\aes_fsm_enc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by $abc$2543$rst_cnt
Extracted 2 gates and 2 wires to a netlist network with 0 inputs and 1 outputs.

3.32.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.32.2.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        0
ABC RESULTS:          output signals:        1
Removing temp directory.

3.32.3. Extracting gate netlist of module `\aes_fsm_enc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, asynchronously reset by \rst
Extracted 16 gates and 18 wires to a netlist network with 2 inputs and 4 outputs.

3.32.3.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.32.3.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:            ANDNOT cells:        5
ABC RESULTS:               NOR cells:        5
ABC RESULTS:               AND cells:        2
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:       12
ABC RESULTS:           input signals:        2
ABC RESULTS:          output signals:        4
Removing temp directory.

3.32.4. Extracting gate netlist of module `\aes_fsm_enc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$2583$lo0, enabled by $abc$2548$en_cnt, synchronously reset by $abc$2587$abc$2543$rst_cnt
Extracted 17 gates and 19 wires to a netlist network with 2 inputs and 2 outputs.

3.32.4.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.32.4.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        4
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               NOR cells:        1
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               XOR cells:        2
ABC RESULTS:                OR cells:        1
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:               AND cells:        5
ABC RESULTS:        internal signals:       15
ABC RESULTS:           input signals:        2
ABC RESULTS:          output signals:        2
Removing temp directory.

yosys> abc -dff

3.33. Executing ABC pass (technology mapping using ABC).

3.33.1. Summary of detected clock domains:
  16 cells in clk=\clk, en={ }, arst=\rst, srst={ }
  3 cells in clk=\clk, en={ }, arst={ }, srst=$abc$2587$abc$2543$rst_cnt
  17 cells in clk=$abc$2583$lo0, en=$abc$2605$abc$2548$en_cnt, arst={ }, srst=$abc$2587$abc$2543$rst_cnt

3.33.2. Extracting gate netlist of module `\aes_fsm_enc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, asynchronously reset by \rst
Extracted 16 gates and 19 wires to a netlist network with 3 inputs and 5 outputs.

3.33.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.33.2.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:            ANDNOT cells:        5
ABC RESULTS:               NOR cells:        5
ABC RESULTS:               AND cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:       11
ABC RESULTS:           input signals:        3
ABC RESULTS:          output signals:        5
Removing temp directory.

3.33.3. Extracting gate netlist of module `\aes_fsm_enc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by $abc$2587$abc$2543$rst_cnt
Extracted 3 gates and 5 wires to a netlist network with 2 inputs and 2 outputs.

3.33.3.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.33.3.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        2
ABC RESULTS:          output signals:        2
Removing temp directory.

3.33.4. Extracting gate netlist of module `\aes_fsm_enc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$2640$lo0, enabled by $abc$2605$abc$2548$en_cnt, synchronously reset by $abc$2640$abc$2587$abc$2543$rst_cnt
Extracted 17 gates and 19 wires to a netlist network with 2 inputs and 2 outputs.

3.33.4.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.33.4.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        4
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               NOR cells:        1
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               XOR cells:        2
ABC RESULTS:                OR cells:        1
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:               AND cells:        5
ABC RESULTS:        internal signals:       15
ABC RESULTS:           input signals:        2
ABC RESULTS:          output signals:        2
Removing temp directory.

yosys> opt_ffinv

3.34. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt -sat

3.35. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.35.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

yosys> opt_merge -nomux

3.35.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.35.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \aes_fsm_enc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.35.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \aes_fsm_enc.
Performed a total of 0 changes.

yosys> opt_merge

3.35.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.35.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.35.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..
Removed 0 unused cells and 118 unused wires.
<suppressed ~8 debug messages>

yosys> opt_expr

3.35.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

3.35.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.35.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \aes_fsm_enc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.35.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \aes_fsm_enc.
Performed a total of 0 changes.

yosys> opt_merge

3.35.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.35.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.35.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..

yosys> opt_expr

3.35.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

3.35.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

3.36. Executing ABC pass (technology mapping using ABC).

3.36.1. Summary of detected clock domains:
  18 cells in clk=\clk_div_2, en=\en_cnt, arst={ }, srst=\rst_cnt
  2 cells in clk=\clk, en={ }, arst={ }, srst=\rst_cnt
  16 cells in clk=\clk, en={ }, arst=\rst, srst={ }

3.36.2. Extracting gate netlist of module `\aes_fsm_enc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_div_2, enabled by \en_cnt, synchronously reset by \rst_cnt
Extracted 18 gates and 22 wires to a netlist network with 4 inputs and 3 outputs.

3.36.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.36.2.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        4
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               NOR cells:        1
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               XOR cells:        2
ABC RESULTS:                OR cells:        1
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:               AND cells:        6
ABC RESULTS:        internal signals:       15
ABC RESULTS:           input signals:        4
ABC RESULTS:          output signals:        3
Removing temp directory.

3.36.3. Extracting gate netlist of module `\aes_fsm_enc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by $abc$2663$rst_cnt
Extracted 2 gates and 2 wires to a netlist network with 0 inputs and 1 outputs.

3.36.3.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.36.3.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        0
ABC RESULTS:          output signals:        1
Removing temp directory.

3.36.4. Extracting gate netlist of module `\aes_fsm_enc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, asynchronously reset by \rst
Extracted 16 gates and 19 wires to a netlist network with 3 inputs and 5 outputs.

3.36.4.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.36.4.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:            ANDNOT cells:        5
ABC RESULTS:               NOR cells:        5
ABC RESULTS:               AND cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:       11
ABC RESULTS:           input signals:        3
ABC RESULTS:          output signals:        5
Removing temp directory.

yosys> opt_ffinv

3.37. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> abc -script /tmp/yosys_e0viWI/abc_tmp_1.scr

3.38. Executing ABC pass (technology mapping using ABC).

3.38.1. Extracting gate netlist of module `\aes_fsm_enc' to `<abc-temp-dir>/input.blif'..
Extracted 28 gates and 37 wires to a netlist network with 9 inputs and 11 outputs.

3.38.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /tmp/yosys_e0viWI/abc_tmp_1.scr 
ABC:   #PIs =   9  #Luts =    11  Max Lvl =   2  Avg Lvl =   1.00  [   0.07 sec. at Pass 0]
ABC:   #PIs =   9  #Luts =    11  Max Lvl =   2  Avg Lvl =   1.00  [   0.20 sec. at Pass 1]
ABC:   #PIs =   9  #Luts =    11  Max Lvl =   2  Avg Lvl =   1.00  [   0.06 sec. at Pass 2]
ABC:   #PIs =   9  #Luts =    11  Max Lvl =   2  Avg Lvl =   1.00  [   0.16 sec. at Pass 3]
ABC:   #PIs =   9  #Luts =    11  Max Lvl =   2  Avg Lvl =   1.00  [   0.10 sec. at Pass 4]
ABC:   #PIs =   9  #Luts =    11  Max Lvl =   2  Avg Lvl =   1.00  [   0.21 sec. at Pass 5]
ABC:   #PIs =   9  #Luts =    11  Max Lvl =   2  Avg Lvl =   1.00  [   0.15 sec. at Pass 6]
ABC:   #PIs =   9  #Luts =    11  Max Lvl =   2  Avg Lvl =   1.00  [   0.09 sec. at Pass 7]
ABC:   [DE total time =    1.30 sec. ]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.38.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:       11
ABC RESULTS:        internal signals:       17
ABC RESULTS:           input signals:        9
ABC RESULTS:          output signals:       11
Removing temp directory.

yosys> opt

3.39. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.39.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

yosys> opt_merge -nomux

3.39.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.39.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \aes_fsm_enc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.39.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \aes_fsm_enc.
Performed a total of 0 changes.

yosys> opt_merge

3.39.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_dff

3.39.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.39.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..
Removed 0 unused cells and 82 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.39.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

3.39.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.39.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \aes_fsm_enc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.39.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \aes_fsm_enc.
Performed a total of 0 changes.

yosys> opt_merge

3.39.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_dff

3.39.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.39.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..

yosys> opt_expr

3.39.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

3.39.16. Finished OPT passes. (There is nothing left to do.)

yosys> opt_ffinv

3.40. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 1 inverters.

yosys> stat

3.41. Printing statistics.

=== aes_fsm_enc ===

   Number of wires:                 78
   Number of wire bits:           1770
   Number of public wires:          63
   Number of public wire bits:    1755
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 18
     $_DFF_PP0_                      3
     $_SDFFE_PP0P_                   3
     $_SDFFE_PP1P_                   1
     $_SDFF_PP0_                     1
     $lut                           10


yosys> shregmap -minlen 8 -maxlen 20

3.42. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.43. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.44. Printing statistics.

=== aes_fsm_enc ===

   Number of wires:                 87
   Number of wire bits:           1779
   Number of public wires:          63
   Number of public wire bits:    1755
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 27
     $_DFF_PP0_                      3
     $_DFF_P_                        5
     $_MUX_                          9
     $lut                           10


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.45. Executing TECHMAP pass (map to technology primitives).

3.45.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.45.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.45.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~157 debug messages>

yosys> opt_expr -mux_undef

3.46. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.
<suppressed ~124 debug messages>

yosys> simplemap

3.47. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.48. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

yosys> opt_merge

3.49. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

yosys> opt_dff -nodffe -nosdff

3.50. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.51. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..
Removed 0 unused cells and 46 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.52. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.52.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

yosys> opt_merge -nomux

3.52.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.52.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \aes_fsm_enc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.52.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \aes_fsm_enc.
Performed a total of 0 changes.

yosys> opt_merge

3.52.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.52.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.52.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..

yosys> opt_expr

3.52.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

3.52.9. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /tmp/yosys_e0viWI/abc_tmp_2.scr

3.53. Executing ABC pass (technology mapping using ABC).

3.53.1. Extracting gate netlist of module `\aes_fsm_enc' to `<abc-temp-dir>/input.blif'..
Extracted 45 gates and 57 wires to a netlist network with 10 inputs and 10 outputs.

3.53.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /tmp/yosys_e0viWI/abc_tmp_2.scr 
ABC:   #PIs =  10  #Luts =    12  Max Lvl =   2  Avg Lvl =   1.60  [   0.05 sec. at Pass 0]
ABC:   #PIs =  10  #Luts =    12  Max Lvl =   2  Avg Lvl =   1.60  [   0.21 sec. at Pass 1]
ABC:   #PIs =  10  #Luts =    12  Max Lvl =   2  Avg Lvl =   1.60  [   0.08 sec. at Pass 2]
ABC:   #PIs =  10  #Luts =    12  Max Lvl =   2  Avg Lvl =   1.60  [   0.14 sec. at Pass 3]
ABC:   #PIs =  10  #Luts =    12  Max Lvl =   2  Avg Lvl =   1.60  [   0.13 sec. at Pass 4]
ABC:   #PIs =  10  #Luts =    12  Max Lvl =   2  Avg Lvl =   1.60  [   0.17 sec. at Pass 5]
ABC:   #PIs =  10  #Luts =    12  Max Lvl =   2  Avg Lvl =   1.60  [   0.18 sec. at Pass 6]
ABC:   #PIs =  10  #Luts =    12  Max Lvl =   2  Avg Lvl =   1.60  [   0.12 sec. at Pass 7]
ABC:   [DE total time =    1.38 sec. ]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.53.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:       12
ABC RESULTS:        internal signals:       37
ABC RESULTS:           input signals:       10
ABC RESULTS:          output signals:       10
Removing temp directory.

yosys> opt

3.54. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.54.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

yosys> opt_merge -nomux

3.54.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.54.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \aes_fsm_enc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.54.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \aes_fsm_enc.
Performed a total of 0 changes.

yosys> opt_merge

3.54.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_dff

3.54.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.54.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..
Removed 0 unused cells and 51 unused wires.
<suppressed ~4 debug messages>

yosys> opt_expr

3.54.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

3.54.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.54.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \aes_fsm_enc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.54.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \aes_fsm_enc.
Performed a total of 0 changes.

yosys> opt_merge

3.54.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\aes_fsm_enc'.
Removed a total of 0 cells.

yosys> opt_dff

3.54.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.54.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..

yosys> opt_expr

3.54.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module aes_fsm_enc.

3.54.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.55. Executing HIERARCHY pass (managing design hierarchy).

3.55.1. Analyzing design hierarchy..
Top module:  \aes_fsm_enc

3.55.2. Analyzing design hierarchy..
Top module:  \aes_fsm_enc
Removed 0 unused modules.

yosys> stat

3.56. Printing statistics.

=== aes_fsm_enc ===

   Number of wires:                 78
   Number of wire bits:           1770
   Number of public wires:          60
   Number of public wire bits:    1752
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 20
     $lut                           12
     dffsre                          8


yosys> opt_clean -purge

3.57. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \aes_fsm_enc..
Removed 0 unused cells and 52 unused wires.
<suppressed ~52 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.58. Executing Verilog backend.

yosys> bmuxmap

3.58.1. Executing BMUXMAP pass.

yosys> demuxmap

3.58.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\aes_fsm_enc'.

Warnings: 7 unique messages, 7 total
End of script. Logfile hash: 5379f5ed1e, CPU: user 1.05s system 0.06s, MEM: 27.89 MB peak
Yosys 0.16+65 (git sha1 03bd62bb8, gcc 9.1.0 -fPIC -Os)
Time spent: 94% 6x abc (17 sec), 1% 32x opt_expr (0 sec), ...
real 8.65
user 13.22
sys 5.07
