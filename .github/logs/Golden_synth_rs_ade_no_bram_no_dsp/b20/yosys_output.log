
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.45
 Yosys 0.17+103 (git sha1 a1babadd5, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Apr22_SW_Release, released at Thu Apr 28 20:08:21 2022.

yosys> verilog_defaults -add -I.

yosys> read -vhdl b20.vhd

yosys> verific -vhdl b20.vhd

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Apr22_SW_Release, released at Thu Apr 28 20:08:21 2022.
VERIFIC-INFO [VHDL-1504] default VHDL library search path is now "/home/users/aram/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008"
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'b20.vhd'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.standard' from file '/home/users/aram/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/standard.vdb'
VERIFIC-INFO [VHDL-1012] b20.vhd:1: analyzing entity 'b14'
VERIFIC-INFO [VHDL-1010] b20.vhd:11: analyzing architecture 'behav'
VERIFIC-INFO [VHDL-1012] b20.vhd:511: analyzing entity 'b14rev'
VERIFIC-INFO [VHDL-1010] b20.vhd:521: analyzing architecture 'behav'
VERIFIC-INFO [VHDL-1012] b20.vhd:1021: analyzing entity 'b20'
VERIFIC-INFO [VHDL-1010] b20.vhd:1029: analyzing architecture 'behav'

yosys> synth_rs -top b20 -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.56

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\RS_DSP2_MULT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_sim'.
Generating RTLIL representation for module `\dsp_t1_20x18x64'.
Generating RTLIL representation for module `\dsp_t1_10x9x32'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top b20

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VHDL-1067] b20.vhd:1021: processing 'b20(BEHAV)'
VERIFIC-INFO [VHDL-1067] b20.vhd:1: processing 'b14(BEHAV)'
VERIFIC-INFO [VHDL-1172] b20.vhd:478: 'others' clause is never selected
VERIFIC-INFO [VHDL-1067] b20.vhd:511: processing 'b14rev(BEHAV)'
VERIFIC-INFO [VHDL-1172] b20.vhd:988: 'others' clause is never selected
Importing module b20.
Importing module b14(BEHAV).
Importing module b14rev(BEHAV).

3.3.1. Analyzing design hierarchy..
Top module:  \b20
Used module:     \b14rev(BEHAV)
Used module:     \b14(BEHAV)

3.3.2. Analyzing design hierarchy..
Top module:  \b20
Used module:     \b14rev(BEHAV)
Used module:     \b14(BEHAV)
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.4.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.4.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14rev(BEHAV).
<suppressed ~26 debug messages>
Optimizing module b14(BEHAV).
<suppressed ~26 debug messages>
Optimizing module b20.

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).
Deleting now unused module b14rev(BEHAV).
Deleting now unused module b14(BEHAV).
<suppressed ~2 debug messages>

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.
<suppressed ~13 debug messages>

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b20..
Removed 14 unused cells and 343 unused wires.
<suppressed ~117 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module b20...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b20..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\P1.$verific$i684$b20.vhd:501$524.
    dead port 2/2 on $mux $flatten\P1.$verific$mux_672$b20.vhd:501$515.
    dead port 2/2 on $mux $flatten\P1.$verific$mux_685$b20.vhd:501$526.
    dead port 2/2 on $mux $flatten\P2.$verific$i653$b20.vhd:1011$1044.
    dead port 2/2 on $mux $flatten\P2.$verific$mux_641$b20.vhd:1011$1035.
    dead port 2/2 on $mux $flatten\P2.$verific$mux_654$b20.vhd:1011$1046.
Removed 6 multiplexer ports.
<suppressed ~52 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b20.
    New ctrl vector for $pmux cell $flatten\P1.$verific$select_746$b20.vhd:486$477: { $flatten\P1.$verific$n2255$108 $auto$opt_reduce.cc:134:opt_pmux$1088 }
    New ctrl vector for $pmux cell $flatten\P1.$verific$select_750$b20.vhd:486$418: { $flatten\P1.$verific$n2256$109 $auto$opt_reduce.cc:134:opt_pmux$1090 }
    New ctrl vector for $pmux cell $flatten\P1.$verific$select_751$b20.vhd:486$495: { $flatten\P1.$verific$n2257$110 $auto$opt_reduce.cc:134:opt_pmux$1092 }
    New ctrl vector for $pmux cell $flatten\P1.$verific$select_752$b20.vhd:486$496: { $flatten\P1.$verific$n2258$111 $auto$opt_reduce.cc:134:opt_pmux$1094 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_494$b20.vhd:953$991: { $flatten\P2.$verific$n2118$610 $auto$opt_reduce.cc:134:opt_pmux$1096 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_495$b20.vhd:953$992: { $flatten\P2.$verific$n2120$612 $auto$opt_reduce.cc:134:opt_pmux$1098 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_496$b20.vhd:953$993: { $flatten\P2.$verific$n2119$611 $auto$opt_reduce.cc:134:opt_pmux$1100 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_497$b20.vhd:953$994: { $flatten\P2.$verific$n2121$613 $auto$opt_reduce.cc:134:opt_pmux$1102 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_534$b20.vhd:973$997: { $flatten\P2.$verific$n2121$613 $auto$opt_reduce.cc:134:opt_pmux$1104 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_535$b20.vhd:973$998: { $flatten\P2.$verific$n2119$611 $auto$opt_reduce.cc:134:opt_pmux$1106 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_536$b20.vhd:973$999: { $flatten\P2.$verific$n2120$612 $auto$opt_reduce.cc:134:opt_pmux$1108 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_537$b20.vhd:973$1000: { $flatten\P2.$verific$n2118$610 $auto$opt_reduce.cc:134:opt_pmux$1110 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_617$b20.vhd:996$1011: { $flatten\P2.$verific$n2121$613 $auto$opt_reduce.cc:134:opt_pmux$1112 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_618$b20.vhd:996$1012: { $flatten\P2.$verific$n2120$612 $auto$opt_reduce.cc:134:opt_pmux$1114 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_619$b20.vhd:996$1013: { $flatten\P2.$verific$n2119$611 $auto$opt_reduce.cc:134:opt_pmux$1116 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_620$b20.vhd:996$1014: { $flatten\P2.$verific$n2118$610 $auto$opt_reduce.cc:134:opt_pmux$1118 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_717$b20.vhd:873$982: { $flatten\P2.$verific$n2118$610 $auto$opt_reduce.cc:134:opt_pmux$1120 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_718$b20.vhd:873$988: { $flatten\P2.$verific$n2119$611 $auto$opt_reduce.cc:134:opt_pmux$1122 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_719$b20.vhd:873$989: { $flatten\P2.$verific$n2120$612 $auto$opt_reduce.cc:134:opt_pmux$1124 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_720$b20.vhd:873$990: { $flatten\P2.$verific$n2121$613 $auto$opt_reduce.cc:134:opt_pmux$1126 }
  Optimizing cells in module \b20.
Performed a total of 20 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
<suppressed ~36 debug messages>
Removed a total of 12 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $flatten\P2.$verific$wr_reg$b20.vhd:1015$1081 ($aldff) from module b20.
Changing const-value async load to async reset on $flatten\P2.$verific$state_reg$b20.vhd:1015$1083 ($aldff) from module b20.
Changing const-value async load to async reset on $flatten\P2.$verific$reg3_reg$b20.vhd:1015$1078 ($aldff) from module b20.
Changing const-value async load to async reset on $flatten\P2.$verific$reg2_reg$b20.vhd:1015$1077 ($aldff) from module b20.
Changing const-value async load to async reset on $flatten\P2.$verific$reg1_reg$b20.vhd:1015$1076 ($aldff) from module b20.
Changing const-value async load to async reset on $flatten\P2.$verific$reg0_reg$b20.vhd:1015$1075 ($aldff) from module b20.
Changing const-value async load to async reset on $flatten\P2.$verific$rd_reg$b20.vhd:1015$1080 ($aldff) from module b20.
Changing const-value async load to async reset on $flatten\P1.$verific$B_reg$b20.vhd:505$554 ($aldff) from module b20.
Changing const-value async load to async reset on $flatten\P2.$verific$datao_reg$b20.vhd:1015$1082 ($aldff) from module b20.
Changing const-value async load to async reset on $flatten\P2.$verific$d_reg$b20.vhd:1015$1073 ($aldff) from module b20.
Changing const-value async load to async reset on $flatten\P2.$verific$addr_reg$b20.vhd:1015$1079 ($aldff) from module b20.
Changing const-value async load to async reset on $flatten\P2.$verific$IR_reg$b20.vhd:1015$1072 ($aldff) from module b20.
Changing const-value async load to async reset on $flatten\P2.$verific$B_reg$b20.vhd:1015$1074 ($aldff) from module b20.
Changing const-value async load to async reset on $flatten\P1.$verific$wr_reg$b20.vhd:505$561 ($aldff) from module b20.
Changing const-value async load to async reset on $flatten\P1.$verific$state_reg$b20.vhd:505$563 ($aldff) from module b20.
Changing const-value async load to async reset on $flatten\P1.$verific$reg3_reg$b20.vhd:505$558 ($aldff) from module b20.
Changing const-value async load to async reset on $flatten\P1.$verific$reg2_reg$b20.vhd:505$557 ($aldff) from module b20.
Changing const-value async load to async reset on $flatten\P1.$verific$reg1_reg$b20.vhd:505$556 ($aldff) from module b20.
Changing const-value async load to async reset on $flatten\P1.$verific$reg0_reg$b20.vhd:505$555 ($aldff) from module b20.
Changing const-value async load to async reset on $flatten\P1.$verific$rd_reg$b20.vhd:505$560 ($aldff) from module b20.
Changing const-value async load to async reset on $flatten\P1.$verific$IR_reg$b20.vhd:505$552 ($aldff) from module b20.
Changing const-value async load to async reset on $flatten\P1.$verific$datao_reg$b20.vhd:505$562 ($aldff) from module b20.
Changing const-value async load to async reset on $flatten\P1.$verific$d_reg$b20.vhd:505$553 ($aldff) from module b20.
Changing const-value async load to async reset on $flatten\P1.$verific$addr_reg$b20.vhd:505$559 ($aldff) from module b20.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b20..
Removed 0 unused cells and 20 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b20..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~52 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b20.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b20..

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.

3.11.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).
Found FSM state register b20.P1.d.
Found FSM state register b20.P2.d.

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\P1.d' from module `\b20'.
  found $adff cell for state register: $flatten\P1.$verific$d_reg$b20.vhd:505$553
  root of input selection tree: $flatten\P1.$verific$n11472$358
  found reset state: 0 (from async reset)
  found ctrl input: \P1.state
  found ctrl input: $flatten\P1.$verific$n341$204 [0]
  found ctrl input: $flatten\P1.$verific$n10346$175
  found ctrl input: $flatten\P1.$verific$n1405$102
  found ctrl input: $flatten\P1.$verific$n1440$103
  found ctrl input: $flatten\P1.$verific$n1474$104
  found ctrl input: $flatten\P1.$verific$n1475$105
  found ctrl input: $flatten\P1.$verific$n1476$106
  found ctrl input: $flatten\P1.$verific$n1477$107
  found state code: 1
  found state code: 2
  found state code: 3
  found ctrl input: \P1.B
  ctrl inputs: { \P1.B \P1.state $flatten\P1.$verific$n1405$102 $flatten\P1.$verific$n1440$103 $flatten\P1.$verific$n1474$104 $flatten\P1.$verific$n1475$105 $flatten\P1.$verific$n1476$106 $flatten\P1.$verific$n1477$107 $flatten\P1.$verific$n10346$175 $flatten\P1.$verific$n341$204 [0] }
  ctrl outputs: $flatten\P1.$verific$n11472$358
  transition:          0 10'-0-------- ->          0 0
  transition:          0 10'-100000000 ->          0 0
  transition:          0 10'-100000100 ->          0 0
  transition:          0 10'-100001-00 ->          1 1
  transition:          0 10'-10001--00 ->          2 2
  transition:          0 10'-1001---00 ->          3 3
  transition:          0 10'0101----00 ->          0 0
  transition:          0 10'1101----00 ->          3 3
  transition:          0 10'011-----00 ->          3 3
  transition:          0 10'111-----00 ->          0 0
  transition:          0 10'-1------10 ->          0 0
  transition:          0 10'-1-------1 ->          0 0
  transition:          2 10'-0-------- ->          2 2
  transition:          2 10'-100000000 ->          2 2
  transition:          2 10'-100000100 ->          0 0
  transition:          2 10'-100001-00 ->          1 1
  transition:          2 10'-10001--00 ->          2 2
  transition:          2 10'-1001---00 ->          3 3
  transition:          2 10'0101----00 ->          2 2
  transition:          2 10'1101----00 ->          3 3
  transition:          2 10'011-----00 ->          3 3
  transition:          2 10'111-----00 ->          2 2
  transition:          2 10'-1------10 ->          2 2
  transition:          2 10'-1-------1 ->          2 2
  transition:          1 10'-0-------- ->          1 1
  transition:          1 10'-100000000 ->          1 1
  transition:          1 10'-100000100 ->          0 0
  transition:          1 10'-100001-00 ->          1 1
  transition:          1 10'-10001--00 ->          2 2
  transition:          1 10'-1001---00 ->          3 3
  transition:          1 10'0101----00 ->          1 1
  transition:          1 10'1101----00 ->          3 3
  transition:          1 10'011-----00 ->          3 3
  transition:          1 10'111-----00 ->          1 1
  transition:          1 10'-1------10 ->          1 1
  transition:          1 10'-1-------1 ->          1 1
  transition:          3 10'-0-------- ->          3 3
  transition:          3 10'-100000000 ->          3 3
  transition:          3 10'-100000100 ->          0 0
  transition:          3 10'-100001-00 ->          1 1
  transition:          3 10'-10001--00 ->          2 2
  transition:          3 10'-1001---00 ->          3 3
  transition:          3 10'0101----00 ->          3 3
  transition:          3 10'1101----00 ->          3 3
  transition:          3 10'011-----00 ->          3 3
  transition:          3 10'111-----00 ->          3 3
  transition:          3 10'-1------10 ->          3 3
  transition:          3 10'-1-------1 ->          3 3
Extracting FSM `\P2.d' from module `\b20'.
  found $adff cell for state register: $flatten\P2.$verific$d_reg$b20.vhd:1015$1073
  root of input selection tree: $flatten\P2.$verific$n11328$861
  found reset state: 0 (from async reset)
  found ctrl input: \P2.state
  found ctrl input: $flatten\P2.$verific$n341$704 [0]
  found ctrl input: $flatten\P2.$verific$n10195$677
  found ctrl input: $flatten\P2.$verific$n1406$604
  found ctrl input: $flatten\P2.$verific$n1441$605
  found ctrl input: $flatten\P2.$verific$n1475$606
  found ctrl input: $flatten\P2.$verific$n1476$607
  found ctrl input: $flatten\P2.$verific$n1477$608
  found ctrl input: $flatten\P2.$verific$n1478$609
  found state code: 1
  found state code: 2
  found state code: 3
  found ctrl input: \P2.B
  ctrl inputs: { \P2.B \P2.state $flatten\P2.$verific$n1406$604 $flatten\P2.$verific$n1441$605 $flatten\P2.$verific$n1475$606 $flatten\P2.$verific$n1476$607 $flatten\P2.$verific$n1477$608 $flatten\P2.$verific$n1478$609 $flatten\P2.$verific$n10195$677 $flatten\P2.$verific$n341$704 [0] }
  ctrl outputs: $flatten\P2.$verific$n11328$861
  transition:          0 10'-0-------- ->          0 0
  transition:          0 10'-100000000 ->          0 0
  transition:          0 10'-100000100 ->          0 0
  transition:          0 10'-100001-00 ->          1 1
  transition:          0 10'-10001--00 ->          2 2
  transition:          0 10'-1001---00 ->          3 3
  transition:          0 10'0101----00 ->          0 0
  transition:          0 10'1101----00 ->          3 3
  transition:          0 10'011-----00 ->          3 3
  transition:          0 10'111-----00 ->          0 0
  transition:          0 10'-1------10 ->          0 0
  transition:          0 10'-1-------1 ->          0 0
  transition:          2 10'-0-------- ->          2 2
  transition:          2 10'-100000000 ->          2 2
  transition:          2 10'-100000100 ->          0 0
  transition:          2 10'-100001-00 ->          1 1
  transition:          2 10'-10001--00 ->          2 2
  transition:          2 10'-1001---00 ->          3 3
  transition:          2 10'0101----00 ->          2 2
  transition:          2 10'1101----00 ->          3 3
  transition:          2 10'011-----00 ->          3 3
  transition:          2 10'111-----00 ->          2 2
  transition:          2 10'-1------10 ->          2 2
  transition:          2 10'-1-------1 ->          2 2
  transition:          1 10'-0-------- ->          1 1
  transition:          1 10'-100000000 ->          1 1
  transition:          1 10'-100000100 ->          0 0
  transition:          1 10'-100001-00 ->          1 1
  transition:          1 10'-10001--00 ->          2 2
  transition:          1 10'-1001---00 ->          3 3
  transition:          1 10'0101----00 ->          1 1
  transition:          1 10'1101----00 ->          3 3
  transition:          1 10'011-----00 ->          3 3
  transition:          1 10'111-----00 ->          1 1
  transition:          1 10'-1------10 ->          1 1
  transition:          1 10'-1-------1 ->          1 1
  transition:          3 10'-0-------- ->          3 3
  transition:          3 10'-100000000 ->          3 3
  transition:          3 10'-100000100 ->          0 0
  transition:          3 10'-100001-00 ->          1 1
  transition:          3 10'-10001--00 ->          2 2
  transition:          3 10'-1001---00 ->          3 3
  transition:          3 10'0101----00 ->          3 3
  transition:          3 10'1101----00 ->          3 3
  transition:          3 10'011-----00 ->          3 3
  transition:          3 10'111-----00 ->          3 3
  transition:          3 10'-1------10 ->          3 3
  transition:          3 10'-1-------1 ->          3 3

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\P2.d$1129' from module `\b20'.
  Merging pattern 10'-100000000 and 10'-100000100 from group (0 0 0).
  Merging pattern 10'-100000100 and 10'-100000000 from group (0 0 0).
  Merging pattern 10'0101----00 and 10'1101----00 from group (3 3 3).
  Merging pattern 10'1101----00 and 10'0101----00 from group (3 3 3).
  Merging pattern 10'011-----00 and 10'111-----00 from group (3 3 3).
  Merging pattern 10'111-----00 and 10'011-----00 from group (3 3 3).
Optimizing FSM `$fsm$\P1.d$1127' from module `\b20'.
  Merging pattern 10'-100000000 and 10'-100000100 from group (0 0 0).
  Merging pattern 10'-100000100 and 10'-100000000 from group (0 0 0).
  Merging pattern 10'0101----00 and 10'1101----00 from group (3 3 3).
  Merging pattern 10'1101----00 and 10'0101----00 from group (3 3 3).
  Merging pattern 10'011-----00 and 10'111-----00 from group (3 3 3).
  Merging pattern 10'111-----00 and 10'011-----00 from group (3 3 3).

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b20..
Removed 6 unused cells and 6 unused wires.
<suppressed ~7 debug messages>

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\P1.d$1127' from module `\b20'.
Optimizing FSM `$fsm$\P2.d$1129' from module `\b20'.

yosys> fsm_recode -encoding binary

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\P1.d$1127' from module `\b20' using `auto' encoding:
  mapping auto encoding to `binary` for this FSM.
  00000000000000000000000000000000 -> 00
  00000000000000000000000000000010 -> 01
  00000000000000000000000000000001 -> 10
  00000000000000000000000000000011 -> 11
Recoding FSM `$fsm$\P2.d$1129' from module `\b20' using `auto' encoding:
  mapping auto encoding to `binary` for this FSM.
  00000000000000000000000000000000 -> 00
  00000000000000000000000000000010 -> 01
  00000000000000000000000000000001 -> 10
  00000000000000000000000000000011 -> 11

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\P1.d$1127' from module `b20':
-------------------------------------

  Information on FSM $fsm$\P1.d$1127 (\P1.d):

  Number of input signals:   10
  Number of output signals:  32
  Number of state bits:       2

  Input signals:
    0: $flatten\P1.$verific$n341$204 [0]
    1: $flatten\P1.$verific$n10346$175
    2: $flatten\P1.$verific$n1477$107
    3: $flatten\P1.$verific$n1476$106
    4: $flatten\P1.$verific$n1475$105
    5: $flatten\P1.$verific$n1474$104
    6: $flatten\P1.$verific$n1440$103
    7: $flatten\P1.$verific$n1405$102
    8: \P1.state
    9: \P1.B

  Output signals:
    0: $flatten\P1.$verific$n11472$358 [0]
    1: $flatten\P1.$verific$n11472$358 [1]
    2: $flatten\P1.$verific$n11472$358 [2]
    3: $flatten\P1.$verific$n11472$358 [3]
    4: $flatten\P1.$verific$n11472$358 [4]
    5: $flatten\P1.$verific$n11472$358 [5]
    6: $flatten\P1.$verific$n11472$358 [6]
    7: $flatten\P1.$verific$n11472$358 [7]
    8: $flatten\P1.$verific$n11472$358 [8]
    9: $flatten\P1.$verific$n11472$358 [9]
   10: $flatten\P1.$verific$n11472$358 [10]
   11: $flatten\P1.$verific$n11472$358 [11]
   12: $flatten\P1.$verific$n11472$358 [12]
   13: $flatten\P1.$verific$n11472$358 [13]
   14: $flatten\P1.$verific$n11472$358 [14]
   15: $flatten\P1.$verific$n11472$358 [15]
   16: $flatten\P1.$verific$n11472$358 [16]
   17: $flatten\P1.$verific$n11472$358 [17]
   18: $flatten\P1.$verific$n11472$358 [18]
   19: $flatten\P1.$verific$n11472$358 [19]
   20: $flatten\P1.$verific$n11472$358 [20]
   21: $flatten\P1.$verific$n11472$358 [21]
   22: $flatten\P1.$verific$n11472$358 [22]
   23: $flatten\P1.$verific$n11472$358 [23]
   24: $flatten\P1.$verific$n11472$358 [24]
   25: $flatten\P1.$verific$n11472$358 [25]
   26: $flatten\P1.$verific$n11472$358 [26]
   27: $flatten\P1.$verific$n11472$358 [27]
   28: $flatten\P1.$verific$n11472$358 [28]
   29: $flatten\P1.$verific$n11472$358 [29]
   30: $flatten\P1.$verific$n11472$358 [30]
   31: $flatten\P1.$verific$n11472$358 [31]

  State encoding:
    0:       2'00  <RESET STATE>
    1:       2'01
    2:       2'10
    3:       2'11

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 10'-100000-00   ->     0 0
      1:     0 10'0101----00   ->     0 0
      2:     0 10'111-----00   ->     0 0
      3:     0 10'-1------10   ->     0 0
      4:     0 10'-1-------1   ->     0 0
      5:     0 10'-0--------   ->     0 0
      6:     0 10'-10001--00   ->     1 2
      7:     0 10'-100001-00   ->     2 1
      8:     0 10'-1001---00   ->     3 3
      9:     0 10'1101----00   ->     3 3
     10:     0 10'011-----00   ->     3 3
     11:     1 10'-100000100   ->     0 0
     12:     1 10'-100000000   ->     1 2
     13:     1 10'-10001--00   ->     1 2
     14:     1 10'0101----00   ->     1 2
     15:     1 10'111-----00   ->     1 2
     16:     1 10'-1------10   ->     1 2
     17:     1 10'-1-------1   ->     1 2
     18:     1 10'-0--------   ->     1 2
     19:     1 10'-100001-00   ->     2 1
     20:     1 10'-1001---00   ->     3 3
     21:     1 10'1101----00   ->     3 3
     22:     1 10'011-----00   ->     3 3
     23:     2 10'-100000100   ->     0 0
     24:     2 10'-10001--00   ->     1 2
     25:     2 10'-100000000   ->     2 1
     26:     2 10'-100001-00   ->     2 1
     27:     2 10'0101----00   ->     2 1
     28:     2 10'111-----00   ->     2 1
     29:     2 10'-1------10   ->     2 1
     30:     2 10'-1-------1   ->     2 1
     31:     2 10'-0--------   ->     2 1
     32:     2 10'-1001---00   ->     3 3
     33:     2 10'1101----00   ->     3 3
     34:     2 10'011-----00   ->     3 3
     35:     3 10'-100000100   ->     0 0
     36:     3 10'-10001--00   ->     1 2
     37:     3 10'-100001-00   ->     2 1
     38:     3 10'-100000000   ->     3 3
     39:     3 10'-1001---00   ->     3 3
     40:     3 10'-101----00   ->     3 3
     41:     3 10'-11-----00   ->     3 3
     42:     3 10'-1------10   ->     3 3
     43:     3 10'-1-------1   ->     3 3
     44:     3 10'-0--------   ->     3 3

-------------------------------------

FSM `$fsm$\P2.d$1129' from module `b20':
-------------------------------------

  Information on FSM $fsm$\P2.d$1129 (\P2.d):

  Number of input signals:   10
  Number of output signals:  32
  Number of state bits:       2

  Input signals:
    0: $flatten\P2.$verific$n341$704 [0]
    1: $flatten\P2.$verific$n10195$677
    2: $flatten\P2.$verific$n1478$609
    3: $flatten\P2.$verific$n1477$608
    4: $flatten\P2.$verific$n1476$607
    5: $flatten\P2.$verific$n1475$606
    6: $flatten\P2.$verific$n1441$605
    7: $flatten\P2.$verific$n1406$604
    8: \P2.state
    9: \P2.B

  Output signals:
    0: $flatten\P2.$verific$n11328$861 [0]
    1: $flatten\P2.$verific$n11328$861 [1]
    2: $flatten\P2.$verific$n11328$861 [2]
    3: $flatten\P2.$verific$n11328$861 [3]
    4: $flatten\P2.$verific$n11328$861 [4]
    5: $flatten\P2.$verific$n11328$861 [5]
    6: $flatten\P2.$verific$n11328$861 [6]
    7: $flatten\P2.$verific$n11328$861 [7]
    8: $flatten\P2.$verific$n11328$861 [8]
    9: $flatten\P2.$verific$n11328$861 [9]
   10: $flatten\P2.$verific$n11328$861 [10]
   11: $flatten\P2.$verific$n11328$861 [11]
   12: $flatten\P2.$verific$n11328$861 [12]
   13: $flatten\P2.$verific$n11328$861 [13]
   14: $flatten\P2.$verific$n11328$861 [14]
   15: $flatten\P2.$verific$n11328$861 [15]
   16: $flatten\P2.$verific$n11328$861 [16]
   17: $flatten\P2.$verific$n11328$861 [17]
   18: $flatten\P2.$verific$n11328$861 [18]
   19: $flatten\P2.$verific$n11328$861 [19]
   20: $flatten\P2.$verific$n11328$861 [20]
   21: $flatten\P2.$verific$n11328$861 [21]
   22: $flatten\P2.$verific$n11328$861 [22]
   23: $flatten\P2.$verific$n11328$861 [23]
   24: $flatten\P2.$verific$n11328$861 [24]
   25: $flatten\P2.$verific$n11328$861 [25]
   26: $flatten\P2.$verific$n11328$861 [26]
   27: $flatten\P2.$verific$n11328$861 [27]
   28: $flatten\P2.$verific$n11328$861 [28]
   29: $flatten\P2.$verific$n11328$861 [29]
   30: $flatten\P2.$verific$n11328$861 [30]
   31: $flatten\P2.$verific$n11328$861 [31]

  State encoding:
    0:       2'00  <RESET STATE>
    1:       2'01
    2:       2'10
    3:       2'11

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 10'-100000-00   ->     0 0
      1:     0 10'0101----00   ->     0 0
      2:     0 10'111-----00   ->     0 0
      3:     0 10'-1------10   ->     0 0
      4:     0 10'-1-------1   ->     0 0
      5:     0 10'-0--------   ->     0 0
      6:     0 10'-10001--00   ->     1 2
      7:     0 10'-100001-00   ->     2 1
      8:     0 10'-1001---00   ->     3 3
      9:     0 10'1101----00   ->     3 3
     10:     0 10'011-----00   ->     3 3
     11:     1 10'-100000100   ->     0 0
     12:     1 10'-100000000   ->     1 2
     13:     1 10'-10001--00   ->     1 2
     14:     1 10'0101----00   ->     1 2
     15:     1 10'111-----00   ->     1 2
     16:     1 10'-1------10   ->     1 2
     17:     1 10'-1-------1   ->     1 2
     18:     1 10'-0--------   ->     1 2
     19:     1 10'-100001-00   ->     2 1
     20:     1 10'-1001---00   ->     3 3
     21:     1 10'1101----00   ->     3 3
     22:     1 10'011-----00   ->     3 3
     23:     2 10'-100000100   ->     0 0
     24:     2 10'-10001--00   ->     1 2
     25:     2 10'-100000000   ->     2 1
     26:     2 10'-100001-00   ->     2 1
     27:     2 10'0101----00   ->     2 1
     28:     2 10'111-----00   ->     2 1
     29:     2 10'-1------10   ->     2 1
     30:     2 10'-1-------1   ->     2 1
     31:     2 10'-0--------   ->     2 1
     32:     2 10'-1001---00   ->     3 3
     33:     2 10'1101----00   ->     3 3
     34:     2 10'011-----00   ->     3 3
     35:     3 10'-100000100   ->     0 0
     36:     3 10'-10001--00   ->     1 2
     37:     3 10'-100001-00   ->     2 1
     38:     3 10'-100000000   ->     3 3
     39:     3 10'-1001---00   ->     3 3
     40:     3 10'-101----00   ->     3 3
     41:     3 10'-11-----00   ->     3 3
     42:     3 10'-1------10   ->     3 3
     43:     3 10'-1-------1   ->     3 3
     44:     3 10'-0--------   ->     3 3

-------------------------------------

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\P1.d$1127' from module `\b20'.
Mapping FSM `$fsm$\P2.d$1129' from module `\b20'.

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.
<suppressed ~14 debug messages>

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
<suppressed ~324 debug messages>
Removed a total of 108 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b20..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~52 debug messages>

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b20.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\P2.$verific$reg3_reg$b20.vhd:1015$1078 ($adff) from module b20 (D = $flatten\P2.$verific$n11034$856, Q = \P2.reg3).
Adding EN signal on $flatten\P2.$verific$reg2_reg$b20.vhd:1015$1077 ($adff) from module b20 (D = $flatten\P2.$verific$n10128$829, Q = \P2.reg2).
Adding EN signal on $flatten\P2.$verific$reg1_reg$b20.vhd:1015$1076 ($adff) from module b20 (D = $flatten\P2.$verific$n10095$828, Q = \P2.reg1).
Adding EN signal on $flatten\P2.$verific$reg0_reg$b20.vhd:1015$1075 ($adff) from module b20 (D = $flatten\P2.$verific$n10062$827, Q = \P2.reg0).
Adding EN signal on $flatten\P2.$verific$datao_reg$b20.vhd:1015$1082 ($adff) from module b20 (D = { $flatten\P2.$verific$add_540$b20.vhd:976$1003 $flatten\P2.$verific$n10370$839 [0] }, Q = \P2.datao).
Adding EN signal on $flatten\P2.$verific$B_reg$b20.vhd:1015$1074 ($adff) from module b20 (D = $flatten\P2.$verific$n10835$683, Q = \P2.B).
Adding EN signal on $flatten\P1.$verific$reg3_reg$b20.vhd:505$558 ($adff) from module b20 (D = $flatten\P1.$verific$n10312$328 [2:0], Q = \P1.reg3 [2:0]).
Adding EN signal on $flatten\P1.$verific$reg3_reg$b20.vhd:505$558 ($adff) from module b20 (D = $flatten\P1.$verific$n11178$353 [31:3], Q = \P1.reg3 [31:3]).
Adding EN signal on $flatten\P1.$verific$reg2_reg$b20.vhd:505$557 ($adff) from module b20 (D = $flatten\P1.$verific$n10279$327, Q = \P1.reg2).
Adding EN signal on $flatten\P1.$verific$reg1_reg$b20.vhd:505$556 ($adff) from module b20 (D = $flatten\P1.$verific$n10246$326, Q = \P1.reg1).
Adding EN signal on $flatten\P1.$verific$reg0_reg$b20.vhd:505$555 ($adff) from module b20 (D = $flatten\P1.$verific$n10213$325, Q = \P1.reg0).
Adding EN signal on $flatten\P1.$verific$datao_reg$b20.vhd:505$562 ($adff) from module b20 (D = { $flatten\P1.$verific$add_570$b20.vhd:466$486 $flatten\P1.$verific$n10514$336 [0] }, Q = \P1.datao).
Adding EN signal on $flatten\P1.$verific$B_reg$b20.vhd:505$554 ($adff) from module b20 (D = $flatten\P1.$verific$n10979$183, Q = \P1.B).

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b20..
Removed 48 unused cells and 152 unused wires.
<suppressed ~49 debug messages>

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.

3.13.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b20..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~44 debug messages>

yosys> opt_reduce

3.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b20.
Performed a total of 0 changes.

yosys> opt_merge

3.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
<suppressed ~51 debug messages>
Removed a total of 17 cells.

yosys> opt_dff -sat

3.13.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 2 on $flatten\P1.$verific$d_reg$b20.vhd:505$553 ($adff) from module b20.
Setting constant 0-bit at position 3 on $flatten\P1.$verific$d_reg$b20.vhd:505$553 ($adff) from module b20.
Setting constant 0-bit at position 4 on $flatten\P1.$verific$d_reg$b20.vhd:505$553 ($adff) from module b20.
Setting constant 0-bit at position 5 on $flatten\P1.$verific$d_reg$b20.vhd:505$553 ($adff) from module b20.
Setting constant 0-bit at position 6 on $flatten\P1.$verific$d_reg$b20.vhd:505$553 ($adff) from module b20.
Setting constant 0-bit at position 7 on $flatten\P1.$verific$d_reg$b20.vhd:505$553 ($adff) from module b20.
Setting constant 0-bit at position 8 on $flatten\P1.$verific$d_reg$b20.vhd:505$553 ($adff) from module b20.
Setting constant 0-bit at position 9 on $flatten\P1.$verific$d_reg$b20.vhd:505$553 ($adff) from module b20.
Setting constant 0-bit at position 10 on $flatten\P1.$verific$d_reg$b20.vhd:505$553 ($adff) from module b20.
Setting constant 0-bit at position 11 on $flatten\P1.$verific$d_reg$b20.vhd:505$553 ($adff) from module b20.
Setting constant 0-bit at position 12 on $flatten\P1.$verific$d_reg$b20.vhd:505$553 ($adff) from module b20.
Setting constant 0-bit at position 13 on $flatten\P1.$verific$d_reg$b20.vhd:505$553 ($adff) from module b20.
Setting constant 0-bit at position 14 on $flatten\P1.$verific$d_reg$b20.vhd:505$553 ($adff) from module b20.
Setting constant 0-bit at position 15 on $flatten\P1.$verific$d_reg$b20.vhd:505$553 ($adff) from module b20.
Setting constant 0-bit at position 16 on $flatten\P1.$verific$d_reg$b20.vhd:505$553 ($adff) from module b20.
Setting constant 0-bit at position 17 on $flatten\P1.$verific$d_reg$b20.vhd:505$553 ($adff) from module b20.
Setting constant 0-bit at position 18 on $flatten\P1.$verific$d_reg$b20.vhd:505$553 ($adff) from module b20.
Setting constant 0-bit at position 19 on $flatten\P1.$verific$d_reg$b20.vhd:505$553 ($adff) from module b20.
Setting constant 0-bit at position 20 on $flatten\P1.$verific$d_reg$b20.vhd:505$553 ($adff) from module b20.
Setting constant 0-bit at position 21 on $flatten\P1.$verific$d_reg$b20.vhd:505$553 ($adff) from module b20.
Setting constant 0-bit at position 22 on $flatten\P1.$verific$d_reg$b20.vhd:505$553 ($adff) from module b20.
Setting constant 0-bit at position 23 on $flatten\P1.$verific$d_reg$b20.vhd:505$553 ($adff) from module b20.
Setting constant 0-bit at position 24 on $flatten\P1.$verific$d_reg$b20.vhd:505$553 ($adff) from module b20.
Setting constant 0-bit at position 25 on $flatten\P1.$verific$d_reg$b20.vhd:505$553 ($adff) from module b20.
Setting constant 0-bit at position 26 on $flatten\P1.$verific$d_reg$b20.vhd:505$553 ($adff) from module b20.
Setting constant 0-bit at position 27 on $flatten\P1.$verific$d_reg$b20.vhd:505$553 ($adff) from module b20.
Setting constant 0-bit at position 28 on $flatten\P1.$verific$d_reg$b20.vhd:505$553 ($adff) from module b20.
Setting constant 0-bit at position 29 on $flatten\P1.$verific$d_reg$b20.vhd:505$553 ($adff) from module b20.
Setting constant 0-bit at position 30 on $flatten\P1.$verific$d_reg$b20.vhd:505$553 ($adff) from module b20.
Setting constant 0-bit at position 31 on $flatten\P1.$verific$d_reg$b20.vhd:505$553 ($adff) from module b20.
Setting constant 0-bit at position 2 on $flatten\P2.$verific$d_reg$b20.vhd:1015$1073 ($adff) from module b20.
Setting constant 0-bit at position 3 on $flatten\P2.$verific$d_reg$b20.vhd:1015$1073 ($adff) from module b20.
Setting constant 0-bit at position 4 on $flatten\P2.$verific$d_reg$b20.vhd:1015$1073 ($adff) from module b20.
Setting constant 0-bit at position 5 on $flatten\P2.$verific$d_reg$b20.vhd:1015$1073 ($adff) from module b20.
Setting constant 0-bit at position 6 on $flatten\P2.$verific$d_reg$b20.vhd:1015$1073 ($adff) from module b20.
Setting constant 0-bit at position 7 on $flatten\P2.$verific$d_reg$b20.vhd:1015$1073 ($adff) from module b20.
Setting constant 0-bit at position 8 on $flatten\P2.$verific$d_reg$b20.vhd:1015$1073 ($adff) from module b20.
Setting constant 0-bit at position 9 on $flatten\P2.$verific$d_reg$b20.vhd:1015$1073 ($adff) from module b20.
Setting constant 0-bit at position 10 on $flatten\P2.$verific$d_reg$b20.vhd:1015$1073 ($adff) from module b20.
Setting constant 0-bit at position 11 on $flatten\P2.$verific$d_reg$b20.vhd:1015$1073 ($adff) from module b20.
Setting constant 0-bit at position 12 on $flatten\P2.$verific$d_reg$b20.vhd:1015$1073 ($adff) from module b20.
Setting constant 0-bit at position 13 on $flatten\P2.$verific$d_reg$b20.vhd:1015$1073 ($adff) from module b20.
Setting constant 0-bit at position 14 on $flatten\P2.$verific$d_reg$b20.vhd:1015$1073 ($adff) from module b20.
Setting constant 0-bit at position 15 on $flatten\P2.$verific$d_reg$b20.vhd:1015$1073 ($adff) from module b20.
Setting constant 0-bit at position 16 on $flatten\P2.$verific$d_reg$b20.vhd:1015$1073 ($adff) from module b20.
Setting constant 0-bit at position 17 on $flatten\P2.$verific$d_reg$b20.vhd:1015$1073 ($adff) from module b20.
Setting constant 0-bit at position 18 on $flatten\P2.$verific$d_reg$b20.vhd:1015$1073 ($adff) from module b20.
Setting constant 0-bit at position 19 on $flatten\P2.$verific$d_reg$b20.vhd:1015$1073 ($adff) from module b20.
Setting constant 0-bit at position 20 on $flatten\P2.$verific$d_reg$b20.vhd:1015$1073 ($adff) from module b20.
Setting constant 0-bit at position 21 on $flatten\P2.$verific$d_reg$b20.vhd:1015$1073 ($adff) from module b20.
Setting constant 0-bit at position 22 on $flatten\P2.$verific$d_reg$b20.vhd:1015$1073 ($adff) from module b20.
Setting constant 0-bit at position 23 on $flatten\P2.$verific$d_reg$b20.vhd:1015$1073 ($adff) from module b20.
Setting constant 0-bit at position 24 on $flatten\P2.$verific$d_reg$b20.vhd:1015$1073 ($adff) from module b20.
Setting constant 0-bit at position 25 on $flatten\P2.$verific$d_reg$b20.vhd:1015$1073 ($adff) from module b20.
Setting constant 0-bit at position 26 on $flatten\P2.$verific$d_reg$b20.vhd:1015$1073 ($adff) from module b20.
Setting constant 0-bit at position 27 on $flatten\P2.$verific$d_reg$b20.vhd:1015$1073 ($adff) from module b20.
Setting constant 0-bit at position 28 on $flatten\P2.$verific$d_reg$b20.vhd:1015$1073 ($adff) from module b20.
Setting constant 0-bit at position 29 on $flatten\P2.$verific$d_reg$b20.vhd:1015$1073 ($adff) from module b20.
Setting constant 0-bit at position 30 on $flatten\P2.$verific$d_reg$b20.vhd:1015$1073 ($adff) from module b20.
Setting constant 0-bit at position 31 on $flatten\P2.$verific$d_reg$b20.vhd:1015$1073 ($adff) from module b20.

yosys> opt_clean

3.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b20..
Removed 0 unused cells and 17 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.

3.13.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b20..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~44 debug messages>

yosys> opt_reduce

3.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b20.
Performed a total of 0 changes.

yosys> opt_merge

3.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b20..

yosys> opt_expr

3.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.

3.13.23. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 20) from port A of cell b20.$verific$LessThan_16$b20.vhd:1076$53 ($lt).
Removed top 1 bits (of 20) from port A of cell b20.$verific$LessThan_17$b20.vhd:1076$54 ($lt).
Removed top 1 bits (of 2) from port B of cell b20.$auto$fsm_map.cc:215:map_fsm$1135 ($eq).
Removed top 1 bits (of 2) from port B of cell b20.$auto$fsm_map.cc:215:map_fsm$1354 ($eq).
Removed top 1 bits (of 5) from port B of cell b20.$auto$fsm_map.cc:77:implement_pattern_cache$1322 ($eq).
Removed top 1 bits (of 6) from port B of cell b20.$auto$fsm_map.cc:77:implement_pattern_cache$1312 ($eq).
Removed top 3 bits (of 33) from port Y of cell b20.$flatten\P1.$verific$sub_365$b20.vhd:358$480 ($sub).
Removed top 3 bits (of 33) from port A of cell b20.$flatten\P1.$verific$sub_365$b20.vhd:358$480 ($sub).
Removed top 3 bits (of 33) from port B of cell b20.$flatten\P1.$verific$sub_365$b20.vhd:358$480 ($sub).
Removed top 2 bits (of 32) from port Y of cell b20.$flatten\P1.$verific$add_283$b20.vhd:318$478 ($add).
Removed top 2 bits (of 32) from port A of cell b20.$flatten\P1.$verific$add_283$b20.vhd:318$478 ($add).
Removed top 2 bits (of 32) from port B of cell b20.$flatten\P1.$verific$add_283$b20.vhd:318$478 ($add).
Removed top 30 bits (of 32) from port A of cell b20.$flatten\P1.$verific$equal_179$b20.vhd:246$472 ($eq).
Removed top 30 bits (of 32) from port A of cell b20.$flatten\P1.$verific$equal_178$b20.vhd:245$471 ($eq).
Removed top 31 bits (of 32) from port A of cell b20.$flatten\P1.$verific$equal_177$b20.vhd:244$470 ($eq).
Removed top 32 bits (of 33) from port A of cell b20.$flatten\P1.$verific$sub_168$b20.vhd:243$467 ($sub).
Removed top 1 bits (of 33) from port Y of cell b20.$flatten\P1.$verific$sub_168$b20.vhd:243$467 ($sub).
Removed top 1 bits (of 33) from port B of cell b20.$flatten\P1.$verific$sub_168$b20.vhd:243$467 ($sub).
Removed top 30 bits (of 32) from mux cell b20.$flatten\P1.$verific$mux_145$b20.vhd:226$461 ($mux).
Removed top 2 bits (of 3) from port A of cell b20.$flatten\P1.$verific$equal_143$b20.vhd:224$459 ($eq).
Removed top 1 bits (of 3) from port A of cell b20.$flatten\P1.$verific$equal_142$b20.vhd:223$458 ($eq).
Removed top 1 bits (of 3) from port A of cell b20.$flatten\P1.$verific$equal_141$b20.vhd:221$457 ($eq).
Removed top 30 bits (of 32) from mux cell b20.$flatten\P1.$verific$mux_140$b20.vhd:220$456 ($mux).
Removed top 30 bits (of 32) from mux cell b20.$flatten\P1.$verific$mux_138$b20.vhd:216$454 ($mux).
Removed top 2 bits (of 33) from port B of cell b20.$flatten\P1.$verific$sub_84$b20.vhd:149$436 ($sub).
Removed top 1 bits (of 33) from port Y of cell b20.$flatten\P1.$verific$sub_84$b20.vhd:149$436 ($sub).
Removed top 1 bits (of 33) from port A of cell b20.$flatten\P1.$verific$sub_84$b20.vhd:149$436 ($sub).
Removed top 1 bits (of 32) from port B of cell b20.$flatten\P1.$verific$LessThan_83$b20.vhd:148$435 ($lt).
Removed top 12 bits (of 32) from port A of cell b20.$flatten\P1.$verific$add_61$b20.vhd:113$423 ($add).
Removed top 12 bits (of 32) from port Y of cell b20.$flatten\P1.$verific$add_61$b20.vhd:113$423 ($add).
Removed top 12 bits (of 32) from port B of cell b20.$flatten\P1.$verific$add_61$b20.vhd:113$423 ($add).
Removed top 12 bits (of 32) from port A of cell b20.$flatten\P1.$verific$add_56$b20.vhd:110$421 ($add).
Removed top 12 bits (of 32) from port Y of cell b20.$flatten\P1.$verific$add_56$b20.vhd:110$421 ($add).
Removed top 12 bits (of 32) from port B of cell b20.$flatten\P1.$verific$add_56$b20.vhd:110$421 ($add).
Removed top 1 bits (of 3) from port Y of cell b20.$flatten\P1.$verific$add_44$b20.vhd:96$413 ($add).
Removed top 1 bits (of 3) from port A of cell b20.$flatten\P1.$verific$add_44$b20.vhd:96$413 ($add).
Removed top 25 bits (of 26) from port B of cell b20.$flatten\P1.$verific$add_39$b20.vhd:95$409 ($add).
Removed top 8 bits (of 9) from port Y of cell b20.$flatten\P1.$verific$add_36$b20.vhd:92$403 ($add).
Removed top 8 bits (of 9) from port A of cell b20.$flatten\P1.$verific$add_36$b20.vhd:92$403 ($add).
Removed top 9 bits (of 13) from port Y of cell b20.$flatten\P1.$verific$add_31$b20.vhd:90$396 ($add).
Removed top 9 bits (of 13) from port A of cell b20.$flatten\P1.$verific$add_31$b20.vhd:90$396 ($add).
Removed top 5 bits (of 8) from port Y of cell b20.$flatten\P1.$verific$add_26$b20.vhd:88$389 ($add).
Removed top 5 bits (of 8) from port A of cell b20.$flatten\P1.$verific$add_26$b20.vhd:88$389 ($add).
Removed top 3 bits (of 5) from port Y of cell b20.$flatten\P1.$verific$add_21$b20.vhd:86$382 ($add).
Removed top 3 bits (of 5) from port A of cell b20.$flatten\P1.$verific$add_21$b20.vhd:86$382 ($add).
Removed top 1 bits (of 33) from port Y of cell b20.$flatten\P1.$verific$unary_minus_15$b20.vhd:84$376 ($neg).
Removed top 1 bits (of 33) from port A of cell b20.$flatten\P1.$verific$unary_minus_15$b20.vhd:84$376 ($neg).
Removed top 1 bits (of 32) from port A of cell b20.$flatten\P1.$verific$LessThan_14$b20.vhd:83$375 ($lt).
Removed top 1 bits (of 6) from port B of cell b20.$auto$fsm_map.cc:77:implement_pattern_cache$1531 ($eq).
Removed top 3 bits (of 29) from FF cell b20.$auto$ff.cc:262:slice$1608 ($adffe).
Removed top 1 bits (of 21) from port A of cell b20.$flatten\P2.$verific$sub_634$b20.vhd:1004$1027 ($sub).
Removed top 1 bits (of 21) from port B of cell b20.$flatten\P2.$verific$sub_634$b20.vhd:1004$1027 ($sub).
Removed top 1 bits (of 21) from port A of cell b20.$flatten\P2.$verific$sub_632$b20.vhd:1003$1024 ($sub).
Removed top 1 bits (of 21) from port B of cell b20.$flatten\P2.$verific$sub_632$b20.vhd:1003$1024 ($sub).
Removed top 1 bits (of 5) from port B of cell b20.$auto$fsm_map.cc:77:implement_pattern_cache$1541 ($eq).
Removed top 2 bits (of 32) from port Y of cell b20.$flatten\P2.$verific$add_331$b20.vhd:868$985 ($add).
Removed top 2 bits (of 32) from port A of cell b20.$flatten\P2.$verific$add_331$b20.vhd:868$985 ($add).
Removed top 2 bits (of 32) from port B of cell b20.$flatten\P2.$verific$add_331$b20.vhd:868$985 ($add).
Removed top 3 bits (of 33) from port Y of cell b20.$flatten\P2.$verific$sub_297$b20.vhd:848$983 ($sub).
Removed top 3 bits (of 33) from port A of cell b20.$flatten\P2.$verific$sub_297$b20.vhd:848$983 ($sub).
Removed top 3 bits (of 33) from port B of cell b20.$flatten\P2.$verific$sub_297$b20.vhd:848$983 ($sub).
Removed top 30 bits (of 32) from port A of cell b20.$flatten\P2.$verific$equal_171$b20.vhd:756$975 ($eq).
Removed top 30 bits (of 32) from port A of cell b20.$flatten\P2.$verific$equal_170$b20.vhd:755$974 ($eq).
Removed top 31 bits (of 32) from port A of cell b20.$flatten\P2.$verific$equal_169$b20.vhd:754$973 ($eq).
Removed top 30 bits (of 32) from mux cell b20.$flatten\P2.$verific$mux_143$b20.vhd:736$964 ($mux).
Removed top 2 bits (of 3) from port A of cell b20.$flatten\P2.$verific$equal_141$b20.vhd:734$962 ($eq).
Removed top 1 bits (of 3) from port A of cell b20.$flatten\P2.$verific$equal_140$b20.vhd:733$961 ($eq).
Removed top 1 bits (of 3) from port A of cell b20.$flatten\P2.$verific$equal_139$b20.vhd:731$960 ($eq).
Removed top 30 bits (of 32) from mux cell b20.$flatten\P2.$verific$mux_138$b20.vhd:730$959 ($mux).
Removed top 30 bits (of 32) from mux cell b20.$flatten\P2.$verific$mux_136$b20.vhd:726$957 ($mux).
Removed top 3 bits (of 32) from FF cell b20.$auto$ff.cc:262:slice$1569 ($adffe).
Removed top 2 bits (of 33) from port B of cell b20.$flatten\P2.$verific$sub_82$b20.vhd:659$939 ($sub).
Removed top 1 bits (of 33) from port Y of cell b20.$flatten\P2.$verific$sub_82$b20.vhd:659$939 ($sub).
Removed top 1 bits (of 33) from port A of cell b20.$flatten\P2.$verific$sub_82$b20.vhd:659$939 ($sub).
Removed top 1 bits (of 32) from port B of cell b20.$flatten\P2.$verific$LessThan_81$b20.vhd:658$938 ($lt).
Removed top 13 bits (of 33) from port A of cell b20.$flatten\P2.$verific$sub_59$b20.vhd:623$926 ($sub).
Removed top 13 bits (of 33) from port Y of cell b20.$flatten\P2.$verific$sub_59$b20.vhd:623$926 ($sub).
Removed top 13 bits (of 33) from port B of cell b20.$flatten\P2.$verific$sub_59$b20.vhd:623$926 ($sub).
Removed top 13 bits (of 33) from port A of cell b20.$flatten\P2.$verific$sub_55$b20.vhd:620$924 ($sub).
Removed top 13 bits (of 33) from port Y of cell b20.$flatten\P2.$verific$sub_55$b20.vhd:620$924 ($sub).
Removed top 13 bits (of 33) from port B of cell b20.$flatten\P2.$verific$sub_55$b20.vhd:620$924 ($sub).
Removed top 1 bits (of 3) from port Y of cell b20.$flatten\P2.$verific$add_44$b20.vhd:606$916 ($add).
Removed top 1 bits (of 3) from port A of cell b20.$flatten\P2.$verific$add_44$b20.vhd:606$916 ($add).
Removed top 1 bits (of 30) from port A of cell b20.$flatten\P2.$verific$sub_39$b20.vhd:605$912 ($sub).
Removed top 26 bits (of 30) from port B of cell b20.$flatten\P2.$verific$sub_39$b20.vhd:605$912 ($sub).
Removed top 8 bits (of 9) from port Y of cell b20.$flatten\P2.$verific$add_36$b20.vhd:602$906 ($add).
Removed top 8 bits (of 9) from port A of cell b20.$flatten\P2.$verific$add_36$b20.vhd:602$906 ($add).
Removed top 9 bits (of 13) from port Y of cell b20.$flatten\P2.$verific$add_31$b20.vhd:600$899 ($add).
Removed top 9 bits (of 13) from port A of cell b20.$flatten\P2.$verific$add_31$b20.vhd:600$899 ($add).
Removed top 5 bits (of 8) from port Y of cell b20.$flatten\P2.$verific$add_26$b20.vhd:598$892 ($add).
Removed top 5 bits (of 8) from port A of cell b20.$flatten\P2.$verific$add_26$b20.vhd:598$892 ($add).
Removed top 3 bits (of 5) from port Y of cell b20.$flatten\P2.$verific$add_21$b20.vhd:596$885 ($add).
Removed top 3 bits (of 5) from port A of cell b20.$flatten\P2.$verific$add_21$b20.vhd:596$885 ($add).
Removed top 1 bits (of 33) from port Y of cell b20.$flatten\P2.$verific$unary_minus_15$b20.vhd:594$879 ($neg).
Removed top 1 bits (of 33) from port A of cell b20.$flatten\P2.$verific$unary_minus_15$b20.vhd:594$879 ($neg).
Removed top 1 bits (of 32) from port A of cell b20.$flatten\P2.$verific$LessThan_14$b20.vhd:593$878 ($lt).
Removed top 3 bits (of 32) from mux cell b20.$flatten\P1.$verific$mux_698$b20.vhd:502$536 ($mux).
Removed top 3 bits (of 32) from mux cell b20.$flatten\P2.$verific$mux_667$b20.vhd:1012$1056 ($mux).
Removed top 3 bits (of 32) from mux cell b20.$flatten\P1.$verific$mux_679$b20.vhd:501$522 ($mux).
Removed top 3 bits (of 32) from mux cell b20.$flatten\P2.$verific$mux_648$b20.vhd:1011$1042 ($mux).
Removed top 20 bits (of 21) from wire b20.$flatten\P1.$verific$n10477$333.
Removed top 3 bits (of 32) from wire b20.$flatten\P1.$verific$n10755$344.
Removed top 3 bits (of 32) from wire b20.$flatten\P1.$verific$n11178$353.
Removed top 30 bits (of 32) from wire b20.$flatten\P1.$verific$n11472$358.
Removed top 30 bits (of 32) from wire b20.$flatten\P1.$verific$n1407$226.
Removed top 30 bits (of 32) from wire b20.$flatten\P1.$verific$n1441$227.
Removed top 30 bits (of 32) from wire b20.$flatten\P1.$verific$n1478$228.
Removed top 1 bits (of 33) from wire b20.$flatten\P1.$verific$n184$195.
Removed top 1 bits (of 33) from wire b20.$flatten\P1.$verific$n1987$239.
Removed top 3 bits (of 5) from wire b20.$flatten\P1.$verific$n288$198.
Removed top 5 bits (of 8) from wire b20.$flatten\P1.$verific$n301$200.
Removed top 9 bits (of 13) from wire b20.$flatten\P1.$verific$n318$202.
Removed top 8 bits (of 9) from wire b20.$flatten\P1.$verific$n341$204.
Removed top 2 bits (of 32) from wire b20.$flatten\P1.$verific$n4241$272.
Removed top 1 bits (of 3) from wire b20.$flatten\P1.$verific$n436$208.
Removed top 3 bits (of 33) from wire b20.$flatten\P1.$verific$n5666$286.
Removed top 1 bits (of 32) from wire b20.$flatten\P1.$verific$n862$221.
Removed top 1 bits (of 33) from wire b20.$flatten\P1.$verific$n933$223.
Removed top 1 bits (of 21) from wire b20.$flatten\P2.$verific$n10326$837.
Removed top 3 bits (of 32) from wire b20.$flatten\P2.$verific$n10611$847.
Removed top 3 bits (of 32) from wire b20.$flatten\P2.$verific$n11034$856.
Removed top 30 bits (of 32) from wire b20.$flatten\P2.$verific$n11328$861.
Removed top 30 bits (of 32) from wire b20.$flatten\P2.$verific$n1408$726.
Removed top 31 bits (of 32) from wire b20.$flatten\P2.$verific$n1442$727.
Removed top 30 bits (of 32) from wire b20.$flatten\P2.$verific$n1479$728.
Removed top 1 bits (of 33) from wire b20.$flatten\P2.$verific$n184$695.
Removed top 5 bits (of 8) from wire b20.$flatten\P2.$verific$n301$700.
Removed top 9 bits (of 13) from wire b20.$flatten\P2.$verific$n318$702.
Removed top 8 bits (of 9) from wire b20.$flatten\P2.$verific$n341$704.
Removed top 1 bits (of 3) from wire b20.$flatten\P2.$verific$n439$708.
Removed top 3 bits (of 33) from wire b20.$flatten\P2.$verific$n4798$770.
Removed top 2 bits (of 32) from wire b20.$flatten\P2.$verific$n5506$780.
Removed top 4 bits (of 32) from wire b20.$flatten\P2.$verific$n5776$782.
Removed top 1 bits (of 33) from wire b20.$flatten\P2.$verific$n934$723.

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b20..
Removed 44 unused cells and 147 unused wires.
<suppressed ~45 debug messages>

yosys> alumacc

3.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module b20:
  creating $macc model for $flatten\P1.$verific$add_21$b20.vhd:86$382 ($add).
  creating $macc model for $flatten\P1.$verific$add_26$b20.vhd:88$389 ($add).
  creating $macc model for $flatten\P1.$verific$add_283$b20.vhd:318$478 ($add).
  creating $macc model for $flatten\P1.$verific$add_31$b20.vhd:90$396 ($add).
  creating $macc model for $flatten\P1.$verific$add_36$b20.vhd:92$403 ($add).
  creating $macc model for $flatten\P1.$verific$add_39$b20.vhd:95$409 ($add).
  creating $macc model for $flatten\P1.$verific$add_44$b20.vhd:96$413 ($add).
  creating $macc model for $flatten\P1.$verific$add_56$b20.vhd:110$421 ($add).
  creating $macc model for $flatten\P1.$verific$add_570$b20.vhd:466$485 ($add).
  creating $macc model for $flatten\P1.$verific$add_61$b20.vhd:113$423 ($add).
  creating $macc model for $flatten\P1.$verific$add_662$b20.vhd:493$505 ($add).
  creating $macc model for $flatten\P1.$verific$add_664$b20.vhd:494$507 ($add).
  creating $macc model for $flatten\P1.$verific$mult_667$b20.vhd:497$511 ($mul).
  creating $macc model for $flatten\P1.$verific$sub_168$b20.vhd:243$467 ($sub).
  creating $macc model for $flatten\P1.$verific$sub_365$b20.vhd:358$480 ($sub).
  creating $macc model for $flatten\P1.$verific$sub_84$b20.vhd:149$436 ($sub).
  creating $macc model for $flatten\P1.$verific$unary_minus_15$b20.vhd:84$376 ($neg).
  creating $macc model for $flatten\P2.$verific$add_21$b20.vhd:596$885 ($add).
  creating $macc model for $flatten\P2.$verific$add_26$b20.vhd:598$892 ($add).
  creating $macc model for $flatten\P2.$verific$add_31$b20.vhd:600$899 ($add).
  creating $macc model for $flatten\P2.$verific$add_331$b20.vhd:868$985 ($add).
  creating $macc model for $flatten\P2.$verific$add_36$b20.vhd:602$906 ($add).
  creating $macc model for $flatten\P2.$verific$add_44$b20.vhd:606$916 ($add).
  creating $macc model for $flatten\P2.$verific$add_540$b20.vhd:976$1002 ($add).
  creating $macc model for $flatten\P2.$verific$sub_297$b20.vhd:848$983 ($sub).
  creating $macc model for $flatten\P2.$verific$sub_39$b20.vhd:605$912 ($sub).
  creating $macc model for $flatten\P2.$verific$sub_55$b20.vhd:620$924 ($sub).
  creating $macc model for $flatten\P2.$verific$sub_59$b20.vhd:623$926 ($sub).
  creating $macc model for $flatten\P2.$verific$sub_632$b20.vhd:1003$1024 ($sub).
  creating $macc model for $flatten\P2.$verific$sub_634$b20.vhd:1004$1027 ($sub).
  creating $macc model for $flatten\P2.$verific$sub_82$b20.vhd:659$939 ($sub).
  creating $macc model for $flatten\P2.$verific$unary_minus_15$b20.vhd:594$879 ($neg).
  creating $macc model for $verific$add_24$b20.vhd:1077$58 ($add).
  creating $macc model for $verific$add_3$b20.vhd:1068$40 ($add).
  creating $macc model for $verific$add_30$b20.vhd:1081$60 ($add).
  creating $alu model for $macc $verific$add_30$b20.vhd:1081$60.
  creating $alu model for $macc $verific$add_3$b20.vhd:1068$40.
  creating $alu model for $macc $verific$add_24$b20.vhd:1077$58.
  creating $alu model for $macc $flatten\P2.$verific$unary_minus_15$b20.vhd:594$879.
  creating $alu model for $macc $flatten\P2.$verific$sub_82$b20.vhd:659$939.
  creating $alu model for $macc $flatten\P2.$verific$sub_634$b20.vhd:1004$1027.
  creating $alu model for $macc $flatten\P2.$verific$sub_632$b20.vhd:1003$1024.
  creating $alu model for $macc $flatten\P2.$verific$sub_59$b20.vhd:623$926.
  creating $alu model for $macc $flatten\P2.$verific$sub_55$b20.vhd:620$924.
  creating $alu model for $macc $flatten\P2.$verific$sub_39$b20.vhd:605$912.
  creating $alu model for $macc $flatten\P2.$verific$sub_297$b20.vhd:848$983.
  creating $alu model for $macc $flatten\P2.$verific$add_540$b20.vhd:976$1002.
  creating $alu model for $macc $flatten\P2.$verific$add_44$b20.vhd:606$916.
  creating $alu model for $macc $flatten\P2.$verific$add_36$b20.vhd:602$906.
  creating $alu model for $macc $flatten\P2.$verific$add_331$b20.vhd:868$985.
  creating $alu model for $macc $flatten\P2.$verific$add_31$b20.vhd:600$899.
  creating $alu model for $macc $flatten\P2.$verific$add_26$b20.vhd:598$892.
  creating $alu model for $macc $flatten\P2.$verific$add_21$b20.vhd:596$885.
  creating $alu model for $macc $flatten\P1.$verific$unary_minus_15$b20.vhd:84$376.
  creating $alu model for $macc $flatten\P1.$verific$sub_84$b20.vhd:149$436.
  creating $alu model for $macc $flatten\P1.$verific$sub_365$b20.vhd:358$480.
  creating $alu model for $macc $flatten\P1.$verific$sub_168$b20.vhd:243$467.
  creating $alu model for $macc $flatten\P1.$verific$add_664$b20.vhd:494$507.
  creating $alu model for $macc $flatten\P1.$verific$add_662$b20.vhd:493$505.
  creating $alu model for $macc $flatten\P1.$verific$add_61$b20.vhd:113$423.
  creating $alu model for $macc $flatten\P1.$verific$add_570$b20.vhd:466$485.
  creating $alu model for $macc $flatten\P1.$verific$add_56$b20.vhd:110$421.
  creating $alu model for $macc $flatten\P1.$verific$add_44$b20.vhd:96$413.
  creating $alu model for $macc $flatten\P1.$verific$add_39$b20.vhd:95$409.
  creating $alu model for $macc $flatten\P1.$verific$add_36$b20.vhd:92$403.
  creating $alu model for $macc $flatten\P1.$verific$add_31$b20.vhd:90$396.
  creating $alu model for $macc $flatten\P1.$verific$add_283$b20.vhd:318$478.
  creating $alu model for $macc $flatten\P1.$verific$add_26$b20.vhd:88$389.
  creating $alu model for $macc $flatten\P1.$verific$add_21$b20.vhd:86$382.
  creating $macc cell for $flatten\P1.$verific$mult_667$b20.vhd:497$511: $auto$alumacc.cc:365:replace_macc$1860
  creating $alu model for $flatten\P1.$verific$LessThan_14$b20.vhd:83$375 ($lt): new $alu
  creating $alu model for $flatten\P1.$verific$LessThan_68$b20.vhd:118$429 ($lt): new $alu
  creating $alu model for $flatten\P1.$verific$LessThan_78$b20.vhd:138$433 ($lt): merged with $flatten\P1.$verific$LessThan_68$b20.vhd:118$429.
  creating $alu model for $flatten\P1.$verific$LessThan_83$b20.vhd:148$435 ($lt): new $alu
  creating $alu model for $flatten\P1.$verific$LessThan_87$b20.vhd:151$440 ($lt): new $alu
  creating $alu model for $flatten\P2.$verific$LessThan_14$b20.vhd:593$878 ($lt): new $alu
  creating $alu model for $flatten\P2.$verific$LessThan_66$b20.vhd:628$932 ($lt): new $alu
  creating $alu model for $flatten\P2.$verific$LessThan_76$b20.vhd:648$936 ($lt): merged with $flatten\P2.$verific$LessThan_66$b20.vhd:628$932.
  creating $alu model for $flatten\P2.$verific$LessThan_81$b20.vhd:658$938 ($lt): new $alu
  creating $alu model for $flatten\P2.$verific$LessThan_85$b20.vhd:661$943 ($lt): new $alu
  creating $alu model for $verific$LessThan_11$b20.vhd:1075$48 ($lt): new $alu
  creating $alu model for $verific$LessThan_12$b20.vhd:1075$49 ($lt): new $alu
  creating $alu model for $verific$LessThan_16$b20.vhd:1076$53 ($lt): new $alu
  creating $alu model for $verific$LessThan_17$b20.vhd:1076$54 ($lt): new $alu
  creating $alu cell for $verific$LessThan_17$b20.vhd:1076$54: $auto$alumacc.cc:485:replace_alu$1873
  creating $alu cell for $verific$LessThan_16$b20.vhd:1076$53: $auto$alumacc.cc:485:replace_alu$1878
  creating $alu cell for $verific$LessThan_12$b20.vhd:1075$49: $auto$alumacc.cc:485:replace_alu$1883
  creating $alu cell for $verific$LessThan_11$b20.vhd:1075$48: $auto$alumacc.cc:485:replace_alu$1888
  creating $alu cell for $flatten\P2.$verific$LessThan_85$b20.vhd:661$943: $auto$alumacc.cc:485:replace_alu$1893
  creating $alu cell for $flatten\P2.$verific$LessThan_81$b20.vhd:658$938: $auto$alumacc.cc:485:replace_alu$1904
  creating $alu cell for $flatten\P2.$verific$LessThan_66$b20.vhd:628$932, $flatten\P2.$verific$LessThan_76$b20.vhd:648$936: $auto$alumacc.cc:485:replace_alu$1915
  creating $alu cell for $flatten\P2.$verific$LessThan_14$b20.vhd:593$878: $auto$alumacc.cc:485:replace_alu$1926
  creating $alu cell for $flatten\P1.$verific$LessThan_87$b20.vhd:151$440: $auto$alumacc.cc:485:replace_alu$1931
  creating $alu cell for $flatten\P1.$verific$LessThan_83$b20.vhd:148$435: $auto$alumacc.cc:485:replace_alu$1942
  creating $alu cell for $flatten\P1.$verific$LessThan_68$b20.vhd:118$429, $flatten\P1.$verific$LessThan_78$b20.vhd:138$433: $auto$alumacc.cc:485:replace_alu$1953
  creating $alu cell for $flatten\P1.$verific$LessThan_14$b20.vhd:83$375: $auto$alumacc.cc:485:replace_alu$1964
  creating $alu cell for $flatten\P1.$verific$add_21$b20.vhd:86$382: $auto$alumacc.cc:485:replace_alu$1969
  creating $alu cell for $flatten\P1.$verific$add_26$b20.vhd:88$389: $auto$alumacc.cc:485:replace_alu$1972
  creating $alu cell for $flatten\P1.$verific$add_283$b20.vhd:318$478: $auto$alumacc.cc:485:replace_alu$1975
  creating $alu cell for $flatten\P1.$verific$add_31$b20.vhd:90$396: $auto$alumacc.cc:485:replace_alu$1978
  creating $alu cell for $flatten\P1.$verific$add_36$b20.vhd:92$403: $auto$alumacc.cc:485:replace_alu$1981
  creating $alu cell for $flatten\P1.$verific$add_39$b20.vhd:95$409: $auto$alumacc.cc:485:replace_alu$1984
  creating $alu cell for $flatten\P1.$verific$add_44$b20.vhd:96$413: $auto$alumacc.cc:485:replace_alu$1987
  creating $alu cell for $flatten\P1.$verific$add_570$b20.vhd:466$485: $auto$alumacc.cc:485:replace_alu$1990
  creating $alu cell for $flatten\P1.$verific$add_56$b20.vhd:110$421: $auto$alumacc.cc:485:replace_alu$1993
  creating $alu cell for $flatten\P1.$verific$add_662$b20.vhd:493$505: $auto$alumacc.cc:485:replace_alu$1996
  creating $alu cell for $flatten\P1.$verific$add_61$b20.vhd:113$423: $auto$alumacc.cc:485:replace_alu$1999
  creating $alu cell for $flatten\P1.$verific$add_664$b20.vhd:494$507: $auto$alumacc.cc:485:replace_alu$2002
  creating $alu cell for $flatten\P1.$verific$sub_168$b20.vhd:243$467: $auto$alumacc.cc:485:replace_alu$2005
  creating $alu cell for $flatten\P1.$verific$sub_365$b20.vhd:358$480: $auto$alumacc.cc:485:replace_alu$2008
  creating $alu cell for $flatten\P1.$verific$sub_84$b20.vhd:149$436: $auto$alumacc.cc:485:replace_alu$2011
  creating $alu cell for $flatten\P1.$verific$unary_minus_15$b20.vhd:84$376: $auto$alumacc.cc:485:replace_alu$2014
  creating $alu cell for $flatten\P2.$verific$add_21$b20.vhd:596$885: $auto$alumacc.cc:485:replace_alu$2017
  creating $alu cell for $flatten\P2.$verific$add_26$b20.vhd:598$892: $auto$alumacc.cc:485:replace_alu$2020
  creating $alu cell for $flatten\P2.$verific$add_31$b20.vhd:600$899: $auto$alumacc.cc:485:replace_alu$2023
  creating $alu cell for $flatten\P2.$verific$add_331$b20.vhd:868$985: $auto$alumacc.cc:485:replace_alu$2026
  creating $alu cell for $flatten\P2.$verific$add_36$b20.vhd:602$906: $auto$alumacc.cc:485:replace_alu$2029
  creating $alu cell for $flatten\P2.$verific$add_44$b20.vhd:606$916: $auto$alumacc.cc:485:replace_alu$2032
  creating $alu cell for $flatten\P2.$verific$add_540$b20.vhd:976$1002: $auto$alumacc.cc:485:replace_alu$2035
  creating $alu cell for $flatten\P2.$verific$sub_297$b20.vhd:848$983: $auto$alumacc.cc:485:replace_alu$2038
  creating $alu cell for $flatten\P2.$verific$sub_39$b20.vhd:605$912: $auto$alumacc.cc:485:replace_alu$2041
  creating $alu cell for $flatten\P2.$verific$sub_55$b20.vhd:620$924: $auto$alumacc.cc:485:replace_alu$2044
  creating $alu cell for $flatten\P2.$verific$sub_59$b20.vhd:623$926: $auto$alumacc.cc:485:replace_alu$2047
  creating $alu cell for $flatten\P2.$verific$sub_632$b20.vhd:1003$1024: $auto$alumacc.cc:485:replace_alu$2050
  creating $alu cell for $flatten\P2.$verific$sub_634$b20.vhd:1004$1027: $auto$alumacc.cc:485:replace_alu$2053
  creating $alu cell for $flatten\P2.$verific$sub_82$b20.vhd:659$939: $auto$alumacc.cc:485:replace_alu$2056
  creating $alu cell for $flatten\P2.$verific$unary_minus_15$b20.vhd:594$879: $auto$alumacc.cc:485:replace_alu$2059
  creating $alu cell for $verific$add_24$b20.vhd:1077$58: $auto$alumacc.cc:485:replace_alu$2062
  creating $alu cell for $verific$add_3$b20.vhd:1068$40: $auto$alumacc.cc:485:replace_alu$2065
  creating $alu cell for $verific$add_30$b20.vhd:1081$60: $auto$alumacc.cc:485:replace_alu$2068
  created 46 $alu and 1 $macc cells.

yosys> opt

3.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.
<suppressed ~10 debug messages>

yosys> opt_merge -nomux

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b20..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~44 debug messages>

yosys> opt_reduce

3.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b20.
Performed a total of 0 changes.

yosys> opt_merge

3.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b20..
Removed 4 unused cells and 24 unused wires.
<suppressed ~5 debug messages>

yosys> opt_expr

3.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.

3.19.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b20..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~44 debug messages>

yosys> opt_reduce

3.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b20.
Performed a total of 0 changes.

yosys> opt_merge

3.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b20..

yosys> opt_expr

3.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.

3.19.16. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.20. Printing statistics.

=== b20 ===

   Number of wires:                564
   Number of wire bits:           9270
   Number of public wires:          46
   Number of public wire bits:     732
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                428
     $adff                          14
     $adffe                         13
     $alu                           46
     $and                           68
     $bmux                          32
     $eq                            50
     $logic_not                      4
     $macc                           1
     $mux                           98
     $ne                             2
     $not                           27
     $or                            25
     $reduce_and                    12
     $reduce_or                     34
     $xor                            2


yosys> memory -nomap

3.21. Executing MEMORY pass.

yosys> opt_mem

3.21.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.21.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.21.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.21.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.21.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.21.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b20..

yosys> memory_share

3.21.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.21.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.21.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b20..

yosys> memory_collect

3.21.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.22. Printing statistics.

=== b20 ===

   Number of wires:                564
   Number of wire bits:           9270
   Number of public wires:          46
   Number of public wire bits:     732
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                428
     $adff                          14
     $adffe                         13
     $alu                           46
     $and                           68
     $bmux                          32
     $eq                            50
     $logic_not                      4
     $macc                           1
     $mux                           98
     $ne                             2
     $not                           27
     $or                            25
     $reduce_and                    12
     $reduce_or                     34
     $xor                            2


yosys> opt_clean

3.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b20..

yosys> stat

3.24. Printing statistics.

=== b20 ===

   Number of wires:                564
   Number of wire bits:           9270
   Number of public wires:          46
   Number of public wire bits:     732
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                428
     $adff                          14
     $adffe                         13
     $alu                           46
     $and                           68
     $bmux                          32
     $eq                            50
     $logic_not                      4
     $macc                           1
     $mux                           98
     $ne                             2
     $not                           27
     $or                            25
     $reduce_and                    12
     $reduce_or                     34
     $xor                            2


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.25. Executing TECHMAP pass (map to technology primitives).

3.25.1. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.25.2. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.25.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $reduce_or.
Using template $paramod$be80489e44a49c29884f59fd81c31ed03229cfc1\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$79fc87901d7fd8aaad689b5406671422f5fa25b9\_80_rs_alu for cells of type $alu.
Using template $paramod$6fc37af1c109ae54e8aed83fcd995c12d378ce93\_90_alu for cells of type $alu.
Using template $paramod$51c80ded93a30cabdd6a720b4f0ed1d8c51829dd\_90_alu for cells of type $alu.
Using template $paramod$43e6bdbb0e8a6b23dfd3962c0280737d54f8e2be\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $bmux.
Using template $paramod$6a42b6fefed750f8a1c58eab59479d960557103c\_90_alu for cells of type $alu.
Using template $paramod$c32aaa9fd758c6ea2b382f4327253b21b576e597\_90_alu for cells of type $alu.
Using template $paramod$32a7b7b86c07519b7537abc18e96f0331f97914d\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$83fc07d9557d32477a9ece9e4e82efd3bbe82ab8\_80_rs_alu for cells of type $alu.
Using template $paramod$e891e6b399cf52748460a311fafe476815d24bd7\_90_alu for cells of type $alu.
Using template $paramod$63a3f1ffa662be02d3403b533885c56d18ebe02a\_80_rs_alu for cells of type $alu.
Using template $paramod$8027eda61d95ddd4d4dd7b5cb21f3830552ebe4e\_80_rs_alu for cells of type $alu.
Using template $paramod$ee932b0f27f4b110ee21c85da6e79a9925243db9\_80_rs_alu for cells of type $alu.
Using template $paramod$175e67c02b86e96b1288b9dc100122520d7240d8\_90_alu for cells of type $alu.
Using template $paramod$83784888def4f70dbbded37c6d05d2ea1157c936\_90_alu for cells of type $alu.
/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:80: Warning: Range [-1:-1] select out of bounds on signal `\C': Setting 1 LSB bits to undef.
/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88: Warning: Range [-1:-1] select out of bounds on signal `\Y': Setting 1 LSB bits to undef.
/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88: Warning: Range [-1:-1] select out of bounds on signal `\S': Setting 1 LSB bits to undef.
/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88: Warning: Ignoring assignment to constant bits:
    old assignment: 1'x = $xor$/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88$8406_Y
    new assignment: { } = { }.
/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:89: Warning: Range [-1:-1] select out of bounds on signal `\S': Setting 1 LSB bits to undef.
/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:89: Warning: Range [-1:-1] select out of bounds on signal `\AA': Setting 1 LSB bits to undef.
Using template $paramod$fc972a7a46956c1788f3cb5257b53c8f1df2d0cc\_90_alu for cells of type $alu.
Using template $paramod$9e7011427f22271c0942bd67000ef26931352ace\_80_rs_alu for cells of type $alu.
Using template $paramod$3ef7d3dd227da7627a99c5e5a6a4deb817573e39\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $ne.
Using extmapper maccmap for cells of type $macc.
  add 3'101 * $auto$wreduce.cc:455:run$1642 [0] (3x1 bits, unsigned)
Using template $paramod$7bd3bdb0fef16fc2bd4fd60ec6e664d79bf31ac7\_80_rs_alu for cells of type $alu.
Using template $paramod$6dc2bc4e177433cbefea60fe94ff11f8a7c6abf8\_90_alu for cells of type $alu.
Using template $paramod$2fcdd83405601057593cb25247304b1283f3b87e\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000011011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000011110 for cells of type $lcu.
No more expansions possible.
<suppressed ~4971 debug messages>

yosys> stat

3.26. Printing statistics.

=== b20 ===

   Number of wires:               3372
   Number of wire bits:          59931
   Number of public wires:          46
   Number of public wire bits:     732
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              18801
     $_AND_                       1600
     $_DFFE_PP0P_                  316
     $_DFF_PP0_                    118
     $_MUX_                      11657
     $_NOT_                       1088
     $_OR_                        1497
     $_XOR_                       1903
     adder_carry                   622


yosys> opt

3.27. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.
<suppressed ~7022 debug messages>

yosys> opt_merge -nomux

3.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
<suppressed ~9462 debug messages>
Removed a total of 3154 cells.

yosys> opt_muxtree

3.27.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b20..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b20.
Performed a total of 0 changes.

yosys> opt_merge

3.27.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$10256 ($_DFF_PP0_) from module b20 (D = $flatten\P2.$verific$n11102$858 [19], Q = \P2.addr [19]).
Adding EN signal on $auto$ff.cc:262:slice$4374 ($_DFF_PP0_) from module b20 (D = $flatten\P1.$verific$n11246$355 [19], Q = \P1.addr [19]).
Adding EN signal on $auto$ff.cc:262:slice$4352 ($_DFFE_PP0P_) from module b20 (D = $flatten\P1.$verific$n10979$183, Q = \P1.B).
Adding EN signal on $auto$ff.cc:262:slice$10234 ($_DFFE_PP0P_) from module b20 (D = $flatten\P2.$verific$n10835$683, Q = \P2.B).
Adding EN signal on $auto$ff.cc:262:slice$4355 ($_DFF_PP0_) from module b20 (D = $flatten\P1.$verific$n11246$355 [0], Q = \P1.addr [0]).
Adding EN signal on $auto$ff.cc:262:slice$4356 ($_DFF_PP0_) from module b20 (D = $flatten\P1.$verific$n11246$355 [1], Q = \P1.addr [1]).
Adding EN signal on $auto$ff.cc:262:slice$4357 ($_DFF_PP0_) from module b20 (D = $flatten\P1.$verific$n11246$355 [2], Q = \P1.addr [2]).
Adding EN signal on $auto$ff.cc:262:slice$4358 ($_DFF_PP0_) from module b20 (D = $flatten\P1.$verific$n11246$355 [3], Q = \P1.addr [3]).
Adding EN signal on $auto$ff.cc:262:slice$4359 ($_DFF_PP0_) from module b20 (D = $flatten\P1.$verific$n11246$355 [4], Q = \P1.addr [4]).
Adding EN signal on $auto$ff.cc:262:slice$4360 ($_DFF_PP0_) from module b20 (D = $flatten\P1.$verific$n11246$355 [5], Q = \P1.addr [5]).
Adding EN signal on $auto$ff.cc:262:slice$4361 ($_DFF_PP0_) from module b20 (D = $flatten\P1.$verific$n11246$355 [6], Q = \P1.addr [6]).
Adding EN signal on $auto$ff.cc:262:slice$4362 ($_DFF_PP0_) from module b20 (D = $flatten\P1.$verific$n11246$355 [7], Q = \P1.addr [7]).
Adding EN signal on $auto$ff.cc:262:slice$4363 ($_DFF_PP0_) from module b20 (D = $flatten\P1.$verific$n11246$355 [8], Q = \P1.addr [8]).
Adding EN signal on $auto$ff.cc:262:slice$4364 ($_DFF_PP0_) from module b20 (D = $flatten\P1.$verific$n11246$355 [9], Q = \P1.addr [9]).
Adding EN signal on $auto$ff.cc:262:slice$4365 ($_DFF_PP0_) from module b20 (D = $flatten\P1.$verific$n11246$355 [10], Q = \P1.addr [10]).
Adding EN signal on $auto$ff.cc:262:slice$4366 ($_DFF_PP0_) from module b20 (D = $flatten\P1.$verific$n11246$355 [11], Q = \P1.addr [11]).
Adding EN signal on $auto$ff.cc:262:slice$4367 ($_DFF_PP0_) from module b20 (D = $flatten\P1.$verific$n11246$355 [12], Q = \P1.addr [12]).
Adding EN signal on $auto$ff.cc:262:slice$4368 ($_DFF_PP0_) from module b20 (D = $flatten\P1.$verific$n11246$355 [13], Q = \P1.addr [13]).
Adding EN signal on $auto$ff.cc:262:slice$4369 ($_DFF_PP0_) from module b20 (D = $flatten\P1.$verific$n11246$355 [14], Q = \P1.addr [14]).
Adding EN signal on $auto$ff.cc:262:slice$4370 ($_DFF_PP0_) from module b20 (D = $flatten\P1.$verific$n11246$355 [15], Q = \P1.addr [15]).
Adding EN signal on $auto$ff.cc:262:slice$4371 ($_DFF_PP0_) from module b20 (D = $flatten\P1.$verific$n11246$355 [16], Q = \P1.addr [16]).
Adding EN signal on $auto$ff.cc:262:slice$4372 ($_DFF_PP0_) from module b20 (D = $flatten\P1.$verific$n11246$355 [17], Q = \P1.addr [17]).
Adding EN signal on $auto$ff.cc:262:slice$4373 ($_DFF_PP0_) from module b20 (D = $flatten\P1.$verific$n11246$355 [18], Q = \P1.addr [18]).
Adding EN signal on $auto$ff.cc:262:slice$15169 ($_DFFE_PP0P_) from module b20 (D = $auto$wreduce.cc:455:run$1662 [0], Q = \P2.reg3 [0]).
Adding EN signal on $auto$ff.cc:262:slice$15170 ($_DFFE_PP0P_) from module b20 (D = $auto$wreduce.cc:455:run$1662 [1], Q = \P2.reg3 [1]).
Adding EN signal on $auto$ff.cc:262:slice$15171 ($_DFFE_PP0P_) from module b20 (D = $auto$wreduce.cc:455:run$1662 [2], Q = \P2.reg3 [2]).
Adding EN signal on $auto$ff.cc:262:slice$10237 ($_DFF_PP0_) from module b20 (D = $flatten\P2.$verific$n11102$858 [0], Q = \P2.addr [0]).
Adding EN signal on $auto$ff.cc:262:slice$10238 ($_DFF_PP0_) from module b20 (D = $flatten\P2.$verific$n11102$858 [1], Q = \P2.addr [1]).
Adding EN signal on $auto$ff.cc:262:slice$10239 ($_DFF_PP0_) from module b20 (D = $flatten\P2.$verific$n11102$858 [2], Q = \P2.addr [2]).
Adding EN signal on $auto$ff.cc:262:slice$10240 ($_DFF_PP0_) from module b20 (D = $flatten\P2.$verific$n11102$858 [3], Q = \P2.addr [3]).
Adding EN signal on $auto$ff.cc:262:slice$10241 ($_DFF_PP0_) from module b20 (D = $flatten\P2.$verific$n11102$858 [4], Q = \P2.addr [4]).
Adding EN signal on $auto$ff.cc:262:slice$10242 ($_DFF_PP0_) from module b20 (D = $flatten\P2.$verific$n11102$858 [5], Q = \P2.addr [5]).
Adding EN signal on $auto$ff.cc:262:slice$10243 ($_DFF_PP0_) from module b20 (D = $flatten\P2.$verific$n11102$858 [6], Q = \P2.addr [6]).
Adding EN signal on $auto$ff.cc:262:slice$10244 ($_DFF_PP0_) from module b20 (D = $flatten\P2.$verific$n11102$858 [7], Q = \P2.addr [7]).
Adding EN signal on $auto$ff.cc:262:slice$10245 ($_DFF_PP0_) from module b20 (D = $flatten\P2.$verific$n11102$858 [8], Q = \P2.addr [8]).
Adding EN signal on $auto$ff.cc:262:slice$10246 ($_DFF_PP0_) from module b20 (D = $flatten\P2.$verific$n11102$858 [9], Q = \P2.addr [9]).
Adding EN signal on $auto$ff.cc:262:slice$10247 ($_DFF_PP0_) from module b20 (D = $flatten\P2.$verific$n11102$858 [10], Q = \P2.addr [10]).
Adding EN signal on $auto$ff.cc:262:slice$10248 ($_DFF_PP0_) from module b20 (D = $flatten\P2.$verific$n11102$858 [11], Q = \P2.addr [11]).
Adding EN signal on $auto$ff.cc:262:slice$10249 ($_DFF_PP0_) from module b20 (D = $flatten\P2.$verific$n11102$858 [12], Q = \P2.addr [12]).
Adding EN signal on $auto$ff.cc:262:slice$10250 ($_DFF_PP0_) from module b20 (D = $flatten\P2.$verific$n11102$858 [13], Q = \P2.addr [13]).
Adding EN signal on $auto$ff.cc:262:slice$10251 ($_DFF_PP0_) from module b20 (D = $flatten\P2.$verific$n11102$858 [14], Q = \P2.addr [14]).
Adding EN signal on $auto$ff.cc:262:slice$10252 ($_DFF_PP0_) from module b20 (D = $flatten\P2.$verific$n11102$858 [15], Q = \P2.addr [15]).
Adding EN signal on $auto$ff.cc:262:slice$10253 ($_DFF_PP0_) from module b20 (D = $flatten\P2.$verific$n11102$858 [16], Q = \P2.addr [16]).
Adding EN signal on $auto$ff.cc:262:slice$10254 ($_DFF_PP0_) from module b20 (D = $flatten\P2.$verific$n11102$858 [17], Q = \P2.addr [17]).
Adding EN signal on $auto$ff.cc:262:slice$10255 ($_DFF_PP0_) from module b20 (D = $flatten\P2.$verific$n11102$858 [18], Q = \P2.addr [18]).

yosys> opt_clean

3.27.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b20..
Removed 816 unused cells and 2359 unused wires.
<suppressed ~817 debug messages>

yosys> opt_expr

3.27.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.
<suppressed ~619 debug messages>

3.27.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.27.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b20..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b20.
Performed a total of 0 changes.

yosys> opt_merge

3.27.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
<suppressed ~1431 debug messages>
Removed a total of 477 cells.

yosys> opt_dff

3.27.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$10279 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$12937 [22], Q = \P2.reg2 [22]).
Adding EN signal on $auto$ff.cc:262:slice$10278 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$12937 [21], Q = \P2.reg2 [21]).
Adding EN signal on $auto$ff.cc:262:slice$10277 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$12937 [20], Q = \P2.reg2 [20]).
Adding EN signal on $auto$ff.cc:262:slice$10276 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$12937 [19], Q = \P2.reg2 [19]).
Adding EN signal on $auto$ff.cc:262:slice$10275 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$12937 [18], Q = \P2.reg2 [18]).
Adding EN signal on $auto$ff.cc:262:slice$10274 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$12937 [17], Q = \P2.reg2 [17]).
Adding EN signal on $auto$ff.cc:262:slice$10273 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$12937 [16], Q = \P2.reg2 [16]).
Adding EN signal on $auto$ff.cc:262:slice$10272 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$12937 [15], Q = \P2.reg2 [15]).
Adding EN signal on $auto$ff.cc:262:slice$10271 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$12937 [14], Q = \P2.reg2 [14]).
Adding EN signal on $auto$ff.cc:262:slice$10270 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$12937 [13], Q = \P2.reg2 [13]).
Adding EN signal on $auto$ff.cc:262:slice$10269 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$12937 [12], Q = \P2.reg2 [12]).
Adding EN signal on $auto$ff.cc:262:slice$10268 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$12937 [11], Q = \P2.reg2 [11]).
Adding EN signal on $auto$ff.cc:262:slice$10267 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$12937 [10], Q = \P2.reg2 [10]).
Adding EN signal on $auto$ff.cc:262:slice$10266 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$12937 [9], Q = \P2.reg2 [9]).
Adding EN signal on $auto$ff.cc:262:slice$10265 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$12937 [8], Q = \P2.reg2 [8]).
Adding EN signal on $auto$ff.cc:262:slice$10264 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$12937 [7], Q = \P2.reg2 [7]).
Adding EN signal on $auto$ff.cc:262:slice$10263 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$12937 [6], Q = \P2.reg2 [6]).
Adding EN signal on $auto$ff.cc:262:slice$10262 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$12937 [5], Q = \P2.reg2 [5]).
Adding EN signal on $auto$ff.cc:262:slice$10261 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$12937 [4], Q = \P2.reg2 [4]).
Adding EN signal on $auto$ff.cc:262:slice$10260 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$12937 [3], Q = \P2.reg2 [3]).
Adding EN signal on $auto$ff.cc:262:slice$10259 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$12937 [2], Q = \P2.reg2 [2]).
Adding EN signal on $auto$ff.cc:262:slice$10258 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$12937 [1], Q = \P2.reg2 [1]).
Adding EN signal on $auto$ff.cc:262:slice$10257 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$12937 [0], Q = \P2.reg2 [0]).
Adding EN signal on $auto$ff.cc:262:slice$4391 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5733 [16], Q = \P1.reg2 [16]).
Adding EN signal on $auto$ff.cc:262:slice$4390 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5733 [15], Q = \P1.reg2 [15]).
Adding EN signal on $auto$ff.cc:262:slice$4389 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5733 [14], Q = \P1.reg2 [14]).
Adding EN signal on $auto$ff.cc:262:slice$4388 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5733 [13], Q = \P1.reg2 [13]).
Adding EN signal on $auto$ff.cc:262:slice$4387 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5733 [12], Q = \P1.reg2 [12]).
Adding EN signal on $auto$ff.cc:262:slice$4386 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5733 [11], Q = \P1.reg2 [11]).
Adding EN signal on $auto$ff.cc:262:slice$4385 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5733 [10], Q = \P1.reg2 [10]).
Adding EN signal on $auto$ff.cc:262:slice$4384 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5733 [9], Q = \P1.reg2 [9]).
Adding EN signal on $auto$ff.cc:262:slice$4383 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5733 [8], Q = \P1.reg2 [8]).
Adding EN signal on $auto$ff.cc:262:slice$4382 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5733 [7], Q = \P1.reg2 [7]).
Adding EN signal on $auto$ff.cc:262:slice$4381 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5733 [6], Q = \P1.reg2 [6]).
Adding EN signal on $auto$ff.cc:262:slice$4380 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5733 [5], Q = \P1.reg2 [5]).
Adding EN signal on $auto$ff.cc:262:slice$4379 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5733 [4], Q = \P1.reg2 [4]).
Adding EN signal on $auto$ff.cc:262:slice$4378 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5733 [3], Q = \P1.reg2 [3]).
Adding EN signal on $auto$ff.cc:262:slice$4377 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5733 [2], Q = \P1.reg2 [2]).
Adding EN signal on $auto$ff.cc:262:slice$4376 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5733 [1], Q = \P1.reg2 [1]).
Adding EN signal on $auto$ff.cc:262:slice$4375 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5733 [0], Q = \P1.reg2 [0]).
Adding EN signal on $auto$ff.cc:262:slice$10387 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5249 [2], Q = \P1.reg3 [2]).
Adding EN signal on $auto$ff.cc:262:slice$10386 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5249 [1], Q = \P1.reg3 [1]).
Adding EN signal on $auto$ff.cc:262:slice$10385 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5249 [0], Q = \P1.reg3 [0]).
Adding EN signal on $auto$ff.cc:262:slice$10352 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13905 [31], Q = \P2.reg0 [31]).
Adding EN signal on $auto$ff.cc:262:slice$10351 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13905 [30], Q = \P2.reg0 [30]).
Adding EN signal on $auto$ff.cc:262:slice$10350 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13905 [29], Q = \P2.reg0 [29]).
Adding EN signal on $auto$ff.cc:262:slice$10349 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13905 [28], Q = \P2.reg0 [28]).
Adding EN signal on $auto$ff.cc:262:slice$10348 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13905 [27], Q = \P2.reg0 [27]).
Adding EN signal on $auto$ff.cc:262:slice$10347 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13905 [26], Q = \P2.reg0 [26]).
Adding EN signal on $auto$ff.cc:262:slice$10346 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13905 [25], Q = \P2.reg0 [25]).
Adding EN signal on $auto$ff.cc:262:slice$10345 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13905 [24], Q = \P2.reg0 [24]).
Adding EN signal on $auto$ff.cc:262:slice$10344 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13905 [23], Q = \P2.reg0 [23]).
Adding EN signal on $auto$ff.cc:262:slice$10343 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13905 [22], Q = \P2.reg0 [22]).
Adding EN signal on $auto$ff.cc:262:slice$10342 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13905 [21], Q = \P2.reg0 [21]).
Adding EN signal on $auto$ff.cc:262:slice$10341 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13905 [20], Q = \P2.reg0 [20]).
Adding EN signal on $auto$ff.cc:262:slice$10340 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13905 [19], Q = \P2.reg0 [19]).
Adding EN signal on $auto$ff.cc:262:slice$10339 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13905 [18], Q = \P2.reg0 [18]).
Adding EN signal on $auto$ff.cc:262:slice$10338 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13905 [17], Q = \P2.reg0 [17]).
Adding EN signal on $auto$ff.cc:262:slice$10337 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13905 [16], Q = \P2.reg0 [16]).
Adding EN signal on $auto$ff.cc:262:slice$10336 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13905 [15], Q = \P2.reg0 [15]).
Adding EN signal on $auto$ff.cc:262:slice$10335 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13905 [14], Q = \P2.reg0 [14]).
Adding EN signal on $auto$ff.cc:262:slice$10334 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13905 [13], Q = \P2.reg0 [13]).
Adding EN signal on $auto$ff.cc:262:slice$10333 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13905 [12], Q = \P2.reg0 [12]).
Adding EN signal on $auto$ff.cc:262:slice$10332 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13905 [11], Q = \P2.reg0 [11]).
Adding EN signal on $auto$ff.cc:262:slice$10331 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13905 [10], Q = \P2.reg0 [10]).
Adding EN signal on $auto$ff.cc:262:slice$10330 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13905 [9], Q = \P2.reg0 [9]).
Adding EN signal on $auto$ff.cc:262:slice$10329 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13905 [8], Q = \P2.reg0 [8]).
Adding EN signal on $auto$ff.cc:262:slice$10328 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13905 [7], Q = \P2.reg0 [7]).
Adding EN signal on $auto$ff.cc:262:slice$10327 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13905 [6], Q = \P2.reg0 [6]).
Adding EN signal on $auto$ff.cc:262:slice$10326 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13905 [5], Q = \P2.reg0 [5]).
Adding EN signal on $auto$ff.cc:262:slice$10325 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13905 [4], Q = \P2.reg0 [4]).
Adding EN signal on $auto$ff.cc:262:slice$10324 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13905 [3], Q = \P2.reg0 [3]).
Adding EN signal on $auto$ff.cc:262:slice$10323 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13905 [2], Q = \P2.reg0 [2]).
Adding EN signal on $auto$ff.cc:262:slice$10322 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13905 [1], Q = \P2.reg0 [1]).
Adding EN signal on $auto$ff.cc:262:slice$10321 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13905 [0], Q = \P2.reg0 [0]).
Adding EN signal on $auto$ff.cc:262:slice$10320 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13421 [31], Q = \P2.reg1 [31]).
Adding EN signal on $auto$ff.cc:262:slice$10319 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13421 [30], Q = \P2.reg1 [30]).
Adding EN signal on $auto$ff.cc:262:slice$10318 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13421 [29], Q = \P2.reg1 [29]).
Adding EN signal on $auto$ff.cc:262:slice$10317 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13421 [28], Q = \P2.reg1 [28]).
Adding EN signal on $auto$ff.cc:262:slice$10316 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13421 [27], Q = \P2.reg1 [27]).
Adding EN signal on $auto$ff.cc:262:slice$10315 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13421 [26], Q = \P2.reg1 [26]).
Adding EN signal on $auto$ff.cc:262:slice$10314 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13421 [25], Q = \P2.reg1 [25]).
Adding EN signal on $auto$ff.cc:262:slice$10313 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13421 [24], Q = \P2.reg1 [24]).
Adding EN signal on $auto$ff.cc:262:slice$10312 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13421 [23], Q = \P2.reg1 [23]).
Adding EN signal on $auto$ff.cc:262:slice$10311 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13421 [22], Q = \P2.reg1 [22]).
Adding EN signal on $auto$ff.cc:262:slice$10310 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13421 [21], Q = \P2.reg1 [21]).
Adding EN signal on $auto$ff.cc:262:slice$10309 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13421 [20], Q = \P2.reg1 [20]).
Adding EN signal on $auto$ff.cc:262:slice$10308 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13421 [19], Q = \P2.reg1 [19]).
Adding EN signal on $auto$ff.cc:262:slice$10307 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13421 [18], Q = \P2.reg1 [18]).
Adding EN signal on $auto$ff.cc:262:slice$10306 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13421 [17], Q = \P2.reg1 [17]).
Adding EN signal on $auto$ff.cc:262:slice$10305 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13421 [16], Q = \P2.reg1 [16]).
Adding EN signal on $auto$ff.cc:262:slice$10304 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13421 [15], Q = \P2.reg1 [15]).
Adding EN signal on $auto$ff.cc:262:slice$10303 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13421 [14], Q = \P2.reg1 [14]).
Adding EN signal on $auto$ff.cc:262:slice$10302 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13421 [13], Q = \P2.reg1 [13]).
Adding EN signal on $auto$ff.cc:262:slice$10301 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13421 [12], Q = \P2.reg1 [12]).
Adding EN signal on $auto$ff.cc:262:slice$10300 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13421 [11], Q = \P2.reg1 [11]).
Adding EN signal on $auto$ff.cc:262:slice$10299 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13421 [10], Q = \P2.reg1 [10]).
Adding EN signal on $auto$ff.cc:262:slice$10298 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13421 [9], Q = \P2.reg1 [9]).
Adding EN signal on $auto$ff.cc:262:slice$10297 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13421 [8], Q = \P2.reg1 [8]).
Adding EN signal on $auto$ff.cc:262:slice$10296 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13421 [7], Q = \P2.reg1 [7]).
Adding EN signal on $auto$ff.cc:262:slice$10295 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13421 [6], Q = \P2.reg1 [6]).
Adding EN signal on $auto$ff.cc:262:slice$10294 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13421 [5], Q = \P2.reg1 [5]).
Adding EN signal on $auto$ff.cc:262:slice$10293 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13421 [4], Q = \P2.reg1 [4]).
Adding EN signal on $auto$ff.cc:262:slice$10292 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13421 [3], Q = \P2.reg1 [3]).
Adding EN signal on $auto$ff.cc:262:slice$10291 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13421 [2], Q = \P2.reg1 [2]).
Adding EN signal on $auto$ff.cc:262:slice$10290 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13421 [1], Q = \P2.reg1 [1]).
Adding EN signal on $auto$ff.cc:262:slice$10289 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13421 [0], Q = \P2.reg1 [0]).
Adding EN signal on $auto$ff.cc:262:slice$10288 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$12937 [31], Q = \P2.reg2 [31]).
Adding EN signal on $auto$ff.cc:262:slice$10287 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$12937 [30], Q = \P2.reg2 [30]).
Adding EN signal on $auto$ff.cc:262:slice$10286 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$12937 [29], Q = \P2.reg2 [29]).
Adding EN signal on $auto$ff.cc:262:slice$10285 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$12937 [28], Q = \P2.reg2 [28]).
Adding EN signal on $auto$ff.cc:262:slice$10284 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$12937 [27], Q = \P2.reg2 [27]).
Adding EN signal on $auto$ff.cc:262:slice$10283 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$12937 [26], Q = \P2.reg2 [26]).
Adding EN signal on $auto$ff.cc:262:slice$10282 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$12937 [25], Q = \P2.reg2 [25]).
Adding EN signal on $auto$ff.cc:262:slice$10281 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$12937 [24], Q = \P2.reg2 [24]).
Adding EN signal on $auto$ff.cc:262:slice$10280 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$12937 [23], Q = \P2.reg2 [23]).
Adding EN signal on $auto$ff.cc:262:slice$4470 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6701 [31], Q = \P1.reg0 [31]).
Adding EN signal on $auto$ff.cc:262:slice$4469 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6701 [30], Q = \P1.reg0 [30]).
Adding EN signal on $auto$ff.cc:262:slice$4468 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6701 [29], Q = \P1.reg0 [29]).
Adding EN signal on $auto$ff.cc:262:slice$4467 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6701 [28], Q = \P1.reg0 [28]).
Adding EN signal on $auto$ff.cc:262:slice$4466 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6701 [27], Q = \P1.reg0 [27]).
Adding EN signal on $auto$ff.cc:262:slice$4465 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6701 [26], Q = \P1.reg0 [26]).
Adding EN signal on $auto$ff.cc:262:slice$4464 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6701 [25], Q = \P1.reg0 [25]).
Adding EN signal on $auto$ff.cc:262:slice$4463 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6701 [24], Q = \P1.reg0 [24]).
Adding EN signal on $auto$ff.cc:262:slice$4462 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6701 [23], Q = \P1.reg0 [23]).
Adding EN signal on $auto$ff.cc:262:slice$4461 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6701 [22], Q = \P1.reg0 [22]).
Adding EN signal on $auto$ff.cc:262:slice$4460 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6701 [21], Q = \P1.reg0 [21]).
Adding EN signal on $auto$ff.cc:262:slice$4459 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6701 [20], Q = \P1.reg0 [20]).
Adding EN signal on $auto$ff.cc:262:slice$4458 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6701 [19], Q = \P1.reg0 [19]).
Adding EN signal on $auto$ff.cc:262:slice$4457 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6701 [18], Q = \P1.reg0 [18]).
Adding EN signal on $auto$ff.cc:262:slice$4456 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6701 [17], Q = \P1.reg0 [17]).
Adding EN signal on $auto$ff.cc:262:slice$4455 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6701 [16], Q = \P1.reg0 [16]).
Adding EN signal on $auto$ff.cc:262:slice$4454 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6701 [15], Q = \P1.reg0 [15]).
Adding EN signal on $auto$ff.cc:262:slice$4453 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6701 [14], Q = \P1.reg0 [14]).
Adding EN signal on $auto$ff.cc:262:slice$4452 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6701 [13], Q = \P1.reg0 [13]).
Adding EN signal on $auto$ff.cc:262:slice$4451 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6701 [12], Q = \P1.reg0 [12]).
Adding EN signal on $auto$ff.cc:262:slice$4450 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6701 [11], Q = \P1.reg0 [11]).
Adding EN signal on $auto$ff.cc:262:slice$4449 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6701 [10], Q = \P1.reg0 [10]).
Adding EN signal on $auto$ff.cc:262:slice$4448 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6701 [9], Q = \P1.reg0 [9]).
Adding EN signal on $auto$ff.cc:262:slice$4447 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6701 [8], Q = \P1.reg0 [8]).
Adding EN signal on $auto$ff.cc:262:slice$4446 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6701 [7], Q = \P1.reg0 [7]).
Adding EN signal on $auto$ff.cc:262:slice$4445 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6701 [6], Q = \P1.reg0 [6]).
Adding EN signal on $auto$ff.cc:262:slice$4444 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6701 [5], Q = \P1.reg0 [5]).
Adding EN signal on $auto$ff.cc:262:slice$4443 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6701 [4], Q = \P1.reg0 [4]).
Adding EN signal on $auto$ff.cc:262:slice$4442 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6701 [3], Q = \P1.reg0 [3]).
Adding EN signal on $auto$ff.cc:262:slice$4441 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6701 [2], Q = \P1.reg0 [2]).
Adding EN signal on $auto$ff.cc:262:slice$4440 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6701 [1], Q = \P1.reg0 [1]).
Adding EN signal on $auto$ff.cc:262:slice$4439 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6701 [0], Q = \P1.reg0 [0]).
Adding EN signal on $auto$ff.cc:262:slice$4438 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6217 [31], Q = \P1.reg1 [31]).
Adding EN signal on $auto$ff.cc:262:slice$4437 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6217 [30], Q = \P1.reg1 [30]).
Adding EN signal on $auto$ff.cc:262:slice$4436 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6217 [29], Q = \P1.reg1 [29]).
Adding EN signal on $auto$ff.cc:262:slice$4435 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6217 [28], Q = \P1.reg1 [28]).
Adding EN signal on $auto$ff.cc:262:slice$4434 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6217 [27], Q = \P1.reg1 [27]).
Adding EN signal on $auto$ff.cc:262:slice$4433 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6217 [26], Q = \P1.reg1 [26]).
Adding EN signal on $auto$ff.cc:262:slice$4432 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6217 [25], Q = \P1.reg1 [25]).
Adding EN signal on $auto$ff.cc:262:slice$4431 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6217 [24], Q = \P1.reg1 [24]).
Adding EN signal on $auto$ff.cc:262:slice$4430 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6217 [23], Q = \P1.reg1 [23]).
Adding EN signal on $auto$ff.cc:262:slice$4429 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6217 [22], Q = \P1.reg1 [22]).
Adding EN signal on $auto$ff.cc:262:slice$4428 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6217 [21], Q = \P1.reg1 [21]).
Adding EN signal on $auto$ff.cc:262:slice$4427 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6217 [20], Q = \P1.reg1 [20]).
Adding EN signal on $auto$ff.cc:262:slice$4426 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6217 [19], Q = \P1.reg1 [19]).
Adding EN signal on $auto$ff.cc:262:slice$4425 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6217 [18], Q = \P1.reg1 [18]).
Adding EN signal on $auto$ff.cc:262:slice$4424 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6217 [17], Q = \P1.reg1 [17]).
Adding EN signal on $auto$ff.cc:262:slice$4423 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6217 [16], Q = \P1.reg1 [16]).
Adding EN signal on $auto$ff.cc:262:slice$4422 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6217 [15], Q = \P1.reg1 [15]).
Adding EN signal on $auto$ff.cc:262:slice$4421 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6217 [14], Q = \P1.reg1 [14]).
Adding EN signal on $auto$ff.cc:262:slice$4420 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6217 [13], Q = \P1.reg1 [13]).
Adding EN signal on $auto$ff.cc:262:slice$4419 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6217 [12], Q = \P1.reg1 [12]).
Adding EN signal on $auto$ff.cc:262:slice$4418 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6217 [11], Q = \P1.reg1 [11]).
Adding EN signal on $auto$ff.cc:262:slice$4417 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6217 [10], Q = \P1.reg1 [10]).
Adding EN signal on $auto$ff.cc:262:slice$4416 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6217 [9], Q = \P1.reg1 [9]).
Adding EN signal on $auto$ff.cc:262:slice$4415 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6217 [8], Q = \P1.reg1 [8]).
Adding EN signal on $auto$ff.cc:262:slice$4414 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6217 [7], Q = \P1.reg1 [7]).
Adding EN signal on $auto$ff.cc:262:slice$4413 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6217 [6], Q = \P1.reg1 [6]).
Adding EN signal on $auto$ff.cc:262:slice$4412 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6217 [5], Q = \P1.reg1 [5]).
Adding EN signal on $auto$ff.cc:262:slice$4411 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6217 [4], Q = \P1.reg1 [4]).
Adding EN signal on $auto$ff.cc:262:slice$4410 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6217 [3], Q = \P1.reg1 [3]).
Adding EN signal on $auto$ff.cc:262:slice$4409 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6217 [2], Q = \P1.reg1 [2]).
Adding EN signal on $auto$ff.cc:262:slice$4408 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6217 [1], Q = \P1.reg1 [1]).
Adding EN signal on $auto$ff.cc:262:slice$4407 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6217 [0], Q = \P1.reg1 [0]).
Adding EN signal on $auto$ff.cc:262:slice$4406 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5733 [31], Q = \P1.reg2 [31]).
Adding EN signal on $auto$ff.cc:262:slice$4405 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5733 [30], Q = \P1.reg2 [30]).
Adding EN signal on $auto$ff.cc:262:slice$4404 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5733 [29], Q = \P1.reg2 [29]).
Adding EN signal on $auto$ff.cc:262:slice$4403 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5733 [28], Q = \P1.reg2 [28]).
Adding EN signal on $auto$ff.cc:262:slice$4402 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5733 [27], Q = \P1.reg2 [27]).
Adding EN signal on $auto$ff.cc:262:slice$4401 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5733 [26], Q = \P1.reg2 [26]).
Adding EN signal on $auto$ff.cc:262:slice$4400 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5733 [25], Q = \P1.reg2 [25]).
Adding EN signal on $auto$ff.cc:262:slice$4399 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5733 [24], Q = \P1.reg2 [24]).
Adding EN signal on $auto$ff.cc:262:slice$4398 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5733 [23], Q = \P1.reg2 [23]).
Adding EN signal on $auto$ff.cc:262:slice$4397 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5733 [22], Q = \P1.reg2 [22]).
Adding EN signal on $auto$ff.cc:262:slice$4396 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5733 [21], Q = \P1.reg2 [21]).
Adding EN signal on $auto$ff.cc:262:slice$4395 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5733 [20], Q = \P1.reg2 [20]).
Adding EN signal on $auto$ff.cc:262:slice$4394 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5733 [19], Q = \P1.reg2 [19]).
Adding EN signal on $auto$ff.cc:262:slice$4393 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5733 [18], Q = \P1.reg2 [18]).
Adding EN signal on $auto$ff.cc:262:slice$4392 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$5733 [17], Q = \P1.reg2 [17]).

yosys> opt_clean

3.27.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b20..
Removed 0 unused cells and 1660 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.27.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.
<suppressed ~4187 debug messages>

3.27.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.27.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b20..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b20.
Performed a total of 0 changes.

yosys> opt_merge

3.27.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
<suppressed ~19770 debug messages>
Removed a total of 6590 cells.

yosys> opt_dff

3.27.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b20..
Removed 0 unused cells and 6361 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.27.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.

3.27.23. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.27.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b20..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b20.
Performed a total of 0 changes.

yosys> opt_merge

3.27.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.27. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b20..

yosys> opt_expr

3.27.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.

3.27.30. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.
<suppressed ~1238 debug messages>

yosys> opt_merge

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
Removed a total of 0 cells.

yosys> opt_dff

3.28.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$32809 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13421 [1], Q = \P2.reg1 [1]).
Adding EN signal on $auto$ff.cc:262:slice$32639 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13421 [3], Q = \P2.reg1 [3]).
Adding EN signal on $auto$ff.cc:262:slice$32469 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13421 [5], Q = \P2.reg1 [5]).
Adding EN signal on $auto$ff.cc:262:slice$32299 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13421 [7], Q = \P2.reg1 [7]).
Adding EN signal on $auto$ff.cc:262:slice$32129 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13421 [9], Q = \P2.reg1 [9]).
Adding EN signal on $auto$ff.cc:262:slice$31959 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13421 [11], Q = \P2.reg1 [11]).
Adding EN signal on $auto$ff.cc:262:slice$31789 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13421 [13], Q = \P2.reg1 [13]).
Adding EN signal on $auto$ff.cc:262:slice$31619 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13421 [15], Q = \P2.reg1 [15]).
Adding EN signal on $auto$ff.cc:262:slice$31449 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13421 [17], Q = \P2.reg1 [17]).
Adding EN signal on $auto$ff.cc:262:slice$31279 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13421 [19], Q = \P2.reg1 [19]).
Adding EN signal on $auto$ff.cc:262:slice$31109 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13421 [21], Q = \P2.reg1 [21]).
Adding EN signal on $auto$ff.cc:262:slice$30939 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13421 [23], Q = \P2.reg1 [23]).
Adding EN signal on $auto$ff.cc:262:slice$30769 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13421 [25], Q = \P2.reg1 [25]).
Adding EN signal on $auto$ff.cc:262:slice$30599 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13421 [27], Q = \P2.reg1 [27]).
Adding EN signal on $auto$ff.cc:262:slice$30429 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13421 [29], Q = \P2.reg1 [29]).
Adding EN signal on $auto$ff.cc:262:slice$30259 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13421 [31], Q = \P2.reg1 [31]).
Adding EN signal on $auto$ff.cc:262:slice$30089 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13905 [1], Q = \P2.reg0 [1]).
Adding EN signal on $auto$ff.cc:262:slice$32894 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13421 [0], Q = \P2.reg1 [0]).
Adding EN signal on $auto$ff.cc:262:slice$32724 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13421 [2], Q = \P2.reg1 [2]).
Adding EN signal on $auto$ff.cc:262:slice$32554 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13421 [4], Q = \P2.reg1 [4]).
Adding EN signal on $auto$ff.cc:262:slice$32384 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13421 [6], Q = \P2.reg1 [6]).
Adding EN signal on $auto$ff.cc:262:slice$32214 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13421 [8], Q = \P2.reg1 [8]).
Adding EN signal on $auto$ff.cc:262:slice$32044 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13421 [10], Q = \P2.reg1 [10]).
Adding EN signal on $auto$ff.cc:262:slice$31874 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13421 [12], Q = \P2.reg1 [12]).
Adding EN signal on $auto$ff.cc:262:slice$31704 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13421 [14], Q = \P2.reg1 [14]).
Adding EN signal on $auto$ff.cc:262:slice$31534 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13421 [16], Q = \P2.reg1 [16]).
Adding EN signal on $auto$ff.cc:262:slice$31364 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13421 [18], Q = \P2.reg1 [18]).
Adding EN signal on $auto$ff.cc:262:slice$31194 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13421 [20], Q = \P2.reg1 [20]).
Adding EN signal on $auto$ff.cc:262:slice$31024 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13421 [22], Q = \P2.reg1 [22]).
Adding EN signal on $auto$ff.cc:262:slice$30854 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13421 [24], Q = \P2.reg1 [24]).
Adding EN signal on $auto$ff.cc:262:slice$30684 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13421 [26], Q = \P2.reg1 [26]).
Adding EN signal on $auto$ff.cc:262:slice$30514 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13421 [28], Q = \P2.reg1 [28]).
Adding EN signal on $auto$ff.cc:262:slice$30344 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13421 [30], Q = \P2.reg1 [30]).
Adding EN signal on $auto$ff.cc:262:slice$30174 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13905 [0], Q = \P2.reg0 [0]).
Adding EN signal on $auto$ff.cc:262:slice$30004 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13905 [2], Q = \P2.reg0 [2]).
Adding EN signal on $auto$ff.cc:262:slice$39876 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6217 [0], Q = \P1.reg1 [0]).
Adding EN signal on $auto$ff.cc:262:slice$36709 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$6701 [0], Q = \P1.reg0 [0]).
Adding EN signal on $auto$ff.cc:262:slice$29919 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13905 [3], Q = \P2.reg0 [3]).
Adding EN signal on $auto$ff.cc:262:slice$29834 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13905 [4], Q = \P2.reg0 [4]).
Adding EN signal on $auto$ff.cc:262:slice$29749 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13905 [5], Q = \P2.reg0 [5]).
Adding EN signal on $auto$ff.cc:262:slice$29664 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13905 [6], Q = \P2.reg0 [6]).
Adding EN signal on $auto$ff.cc:262:slice$29579 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13905 [7], Q = \P2.reg0 [7]).
Adding EN signal on $auto$ff.cc:262:slice$29494 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13905 [8], Q = \P2.reg0 [8]).
Adding EN signal on $auto$ff.cc:262:slice$29409 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13905 [9], Q = \P2.reg0 [9]).
Adding EN signal on $auto$ff.cc:262:slice$29324 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13905 [10], Q = \P2.reg0 [10]).
Adding EN signal on $auto$ff.cc:262:slice$29239 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13905 [11], Q = \P2.reg0 [11]).
Adding EN signal on $auto$ff.cc:262:slice$29154 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13905 [12], Q = \P2.reg0 [12]).
Adding EN signal on $auto$ff.cc:262:slice$29069 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13905 [13], Q = \P2.reg0 [13]).
Adding EN signal on $auto$ff.cc:262:slice$28984 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13905 [14], Q = \P2.reg0 [14]).
Adding EN signal on $auto$ff.cc:262:slice$28899 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13905 [15], Q = \P2.reg0 [15]).
Adding EN signal on $auto$ff.cc:262:slice$28814 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13905 [16], Q = \P2.reg0 [16]).
Adding EN signal on $auto$ff.cc:262:slice$28729 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13905 [17], Q = \P2.reg0 [17]).
Adding EN signal on $auto$ff.cc:262:slice$28644 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13905 [18], Q = \P2.reg0 [18]).
Adding EN signal on $auto$ff.cc:262:slice$28559 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13905 [19], Q = \P2.reg0 [19]).
Adding EN signal on $auto$ff.cc:262:slice$28474 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13905 [20], Q = \P2.reg0 [20]).
Adding EN signal on $auto$ff.cc:262:slice$28389 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13905 [21], Q = \P2.reg0 [21]).
Adding EN signal on $auto$ff.cc:262:slice$28304 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13905 [22], Q = \P2.reg0 [22]).
Adding EN signal on $auto$ff.cc:262:slice$28219 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13905 [23], Q = \P2.reg0 [23]).
Adding EN signal on $auto$ff.cc:262:slice$28134 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13905 [24], Q = \P2.reg0 [24]).
Adding EN signal on $auto$ff.cc:262:slice$28049 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13905 [25], Q = \P2.reg0 [25]).
Adding EN signal on $auto$ff.cc:262:slice$27964 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13905 [26], Q = \P2.reg0 [26]).
Adding EN signal on $auto$ff.cc:262:slice$27879 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13905 [27], Q = \P2.reg0 [27]).
Adding EN signal on $auto$ff.cc:262:slice$27794 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13905 [28], Q = \P2.reg0 [28]).
Adding EN signal on $auto$ff.cc:262:slice$27709 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13905 [29], Q = \P2.reg0 [29]).
Adding EN signal on $auto$ff.cc:262:slice$27624 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13905 [30], Q = \P2.reg0 [30]).
Adding EN signal on $auto$ff.cc:262:slice$27539 ($_DFFE_PP0P_) from module b20 (D = $auto$simplemap.cc:309:simplemap_bmux$13905 [31], Q = \P2.reg0 [31]).

yosys> opt_clean

3.28.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b20..
Removed 0 unused cells and 156 unused wires.
<suppressed ~1 debug messages>

3.28.5. Rerunning OPT passes. (Removed registers in this run.)

yosys> opt_expr -full

3.28.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.
<suppressed ~270 debug messages>

yosys> opt_merge

3.28.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
<suppressed ~756 debug messages>
Removed a total of 252 cells.

yosys> opt_dff

3.28.8. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b20..
Removed 0 unused cells and 318 unused wires.
<suppressed ~1 debug messages>

3.28.10. Finished fast OPT passes.

yosys> memory_map

3.29. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.30. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.

yosys> opt_merge -nomux

3.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b20..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b20.
Performed a total of 0 changes.

yosys> opt_merge

3.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
Removed a total of 0 cells.

yosys> opt_share

3.30.6. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$15115 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$15135
        $auto$simplemap.cc:86:simplemap_bitop$15136

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$15116 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$15133
        $auto$simplemap.cc:86:simplemap_bitop$15134

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$15117 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$15131
        $auto$simplemap.cc:86:simplemap_bitop$15132

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$15118 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$15129
        $auto$simplemap.cc:86:simplemap_bitop$15130

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$7838 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$7858
        $auto$simplemap.cc:86:simplemap_bitop$7859

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$7839 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$7856
        $auto$simplemap.cc:86:simplemap_bitop$7857

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$7840 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$7854
        $auto$simplemap.cc:86:simplemap_bitop$7855

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$7841 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$7852
        $auto$simplemap.cc:86:simplemap_bitop$7853


yosys> opt_dff

3.30.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b20..
Removed 0 unused cells and 16 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.30.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.
<suppressed ~8 debug messages>

3.30.10. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.30.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b20..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~8 debug messages>

yosys> opt_reduce -full

3.30.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b20.
Performed a total of 0 changes.

yosys> opt_merge

3.30.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
Removed a total of 0 cells.

yosys> opt_share

3.30.14. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$15122 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$15133
        $auto$simplemap.cc:86:simplemap_bitop$15135

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$15123 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$15129
        $auto$simplemap.cc:86:simplemap_bitop$15131

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$7845 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$7856
        $auto$simplemap.cc:86:simplemap_bitop$7858

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$7846 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$7852
        $auto$simplemap.cc:86:simplemap_bitop$7854


yosys> opt_dff

3.30.15. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b20..
Removed 0 unused cells and 8 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.30.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.
<suppressed ~4 debug messages>

3.30.18. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.30.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b20..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

yosys> opt_reduce -full

3.30.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b20.
Performed a total of 0 changes.

yosys> opt_merge

3.30.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
Removed a total of 0 cells.

yosys> opt_share

3.30.22. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$15126 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$15129
        $auto$simplemap.cc:86:simplemap_bitop$15133

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$7849 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$7852
        $auto$simplemap.cc:86:simplemap_bitop$7856


yosys> opt_dff

3.30.23. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b20..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.30.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.
<suppressed ~2 debug messages>

3.30.26. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.30.27. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b20..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

yosys> opt_reduce -full

3.30.28. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b20.
Performed a total of 0 changes.

yosys> opt_merge

3.30.29. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
Removed a total of 0 cells.

yosys> opt_share

3.30.30. Executing OPT_SHARE pass.

yosys> opt_dff

3.30.31. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.32. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b20..

yosys> opt_expr -full

3.30.33. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.

3.30.34. Finished OPT passes. (There is nothing left to do.)

yosys> techmap -map +/techmap.v

3.31. Executing TECHMAP pass (map to technology primitives).

3.31.1. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.31.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
No more expansions possible.
<suppressed ~85 debug messages>

yosys> opt -sat

3.32. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.

yosys> opt_merge -nomux

3.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
<suppressed ~42 debug messages>
Removed a total of 14 cells.

yosys> opt_muxtree

3.32.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b20..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.32.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b20.
Performed a total of 0 changes.

yosys> opt_merge

3.32.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.32.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.32.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b20..
Removed 0 unused cells and 6 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.

3.32.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.32.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b20..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.32.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b20.
Performed a total of 0 changes.

yosys> opt_merge

3.32.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.32.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.32.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b20..

yosys> opt_expr

3.32.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.

3.32.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

3.33. Executing ABC pass (technology mapping using ABC).

3.33.1. Summary of detected clock domains:
  730 cells in clk=\clock, en=\P1.state, arst=\reset, srst={ }
  29 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$46819, arst=\reset, srst={ }
  31 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$46802, arst=\reset, srst={ }
  673 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$46479, arst=\reset, srst={ }
  524 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$46207, arst=\reset, srst={ }
  167 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$1633, arst=\reset, srst={ }
  699 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$36865, arst=\reset, srst={ }
  468 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$33698, arst=\reset, srst={ }
  34 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$27532, arst=\reset, srst={ }
  66 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$27393, arst=\reset, srst={ }
  34 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$27311, arst=\reset, srst={ }
  686 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$25982, arst=\reset, srst={ }
  857 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$24358, arst=\reset, srst={ }
  108 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$23232, arst=\reset, srst={ }
  548 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$22785, arst=\reset, srst={ }
  567 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$22667, arst=\reset, srst={ }
  134 cells in clk=\clock, en=$auto$opt_dff.cc:194:make_patterns_logic$22543, arst=\reset, srst={ }
  377 cells in clk=\clock, en=$auto$opt_dff.cc:194:make_patterns_logic$22525, arst=\reset, srst={ }
  745 cells in clk=\clock, en=\P2.state, arst=\reset, srst={ }
  299 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$1594, arst=\reset, srst={ }
  886 cells in clk=\clock, en={ }, arst=\reset, srst={ }

3.33.2. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by \P1.state, asynchronously reset by \reset
Extracted 730 gates and 928 wires to a netlist network with 197 inputs and 45 outputs.

3.33.2.1. Executing ABC.

3.33.3. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$46819, asynchronously reset by \reset
Extracted 25 gates and 47 wires to a netlist network with 21 inputs and 8 outputs.

3.33.3.1. Executing ABC.

3.33.4. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$46802, asynchronously reset by \reset
Extracted 27 gates and 53 wires to a netlist network with 24 inputs and 7 outputs.

3.33.4.1. Executing ABC.

3.33.5. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$46479, asynchronously reset by \reset
Extracted 613 gates and 820 wires to a netlist network with 206 inputs and 157 outputs.

3.33.5.1. Executing ABC.

3.33.6. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$46207, asynchronously reset by \reset
Extracted 504 gates and 704 wires to a netlist network with 198 inputs and 108 outputs.

3.33.6.1. Executing ABC.

3.33.7. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1633, asynchronously reset by \reset
Extracted 135 gates and 268 wires to a netlist network with 133 inputs and 96 outputs.

3.33.7.1. Executing ABC.

3.33.8. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$36865, asynchronously reset by \reset
Extracted 649 gates and 872 wires to a netlist network with 222 inputs and 151 outputs.

3.33.8.1. Executing ABC.

3.33.9. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$33698, asynchronously reset by \reset
Extracted 457 gates and 641 wires to a netlist network with 183 inputs and 51 outputs.

3.33.9.1. Executing ABC.

3.33.10. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$27532, asynchronously reset by \reset
Extracted 34 gates and 58 wires to a netlist network with 23 inputs and 15 outputs.

3.33.10.1. Executing ABC.

3.33.11. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$27393, asynchronously reset by \reset
Extracted 66 gates and 100 wires to a netlist network with 33 inputs and 24 outputs.

3.33.11.1. Executing ABC.

3.33.12. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$27311, asynchronously reset by \reset
Extracted 28 gates and 50 wires to a netlist network with 21 inputs and 14 outputs.

3.33.12.1. Executing ABC.

3.33.13. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$25982, asynchronously reset by \reset
Extracted 628 gates and 898 wires to a netlist network with 268 inputs and 150 outputs.

3.33.13.1. Executing ABC.

3.33.14. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$24358, asynchronously reset by \reset
Extracted 814 gates and 1093 wires to a netlist network with 277 inputs and 220 outputs.

3.33.14.1. Executing ABC.

3.33.15. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$23232, asynchronously reset by \reset
Extracted 104 gates and 157 wires to a netlist network with 52 inputs and 32 outputs.

3.33.15.1. Executing ABC.

3.33.16. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$22785, asynchronously reset by \reset
Extracted 480 gates and 596 wires to a netlist network with 115 inputs and 72 outputs.

3.33.16.1. Executing ABC.

3.33.17. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$22667, asynchronously reset by \reset
Extracted 501 gates and 640 wires to a netlist network with 138 inputs and 84 outputs.

3.33.17.1. Executing ABC.

3.33.18. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:194:make_patterns_logic$22543, asynchronously reset by \reset
Extracted 114 gates and 174 wires to a netlist network with 60 inputs and 95 outputs.

3.33.18.1. Executing ABC.

3.33.19. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:194:make_patterns_logic$22525, asynchronously reset by \reset
Extracted 335 gates and 534 wires to a netlist network with 199 inputs and 126 outputs.

3.33.19.1. Executing ABC.

3.33.20. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by \P2.state, asynchronously reset by \reset
Extracted 745 gates and 898 wires to a netlist network with 152 inputs and 48 outputs.

3.33.20.1. Executing ABC.

3.33.21. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1594, asynchronously reset by \reset
Extracted 267 gates and 492 wires to a netlist network with 225 inputs and 97 outputs.

3.33.21.1. Executing ABC.

3.33.22. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 822 gates and 1002 wires to a netlist network with 178 inputs and 171 outputs.

3.33.22.1. Executing ABC.

yosys> abc -dff

3.34. Executing ABC pass (technology mapping using ABC).

3.34.1. Summary of detected clock domains:
  240 cells in clk=\clock, en=$abc$54183$auto$opt_dff.cc:219:make_patterns_logic$22667, arst=\reset, srst={ }
  279 cells in clk=\clock, en=$abc$55779$auto$opt_dff.cc:219:make_patterns_logic$1594, arst=\reset, srst={ }
  313 cells in clk=\clock, en=$abc$54530$auto$opt_dff.cc:194:make_patterns_logic$22525, arst=\reset, srst={ }
  226 cells in clk=\clock, en=$abc$54383$auto$opt_dff.cc:194:make_patterns_logic$22543, arst=\reset, srst={ }
  240 cells in clk=\clock, en=$abc$53999$auto$opt_dff.cc:219:make_patterns_logic$22785, arst=\reset, srst={ }
  125 cells in clk=\clock, en=$abc$53890$auto$opt_dff.cc:219:make_patterns_logic$23232, arst=\reset, srst={ }
  1044 cells in clk=\clock, en=$abc$52844$auto$opt_dff.cc:219:make_patterns_logic$24358, arst=\reset, srst={ }
  1568 cells in clk=\clock, en=$abc$56062$lo00, arst=\reset, srst={ }
  31 cells in clk=\clock, en=$abc$48394$auto$opt_dff.cc:219:make_patterns_logic$46819, arst=\reset, srst={ }
  43 cells in clk=\clock, en=$abc$48429$auto$opt_dff.cc:219:make_patterns_logic$46802, arst=\reset, srst={ }
  863 cells in clk=\clock, en=$abc$48469$auto$opt_dff.cc:219:make_patterns_logic$46479, arst=\reset, srst={ }
  908 cells in clk=\clock, en=$abc$49333$auto$opt_dff.cc:219:make_patterns_logic$46207, arst=\reset, srst={ }
  183 cells in clk=\clock, en=$abc$50147$auto$opt_dff.cc:219:make_patterns_logic$1633, arst=\reset, srst={ }
  758 cells in clk=\clock, en=$abc$50319$auto$opt_dff.cc:219:make_patterns_logic$36865, arst=\reset, srst={ }
  829 cells in clk=\clock, en=$abc$51138$auto$opt_dff.cc:219:make_patterns_logic$33698, arst=\reset, srst={ }
  45 cells in clk=\clock, en=$abc$51746$auto$opt_dff.cc:219:make_patterns_logic$27532, arst=\reset, srst={ }
  100 cells in clk=\clock, en=$abc$51793$auto$opt_dff.cc:219:make_patterns_logic$27393, arst=\reset, srst={ }
  35 cells in clk=\clock, en=$abc$51884$auto$opt_dff.cc:219:make_patterns_logic$27311, arst=\reset, srst={ }
  849 cells in clk=\clock, en=$abc$51918$auto$opt_dff.cc:219:make_patterns_logic$25982, arst=\reset, srst={ }
  687 cells in clk=\clock, en={ }, arst=\reset, srst={ }

3.34.2. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$54183$auto$opt_dff.cc:219:make_patterns_logic$22667, asynchronously reset by \reset
Extracted 176 gates and 293 wires to a netlist network with 117 inputs and 67 outputs.

3.34.2.1. Executing ABC.

3.34.3. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$55779$auto$opt_dff.cc:219:make_patterns_logic$1594, asynchronously reset by \reset
Extracted 247 gates and 471 wires to a netlist network with 224 inputs and 65 outputs.

3.34.3.1. Executing ABC.

3.34.4. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$54530$auto$opt_dff.cc:194:make_patterns_logic$22525, asynchronously reset by \reset
Extracted 271 gates and 447 wires to a netlist network with 176 inputs and 114 outputs.

3.34.4.1. Executing ABC.

3.34.5. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$54383$auto$opt_dff.cc:194:make_patterns_logic$22543, asynchronously reset by \reset
Extracted 204 gates and 322 wires to a netlist network with 118 inputs and 77 outputs.

3.34.5.1. Executing ABC.

3.34.6. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$53999$auto$opt_dff.cc:219:make_patterns_logic$22785, asynchronously reset by \reset
Extracted 176 gates and 291 wires to a netlist network with 115 inputs and 68 outputs.

3.34.6.1. Executing ABC.

3.34.7. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$53890$auto$opt_dff.cc:219:make_patterns_logic$23232, asynchronously reset by \reset
Extracted 121 gates and 185 wires to a netlist network with 64 inputs and 46 outputs.

3.34.7.1. Executing ABC.

3.34.8. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$52844$auto$opt_dff.cc:219:make_patterns_logic$24358, asynchronously reset by \reset
Extracted 994 gates and 1287 wires to a netlist network with 293 inputs and 211 outputs.

3.34.8.1. Executing ABC.

3.34.9. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$56062$lo00, asynchronously reset by \reset
Extracted 1568 gates and 1871 wires to a netlist network with 303 inputs and 120 outputs.

3.34.9.1. Executing ABC.

3.34.10. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$48394$auto$opt_dff.cc:219:make_patterns_logic$46819, asynchronously reset by \reset
Extracted 31 gates and 52 wires to a netlist network with 21 inputs and 7 outputs.

3.34.10.1. Executing ABC.

3.34.11. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$48429$auto$opt_dff.cc:219:make_patterns_logic$46802, asynchronously reset by \reset
Extracted 39 gates and 63 wires to a netlist network with 24 inputs and 7 outputs.

3.34.11.1. Executing ABC.

3.34.12. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$48469$auto$opt_dff.cc:219:make_patterns_logic$46479, asynchronously reset by \reset
Extracted 837 gates and 1092 wires to a netlist network with 255 inputs and 126 outputs.

3.34.12.1. Executing ABC.

3.34.13. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$49333$auto$opt_dff.cc:219:make_patterns_logic$46207, asynchronously reset by \reset
Extracted 857 gates and 1095 wires to a netlist network with 238 inputs and 148 outputs.

3.34.13.1. Executing ABC.

3.34.14. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$50147$auto$opt_dff.cc:219:make_patterns_logic$1633, asynchronously reset by \reset
Extracted 151 gates and 295 wires to a netlist network with 144 inputs and 70 outputs.

3.34.14.1. Executing ABC.

3.34.15. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$50319$auto$opt_dff.cc:219:make_patterns_logic$36865, asynchronously reset by \reset
Extracted 739 gates and 901 wires to a netlist network with 162 inputs and 91 outputs.

3.34.15.1. Executing ABC.

3.34.16. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$51138$auto$opt_dff.cc:219:make_patterns_logic$33698, asynchronously reset by \reset
Extracted 752 gates and 1006 wires to a netlist network with 254 inputs and 182 outputs.

3.34.16.1. Executing ABC.

3.34.17. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$51746$auto$opt_dff.cc:219:make_patterns_logic$27532, asynchronously reset by \reset
Extracted 45 gates and 66 wires to a netlist network with 21 inputs and 15 outputs.

3.34.17.1. Executing ABC.

3.34.18. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$51793$auto$opt_dff.cc:219:make_patterns_logic$27393, asynchronously reset by \reset
Extracted 93 gates and 139 wires to a netlist network with 46 inputs and 32 outputs.

3.34.18.1. Executing ABC.

3.34.19. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$51884$auto$opt_dff.cc:219:make_patterns_logic$27311, asynchronously reset by \reset
Extracted 29 gates and 53 wires to a netlist network with 24 inputs and 14 outputs.

3.34.19.1. Executing ABC.

3.34.20. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$51918$auto$opt_dff.cc:219:make_patterns_logic$25982, asynchronously reset by \reset
Extracted 829 gates and 1060 wires to a netlist network with 231 inputs and 86 outputs.

3.34.20.1. Executing ABC.

3.34.21. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 623 gates and 818 wires to a netlist network with 195 inputs and 192 outputs.

3.34.21.1. Executing ABC.

yosys> abc -dff

3.35. Executing ABC pass (technology mapping using ABC).

3.35.1. Summary of detected clock domains:
  39 cells in clk=\clock, en=$abc$60410$abc$48429$auto$opt_dff.cc:219:make_patterns_logic$46802, arst=\reset, srst={ }
  234 cells in clk=\clock, en=$abc$56569$abc$54183$auto$opt_dff.cc:219:make_patterns_logic$22667, arst=\reset, srst={ }
  309 cells in clk=\clock, en=$abc$56991$abc$54530$auto$opt_dff.cc:194:make_patterns_logic$22525, arst=\reset, srst={ }
  27 cells in clk=\clock, en=$abc$60377$abc$48394$auto$opt_dff.cc:219:make_patterns_logic$46819, arst=\reset, srst={ }
  46 cells in clk=\clock, en=$abc$63779$abc$51746$auto$opt_dff.cc:219:make_patterns_logic$27532, arst=\reset, srst={ }
  923 cells in clk=\clock, en=$abc$61250$abc$49333$auto$opt_dff.cc:219:make_patterns_logic$46207, arst=\reset, srst={ }
  236 cells in clk=\clock, en=$abc$57521$abc$53999$auto$opt_dff.cc:219:make_patterns_logic$22785, arst=\reset, srst={ }
  91 cells in clk=\clock, en=$abc$63821$abc$51793$auto$opt_dff.cc:219:make_patterns_logic$27393, arst=\reset, srst={ }
  622 cells in clk=\clock, en=$abc$63058$abc$51138$auto$opt_dff.cc:219:make_patterns_logic$33698, arst=\reset, srst={ }
  184 cells in clk=\clock, en=$abc$62145$abc$50147$auto$opt_dff.cc:219:make_patterns_logic$1633, arst=\reset, srst={ }
  33 cells in clk=\clock, en=$abc$63906$abc$51884$auto$opt_dff.cc:219:make_patterns_logic$27311, arst=\reset, srst={ }
  250 cells in clk=\clock, en=$abc$57270$abc$54383$auto$opt_dff.cc:194:make_patterns_logic$22543, arst=\reset, srst={ }
  913 cells in clk=\clock, en=$abc$62296$abc$50319$auto$opt_dff.cc:219:make_patterns_logic$36865, arst=\reset, srst={ }
  145 cells in clk=\clock, en=$abc$57693$abc$53890$auto$opt_dff.cc:219:make_patterns_logic$23232, arst=\reset, srst={ }
  280 cells in clk=\clock, en=$abc$56743$abc$55779$auto$opt_dff.cc:219:make_patterns_logic$1594, arst=\reset, srst={ }
  836 cells in clk=\clock, en=$abc$60455$abc$48469$auto$opt_dff.cc:219:make_patterns_logic$46479, arst=\reset, srst={ }
  804 cells in clk=\clock, en=$abc$63935$abc$51918$auto$opt_dff.cc:219:make_patterns_logic$25982, arst=\reset, srst={ }
  921 cells in clk=\clock, en=$abc$57830$abc$52844$auto$opt_dff.cc:219:make_patterns_logic$24358, arst=\reset, srst={ }
  1627 cells in clk=\clock, en=$abc$64728$lo00, arst=\reset, srst={ }
  682 cells in clk=\clock, en={ }, arst=\reset, srst={ }

3.35.2. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$60410$abc$48429$auto$opt_dff.cc:219:make_patterns_logic$46802, asynchronously reset by \reset
Extracted 35 gates and 53 wires to a netlist network with 18 inputs and 6 outputs.

3.35.2.1. Executing ABC.

3.35.3. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$56569$abc$54183$auto$opt_dff.cc:219:make_patterns_logic$22667, asynchronously reset by \reset
Extracted 170 gates and 283 wires to a netlist network with 113 inputs and 65 outputs.

3.35.3.1. Executing ABC.

3.35.4. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$56991$abc$54530$auto$opt_dff.cc:194:make_patterns_logic$22525, asynchronously reset by \reset
Extracted 267 gates and 442 wires to a netlist network with 175 inputs and 109 outputs.

3.35.4.1. Executing ABC.

3.35.5. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$60377$abc$48394$auto$opt_dff.cc:219:make_patterns_logic$46819, asynchronously reset by \reset
Extracted 27 gates and 42 wires to a netlist network with 15 inputs and 3 outputs.

3.35.5.1. Executing ABC.

3.35.6. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$63779$abc$51746$auto$opt_dff.cc:219:make_patterns_logic$27532, asynchronously reset by \reset
Extracted 46 gates and 75 wires to a netlist network with 29 inputs and 18 outputs.

3.35.6.1. Executing ABC.

3.35.7. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$61250$abc$49333$auto$opt_dff.cc:219:make_patterns_logic$46207, asynchronously reset by \reset
Extracted 876 gates and 1151 wires to a netlist network with 275 inputs and 174 outputs.

3.35.7.1. Executing ABC.

3.35.8. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$57521$abc$53999$auto$opt_dff.cc:219:make_patterns_logic$22785, asynchronously reset by \reset
Extracted 172 gates and 289 wires to a netlist network with 117 inputs and 68 outputs.

3.35.8.1. Executing ABC.

3.35.9. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$63821$abc$51793$auto$opt_dff.cc:219:make_patterns_logic$27393, asynchronously reset by \reset
Extracted 83 gates and 129 wires to a netlist network with 46 inputs and 28 outputs.

3.35.9.1. Executing ABC.

3.35.10. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$63058$abc$51138$auto$opt_dff.cc:219:make_patterns_logic$33698, asynchronously reset by \reset
Extracted 600 gates and 793 wires to a netlist network with 193 inputs and 82 outputs.

3.35.10.1. Executing ABC.

3.35.11. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$62145$abc$50147$auto$opt_dff.cc:219:make_patterns_logic$1633, asynchronously reset by \reset
Extracted 152 gates and 298 wires to a netlist network with 146 inputs and 72 outputs.

3.35.11.1. Executing ABC.

3.35.12. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$63906$abc$51884$auto$opt_dff.cc:219:make_patterns_logic$27311, asynchronously reset by \reset
Extracted 27 gates and 50 wires to a netlist network with 23 inputs and 15 outputs.

3.35.12.1. Executing ABC.

3.35.13. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$57270$abc$54383$auto$opt_dff.cc:194:make_patterns_logic$22543, asynchronously reset by \reset
Extracted 228 gates and 345 wires to a netlist network with 117 inputs and 78 outputs.

3.35.13.1. Executing ABC.

3.35.14. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$62296$abc$50319$auto$opt_dff.cc:219:make_patterns_logic$36865, asynchronously reset by \reset
Extracted 841 gates and 1087 wires to a netlist network with 246 inputs and 204 outputs.

3.35.14.1. Executing ABC.

3.35.15. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$57693$abc$53890$auto$opt_dff.cc:219:make_patterns_logic$23232, asynchronously reset by \reset
Extracted 145 gates and 210 wires to a netlist network with 65 inputs and 41 outputs.

3.35.15.1. Executing ABC.

3.35.16. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$56743$abc$55779$auto$opt_dff.cc:219:make_patterns_logic$1594, asynchronously reset by \reset
Extracted 248 gates and 472 wires to a netlist network with 224 inputs and 66 outputs.

3.35.16.1. Executing ABC.

3.35.17. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$60455$abc$48469$auto$opt_dff.cc:219:make_patterns_logic$46479, asynchronously reset by \reset
Extracted 806 gates and 1047 wires to a netlist network with 241 inputs and 132 outputs.

3.35.17.1. Executing ABC.

3.35.18. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$63935$abc$51918$auto$opt_dff.cc:219:make_patterns_logic$25982, asynchronously reset by \reset
Extracted 783 gates and 1021 wires to a netlist network with 238 inputs and 90 outputs.

3.35.18.1. Executing ABC.

3.35.19. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$57830$abc$52844$auto$opt_dff.cc:219:make_patterns_logic$24358, asynchronously reset by \reset
Extracted 867 gates and 1139 wires to a netlist network with 272 inputs and 200 outputs.

3.35.19.1. Executing ABC.

3.35.20. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$64728$lo00, asynchronously reset by \reset
Extracted 1627 gates and 1938 wires to a netlist network with 310 inputs and 118 outputs.

3.35.20.1. Executing ABC.

3.35.21. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 618 gates and 808 wires to a netlist network with 190 inputs and 190 outputs.

3.35.21.1. Executing ABC.

yosys> abc -dff

3.36. Executing ABC pass (technology mapping using ABC).

3.36.1. Summary of detected clock domains:
  49 cells in clk=\clock, en=$abc$65341$abc$60410$abc$48429$auto$opt_dff.cc:219:make_patterns_logic$46802, arst=\reset, srst={ }
  239 cells in clk=\clock, en=$abc$65377$abc$56569$abc$54183$auto$opt_dff.cc:219:make_patterns_logic$22667, arst=\reset, srst={ }
  27 cells in clk=\clock, en=$abc$65822$abc$60377$abc$48394$auto$opt_dff.cc:219:make_patterns_logic$46819, arst=\reset, srst={ }
  43 cells in clk=\clock, en=$abc$65851$abc$63779$abc$51746$auto$opt_dff.cc:219:make_patterns_logic$27532, arst=\reset, srst={ }
  331 cells in clk=\clock, en=$abc$65549$abc$56991$abc$54530$auto$opt_dff.cc:194:make_patterns_logic$22525, arst=\reset, srst={ }
  832 cells in clk=\clock, en=$abc$69339$abc$60455$abc$48469$auto$opt_dff.cc:219:make_patterns_logic$46479, arst=\reset, srst={ }
  231 cells in clk=\clock, en=$abc$66756$abc$57521$abc$53999$auto$opt_dff.cc:219:make_patterns_logic$22785, arst=\reset, srst={ }
  99 cells in clk=\clock, en=$abc$66927$abc$63821$abc$51793$auto$opt_dff.cc:219:make_patterns_logic$27393, arst=\reset, srst={ }
  1629 cells in clk=\clock, en=$abc$73538$lo00, arst=\reset, srst={ }
  741 cells in clk=\clock, en=$abc$67013$abc$63058$abc$51138$auto$opt_dff.cc:219:make_patterns_logic$33698, arst=\reset, srst={ }
  168 cells in clk=\clock, en=$abc$69090$abc$56743$abc$55779$auto$opt_dff.cc:219:make_patterns_logic$1594, arst=\reset, srst={ }
  972 cells in clk=\clock, en=$abc$70985$abc$57830$abc$52844$auto$opt_dff.cc:219:make_patterns_logic$24358, arst=\reset, srst={ }
  857 cells in clk=\clock, en=$abc$70176$abc$63935$abc$51918$auto$opt_dff.cc:219:make_patterns_logic$25982, arst=\reset, srst={ }
  865 cells in clk=\clock, en=$abc$65905$abc$61250$abc$49333$auto$opt_dff.cc:219:make_patterns_logic$46207, arst=\reset, srst={ }
  148 cells in clk=\clock, en=$abc$68949$abc$57693$abc$53890$auto$opt_dff.cc:219:make_patterns_logic$23232, arst=\reset, srst={ }
  34 cells in clk=\clock, en=$abc$67843$abc$63906$abc$51884$auto$opt_dff.cc:219:make_patterns_logic$27311, arst=\reset, srst={ }
  294 cells in clk=\clock, en=$abc$67690$abc$62145$abc$50147$auto$opt_dff.cc:219:make_patterns_logic$1633, arst=\reset, srst={ }
  263 cells in clk=\clock, en=$abc$67878$abc$57270$abc$54383$auto$opt_dff.cc:194:make_patterns_logic$22543, arst=\reset, srst={ }
  745 cells in clk=\clock, en=$abc$68141$abc$62296$abc$50319$auto$opt_dff.cc:219:make_patterns_logic$36865, arst=\reset, srst={ }
  623 cells in clk=\clock, en={ }, arst=\reset, srst={ }

3.36.2. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$65341$abc$60410$abc$48429$auto$opt_dff.cc:219:make_patterns_logic$46802, asynchronously reset by \reset
Extracted 45 gates and 70 wires to a netlist network with 25 inputs and 9 outputs.

3.36.2.1. Executing ABC.

3.36.3. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$65377$abc$56569$abc$54183$auto$opt_dff.cc:219:make_patterns_logic$22667, asynchronously reset by \reset
Extracted 175 gates and 290 wires to a netlist network with 115 inputs and 68 outputs.

3.36.3.1. Executing ABC.

3.36.4. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$65822$abc$60377$abc$48394$auto$opt_dff.cc:219:make_patterns_logic$46819, asynchronously reset by \reset
Extracted 27 gates and 43 wires to a netlist network with 16 inputs and 3 outputs.

3.36.4.1. Executing ABC.

3.36.5. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$65851$abc$63779$abc$51746$auto$opt_dff.cc:219:make_patterns_logic$27532, asynchronously reset by \reset
Extracted 43 gates and 64 wires to a netlist network with 21 inputs and 11 outputs.

3.36.5.1. Executing ABC.

3.36.6. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$65549$abc$56991$abc$54530$auto$opt_dff.cc:194:make_patterns_logic$22525, asynchronously reset by \reset
Extracted 289 gates and 467 wires to a netlist network with 178 inputs and 110 outputs.

3.36.6.1. Executing ABC.

3.36.7. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$69339$abc$60455$abc$48469$auto$opt_dff.cc:219:make_patterns_logic$46479, asynchronously reset by \reset
Extracted 813 gates and 1028 wires to a netlist network with 215 inputs and 119 outputs.

3.36.7.1. Executing ABC.

3.36.8. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$66756$abc$57521$abc$53999$auto$opt_dff.cc:219:make_patterns_logic$22785, asynchronously reset by \reset
Extracted 167 gates and 280 wires to a netlist network with 113 inputs and 66 outputs.

3.36.8.1. Executing ABC.

3.36.9. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$66927$abc$63821$abc$51793$auto$opt_dff.cc:219:make_patterns_logic$27393, asynchronously reset by \reset
Extracted 91 gates and 144 wires to a netlist network with 53 inputs and 34 outputs.

3.36.9.1. Executing ABC.

3.36.10. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$73538$lo00, asynchronously reset by \reset
Extracted 1623 gates and 1956 wires to a netlist network with 333 inputs and 125 outputs.

3.36.10.1. Executing ABC.

3.36.11. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$67013$abc$63058$abc$51138$auto$opt_dff.cc:219:make_patterns_logic$33698, asynchronously reset by \reset
Extracted 707 gates and 903 wires to a netlist network with 196 inputs and 115 outputs.

3.36.11.1. Executing ABC.

3.36.12. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$69090$abc$56743$abc$55779$auto$opt_dff.cc:219:make_patterns_logic$1594, asynchronously reset by \reset
Extracted 136 gates and 269 wires to a netlist network with 133 inputs and 64 outputs.

3.36.12.1. Executing ABC.

3.36.13. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$70985$abc$57830$abc$52844$auto$opt_dff.cc:219:make_patterns_logic$24358, asynchronously reset by \reset
Extracted 909 gates and 1196 wires to a netlist network with 287 inputs and 219 outputs.

3.36.13.1. Executing ABC.

3.36.14. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$70176$abc$63935$abc$51918$auto$opt_dff.cc:219:make_patterns_logic$25982, asynchronously reset by \reset
Extracted 833 gates and 1073 wires to a netlist network with 240 inputs and 124 outputs.

3.36.14.1. Executing ABC.

3.36.15. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$65905$abc$61250$abc$49333$auto$opt_dff.cc:219:make_patterns_logic$46207, asynchronously reset by \reset
Extracted 817 gates and 1054 wires to a netlist network with 237 inputs and 170 outputs.

3.36.15.1. Executing ABC.

3.36.16. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$68949$abc$57693$abc$53890$auto$opt_dff.cc:219:make_patterns_logic$23232, asynchronously reset by \reset
Extracted 147 gates and 218 wires to a netlist network with 71 inputs and 46 outputs.

3.36.16.1. Executing ABC.

3.36.17. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$67843$abc$63906$abc$51884$auto$opt_dff.cc:219:make_patterns_logic$27311, asynchronously reset by \reset
Extracted 30 gates and 50 wires to a netlist network with 20 inputs and 12 outputs.

3.36.17.1. Executing ABC.

3.36.18. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$67690$abc$62145$abc$50147$auto$opt_dff.cc:219:make_patterns_logic$1633, asynchronously reset by \reset
Extracted 262 gates and 499 wires to a netlist network with 237 inputs and 72 outputs.

3.36.18.1. Executing ABC.

3.36.19. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$67878$abc$57270$abc$54383$auto$opt_dff.cc:194:make_patterns_logic$22543, asynchronously reset by \reset
Extracted 241 gates and 357 wires to a netlist network with 116 inputs and 79 outputs.

3.36.19.1. Executing ABC.

3.36.20. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$68141$abc$62296$abc$50319$auto$opt_dff.cc:219:make_patterns_logic$36865, asynchronously reset by \reset
Extracted 692 gates and 920 wires to a netlist network with 228 inputs and 134 outputs.

3.36.20.1. Executing ABC.

3.36.21. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 559 gates and 754 wires to a netlist network with 195 inputs and 190 outputs.

3.36.21.1. Executing ABC.

yosys> opt_ffinv

3.37. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt -sat

3.38. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.38.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.
<suppressed ~411 debug messages>

yosys> opt_merge -nomux

3.38.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
<suppressed ~585 debug messages>
Removed a total of 195 cells.

yosys> opt_muxtree

3.38.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b20..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.38.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b20.
Performed a total of 0 changes.

yosys> opt_merge

3.38.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.38.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.38.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b20..
Removed 1 unused cells and 41263 unused wires.
<suppressed ~23 debug messages>

yosys> opt_expr

3.38.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.

3.38.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.38.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b20..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.38.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b20.
Performed a total of 0 changes.

yosys> opt_merge

3.38.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.38.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.38.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b20..

yosys> opt_expr

3.38.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.

3.38.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /home/users/temp_dir/yosys_fGAPuS/abc_tmp_1.scr

3.39. Executing ABC pass (technology mapping using ABC).

3.39.1. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Extracted 8067 gates and 8954 wires to a netlist network with 887 inputs and 953 outputs.

3.39.1.1. Executing ABC.
DE:   #PIs = 887  #Luts =  2678  Max Lvl =  37  Avg Lvl =   8.55  [   0.50 sec. at Pass 0]
DE:   #PIs = 887  #Luts =  2058  Max Lvl =  31  Avg Lvl =   7.74  [  16.11 sec. at Pass 1]
DE:   #PIs = 887  #Luts =  2009  Max Lvl =  31  Avg Lvl =   8.59  [   2.70 sec. at Pass 2]
DE:   #PIs = 887  #Luts =  1963  Max Lvl =  30  Avg Lvl =   8.92  [   5.35 sec. at Pass 3]
DE:   #PIs = 887  #Luts =  1944  Max Lvl =  29  Avg Lvl =   8.58  [   4.36 sec. at Pass 4]
DE:   #PIs = 887  #Luts =  1920  Max Lvl =  31  Avg Lvl =   8.56  [   6.92 sec. at Pass 5]
DE:   #PIs = 887  #Luts =  1920  Max Lvl =  31  Avg Lvl =   8.56  [   4.27 sec. at Pass 6]
DE:   #PIs = 887  #Luts =  1905  Max Lvl =  25  Avg Lvl =   8.18  [   7.45 sec. at Pass 7]
DE:   #PIs = 887  #Luts =  1879  Max Lvl =  23  Avg Lvl =   8.09  [   4.15 sec. at Pass 8]
DE:   #PIs = 887  #Luts =  1855  Max Lvl =  25  Avg Lvl =   8.19  [   5.38 sec. at Pass 9]
DE:   #PIs = 887  #Luts =  1842  Max Lvl =  24  Avg Lvl =   8.15  [   3.28 sec. at Pass 10]
DE:   #PIs = 887  #Luts =  1814  Max Lvl =  26  Avg Lvl =   8.31  [   6.16 sec. at Pass 11]
DE:   #PIs = 887  #Luts =  1813  Max Lvl =  26  Avg Lvl =   8.30  [   3.74 sec. at Pass 12]
DE:   #PIs = 887  #Luts =  1797  Max Lvl =  24  Avg Lvl =   8.17  [   6.41 sec. at Pass 13]
DE:   #PIs = 887  #Luts =  1793  Max Lvl =  27  Avg Lvl =   8.31  [   3.84 sec. at Pass 14]
DE:   #PIs = 887  #Luts =  1781  Max Lvl =  26  Avg Lvl =   8.00  [   5.46 sec. at Pass 15]
DE:   #PIs = 887  #Luts =  1779  Max Lvl =  22  Avg Lvl =   7.46  [   3.21 sec. at Pass 16]
DE:   #PIs = 887  #Luts =  1770  Max Lvl =  23  Avg Lvl =   7.47  [   5.92 sec. at Pass 17]
DE:   #PIs = 887  #Luts =  1768  Max Lvl =  25  Avg Lvl =   8.20  [   3.34 sec. at Pass 18]
DE:   #PIs = 887  #Luts =  1767  Max Lvl =  23  Avg Lvl =   7.54  [   5.58 sec. at Pass 19]
DE:   #PIs = 887  #Luts =  1757  Max Lvl =  28  Avg Lvl =   8.08  [   4.07 sec. at Pass 20]
DE:   #PIs = 887  #Luts =  1756  Max Lvl =  26  Avg Lvl =   8.31  [   5.64 sec. at Pass 21]
DE:   #PIs = 887  #Luts =  1756  Max Lvl =  26  Avg Lvl =   8.31  [   1.07 sec. at Pass 22]

yosys> opt

3.40. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.40.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.

yosys> opt_merge -nomux

3.40.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

yosys> opt_muxtree

3.40.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b20..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.40.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b20.
Performed a total of 0 changes.

yosys> opt_merge

3.40.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
Removed a total of 0 cells.

yosys> opt_dff

3.40.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.40.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b20..
Removed 0 unused cells and 8700 unused wires.
<suppressed ~5 debug messages>

yosys> opt_expr

3.40.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.

3.40.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.40.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b20..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.40.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b20.
Performed a total of 0 changes.

yosys> opt_merge

3.40.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
Removed a total of 0 cells.

yosys> opt_dff

3.40.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.40.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b20..

yosys> opt_expr

3.40.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.

3.40.16. Finished OPT passes. (There is nothing left to do.)

yosys> opt_ffinv

3.41. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 1 inverters.

yosys> stat

3.42. Printing statistics.

=== b20 ===

   Number of wires:               1624
   Number of wire bits:           3835
   Number of public wires:          21
   Number of public wire bits:     326
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2672
     $_DFFE_PP0P_                  356
     $_DFF_PP0_                     71
     $_DFF_PP1_                      1
     $lut                         1660
     adder_carry                   584


yosys> shregmap -minlen 8 -maxlen 20

3.43. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.44. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.45. Printing statistics.

=== b20 ===

   Number of wires:               1624
   Number of wire bits:           3835
   Number of public wires:          21
   Number of public wire bits:     326
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2672
     $_DFFE_PP0P_                  356
     $_DFF_PP0_                     71
     $_DFF_PP1_                      1
     $lut                         1660
     adder_carry                   584


yosys> techmap -map +/rapidsilicon/genesis/ffs_map.v

3.46. Executing TECHMAP pass (map to technology primitives).

3.46.1. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.46.2. Continuing TECHMAP pass.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using template \$_DFF_PP1_ for cells of type $_DFF_PP1_.
No more expansions possible.
<suppressed ~495 debug messages>

yosys> techmap -map +/techmap.v

3.47. Executing TECHMAP pass (map to technology primitives).

3.47.1. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.47.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~2159 debug messages>

yosys> opt_expr -mux_undef

3.48. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.
<suppressed ~34784 debug messages>

yosys> simplemap

3.49. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.50. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.

yosys> opt_merge

3.51. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
<suppressed ~16077 debug messages>
Removed a total of 5359 cells.

yosys> opt_dff -nodffe -nosdff

3.52. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.53. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b20..
Removed 0 unused cells and 5892 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.54. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.54.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.
<suppressed ~1289 debug messages>

yosys> opt_merge -nomux

3.54.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
<suppressed ~15 debug messages>
Removed a total of 5 cells.

yosys> opt_muxtree

3.54.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b20..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.54.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b20.
Performed a total of 0 changes.

yosys> opt_merge

3.54.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.54.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.54.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b20..
Removed 0 unused cells and 312 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.54.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.

3.54.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.54.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b20..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.54.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b20.
Performed a total of 0 changes.

yosys> opt_merge

3.54.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.54.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.54.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b20..

yosys> opt_expr

3.54.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.

3.54.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /home/users/temp_dir/yosys_fGAPuS/abc_tmp_2.scr

3.55. Executing ABC pass (technology mapping using ABC).

3.55.1. Extracting gate netlist of module `\b20' to `<abc-temp-dir>/input.blif'..
Extracted 5573 gates and 6458 wires to a netlist network with 883 inputs and 858 outputs.

3.55.1.1. Executing ABC.
DE:   #PIs = 883  #Luts =  1662  Max Lvl =  26  Avg Lvl =   8.45  [   0.42 sec. at Pass 0]
DE:   #PIs = 883  #Luts =  1653  Max Lvl =  30  Avg Lvl =   8.81  [  18.48 sec. at Pass 1]
DE:   #PIs = 883  #Luts =  1643  Max Lvl =  29  Avg Lvl =   8.78  [   3.84 sec. at Pass 2]
DE:   #PIs = 883  #Luts =  1636  Max Lvl =  28  Avg Lvl =   8.75  [   5.64 sec. at Pass 3]
DE:   #PIs = 883  #Luts =  1632  Max Lvl =  27  Avg Lvl =   8.62  [   5.68 sec. at Pass 4]
DE:   #PIs = 883  #Luts =  1623  Max Lvl =  29  Avg Lvl =   8.91  [   6.71 sec. at Pass 5]
DE:   #PIs = 883  #Luts =  1619  Max Lvl =  29  Avg Lvl =   9.08  [   4.68 sec. at Pass 6]
DE:   #PIs = 883  #Luts =  1614  Max Lvl =  29  Avg Lvl =   8.80  [   7.39 sec. at Pass 7]
DE:   #PIs = 883  #Luts =  1614  Max Lvl =  29  Avg Lvl =   8.80  [   4.64 sec. at Pass 8]
DE:   #PIs = 883  #Luts =  1603  Max Lvl =  28  Avg Lvl =   8.53  [   5.63 sec. at Pass 9]
DE:   #PIs = 883  #Luts =  1600  Max Lvl =  27  Avg Lvl =   8.44  [   3.89 sec. at Pass 10]
DE:   #PIs = 883  #Luts =  1597  Max Lvl =  27  Avg Lvl =   8.12  [   6.22 sec. at Pass 11]
DE:   #PIs = 883  #Luts =  1597  Max Lvl =  27  Avg Lvl =   8.12  [   4.34 sec. at Pass 12]
DE:   #PIs = 883  #Luts =  1593  Max Lvl =  27  Avg Lvl =   8.45  [   6.36 sec. at Pass 13]
DE:   #PIs = 883  #Luts =  1593  Max Lvl =  27  Avg Lvl =   8.45  [   3.51 sec. at Pass 14]
DE:   #PIs = 883  #Luts =  1593  Max Lvl =  27  Avg Lvl =   8.45  [   4.33 sec. at Pass 15]
DE:   #PIs = 883  #Luts =  1592  Max Lvl =  25  Avg Lvl =   8.08  [   2.58 sec. at Pass 16]
DE:   #PIs = 883  #Luts =  1589  Max Lvl =  25  Avg Lvl =   8.41  [   3.89 sec. at Pass 17]
DE:   #PIs = 883  #Luts =  1586  Max Lvl =  25  Avg Lvl =   8.21  [   2.56 sec. at Pass 18]
DE:   #PIs = 883  #Luts =  1585  Max Lvl =  25  Avg Lvl =   8.31  [   3.80 sec. at Pass 19]
DE:   #PIs = 883  #Luts =  1583  Max Lvl =  25  Avg Lvl =   8.33  [   2.68 sec. at Pass 20]
DE:   #PIs = 883  #Luts =  1583  Max Lvl =  25  Avg Lvl =   8.33  [   3.78 sec. at Pass 21]
DE:   #PIs = 883  #Luts =  1583  Max Lvl =  24  Avg Lvl =   8.08  [   0.65 sec. at Pass 22]

yosys> opt

3.56. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.56.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.

yosys> opt_merge -nomux

3.56.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.56.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b20..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.56.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b20.
Performed a total of 0 changes.

yosys> opt_merge

3.56.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
Removed a total of 0 cells.

yosys> opt_dff

3.56.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.56.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b20..
Removed 0 unused cells and 5643 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.56.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.

3.56.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.56.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b20..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.56.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b20.
Performed a total of 0 changes.

yosys> opt_merge

3.56.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b20'.
Removed a total of 0 cells.

yosys> opt_dff

3.56.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.56.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b20..

yosys> opt_expr

3.56.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b20.

3.56.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.57. Executing HIERARCHY pass (managing design hierarchy).

3.57.1. Analyzing design hierarchy..
Top module:  \b20

3.57.2. Analyzing design hierarchy..
Top module:  \b20
Removed 0 unused modules.

yosys> stat

3.58. Printing statistics.

=== b20 ===

   Number of wires:               1546
   Number of wire bits:           3757
   Number of public wires:          21
   Number of public wire bits:     326
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2595
     $lut                         1583
     adder_carry                   584
     dffsre                        428


yosys> opt_clean -purge

3.59. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b20..
Removed 0 unused cells and 7 unused wires.
<suppressed ~7 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.60. Executing Verilog backend.
Dumping module `\b20'.

Warnings: 5 unique messages, 6 total
End of script. Logfile hash: 1b351b28eb, CPU: user 65.24s system 1.50s, MEM: 117.16 MB peak
Yosys 0.17+103 (git sha1 a1babadd5, gcc 9.1.0 -fPIC -Os)
Time spent: 97% 6x abc (2245 sec), 0% 36x opt_dff (22 sec), ...
real 320.58
user 2126.37
sys 177.79
