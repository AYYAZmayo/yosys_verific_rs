
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.24
 Yosys 0.16+65 (git sha1 03bd62bb8, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.

yosys> verilog_defaults -add -I.

yosys> read -vhdl g_m_1.vhd g_m_2.vhd g_m_3.vhd g_m_4.vhd g_m_5.vhd g_m_6.vhd gamma.vhd noekeon.vhd output_trans.vhd pi_1.vhd pi_2.vhd rc_gen.vhd round_f.vhd t_m_1.vhd t_m_2.vhd t_m_3.vhd theta.vhd

yosys> verific -vhdl g_m_1.vhd g_m_2.vhd g_m_3.vhd g_m_4.vhd g_m_5.vhd g_m_6.vhd gamma.vhd noekeon.vhd output_trans.vhd pi_1.vhd pi_2.vhd rc_gen.vhd round_f.vhd t_m_1.vhd t_m_2.vhd t_m_3.vhd theta.vhd

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.
VERIFIC-INFO [VHDL-1504] default VHDL library search path is now "/home/users/aram/Workspace/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008"
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'g_m_1.vhd'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_1164' from file '/home/users/aram/Workspace/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_1164.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.standard' from file '/home/users/aram/Workspace/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/standard.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.textio' from file '/home/users/aram/Workspace/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/textio.vdb'
VERIFIC-INFO [VHDL-1012] g_m_1.vhd:20: analyzing entity 'g_m_1'
VERIFIC-INFO [VHDL-1010] g_m_1.vhd:28: analyzing architecture 'behavioral'
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'g_m_2.vhd'
VERIFIC-INFO [VHDL-1012] g_m_2.vhd:20: analyzing entity 'g_m_2'
VERIFIC-INFO [VHDL-1010] g_m_2.vhd:28: analyzing architecture 'behavioral'
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'g_m_3.vhd'
VERIFIC-INFO [VHDL-1012] g_m_3.vhd:20: analyzing entity 'g_m_3'
VERIFIC-INFO [VHDL-1010] g_m_3.vhd:28: analyzing architecture 'behavioral'
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'g_m_4.vhd'
VERIFIC-INFO [VHDL-1012] g_m_4.vhd:20: analyzing entity 'g_m_4'
VERIFIC-INFO [VHDL-1010] g_m_4.vhd:29: analyzing architecture 'behavioral'
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'g_m_5.vhd'
VERIFIC-INFO [VHDL-1012] g_m_5.vhd:29: analyzing entity 'g_m_5'
VERIFIC-INFO [VHDL-1010] g_m_5.vhd:37: analyzing architecture 'behavioral'
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'g_m_6.vhd'
VERIFIC-INFO [VHDL-1012] g_m_6.vhd:20: analyzing entity 'g_m_6'
VERIFIC-INFO [VHDL-1010] g_m_6.vhd:28: analyzing architecture 'behavioral'
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'gamma.vhd'
VERIFIC-INFO [VHDL-1012] gamma.vhd:21: analyzing entity 'gamma'
VERIFIC-INFO [VHDL-1010] gamma.vhd:34: analyzing architecture 'behavioral'
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'noekeon.vhd'
VERIFIC-INFO [VHDL-1012] noekeon.vhd:20: analyzing entity 'noekeon'
VERIFIC-INFO [VHDL-1010] noekeon.vhd:38: analyzing architecture 'behavioral'
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'output_trans.vhd'
VERIFIC-INFO [VHDL-1012] output_trans.vhd:20: analyzing entity 'output_trans'
VERIFIC-INFO [VHDL-1010] output_trans.vhd:38: analyzing architecture 'behavioral'
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'pi_1.vhd'
VERIFIC-INFO [VHDL-1012] pi_1.vhd:20: analyzing entity 'pi_1'
VERIFIC-INFO [VHDL-1010] pi_1.vhd:29: analyzing architecture 'behavioral'
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'pi_2.vhd'
VERIFIC-INFO [VHDL-1012] pi_2.vhd:35: analyzing entity 'pi_2'
VERIFIC-INFO [VHDL-1010] pi_2.vhd:44: analyzing architecture 'behavioral'
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'rc_gen.vhd'
VERIFIC-INFO [VHDL-1012] rc_gen.vhd:20: analyzing entity 'rc_gen'
VERIFIC-INFO [VHDL-1010] rc_gen.vhd:27: analyzing architecture 'behavioral'
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'round_f.vhd'
VERIFIC-INFO [VHDL-1012] round_f.vhd:20: analyzing entity 'round_f'
VERIFIC-INFO [VHDL-1010] round_f.vhd:38: analyzing architecture 'behavioral'
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 't_m_1.vhd'
VERIFIC-INFO [VHDL-1012] t_m_1.vhd:20: analyzing entity 't_m_1'
VERIFIC-INFO [VHDL-1010] t_m_1.vhd:30: analyzing architecture 'behavioral'
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 't_m_2.vhd'
VERIFIC-INFO [VHDL-1012] t_m_2.vhd:20: analyzing entity 't_m_2'
VERIFIC-INFO [VHDL-1010] t_m_2.vhd:36: analyzing architecture 'behavioral'
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 't_m_3.vhd'
VERIFIC-INFO [VHDL-1012] t_m_3.vhd:20: analyzing entity 't_m_3'
VERIFIC-INFO [VHDL-1010] t_m_3.vhd:30: analyzing architecture 'behavioral'
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'theta.vhd'
VERIFIC-INFO [VHDL-1012] theta.vhd:20: analyzing entity 'theta'
VERIFIC-INFO [VHDL-1010] theta.vhd:39: analyzing architecture 'behavioral'

yosys> synth_rs -top noekeon -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.47

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\dsp_t1_sim'.
Generating RTLIL representation for module `\dsp_t1_20x18x64'.
Generating RTLIL representation for module `\dsp_t1_10x9x32'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top noekeon

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VHDL-1067] noekeon.vhd:20: processing 'noekeon(Behavioral)'
VERIFIC-INFO [VHDL-1067] rc_gen.vhd:20: processing 'rc_gen(Behavioral)'
VERIFIC-INFO [VHDL-1067] round_f.vhd:20: processing 'round_f(Behavioral)'
VERIFIC-INFO [VHDL-1067] theta.vhd:20: processing 'theta(Behavioral)'
VERIFIC-INFO [VHDL-1067] t_m_1.vhd:20: processing 't_m_1(Behavioral)'
VERIFIC-INFO [VHDL-1067] t_m_2.vhd:20: processing 't_m_2(Behavioral)'
VERIFIC-INFO [VHDL-1067] t_m_3.vhd:20: processing 't_m_3(Behavioral)'
VERIFIC-INFO [VHDL-1067] pi_1.vhd:20: processing 'pi_1(Behavioral)'
VERIFIC-INFO [VHDL-1067] gamma.vhd:21: processing 'gamma(Behavioral)'
VERIFIC-INFO [VHDL-1067] g_m_1.vhd:20: processing 'g_m_1(Behavioral)'
VERIFIC-INFO [VHDL-1067] g_m_2.vhd:20: processing 'g_m_2(Behavioral)'
VERIFIC-INFO [VHDL-1067] g_m_3.vhd:20: processing 'g_m_3(Behavioral)'
VERIFIC-INFO [VHDL-1067] g_m_4.vhd:20: processing 'g_m_4(Behavioral)'
VERIFIC-INFO [VHDL-1067] g_m_5.vhd:29: processing 'g_m_5(Behavioral)'
VERIFIC-INFO [VHDL-1067] g_m_6.vhd:20: processing 'g_m_6(Behavioral)'
VERIFIC-INFO [VHDL-1067] pi_2.vhd:35: processing 'pi_2(Behavioral)'
VERIFIC-INFO [VHDL-1067] output_trans.vhd:20: processing 'output_trans(Behavioral)'
Importing module noekeon.
Importing module output_trans(Behavioral).
Importing module rc_gen(Behavioral).
Importing module round_f(Behavioral).
Importing module gamma(Behavioral).
Importing module g_m_1(Behavioral).
Importing module g_m_2(Behavioral).
Importing module g_m_3(Behavioral).
Importing module g_m_4(Behavioral).
Importing module g_m_5(Behavioral).
Importing module g_m_6(Behavioral).
Importing module pi_1(Behavioral).
Importing module pi_2(Behavioral).
Importing module theta(Behavioral).
Importing module t_m_1(Behavioral).
Importing module t_m_2(Behavioral).
Importing module t_m_3(Behavioral).

3.3.1. Analyzing design hierarchy..
Top module:  \noekeon
Used module:     \theta(Behavioral)
Used module:         \t_m_3(Behavioral)
Used module:         \t_m_2(Behavioral)
Used module:         \t_m_1(Behavioral)
Used module:     \output_trans(Behavioral)
Used module:     \round_f(Behavioral)
Used module:         \pi_2(Behavioral)
Used module:         \gamma(Behavioral)
Used module:             \g_m_6(Behavioral)
Used module:             \g_m_5(Behavioral)
Used module:             \g_m_4(Behavioral)
Used module:             \g_m_3(Behavioral)
Used module:             \g_m_2(Behavioral)
Used module:             \g_m_1(Behavioral)
Used module:         \pi_1(Behavioral)
Used module:     \rc_gen(Behavioral)

3.3.2. Analyzing design hierarchy..
Top module:  \noekeon
Used module:     \theta(Behavioral)
Used module:         \t_m_3(Behavioral)
Used module:         \t_m_2(Behavioral)
Used module:         \t_m_1(Behavioral)
Used module:     \output_trans(Behavioral)
Used module:     \round_f(Behavioral)
Used module:         \pi_2(Behavioral)
Used module:         \gamma(Behavioral)
Used module:             \g_m_6(Behavioral)
Used module:             \g_m_5(Behavioral)
Used module:             \g_m_4(Behavioral)
Used module:             \g_m_3(Behavioral)
Used module:             \g_m_2(Behavioral)
Used module:             \g_m_1(Behavioral)
Used module:         \pi_1(Behavioral)
Used module:     \rc_gen(Behavioral)
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_mux

3.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.8. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module t_m_3(Behavioral).
Optimizing module t_m_2(Behavioral).
Optimizing module t_m_1(Behavioral).
Optimizing module theta(Behavioral).
Optimizing module pi_2(Behavioral).
Optimizing module pi_1(Behavioral).
Optimizing module g_m_6(Behavioral).
Optimizing module g_m_5(Behavioral).
Optimizing module g_m_4(Behavioral).
Optimizing module g_m_3(Behavioral).
Optimizing module g_m_2(Behavioral).
Optimizing module g_m_1(Behavioral).
Optimizing module gamma(Behavioral).
Optimizing module round_f(Behavioral).
Optimizing module rc_gen(Behavioral).
<suppressed ~3 debug messages>
Optimizing module output_trans(Behavioral).
Optimizing module noekeon.

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).
Deleting now unused module t_m_3(Behavioral).
Deleting now unused module t_m_2(Behavioral).
Deleting now unused module t_m_1(Behavioral).
Deleting now unused module theta(Behavioral).
Deleting now unused module pi_2(Behavioral).
Deleting now unused module pi_1(Behavioral).
Deleting now unused module g_m_6(Behavioral).
Deleting now unused module g_m_5(Behavioral).
Deleting now unused module g_m_4(Behavioral).
Deleting now unused module g_m_3(Behavioral).
Deleting now unused module g_m_2(Behavioral).
Deleting now unused module g_m_1(Behavioral).
Deleting now unused module gamma(Behavioral).
Deleting now unused module round_f(Behavioral).
Deleting now unused module rc_gen(Behavioral).
Deleting now unused module output_trans(Behavioral).
<suppressed ~18 debug messages>

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module noekeon.
<suppressed ~4 debug messages>

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \noekeon..
Removed 0 unused cells and 279 unused wires.
<suppressed ~101 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module noekeon...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module noekeon.

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\noekeon'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \noekeon..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~13 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \noekeon.
Performed a total of 0 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\noekeon'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Removing never-active async load on $verific$out_t_a_3_in_s_reg$noekeon.vhd:181$63 ($aldff) from module noekeon.
Removing never-active async load on $verific$out_t_a_2_in_s_reg$noekeon.vhd:181$62 ($aldff) from module noekeon.
Removing never-active async load on $verific$out_t_a_1_in_s_reg$noekeon.vhd:181$61 ($aldff) from module noekeon.
Removing never-active async load on $verific$out_t_a_0_in_s_reg$noekeon.vhd:181$60 ($aldff) from module noekeon.
Removing never-active async load on $verific$a_3_in_s_reg$noekeon.vhd:166$55 ($aldff) from module noekeon.
Removing never-active async load on $verific$a_2_in_s_reg$noekeon.vhd:166$54 ($aldff) from module noekeon.
Removing never-active async load on $verific$a_1_in_s_reg$noekeon.vhd:166$53 ($aldff) from module noekeon.
Removing never-active async load on $verific$a_0_in_s_reg$noekeon.vhd:166$52 ($aldff) from module noekeon.
Removing never-active async load on $flatten\RC_GEN_0.$verific$rc_s_reg$rc_gen.vhd:55$160 ($aldff) from module noekeon.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \noekeon..

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module noekeon.

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \noekeon..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~13 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \noekeon.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\noekeon'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \noekeon..

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module noekeon.

3.11.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \noekeon..

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module noekeon.

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\noekeon'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \noekeon..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~13 debug messages>

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \noekeon.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\noekeon'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \noekeon..

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module noekeon.

3.13.9. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 8) from port A of cell noekeon.$flatten\RC_GEN_0.$verific$xor_20$rc_gen.vhd:51$156 ($xor).
Removed top 7 bits (of 8) from port B of cell noekeon.$flatten\RC_GEN_0.$verific$and_17$rc_gen.vhd:48$154 ($and).
Removed top 3 bits (of 8) from port B of cell noekeon.$flatten\RC_GEN_0.$verific$xor_14$rc_gen.vhd:45$151 ($xor).
Removed top 24 bits (of 32) from port B of cell noekeon.$flatten\ROUND_F_0.$verific$xor_7$round_f.vhd:130$183 ($xor).
Removed top 24 bits (of 32) from port B of cell noekeon.$flatten\ROUND_F_0.$verific$xor_4$round_f.vhd:114$167 ($xor).
Removed top 24 bits (of 32) from port B of cell noekeon.$flatten\OUT_TRANS_0.$verific$xor_8$output_trans.vhd:82$122 ($xor).
Removed top 24 bits (of 32) from port B of cell noekeon.$flatten\OUT_TRANS_0.$verific$xor_3$output_trans.vhd:65$105 ($xor).

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \noekeon..

yosys> alumacc

3.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module noekeon:
  created 0 $alu and 0 $macc cells.

yosys> opt

3.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module noekeon.

yosys> opt_merge -nomux

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\noekeon'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \noekeon..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~13 debug messages>

yosys> opt_reduce

3.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \noekeon.
Performed a total of 0 changes.

yosys> opt_merge

3.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\noekeon'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \noekeon..

yosys> opt_expr

3.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module noekeon.

3.19.9. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.20. Printing statistics.

=== noekeon ===

   Number of wires:                346
   Number of wire bits:           9823
   Number of public wires:         312
   Number of public wire bits:    9013
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 86
     $and                            6
     $dff                            9
     $logic_not                      2
     $mux                           16
     $not                            2
     $xor                           51


yosys> memory -nomap

3.21. Executing MEMORY pass.

yosys> opt_mem

3.21.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.21.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.21.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_dff

3.21.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.21.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \noekeon..

yosys> memory_share

3.21.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.21.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.21.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \noekeon..

yosys> memory_collect

3.21.9. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.22. Printing statistics.

=== noekeon ===

   Number of wires:                346
   Number of wire bits:           9823
   Number of public wires:         312
   Number of public wire bits:    9013
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 86
     $and                            6
     $dff                            9
     $logic_not                      2
     $mux                           16
     $not                            2
     $xor                           51


yosys> opt_clean

3.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \noekeon..

yosys> stat

3.24. Printing statistics.

=== noekeon ===

   Number of wires:                346
   Number of wire bits:           9823
   Number of public wires:         312
   Number of public wire bits:    9013
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 86
     $and                            6
     $dff                            9
     $logic_not                      2
     $mux                           16
     $not                            2
     $xor                           51


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.25. Executing TECHMAP pass (map to technology primitives).

3.25.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.25.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.25.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $not.
No more expansions possible.
<suppressed ~157 debug messages>

yosys> stat

3.26. Printing statistics.

=== noekeon ===

   Number of wires:                352
   Number of wire bits:           9837
   Number of public wires:         312
   Number of public wire bits:    9013
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2560
     $_AND_                        144
     $_DFF_P_                      264
     $_MUX_                        424
     $_NOT_                        130
     $_OR_                          14
     $_XOR_                       1584


yosys> opt

3.27. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module noekeon.
<suppressed ~272 debug messages>

yosys> opt_merge -nomux

3.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\noekeon'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

yosys> opt_muxtree

3.27.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \noekeon..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \noekeon.
Performed a total of 0 changes.

yosys> opt_merge

3.27.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\noekeon'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:262:slice$963 ($_DFF_P_) from module noekeon (D = $flatten\RC_GEN_0.$verific$n128$143 [7], Q = \RC_GEN_0.rc_s [7], rval = 1'1).
Adding SRST signal on $auto$ff.cc:262:slice$956 ($_DFF_P_) from module noekeon (D = $flatten\RC_GEN_0.$verific$n128$143 [0], Q = \RC_GEN_0.rc_s [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$957 ($_DFF_P_) from module noekeon (D = $flatten\RC_GEN_0.$verific$n128$143 [1], Q = \RC_GEN_0.rc_s [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$959 ($_DFF_P_) from module noekeon (D = $flatten\RC_GEN_0.$verific$n128$143 [3], Q = \RC_GEN_0.rc_s [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$961 ($_DFF_P_) from module noekeon (D = $flatten\RC_GEN_0.$verific$n128$143 [5], Q = \RC_GEN_0.rc_s [5], rval = 1'0).

yosys> opt_clean

3.27.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \noekeon..
Removed 6 unused cells and 14 unused wires.
<suppressed ~7 debug messages>

yosys> opt_expr

3.27.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module noekeon.

3.27.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.27.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \noekeon..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \noekeon.
Performed a total of 0 changes.

yosys> opt_merge

3.27.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\noekeon'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \noekeon..

yosys> opt_expr

3.27.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module noekeon.

3.27.16. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module noekeon.

yosys> opt_merge

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\noekeon'.
Removed a total of 0 cells.

yosys> opt_dff

3.28.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \noekeon..

3.28.5. Finished fast OPT passes.

yosys> memory_map

3.29. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.30. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module noekeon.

yosys> opt_merge -nomux

3.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\noekeon'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \noekeon..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \noekeon.
Performed a total of 0 changes.

yosys> opt_merge

3.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\noekeon'.
Removed a total of 0 cells.

yosys> opt_share

3.30.6. Executing OPT_SHARE pass.

yosys> opt_dff

3.30.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \noekeon..

yosys> opt_expr -full

3.30.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module noekeon.

3.30.10. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

3.31. Executing ABC pass (technology mapping using ABC).

3.31.1. Summary of detected clock domains:
  2145 cells in clk=\clk, en={ }, arst={ }, srst={ }
  157 cells in clk=\clk, en={ }, arst={ }, srst=\rst

3.31.2. Extracting gate netlist of module `\noekeon' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 2145 gates and 2457 wires to a netlist network with 312 inputs and 203 outputs.

3.31.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 259 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.2.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:      259
ABC RESULTS:               NOT cells:       21
ABC RESULTS:             ORNOT cells:       30
ABC RESULTS:                OR cells:       20
ABC RESULTS:               XOR cells:      252
ABC RESULTS:              NAND cells:       32
ABC RESULTS:               AND cells:       66
ABC RESULTS:               NOR cells:       28
ABC RESULTS:            ANDNOT cells:       59
ABC RESULTS:              XNOR cells:      934
ABC RESULTS:               MUX cells:      233
ABC RESULTS:        internal signals:     1942
ABC RESULTS:           input signals:      312
ABC RESULTS:          output signals:      203
Removing temp directory.

3.31.3. Extracting gate netlist of module `\noekeon' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by \rst
Extracted 157 gates and 273 wires to a netlist network with 116 inputs and 89 outputs.

3.31.3.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.3.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        5
ABC RESULTS:               AND cells:        5
ABC RESULTS:               NOT cells:        7
ABC RESULTS:              XNOR cells:       64
ABC RESULTS:               XOR cells:       65
ABC RESULTS:               MUX cells:        5
ABC RESULTS:               BUF cells:        6
ABC RESULTS:        internal signals:       68
ABC RESULTS:           input signals:      116
ABC RESULTS:          output signals:       89
Removing temp directory.

yosys> abc -dff

3.32. Executing ABC pass (technology mapping using ABC).

3.32.1. Summary of detected clock domains:
  1990 cells in clk=\clk, en={ }, arst={ }, srst={ }
  95 cells in clk=\clk, en={ }, arst={ }, srst=\rst

3.32.2. Extracting gate netlist of module `\noekeon' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 1990 gates and 2278 wires to a netlist network with 288 inputs and 168 outputs.

3.32.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 259 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.32.2.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:      259
ABC RESULTS:               NOT cells:       16
ABC RESULTS:               NOR cells:       22
ABC RESULTS:            ANDNOT cells:       55
ABC RESULTS:               AND cells:       79
ABC RESULTS:                OR cells:       26
ABC RESULTS:               XOR cells:      364
ABC RESULTS:             ORNOT cells:       35
ABC RESULTS:              XNOR cells:      878
ABC RESULTS:              NAND cells:       44
ABC RESULTS:               MUX cells:      165
ABC RESULTS:        internal signals:     1822
ABC RESULTS:           input signals:      288
ABC RESULTS:          output signals:      168
Removing temp directory.

3.32.3. Extracting gate netlist of module `\noekeon' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by \rst
Extracted 95 gates and 161 wires to a netlist network with 66 inputs and 50 outputs.

3.32.3.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.32.3.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        5
ABC RESULTS:             ORNOT cells:        5
ABC RESULTS:               AND cells:        5
ABC RESULTS:               NOT cells:        8
ABC RESULTS:              NAND cells:        5
ABC RESULTS:              XNOR cells:       49
ABC RESULTS:               XOR cells:       19
ABC RESULTS:               MUX cells:        5
ABC RESULTS:               BUF cells:        3
ABC RESULTS:        internal signals:       45
ABC RESULTS:           input signals:       66
ABC RESULTS:          output signals:       50
Removing temp directory.

yosys> abc -dff

3.33. Executing ABC pass (technology mapping using ABC).

3.33.1. Summary of detected clock domains:
  1989 cells in clk=\clk, en={ }, arst={ }, srst={ }
  55 cells in clk=\clk, en={ }, arst={ }, srst=\rst

3.33.2. Extracting gate netlist of module `\noekeon' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 1989 gates and 2275 wires to a netlist network with 286 inputs and 153 outputs.

3.33.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 259 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.33.2.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:      259
ABC RESULTS:               NOT cells:       17
ABC RESULTS:               NOR cells:       24
ABC RESULTS:              NAND cells:       39
ABC RESULTS:                OR cells:       28
ABC RESULTS:               AND cells:       81
ABC RESULTS:            ANDNOT cells:       55
ABC RESULTS:              XNOR cells:      935
ABC RESULTS:             ORNOT cells:       39
ABC RESULTS:               XOR cells:      344
ABC RESULTS:               MUX cells:      163
ABC RESULTS:        internal signals:     1836
ABC RESULTS:           input signals:      286
ABC RESULTS:          output signals:      153
Removing temp directory.

3.33.3. Extracting gate netlist of module `\noekeon' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by \rst
Extracted 55 gates and 85 wires to a netlist network with 30 inputs and 28 outputs.

3.33.3.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.33.3.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        5
ABC RESULTS:               NOT cells:        3
ABC RESULTS:               AND cells:        4
ABC RESULTS:             ORNOT cells:        5
ABC RESULTS:              NAND cells:        4
ABC RESULTS:              XNOR cells:       22
ABC RESULTS:               XOR cells:        7
ABC RESULTS:               MUX cells:        4
ABC RESULTS:               BUF cells:        3
ABC RESULTS:        internal signals:       27
ABC RESULTS:           input signals:       30
ABC RESULTS:          output signals:       28
Removing temp directory.

yosys> opt_ffinv

3.34. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt -sat

3.35. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.35.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module noekeon.
<suppressed ~3 debug messages>

yosys> opt_merge -nomux

3.35.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\noekeon'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

yosys> opt_muxtree

3.35.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \noekeon..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.35.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \noekeon.
Performed a total of 0 changes.

yosys> opt_merge

3.35.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\noekeon'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.35.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.35.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \noekeon..
Removed 0 unused cells and 5629 unused wires.
<suppressed ~207 debug messages>

yosys> opt_expr

3.35.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module noekeon.

3.35.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.35.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \noekeon..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.35.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \noekeon.
Performed a total of 0 changes.

yosys> opt_merge

3.35.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\noekeon'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.35.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.35.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \noekeon..

yosys> opt_expr

3.35.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module noekeon.

3.35.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

3.36. Executing ABC pass (technology mapping using ABC).

3.36.1. Summary of detected clock domains:
  49 cells in clk=\clk, en={ }, arst={ }, srst=\rst
  1985 cells in clk=\clk, en={ }, arst={ }, srst={ }

3.36.2. Extracting gate netlist of module `\noekeon' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by \rst
Extracted 49 gates and 74 wires to a netlist network with 25 inputs and 25 outputs.

3.36.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.36.2.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        5
ABC RESULTS:                OR cells:        1
ABC RESULTS:              NAND cells:        4
ABC RESULTS:             ORNOT cells:        5
ABC RESULTS:              XNOR cells:       14
ABC RESULTS:               NOT cells:        3
ABC RESULTS:               XOR cells:        9
ABC RESULTS:               MUX cells:        8
ABC RESULTS:        internal signals:       24
ABC RESULTS:           input signals:       25
ABC RESULTS:          output signals:       25
Removing temp directory.

3.36.3. Extracting gate netlist of module `\noekeon' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 1985 gates and 2268 wires to a netlist network with 283 inputs and 148 outputs.

3.36.3.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 259 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.36.3.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:      259
ABC RESULTS:               NOT cells:       11
ABC RESULTS:               XOR cells:      362
ABC RESULTS:            ANDNOT cells:       52
ABC RESULTS:              NAND cells:       46
ABC RESULTS:                OR cells:       19
ABC RESULTS:               AND cells:       82
ABC RESULTS:             ORNOT cells:       39
ABC RESULTS:               NOR cells:       27
ABC RESULTS:              XNOR cells:      922
ABC RESULTS:               MUX cells:      160
ABC RESULTS:               BUF cells:        3
ABC RESULTS:        internal signals:     1837
ABC RESULTS:           input signals:      283
ABC RESULTS:          output signals:      148
Removing temp directory.

yosys> opt_ffinv

3.37. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> abc -script /tmp/yosys_ARFx0N/abc_tmp_1.scr

3.38. Executing ABC pass (technology mapping using ABC).

3.38.1. Extracting gate netlist of module `\noekeon' to `<abc-temp-dir>/input.blif'..
Extracted 1764 gates and 2286 wires to a netlist network with 522 inputs and 392 outputs.

3.38.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /tmp/yosys_ARFx0N/abc_tmp_1.scr 
ABC:   #PIs = 522  #Luts =   890  Max Lvl =  11  Avg Lvl =   7.73  [   0.26 sec. at Pass 0]
ABC:   #PIs = 522  #Luts =   796  Max Lvl =   6  Avg Lvl =   4.56  [   7.97 sec. at Pass 1]
ABC:   #PIs = 522  #Luts =   759  Max Lvl =   6  Avg Lvl =   4.28  [   1.47 sec. at Pass 2]
ABC:   #PIs = 522  #Luts =   759  Max Lvl =   6  Avg Lvl =   4.28  [   1.79 sec. at Pass 3]
ABC:   #PIs = 522  #Luts =   759  Max Lvl =   6  Avg Lvl =   4.28  [   1.64 sec. at Pass 4]
ABC:   #PIs = 522  #Luts =   759  Max Lvl =   6  Avg Lvl =   4.28  [   2.30 sec. at Pass 5]
ABC:   #PIs = 522  #Luts =   759  Max Lvl =   6  Avg Lvl =   4.28  [   0.44 sec. at Pass 6]
ABC:   [DE total time =   16.05 sec. ]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.38.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      759
ABC RESULTS:        internal signals:     1372
ABC RESULTS:           input signals:      522
ABC RESULTS:          output signals:      392
Removing temp directory.

yosys> opt

3.39. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.39.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module noekeon.

yosys> opt_merge -nomux

3.39.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\noekeon'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.39.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \noekeon..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.39.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \noekeon.
Performed a total of 0 changes.

yosys> opt_merge

3.39.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\noekeon'.
Removed a total of 0 cells.

yosys> opt_dff

3.39.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.39.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \noekeon..
Removed 0 unused cells and 4629 unused wires.
<suppressed ~19 debug messages>

yosys> opt_expr

3.39.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module noekeon.

3.39.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.39.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \noekeon..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.39.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \noekeon.
Performed a total of 0 changes.

yosys> opt_merge

3.39.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\noekeon'.
Removed a total of 0 cells.

yosys> opt_dff

3.39.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.39.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \noekeon..

yosys> opt_expr

3.39.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module noekeon.

3.39.16. Finished OPT passes. (There is nothing left to do.)

yosys> opt_ffinv

3.40. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> stat

3.41. Printing statistics.

=== noekeon ===

   Number of wires:                983
   Number of wire bits:           2740
   Number of public wires:          88
   Number of public wire bits:    1845
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1023
     $_DFF_P_                      259
     $_SDFF_PP0_                     5
     $lut                          759


yosys> shregmap -minlen 8 -maxlen 20

3.42. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.43. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.44. Printing statistics.

=== noekeon ===

   Number of wires:                988
   Number of wire bits:           2745
   Number of public wires:          88
   Number of public wire bits:    1845
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1028
     $_DFF_P_                      264
     $_MUX_                          5
     $lut                          759


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.45. Executing TECHMAP pass (map to technology primitives).

3.45.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.45.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.45.3. Continuing TECHMAP pass.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using extmapper simplemap for cells of type $lut.
No more expansions possible.
<suppressed ~1159 debug messages>

yosys> opt_expr -mux_undef

3.46. Executing OPT_EXPR pass (perform const folding).
Optimizing module noekeon.
<suppressed ~7419 debug messages>

yosys> simplemap

3.47. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.48. Executing OPT_EXPR pass (perform const folding).
Optimizing module noekeon.

yosys> opt_merge

3.49. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\noekeon'.
<suppressed ~26817 debug messages>
Removed a total of 8939 cells.

yosys> opt_dff -nodffe -nosdff

3.50. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.51. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \noekeon..
Removed 0 unused cells and 2224 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.52. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.52.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module noekeon.
<suppressed ~62 debug messages>

yosys> opt_merge -nomux

3.52.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\noekeon'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.52.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \noekeon..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.52.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \noekeon.
Performed a total of 0 changes.

yosys> opt_merge

3.52.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\noekeon'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.52.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.52.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \noekeon..
Removed 0 unused cells and 12 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.52.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module noekeon.

3.52.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.52.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \noekeon..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.52.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \noekeon.
Performed a total of 0 changes.

yosys> opt_merge

3.52.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\noekeon'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.52.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.52.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \noekeon..

yosys> opt_expr

3.52.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module noekeon.

3.52.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /tmp/yosys_ARFx0N/abc_tmp_2.scr

3.53. Executing ABC pass (technology mapping using ABC).

3.53.1. Extracting gate netlist of module `\noekeon' to `<abc-temp-dir>/input.blif'..
Extracted 4010 gates and 4534 wires to a netlist network with 522 inputs and 392 outputs.

3.53.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /tmp/yosys_ARFx0N/abc_tmp_2.scr 
ABC:   #PIs = 522  #Luts =   791  Max Lvl =   7  Avg Lvl =   4.81  [   0.24 sec. at Pass 0]
ABC:   #PIs = 522  #Luts =   790  Max Lvl =   7  Avg Lvl =   4.62  [   9.63 sec. at Pass 1]
ABC:   #PIs = 522  #Luts =   771  Max Lvl =   6  Avg Lvl =   4.52  [   1.35 sec. at Pass 2]
ABC:   #PIs = 522  #Luts =   771  Max Lvl =   6  Avg Lvl =   4.52  [   2.17 sec. at Pass 3]
ABC:   #PIs = 522  #Luts =   764  Max Lvl =   7  Avg Lvl =   4.63  [   1.82 sec. at Pass 4]
ABC:   #PIs = 522  #Luts =   764  Max Lvl =   7  Avg Lvl =   4.63  [   2.26 sec. at Pass 5]
ABC:   #PIs = 522  #Luts =   764  Max Lvl =   6  Avg Lvl =   4.55  [   1.61 sec. at Pass 6]
ABC:   #PIs = 522  #Luts =   764  Max Lvl =   6  Avg Lvl =   4.55  [   2.68 sec. at Pass 7]
ABC:   #PIs = 522  #Luts =   763  Max Lvl =   7  Avg Lvl =   4.83  [   1.61 sec. at Pass 8]
ABC:   #PIs = 522  #Luts =   763  Max Lvl =   7  Avg Lvl =   4.83  [   1.97 sec. at Pass 9]
ABC:   #PIs = 522  #Luts =   763  Max Lvl =   7  Avg Lvl =   4.83  [   1.63 sec. at Pass 10]
ABC:   #PIs = 522  #Luts =   763  Max Lvl =   7  Avg Lvl =   4.83  [   2.58 sec. at Pass 11]
ABC:   #PIs = 522  #Luts =   763  Max Lvl =   7  Avg Lvl =   4.83  [   0.40 sec. at Pass 12]
ABC:   [DE total time =   30.61 sec. ]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.53.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      763
ABC RESULTS:        internal signals:     3620
ABC RESULTS:           input signals:      522
ABC RESULTS:          output signals:      392
Removing temp directory.

yosys> opt

3.54. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.54.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module noekeon.

yosys> opt_merge -nomux

3.54.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\noekeon'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.54.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \noekeon..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.54.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \noekeon.
Performed a total of 0 changes.

yosys> opt_merge

3.54.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\noekeon'.
Removed a total of 0 cells.

yosys> opt_dff

3.54.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.54.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \noekeon..
Removed 0 unused cells and 3111 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.54.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module noekeon.

3.54.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.54.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \noekeon..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.54.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \noekeon.
Performed a total of 0 changes.

yosys> opt_merge

3.54.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\noekeon'.
Removed a total of 0 cells.

yosys> opt_dff

3.54.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.54.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \noekeon..

yosys> opt_expr

3.54.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module noekeon.

3.54.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.55. Executing HIERARCHY pass (managing design hierarchy).

3.55.1. Analyzing design hierarchy..
Top module:  \noekeon

3.55.2. Analyzing design hierarchy..
Top module:  \noekeon
Removed 0 unused modules.

yosys> stat

3.56. Printing statistics.

=== noekeon ===

   Number of wires:                987
   Number of wire bits:           2744
   Number of public wires:          88
   Number of public wire bits:    1845
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1027
     $lut                          763
     dffsre                        264


yosys> opt_clean -purge

3.57. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \noekeon..
Removed 0 unused cells and 73 unused wires.
<suppressed ~73 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.58. Executing Verilog backend.

yosys> bmuxmap

3.58.1. Executing BMUXMAP pass.

yosys> demuxmap

3.58.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\noekeon'.

End of script. Logfile hash: 906274575a, CPU: user 9.04s system 0.11s, MEM: 60.24 MB peak
Yosys 0.16+65 (git sha1 03bd62bb8, gcc 9.1.0 -fPIC -Os)
Time spent: 97% 6x abc (305 sec), 1% 29x opt_expr (3 sec), ...
real 65.06
user 283.30
sys 30.63
