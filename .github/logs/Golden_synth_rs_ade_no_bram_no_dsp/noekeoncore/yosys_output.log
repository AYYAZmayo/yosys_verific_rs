
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.49
 Yosys 0.18+10 (git sha1 7a7a25778, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 05:39:28 2022.

yosys> verilog_defaults -add -I.

yosys> read -vhdl g_m_1.vhd g_m_2.vhd g_m_3.vhd g_m_4.vhd g_m_5.vhd g_m_6.vhd gamma.vhd noekeon.vhd output_trans.vhd pi_1.vhd pi_2.vhd rc_gen.vhd round_f.vhd t_m_1.vhd t_m_2.vhd t_m_3.vhd theta.vhd

yosys> verific -vhdl g_m_1.vhd g_m_2.vhd g_m_3.vhd g_m_4.vhd g_m_5.vhd g_m_6.vhd gamma.vhd noekeon.vhd output_trans.vhd pi_1.vhd pi_2.vhd rc_gen.vhd round_f.vhd t_m_1.vhd t_m_2.vhd t_m_3.vhd theta.vhd

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 05:39:28 2022.
VERIFIC-INFO [VHDL-1504] default VHDL library search path is now "/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008"
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'g_m_1.vhd'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_1164' from file '/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_1164.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.standard' from file '/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/standard.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.textio' from file '/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/textio.vdb'
VERIFIC-INFO [VHDL-1012] g_m_1.vhd:20: analyzing entity 'g_m_1'
VERIFIC-INFO [VHDL-1010] g_m_1.vhd:28: analyzing architecture 'behavioral'
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'g_m_2.vhd'
VERIFIC-INFO [VHDL-1012] g_m_2.vhd:20: analyzing entity 'g_m_2'
VERIFIC-INFO [VHDL-1010] g_m_2.vhd:28: analyzing architecture 'behavioral'
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'g_m_3.vhd'
VERIFIC-INFO [VHDL-1012] g_m_3.vhd:20: analyzing entity 'g_m_3'
VERIFIC-INFO [VHDL-1010] g_m_3.vhd:28: analyzing architecture 'behavioral'
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'g_m_4.vhd'
VERIFIC-INFO [VHDL-1012] g_m_4.vhd:20: analyzing entity 'g_m_4'
VERIFIC-INFO [VHDL-1010] g_m_4.vhd:29: analyzing architecture 'behavioral'
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'g_m_5.vhd'
VERIFIC-INFO [VHDL-1012] g_m_5.vhd:29: analyzing entity 'g_m_5'
VERIFIC-INFO [VHDL-1010] g_m_5.vhd:37: analyzing architecture 'behavioral'
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'g_m_6.vhd'
VERIFIC-INFO [VHDL-1012] g_m_6.vhd:20: analyzing entity 'g_m_6'
VERIFIC-INFO [VHDL-1010] g_m_6.vhd:28: analyzing architecture 'behavioral'
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'gamma.vhd'
VERIFIC-INFO [VHDL-1012] gamma.vhd:21: analyzing entity 'gamma'
VERIFIC-INFO [VHDL-1010] gamma.vhd:34: analyzing architecture 'behavioral'
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'noekeon.vhd'
VERIFIC-INFO [VHDL-1012] noekeon.vhd:20: analyzing entity 'noekeon'
VERIFIC-INFO [VHDL-1010] noekeon.vhd:38: analyzing architecture 'behavioral'
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'output_trans.vhd'
VERIFIC-INFO [VHDL-1012] output_trans.vhd:20: analyzing entity 'output_trans'
VERIFIC-INFO [VHDL-1010] output_trans.vhd:38: analyzing architecture 'behavioral'
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'pi_1.vhd'
VERIFIC-INFO [VHDL-1012] pi_1.vhd:20: analyzing entity 'pi_1'
VERIFIC-INFO [VHDL-1010] pi_1.vhd:29: analyzing architecture 'behavioral'
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'pi_2.vhd'
VERIFIC-INFO [VHDL-1012] pi_2.vhd:35: analyzing entity 'pi_2'
VERIFIC-INFO [VHDL-1010] pi_2.vhd:44: analyzing architecture 'behavioral'
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'rc_gen.vhd'
VERIFIC-INFO [VHDL-1012] rc_gen.vhd:20: analyzing entity 'rc_gen'
VERIFIC-INFO [VHDL-1010] rc_gen.vhd:27: analyzing architecture 'behavioral'
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'round_f.vhd'
VERIFIC-INFO [VHDL-1012] round_f.vhd:20: analyzing entity 'round_f'
VERIFIC-INFO [VHDL-1010] round_f.vhd:38: analyzing architecture 'behavioral'
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 't_m_1.vhd'
VERIFIC-INFO [VHDL-1012] t_m_1.vhd:20: analyzing entity 't_m_1'
VERIFIC-INFO [VHDL-1010] t_m_1.vhd:30: analyzing architecture 'behavioral'
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 't_m_2.vhd'
VERIFIC-INFO [VHDL-1012] t_m_2.vhd:20: analyzing entity 't_m_2'
VERIFIC-INFO [VHDL-1010] t_m_2.vhd:36: analyzing architecture 'behavioral'
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 't_m_3.vhd'
VERIFIC-INFO [VHDL-1012] t_m_3.vhd:20: analyzing entity 't_m_3'
VERIFIC-INFO [VHDL-1010] t_m_3.vhd:30: analyzing architecture 'behavioral'
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'theta.vhd'
VERIFIC-INFO [VHDL-1012] theta.vhd:20: analyzing entity 'theta'
VERIFIC-INFO [VHDL-1010] theta.vhd:39: analyzing architecture 'behavioral'

yosys> synth_rs -top noekeon -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.58

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\RS_DSP2_MULT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_sim'.
Generating RTLIL representation for module `\dsp_t1_20x18x64'.
Generating RTLIL representation for module `\dsp_t1_10x9x32'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top noekeon

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VHDL-1067] noekeon.vhd:20: processing 'noekeon(Behavioral)'
VERIFIC-INFO [VHDL-1067] rc_gen.vhd:20: processing 'rc_gen(Behavioral)'
VERIFIC-INFO [VHDL-1067] round_f.vhd:20: processing 'round_f(Behavioral)'
VERIFIC-INFO [VHDL-1067] theta.vhd:20: processing 'theta(Behavioral)'
VERIFIC-INFO [VHDL-1067] t_m_1.vhd:20: processing 't_m_1(Behavioral)'
VERIFIC-INFO [VHDL-1067] t_m_2.vhd:20: processing 't_m_2(Behavioral)'
VERIFIC-INFO [VHDL-1067] t_m_3.vhd:20: processing 't_m_3(Behavioral)'
VERIFIC-INFO [VHDL-1067] pi_1.vhd:20: processing 'pi_1(Behavioral)'
VERIFIC-INFO [VHDL-1067] gamma.vhd:21: processing 'gamma(Behavioral)'
VERIFIC-INFO [VHDL-1067] g_m_1.vhd:20: processing 'g_m_1(Behavioral)'
VERIFIC-INFO [VHDL-1067] g_m_2.vhd:20: processing 'g_m_2(Behavioral)'
VERIFIC-INFO [VHDL-1067] g_m_3.vhd:20: processing 'g_m_3(Behavioral)'
VERIFIC-INFO [VHDL-1067] g_m_4.vhd:20: processing 'g_m_4(Behavioral)'
VERIFIC-INFO [VHDL-1067] g_m_5.vhd:29: processing 'g_m_5(Behavioral)'
VERIFIC-INFO [VHDL-1067] g_m_6.vhd:20: processing 'g_m_6(Behavioral)'
VERIFIC-INFO [VHDL-1067] pi_2.vhd:35: processing 'pi_2(Behavioral)'
VERIFIC-INFO [VHDL-1067] output_trans.vhd:20: processing 'output_trans(Behavioral)'
Importing module noekeon.
Importing module output_trans(Behavioral).
Importing module rc_gen(Behavioral).
Importing module round_f(Behavioral).
Importing module gamma(Behavioral).
Importing module g_m_1(Behavioral).
Importing module g_m_2(Behavioral).
Importing module g_m_3(Behavioral).
Importing module g_m_4(Behavioral).
Importing module g_m_5(Behavioral).
Importing module g_m_6(Behavioral).
Importing module pi_1(Behavioral).
Importing module pi_2(Behavioral).
Importing module theta(Behavioral).
Importing module t_m_1(Behavioral).
Importing module t_m_2(Behavioral).
Importing module t_m_3(Behavioral).

3.3.1. Analyzing design hierarchy..
Top module:  \noekeon
Used module:     \theta(Behavioral)
Used module:         \t_m_3(Behavioral)
Used module:         \t_m_2(Behavioral)
Used module:         \t_m_1(Behavioral)
Used module:     \output_trans(Behavioral)
Used module:     \round_f(Behavioral)
Used module:         \pi_2(Behavioral)
Used module:         \gamma(Behavioral)
Used module:             \g_m_6(Behavioral)
Used module:             \g_m_5(Behavioral)
Used module:             \g_m_4(Behavioral)
Used module:             \g_m_3(Behavioral)
Used module:             \g_m_2(Behavioral)
Used module:             \g_m_1(Behavioral)
Used module:         \pi_1(Behavioral)
Used module:     \rc_gen(Behavioral)

3.3.2. Analyzing design hierarchy..
Top module:  \noekeon
Used module:     \theta(Behavioral)
Used module:         \t_m_3(Behavioral)
Used module:         \t_m_2(Behavioral)
Used module:         \t_m_1(Behavioral)
Used module:     \output_trans(Behavioral)
Used module:     \round_f(Behavioral)
Used module:         \pi_2(Behavioral)
Used module:         \gamma(Behavioral)
Used module:             \g_m_6(Behavioral)
Used module:             \g_m_5(Behavioral)
Used module:             \g_m_4(Behavioral)
Used module:             \g_m_3(Behavioral)
Used module:             \g_m_2(Behavioral)
Used module:             \g_m_1(Behavioral)
Used module:         \pi_1(Behavioral)
Used module:     \rc_gen(Behavioral)
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.4.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.4.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module t_m_3(Behavioral).
Optimizing module t_m_2(Behavioral).
Optimizing module t_m_1(Behavioral).
Optimizing module theta(Behavioral).
Optimizing module pi_2(Behavioral).
Optimizing module pi_1(Behavioral).
Optimizing module g_m_6(Behavioral).
Optimizing module g_m_5(Behavioral).
Optimizing module g_m_4(Behavioral).
Optimizing module g_m_3(Behavioral).
Optimizing module g_m_2(Behavioral).
Optimizing module g_m_1(Behavioral).
Optimizing module gamma(Behavioral).
Optimizing module round_f(Behavioral).
Optimizing module rc_gen(Behavioral).
<suppressed ~3 debug messages>
Optimizing module output_trans(Behavioral).
Optimizing module noekeon.

yosys> bmuxmap

3.5. Executing BMUXMAP pass.

yosys> demuxmap

3.6. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> flatten

3.7. Executing FLATTEN pass (flatten design).
Deleting now unused module g_m_1(Behavioral).
Deleting now unused module g_m_2(Behavioral).
Deleting now unused module g_m_3(Behavioral).
Deleting now unused module g_m_4(Behavioral).
Deleting now unused module g_m_5(Behavioral).
Deleting now unused module g_m_6(Behavioral).
Deleting now unused module gamma(Behavioral).
Deleting now unused module output_trans(Behavioral).
Deleting now unused module pi_1(Behavioral).
Deleting now unused module pi_2(Behavioral).
Deleting now unused module rc_gen(Behavioral).
Deleting now unused module round_f(Behavioral).
Deleting now unused module t_m_1(Behavioral).
Deleting now unused module t_m_2(Behavioral).
Deleting now unused module t_m_3(Behavioral).
Deleting now unused module theta(Behavioral).
<suppressed ~18 debug messages>

yosys> bmuxmap

3.8. Executing BMUXMAP pass.

yosys> demuxmap

3.9. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> tribuf -logic

3.10. Executing TRIBUF pass.

yosys> deminout

3.11. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module noekeon.
<suppressed ~4 debug messages>

yosys> opt_clean

3.13. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \noekeon..
Removed 0 unused cells and 279 unused wires.
<suppressed ~101 debug messages>

yosys> check

3.14. Executing CHECK pass (checking for obvious problems).
Checking module noekeon...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.15. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.15.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module noekeon.

yosys> opt_merge -nomux

3.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\noekeon'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.15.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \noekeon..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~13 debug messages>

yosys> opt_reduce

3.15.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \noekeon.
Performed a total of 0 changes.

yosys> opt_merge

3.15.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\noekeon'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.15.6. Executing OPT_DFF pass (perform DFF optimizations).
Removing never-active async load on $verific$out_t_a_3_in_s_reg$noekeon.vhd:181$63 ($aldff) from module noekeon.
Removing never-active async load on $verific$out_t_a_2_in_s_reg$noekeon.vhd:181$62 ($aldff) from module noekeon.
Removing never-active async load on $verific$out_t_a_1_in_s_reg$noekeon.vhd:181$61 ($aldff) from module noekeon.
Removing never-active async load on $verific$out_t_a_0_in_s_reg$noekeon.vhd:181$60 ($aldff) from module noekeon.
Removing never-active async load on $verific$a_3_in_s_reg$noekeon.vhd:166$55 ($aldff) from module noekeon.
Removing never-active async load on $verific$a_2_in_s_reg$noekeon.vhd:166$54 ($aldff) from module noekeon.
Removing never-active async load on $verific$a_1_in_s_reg$noekeon.vhd:166$53 ($aldff) from module noekeon.
Removing never-active async load on $verific$a_0_in_s_reg$noekeon.vhd:166$52 ($aldff) from module noekeon.
Removing never-active async load on $flatten\RC_GEN_0.$verific$rc_s_reg$rc_gen.vhd:55$160 ($aldff) from module noekeon.

yosys> opt_clean

3.15.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \noekeon..

yosys> opt_expr

3.15.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module noekeon.

3.15.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.15.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \noekeon..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~13 debug messages>

yosys> opt_reduce

3.15.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \noekeon.
Performed a total of 0 changes.

yosys> opt_merge

3.15.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\noekeon'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.15.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.15.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \noekeon..

yosys> opt_expr

3.15.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module noekeon.

3.15.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

3.16. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.16.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.16.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.16.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.16.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \noekeon..

yosys> fsm_opt

3.16.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.16.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.16.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.16.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat

3.17. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.17.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module noekeon.

yosys> opt_merge -nomux

3.17.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\noekeon'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.17.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \noekeon..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~13 debug messages>

yosys> opt_reduce

3.17.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \noekeon.
Performed a total of 0 changes.

yosys> opt_merge

3.17.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\noekeon'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.17.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.17.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \noekeon..

yosys> opt_expr

3.17.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module noekeon.

3.17.9. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.18. Executing WREDUCE pass (reducing word size of cells).
Removed top 24 bits (of 32) from port B of cell noekeon.$flatten\ROUND_F_0.$verific$xor_4$round_f.vhd:114$167 ($xor).
Removed top 24 bits (of 32) from port B of cell noekeon.$flatten\ROUND_F_0.$verific$xor_7$round_f.vhd:130$183 ($xor).
Removed top 7 bits (of 8) from port B of cell noekeon.$flatten\RC_GEN_0.$verific$and_15$rc_gen.vhd:48$154 ($and).
Removed top 3 bits (of 8) from port B of cell noekeon.$flatten\RC_GEN_0.$verific$xor_12$rc_gen.vhd:45$151 ($xor).
Removed top 1 bits (of 8) from port A of cell noekeon.$flatten\RC_GEN_0.$verific$xor_18$rc_gen.vhd:51$156 ($xor).
Removed top 24 bits (of 32) from port B of cell noekeon.$flatten\OUT_TRANS_0.$verific$xor_3$output_trans.vhd:65$105 ($xor).
Removed top 24 bits (of 32) from port B of cell noekeon.$flatten\OUT_TRANS_0.$verific$xor_8$output_trans.vhd:82$122 ($xor).

yosys> peepopt

3.19. Executing PEEPOPT pass (run peephole optimizers).

yosys> opt_clean

3.20. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \noekeon..

yosys> bmuxmap

3.21. Executing BMUXMAP pass.

yosys> demuxmap

3.22. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> alumacc

3.23. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module noekeon:
  created 0 $alu and 0 $macc cells.

yosys> opt_expr

3.24. Executing OPT_EXPR pass (perform const folding).
Optimizing module noekeon.

yosys> opt_merge -nomux

3.25. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\noekeon'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.26. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \noekeon..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~13 debug messages>

yosys> opt_reduce

3.27. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \noekeon.
Performed a total of 0 changes.

yosys> opt_merge

3.28. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\noekeon'.
Removed a total of 0 cells.

yosys> opt_share

3.29. Executing OPT_SHARE pass.

yosys> opt_dff

3.30. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.31. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \noekeon..

yosys> opt_expr

3.32. Executing OPT_EXPR pass (perform const folding).
Optimizing module noekeon.
MAX OPT ITERATION = 1

yosys> stat

3.33. Printing statistics.

=== noekeon ===

   Number of wires:                346
   Number of wire bits:           9823
   Number of public wires:         312
   Number of public wire bits:    9013
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 86
     $and                            6
     $dff                            9
     $logic_not                      2
     $mux                           16
     $not                            2
     $xor                           51


yosys> memory -nomap

3.34. Executing MEMORY pass.

yosys> opt_mem

3.34.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.34.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.34.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.34.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.34.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.34.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \noekeon..

yosys> memory_share

3.34.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.34.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.34.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \noekeon..

yosys> memory_collect

3.34.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.35. Printing statistics.

=== noekeon ===

   Number of wires:                346
   Number of wire bits:           9823
   Number of public wires:         312
   Number of public wire bits:    9013
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 86
     $and                            6
     $dff                            9
     $logic_not                      2
     $mux                           16
     $not                            2
     $xor                           51


yosys> muxpack

3.36. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~16 debug messages>

yosys> opt_clean

3.37. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \noekeon..

yosys> pmuxtree

3.38. Executing PMUXTREE pass.

yosys> muxpack

3.39. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~16 debug messages>

yosys> memory_map

3.40. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> stat

3.41. Printing statistics.

=== noekeon ===

   Number of wires:                346
   Number of wire bits:           9823
   Number of public wires:         312
   Number of public wire bits:    9013
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 86
     $and                            6
     $dff                            9
     $logic_not                      2
     $mux                           16
     $not                            2
     $xor                           51


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.42. Executing TECHMAP pass (map to technology primitives).

3.42.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.42.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.42.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~157 debug messages>

yosys> stat

3.43. Printing statistics.

=== noekeon ===

   Number of wires:                352
   Number of wire bits:           9837
   Number of public wires:         312
   Number of public wire bits:    9013
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2560
     $_AND_                        144
     $_DFF_P_                      264
     $_MUX_                        424
     $_NOT_                        130
     $_OR_                          14
     $_XOR_                       1584


yosys> opt_expr

3.44. Executing OPT_EXPR pass (perform const folding).
Optimizing module noekeon.
<suppressed ~272 debug messages>

yosys> opt_merge -nomux

3.45. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\noekeon'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

yosys> opt_muxtree

3.46. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \noekeon..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.47. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \noekeon.
Performed a total of 0 changes.

yosys> opt_merge

3.48. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\noekeon'.
Removed a total of 0 cells.

yosys> opt_share

3.49. Executing OPT_SHARE pass.

yosys> opt_dff

3.50. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:262:slice$2417 ($_DFF_P_) from module noekeon (D = $flatten\RC_GEN_0.$verific$n126$143 [7], Q = \RC_GEN_0.rc_s [7], rval = 1'1).
Adding SRST signal on $auto$ff.cc:262:slice$2410 ($_DFF_P_) from module noekeon (D = $flatten\RC_GEN_0.$verific$n126$143 [0], Q = \RC_GEN_0.rc_s [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$2411 ($_DFF_P_) from module noekeon (D = $flatten\RC_GEN_0.$verific$n126$143 [1], Q = \RC_GEN_0.rc_s [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$2413 ($_DFF_P_) from module noekeon (D = $flatten\RC_GEN_0.$verific$n126$143 [3], Q = \RC_GEN_0.rc_s [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$2415 ($_DFF_P_) from module noekeon (D = $flatten\RC_GEN_0.$verific$n126$143 [5], Q = \RC_GEN_0.rc_s [5], rval = 1'0).

yosys> opt_clean

3.51. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \noekeon..
Removed 6 unused cells and 14 unused wires.
<suppressed ~7 debug messages>

yosys> opt_expr

3.52. Executing OPT_EXPR pass (perform const folding).
Optimizing module noekeon.

yosys> opt_muxtree

3.53. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \noekeon..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.54. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \noekeon.
Performed a total of 0 changes.

yosys> opt_merge

3.55. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\noekeon'.
Removed a total of 0 cells.

yosys> opt_share

3.56. Executing OPT_SHARE pass.

yosys> opt_dff

3.57. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.58. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \noekeon..

yosys> opt_expr

3.59. Executing OPT_EXPR pass (perform const folding).
Optimizing module noekeon.
MAX OPT ITERATION = 2

yosys> opt -fast -full

3.60. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.60.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module noekeon.

yosys> opt_merge

3.60.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\noekeon'.
Removed a total of 0 cells.

yosys> opt_dff

3.60.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.60.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \noekeon..

3.60.5. Finished fast OPT passes.

yosys> techmap -map +/techmap.v

3.61. Executing TECHMAP pass (map to technology primitives).

3.61.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.61.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> opt -sat

3.62. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.62.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module noekeon.

yosys> opt_merge -nomux

3.62.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\noekeon'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.62.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \noekeon..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.62.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \noekeon.
Performed a total of 0 changes.

yosys> opt_merge

3.62.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\noekeon'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.62.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.62.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \noekeon..

yosys> opt_expr

3.62.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module noekeon.

3.62.9. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

3.63. Executing ABC pass (technology mapping using ABC).

3.63.1. Summary of detected clock domains:
  162 cells in clk=\clk, en={ }, arst={ }, srst=\rst
  2140 cells in clk=\clk, en={ }, arst={ }, srst={ }

3.63.2. Extracting gate netlist of module `\noekeon' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by \rst
Extracted 162 gates and 278 wires to a netlist network with 116 inputs and 88 outputs.

3.63.2.1. Executing ABC.

3.63.3. Extracting gate netlist of module `\noekeon' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 2140 gates and 2451 wires to a netlist network with 311 inputs and 203 outputs.

3.63.3.1. Executing ABC.

yosys> abc -dff

3.64. Executing ABC pass (technology mapping using ABC).

3.64.1. Summary of detected clock domains:
  75 cells in clk=\clk, en={ }, arst={ }, srst=\rst
  2018 cells in clk=\clk, en={ }, arst={ }, srst={ }

3.64.2. Extracting gate netlist of module `\noekeon' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by \rst
Extracted 75 gates and 121 wires to a netlist network with 46 inputs and 33 outputs.

3.64.2.1. Executing ABC.

3.64.3. Extracting gate netlist of module `\noekeon' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 2018 gates and 2304 wires to a netlist network with 286 inputs and 163 outputs.

3.64.3.1. Executing ABC.

yosys> abc -dff

3.65. Executing ABC pass (technology mapping using ABC).

3.65.1. Summary of detected clock domains:
  119 cells in clk=\clk, en={ }, arst={ }, srst=\rst
  1918 cells in clk=\clk, en={ }, arst={ }, srst={ }

3.65.2. Extracting gate netlist of module `\noekeon' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by \rst
Extracted 119 gates and 197 wires to a netlist network with 78 inputs and 61 outputs.

3.65.2.1. Executing ABC.

3.65.3. Extracting gate netlist of module `\noekeon' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 1918 gates and 2213 wires to a netlist network with 295 inputs and 173 outputs.

3.65.3.1. Executing ABC.

yosys> abc -dff

3.66. Executing ABC pass (technology mapping using ABC).

3.66.1. Summary of detected clock domains:
  57 cells in clk=\clk, en={ }, arst={ }, srst=\rst
  1989 cells in clk=\clk, en={ }, arst={ }, srst={ }

3.66.2. Extracting gate netlist of module `\noekeon' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by \rst
Extracted 57 gates and 87 wires to a netlist network with 30 inputs and 26 outputs.

3.66.2.1. Executing ABC.

3.66.3. Extracting gate netlist of module `\noekeon' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 1989 gates and 2270 wires to a netlist network with 281 inputs and 151 outputs.

3.66.3.1. Executing ABC.

yosys> opt_ffinv

3.67. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt -sat

3.68. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.68.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module noekeon.
<suppressed ~2 debug messages>

yosys> opt_merge -nomux

3.68.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\noekeon'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

yosys> opt_muxtree

3.68.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \noekeon..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.68.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \noekeon.
Performed a total of 0 changes.

yosys> opt_merge

3.68.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\noekeon'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.68.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.68.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \noekeon..
Removed 0 unused cells and 8026 unused wires.
<suppressed ~204 debug messages>

yosys> opt_expr

3.68.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module noekeon.

3.68.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.68.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \noekeon..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.68.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \noekeon.
Performed a total of 0 changes.

yosys> opt_merge

3.68.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\noekeon'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.68.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.68.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \noekeon..

yosys> opt_expr

3.68.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module noekeon.

3.68.16. Finished OPT passes. (There is nothing left to do.)

yosys> bmuxmap

3.69. Executing BMUXMAP pass.

yosys> demuxmap

3.70. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> abc -script /home/users/temp_dir/yosys_5M6Ohg/abc_tmp_1.scr

3.71. Executing ABC pass (technology mapping using ABC).

3.71.1. Extracting gate netlist of module `\noekeon' to `<abc-temp-dir>/input.blif'..
Extracted 1772 gates and 2294 wires to a netlist network with 522 inputs and 392 outputs.

3.71.1.1. Executing ABC.
DE:   #PIs = 522  #Luts =   890  Max Lvl =  11  Avg Lvl =   7.81  [   0.62 sec. at Pass 0]
DE:   #PIs = 522  #Luts =   800  Max Lvl =   7  Avg Lvl =   4.79  [  19.14 sec. at Pass 1]
DE:   #PIs = 522  #Luts =   763  Max Lvl =   7  Avg Lvl =   4.61  [   2.97 sec. at Pass 2]
DE:   #PIs = 522  #Luts =   763  Max Lvl =   7  Avg Lvl =   4.61  [   5.09 sec. at Pass 3]
DE:   #PIs = 522  #Luts =   763  Max Lvl =   7  Avg Lvl =   4.61  [   3.65 sec. at Pass 4]
DE:   #PIs = 522  #Luts =   763  Max Lvl =   7  Avg Lvl =   4.61  [   6.38 sec. at Pass 5]
DE:   #PIs = 522  #Luts =   763  Max Lvl =   7  Avg Lvl =   4.61  [   1.06 sec. at Pass 6]

yosys> opt_expr

3.72. Executing OPT_EXPR pass (perform const folding).
Optimizing module noekeon.

yosys> opt_merge -nomux

3.73. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\noekeon'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.74. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \noekeon..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.75. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \noekeon.
Performed a total of 0 changes.

yosys> opt_merge

3.76. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\noekeon'.
Removed a total of 0 cells.

yosys> opt_share

3.77. Executing OPT_SHARE pass.

yosys> opt_dff

3.78. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.79. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \noekeon..
Removed 0 unused cells and 2293 unused wires.
<suppressed ~22 debug messages>

yosys> opt_expr

3.80. Executing OPT_EXPR pass (perform const folding).
Optimizing module noekeon.
MAX OPT ITERATION = 1

yosys> opt_ffinv

3.81. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> stat

3.82. Printing statistics.

=== noekeon ===

   Number of wires:                984
   Number of wire bits:           2741
   Number of public wires:          88
   Number of public wire bits:    1845
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1027
     $_DFF_P_                      259
     $_SDFF_PP0_                     5
     $lut                          763


yosys> shregmap -minlen 8 -maxlen 20

3.83. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.84. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.85. Printing statistics.

=== noekeon ===

   Number of wires:                989
   Number of wire bits:           2746
   Number of public wires:          88
   Number of public wire bits:    1845
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1032
     $_DFF_P_                      264
     $_MUX_                          5
     $lut                          763


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.86. Executing TECHMAP pass (map to technology primitives).

3.86.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.86.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.86.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
No more expansions possible.
<suppressed ~1163 debug messages>

yosys> opt_expr -mux_undef

3.87. Executing OPT_EXPR pass (perform const folding).
Optimizing module noekeon.
<suppressed ~7360 debug messages>

yosys> simplemap

3.88. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.89. Executing OPT_EXPR pass (perform const folding).
Optimizing module noekeon.

yosys> opt_merge

3.90. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\noekeon'.
<suppressed ~26013 debug messages>
Removed a total of 8671 cells.

yosys> opt_dff -nodffe -nosdff

3.91. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.92. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \noekeon..
Removed 0 unused cells and 2266 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.93. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.93.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module noekeon.
<suppressed ~77 debug messages>

yosys> opt_merge -nomux

3.93.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\noekeon'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.93.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \noekeon..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.93.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \noekeon.
Performed a total of 0 changes.

yosys> opt_merge

3.93.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\noekeon'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.93.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.93.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \noekeon..
Removed 0 unused cells and 11 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.93.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module noekeon.

3.93.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.93.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \noekeon..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.93.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \noekeon.
Performed a total of 0 changes.

yosys> opt_merge

3.93.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\noekeon'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.93.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.93.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \noekeon..

yosys> opt_expr

3.93.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module noekeon.

3.93.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /home/users/temp_dir/yosys_5M6Ohg/abc_tmp_2.scr

3.94. Executing ABC pass (technology mapping using ABC).

3.94.1. Extracting gate netlist of module `\noekeon' to `<abc-temp-dir>/input.blif'..
Extracted 3858 gates and 4382 wires to a netlist network with 522 inputs and 392 outputs.

3.94.1.1. Executing ABC.
DE:   #PIs = 522  #Luts =   799  Max Lvl =   7  Avg Lvl =   4.85  [   0.71 sec. at Pass 0]
DE:   #PIs = 522  #Luts =   795  Max Lvl =   5  Avg Lvl =   4.37  [  20.79 sec. at Pass 1]
DE:   #PIs = 522  #Luts =   763  Max Lvl =   7  Avg Lvl =   4.84  [   4.09 sec. at Pass 2]
DE:   #PIs = 522  #Luts =   763  Max Lvl =   7  Avg Lvl =   4.84  [   4.58 sec. at Pass 3]
DE:   #PIs = 522  #Luts =   760  Max Lvl =   7  Avg Lvl =   4.64  [   4.42 sec. at Pass 4]
DE:   #PIs = 522  #Luts =   760  Max Lvl =   7  Avg Lvl =   4.64  [   5.31 sec. at Pass 5]
DE:   #PIs = 522  #Luts =   754  Max Lvl =   7  Avg Lvl =   4.94  [   4.43 sec. at Pass 6]
DE:   #PIs = 522  #Luts =   754  Max Lvl =   7  Avg Lvl =   4.94  [   5.87 sec. at Pass 7]
DE:   #PIs = 522  #Luts =   754  Max Lvl =   7  Avg Lvl =   4.94  [   4.52 sec. at Pass 8]
DE:   #PIs = 522  #Luts =   754  Max Lvl =   7  Avg Lvl =   4.94  [   5.59 sec. at Pass 9]
DE:   #PIs = 522  #Luts =   754  Max Lvl =   7  Avg Lvl =   4.94  [   1.08 sec. at Pass 10]

yosys> opt_expr

3.95. Executing OPT_EXPR pass (perform const folding).
Optimizing module noekeon.

yosys> opt_merge -nomux

3.96. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\noekeon'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.97. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \noekeon..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.98. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \noekeon.
Performed a total of 0 changes.

yosys> opt_merge

3.99. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\noekeon'.
Removed a total of 0 cells.

yosys> opt_share

3.100. Executing OPT_SHARE pass.

yosys> opt_dff

3.101. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.102. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \noekeon..
Removed 0 unused cells and 3043 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.103. Executing OPT_EXPR pass (perform const folding).
Optimizing module noekeon.
MAX OPT ITERATION = 1

yosys> hierarchy -check

3.104. Executing HIERARCHY pass (managing design hierarchy).

3.104.1. Analyzing design hierarchy..
Top module:  \noekeon

3.104.2. Analyzing design hierarchy..
Top module:  \noekeon
Removed 0 unused modules.

yosys> stat

3.105. Printing statistics.

=== noekeon ===

   Number of wires:                975
   Number of wire bits:           2732
   Number of public wires:          88
   Number of public wire bits:    1845
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1018
     $lut                          754
     dffsre                        264


yosys> opt_clean -purge

3.106. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \noekeon..
Removed 0 unused cells and 72 unused wires.
<suppressed ~72 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.107. Executing Verilog backend.
Dumping module `\noekeon'.

End of script. Logfile hash: a54df13f38, CPU: user 11.64s system 0.19s, MEM: 60.00 MB peak
Yosys 0.18+10 (git sha1 7a7a25778, gcc 9.1.0 -fPIC -Os)
Time spent: 96% 6x abc (320 sec), 1% 27x opt_expr (4 sec), ...
real 138.99
user 301.11
sys 29.79
