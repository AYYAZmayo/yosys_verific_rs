
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.47
 Yosys 0.18+10 (git sha1 8217e4c48, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Apr22_SW_Release, released at Thu Apr 28 20:08:21 2022.

yosys> verilog_defaults -add -I.

yosys> read -sv prim_alert_pkg.sv prim_cipher_pkg.sv prim_count_pkg.sv prim_esc_pkg.sv prim_mubi_pkg.sv prim_pkg.sv prim_ram_1p_pkg.sv prim_ram_2p_pkg.sv prim_secded_pkg.sv prim_subreg_pkg.sv prim_util_pkg.sv uart_reg_pkg.sv jtag_pkg.sv lc_ctrl_pkg.sv entropy_src_pkg.sv edn_reg_pkg.sv edn_pkg.sv top_pkg.sv tlul_pkg.sv prim_alert_sender.sv prim_buf.sv prim_diff_decode.sv prim_fifo_sync.sv prim_flop_2sync.sv prim_generic_buf.sv prim_generic_flop.sv prim_generic_flop_2sync.sv prim_intr_hw.sv prim_secded_inv_39_32_dec.sv prim_secded_inv_39_32_enc.sv prim_secded_inv_64_57_dec.sv prim_secded_inv_64_57_enc.sv prim_subreg.sv prim_subreg_ext.sv tlul_adapter_reg.sv tlul_cmd_intg_chk.sv tlul_data_integ_dec.sv tlul_data_integ_enc.sv tlul_err.sv tlul_rsp_intg_gen.sv uart.sv uart_core.sv uart_reg_top.sv uart_rx.sv uart_tx.sv

yosys> verific -sv prim_alert_pkg.sv prim_cipher_pkg.sv prim_count_pkg.sv prim_esc_pkg.sv prim_mubi_pkg.sv prim_pkg.sv prim_ram_1p_pkg.sv prim_ram_2p_pkg.sv prim_secded_pkg.sv prim_subreg_pkg.sv prim_util_pkg.sv uart_reg_pkg.sv jtag_pkg.sv lc_ctrl_pkg.sv entropy_src_pkg.sv edn_reg_pkg.sv edn_pkg.sv top_pkg.sv tlul_pkg.sv prim_alert_sender.sv prim_buf.sv prim_diff_decode.sv prim_fifo_sync.sv prim_flop_2sync.sv prim_generic_buf.sv prim_generic_flop.sv prim_generic_flop_2sync.sv prim_intr_hw.sv prim_secded_inv_39_32_dec.sv prim_secded_inv_39_32_enc.sv prim_secded_inv_64_57_dec.sv prim_secded_inv_64_57_enc.sv prim_subreg.sv prim_subreg_ext.sv tlul_adapter_reg.sv tlul_cmd_intg_chk.sv tlul_data_integ_dec.sv tlul_data_integ_enc.sv tlul_err.sv tlul_rsp_intg_gen.sv uart.sv uart_core.sv uart_reg_top.sv uart_rx.sv uart_tx.sv

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Apr22_SW_Release, released at Thu Apr 28 20:08:21 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_alert_pkg.sv'
VERIFIC-WARNING [VERI-2418] prim_alert_pkg.sv:19: parameter 'ALERT_TX_DEFAULT' declared inside package 'prim_alert_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_alert_pkg.sv:22: parameter 'ALERT_RX_DEFAULT' declared inside package 'prim_alert_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_cipher_pkg.sv'
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:23: parameter 'PRINCE_SBOX4' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:28: parameter 'PRINCE_SBOX4_INV' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:33: parameter 'PRINCE_SHIFT_ROWS64' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:38: parameter 'PRINCE_SHIFT_ROWS64_INV' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:44: parameter 'PRINCE_ROUND_CONST' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:58: parameter 'PRINCE_ALPHA_CONST' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:61: parameter 'PRINCE_SHIFT_ROWS_CONST0' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:62: parameter 'PRINCE_SHIFT_ROWS_CONST1' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:63: parameter 'PRINCE_SHIFT_ROWS_CONST2' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:64: parameter 'PRINCE_SHIFT_ROWS_CONST3' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:141: parameter 'PRESENT_SBOX4' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:146: parameter 'PRESENT_SBOX4_INV' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:153: parameter 'PRESENT_PERM32' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:162: parameter 'PRESENT_PERM32_INV' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:172: parameter 'PRESENT_PERM64' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:189: parameter 'PRESENT_PERM64_INV' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_count_pkg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_esc_pkg.sv'
VERIFIC-WARNING [VERI-2418] prim_esc_pkg.sv:17: parameter 'ESC_TX_DEFAULT' declared inside package 'prim_esc_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_esc_pkg.sv:20: parameter 'ESC_RX_DEFAULT' declared inside package 'prim_esc_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_mubi_pkg.sv'
VERIFIC-WARNING [VERI-2418] prim_mubi_pkg.sv:19: parameter 'MuBi4Width' declared inside package 'prim_mubi_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_mubi_pkg.sv:148: parameter 'MuBi8Width' declared inside package 'prim_mubi_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_mubi_pkg.sv:277: parameter 'MuBi12Width' declared inside package 'prim_mubi_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_mubi_pkg.sv:406: parameter 'MuBi16Width' declared inside package 'prim_mubi_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_pkg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_ram_1p_pkg.sv'
VERIFIC-WARNING [VERI-2418] prim_ram_1p_pkg.sv:18: parameter 'RAM_1P_CFG_DEFAULT' declared inside package 'prim_ram_1p_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_ram_2p_pkg.sv'
VERIFIC-WARNING [VERI-2418] prim_ram_2p_pkg.sv:20: parameter 'RAM_2P_CFG_DEFAULT' declared inside package 'prim_ram_2p_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_pkg.sv'
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:81: parameter 'Secded2216ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:82: parameter 'Secded2216ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:90: parameter 'Secded2822ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:91: parameter 'Secded2822ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:99: parameter 'Secded3932ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:100: parameter 'Secded3932ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:108: parameter 'Secded6457ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:109: parameter 'Secded6457ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:117: parameter 'Secded7264ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:118: parameter 'Secded7264ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:126: parameter 'SecdedHamming2216ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:127: parameter 'SecdedHamming2216ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:135: parameter 'SecdedHamming3932ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:136: parameter 'SecdedHamming3932ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:144: parameter 'SecdedHamming7264ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:145: parameter 'SecdedHamming7264ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:153: parameter 'SecdedHamming7668ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:154: parameter 'SecdedHamming7668ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:162: parameter 'SecdedInv2216ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:163: parameter 'SecdedInv2216ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:171: parameter 'SecdedInv2822ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:172: parameter 'SecdedInv2822ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:180: parameter 'SecdedInv3932ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:181: parameter 'SecdedInv3932ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:189: parameter 'SecdedInv6457ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:190: parameter 'SecdedInv6457ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:198: parameter 'SecdedInv7264ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:199: parameter 'SecdedInv7264ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:207: parameter 'SecdedInvHamming2216ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:208: parameter 'SecdedInvHamming2216ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:216: parameter 'SecdedInvHamming3932ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:217: parameter 'SecdedInvHamming3932ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:225: parameter 'SecdedInvHamming7264ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:226: parameter 'SecdedInvHamming7264ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:234: parameter 'SecdedInvHamming7668ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:235: parameter 'SecdedInvHamming7668ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_subreg_pkg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_util_pkg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'uart_reg_pkg.sv'
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:10: parameter 'NumAlerts' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:13: parameter 'BlockAw' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:327: parameter 'UART_INTR_STATE_OFFSET' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:328: parameter 'UART_INTR_ENABLE_OFFSET' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:329: parameter 'UART_INTR_TEST_OFFSET' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:330: parameter 'UART_ALERT_TEST_OFFSET' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:331: parameter 'UART_CTRL_OFFSET' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:332: parameter 'UART_STATUS_OFFSET' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:333: parameter 'UART_RDATA_OFFSET' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:334: parameter 'UART_WDATA_OFFSET' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:335: parameter 'UART_FIFO_CTRL_OFFSET' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:336: parameter 'UART_FIFO_STATUS_OFFSET' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:337: parameter 'UART_OVRD_OFFSET' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:338: parameter 'UART_VAL_OFFSET' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:339: parameter 'UART_TIMEOUT_CTRL_OFFSET' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:342: parameter 'UART_INTR_TEST_RESVAL' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:343: parameter 'UART_INTR_TEST_TX_WATERMARK_RESVAL' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:344: parameter 'UART_INTR_TEST_RX_WATERMARK_RESVAL' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:345: parameter 'UART_INTR_TEST_TX_EMPTY_RESVAL' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:346: parameter 'UART_INTR_TEST_RX_OVERFLOW_RESVAL' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:347: parameter 'UART_INTR_TEST_RX_FRAME_ERR_RESVAL' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:348: parameter 'UART_INTR_TEST_RX_BREAK_ERR_RESVAL' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:349: parameter 'UART_INTR_TEST_RX_TIMEOUT_RESVAL' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:350: parameter 'UART_INTR_TEST_RX_PARITY_ERR_RESVAL' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:351: parameter 'UART_ALERT_TEST_RESVAL' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:352: parameter 'UART_ALERT_TEST_FATAL_FAULT_RESVAL' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:353: parameter 'UART_STATUS_RESVAL' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:354: parameter 'UART_STATUS_TXEMPTY_RESVAL' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:355: parameter 'UART_STATUS_TXIDLE_RESVAL' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:356: parameter 'UART_STATUS_RXIDLE_RESVAL' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:357: parameter 'UART_STATUS_RXEMPTY_RESVAL' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:358: parameter 'UART_RDATA_RESVAL' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:359: parameter 'UART_FIFO_STATUS_RESVAL' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:360: parameter 'UART_VAL_RESVAL' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:380: parameter 'UART_PERMIT' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'jtag_pkg.sv'
VERIFIC-WARNING [VERI-2418] jtag_pkg.sv:15: parameter 'JTAG_REQ_DEFAULT' declared inside package 'jtag_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] jtag_pkg.sv:22: parameter 'JTAG_RSP_DEFAULT' declared inside package 'jtag_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'lc_ctrl_pkg.sv'
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:13: parameter 'A0' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:14: parameter 'A1' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:15: parameter 'A2' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:16: parameter 'A3' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:17: parameter 'A4' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:18: parameter 'A5' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:19: parameter 'A6' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:20: parameter 'A7' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:21: parameter 'A8' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:22: parameter 'A9' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:23: parameter 'A10' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:24: parameter 'A11' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:26: parameter 'B0' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:27: parameter 'B1' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:28: parameter 'B2' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:29: parameter 'B3' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:30: parameter 'B4' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:31: parameter 'B5' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:32: parameter 'B6' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:33: parameter 'B7' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:34: parameter 'B8' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:35: parameter 'B9' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:36: parameter 'B10' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:37: parameter 'B11' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:40: parameter 'C0' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:41: parameter 'C1' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:42: parameter 'C2' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:43: parameter 'C3' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:44: parameter 'C4' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:45: parameter 'C5' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:46: parameter 'C6' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:47: parameter 'C7' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:48: parameter 'C8' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:49: parameter 'C9' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:50: parameter 'C10' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:51: parameter 'C11' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:52: parameter 'C12' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:53: parameter 'C13' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:54: parameter 'C14' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:55: parameter 'C15' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:57: parameter 'D0' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:58: parameter 'D1' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:59: parameter 'D2' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:60: parameter 'D3' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:61: parameter 'D4' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:62: parameter 'D5' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:63: parameter 'D6' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:64: parameter 'D7' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:65: parameter 'D8' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:66: parameter 'D9' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:67: parameter 'D10' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:68: parameter 'D11' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:69: parameter 'D12' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:70: parameter 'D13' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:71: parameter 'D14' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:72: parameter 'D15' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:75: parameter 'E0' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:76: parameter 'F0' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:82: parameter 'LcValueWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:83: parameter 'LcTokenWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:84: parameter 'NumLcStateValues' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:85: parameter 'LcStateWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:86: parameter 'NumLcCountValues' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:87: parameter 'LcCountWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:88: parameter 'NumLcStates' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:89: parameter 'DecLcStateWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:90: parameter 'DecLcCountWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:91: parameter 'LcIdStateWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:92: parameter 'DecLcIdStateWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:172: parameter 'NumTokens' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:173: parameter 'TokenIdxWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:191: parameter 'TxWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:199: parameter 'LC_TX_DEFAULT' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:201: parameter 'RmaSeedWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:204: parameter 'LcKeymgrDivWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:263: parameter 'TransTokenIdxMatrix' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'entropy_src_pkg.sv'
VERIFIC-WARNING [VERI-2418] entropy_src_pkg.sv:13: parameter 'RNG_BUS_WIDTH' declared inside package 'entropy_src_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] entropy_src_pkg.sv:14: parameter 'CSRNG_BUS_WIDTH' declared inside package 'entropy_src_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] entropy_src_pkg.sv:15: parameter 'FIPS_BUS_WIDTH' declared inside package 'entropy_src_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] entropy_src_pkg.sv:28: parameter 'ENTROPY_SRC_HW_IF_REQ_DEFAULT' declared inside package 'entropy_src_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] entropy_src_pkg.sv:29: parameter 'ENTROPY_SRC_HW_IF_RSP_DEFAULT' declared inside package 'entropy_src_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] entropy_src_pkg.sv:42: parameter 'ENTROPY_SRC_RNG_REQ_DEFAULT' declared inside package 'entropy_src_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] entropy_src_pkg.sv:43: parameter 'ENTROPY_SRC_RNG_RSP_DEFAULT' declared inside package 'entropy_src_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] entropy_src_pkg.sv:62: parameter 'ENTROPY_SRC_XHT_REQ_DEFAULT' declared inside package 'entropy_src_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] entropy_src_pkg.sv:63: parameter 'ENTROPY_SRC_XHT_RSP_DEFAULT' declared inside package 'entropy_src_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'edn_reg_pkg.sv'
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:10: parameter 'NumAlerts' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:13: parameter 'BlockAw' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:224: parameter 'EDN_INTR_STATE_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:225: parameter 'EDN_INTR_ENABLE_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:226: parameter 'EDN_INTR_TEST_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:227: parameter 'EDN_ALERT_TEST_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:228: parameter 'EDN_REGWEN_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:229: parameter 'EDN_CTRL_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:230: parameter 'EDN_SUM_STS_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:231: parameter 'EDN_BOOT_INS_CMD_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:232: parameter 'EDN_BOOT_GEN_CMD_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:233: parameter 'EDN_SW_CMD_REQ_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:234: parameter 'EDN_SW_CMD_STS_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:235: parameter 'EDN_RESEED_CMD_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:236: parameter 'EDN_GENERATE_CMD_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:237: parameter 'EDN_MAX_NUM_REQS_BETWEEN_RESEEDS_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:238: parameter 'EDN_RECOV_ALERT_STS_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:239: parameter 'EDN_ERR_CODE_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:240: parameter 'EDN_ERR_CODE_TEST_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:243: parameter 'EDN_INTR_TEST_RESVAL' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:244: parameter 'EDN_INTR_TEST_EDN_CMD_REQ_DONE_RESVAL' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:245: parameter 'EDN_INTR_TEST_EDN_FATAL_ERR_RESVAL' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:246: parameter 'EDN_ALERT_TEST_RESVAL' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:247: parameter 'EDN_ALERT_TEST_RECOV_ALERT_RESVAL' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:248: parameter 'EDN_ALERT_TEST_FATAL_ALERT_RESVAL' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:249: parameter 'EDN_SW_CMD_REQ_RESVAL' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:250: parameter 'EDN_RESEED_CMD_RESVAL' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:251: parameter 'EDN_GENERATE_CMD_RESVAL' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:275: parameter 'EDN_PERMIT' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'edn_pkg.sv'
VERIFIC-WARNING [VERI-2418] edn_pkg.sv:12: parameter 'ENDPOINT_BUS_WIDTH' declared inside package 'edn_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_pkg.sv:13: parameter 'FIPS_ENDPOINT_BUS_WIDTH' declared inside package 'edn_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_pkg.sv:26: parameter 'EDN_REQ_DEFAULT' declared inside package 'edn_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_pkg.sv:27: parameter 'EDN_RSP_DEFAULT' declared inside package 'edn_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_pkg.sv:30: parameter 'EDN_MODE_WIDTH' declared inside package 'edn_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'top_pkg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_pkg.sv'
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:14: parameter 'ArbiterImpl' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:27: parameter 'H2DCmdMaxWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:28: parameter 'H2DCmdIntgWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:29: parameter 'H2DCmdFullWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:30: parameter 'D2HRspMaxWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:31: parameter 'D2HRspIntgWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:32: parameter 'D2HRspFullWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:33: parameter 'DataMaxWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:34: parameter 'DataIntgWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:35: parameter 'DataFullWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:44: parameter 'TL_A_USER_DEFAULT' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:84: parameter 'TL_D_USER_DEFAULT' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_alert_sender.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_buf.sv'
VERIFIC-WARNING [VERI-1199] prim_buf.sv:24: parameter 'Impl' becomes localparam in 'prim_buf' with formal parameter declaration list
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_diff_decode.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_fifo_sync.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_flop_2sync.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_generic_buf.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_generic_flop.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_generic_flop_2sync.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_intr_hw.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_inv_39_32_dec.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_inv_39_32_enc.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_inv_64_57_dec.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_inv_64_57_enc.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_subreg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_subreg_ext.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_adapter_reg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_cmd_intg_chk.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_data_integ_dec.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_data_integ_enc.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_err.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_rsp_intg_gen.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'uart.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'uart_core.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'uart_reg_top.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'uart_rx.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'uart_tx.sv'

yosys> synth_rs -top uart -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.57

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\RS_DSP2_MULT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_sim'.
Generating RTLIL representation for module `\dsp_t1_20x18x64'.
Generating RTLIL representation for module `\dsp_t1_10x9x32'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top uart

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] uart.sv:8: compiling module 'uart'
VERIFIC-INFO [VERI-1018] uart_reg_top.sv:8: compiling module 'uart_reg_top'
VERIFIC-INFO [VERI-1018] tlul_cmd_intg_chk.sv:10: compiling module 'tlul_cmd_intg_chk'
VERIFIC-INFO [VERI-1018] prim_secded_inv_64_57_dec.sv:7: compiling module 'prim_secded_inv_64_57_dec'
VERIFIC-INFO [VERI-1018] tlul_data_integ_dec.sv:10: compiling module 'tlul_data_integ_dec'
VERIFIC-INFO [VERI-1018] prim_secded_inv_39_32_dec.sv:7: compiling module 'prim_secded_inv_39_32_dec'
VERIFIC-INFO [VERI-1018] tlul_rsp_intg_gen.sv:10: compiling module 'tlul_rsp_intg_gen'
VERIFIC-INFO [VERI-1018] prim_secded_inv_64_57_enc.sv:7: compiling module 'prim_secded_inv_64_57_enc'
VERIFIC-INFO [VERI-1018] tlul_data_integ_enc.sv:10: compiling module 'tlul_data_integ_enc'
VERIFIC-INFO [VERI-1018] prim_secded_inv_39_32_enc.sv:7: compiling module 'prim_secded_inv_39_32_enc'
VERIFIC-INFO [VERI-1018] tlul_adapter_reg.sv:10: compiling module 'tlul_adapter_reg(RegAw=6)'
VERIFIC-INFO [VERI-1018] tlul_err.sv:7: compiling module 'tlul_err'
VERIFIC-WARNING [VERI-1209] tlul_err.sv:49: expression size 32 truncated to fit in target size 4
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=1,SwAccess=SwAccessW1C_prim_subreg_pkg,RESVAL=1'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=1,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg_ext.sv:7: compiling module 'prim_subreg_ext(DW=32'b01)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=2,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=2'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=16,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=16'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg_ext.sv:7: compiling module 'prim_subreg_ext(DW=32'b01000)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=8,SwAccess=SwAccessWO_prim_subreg_pkg,RESVAL=8'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=1,SwAccess=SwAccessWO_prim_subreg_pkg,RESVAL=1'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=3,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=3'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg_ext.sv:7: compiling module 'prim_subreg_ext(DW=32'b0110)'
VERIFIC-INFO [VERI-1018] prim_subreg_ext.sv:7: compiling module 'prim_subreg_ext(DW=32'b010000)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=24,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=24'b0)'
VERIFIC-INFO [VERI-1018] uart_core.sv:8: compiling module 'uart_core'
VERIFIC-INFO [VERI-1018] prim_fifo_sync.sv:6: compiling module 'prim_fifo_sync(Width=32'b01000,Pass=1'b0,Depth=32'b0100000)'
VERIFIC-INFO [VERI-2571] prim_fifo_sync.sv:112: extracting RAM for identifier 'storage'
VERIFIC-INFO [VERI-1018] uart_tx.sv:8: compiling module 'uart_tx'
VERIFIC-INFO [VERI-1018] prim_flop_2sync.sv:13: compiling module 'prim_flop_2sync(Width=1,ResetValue=1'b1)'
VERIFIC-INFO [VERI-1018] prim_generic_flop_2sync.sv:9: compiling module 'prim_generic_flop_2sync(Width=1,ResetValue=1'b1)'
VERIFIC-INFO [VERI-1018] prim_generic_flop.sv:7: compiling module 'prim_generic_flop(ResetValue=1'b1)'
VERIFIC-INFO [VERI-1018] uart_rx.sv:8: compiling module 'uart_rx'
VERIFIC-INFO [VERI-1018] prim_intr_hw.sv:10: compiling module 'prim_intr_hw'
VERIFIC-INFO [VERI-1018] prim_alert_sender.sv:32: compiling module 'prim_alert_sender'
VERIFIC-INFO [VERI-1018] prim_diff_decode.sv:19: compiling module 'prim_diff_decode(AsyncOn=1'b1)'
VERIFIC-INFO [VERI-1018] prim_flop_2sync.sv:13: compiling module 'prim_flop_2sync(Width=1,ResetValue=1'b0)'
VERIFIC-INFO [VERI-1018] prim_generic_flop_2sync.sv:9: compiling module 'prim_generic_flop_2sync(Width=1,ResetValue=1'b0)'
VERIFIC-INFO [VERI-1018] prim_generic_flop.sv:7: compiling module 'prim_generic_flop(ResetValue=1'b0)'
VERIFIC-INFO [VERI-1018] prim_buf.sv:16: compiling module 'prim_buf'
VERIFIC-INFO [VERI-1018] prim_generic_buf.sv:6: compiling module 'prim_generic_buf'
Importing module uart.
Importing module prim_alert_sender.
Importing module prim_buf.
Importing module prim_diff_decode(AsyncOn=1'b1).
Importing module prim_flop_2sync(Width=1,ResetValue=1'b0).
Importing module prim_flop_2sync(Width=1,ResetValue=1'b1).
Importing module prim_generic_buf.
Importing module prim_generic_flop_2sync(Width=1,ResetValue=1'b0).
Importing module prim_generic_flop(ResetValue=1'b0).
Importing module prim_generic_flop_2sync(Width=1,ResetValue=1'b1).
Importing module prim_generic_flop(ResetValue=1'b1).
Importing module uart_core.
Importing module prim_fifo_sync(Width=32'b01000,Pass=1'b0,Depth=32'b0100000).
Importing module prim_intr_hw.
Importing module uart_reg_top.
Importing module prim_subreg(DW=1,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0).
Importing module prim_subreg(DW=1,SwAccess=SwAccessW1C_prim_subreg_pkg,RESVAL=1'b0).
Importing module prim_subreg(DW=1,SwAccess=SwAccessWO_prim_subreg_pkg,RESVAL=1'b0).
Importing module prim_subreg(DW=16,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=16'b0).
Importing module prim_subreg(DW=2,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=2'b0).
Importing module prim_subreg(DW=24,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=24'b0).
Importing module prim_subreg(DW=3,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=3'b0).
Importing module prim_subreg(DW=8,SwAccess=SwAccessWO_prim_subreg_pkg,RESVAL=8'b0).
Importing module prim_subreg_ext(DW=32'b01).
Importing module prim_subreg_ext(DW=32'b01000).
Importing module prim_subreg_ext(DW=32'b010000).
Importing module prim_subreg_ext(DW=32'b0110).
Importing module tlul_adapter_reg(RegAw=6).
Importing module tlul_cmd_intg_chk.
Importing module prim_secded_inv_64_57_dec.
Importing module tlul_data_integ_dec.
Importing module prim_secded_inv_39_32_dec.
Importing module tlul_err.
Importing module tlul_rsp_intg_gen.
Importing module prim_secded_inv_64_57_enc.
Importing module tlul_data_integ_enc.
Importing module prim_secded_inv_39_32_enc.
Importing module uart_rx.
Importing module uart_tx.

3.3.1. Analyzing design hierarchy..
Top module:  \uart
Used module:     \prim_alert_sender
Used module:         \prim_buf
Used module:             \prim_generic_buf
Used module:         \prim_diff_decode(AsyncOn=1'b1)
Used module:             \prim_flop_2sync(Width=1,ResetValue=1'b1)
Used module:                 \prim_generic_flop_2sync(Width=1,ResetValue=1'b1)
Used module:                     \prim_generic_flop(ResetValue=1'b1)
Used module:             \prim_flop_2sync(Width=1,ResetValue=1'b0)
Used module:                 \prim_generic_flop_2sync(Width=1,ResetValue=1'b0)
Used module:                     \prim_generic_flop(ResetValue=1'b0)
Used module:     \uart_core
Used module:         \prim_intr_hw
Used module:         \prim_fifo_sync(Width=32'b01000,Pass=1'b0,Depth=32'b0100000)
Used module:         \uart_rx
Used module:         \uart_tx
Used module:     \uart_reg_top
Used module:         \prim_subreg(DW=1,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0)
Used module:         \prim_subreg(DW=24,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=24'b0)
Used module:         \prim_subreg_ext(DW=32'b010000)
Used module:         \prim_subreg_ext(DW=32'b0110)
Used module:         \prim_subreg(DW=2,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=2'b0)
Used module:         \prim_subreg(DW=3,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=3'b0)
Used module:         \prim_subreg(DW=1,SwAccess=SwAccessWO_prim_subreg_pkg,RESVAL=1'b0)
Used module:         \prim_subreg(DW=8,SwAccess=SwAccessWO_prim_subreg_pkg,RESVAL=8'b0)
Used module:         \prim_subreg_ext(DW=32'b01000)
Used module:         \prim_subreg_ext(DW=32'b01)
Used module:         \prim_subreg(DW=16,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=16'b0)
Used module:         \prim_subreg(DW=1,SwAccess=SwAccessW1C_prim_subreg_pkg,RESVAL=1'b0)
Used module:         \tlul_adapter_reg(RegAw=6)
Used module:             \tlul_err
Used module:         \tlul_rsp_intg_gen
Used module:             \tlul_data_integ_enc
Used module:                 \prim_secded_inv_39_32_enc
Used module:             \prim_secded_inv_64_57_enc
Used module:         \tlul_cmd_intg_chk
Used module:             \tlul_data_integ_dec
Used module:                 \prim_secded_inv_39_32_dec
Used module:             \prim_secded_inv_64_57_dec

3.3.2. Analyzing design hierarchy..
Top module:  \uart
Used module:     \prim_alert_sender
Used module:         \prim_buf
Used module:             \prim_generic_buf
Used module:         \prim_diff_decode(AsyncOn=1'b1)
Used module:             \prim_flop_2sync(Width=1,ResetValue=1'b1)
Used module:                 \prim_generic_flop_2sync(Width=1,ResetValue=1'b1)
Used module:                     \prim_generic_flop(ResetValue=1'b1)
Used module:             \prim_flop_2sync(Width=1,ResetValue=1'b0)
Used module:                 \prim_generic_flop_2sync(Width=1,ResetValue=1'b0)
Used module:                     \prim_generic_flop(ResetValue=1'b0)
Used module:     \uart_core
Used module:         \prim_intr_hw
Used module:         \prim_fifo_sync(Width=32'b01000,Pass=1'b0,Depth=32'b0100000)
Used module:         \uart_rx
Used module:         \uart_tx
Used module:     \uart_reg_top
Used module:         \prim_subreg(DW=1,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0)
Used module:         \prim_subreg(DW=24,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=24'b0)
Used module:         \prim_subreg_ext(DW=32'b010000)
Used module:         \prim_subreg_ext(DW=32'b0110)
Used module:         \prim_subreg(DW=2,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=2'b0)
Used module:         \prim_subreg(DW=3,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=3'b0)
Used module:         \prim_subreg(DW=1,SwAccess=SwAccessWO_prim_subreg_pkg,RESVAL=1'b0)
Used module:         \prim_subreg(DW=8,SwAccess=SwAccessWO_prim_subreg_pkg,RESVAL=8'b0)
Used module:         \prim_subreg_ext(DW=32'b01000)
Used module:         \prim_subreg_ext(DW=32'b01)
Used module:         \prim_subreg(DW=16,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=16'b0)
Used module:         \prim_subreg(DW=1,SwAccess=SwAccessW1C_prim_subreg_pkg,RESVAL=1'b0)
Used module:         \tlul_adapter_reg(RegAw=6)
Used module:             \tlul_err
Used module:         \tlul_rsp_intg_gen
Used module:             \tlul_data_integ_enc
Used module:                 \prim_secded_inv_39_32_enc
Used module:             \prim_secded_inv_64_57_enc
Used module:         \tlul_cmd_intg_chk
Used module:             \tlul_data_integ_dec
Used module:                 \prim_secded_inv_39_32_dec
Used module:             \prim_secded_inv_64_57_dec
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.4.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.4.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart_tx.
<suppressed ~12 debug messages>
Optimizing module uart_rx.
<suppressed ~13 debug messages>
Optimizing module prim_secded_inv_39_32_enc.
Optimizing module tlul_data_integ_enc.
Optimizing module prim_secded_inv_64_57_enc.
Optimizing module tlul_rsp_intg_gen.
Optimizing module tlul_err.
<suppressed ~1 debug messages>
Optimizing module prim_secded_inv_39_32_dec.
Optimizing module tlul_data_integ_dec.
Optimizing module prim_secded_inv_64_57_dec.
Optimizing module tlul_cmd_intg_chk.
<suppressed ~1 debug messages>
Optimizing module tlul_adapter_reg(RegAw=6).
<suppressed ~12 debug messages>
Optimizing module prim_subreg_ext(DW=32'b0110).
Optimizing module prim_subreg_ext(DW=32'b010000).
Optimizing module prim_subreg_ext(DW=32'b01000).
Optimizing module prim_subreg_ext(DW=32'b01).
Optimizing module prim_subreg(DW=8,SwAccess=SwAccessWO_prim_subreg_pkg,RESVAL=8'b0).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=3,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=3'b0).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=24,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=24'b0).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=2,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=2'b0).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=16,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=16'b0).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=1,SwAccess=SwAccessWO_prim_subreg_pkg,RESVAL=1'b0).
<suppressed ~2 debug messages>
Optimizing module prim_subreg(DW=1,SwAccess=SwAccessW1C_prim_subreg_pkg,RESVAL=1'b0).
<suppressed ~2 debug messages>
Optimizing module prim_subreg(DW=1,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0).
<suppressed ~2 debug messages>
Optimizing module uart_reg_top.
<suppressed ~2 debug messages>
Optimizing module prim_intr_hw.
<suppressed ~1 debug messages>
Optimizing module prim_fifo_sync(Width=32'b01000,Pass=1'b0,Depth=32'b0100000).
<suppressed ~3 debug messages>
Optimizing module uart_core.
<suppressed ~22 debug messages>
Optimizing module prim_generic_flop(ResetValue=1'b1).
<suppressed ~1 debug messages>
Optimizing module prim_generic_flop_2sync(Width=1,ResetValue=1'b1).
Optimizing module prim_generic_flop(ResetValue=1'b0).
<suppressed ~1 debug messages>
Optimizing module prim_generic_flop_2sync(Width=1,ResetValue=1'b0).
Optimizing module prim_generic_buf.
Optimizing module prim_flop_2sync(Width=1,ResetValue=1'b1).
Optimizing module prim_flop_2sync(Width=1,ResetValue=1'b0).
Optimizing module prim_diff_decode(AsyncOn=1'b1).
<suppressed ~5 debug messages>
Optimizing module prim_buf.
Optimizing module prim_alert_sender.
<suppressed ~7 debug messages>
Optimizing module uart.

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).
Deleting now unused module uart_tx.
Deleting now unused module uart_rx.
Deleting now unused module prim_secded_inv_39_32_enc.
Deleting now unused module tlul_data_integ_enc.
Deleting now unused module prim_secded_inv_64_57_enc.
Deleting now unused module tlul_rsp_intg_gen.
Deleting now unused module tlul_err.
Deleting now unused module prim_secded_inv_39_32_dec.
Deleting now unused module tlul_data_integ_dec.
Deleting now unused module prim_secded_inv_64_57_dec.
Deleting now unused module tlul_cmd_intg_chk.
Deleting now unused module tlul_adapter_reg(RegAw=6).
Deleting now unused module prim_subreg_ext(DW=32'b0110).
Deleting now unused module prim_subreg_ext(DW=32'b010000).
Deleting now unused module prim_subreg_ext(DW=32'b01000).
Deleting now unused module prim_subreg_ext(DW=32'b01).
Deleting now unused module prim_subreg(DW=8,SwAccess=SwAccessWO_prim_subreg_pkg,RESVAL=8'b0).
Deleting now unused module prim_subreg(DW=3,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=3'b0).
Deleting now unused module prim_subreg(DW=24,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=24'b0).
Deleting now unused module prim_subreg(DW=2,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=2'b0).
Deleting now unused module prim_subreg(DW=16,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=16'b0).
Deleting now unused module prim_subreg(DW=1,SwAccess=SwAccessWO_prim_subreg_pkg,RESVAL=1'b0).
Deleting now unused module prim_subreg(DW=1,SwAccess=SwAccessW1C_prim_subreg_pkg,RESVAL=1'b0).
Deleting now unused module prim_subreg(DW=1,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0).
Deleting now unused module uart_reg_top.
Deleting now unused module prim_intr_hw.
Deleting now unused module prim_fifo_sync(Width=32'b01000,Pass=1'b0,Depth=32'b0100000).
Deleting now unused module uart_core.
Deleting now unused module prim_generic_flop(ResetValue=1'b1).
Deleting now unused module prim_generic_flop_2sync(Width=1,ResetValue=1'b1).
Deleting now unused module prim_generic_flop(ResetValue=1'b0).
Deleting now unused module prim_generic_flop_2sync(Width=1,ResetValue=1'b0).
Deleting now unused module prim_generic_buf.
Deleting now unused module prim_flop_2sync(Width=1,ResetValue=1'b1).
Deleting now unused module prim_flop_2sync(Width=1,ResetValue=1'b0).
Deleting now unused module prim_diff_decode(AsyncOn=1'b1).
Deleting now unused module prim_buf.
Deleting now unused module prim_alert_sender.
<suppressed ~92 debug messages>

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.
<suppressed ~17 debug messages>

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..
Removed 228 unused cells and 3416 unused wires.
<suppressed ~978 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module uart...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.
<suppressed ~33 debug messages>

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
<suppressed ~21 debug messages>
Removed a total of 7 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $flatten\uart_core.$verific$i54$uart_core.sv:121$988: \uart_core.break_st_q -> 1'1
      Replacing known input bits on port A of cell $flatten\uart_core.$verific$i52$uart_core.sv:117$987: \uart_core.break_st_q -> 1'0
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~71 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart.
    New ctrl vector for $pmux cell $flatten\u_reg.$verific$select_279$uart_reg_top.sv:1584$2939: { \u_reg.addr_hit [0] $flatten\u_reg.$verific$n1158$1516 $flatten\u_reg.$verific$n1167$1525 $flatten\u_reg.$verific$n1170$1528 $flatten\u_reg.$verific$n1173$1531 $flatten\u_reg.$verific$n1179$1537 $flatten\u_reg.$verific$n1182$1540 $flatten\u_reg.$verific$n1185$1543 $flatten\u_reg.$verific$n1188$1546 $flatten\u_reg.$verific$n1191$1549 $flatten\u_reg.$verific$n1193$1551 }
  Optimizing cells in module \uart.
Performed a total of 1 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $flatten\uart_core.\uart_tx.$verific$tx_q_reg$uart_tx.sv:54$4384 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.\uart_tx.$verific$tick_baud_q_reg$uart_tx.sv:42$4376 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.\uart_tx.$verific$sreg_q_reg$uart_tx.sv:54$4383 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.\uart_tx.$verific$bit_cnt_q_reg$uart_tx.sv:54$4382 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.\uart_tx.$verific$baud_div_q_reg$uart_tx.sv:42$4375 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.\uart_rx.$verific$tick_baud_q_reg$uart_rx.sv:50$4267 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.\uart_rx.$verific$sreg_q_reg$uart_rx.sv:50$4264 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.\uart_rx.$verific$rx_valid_q_reg$uart_rx.sv:94$4308 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.\uart_rx.$verific$idle_q_reg$uart_rx.sv:50$4268 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.\uart_rx.$verific$bit_cnt_q_reg$uart_rx.sv:50$4265 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.\uart_rx.$verific$baud_div_q_reg$uart_rx.sv:50$4266 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.\u_uart_txfifo.$verific$gen_normal_fifo.fifo_wptr_reg$prim_fifo_sync.sv:89$1360 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.\u_uart_txfifo.$verific$gen_normal_fifo.fifo_rptr_reg$prim_fifo_sync.sv:103$1367 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.\u_uart_rxfifo.$verific$gen_normal_fifo.fifo_wptr_reg$prim_fifo_sync.sv:89$1360 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.\u_uart_rxfifo.$verific$gen_normal_fifo.fifo_rptr_reg$prim_fifo_sync.sv:103$1367 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.\sync_rx.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$829 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.\sync_rx.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$829 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.\intr_hw_tx_watermark.$verific$intr_o_reg[0]$prim_intr_hw.sv:46$1400 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.\intr_hw_tx_empty.$verific$intr_o_reg[0]$prim_intr_hw.sv:46$1400 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.\intr_hw_rx_watermark.$verific$intr_o_reg[0]$prim_intr_hw.sv:46$1400 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.\intr_hw_rx_timeout.$verific$intr_o_reg[0]$prim_intr_hw.sv:46$1400 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.\intr_hw_rx_parity_err.$verific$intr_o_reg[0]$prim_intr_hw.sv:46$1400 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.\intr_hw_rx_overflow.$verific$intr_o_reg[0]$prim_intr_hw.sv:46$1400 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.\intr_hw_rx_frame_err.$verific$intr_o_reg[0]$prim_intr_hw.sv:46$1400 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.\intr_hw_rx_break_err.$verific$intr_o_reg[0]$prim_intr_hw.sv:46$1400 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.$verific$tx_watermark_prev_q_reg$uart_core.sv:329$1170 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.$verific$tx_uart_idle_q_reg$uart_core.sv:329$1172 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.$verific$tx_out_q_reg$uart_core.sv:212$1074 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.$verific$rx_watermark_prev_q_reg$uart_core.sv:329$1171 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.$verific$rx_val_q_reg$uart_core.sv:290$1150 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.$verific$rx_timeout_count_q_reg$uart_core.sv:378$1206 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.$verific$rx_sync_q2_reg$uart_core.sv:241$1082 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.$verific$rx_sync_q1_reg$uart_core.sv:241$1081 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.$verific$rx_fifo_depth_prev_q_reg$uart_core.sv:378$1207 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.$verific$nco_sum_q_reg$uart_core.sv:161$1015 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$ping_set_q_reg$prim_alert_sender.sv:235$696 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$state_q_reg$prim_alert_sender.sv:235$692 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.$verific$break_st_q_reg$uart_core.sv:128$990 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.$verific$allzero_cnt_q_reg$uart_core.sv:97$975 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_wdata.$verific$qe_reg$prim_subreg.sv:67$3089 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_wdata.$verific$q_reg$prim_subreg.sv:72$3093 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3055 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_timeout_ctrl_en.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.$verific$gen_async.state_q_reg$prim_diff_decode.sv:172$782 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.$verific$gen_async.diff_pq_reg$prim_diff_decode.sv:172$783 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.$verific$gen_async.diff_nq_reg$prim_diff_decode.sv:172$784 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$rspop_reg$tlul_adapter_reg.sv:86$3197 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$reqsz_reg$tlul_adapter_reg.sv:86$3196 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$reqid_reg$tlul_adapter_reg.sv:86$3195 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$rdata_reg$tlul_adapter_reg.sv:96$3206 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$outstanding_reg$tlul_adapter_reg.sv:73$3185 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$error_reg$tlul_adapter_reg.sv:96$3207 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_ovrd_txval.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_ovrd_txen.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_intr_state_tx_watermark.$verific$q_reg[0]$prim_subreg.sv:72$2981 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_intr_state_tx_empty.$verific$q_reg[0]$prim_subreg.sv:72$2981 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_intr_state_rx_watermark.$verific$q_reg[0]$prim_subreg.sv:72$2981 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_intr_state_rx_timeout.$verific$q_reg[0]$prim_subreg.sv:72$2981 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_intr_state_rx_parity_err.$verific$q_reg[0]$prim_subreg.sv:72$2981 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_intr_state_rx_overflow.$verific$q_reg[0]$prim_subreg.sv:72$2981 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_intr_state_rx_frame_err.$verific$q_reg[0]$prim_subreg.sv:72$2981 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_intr_state_rx_break_err.$verific$q_reg[0]$prim_subreg.sv:72$2981 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_intr_enable_tx_watermark.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_intr_enable_tx_empty.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_intr_enable_rx_watermark.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_intr_enable_rx_timeout.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_intr_enable_rx_parity_err.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_intr_enable_rx_overflow.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_intr_enable_rx_frame_err.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_intr_enable_rx_break_err.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_fifo_ctrl_txrst.$verific$q_reg[0]$prim_subreg.sv:72$2998 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$alert_set_q_reg$prim_alert_sender.sv:235$695 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_fifo_ctrl_txilvl.$verific$q_reg$prim_subreg.sv:72$3036 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$alert_nq_reg$prim_alert_sender.sv:235$694 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_fifo_ctrl_rxrst.$verific$qe_reg$prim_subreg.sv:67$2995 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_fifo_ctrl_rxrst.$verific$q_reg[0]$prim_subreg.sv:72$2998 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_fifo_ctrl_rxilvl.$verific$q_reg$prim_subreg.sv:72$3074 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$alert_pq_reg$prim_alert_sender.sv:235$693 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_ctrl_tx.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_ctrl_slpbk.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_ctrl_rxblvl.$verific$q_reg$prim_subreg.sv:72$3036 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_ctrl_rx.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_ctrl_parity_odd.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_ctrl_parity_en.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_ctrl_nf.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_ctrl_nco.$verific$q_reg$prim_subreg.sv:72$3017 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_ctrl_llpbk.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.$verific$intg_err_q_reg$uart_reg_top.sv:61$1684 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.\gen_async.i_sync_p.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$812 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.\gen_async.i_sync_p.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$812 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.\gen_async.i_sync_n.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$829 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.\gen_async.i_sync_n.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$829 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.$verific$gen_async.state_q_reg$prim_diff_decode.sv:172$782 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.$verific$gen_async.diff_pq_reg$prim_diff_decode.sv:172$783 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.$verific$gen_async.diff_nq_reg$prim_diff_decode.sv:172$784 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.\gen_async.i_sync_p.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$812 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.\gen_async.i_sync_p.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$812 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.\gen_async.i_sync_n.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$829 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.\gen_async.i_sync_n.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$829 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.$verific$level_q_reg$prim_diff_decode.sv:172$785 ($aldff) from module uart.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..
Removed 6 unused cells and 43 unused wires.
<suppressed ~10 debug messages>

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~71 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).
Handling D = Q on $flatten\u_reg.\u_wdata.$verific$q_reg$prim_subreg.sv:72$3093 ($adff) from module uart (removing D path).
Handling D = Q on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3055 ($adff) from module uart (removing D path).
Handling D = Q on $flatten\u_reg.\u_timeout_ctrl_en.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($adff) from module uart (removing D path).
Handling D = Q on $flatten\u_reg.\u_ovrd_txval.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($adff) from module uart (removing D path).
Handling D = Q on $flatten\u_reg.\u_ovrd_txen.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($adff) from module uart (removing D path).
Handling D = Q on $flatten\u_reg.\u_intr_enable_tx_watermark.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($adff) from module uart (removing D path).
Handling D = Q on $flatten\u_reg.\u_intr_enable_tx_empty.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($adff) from module uart (removing D path).
Handling D = Q on $flatten\u_reg.\u_intr_enable_rx_watermark.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($adff) from module uart (removing D path).
Handling D = Q on $flatten\u_reg.\u_intr_enable_rx_timeout.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($adff) from module uart (removing D path).
Handling D = Q on $flatten\u_reg.\u_intr_enable_rx_parity_err.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($adff) from module uart (removing D path).
Handling D = Q on $flatten\u_reg.\u_intr_enable_rx_overflow.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($adff) from module uart (removing D path).
Handling D = Q on $flatten\u_reg.\u_intr_enable_rx_frame_err.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($adff) from module uart (removing D path).
Handling D = Q on $flatten\u_reg.\u_intr_enable_rx_break_err.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($adff) from module uart (removing D path).
Handling D = Q on $flatten\u_reg.\u_fifo_ctrl_txrst.$verific$q_reg[0]$prim_subreg.sv:72$2998 ($adff) from module uart (removing D path).
Handling D = Q on $flatten\u_reg.\u_fifo_ctrl_txilvl.$verific$q_reg$prim_subreg.sv:72$3036 ($adff) from module uart (removing D path).
Handling D = Q on $flatten\u_reg.\u_fifo_ctrl_rxrst.$verific$q_reg[0]$prim_subreg.sv:72$2998 ($adff) from module uart (removing D path).
Handling D = Q on $flatten\u_reg.\u_fifo_ctrl_rxilvl.$verific$q_reg$prim_subreg.sv:72$3074 ($adff) from module uart (removing D path).
Handling D = Q on $flatten\u_reg.\u_ctrl_tx.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($adff) from module uart (removing D path).
Handling D = Q on $flatten\u_reg.\u_ctrl_slpbk.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($adff) from module uart (removing D path).
Handling D = Q on $flatten\u_reg.\u_ctrl_rxblvl.$verific$q_reg$prim_subreg.sv:72$3036 ($adff) from module uart (removing D path).
Handling D = Q on $flatten\u_reg.\u_ctrl_rx.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($adff) from module uart (removing D path).
Handling D = Q on $flatten\u_reg.\u_ctrl_parity_odd.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($adff) from module uart (removing D path).
Handling D = Q on $flatten\u_reg.\u_ctrl_parity_en.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($adff) from module uart (removing D path).
Handling D = Q on $flatten\u_reg.\u_ctrl_nf.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($adff) from module uart (removing D path).
Handling D = Q on $flatten\u_reg.\u_ctrl_nco.$verific$q_reg$prim_subreg.sv:72$3017 ($adff) from module uart (removing D path).
Handling D = Q on $flatten\u_reg.\u_ctrl_llpbk.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($adff) from module uart (removing D path).
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_ctrl_llpbk.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($dlatch) from module uart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_ctrl_nco.$verific$q_reg$prim_subreg.sv:72$3017 ($dlatch) from module uart.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_ctrl_nco.$verific$q_reg$prim_subreg.sv:72$3017 ($dlatch) from module uart.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_ctrl_nco.$verific$q_reg$prim_subreg.sv:72$3017 ($dlatch) from module uart.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_ctrl_nco.$verific$q_reg$prim_subreg.sv:72$3017 ($dlatch) from module uart.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_ctrl_nco.$verific$q_reg$prim_subreg.sv:72$3017 ($dlatch) from module uart.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_ctrl_nco.$verific$q_reg$prim_subreg.sv:72$3017 ($dlatch) from module uart.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_ctrl_nco.$verific$q_reg$prim_subreg.sv:72$3017 ($dlatch) from module uart.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_ctrl_nco.$verific$q_reg$prim_subreg.sv:72$3017 ($dlatch) from module uart.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_ctrl_nco.$verific$q_reg$prim_subreg.sv:72$3017 ($dlatch) from module uart.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_ctrl_nco.$verific$q_reg$prim_subreg.sv:72$3017 ($dlatch) from module uart.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_ctrl_nco.$verific$q_reg$prim_subreg.sv:72$3017 ($dlatch) from module uart.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_ctrl_nco.$verific$q_reg$prim_subreg.sv:72$3017 ($dlatch) from module uart.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_ctrl_nco.$verific$q_reg$prim_subreg.sv:72$3017 ($dlatch) from module uart.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_ctrl_nco.$verific$q_reg$prim_subreg.sv:72$3017 ($dlatch) from module uart.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_ctrl_nco.$verific$q_reg$prim_subreg.sv:72$3017 ($dlatch) from module uart.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_ctrl_nco.$verific$q_reg$prim_subreg.sv:72$3017 ($dlatch) from module uart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_ctrl_nf.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($dlatch) from module uart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_ctrl_parity_en.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($dlatch) from module uart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_ctrl_parity_odd.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($dlatch) from module uart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_ctrl_rx.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($dlatch) from module uart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_ctrl_rxblvl.$verific$q_reg$prim_subreg.sv:72$3036 ($dlatch) from module uart.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_ctrl_rxblvl.$verific$q_reg$prim_subreg.sv:72$3036 ($dlatch) from module uart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_ctrl_slpbk.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($dlatch) from module uart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_ctrl_tx.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($dlatch) from module uart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_fifo_ctrl_rxilvl.$verific$q_reg$prim_subreg.sv:72$3074 ($dlatch) from module uart.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_fifo_ctrl_rxilvl.$verific$q_reg$prim_subreg.sv:72$3074 ($dlatch) from module uart.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_fifo_ctrl_rxilvl.$verific$q_reg$prim_subreg.sv:72$3074 ($dlatch) from module uart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_fifo_ctrl_rxrst.$verific$q_reg[0]$prim_subreg.sv:72$2998 ($dlatch) from module uart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_fifo_ctrl_txilvl.$verific$q_reg$prim_subreg.sv:72$3036 ($dlatch) from module uart.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_fifo_ctrl_txilvl.$verific$q_reg$prim_subreg.sv:72$3036 ($dlatch) from module uart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_fifo_ctrl_txrst.$verific$q_reg[0]$prim_subreg.sv:72$2998 ($dlatch) from module uart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_intr_enable_rx_break_err.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($dlatch) from module uart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_intr_enable_rx_frame_err.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($dlatch) from module uart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_intr_enable_rx_overflow.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($dlatch) from module uart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_intr_enable_rx_parity_err.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($dlatch) from module uart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_intr_enable_rx_timeout.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($dlatch) from module uart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_intr_enable_rx_watermark.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($dlatch) from module uart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_intr_enable_tx_empty.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($dlatch) from module uart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_intr_enable_tx_watermark.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($dlatch) from module uart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_ovrd_txen.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($dlatch) from module uart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_ovrd_txval.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($dlatch) from module uart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_timeout_ctrl_en.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($dlatch) from module uart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3055 ($dlatch) from module uart.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3055 ($dlatch) from module uart.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3055 ($dlatch) from module uart.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3055 ($dlatch) from module uart.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3055 ($dlatch) from module uart.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3055 ($dlatch) from module uart.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3055 ($dlatch) from module uart.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3055 ($dlatch) from module uart.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3055 ($dlatch) from module uart.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3055 ($dlatch) from module uart.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3055 ($dlatch) from module uart.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3055 ($dlatch) from module uart.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3055 ($dlatch) from module uart.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3055 ($dlatch) from module uart.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3055 ($dlatch) from module uart.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3055 ($dlatch) from module uart.
Setting constant 0-bit at position 16 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3055 ($dlatch) from module uart.
Setting constant 0-bit at position 17 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3055 ($dlatch) from module uart.
Setting constant 0-bit at position 18 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3055 ($dlatch) from module uart.
Setting constant 0-bit at position 19 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3055 ($dlatch) from module uart.
Setting constant 0-bit at position 20 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3055 ($dlatch) from module uart.
Setting constant 0-bit at position 21 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3055 ($dlatch) from module uart.
Setting constant 0-bit at position 22 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3055 ($dlatch) from module uart.
Setting constant 0-bit at position 23 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3055 ($dlatch) from module uart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_wdata.$verific$q_reg$prim_subreg.sv:72$3093 ($dlatch) from module uart.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_wdata.$verific$q_reg$prim_subreg.sv:72$3093 ($dlatch) from module uart.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_wdata.$verific$q_reg$prim_subreg.sv:72$3093 ($dlatch) from module uart.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_wdata.$verific$q_reg$prim_subreg.sv:72$3093 ($dlatch) from module uart.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_wdata.$verific$q_reg$prim_subreg.sv:72$3093 ($dlatch) from module uart.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_wdata.$verific$q_reg$prim_subreg.sv:72$3093 ($dlatch) from module uart.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_wdata.$verific$q_reg$prim_subreg.sv:72$3093 ($dlatch) from module uart.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_wdata.$verific$q_reg$prim_subreg.sv:72$3093 ($dlatch) from module uart.

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.
<suppressed ~55 debug messages>

3.11.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $flatten\uart_core.$verific$mux_185$uart_core.sv:367$1193.
    dead port 2/2 on $mux $flatten\uart_core.$verific$mux_185$uart_core.sv:367$1193.
    dead port 1/2 on $mux $flatten\uart_core.$verific$mux_186$uart_core.sv:367$1194.
    dead port 2/2 on $mux $flatten\uart_core.$verific$mux_186$uart_core.sv:367$1194.
    dead port 1/2 on $mux $flatten\uart_core.$verific$mux_187$uart_core.sv:367$1195.
    dead port 2/2 on $mux $flatten\uart_core.$verific$mux_187$uart_core.sv:367$1195.
    dead port 1/2 on $mux $flatten\uart_core.\u_uart_txfifo.$verific$mux_47$prim_fifo_sync.sv:102$1364.
    dead port 2/2 on $mux $flatten\uart_core.\u_uart_txfifo.$verific$mux_47$prim_fifo_sync.sv:102$1364.
    dead port 1/2 on $mux $flatten\uart_core.\uart_rx.$verific$i32$uart_rx.sv:68$4277.
    dead port 2/2 on $mux $flatten\uart_core.\uart_rx.$verific$i32$uart_rx.sv:68$4277.
    dead port 1/2 on $mux $flatten\uart_core.\uart_rx.$verific$i47$uart_rx.sv:87$4290.
    dead port 2/2 on $mux $flatten\uart_core.\uart_rx.$verific$i47$uart_rx.sv:87$4290.
    dead port 1/2 on $mux $flatten\uart_core.\uart_rx.$verific$i50$uart_rx.sv:88$4293.
    dead port 2/2 on $mux $flatten\uart_core.\uart_rx.$verific$i50$uart_rx.sv:88$4293.
    dead port 1/2 on $mux $flatten\uart_core.\uart_rx.$verific$i54$uart_rx.sv:88$4297.
    dead port 2/2 on $mux $flatten\uart_core.\uart_rx.$verific$i54$uart_rx.sv:88$4297.
    dead port 1/2 on $mux $flatten\uart_core.\uart_rx.$verific$i57$uart_rx.sv:88$4300.
    dead port 2/2 on $mux $flatten\uart_core.\uart_rx.$verific$i57$uart_rx.sv:88$4300.
    dead port 1/2 on $mux $flatten\uart_core.\uart_rx.$verific$mux_30$uart_rx.sv:68$4276.
    dead port 2/2 on $mux $flatten\uart_core.\uart_rx.$verific$mux_30$uart_rx.sv:68$4276.
    dead port 1/2 on $mux $flatten\uart_core.\uart_rx.$verific$mux_47$uart_rx.sv:87$4291.
    dead port 2/2 on $mux $flatten\uart_core.\uart_rx.$verific$mux_47$uart_rx.sv:87$4291.
    dead port 1/2 on $mux $flatten\uart_core.\uart_rx.$verific$mux_48$uart_rx.sv:87$4292.
    dead port 2/2 on $mux $flatten\uart_core.\uart_rx.$verific$mux_48$uart_rx.sv:87$4292.
    dead port 1/2 on $mux $flatten\uart_core.\uart_rx.$verific$mux_50$uart_rx.sv:88$4294.
    dead port 2/2 on $mux $flatten\uart_core.\uart_rx.$verific$mux_50$uart_rx.sv:88$4294.
    dead port 1/2 on $mux $flatten\uart_core.\uart_rx.$verific$mux_51$uart_rx.sv:88$4295.
    dead port 2/2 on $mux $flatten\uart_core.\uart_rx.$verific$mux_51$uart_rx.sv:88$4295.
    dead port 1/2 on $mux $flatten\uart_core.\uart_rx.$verific$mux_52$uart_rx.sv:88$4296.
    dead port 2/2 on $mux $flatten\uart_core.\uart_rx.$verific$mux_52$uart_rx.sv:88$4296.
    dead port 1/2 on $mux $flatten\uart_core.\uart_rx.$verific$mux_54$uart_rx.sv:88$4298.
    dead port 2/2 on $mux $flatten\uart_core.\uart_rx.$verific$mux_54$uart_rx.sv:88$4298.
    dead port 1/2 on $mux $flatten\uart_core.\uart_rx.$verific$mux_55$uart_rx.sv:88$4299.
    dead port 2/2 on $mux $flatten\uart_core.\uart_rx.$verific$mux_55$uart_rx.sv:88$4299.
    dead port 1/2 on $mux $flatten\uart_core.\uart_tx.$verific$i61$uart_tx.sv:73$4396.
    dead port 2/2 on $mux $flatten\uart_core.\uart_tx.$verific$i61$uart_tx.sv:73$4396.
    dead port 1/2 on $mux $flatten\uart_core.\uart_tx.$verific$mux_59$uart_tx.sv:73$4395.
    dead port 2/2 on $mux $flatten\uart_core.\uart_tx.$verific$mux_59$uart_tx.sv:73$4395.
    dead port 1/2 on $mux $flatten\uart_core.\uart_tx.$verific$mux_61$uart_tx.sv:73$4397.
    dead port 2/2 on $mux $flatten\uart_core.\uart_tx.$verific$mux_61$uart_tx.sv:73$4397.
Removed 40 multiplexer ports.
<suppressed ~54 debug messages>

yosys> opt_reduce

3.11.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart.
    New ctrl vector for $pmux cell $flatten\u_reg.$verific$select_279$uart_reg_top.sv:1584$2939: { \u_reg.addr_hit [0] $flatten\u_reg.$verific$n1170$1528 $flatten\u_reg.$verific$n1173$1531 $flatten\u_reg.$verific$n1182$1540 $flatten\u_reg.$verific$n1188$1546 $flatten\u_reg.$verific$n1193$1551 }
  Optimizing cells in module \uart.
Performed a total of 4 changes.

yosys> opt_merge

3.11.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
<suppressed ~42 debug messages>
Removed a total of 14 cells.

yosys> opt_dff -nodffe -nosdff

3.11.20. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $flatten\uart_core.$verific$rx_timeout_count_q_reg$uart_core.sv:378$1206 ($adff) from module uart.
Setting constant 0-bit at position 1 on $flatten\uart_core.$verific$rx_timeout_count_q_reg$uart_core.sv:378$1206 ($adff) from module uart.
Setting constant 0-bit at position 2 on $flatten\uart_core.$verific$rx_timeout_count_q_reg$uart_core.sv:378$1206 ($adff) from module uart.
Setting constant 0-bit at position 3 on $flatten\uart_core.$verific$rx_timeout_count_q_reg$uart_core.sv:378$1206 ($adff) from module uart.
Setting constant 0-bit at position 4 on $flatten\uart_core.$verific$rx_timeout_count_q_reg$uart_core.sv:378$1206 ($adff) from module uart.
Setting constant 0-bit at position 5 on $flatten\uart_core.$verific$rx_timeout_count_q_reg$uart_core.sv:378$1206 ($adff) from module uart.
Setting constant 0-bit at position 6 on $flatten\uart_core.$verific$rx_timeout_count_q_reg$uart_core.sv:378$1206 ($adff) from module uart.
Setting constant 0-bit at position 7 on $flatten\uart_core.$verific$rx_timeout_count_q_reg$uart_core.sv:378$1206 ($adff) from module uart.
Setting constant 0-bit at position 8 on $flatten\uart_core.$verific$rx_timeout_count_q_reg$uart_core.sv:378$1206 ($adff) from module uart.
Setting constant 0-bit at position 9 on $flatten\uart_core.$verific$rx_timeout_count_q_reg$uart_core.sv:378$1206 ($adff) from module uart.
Setting constant 0-bit at position 10 on $flatten\uart_core.$verific$rx_timeout_count_q_reg$uart_core.sv:378$1206 ($adff) from module uart.
Setting constant 0-bit at position 11 on $flatten\uart_core.$verific$rx_timeout_count_q_reg$uart_core.sv:378$1206 ($adff) from module uart.
Setting constant 0-bit at position 12 on $flatten\uart_core.$verific$rx_timeout_count_q_reg$uart_core.sv:378$1206 ($adff) from module uart.
Setting constant 0-bit at position 13 on $flatten\uart_core.$verific$rx_timeout_count_q_reg$uart_core.sv:378$1206 ($adff) from module uart.
Setting constant 0-bit at position 14 on $flatten\uart_core.$verific$rx_timeout_count_q_reg$uart_core.sv:378$1206 ($adff) from module uart.
Setting constant 0-bit at position 15 on $flatten\uart_core.$verific$rx_timeout_count_q_reg$uart_core.sv:378$1206 ($adff) from module uart.
Setting constant 0-bit at position 16 on $flatten\uart_core.$verific$rx_timeout_count_q_reg$uart_core.sv:378$1206 ($adff) from module uart.
Setting constant 0-bit at position 17 on $flatten\uart_core.$verific$rx_timeout_count_q_reg$uart_core.sv:378$1206 ($adff) from module uart.
Setting constant 0-bit at position 18 on $flatten\uart_core.$verific$rx_timeout_count_q_reg$uart_core.sv:378$1206 ($adff) from module uart.
Setting constant 0-bit at position 19 on $flatten\uart_core.$verific$rx_timeout_count_q_reg$uart_core.sv:378$1206 ($adff) from module uart.
Setting constant 0-bit at position 20 on $flatten\uart_core.$verific$rx_timeout_count_q_reg$uart_core.sv:378$1206 ($adff) from module uart.
Setting constant 0-bit at position 21 on $flatten\uart_core.$verific$rx_timeout_count_q_reg$uart_core.sv:378$1206 ($adff) from module uart.
Setting constant 0-bit at position 22 on $flatten\uart_core.$verific$rx_timeout_count_q_reg$uart_core.sv:378$1206 ($adff) from module uart.
Setting constant 0-bit at position 23 on $flatten\uart_core.$verific$rx_timeout_count_q_reg$uart_core.sv:378$1206 ($adff) from module uart.
Setting constant 1-bit at position 0 on $flatten\uart_core.$verific$tx_uart_idle_q_reg$uart_core.sv:329$1172 ($adff) from module uart.
Setting constant 0-bit at position 0 on $flatten\uart_core.\intr_hw_rx_break_err.$verific$intr_o_reg[0]$prim_intr_hw.sv:46$1400 ($adff) from module uart.
Setting constant 0-bit at position 0 on $flatten\uart_core.\uart_rx.$verific$baud_div_q_reg$uart_rx.sv:50$4266 ($adff) from module uart.
Setting constant 0-bit at position 1 on $flatten\uart_core.\uart_rx.$verific$baud_div_q_reg$uart_rx.sv:50$4266 ($adff) from module uart.
Setting constant 0-bit at position 2 on $flatten\uart_core.\uart_rx.$verific$baud_div_q_reg$uart_rx.sv:50$4266 ($adff) from module uart.
Setting constant 0-bit at position 3 on $flatten\uart_core.\uart_rx.$verific$baud_div_q_reg$uart_rx.sv:50$4266 ($adff) from module uart.
Setting constant 0-bit at position 0 on $flatten\uart_core.\uart_rx.$verific$sreg_q_reg$uart_rx.sv:50$4264 ($adff) from module uart.
Setting constant 0-bit at position 1 on $flatten\uart_core.\uart_rx.$verific$sreg_q_reg$uart_rx.sv:50$4264 ($adff) from module uart.
Setting constant 0-bit at position 2 on $flatten\uart_core.\uart_rx.$verific$sreg_q_reg$uart_rx.sv:50$4264 ($adff) from module uart.
Setting constant 0-bit at position 3 on $flatten\uart_core.\uart_rx.$verific$sreg_q_reg$uart_rx.sv:50$4264 ($adff) from module uart.
Setting constant 0-bit at position 4 on $flatten\uart_core.\uart_rx.$verific$sreg_q_reg$uart_rx.sv:50$4264 ($adff) from module uart.
Setting constant 0-bit at position 5 on $flatten\uart_core.\uart_rx.$verific$sreg_q_reg$uart_rx.sv:50$4264 ($adff) from module uart.
Setting constant 0-bit at position 6 on $flatten\uart_core.\uart_rx.$verific$sreg_q_reg$uart_rx.sv:50$4264 ($adff) from module uart.
Setting constant 0-bit at position 7 on $flatten\uart_core.\uart_rx.$verific$sreg_q_reg$uart_rx.sv:50$4264 ($adff) from module uart.
Setting constant 0-bit at position 8 on $flatten\uart_core.\uart_rx.$verific$sreg_q_reg$uart_rx.sv:50$4264 ($adff) from module uart.
Setting constant 0-bit at position 9 on $flatten\uart_core.\uart_rx.$verific$sreg_q_reg$uart_rx.sv:50$4264 ($adff) from module uart.
Setting constant 0-bit at position 10 on $flatten\uart_core.\uart_rx.$verific$sreg_q_reg$uart_rx.sv:50$4264 ($adff) from module uart.
Setting constant 1-bit at position 0 on $flatten\uart_core.\uart_tx.$verific$sreg_q_reg$uart_tx.sv:54$4383 ($adff) from module uart.
Setting constant 1-bit at position 1 on $flatten\uart_core.\uart_tx.$verific$sreg_q_reg$uart_tx.sv:54$4383 ($adff) from module uart.
Setting constant 1-bit at position 2 on $flatten\uart_core.\uart_tx.$verific$sreg_q_reg$uart_tx.sv:54$4383 ($adff) from module uart.
Setting constant 1-bit at position 3 on $flatten\uart_core.\uart_tx.$verific$sreg_q_reg$uart_tx.sv:54$4383 ($adff) from module uart.
Setting constant 1-bit at position 4 on $flatten\uart_core.\uart_tx.$verific$sreg_q_reg$uart_tx.sv:54$4383 ($adff) from module uart.
Setting constant 1-bit at position 5 on $flatten\uart_core.\uart_tx.$verific$sreg_q_reg$uart_tx.sv:54$4383 ($adff) from module uart.
Setting constant 1-bit at position 6 on $flatten\uart_core.\uart_tx.$verific$sreg_q_reg$uart_tx.sv:54$4383 ($adff) from module uart.
Setting constant 1-bit at position 7 on $flatten\uart_core.\uart_tx.$verific$sreg_q_reg$uart_tx.sv:54$4383 ($adff) from module uart.
Setting constant 1-bit at position 8 on $flatten\uart_core.\uart_tx.$verific$sreg_q_reg$uart_tx.sv:54$4383 ($adff) from module uart.
Setting constant 1-bit at position 9 on $flatten\uart_core.\uart_tx.$verific$sreg_q_reg$uart_tx.sv:54$4383 ($adff) from module uart.
Setting constant 1-bit at position 10 on $flatten\uart_core.\uart_tx.$verific$sreg_q_reg$uart_tx.sv:54$4383 ($adff) from module uart.

yosys> opt_clean

3.11.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..
Removed 58 unused cells and 125 unused wires.
<suppressed ~81 debug messages>

yosys> opt_expr

3.11.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.
<suppressed ~18 debug messages>

3.11.23. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $flatten\uart_core.\u_uart_rxfifo.$verific$mux_33$prim_fifo_sync.sv:88$1357.
    dead port 2/2 on $mux $flatten\uart_core.\u_uart_rxfifo.$verific$mux_33$prim_fifo_sync.sv:88$1357.
Removed 2 multiplexer ports.
<suppressed ~50 debug messages>

yosys> opt_reduce

3.11.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart.
Performed a total of 0 changes.

yosys> opt_merge

3.11.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.27. Executing OPT_DFF pass (perform DFF optimizations).
Handling D = Q on $flatten\uart_core.\u_uart_txfifo.$verific$gen_normal_fifo.fifo_rptr_reg$prim_fifo_sync.sv:103$1367 ($adff) from module uart (removing D path).
Handling D = Q on $flatten\uart_core.$verific$nco_sum_q_reg$uart_core.sv:161$1015 ($adff) from module uart (removing D path).
Handling D = Q on $flatten\uart_core.$verific$allzero_cnt_q_reg$uart_core.sv:97$975 ($adff) from module uart (removing D path).
Setting constant 0-bit at position 0 on $flatten\uart_core.$verific$allzero_cnt_q_reg$uart_core.sv:97$975 ($dlatch) from module uart.
Setting constant 0-bit at position 1 on $flatten\uart_core.$verific$allzero_cnt_q_reg$uart_core.sv:97$975 ($dlatch) from module uart.
Setting constant 0-bit at position 2 on $flatten\uart_core.$verific$allzero_cnt_q_reg$uart_core.sv:97$975 ($dlatch) from module uart.
Setting constant 0-bit at position 3 on $flatten\uart_core.$verific$allzero_cnt_q_reg$uart_core.sv:97$975 ($dlatch) from module uart.
Setting constant 0-bit at position 4 on $flatten\uart_core.$verific$allzero_cnt_q_reg$uart_core.sv:97$975 ($dlatch) from module uart.
Setting constant 0-bit at position 0 on $flatten\uart_core.$verific$nco_sum_q_reg$uart_core.sv:161$1015 ($dlatch) from module uart.
Setting constant 0-bit at position 1 on $flatten\uart_core.$verific$nco_sum_q_reg$uart_core.sv:161$1015 ($dlatch) from module uart.
Setting constant 0-bit at position 2 on $flatten\uart_core.$verific$nco_sum_q_reg$uart_core.sv:161$1015 ($dlatch) from module uart.
Setting constant 0-bit at position 3 on $flatten\uart_core.$verific$nco_sum_q_reg$uart_core.sv:161$1015 ($dlatch) from module uart.
Setting constant 0-bit at position 4 on $flatten\uart_core.$verific$nco_sum_q_reg$uart_core.sv:161$1015 ($dlatch) from module uart.
Setting constant 0-bit at position 5 on $flatten\uart_core.$verific$nco_sum_q_reg$uart_core.sv:161$1015 ($dlatch) from module uart.
Setting constant 0-bit at position 6 on $flatten\uart_core.$verific$nco_sum_q_reg$uart_core.sv:161$1015 ($dlatch) from module uart.
Setting constant 0-bit at position 7 on $flatten\uart_core.$verific$nco_sum_q_reg$uart_core.sv:161$1015 ($dlatch) from module uart.
Setting constant 0-bit at position 8 on $flatten\uart_core.$verific$nco_sum_q_reg$uart_core.sv:161$1015 ($dlatch) from module uart.
Setting constant 0-bit at position 9 on $flatten\uart_core.$verific$nco_sum_q_reg$uart_core.sv:161$1015 ($dlatch) from module uart.
Setting constant 0-bit at position 10 on $flatten\uart_core.$verific$nco_sum_q_reg$uart_core.sv:161$1015 ($dlatch) from module uart.
Setting constant 0-bit at position 11 on $flatten\uart_core.$verific$nco_sum_q_reg$uart_core.sv:161$1015 ($dlatch) from module uart.
Setting constant 0-bit at position 12 on $flatten\uart_core.$verific$nco_sum_q_reg$uart_core.sv:161$1015 ($dlatch) from module uart.
Setting constant 0-bit at position 13 on $flatten\uart_core.$verific$nco_sum_q_reg$uart_core.sv:161$1015 ($dlatch) from module uart.
Setting constant 0-bit at position 14 on $flatten\uart_core.$verific$nco_sum_q_reg$uart_core.sv:161$1015 ($dlatch) from module uart.
Setting constant 0-bit at position 15 on $flatten\uart_core.$verific$nco_sum_q_reg$uart_core.sv:161$1015 ($dlatch) from module uart.
Setting constant 0-bit at position 16 on $flatten\uart_core.$verific$nco_sum_q_reg$uart_core.sv:161$1015 ($dlatch) from module uart.
Setting constant 0-bit at position 0 on $flatten\uart_core.\u_uart_txfifo.$verific$gen_normal_fifo.fifo_rptr_reg$prim_fifo_sync.sv:103$1367 ($dlatch) from module uart.
Setting constant 0-bit at position 1 on $flatten\uart_core.\u_uart_txfifo.$verific$gen_normal_fifo.fifo_rptr_reg$prim_fifo_sync.sv:103$1367 ($dlatch) from module uart.
Setting constant 0-bit at position 2 on $flatten\uart_core.\u_uart_txfifo.$verific$gen_normal_fifo.fifo_rptr_reg$prim_fifo_sync.sv:103$1367 ($dlatch) from module uart.
Setting constant 0-bit at position 3 on $flatten\uart_core.\u_uart_txfifo.$verific$gen_normal_fifo.fifo_rptr_reg$prim_fifo_sync.sv:103$1367 ($dlatch) from module uart.
Setting constant 0-bit at position 4 on $flatten\uart_core.\u_uart_txfifo.$verific$gen_normal_fifo.fifo_rptr_reg$prim_fifo_sync.sv:103$1367 ($dlatch) from module uart.
Setting constant 0-bit at position 5 on $flatten\uart_core.\u_uart_txfifo.$verific$gen_normal_fifo.fifo_rptr_reg$prim_fifo_sync.sv:103$1367 ($dlatch) from module uart.
Setting constant 1-bit at position 0 on $flatten\uart_core.$verific$tx_out_q_reg$uart_core.sv:212$1074 ($adff) from module uart.
Setting constant 0-bit at position 0 on $flatten\uart_core.\uart_rx.$verific$rx_valid_q_reg$uart_rx.sv:94$4308 ($adff) from module uart.

yosys> opt_clean

3.11.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..
Removed 5 unused cells and 18 unused wires.
<suppressed ~8 debug messages>

yosys> opt_expr

3.11.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.
<suppressed ~14 debug messages>

3.11.30. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.31. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~48 debug messages>

yosys> opt_reduce

3.11.32. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart.
Performed a total of 0 changes.

yosys> opt_merge

3.11.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.34. Executing OPT_DFF pass (perform DFF optimizations).
Handling D = Q on $flatten\uart_core.\u_uart_rxfifo.$verific$gen_normal_fifo.fifo_wptr_reg$prim_fifo_sync.sv:89$1360 ($adff) from module uart (removing D path).
Setting constant 0-bit at position 0 on $flatten\uart_core.\u_uart_rxfifo.$verific$gen_normal_fifo.fifo_wptr_reg$prim_fifo_sync.sv:89$1360 ($dlatch) from module uart.
Setting constant 0-bit at position 1 on $flatten\uart_core.\u_uart_rxfifo.$verific$gen_normal_fifo.fifo_wptr_reg$prim_fifo_sync.sv:89$1360 ($dlatch) from module uart.
Setting constant 0-bit at position 2 on $flatten\uart_core.\u_uart_rxfifo.$verific$gen_normal_fifo.fifo_wptr_reg$prim_fifo_sync.sv:89$1360 ($dlatch) from module uart.
Setting constant 0-bit at position 3 on $flatten\uart_core.\u_uart_rxfifo.$verific$gen_normal_fifo.fifo_wptr_reg$prim_fifo_sync.sv:89$1360 ($dlatch) from module uart.
Setting constant 0-bit at position 4 on $flatten\uart_core.\u_uart_rxfifo.$verific$gen_normal_fifo.fifo_wptr_reg$prim_fifo_sync.sv:89$1360 ($dlatch) from module uart.
Setting constant 0-bit at position 5 on $flatten\uart_core.\u_uart_rxfifo.$verific$gen_normal_fifo.fifo_wptr_reg$prim_fifo_sync.sv:89$1360 ($dlatch) from module uart.

yosys> opt_clean

3.11.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..
Removed 6 unused cells and 24 unused wires.
<suppressed ~19 debug messages>

yosys> opt_expr

3.11.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.
<suppressed ~4 debug messages>

3.11.37. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.38. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~47 debug messages>

yosys> opt_reduce

3.11.39. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart.
Performed a total of 0 changes.

yosys> opt_merge

3.11.40. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.41. Executing OPT_DFF pass (perform DFF optimizations).
Handling D = Q on $flatten\uart_core.$verific$rx_val_q_reg$uart_core.sv:290$1150 ($adff) from module uart (removing D path).
Setting constant 0-bit at position 0 on $flatten\uart_core.$verific$rx_val_q_reg$uart_core.sv:290$1150 ($dlatch) from module uart.
Setting constant 0-bit at position 1 on $flatten\uart_core.$verific$rx_val_q_reg$uart_core.sv:290$1150 ($dlatch) from module uart.
Setting constant 0-bit at position 2 on $flatten\uart_core.$verific$rx_val_q_reg$uart_core.sv:290$1150 ($dlatch) from module uart.
Setting constant 0-bit at position 3 on $flatten\uart_core.$verific$rx_val_q_reg$uart_core.sv:290$1150 ($dlatch) from module uart.
Setting constant 0-bit at position 4 on $flatten\uart_core.$verific$rx_val_q_reg$uart_core.sv:290$1150 ($dlatch) from module uart.
Setting constant 0-bit at position 5 on $flatten\uart_core.$verific$rx_val_q_reg$uart_core.sv:290$1150 ($dlatch) from module uart.
Setting constant 0-bit at position 6 on $flatten\uart_core.$verific$rx_val_q_reg$uart_core.sv:290$1150 ($dlatch) from module uart.
Setting constant 0-bit at position 7 on $flatten\uart_core.$verific$rx_val_q_reg$uart_core.sv:290$1150 ($dlatch) from module uart.
Setting constant 0-bit at position 8 on $flatten\uart_core.$verific$rx_val_q_reg$uart_core.sv:290$1150 ($dlatch) from module uart.
Setting constant 0-bit at position 9 on $flatten\uart_core.$verific$rx_val_q_reg$uart_core.sv:290$1150 ($dlatch) from module uart.
Setting constant 0-bit at position 10 on $flatten\uart_core.$verific$rx_val_q_reg$uart_core.sv:290$1150 ($dlatch) from module uart.
Setting constant 0-bit at position 11 on $flatten\uart_core.$verific$rx_val_q_reg$uart_core.sv:290$1150 ($dlatch) from module uart.
Setting constant 0-bit at position 12 on $flatten\uart_core.$verific$rx_val_q_reg$uart_core.sv:290$1150 ($dlatch) from module uart.
Setting constant 0-bit at position 13 on $flatten\uart_core.$verific$rx_val_q_reg$uart_core.sv:290$1150 ($dlatch) from module uart.
Setting constant 0-bit at position 14 on $flatten\uart_core.$verific$rx_val_q_reg$uart_core.sv:290$1150 ($dlatch) from module uart.
Setting constant 0-bit at position 15 on $flatten\uart_core.$verific$rx_val_q_reg$uart_core.sv:290$1150 ($dlatch) from module uart.

yosys> opt_clean

3.11.42. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..
Removed 0 unused cells and 2 unused wires.
<suppressed ~2 debug messages>

yosys> opt_expr

3.11.43. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.

3.11.44. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.45. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~47 debug messages>

yosys> opt_reduce

3.11.46. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart.
    New ctrl vector for $pmux cell $flatten\u_reg.$verific$select_279$uart_reg_top.sv:1584$2939: { \u_reg.addr_hit [0] $flatten\u_reg.$verific$n1170$1528 $flatten\u_reg.$verific$n1173$1531 $flatten\u_reg.$verific$n1182$1540 $flatten\u_reg.$verific$n1193$1551 }
  Optimizing cells in module \uart.
Performed a total of 1 changes.

yosys> opt_merge

3.11.47. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.48. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.49. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..
Removed 2 unused cells and 2 unused wires.
<suppressed ~3 debug messages>

yosys> opt_expr

3.11.50. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.

3.11.51. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.52. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~47 debug messages>

yosys> opt_reduce

3.11.53. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart.
Performed a total of 0 changes.

yosys> opt_merge

3.11.54. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.55. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.56. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..

yosys> opt_expr

3.11.57. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.

3.11.58. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~47 debug messages>

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\uart_core.\u_uart_txfifo.$verific$gen_normal_fifo.fifo_wptr_reg$prim_fifo_sync.sv:89$1360 ($adff) from module uart (D = $flatten\uart_core.\u_uart_txfifo.$verific$n112$1318, Q = \uart_core.u_uart_txfifo.gen_normal_fifo.fifo_wptr).
Adding EN signal on $flatten\uart_core.\u_uart_rxfifo.$verific$gen_normal_fifo.fifo_rptr_reg$prim_fifo_sync.sv:103$1367 ($adff) from module uart (D = $flatten\uart_core.\u_uart_rxfifo.$verific$n181$1324, Q = \uart_core.u_uart_rxfifo.gen_normal_fifo.fifo_rptr).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$rspop_reg$tlul_adapter_reg.sv:86$3197 ($adff) from module uart (D = { 2'00 \u_reg.u_reg_if.rd_req }, Q = \u_reg.u_reg_if.rspop).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$reqsz_reg$tlul_adapter_reg.sv:86$3196 ($adff) from module uart (D = \tl_i.a_size, Q = \u_reg.u_reg_if.reqsz).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$reqid_reg$tlul_adapter_reg.sv:86$3195 ($adff) from module uart (D = \tl_i.a_source, Q = \u_reg.u_reg_if.reqid).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$rdata_reg$tlul_adapter_reg.sv:96$3206 ($adff) from module uart (D = $flatten\u_reg.\u_reg_if.$verific$n183$3155, Q = \u_reg.u_reg_if.rdata).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$outstanding_reg$tlul_adapter_reg.sv:73$3185 ($adff) from module uart (D = $flatten\u_reg.\u_reg_if.$verific$n74$3127, Q = \u_reg.u_reg_if.outstanding).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$error_reg$tlul_adapter_reg.sv:96$3207 ($adff) from module uart (D = $flatten\u_reg.\u_reg_if.$verific$n181$3129, Q = \u_reg.u_reg_if.error).
Adding EN signal on $flatten\u_reg.\u_intr_state_tx_watermark.$verific$q_reg[0]$prim_subreg.sv:72$2981 ($adff) from module uart (D = \u_reg.hw2reg.intr_state.tx_watermark.d, Q = \u_reg.u_intr_state_tx_watermark.q).
Adding EN signal on $flatten\u_reg.\u_intr_state_tx_empty.$verific$q_reg[0]$prim_subreg.sv:72$2981 ($adff) from module uart (D = \u_reg.hw2reg.intr_state.tx_empty.d, Q = \u_reg.u_intr_state_tx_empty.q).
Adding EN signal on $flatten\u_reg.\u_intr_state_rx_watermark.$verific$q_reg[0]$prim_subreg.sv:72$2981 ($adff) from module uart (D = \u_reg.hw2reg.intr_state.rx_watermark.d, Q = \u_reg.u_intr_state_rx_watermark.q).
Adding EN signal on $flatten\u_reg.\u_intr_state_rx_timeout.$verific$q_reg[0]$prim_subreg.sv:72$2981 ($adff) from module uart (D = \u_reg.hw2reg.intr_state.rx_timeout.d, Q = \u_reg.u_intr_state_rx_timeout.q).
Adding EN signal on $flatten\u_reg.\u_intr_state_rx_parity_err.$verific$q_reg[0]$prim_subreg.sv:72$2981 ($adff) from module uart (D = \u_reg.hw2reg.intr_state.rx_parity_err.d, Q = \u_reg.u_intr_state_rx_parity_err.q).
Adding EN signal on $flatten\u_reg.\u_intr_state_rx_overflow.$verific$q_reg[0]$prim_subreg.sv:72$2981 ($adff) from module uart (D = \u_reg.hw2reg.intr_state.rx_overflow.d, Q = \u_reg.u_intr_state_rx_overflow.q).
Adding EN signal on $flatten\u_reg.\u_intr_state_rx_frame_err.$verific$q_reg[0]$prim_subreg.sv:72$2981 ($adff) from module uart (D = \u_reg.hw2reg.intr_state.rx_frame_err.d, Q = \u_reg.u_intr_state_rx_frame_err.q).
Adding EN signal on $flatten\u_reg.\u_intr_state_rx_break_err.$verific$q_reg[0]$prim_subreg.sv:72$2981 ($adff) from module uart (D = \u_reg.hw2reg.intr_state.rx_break_err.d, Q = \u_reg.u_intr_state_rx_break_err.q).
Adding EN signal on $flatten\u_reg.$verific$intg_err_q_reg$uart_reg_top.sv:61$1684 ($adff) from module uart (D = 1'1, Q = \u_reg.intg_err_q).
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4410 ($adffe) from module uart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4410 ($adffe) from module uart.

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..
Removed 16 unused cells and 16 unused wires.
<suppressed ~17 debug messages>

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.
<suppressed ~2 debug messages>

3.13.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~34 debug messages>

yosys> opt_reduce

3.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart.
Performed a total of 0 changes.

yosys> opt_merge

3.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_dff -sat

3.13.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.

3.13.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~34 debug messages>

yosys> opt_reduce

3.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart.
Performed a total of 0 changes.

yosys> opt_merge

3.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..

yosys> opt_expr

3.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.

3.13.23. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 2 bits (of 3) from port B of cell uart.$flatten\u_reg.\u_reg_if.$verific$equal_8$tlul_adapter_reg.sv:56$3165 ($eq).
Removed top 1 bits (of 4) from port B of cell uart.$flatten\u_reg.\u_reg_if.$verific$equal_76$prim_mubi_pkg.sv:27$3218 ($eq).
Removed top 31 bits (of 32) from port A of cell uart.$flatten\u_reg.\u_reg_if.\u_err.$verific$shift_left_23$tlul_err.sv:49$3833 ($shl).
Removed top 28 bits (of 32) from port Y of cell uart.$flatten\u_reg.\u_reg_if.\u_err.$verific$shift_left_23$tlul_err.sv:49$3833 ($shl).
Removed top 1 bits (of 4) from port B of cell uart.$flatten\u_reg.$verific$equal_33$uart_reg_top.sv:1358$2772 ($eq).
Removed top 1 bits (of 4) from port B of cell uart.$flatten\u_reg.$verific$equal_31$uart_reg_top.sv:1357$2771 ($eq).
Removed top 1 bits (of 4) from port B of cell uart.$flatten\u_reg.$verific$equal_29$uart_reg_top.sv:1356$2770 ($eq).
Removed top 1 bits (of 4) from port B of cell uart.$flatten\u_reg.$verific$equal_27$uart_reg_top.sv:1355$2769 ($eq).
Removed top 2 bits (of 4) from port B of cell uart.$flatten\u_reg.$verific$equal_25$uart_reg_top.sv:1354$2768 ($eq).
Removed top 2 bits (of 4) from port B of cell uart.$flatten\u_reg.$verific$equal_23$uart_reg_top.sv:1353$2767 ($eq).
Removed top 3 bits (of 4) from port B of cell uart.$flatten\u_reg.$verific$equal_21$uart_reg_top.sv:1352$2766 ($eq).
Removed top 5 bits (of 6) from port A of cell uart.$flatten\uart_core.\u_uart_rxfifo.$verific$sub_9$prim_fifo_sync.sv:69$1337 ($sub).
Removed top 1 bits (of 6) from port B of cell uart.$flatten\uart_core.\u_uart_rxfifo.$verific$sub_9$prim_fifo_sync.sv:69$1337 ($sub).
Removed top 1 bits (of 6) from port B of cell uart.$flatten\uart_core.\u_uart_rxfifo.$verific$sub_10$prim_fifo_sync.sv:70$1338 ($sub).
Removed top 5 bits (of 6) from port B of cell uart.$flatten\uart_core.\u_uart_rxfifo.$verific$add_45$prim_fifo_sync.sv:101$1363 ($add).
Removed top 1 bits (of 6) from port B of cell uart.$flatten\uart_core.\u_uart_txfifo.$verific$add_11$prim_fifo_sync.sv:70$1339 ($add).
Removed top 5 bits (of 6) from port B of cell uart.$flatten\uart_core.\u_uart_txfifo.$verific$add_31$prim_fifo_sync.sv:87$1355 ($add).
Removed top 5 bits (of 6) from port A of cell uart.$flatten\uart_core.$verific$LessThan_164$uart_core.sv:334$1173 ($le).
Removed top 4 bits (of 6) from port B of cell uart.$flatten\uart_core.$verific$LessThan_135$uart_core.sv:299$1151 ($lt).
Removed top 3 bits (of 4) from wire uart.$flatten\u_reg.$verific$n780$1555.
Removed top 1 bits (of 4) from wire uart.$flatten\u_reg.$verific$n801$1556.
Removed top 1 bits (of 4) from wire uart.$flatten\u_reg.$verific$n837$1557.
Removed top 2 bits (of 4) from wire uart.$flatten\u_reg.$verific$n852$1558.

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..
Removed 2 unused cells and 8 unused wires.
<suppressed ~3 debug messages>

yosys> alumacc

3.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module uart:
  creating $macc model for $flatten\uart_core.\u_uart_rxfifo.$verific$add_45$prim_fifo_sync.sv:101$1363 ($add).
  creating $macc model for $flatten\uart_core.\u_uart_rxfifo.$verific$sub_10$prim_fifo_sync.sv:70$1338 ($sub).
  creating $macc model for $flatten\uart_core.\u_uart_rxfifo.$verific$sub_9$prim_fifo_sync.sv:69$1337 ($sub).
  creating $macc model for $flatten\uart_core.\u_uart_txfifo.$verific$add_11$prim_fifo_sync.sv:70$1339 ($add).
  creating $macc model for $flatten\uart_core.\u_uart_txfifo.$verific$add_31$prim_fifo_sync.sv:87$1355 ($add).
  creating $alu model for $macc $flatten\uart_core.\u_uart_txfifo.$verific$add_31$prim_fifo_sync.sv:87$1355.
  creating $alu model for $macc $flatten\uart_core.\u_uart_txfifo.$verific$add_11$prim_fifo_sync.sv:70$1339.
  creating $alu model for $macc $flatten\uart_core.\u_uart_rxfifo.$verific$sub_9$prim_fifo_sync.sv:69$1337.
  creating $alu model for $macc $flatten\uart_core.\u_uart_rxfifo.$verific$sub_10$prim_fifo_sync.sv:70$1338.
  creating $alu model for $macc $flatten\uart_core.\u_uart_rxfifo.$verific$add_45$prim_fifo_sync.sv:101$1363.
  creating $alu model for $flatten\uart_core.$verific$LessThan_135$uart_core.sv:299$1151 ($lt): new $alu
  creating $alu model for $flatten\uart_core.$verific$LessThan_164$uart_core.sv:334$1173 ($le): new $alu
  creating $alu cell for $flatten\uart_core.$verific$LessThan_164$uart_core.sv:334$1173: $auto$alumacc.cc:485:replace_alu$4450
  creating $alu cell for $flatten\uart_core.$verific$LessThan_135$uart_core.sv:299$1151: $auto$alumacc.cc:485:replace_alu$4459
  creating $alu cell for $flatten\uart_core.\u_uart_rxfifo.$verific$add_45$prim_fifo_sync.sv:101$1363: $auto$alumacc.cc:485:replace_alu$4470
  creating $alu cell for $flatten\uart_core.\u_uart_rxfifo.$verific$sub_10$prim_fifo_sync.sv:70$1338: $auto$alumacc.cc:485:replace_alu$4473
  creating $alu cell for $flatten\uart_core.\u_uart_rxfifo.$verific$sub_9$prim_fifo_sync.sv:69$1337: $auto$alumacc.cc:485:replace_alu$4476
  creating $alu cell for $flatten\uart_core.\u_uart_txfifo.$verific$add_11$prim_fifo_sync.sv:70$1339: $auto$alumacc.cc:485:replace_alu$4479
  creating $alu cell for $flatten\uart_core.\u_uart_txfifo.$verific$add_31$prim_fifo_sync.sv:87$1355: $auto$alumacc.cc:485:replace_alu$4482
  created 7 $alu and 0 $macc cells.

yosys> opt

3.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.
<suppressed ~1 debug messages>

yosys> opt_merge -nomux

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~34 debug messages>

yosys> opt_reduce

3.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart.
Performed a total of 0 changes.

yosys> opt_merge

3.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.

3.19.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~34 debug messages>

yosys> opt_reduce

3.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart.
Performed a total of 0 changes.

yosys> opt_merge

3.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..

yosys> opt_expr

3.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.

3.19.16. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.20. Printing statistics.

=== uart ===

   Number of wires:               1681
   Number of wire bits:           4806
   Number of public wires:        1479
   Number of public wire bits:    4284
   Number of memories:               1
   Number of memory bits:          256
   Number of processes:              0
   Number of cells:                353
     $adff                          23
     $adffe                         17
     $alu                            7
     $and                           52
     $bmux                          15
     $eq                            20
     $logic_not                      5
     $memrd                          1
     $memwr                          1
     $mux                           45
     $ne                             1
     $not                           52
     $or                            58
     $reduce_and                     5
     $reduce_bool                    1
     $reduce_or                     15
     $reduce_xor                    28
     $shl                            1
     $xor                            6


yosys> memory -nomap

3.21. Executing MEMORY pass.

yosys> opt_mem

3.21.1. Executing OPT_MEM pass (optimize memories).
uart.uart_core.u_uart_rxfifo.gen_normal_fifo.storage: removing const-x lane 0
uart.uart_core.u_uart_rxfifo.gen_normal_fifo.storage: removing const-x lane 1
uart.uart_core.u_uart_rxfifo.gen_normal_fifo.storage: removing const-x lane 2
uart.uart_core.u_uart_rxfifo.gen_normal_fifo.storage: removing const-x lane 3
uart.uart_core.u_uart_rxfifo.gen_normal_fifo.storage: removing const-x lane 4
uart.uart_core.u_uart_rxfifo.gen_normal_fifo.storage: removing const-x lane 5
uart.uart_core.u_uart_rxfifo.gen_normal_fifo.storage: removing const-x lane 6
uart.uart_core.u_uart_rxfifo.gen_normal_fifo.storage: removing const-x lane 7
Performed a total of 2 transformations.

yosys> opt_mem_priority

3.21.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.21.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.21.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.21.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.21.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..

yosys> memory_share

3.21.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.21.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.21.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..

yosys> memory_collect

3.21.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.22. Printing statistics.

=== uart ===

   Number of wires:               1681
   Number of wire bits:           4806
   Number of public wires:        1479
   Number of public wire bits:    4284
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                351
     $adff                          23
     $adffe                         17
     $alu                            7
     $and                           52
     $bmux                          15
     $eq                            20
     $logic_not                      5
     $mux                           45
     $ne                             1
     $not                           52
     $or                            58
     $reduce_and                     5
     $reduce_bool                    1
     $reduce_or                     15
     $reduce_xor                    28
     $shl                            1
     $xor                            6


yosys> opt_clean

3.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..

yosys> stat

3.24. Printing statistics.

=== uart ===

   Number of wires:               1681
   Number of wire bits:           4806
   Number of public wires:        1479
   Number of public wire bits:    4284
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                351
     $adff                          23
     $adffe                         17
     $alu                            7
     $and                           52
     $bmux                          15
     $eq                            20
     $logic_not                      5
     $mux                           45
     $ne                             1
     $not                           52
     $or                            58
     $reduce_and                     5
     $reduce_bool                    1
     $reduce_or                     15
     $reduce_xor                    28
     $shl                            1
     $xor                            6


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.25. Executing TECHMAP pass (map to technology primitives).

3.25.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.25.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.25.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $reduce_or.
Using template $paramod$32efbfac1c4dc57230cf86180788fdfd12e3b511\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $bmux.
Using template $paramod$constmap:66d421c313e4e958be776b99540ac2de3b59fdbc$paramod$77562a466236eb4a6d905351a0995599b75075cb\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using extmapper simplemap for cells of type $reduce_xor.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod$e04283ca12514baf3d204c6994bec8f178dd89f8\_90_alu for cells of type $alu.
Using template $paramod$5e23d2e0f07f5403e3d2c5b606bab0c16e4174c1\_90_alu for cells of type $alu.
Using template $paramod$a40b3a69ab2154dca9743e30e1e84efb03b892b4\_90_alu for cells of type $alu.
Using template $paramod$9970e6a829a899c1fae39c88305c3c80d98a6bfd\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $ne.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000110 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
No more expansions possible.
<suppressed ~1245 debug messages>

yosys> stat

3.26. Printing statistics.

=== uart ===

   Number of wires:               2241
   Number of wire bits:          16264
   Number of public wires:        1479
   Number of public wire bits:    4284
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1818
     $_AND_                        185
     $_DFFE_PN0P_                   66
     $_DFF_PN0_                     19
     $_DFF_PN1_                      8
     $_MUX_                        420
     $_NOT_                        129
     $_OR_                         245
     $_XOR_                        746


yosys> opt

3.27. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.
<suppressed ~710 debug messages>

yosys> opt_merge -nomux

3.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
<suppressed ~729 debug messages>
Removed a total of 243 cells.

yosys> opt_muxtree

3.27.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart.
Performed a total of 0 changes.

yosys> opt_merge

3.27.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$6386 ($_DFF_PN0_) from module uart (D = \gen_alert_tx[0].u_prim_alert_sender.state_d [2], Q = \gen_alert_tx[0].u_prim_alert_sender.state_q [2]).
Adding EN signal on $auto$ff.cc:262:slice$6384 ($_DFF_PN0_) from module uart (D = \gen_alert_tx[0].u_prim_alert_sender.state_d [0], Q = \gen_alert_tx[0].u_prim_alert_sender.state_q [0]).
Adding EN signal on $auto$ff.cc:262:slice$6385 ($_DFF_PN0_) from module uart (D = \gen_alert_tx[0].u_prim_alert_sender.state_d [1], Q = \gen_alert_tx[0].u_prim_alert_sender.state_q [1]).

yosys> opt_clean

3.27.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..
Removed 20 unused cells and 476 unused wires.
<suppressed ~21 debug messages>

yosys> opt_expr

3.27.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.
<suppressed ~55 debug messages>

3.27.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.27.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart.
Performed a total of 0 changes.

yosys> opt_merge

3.27.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
<suppressed ~78 debug messages>
Removed a total of 26 cells.

yosys> opt_dff

3.27.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$6373 ($_DFF_PN0_) from module uart (D = \gen_alert_tx[0].u_prim_alert_sender.i_decode_ping.gen_async.state_d [1], Q = \gen_alert_tx[0].u_prim_alert_sender.i_decode_ping.gen_async.state_q [1]).
Adding EN signal on $auto$ff.cc:262:slice$6372 ($_DFF_PN0_) from module uart (D = \gen_alert_tx[0].u_prim_alert_sender.i_decode_ping.gen_async.state_d [0], Q = \gen_alert_tx[0].u_prim_alert_sender.i_decode_ping.gen_async.state_q [0]).
Adding EN signal on $auto$ff.cc:262:slice$6319 ($_DFF_PN0_) from module uart (D = \gen_alert_tx[0].u_prim_alert_sender.i_decode_ack.gen_async.state_d [1], Q = \gen_alert_tx[0].u_prim_alert_sender.i_decode_ack.gen_async.state_q [1]).
Adding EN signal on $auto$ff.cc:262:slice$6318 ($_DFF_PN0_) from module uart (D = \gen_alert_tx[0].u_prim_alert_sender.i_decode_ack.gen_async.state_d [0], Q = \gen_alert_tx[0].u_prim_alert_sender.i_decode_ack.gen_async.state_q [0]).

yosys> opt_clean

3.27.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..
Removed 0 unused cells and 48 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.27.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.
<suppressed ~32 debug messages>

3.27.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.27.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart.
Performed a total of 0 changes.

yosys> opt_merge

3.27.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
<suppressed ~90 debug messages>
Removed a total of 30 cells.

yosys> opt_dff

3.27.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..
Removed 0 unused cells and 38 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.27.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.

3.27.23. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.27.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart.
Performed a total of 0 changes.

yosys> opt_merge

3.27.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.27. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..

yosys> opt_expr

3.27.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.

3.27.30. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.
<suppressed ~91 debug messages>

yosys> opt_merge

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

yosys> opt_dff

3.28.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..
Removed 0 unused cells and 7 unused wires.
<suppressed ~1 debug messages>

3.28.5. Finished fast OPT passes.

yosys> memory_map

3.29. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.30. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.
<suppressed ~9 debug messages>

yosys> opt_merge -nomux

3.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart.
Performed a total of 0 changes.

yosys> opt_merge

3.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

yosys> opt_share

3.30.6. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$6357 in front of them:
        $auto$simplemap.cc:278:simplemap_mux$6341
        $auto$simplemap.cc:278:simplemap_mux$6337

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$6362 in front of them:
        $auto$simplemap.cc:278:simplemap_mux$6342
        $auto$simplemap.cc:278:simplemap_mux$6338


yosys> opt_dff

3.30.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.30.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.
<suppressed ~2 debug messages>

3.30.10. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.30.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

yosys> opt_reduce -full

3.30.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart.
Performed a total of 0 changes.

yosys> opt_merge

3.30.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

yosys> opt_share

3.30.14. Executing OPT_SHARE pass.

yosys> opt_dff

3.30.15. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.30.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.

3.30.18. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.30.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

yosys> opt_reduce -full

3.30.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart.
Performed a total of 0 changes.

yosys> opt_merge

3.30.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

yosys> opt_share

3.30.22. Executing OPT_SHARE pass.

yosys> opt_dff

3.30.23. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..

yosys> opt_expr -full

3.30.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.

3.30.26. Finished OPT passes. (There is nothing left to do.)

yosys> techmap -map +/techmap.v

3.31. Executing TECHMAP pass (map to technology primitives).

3.31.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.31.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
No more expansions possible.
<suppressed ~73 debug messages>

yosys> opt -sat

3.32. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.

yosys> opt_merge -nomux

3.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.32.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.32.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart.
Performed a total of 0 changes.

yosys> opt_merge

3.32.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.32.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.32.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..

yosys> opt_expr

3.32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.

3.32.9. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

3.33. Executing ABC pass (technology mapping using ABC).

3.33.1. Summary of detected clock domains:
  23 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7229, arst=!\rst_ni, srst={ }
  29 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7149, arst=!\rst_ni, srst={ }
  27 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$7004, arst=!\rst_ni, srst={ }
  39 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7021, arst=!\rst_ni, srst={ }
  52 cells in clk=\clk_i, en=\uart_core.u_uart_rxfifo.gen_normal_fifo.fifo_incr_rptr, arst=!\rst_ni, srst={ }
  6 cells in clk=\clk_i, en=\u_reg.u_intr_state_tx_watermark.wr_en, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$4415, arst=!\rst_ni, srst={ }
  335 cells in clk=\clk_i, en=\u_reg.u_reg_if.a_ack, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=\u_reg.u_intr_state_tx_empty.wr_en, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=\u_reg.u_intr_state_rx_timeout.wr_en, arst=!\rst_ni, srst={ }
  6 cells in clk=\clk_i, en=\u_reg.u_intr_state_rx_watermark.wr_en, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=\u_reg.u_intr_state_rx_frame_err.wr_en, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=\u_reg.u_intr_state_rx_break_err.wr_en, arst=!\rst_ni, srst={ }
  257 cells in clk=\clk_i, en=\u_reg.intg_err, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=\u_reg.u_intr_state_rx_parity_err.wr_en, arst=!\rst_ni, srst={ }
  12 cells in clk=\clk_i, en=\u_reg.u_intr_state_rx_overflow.wr_en, arst=!\rst_ni, srst={ }
  93 cells in clk=\clk_i, en={ }, arst=!\rst_ni, srst={ }
  44 cells in clk=\clk_i, en=\uart_core.u_uart_txfifo.gen_normal_fifo.fifo_incr_wptr, arst=!\rst_ni, srst={ }

3.33.2. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7229, asynchronously reset by !\rst_ni
Extracted 23 gates and 29 wires to a netlist network with 5 inputs and 3 outputs.

3.33.2.1. Executing ABC.

3.33.3. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7149, asynchronously reset by !\rst_ni
Extracted 29 gates and 37 wires to a netlist network with 7 inputs and 4 outputs.

3.33.3.1. Executing ABC.

3.33.4. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$7004, asynchronously reset by !\rst_ni
Extracted 27 gates and 41 wires to a netlist network with 12 inputs and 18 outputs.

3.33.4.1. Executing ABC.

3.33.5. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7021, asynchronously reset by !\rst_ni
Extracted 39 gates and 60 wires to a netlist network with 19 inputs and 12 outputs.

3.33.5.1. Executing ABC.

3.33.6. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \uart_core.u_uart_rxfifo.gen_normal_fifo.fifo_incr_rptr, asynchronously reset by !\rst_ni
Extracted 52 gates and 57 wires to a netlist network with 5 inputs and 14 outputs.

3.33.6.1. Executing ABC.

3.33.7. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u_reg.u_intr_state_tx_watermark.wr_en, asynchronously reset by !\rst_ni
Extracted 6 gates and 12 wires to a netlist network with 5 inputs and 2 outputs.

3.33.7.1. Executing ABC.

3.33.8. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$4415, asynchronously reset by !\rst_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 3 outputs.

3.33.8.1. Executing ABC.

3.33.9. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u_reg.u_reg_if.a_ack, asynchronously reset by !\rst_ni
Extracted 335 gates and 406 wires to a netlist network with 69 inputs and 46 outputs.

3.33.9.1. Executing ABC.

3.33.10. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u_reg.u_intr_state_tx_empty.wr_en, asynchronously reset by !\rst_ni
Extracted 4 gates and 8 wires to a netlist network with 3 inputs and 2 outputs.

3.33.10.1. Executing ABC.

3.33.11. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u_reg.u_intr_state_rx_timeout.wr_en, asynchronously reset by !\rst_ni
Extracted 4 gates and 8 wires to a netlist network with 3 inputs and 2 outputs.

3.33.11.1. Executing ABC.

3.33.12. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u_reg.u_intr_state_rx_watermark.wr_en, asynchronously reset by !\rst_ni
Extracted 6 gates and 12 wires to a netlist network with 5 inputs and 2 outputs.

3.33.12.1. Executing ABC.

3.33.13. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u_reg.u_intr_state_rx_frame_err.wr_en, asynchronously reset by !\rst_ni
Extracted 4 gates and 8 wires to a netlist network with 3 inputs and 2 outputs.

3.33.13.1. Executing ABC.

3.33.14. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u_reg.u_intr_state_rx_break_err.wr_en, asynchronously reset by !\rst_ni
Extracted 4 gates and 8 wires to a netlist network with 3 inputs and 2 outputs.

3.33.14.1. Executing ABC.

3.33.15. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u_reg.intg_err, asynchronously reset by !\rst_ni
Extracted 257 gates and 348 wires to a netlist network with 90 inputs and 2 outputs.

3.33.15.1. Executing ABC.

3.33.16. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u_reg.u_intr_state_rx_parity_err.wr_en, asynchronously reset by !\rst_ni
Extracted 4 gates and 8 wires to a netlist network with 3 inputs and 2 outputs.

3.33.16.1. Executing ABC.

3.33.17. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u_reg.u_intr_state_rx_overflow.wr_en, asynchronously reset by !\rst_ni
Extracted 12 gates and 21 wires to a netlist network with 8 inputs and 8 outputs.

3.33.17.1. Executing ABC.

3.33.18. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, asynchronously reset by !\rst_ni
Extracted 93 gates and 132 wires to a netlist network with 37 inputs and 34 outputs.

3.33.18.1. Executing ABC.

3.33.19. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$8090$uart_core.u_uart_txfifo.gen_normal_fifo.fifo_incr_wptr, asynchronously reset by !\rst_ni
Extracted 44 gates and 45 wires to a netlist network with 0 inputs and 9 outputs.

3.33.19.1. Executing ABC.

yosys> abc -dff

3.34. Executing ABC pass (technology mapping using ABC).

3.34.1. Summary of detected clock domains:
  5 cells in clk=\clk_i, en=$abc$7522$u_reg.u_intr_state_tx_watermark.wr_en, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$7822$u_reg.u_intr_state_rx_timeout.wr_en, arst=!\rst_ni, srst={ }
  7 cells in clk=\clk_i, en=$abc$7827$u_reg.u_intr_state_rx_watermark.wr_en, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$7817$u_reg.u_intr_state_tx_empty.wr_en, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$8076$u_reg.u_intr_state_rx_overflow.wr_en, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$8071$u_reg.u_intr_state_rx_parity_err.wr_en, arst=!\rst_ni, srst={ }
  40 cells in clk=\clk_i, en=$abc$7448$auto$opt_dff.cc:219:make_patterns_logic$7021, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$7529$auto$opt_dff.cc:194:make_patterns_logic$4415, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$7834$u_reg.u_intr_state_rx_frame_err.wr_en, arst=!\rst_ni, srst={ }
  42 cells in clk=\clk_i, en=$abc$7487$uart_core.u_uart_rxfifo.gen_normal_fifo.fifo_incr_rptr, arst=!\rst_ni, srst={ }
  23 cells in clk=\clk_i, en=$abc$7425$auto$opt_dff.cc:194:make_patterns_logic$7004, arst=!\rst_ni, srst={ }
  225 cells in clk=\clk_i, en=$abc$7844$u_reg.intg_err, arst=!\rst_ni, srst={ }
  13 cells in clk=\clk_i, en=$abc$7839$u_reg.u_intr_state_rx_break_err.wr_en, arst=!\rst_ni, srst={ }
  14 cells in clk=\clk_i, en=$abc$7405$auto$opt_dff.cc:219:make_patterns_logic$7149, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$7392$auto$opt_dff.cc:219:make_patterns_logic$7229, arst=!\rst_ni, srst={ }
  76 cells in clk=\clk_i, en={ }, arst=!\rst_ni, srst={ }
  221 cells in clk=\clk_i, en=$abc$7536$u_reg.u_reg_if.a_ack, arst=!\rst_ni, srst={ }
  40 cells in clk=\clk_i, en=$abc$8090$uart_core.u_uart_txfifo.gen_normal_fifo.fifo_incr_wptr, arst=!\rst_ni, srst={ }

3.34.2. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$7522$u_reg.u_intr_state_tx_watermark.wr_en, asynchronously reset by !\rst_ni
Extracted 5 gates and 9 wires to a netlist network with 4 inputs and 2 outputs.

3.34.2.1. Executing ABC.

3.34.3. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$7822$u_reg.u_intr_state_rx_timeout.wr_en, asynchronously reset by !\rst_ni
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 2 outputs.

3.34.3.1. Executing ABC.

3.34.4. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$7827$u_reg.u_intr_state_rx_watermark.wr_en, asynchronously reset by !\rst_ni
Extracted 7 gates and 13 wires to a netlist network with 6 inputs and 2 outputs.

3.34.4.1. Executing ABC.

3.34.5. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$7817$u_reg.u_intr_state_tx_empty.wr_en, asynchronously reset by !\rst_ni
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 2 outputs.

3.34.5.1. Executing ABC.

3.34.6. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$8076$u_reg.u_intr_state_rx_overflow.wr_en, asynchronously reset by !\rst_ni
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 2 outputs.

3.34.6.1. Executing ABC.

3.34.7. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$8071$u_reg.u_intr_state_rx_parity_err.wr_en, asynchronously reset by !\rst_ni
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 2 outputs.

3.34.7.1. Executing ABC.

3.34.8. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$7448$auto$opt_dff.cc:219:make_patterns_logic$7021, asynchronously reset by !\rst_ni
Extracted 40 gates and 55 wires to a netlist network with 15 inputs and 14 outputs.

3.34.8.1. Executing ABC.

3.34.9. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$7529$auto$opt_dff.cc:194:make_patterns_logic$4415, asynchronously reset by !\rst_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 3 outputs.

3.34.9.1. Executing ABC.

3.34.10. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$7834$u_reg.u_intr_state_rx_frame_err.wr_en, asynchronously reset by !\rst_ni
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 2 outputs.

3.34.10.1. Executing ABC.

3.34.11. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$7487$uart_core.u_uart_rxfifo.gen_normal_fifo.fifo_incr_rptr, asynchronously reset by !\rst_ni
Extracted 42 gates and 49 wires to a netlist network with 7 inputs and 16 outputs.

3.34.11.1. Executing ABC.

3.34.12. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$7425$auto$opt_dff.cc:194:make_patterns_logic$7004, asynchronously reset by !\rst_ni
Extracted 23 gates and 39 wires to a netlist network with 16 inputs and 14 outputs.

3.34.12.1. Executing ABC.

3.34.13. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$7844$u_reg.intg_err, asynchronously reset by !\rst_ni
Extracted 225 gates and 316 wires to a netlist network with 90 inputs and 2 outputs.

3.34.13.1. Executing ABC.

3.34.14. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$7839$u_reg.u_intr_state_rx_break_err.wr_en, asynchronously reset by !\rst_ni
Extracted 13 gates and 20 wires to a netlist network with 7 inputs and 8 outputs.

3.34.14.1. Executing ABC.

3.34.15. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$7405$auto$opt_dff.cc:219:make_patterns_logic$7149, asynchronously reset by !\rst_ni
Extracted 14 gates and 17 wires to a netlist network with 3 inputs and 6 outputs.

3.34.15.1. Executing ABC.

3.34.16. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$7392$auto$opt_dff.cc:219:make_patterns_logic$7229, asynchronously reset by !\rst_ni
Extracted 10 gates and 13 wires to a netlist network with 3 inputs and 3 outputs.

3.34.16.1. Executing ABC.

3.34.17. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, asynchronously reset by !\rst_ni
Extracted 76 gates and 112 wires to a netlist network with 36 inputs and 26 outputs.

3.34.17.1. Executing ABC.

3.34.18. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$7536$u_reg.u_reg_if.a_ack, asynchronously reset by !\rst_ni
Extracted 221 gates and 293 wires to a netlist network with 72 inputs and 46 outputs.

3.34.18.1. Executing ABC.

3.34.19. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$8631$abc$8090$uart_core.u_uart_txfifo.gen_normal_fifo.fifo_incr_wptr, asynchronously reset by !\rst_ni
Extracted 40 gates and 49 wires to a netlist network with 9 inputs and 20 outputs.

3.34.19.1. Executing ABC.

yosys> abc -dff

3.35. Executing ABC pass (technology mapping using ABC).

3.35.1. Summary of detected clock domains:
  6 cells in clk=\clk_i, en=$abc$8213$abc$7522$u_reg.u_intr_state_tx_watermark.wr_en, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$8219$abc$7822$u_reg.u_intr_state_rx_timeout.wr_en, arst=!\rst_ni, srst={ }
  7 cells in clk=\clk_i, en=$abc$8224$abc$7827$u_reg.u_intr_state_rx_watermark.wr_en, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$8232$abc$7817$u_reg.u_intr_state_tx_empty.wr_en, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$8237$abc$8076$u_reg.u_intr_state_rx_overflow.wr_en, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$8242$abc$8071$u_reg.u_intr_state_rx_parity_err.wr_en, arst=!\rst_ni, srst={ }
  36 cells in clk=\clk_i, en=$abc$8247$abc$7448$auto$opt_dff.cc:219:make_patterns_logic$7021, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$8289$abc$7529$auto$opt_dff.cc:194:make_patterns_logic$4415, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$8296$abc$7834$u_reg.u_intr_state_rx_frame_err.wr_en, arst=!\rst_ni, srst={ }
  21 cells in clk=\clk_i, en=$abc$8339$abc$7425$auto$opt_dff.cc:194:make_patterns_logic$7004, arst=!\rst_ni, srst={ }
  224 cells in clk=\clk_i, en=$abc$8362$abc$7844$u_reg.intg_err, arst=!\rst_ni, srst={ }
  12 cells in clk=\clk_i, en=$abc$8588$abc$7839$u_reg.u_intr_state_rx_break_err.wr_en, arst=!\rst_ni, srst={ }
  35 cells in clk=\clk_i, en=$abc$8301$abc$7487$uart_core.u_uart_rxfifo.gen_normal_fifo.fifo_incr_rptr, arst=!\rst_ni, srst={ }
  209 cells in clk=\clk_i, en=$abc$8717$abc$7536$u_reg.u_reg_if.a_ack, arst=!\rst_ni, srst={ }
  14 cells in clk=\clk_i, en=$abc$8601$abc$7405$auto$opt_dff.cc:219:make_patterns_logic$7149, arst=!\rst_ni, srst={ }
  14 cells in clk=\clk_i, en=$abc$8618$abc$7392$auto$opt_dff.cc:219:make_patterns_logic$7229, arst=!\rst_ni, srst={ }
  90 cells in clk=\clk_i, en={ }, arst=!\rst_ni, srst={ }
  37 cells in clk=\clk_i, en=$abc$8631$abc$8090$uart_core.u_uart_txfifo.gen_normal_fifo.fifo_incr_wptr, arst=!\rst_ni, srst={ }

3.35.2. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$8213$abc$7522$u_reg.u_intr_state_tx_watermark.wr_en, asynchronously reset by !\rst_ni
Extracted 6 gates and 11 wires to a netlist network with 5 inputs and 2 outputs.

3.35.2.1. Executing ABC.

3.35.3. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$8219$abc$7822$u_reg.u_intr_state_rx_timeout.wr_en, asynchronously reset by !\rst_ni
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 2 outputs.

3.35.3.1. Executing ABC.

3.35.4. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$8224$abc$7827$u_reg.u_intr_state_rx_watermark.wr_en, asynchronously reset by !\rst_ni
Extracted 7 gates and 13 wires to a netlist network with 6 inputs and 2 outputs.

3.35.4.1. Executing ABC.

3.35.5. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$8232$abc$7817$u_reg.u_intr_state_tx_empty.wr_en, asynchronously reset by !\rst_ni
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 2 outputs.

3.35.5.1. Executing ABC.

3.35.6. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$8237$abc$8076$u_reg.u_intr_state_rx_overflow.wr_en, asynchronously reset by !\rst_ni
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 2 outputs.

3.35.6.1. Executing ABC.

3.35.7. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$8242$abc$8071$u_reg.u_intr_state_rx_parity_err.wr_en, asynchronously reset by !\rst_ni
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 2 outputs.

3.35.7.1. Executing ABC.

3.35.8. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$8247$abc$7448$auto$opt_dff.cc:219:make_patterns_logic$7021, asynchronously reset by !\rst_ni
Extracted 36 gates and 50 wires to a netlist network with 14 inputs and 14 outputs.

3.35.8.1. Executing ABC.

3.35.9. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$8289$abc$7529$auto$opt_dff.cc:194:make_patterns_logic$4415, asynchronously reset by !\rst_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 3 outputs.

3.35.9.1. Executing ABC.

3.35.10. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$8296$abc$7834$u_reg.u_intr_state_rx_frame_err.wr_en, asynchronously reset by !\rst_ni
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 2 outputs.

3.35.10.1. Executing ABC.

3.35.11. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$8339$abc$7425$auto$opt_dff.cc:194:make_patterns_logic$7004, asynchronously reset by !\rst_ni
Extracted 21 gates and 38 wires to a netlist network with 16 inputs and 15 outputs.

3.35.11.1. Executing ABC.

3.35.12. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$8362$abc$7844$u_reg.intg_err, asynchronously reset by !\rst_ni
Extracted 224 gates and 315 wires to a netlist network with 90 inputs and 2 outputs.

3.35.12.1. Executing ABC.

3.35.13. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$8588$abc$7839$u_reg.u_intr_state_rx_break_err.wr_en, asynchronously reset by !\rst_ni
Extracted 12 gates and 19 wires to a netlist network with 7 inputs and 8 outputs.

3.35.13.1. Executing ABC.

3.35.14. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$8301$abc$7487$uart_core.u_uart_rxfifo.gen_normal_fifo.fifo_incr_rptr, asynchronously reset by !\rst_ni
Extracted 35 gates and 42 wires to a netlist network with 7 inputs and 14 outputs.

3.35.14.1. Executing ABC.

3.35.15. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$8717$abc$7536$u_reg.u_reg_if.a_ack, asynchronously reset by !\rst_ni
Extracted 209 gates and 277 wires to a netlist network with 68 inputs and 55 outputs.

3.35.15.1. Executing ABC.

3.35.16. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$8601$abc$7405$auto$opt_dff.cc:219:make_patterns_logic$7149, asynchronously reset by !\rst_ni
Extracted 14 gates and 17 wires to a netlist network with 3 inputs and 5 outputs.

3.35.16.1. Executing ABC.

3.35.17. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$8618$abc$7392$auto$opt_dff.cc:219:make_patterns_logic$7229, asynchronously reset by !\rst_ni
Extracted 14 gates and 18 wires to a netlist network with 4 inputs and 5 outputs.

3.35.17.1. Executing ABC.

3.35.18. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, asynchronously reset by !\rst_ni
Extracted 90 gates and 141 wires to a netlist network with 51 inputs and 27 outputs.

3.35.18.1. Executing ABC.

3.35.19. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$9677$abc$8631$abc$8090$uart_core.u_uart_txfifo.gen_normal_fifo.fifo_incr_wptr, asynchronously reset by !\rst_ni
Extracted 37 gates and 46 wires to a netlist network with 9 inputs and 19 outputs.

3.35.19.1. Executing ABC.

yosys> abc -dff

3.36. Executing ABC pass (technology mapping using ABC).

3.36.1. Summary of detected clock domains:
  7 cells in clk=\clk_i, en=$abc$9016$abc$8213$abc$7522$u_reg.u_intr_state_tx_watermark.wr_en, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$9023$abc$8219$abc$7822$u_reg.u_intr_state_rx_timeout.wr_en, arst=!\rst_ni, srst={ }
  7 cells in clk=\clk_i, en=$abc$9028$abc$8224$abc$7827$u_reg.u_intr_state_rx_watermark.wr_en, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$9036$abc$8232$abc$7817$u_reg.u_intr_state_tx_empty.wr_en, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$9041$abc$8237$abc$8076$u_reg.u_intr_state_rx_overflow.wr_en, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$9046$abc$8242$abc$8071$u_reg.u_intr_state_rx_parity_err.wr_en, arst=!\rst_ni, srst={ }
  36 cells in clk=\clk_i, en=$abc$9051$abc$8247$abc$7448$auto$opt_dff.cc:219:make_patterns_logic$7021, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$9087$abc$8289$abc$7529$auto$opt_dff.cc:194:make_patterns_logic$4415, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$9094$abc$8296$abc$7834$u_reg.u_intr_state_rx_frame_err.wr_en, arst=!\rst_ni, srst={ }
  19 cells in clk=\clk_i, en=$abc$9099$abc$8339$abc$7425$auto$opt_dff.cc:194:make_patterns_logic$7004, arst=!\rst_ni, srst={ }
  91 cells in clk=\clk_i, en={ }, arst=!\rst_ni, srst={ }
  228 cells in clk=\clk_i, en=$abc$9121$abc$8362$abc$7844$u_reg.intg_err, arst=!\rst_ni, srst={ }
  12 cells in clk=\clk_i, en=$abc$9351$abc$8588$abc$7839$u_reg.u_intr_state_rx_break_err.wr_en, arst=!\rst_ni, srst={ }
  34 cells in clk=\clk_i, en=$abc$9364$abc$8301$abc$7487$uart_core.u_uart_rxfifo.gen_normal_fifo.fifo_incr_rptr, arst=!\rst_ni, srst={ }
  206 cells in clk=\clk_i, en=$abc$9399$abc$8717$abc$7536$u_reg.u_reg_if.a_ack, arst=!\rst_ni, srst={ }
  14 cells in clk=\clk_i, en=$abc$9645$abc$8601$abc$7405$auto$opt_dff.cc:219:make_patterns_logic$7149, arst=!\rst_ni, srst={ }
  14 cells in clk=\clk_i, en=$abc$9661$abc$8618$abc$7392$auto$opt_dff.cc:219:make_patterns_logic$7229, arst=!\rst_ni, srst={ }
  37 cells in clk=\clk_i, en=$abc$9677$abc$8631$abc$8090$uart_core.u_uart_txfifo.gen_normal_fifo.fifo_incr_wptr, arst=!\rst_ni, srst={ }

3.36.2. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$9016$abc$8213$abc$7522$u_reg.u_intr_state_tx_watermark.wr_en, asynchronously reset by !\rst_ni
Extracted 7 gates and 13 wires to a netlist network with 6 inputs and 2 outputs.

3.36.2.1. Executing ABC.

3.36.3. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$9023$abc$8219$abc$7822$u_reg.u_intr_state_rx_timeout.wr_en, asynchronously reset by !\rst_ni
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 2 outputs.

3.36.3.1. Executing ABC.

3.36.4. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$9028$abc$8224$abc$7827$u_reg.u_intr_state_rx_watermark.wr_en, asynchronously reset by !\rst_ni
Extracted 7 gates and 13 wires to a netlist network with 6 inputs and 2 outputs.

3.36.4.1. Executing ABC.

3.36.5. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$9036$abc$8232$abc$7817$u_reg.u_intr_state_tx_empty.wr_en, asynchronously reset by !\rst_ni
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 2 outputs.

3.36.5.1. Executing ABC.

3.36.6. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$9041$abc$8237$abc$8076$u_reg.u_intr_state_rx_overflow.wr_en, asynchronously reset by !\rst_ni
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 2 outputs.

3.36.6.1. Executing ABC.

3.36.7. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$9046$abc$8242$abc$8071$u_reg.u_intr_state_rx_parity_err.wr_en, asynchronously reset by !\rst_ni
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 2 outputs.

3.36.7.1. Executing ABC.

3.36.8. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$9051$abc$8247$abc$7448$auto$opt_dff.cc:219:make_patterns_logic$7021, asynchronously reset by !\rst_ni
Extracted 36 gates and 48 wires to a netlist network with 12 inputs and 15 outputs.

3.36.8.1. Executing ABC.

3.36.9. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$9087$abc$8289$abc$7529$auto$opt_dff.cc:194:make_patterns_logic$4415, asynchronously reset by !\rst_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 3 outputs.

3.36.9.1. Executing ABC.

3.36.10. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$9094$abc$8296$abc$7834$u_reg.u_intr_state_rx_frame_err.wr_en, asynchronously reset by !\rst_ni
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 2 outputs.

3.36.10.1. Executing ABC.

3.36.11. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$9099$abc$8339$abc$7425$auto$opt_dff.cc:194:make_patterns_logic$7004, asynchronously reset by !\rst_ni
Extracted 19 gates and 36 wires to a netlist network with 17 inputs and 13 outputs.

3.36.11.1. Executing ABC.

3.36.12. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, asynchronously reset by !\rst_ni
Extracted 91 gates and 143 wires to a netlist network with 52 inputs and 27 outputs.

3.36.12.1. Executing ABC.

3.36.13. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$9121$abc$8362$abc$7844$u_reg.intg_err, asynchronously reset by !\rst_ni
Extracted 228 gates and 319 wires to a netlist network with 90 inputs and 2 outputs.

3.36.13.1. Executing ABC.

3.36.14. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$9351$abc$8588$abc$7839$u_reg.u_intr_state_rx_break_err.wr_en, asynchronously reset by !\rst_ni
Extracted 12 gates and 19 wires to a netlist network with 7 inputs and 8 outputs.

3.36.14.1. Executing ABC.

3.36.15. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$9364$abc$8301$abc$7487$uart_core.u_uart_rxfifo.gen_normal_fifo.fifo_incr_rptr, asynchronously reset by !\rst_ni
Extracted 34 gates and 41 wires to a netlist network with 7 inputs and 14 outputs.

3.36.15.1. Executing ABC.

3.36.16. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$9399$abc$8717$abc$7536$u_reg.u_reg_if.a_ack, asynchronously reset by !\rst_ni
Extracted 206 gates and 275 wires to a netlist network with 69 inputs and 53 outputs.

3.36.16.1. Executing ABC.

3.36.17. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$9645$abc$8601$abc$7405$auto$opt_dff.cc:219:make_patterns_logic$7149, asynchronously reset by !\rst_ni
Extracted 14 gates and 17 wires to a netlist network with 3 inputs and 5 outputs.

3.36.17.1. Executing ABC.

3.36.18. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$9661$abc$8618$abc$7392$auto$opt_dff.cc:219:make_patterns_logic$7229, asynchronously reset by !\rst_ni
Extracted 14 gates and 18 wires to a netlist network with 4 inputs and 6 outputs.

3.36.18.1. Executing ABC.

3.36.19. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$9921$abc$9677$abc$8631$abc$8090$uart_core.u_uart_txfifo.gen_normal_fifo.fifo_incr_wptr, asynchronously reset by !\rst_ni
Extracted 37 gates and 46 wires to a netlist network with 9 inputs and 19 outputs.

3.36.19.1. Executing ABC.

yosys> opt_ffinv

3.37. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt -sat

3.38. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.38.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.
<suppressed ~1 debug messages>

yosys> opt_merge -nomux

3.38.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
<suppressed ~15 debug messages>
Removed a total of 5 cells.

yosys> opt_muxtree

3.38.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.38.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart.
Performed a total of 0 changes.

yosys> opt_merge

3.38.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.38.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.38.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..
Removed 0 unused cells and 4146 unused wires.
<suppressed ~115 debug messages>

yosys> opt_expr

3.38.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.

3.38.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.38.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.38.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart.
Performed a total of 0 changes.

yosys> opt_merge

3.38.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.38.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.38.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..

yosys> opt_expr

3.38.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.

3.38.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /home/users/temp_dir/yosys_o9G1W9/abc_tmp_1.scr

3.39. Executing ABC pass (technology mapping using ABC).

3.39.1. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Extracted 642 gates and 801 wires to a netlist network with 159 inputs and 84 outputs.

3.39.1.1. Executing ABC.
DE:   #PIs = 159  #Luts =   194  Max Lvl =  11  Avg Lvl =   5.58  [   0.14 sec. at Pass 0]
DE:   #PIs = 159  #Luts =   170  Max Lvl =  12  Avg Lvl =   5.56  [   2.43 sec. at Pass 1]
DE:   #PIs = 159  #Luts =   167  Max Lvl =  10  Avg Lvl =   4.98  [   0.72 sec. at Pass 2]
DE:   #PIs = 159  #Luts =   163  Max Lvl =  11  Avg Lvl =   5.17  [   0.87 sec. at Pass 3]
DE:   #PIs = 159  #Luts =   162  Max Lvl =  11  Avg Lvl =   5.46  [   0.73 sec. at Pass 4]
DE:   #PIs = 159  #Luts =   162  Max Lvl =  11  Avg Lvl =   5.46  [   1.09 sec. at Pass 5]
DE:   #PIs = 159  #Luts =   162  Max Lvl =  11  Avg Lvl =   5.46  [   0.89 sec. at Pass 6]
DE:   #PIs = 159  #Luts =   162  Max Lvl =   9  Avg Lvl =   4.52  [   0.94 sec. at Pass 7]
DE:   #PIs = 159  #Luts =   162  Max Lvl =   9  Avg Lvl =   4.52  [   1.00 sec. at Pass 8]
DE:   #PIs = 159  #Luts =   161  Max Lvl =  12  Avg Lvl =   5.65  [   0.94 sec. at Pass 9]
DE:   #PIs = 159  #Luts =   161  Max Lvl =  11  Avg Lvl =   5.48  [   0.87 sec. at Pass 10]
DE:   #PIs = 159  #Luts =   161  Max Lvl =  10  Avg Lvl =   4.98  [   1.12 sec. at Pass 11]
DE:   #PIs = 159  #Luts =   161  Max Lvl =  10  Avg Lvl =   4.98  [   0.63 sec. at Pass 12]
DE:   #PIs = 159  #Luts =   161  Max Lvl =  10  Avg Lvl =   4.98  [   1.15 sec. at Pass 13]
DE:   #PIs = 159  #Luts =   159  Max Lvl =  11  Avg Lvl =   5.17  [   0.66 sec. at Pass 14]
DE:   #PIs = 159  #Luts =   159  Max Lvl =  11  Avg Lvl =   5.17  [   1.26 sec. at Pass 15]
DE:   #PIs = 159  #Luts =   159  Max Lvl =  10  Avg Lvl =   4.68  [   0.78 sec. at Pass 16]
DE:   #PIs = 159  #Luts =   159  Max Lvl =  10  Avg Lvl =   4.68  [   0.91 sec. at Pass 17]
DE:   #PIs = 159  #Luts =   158  Max Lvl =  10  Avg Lvl =   4.69  [   0.78 sec. at Pass 18]
DE:   #PIs = 159  #Luts =   158  Max Lvl =  10  Avg Lvl =   4.69  [   1.16 sec. at Pass 19]
DE:   #PIs = 159  #Luts =   158  Max Lvl =  10  Avg Lvl =   4.69  [   0.62 sec. at Pass 20]
DE:   #PIs = 159  #Luts =   158  Max Lvl =  10  Avg Lvl =   4.69  [   0.82 sec. at Pass 21]
DE:   #PIs = 159  #Luts =   157  Max Lvl =  10  Avg Lvl =   4.67  [   1.03 sec. at Pass 22]
DE:   #PIs = 159  #Luts =   157  Max Lvl =  10  Avg Lvl =   4.67  [   0.77 sec. at Pass 23]
DE:   #PIs = 159  #Luts =   157  Max Lvl =  10  Avg Lvl =   4.67  [   0.94 sec. at Pass 24]
DE:   #PIs = 159  #Luts =   157  Max Lvl =  10  Avg Lvl =   4.67  [   0.66 sec. at Pass 25]
DE:   #PIs = 159  #Luts =   157  Max Lvl =  10  Avg Lvl =   4.67  [   0.77 sec. at Pass 26]
DE:   #PIs = 159  #Luts =   157  Max Lvl =  10  Avg Lvl =   4.67  [   0.28 sec. at Pass 27]

yosys> opt

3.40. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.40.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.

yosys> opt_merge -nomux

3.40.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.40.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.40.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart.
Performed a total of 0 changes.

yosys> opt_merge

3.40.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

yosys> opt_dff

3.40.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.40.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..
Removed 0 unused cells and 794 unused wires.
<suppressed ~17 debug messages>

yosys> opt_expr

3.40.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.

3.40.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.40.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.40.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart.
Performed a total of 0 changes.

yosys> opt_merge

3.40.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

yosys> opt_dff

3.40.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.40.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..

yosys> opt_expr

3.40.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.

3.40.16. Finished OPT passes. (There is nothing left to do.)

yosys> opt_ffinv

3.41. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 1 inverters.

yosys> stat

3.42. Printing statistics.

=== uart ===

   Number of wires:               1526
   Number of wire bits:           4276
   Number of public wires:        1349
   Number of public wire bits:    4099
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                232
     $_DFFE_PN0P_                   56
     $_DFF_PN0_                     19
     $_DFF_PN1_                      1
     $lut                          156


yosys> shregmap -minlen 8 -maxlen 20

3.43. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.44. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.45. Printing statistics.

=== uart ===

   Number of wires:               1526
   Number of wire bits:           4276
   Number of public wires:        1349
   Number of public wire bits:    4099
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                232
     $_DFFE_PN0P_                   56
     $_DFF_PN0_                     19
     $_DFF_PN1_                      1
     $lut                          156


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.46. Executing TECHMAP pass (map to technology primitives).

3.46.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.46.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.46.3. Continuing TECHMAP pass.
Using template \$_DFFE_PN0P_ for cells of type $_DFFE_PN0P_.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFF_PN0_ for cells of type $_DFF_PN0_.
Using template \$_DFF_PN1_ for cells of type $_DFF_PN1_.
No more expansions possible.
<suppressed ~368 debug messages>

yosys> opt_expr -mux_undef

3.47. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.
<suppressed ~3051 debug messages>

yosys> simplemap

3.48. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.49. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.

yosys> opt_merge

3.50. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
<suppressed ~4113 debug messages>
Removed a total of 1371 cells.

yosys> opt_dff -nodffe -nosdff

3.51. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.52. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..
Removed 0 unused cells and 611 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.53. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.53.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.
<suppressed ~22 debug messages>

yosys> opt_merge -nomux

3.53.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.53.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.53.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart.
Performed a total of 0 changes.

yosys> opt_merge

3.53.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.53.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.53.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.53.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.

3.53.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.53.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.53.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart.
Performed a total of 0 changes.

yosys> opt_merge

3.53.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.53.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.53.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..

yosys> opt_expr

3.53.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.

3.53.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /home/users/temp_dir/yosys_o9G1W9/abc_tmp_2.scr

3.54. Executing ABC pass (technology mapping using ABC).

3.54.1. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Extracted 876 gates and 1036 wires to a netlist network with 158 inputs and 83 outputs.

3.54.1.1. Executing ABC.
DE:   #PIs = 158  #Luts =   157  Max Lvl =  10  Avg Lvl =   4.72  [   0.07 sec. at Pass 0]
DE:   #PIs = 158  #Luts =   157  Max Lvl =  10  Avg Lvl =   4.72  [   1.51 sec. at Pass 1]
DE:   #PIs = 158  #Luts =   157  Max Lvl =  10  Avg Lvl =   4.72  [   0.38 sec. at Pass 2]
DE:   #PIs = 158  #Luts =   157  Max Lvl =  10  Avg Lvl =   4.72  [   0.80 sec. at Pass 3]
DE:   #PIs = 158  #Luts =   157  Max Lvl =  10  Avg Lvl =   4.72  [   0.58 sec. at Pass 4]
DE:   #PIs = 158  #Luts =   157  Max Lvl =  10  Avg Lvl =   4.72  [   0.85 sec. at Pass 5]
DE:   #PIs = 158  #Luts =   156  Max Lvl =  11  Avg Lvl =   5.28  [   0.89 sec. at Pass 6]
DE:   #PIs = 158  #Luts =   156  Max Lvl =  11  Avg Lvl =   5.28  [   0.80 sec. at Pass 7]
DE:   #PIs = 158  #Luts =   156  Max Lvl =  11  Avg Lvl =   5.28  [   1.31 sec. at Pass 8]
DE:   #PIs = 158  #Luts =   156  Max Lvl =   9  Avg Lvl =   4.53  [   0.68 sec. at Pass 9]
DE:   #PIs = 158  #Luts =   156  Max Lvl =   9  Avg Lvl =   4.53  [   1.03 sec. at Pass 10]
DE:   #PIs = 158  #Luts =   156  Max Lvl =   9  Avg Lvl =   4.53  [   0.64 sec. at Pass 11]
DE:   #PIs = 158  #Luts =   156  Max Lvl =   9  Avg Lvl =   4.53  [   0.96 sec. at Pass 12]
DE:   #PIs = 158  #Luts =   155  Max Lvl =   9  Avg Lvl =   4.52  [   1.07 sec. at Pass 13]
DE:   #PIs = 158  #Luts =   155  Max Lvl =   9  Avg Lvl =   4.52  [   0.79 sec. at Pass 14]
DE:   #PIs = 158  #Luts =   155  Max Lvl =   9  Avg Lvl =   4.52  [   1.47 sec. at Pass 15]
DE:   #PIs = 158  #Luts =   155  Max Lvl =   9  Avg Lvl =   4.52  [   0.75 sec. at Pass 16]
DE:   #PIs = 158  #Luts =   155  Max Lvl =   9  Avg Lvl =   4.52  [   0.85 sec. at Pass 17]
DE:   #PIs = 158  #Luts =   155  Max Lvl =   9  Avg Lvl =   4.52  [   0.22 sec. at Pass 18]

yosys> opt

3.55. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.55.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.

yosys> opt_merge -nomux

3.55.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.55.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.55.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart.
Performed a total of 0 changes.

yosys> opt_merge

3.55.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

yosys> opt_dff

3.55.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.55.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..
Removed 0 unused cells and 755 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.55.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.

3.55.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.55.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.55.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart.
Performed a total of 0 changes.

yosys> opt_merge

3.55.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

yosys> opt_dff

3.55.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.55.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..

yosys> opt_expr

3.55.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.

3.55.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.56. Executing HIERARCHY pass (managing design hierarchy).

3.56.1. Analyzing design hierarchy..
Top module:  \uart

3.56.2. Analyzing design hierarchy..
Top module:  \uart
Removed 0 unused modules.

yosys> stat

3.57. Printing statistics.

=== uart ===

   Number of wires:               1524
   Number of wire bits:           4274
   Number of public wires:        1349
   Number of public wire bits:    4099
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                231
     $lut                          155
     dffsre                         76


yosys> opt_clean -purge

3.58. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..
Removed 0 unused cells and 1292 unused wires.
<suppressed ~1292 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.59. Executing Verilog backend.
Dumping module `\uart'.

Warnings: 232 unique messages, 232 total
End of script. Logfile hash: 61fc7f6cc4, CPU: user 8.02s system 0.51s, MEM: 36.06 MB peak
Yosys 0.18+10 (git sha1 8217e4c48, gcc 9.1.0 -fPIC -Os)
Time spent: 97% 6x abc (343 sec), 0% 48x opt_expr (2 sec), ...
real 71.46
user 306.01
sys 45.29
