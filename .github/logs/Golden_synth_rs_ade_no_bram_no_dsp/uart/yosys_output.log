
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.49
 Yosys 0.18+10 (git sha1 7a7a25778, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 05:39:28 2022.

yosys> verilog_defaults -add -I.

yosys> read -sv prim_alert_pkg.sv prim_cipher_pkg.sv prim_count_pkg.sv prim_esc_pkg.sv prim_mubi_pkg.sv prim_pkg.sv prim_ram_1p_pkg.sv prim_ram_2p_pkg.sv prim_secded_pkg.sv prim_subreg_pkg.sv prim_util_pkg.sv uart_reg_pkg.sv jtag_pkg.sv lc_ctrl_pkg.sv entropy_src_pkg.sv edn_reg_pkg.sv edn_pkg.sv top_pkg.sv tlul_pkg.sv prim_alert_sender.sv prim_buf.sv prim_diff_decode.sv prim_fifo_sync.sv prim_flop_2sync.sv prim_generic_buf.sv prim_generic_flop.sv prim_generic_flop_2sync.sv prim_intr_hw.sv prim_secded_inv_39_32_dec.sv prim_secded_inv_39_32_enc.sv prim_secded_inv_64_57_dec.sv prim_secded_inv_64_57_enc.sv prim_subreg.sv prim_subreg_ext.sv tlul_adapter_reg.sv tlul_cmd_intg_chk.sv tlul_data_integ_dec.sv tlul_data_integ_enc.sv tlul_err.sv tlul_rsp_intg_gen.sv uart.sv uart_core.sv uart_reg_top.sv uart_rx.sv uart_tx.sv

yosys> verific -sv prim_alert_pkg.sv prim_cipher_pkg.sv prim_count_pkg.sv prim_esc_pkg.sv prim_mubi_pkg.sv prim_pkg.sv prim_ram_1p_pkg.sv prim_ram_2p_pkg.sv prim_secded_pkg.sv prim_subreg_pkg.sv prim_util_pkg.sv uart_reg_pkg.sv jtag_pkg.sv lc_ctrl_pkg.sv entropy_src_pkg.sv edn_reg_pkg.sv edn_pkg.sv top_pkg.sv tlul_pkg.sv prim_alert_sender.sv prim_buf.sv prim_diff_decode.sv prim_fifo_sync.sv prim_flop_2sync.sv prim_generic_buf.sv prim_generic_flop.sv prim_generic_flop_2sync.sv prim_intr_hw.sv prim_secded_inv_39_32_dec.sv prim_secded_inv_39_32_enc.sv prim_secded_inv_64_57_dec.sv prim_secded_inv_64_57_enc.sv prim_subreg.sv prim_subreg_ext.sv tlul_adapter_reg.sv tlul_cmd_intg_chk.sv tlul_data_integ_dec.sv tlul_data_integ_enc.sv tlul_err.sv tlul_rsp_intg_gen.sv uart.sv uart_core.sv uart_reg_top.sv uart_rx.sv uart_tx.sv

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 05:39:28 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_alert_pkg.sv'
VERIFIC-WARNING [VERI-2418] prim_alert_pkg.sv:19: parameter 'ALERT_TX_DEFAULT' declared inside package 'prim_alert_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_alert_pkg.sv:22: parameter 'ALERT_RX_DEFAULT' declared inside package 'prim_alert_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_cipher_pkg.sv'
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:23: parameter 'PRINCE_SBOX4' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:28: parameter 'PRINCE_SBOX4_INV' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:33: parameter 'PRINCE_SHIFT_ROWS64' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:38: parameter 'PRINCE_SHIFT_ROWS64_INV' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:44: parameter 'PRINCE_ROUND_CONST' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:58: parameter 'PRINCE_ALPHA_CONST' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:61: parameter 'PRINCE_SHIFT_ROWS_CONST0' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:62: parameter 'PRINCE_SHIFT_ROWS_CONST1' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:63: parameter 'PRINCE_SHIFT_ROWS_CONST2' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:64: parameter 'PRINCE_SHIFT_ROWS_CONST3' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:141: parameter 'PRESENT_SBOX4' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:146: parameter 'PRESENT_SBOX4_INV' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:153: parameter 'PRESENT_PERM32' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:162: parameter 'PRESENT_PERM32_INV' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:172: parameter 'PRESENT_PERM64' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:189: parameter 'PRESENT_PERM64_INV' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_count_pkg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_esc_pkg.sv'
VERIFIC-WARNING [VERI-2418] prim_esc_pkg.sv:17: parameter 'ESC_TX_DEFAULT' declared inside package 'prim_esc_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_esc_pkg.sv:20: parameter 'ESC_RX_DEFAULT' declared inside package 'prim_esc_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_mubi_pkg.sv'
VERIFIC-WARNING [VERI-2418] prim_mubi_pkg.sv:19: parameter 'MuBi4Width' declared inside package 'prim_mubi_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_mubi_pkg.sv:148: parameter 'MuBi8Width' declared inside package 'prim_mubi_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_mubi_pkg.sv:277: parameter 'MuBi12Width' declared inside package 'prim_mubi_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_mubi_pkg.sv:406: parameter 'MuBi16Width' declared inside package 'prim_mubi_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_pkg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_ram_1p_pkg.sv'
VERIFIC-WARNING [VERI-2418] prim_ram_1p_pkg.sv:18: parameter 'RAM_1P_CFG_DEFAULT' declared inside package 'prim_ram_1p_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_ram_2p_pkg.sv'
VERIFIC-WARNING [VERI-2418] prim_ram_2p_pkg.sv:20: parameter 'RAM_2P_CFG_DEFAULT' declared inside package 'prim_ram_2p_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_pkg.sv'
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:81: parameter 'Secded2216ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:82: parameter 'Secded2216ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:90: parameter 'Secded2822ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:91: parameter 'Secded2822ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:99: parameter 'Secded3932ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:100: parameter 'Secded3932ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:108: parameter 'Secded6457ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:109: parameter 'Secded6457ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:117: parameter 'Secded7264ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:118: parameter 'Secded7264ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:126: parameter 'SecdedHamming2216ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:127: parameter 'SecdedHamming2216ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:135: parameter 'SecdedHamming3932ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:136: parameter 'SecdedHamming3932ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:144: parameter 'SecdedHamming7264ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:145: parameter 'SecdedHamming7264ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:153: parameter 'SecdedHamming7668ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:154: parameter 'SecdedHamming7668ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:162: parameter 'SecdedInv2216ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:163: parameter 'SecdedInv2216ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:171: parameter 'SecdedInv2822ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:172: parameter 'SecdedInv2822ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:180: parameter 'SecdedInv3932ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:181: parameter 'SecdedInv3932ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:189: parameter 'SecdedInv6457ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:190: parameter 'SecdedInv6457ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:198: parameter 'SecdedInv7264ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:199: parameter 'SecdedInv7264ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:207: parameter 'SecdedInvHamming2216ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:208: parameter 'SecdedInvHamming2216ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:216: parameter 'SecdedInvHamming3932ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:217: parameter 'SecdedInvHamming3932ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:225: parameter 'SecdedInvHamming7264ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:226: parameter 'SecdedInvHamming7264ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:234: parameter 'SecdedInvHamming7668ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:235: parameter 'SecdedInvHamming7668ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_subreg_pkg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_util_pkg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'uart_reg_pkg.sv'
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:10: parameter 'NumAlerts' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:13: parameter 'BlockAw' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:327: parameter 'UART_INTR_STATE_OFFSET' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:328: parameter 'UART_INTR_ENABLE_OFFSET' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:329: parameter 'UART_INTR_TEST_OFFSET' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:330: parameter 'UART_ALERT_TEST_OFFSET' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:331: parameter 'UART_CTRL_OFFSET' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:332: parameter 'UART_STATUS_OFFSET' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:333: parameter 'UART_RDATA_OFFSET' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:334: parameter 'UART_WDATA_OFFSET' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:335: parameter 'UART_FIFO_CTRL_OFFSET' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:336: parameter 'UART_FIFO_STATUS_OFFSET' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:337: parameter 'UART_OVRD_OFFSET' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:338: parameter 'UART_VAL_OFFSET' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:339: parameter 'UART_TIMEOUT_CTRL_OFFSET' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:342: parameter 'UART_INTR_TEST_RESVAL' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:343: parameter 'UART_INTR_TEST_TX_WATERMARK_RESVAL' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:344: parameter 'UART_INTR_TEST_RX_WATERMARK_RESVAL' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:345: parameter 'UART_INTR_TEST_TX_EMPTY_RESVAL' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:346: parameter 'UART_INTR_TEST_RX_OVERFLOW_RESVAL' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:347: parameter 'UART_INTR_TEST_RX_FRAME_ERR_RESVAL' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:348: parameter 'UART_INTR_TEST_RX_BREAK_ERR_RESVAL' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:349: parameter 'UART_INTR_TEST_RX_TIMEOUT_RESVAL' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:350: parameter 'UART_INTR_TEST_RX_PARITY_ERR_RESVAL' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:351: parameter 'UART_ALERT_TEST_RESVAL' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:352: parameter 'UART_ALERT_TEST_FATAL_FAULT_RESVAL' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:353: parameter 'UART_STATUS_RESVAL' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:354: parameter 'UART_STATUS_TXEMPTY_RESVAL' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:355: parameter 'UART_STATUS_TXIDLE_RESVAL' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:356: parameter 'UART_STATUS_RXIDLE_RESVAL' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:357: parameter 'UART_STATUS_RXEMPTY_RESVAL' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:358: parameter 'UART_RDATA_RESVAL' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:359: parameter 'UART_FIFO_STATUS_RESVAL' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:360: parameter 'UART_VAL_RESVAL' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] uart_reg_pkg.sv:380: parameter 'UART_PERMIT' declared inside package 'uart_reg_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'jtag_pkg.sv'
VERIFIC-WARNING [VERI-2418] jtag_pkg.sv:15: parameter 'JTAG_REQ_DEFAULT' declared inside package 'jtag_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] jtag_pkg.sv:22: parameter 'JTAG_RSP_DEFAULT' declared inside package 'jtag_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'lc_ctrl_pkg.sv'
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:13: parameter 'A0' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:14: parameter 'A1' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:15: parameter 'A2' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:16: parameter 'A3' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:17: parameter 'A4' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:18: parameter 'A5' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:19: parameter 'A6' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:20: parameter 'A7' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:21: parameter 'A8' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:22: parameter 'A9' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:23: parameter 'A10' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:24: parameter 'A11' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:26: parameter 'B0' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:27: parameter 'B1' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:28: parameter 'B2' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:29: parameter 'B3' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:30: parameter 'B4' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:31: parameter 'B5' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:32: parameter 'B6' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:33: parameter 'B7' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:34: parameter 'B8' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:35: parameter 'B9' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:36: parameter 'B10' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:37: parameter 'B11' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:40: parameter 'C0' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:41: parameter 'C1' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:42: parameter 'C2' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:43: parameter 'C3' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:44: parameter 'C4' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:45: parameter 'C5' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:46: parameter 'C6' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:47: parameter 'C7' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:48: parameter 'C8' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:49: parameter 'C9' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:50: parameter 'C10' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:51: parameter 'C11' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:52: parameter 'C12' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:53: parameter 'C13' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:54: parameter 'C14' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:55: parameter 'C15' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:57: parameter 'D0' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:58: parameter 'D1' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:59: parameter 'D2' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:60: parameter 'D3' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:61: parameter 'D4' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:62: parameter 'D5' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:63: parameter 'D6' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:64: parameter 'D7' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:65: parameter 'D8' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:66: parameter 'D9' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:67: parameter 'D10' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:68: parameter 'D11' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:69: parameter 'D12' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:70: parameter 'D13' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:71: parameter 'D14' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:72: parameter 'D15' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:75: parameter 'E0' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:76: parameter 'F0' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:82: parameter 'LcValueWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:83: parameter 'LcTokenWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:84: parameter 'NumLcStateValues' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:85: parameter 'LcStateWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:86: parameter 'NumLcCountValues' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:87: parameter 'LcCountWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:88: parameter 'NumLcStates' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:89: parameter 'DecLcStateWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:90: parameter 'DecLcCountWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:91: parameter 'LcIdStateWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:92: parameter 'DecLcIdStateWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:172: parameter 'NumTokens' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:173: parameter 'TokenIdxWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:191: parameter 'TxWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:199: parameter 'LC_TX_DEFAULT' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:201: parameter 'RmaSeedWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:204: parameter 'LcKeymgrDivWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:263: parameter 'TransTokenIdxMatrix' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'entropy_src_pkg.sv'
VERIFIC-WARNING [VERI-2418] entropy_src_pkg.sv:13: parameter 'RNG_BUS_WIDTH' declared inside package 'entropy_src_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] entropy_src_pkg.sv:14: parameter 'CSRNG_BUS_WIDTH' declared inside package 'entropy_src_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] entropy_src_pkg.sv:15: parameter 'FIPS_BUS_WIDTH' declared inside package 'entropy_src_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] entropy_src_pkg.sv:28: parameter 'ENTROPY_SRC_HW_IF_REQ_DEFAULT' declared inside package 'entropy_src_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] entropy_src_pkg.sv:29: parameter 'ENTROPY_SRC_HW_IF_RSP_DEFAULT' declared inside package 'entropy_src_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] entropy_src_pkg.sv:42: parameter 'ENTROPY_SRC_RNG_REQ_DEFAULT' declared inside package 'entropy_src_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] entropy_src_pkg.sv:43: parameter 'ENTROPY_SRC_RNG_RSP_DEFAULT' declared inside package 'entropy_src_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] entropy_src_pkg.sv:62: parameter 'ENTROPY_SRC_XHT_REQ_DEFAULT' declared inside package 'entropy_src_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] entropy_src_pkg.sv:63: parameter 'ENTROPY_SRC_XHT_RSP_DEFAULT' declared inside package 'entropy_src_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'edn_reg_pkg.sv'
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:10: parameter 'NumAlerts' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:13: parameter 'BlockAw' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:224: parameter 'EDN_INTR_STATE_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:225: parameter 'EDN_INTR_ENABLE_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:226: parameter 'EDN_INTR_TEST_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:227: parameter 'EDN_ALERT_TEST_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:228: parameter 'EDN_REGWEN_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:229: parameter 'EDN_CTRL_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:230: parameter 'EDN_SUM_STS_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:231: parameter 'EDN_BOOT_INS_CMD_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:232: parameter 'EDN_BOOT_GEN_CMD_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:233: parameter 'EDN_SW_CMD_REQ_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:234: parameter 'EDN_SW_CMD_STS_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:235: parameter 'EDN_RESEED_CMD_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:236: parameter 'EDN_GENERATE_CMD_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:237: parameter 'EDN_MAX_NUM_REQS_BETWEEN_RESEEDS_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:238: parameter 'EDN_RECOV_ALERT_STS_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:239: parameter 'EDN_ERR_CODE_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:240: parameter 'EDN_ERR_CODE_TEST_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:243: parameter 'EDN_INTR_TEST_RESVAL' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:244: parameter 'EDN_INTR_TEST_EDN_CMD_REQ_DONE_RESVAL' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:245: parameter 'EDN_INTR_TEST_EDN_FATAL_ERR_RESVAL' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:246: parameter 'EDN_ALERT_TEST_RESVAL' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:247: parameter 'EDN_ALERT_TEST_RECOV_ALERT_RESVAL' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:248: parameter 'EDN_ALERT_TEST_FATAL_ALERT_RESVAL' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:249: parameter 'EDN_SW_CMD_REQ_RESVAL' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:250: parameter 'EDN_RESEED_CMD_RESVAL' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:251: parameter 'EDN_GENERATE_CMD_RESVAL' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:275: parameter 'EDN_PERMIT' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'edn_pkg.sv'
VERIFIC-WARNING [VERI-2418] edn_pkg.sv:12: parameter 'ENDPOINT_BUS_WIDTH' declared inside package 'edn_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_pkg.sv:13: parameter 'FIPS_ENDPOINT_BUS_WIDTH' declared inside package 'edn_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_pkg.sv:26: parameter 'EDN_REQ_DEFAULT' declared inside package 'edn_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_pkg.sv:27: parameter 'EDN_RSP_DEFAULT' declared inside package 'edn_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_pkg.sv:30: parameter 'EDN_MODE_WIDTH' declared inside package 'edn_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'top_pkg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_pkg.sv'
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:14: parameter 'ArbiterImpl' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:27: parameter 'H2DCmdMaxWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:28: parameter 'H2DCmdIntgWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:29: parameter 'H2DCmdFullWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:30: parameter 'D2HRspMaxWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:31: parameter 'D2HRspIntgWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:32: parameter 'D2HRspFullWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:33: parameter 'DataMaxWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:34: parameter 'DataIntgWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:35: parameter 'DataFullWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:44: parameter 'TL_A_USER_DEFAULT' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:84: parameter 'TL_D_USER_DEFAULT' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_alert_sender.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_buf.sv'
VERIFIC-WARNING [VERI-1199] prim_buf.sv:24: parameter 'Impl' becomes localparam in 'prim_buf' with formal parameter declaration list
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_diff_decode.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_fifo_sync.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_flop_2sync.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_generic_buf.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_generic_flop.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_generic_flop_2sync.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_intr_hw.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_inv_39_32_dec.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_inv_39_32_enc.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_inv_64_57_dec.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_inv_64_57_enc.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_subreg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_subreg_ext.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_adapter_reg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_cmd_intg_chk.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_data_integ_dec.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_data_integ_enc.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_err.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_rsp_intg_gen.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'uart.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'uart_core.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'uart_reg_top.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'uart_rx.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'uart_tx.sv'

yosys> synth_rs -top uart -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.58

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\RS_DSP2_MULT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_sim'.
Generating RTLIL representation for module `\dsp_t1_20x18x64'.
Generating RTLIL representation for module `\dsp_t1_10x9x32'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top uart

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] uart.sv:8: compiling module 'uart'
VERIFIC-INFO [VERI-1018] uart_reg_top.sv:8: compiling module 'uart_reg_top'
VERIFIC-INFO [VERI-1018] tlul_cmd_intg_chk.sv:10: compiling module 'tlul_cmd_intg_chk'
VERIFIC-INFO [VERI-1018] prim_secded_inv_64_57_dec.sv:7: compiling module 'prim_secded_inv_64_57_dec'
VERIFIC-INFO [VERI-1018] tlul_data_integ_dec.sv:10: compiling module 'tlul_data_integ_dec'
VERIFIC-INFO [VERI-1018] prim_secded_inv_39_32_dec.sv:7: compiling module 'prim_secded_inv_39_32_dec'
VERIFIC-INFO [VERI-1018] tlul_rsp_intg_gen.sv:10: compiling module 'tlul_rsp_intg_gen'
VERIFIC-INFO [VERI-1018] prim_secded_inv_64_57_enc.sv:7: compiling module 'prim_secded_inv_64_57_enc'
VERIFIC-INFO [VERI-1018] tlul_data_integ_enc.sv:10: compiling module 'tlul_data_integ_enc'
VERIFIC-INFO [VERI-1018] prim_secded_inv_39_32_enc.sv:7: compiling module 'prim_secded_inv_39_32_enc'
VERIFIC-INFO [VERI-1018] tlul_adapter_reg.sv:10: compiling module 'tlul_adapter_reg(RegAw=6)'
VERIFIC-INFO [VERI-1018] tlul_err.sv:7: compiling module 'tlul_err'
VERIFIC-WARNING [VERI-1209] tlul_err.sv:49: expression size 32 truncated to fit in target size 4
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=1,SwAccess=SwAccessW1C_prim_subreg_pkg,RESVAL=1'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=1,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg_ext.sv:7: compiling module 'prim_subreg_ext(DW=32'b01)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=2,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=2'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=16,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=16'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg_ext.sv:7: compiling module 'prim_subreg_ext(DW=32'b01000)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=8,SwAccess=SwAccessWO_prim_subreg_pkg,RESVAL=8'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=1,SwAccess=SwAccessWO_prim_subreg_pkg,RESVAL=1'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=3,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=3'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg_ext.sv:7: compiling module 'prim_subreg_ext(DW=32'b0110)'
VERIFIC-INFO [VERI-1018] prim_subreg_ext.sv:7: compiling module 'prim_subreg_ext(DW=32'b010000)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=24,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=24'b0)'
VERIFIC-INFO [VERI-1018] uart_core.sv:8: compiling module 'uart_core'
VERIFIC-INFO [VERI-1018] prim_fifo_sync.sv:6: compiling module 'prim_fifo_sync(Width=32'b01000,Pass=1'b0,Depth=32'b0100000)'
VERIFIC-INFO [VERI-2571] prim_fifo_sync.sv:112: extracting RAM for identifier 'storage'
VERIFIC-INFO [VERI-1018] uart_tx.sv:8: compiling module 'uart_tx'
VERIFIC-INFO [VERI-1018] prim_flop_2sync.sv:13: compiling module 'prim_flop_2sync(Width=1,ResetValue=1'b1)'
VERIFIC-INFO [VERI-1018] prim_generic_flop_2sync.sv:9: compiling module 'prim_generic_flop_2sync(Width=1,ResetValue=1'b1)'
VERIFIC-INFO [VERI-1018] prim_generic_flop.sv:7: compiling module 'prim_generic_flop(ResetValue=1'b1)'
VERIFIC-INFO [VERI-1018] uart_rx.sv:8: compiling module 'uart_rx'
VERIFIC-INFO [VERI-1018] prim_intr_hw.sv:10: compiling module 'prim_intr_hw'
VERIFIC-INFO [VERI-1018] prim_alert_sender.sv:32: compiling module 'prim_alert_sender'
VERIFIC-INFO [VERI-1018] prim_diff_decode.sv:19: compiling module 'prim_diff_decode(AsyncOn=1'b1)'
VERIFIC-INFO [VERI-1018] prim_flop_2sync.sv:13: compiling module 'prim_flop_2sync(Width=1,ResetValue=1'b0)'
VERIFIC-INFO [VERI-1018] prim_generic_flop_2sync.sv:9: compiling module 'prim_generic_flop_2sync(Width=1,ResetValue=1'b0)'
VERIFIC-INFO [VERI-1018] prim_generic_flop.sv:7: compiling module 'prim_generic_flop(ResetValue=1'b0)'
VERIFIC-INFO [VERI-1018] prim_buf.sv:16: compiling module 'prim_buf'
VERIFIC-INFO [VERI-1018] prim_generic_buf.sv:6: compiling module 'prim_generic_buf'
Importing module uart.
Importing module prim_alert_sender.
Importing module prim_buf.
Importing module prim_diff_decode(AsyncOn=1'b1).
Importing module prim_flop_2sync(Width=1,ResetValue=1'b0).
Importing module prim_flop_2sync(Width=1,ResetValue=1'b1).
Importing module prim_generic_buf.
Importing module prim_generic_flop_2sync(Width=1,ResetValue=1'b0).
Importing module prim_generic_flop(ResetValue=1'b0).
Importing module prim_generic_flop_2sync(Width=1,ResetValue=1'b1).
Importing module prim_generic_flop(ResetValue=1'b1).
Importing module uart_core.
Importing module prim_fifo_sync(Width=32'b01000,Pass=1'b0,Depth=32'b0100000).
Importing module prim_intr_hw.
Importing module uart_reg_top.
Importing module prim_subreg(DW=1,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0).
Importing module prim_subreg(DW=1,SwAccess=SwAccessW1C_prim_subreg_pkg,RESVAL=1'b0).
Importing module prim_subreg(DW=1,SwAccess=SwAccessWO_prim_subreg_pkg,RESVAL=1'b0).
Importing module prim_subreg(DW=16,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=16'b0).
Importing module prim_subreg(DW=2,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=2'b0).
Importing module prim_subreg(DW=24,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=24'b0).
Importing module prim_subreg(DW=3,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=3'b0).
Importing module prim_subreg(DW=8,SwAccess=SwAccessWO_prim_subreg_pkg,RESVAL=8'b0).
Importing module prim_subreg_ext(DW=32'b01).
Importing module prim_subreg_ext(DW=32'b01000).
Importing module prim_subreg_ext(DW=32'b010000).
Importing module prim_subreg_ext(DW=32'b0110).
Importing module tlul_adapter_reg(RegAw=6).
Importing module tlul_cmd_intg_chk.
Importing module prim_secded_inv_64_57_dec.
Importing module tlul_data_integ_dec.
Importing module prim_secded_inv_39_32_dec.
Importing module tlul_err.
Importing module tlul_rsp_intg_gen.
Importing module prim_secded_inv_64_57_enc.
Importing module tlul_data_integ_enc.
Importing module prim_secded_inv_39_32_enc.
Importing module uart_rx.
Importing module uart_tx.

3.3.1. Analyzing design hierarchy..
Top module:  \uart
Used module:     \prim_alert_sender
Used module:         \prim_buf
Used module:             \prim_generic_buf
Used module:         \prim_diff_decode(AsyncOn=1'b1)
Used module:             \prim_flop_2sync(Width=1,ResetValue=1'b1)
Used module:                 \prim_generic_flop_2sync(Width=1,ResetValue=1'b1)
Used module:                     \prim_generic_flop(ResetValue=1'b1)
Used module:             \prim_flop_2sync(Width=1,ResetValue=1'b0)
Used module:                 \prim_generic_flop_2sync(Width=1,ResetValue=1'b0)
Used module:                     \prim_generic_flop(ResetValue=1'b0)
Used module:     \uart_core
Used module:         \prim_intr_hw
Used module:         \prim_fifo_sync(Width=32'b01000,Pass=1'b0,Depth=32'b0100000)
Used module:         \uart_rx
Used module:         \uart_tx
Used module:     \uart_reg_top
Used module:         \prim_subreg(DW=1,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0)
Used module:         \prim_subreg(DW=24,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=24'b0)
Used module:         \prim_subreg_ext(DW=32'b010000)
Used module:         \prim_subreg_ext(DW=32'b0110)
Used module:         \prim_subreg(DW=2,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=2'b0)
Used module:         \prim_subreg(DW=3,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=3'b0)
Used module:         \prim_subreg(DW=1,SwAccess=SwAccessWO_prim_subreg_pkg,RESVAL=1'b0)
Used module:         \prim_subreg(DW=8,SwAccess=SwAccessWO_prim_subreg_pkg,RESVAL=8'b0)
Used module:         \prim_subreg_ext(DW=32'b01000)
Used module:         \prim_subreg_ext(DW=32'b01)
Used module:         \prim_subreg(DW=16,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=16'b0)
Used module:         \prim_subreg(DW=1,SwAccess=SwAccessW1C_prim_subreg_pkg,RESVAL=1'b0)
Used module:         \tlul_adapter_reg(RegAw=6)
Used module:             \tlul_err
Used module:         \tlul_rsp_intg_gen
Used module:             \tlul_data_integ_enc
Used module:                 \prim_secded_inv_39_32_enc
Used module:             \prim_secded_inv_64_57_enc
Used module:         \tlul_cmd_intg_chk
Used module:             \tlul_data_integ_dec
Used module:                 \prim_secded_inv_39_32_dec
Used module:             \prim_secded_inv_64_57_dec

3.3.2. Analyzing design hierarchy..
Top module:  \uart
Used module:     \prim_alert_sender
Used module:         \prim_buf
Used module:             \prim_generic_buf
Used module:         \prim_diff_decode(AsyncOn=1'b1)
Used module:             \prim_flop_2sync(Width=1,ResetValue=1'b1)
Used module:                 \prim_generic_flop_2sync(Width=1,ResetValue=1'b1)
Used module:                     \prim_generic_flop(ResetValue=1'b1)
Used module:             \prim_flop_2sync(Width=1,ResetValue=1'b0)
Used module:                 \prim_generic_flop_2sync(Width=1,ResetValue=1'b0)
Used module:                     \prim_generic_flop(ResetValue=1'b0)
Used module:     \uart_core
Used module:         \prim_intr_hw
Used module:         \prim_fifo_sync(Width=32'b01000,Pass=1'b0,Depth=32'b0100000)
Used module:         \uart_rx
Used module:         \uart_tx
Used module:     \uart_reg_top
Used module:         \prim_subreg(DW=1,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0)
Used module:         \prim_subreg(DW=24,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=24'b0)
Used module:         \prim_subreg_ext(DW=32'b010000)
Used module:         \prim_subreg_ext(DW=32'b0110)
Used module:         \prim_subreg(DW=2,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=2'b0)
Used module:         \prim_subreg(DW=3,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=3'b0)
Used module:         \prim_subreg(DW=1,SwAccess=SwAccessWO_prim_subreg_pkg,RESVAL=1'b0)
Used module:         \prim_subreg(DW=8,SwAccess=SwAccessWO_prim_subreg_pkg,RESVAL=8'b0)
Used module:         \prim_subreg_ext(DW=32'b01000)
Used module:         \prim_subreg_ext(DW=32'b01)
Used module:         \prim_subreg(DW=16,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=16'b0)
Used module:         \prim_subreg(DW=1,SwAccess=SwAccessW1C_prim_subreg_pkg,RESVAL=1'b0)
Used module:         \tlul_adapter_reg(RegAw=6)
Used module:             \tlul_err
Used module:         \tlul_rsp_intg_gen
Used module:             \tlul_data_integ_enc
Used module:                 \prim_secded_inv_39_32_enc
Used module:             \prim_secded_inv_64_57_enc
Used module:         \tlul_cmd_intg_chk
Used module:             \tlul_data_integ_dec
Used module:                 \prim_secded_inv_39_32_dec
Used module:             \prim_secded_inv_64_57_dec
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.4.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.4.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart_tx.
<suppressed ~12 debug messages>
Optimizing module uart_rx.
<suppressed ~13 debug messages>
Optimizing module prim_secded_inv_39_32_enc.
Optimizing module tlul_data_integ_enc.
Optimizing module prim_secded_inv_64_57_enc.
Optimizing module tlul_rsp_intg_gen.
Optimizing module tlul_err.
<suppressed ~1 debug messages>
Optimizing module prim_secded_inv_39_32_dec.
Optimizing module tlul_data_integ_dec.
Optimizing module prim_secded_inv_64_57_dec.
Optimizing module tlul_cmd_intg_chk.
<suppressed ~1 debug messages>
Optimizing module tlul_adapter_reg(RegAw=6).
<suppressed ~12 debug messages>
Optimizing module prim_subreg_ext(DW=32'b0110).
Optimizing module prim_subreg_ext(DW=32'b010000).
Optimizing module prim_subreg_ext(DW=32'b01000).
Optimizing module prim_subreg_ext(DW=32'b01).
Optimizing module prim_subreg(DW=8,SwAccess=SwAccessWO_prim_subreg_pkg,RESVAL=8'b0).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=3,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=3'b0).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=24,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=24'b0).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=2,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=2'b0).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=16,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=16'b0).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=1,SwAccess=SwAccessWO_prim_subreg_pkg,RESVAL=1'b0).
<suppressed ~2 debug messages>
Optimizing module prim_subreg(DW=1,SwAccess=SwAccessW1C_prim_subreg_pkg,RESVAL=1'b0).
<suppressed ~2 debug messages>
Optimizing module prim_subreg(DW=1,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0).
<suppressed ~2 debug messages>
Optimizing module uart_reg_top.
<suppressed ~2 debug messages>
Optimizing module prim_intr_hw.
<suppressed ~1 debug messages>
Optimizing module prim_fifo_sync(Width=32'b01000,Pass=1'b0,Depth=32'b0100000).
<suppressed ~3 debug messages>
Optimizing module uart_core.
<suppressed ~22 debug messages>
Optimizing module prim_generic_flop(ResetValue=1'b1).
<suppressed ~1 debug messages>
Optimizing module prim_generic_flop_2sync(Width=1,ResetValue=1'b1).
Optimizing module prim_generic_flop(ResetValue=1'b0).
<suppressed ~1 debug messages>
Optimizing module prim_generic_flop_2sync(Width=1,ResetValue=1'b0).
Optimizing module prim_generic_buf.
Optimizing module prim_flop_2sync(Width=1,ResetValue=1'b1).
Optimizing module prim_flop_2sync(Width=1,ResetValue=1'b0).
Optimizing module prim_diff_decode(AsyncOn=1'b1).
<suppressed ~5 debug messages>
Optimizing module prim_buf.
Optimizing module prim_alert_sender.
<suppressed ~7 debug messages>
Optimizing module uart.

yosys> bmuxmap

3.5. Executing BMUXMAP pass.

yosys> demuxmap

3.6. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> flatten

3.7. Executing FLATTEN pass (flatten design).
Deleting now unused module prim_alert_sender.
Deleting now unused module prim_buf.
Deleting now unused module prim_diff_decode(AsyncOn=1'b1).
Deleting now unused module prim_fifo_sync(Width=32'b01000,Pass=1'b0,Depth=32'b0100000).
Deleting now unused module prim_flop_2sync(Width=1,ResetValue=1'b0).
Deleting now unused module prim_flop_2sync(Width=1,ResetValue=1'b1).
Deleting now unused module prim_generic_buf.
Deleting now unused module prim_generic_flop(ResetValue=1'b0).
Deleting now unused module prim_generic_flop(ResetValue=1'b1).
Deleting now unused module prim_generic_flop_2sync(Width=1,ResetValue=1'b0).
Deleting now unused module prim_generic_flop_2sync(Width=1,ResetValue=1'b1).
Deleting now unused module prim_intr_hw.
Deleting now unused module prim_secded_inv_39_32_dec.
Deleting now unused module prim_secded_inv_39_32_enc.
Deleting now unused module prim_secded_inv_64_57_dec.
Deleting now unused module prim_secded_inv_64_57_enc.
Deleting now unused module prim_subreg(DW=1,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0).
Deleting now unused module prim_subreg(DW=1,SwAccess=SwAccessW1C_prim_subreg_pkg,RESVAL=1'b0).
Deleting now unused module prim_subreg(DW=1,SwAccess=SwAccessWO_prim_subreg_pkg,RESVAL=1'b0).
Deleting now unused module prim_subreg(DW=16,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=16'b0).
Deleting now unused module prim_subreg(DW=2,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=2'b0).
Deleting now unused module prim_subreg(DW=24,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=24'b0).
Deleting now unused module prim_subreg(DW=3,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=3'b0).
Deleting now unused module prim_subreg(DW=8,SwAccess=SwAccessWO_prim_subreg_pkg,RESVAL=8'b0).
Deleting now unused module prim_subreg_ext(DW=32'b01).
Deleting now unused module prim_subreg_ext(DW=32'b01000).
Deleting now unused module prim_subreg_ext(DW=32'b010000).
Deleting now unused module prim_subreg_ext(DW=32'b0110).
Deleting now unused module tlul_adapter_reg(RegAw=6).
Deleting now unused module tlul_cmd_intg_chk.
Deleting now unused module tlul_data_integ_dec.
Deleting now unused module tlul_data_integ_enc.
Deleting now unused module tlul_err.
Deleting now unused module tlul_rsp_intg_gen.
Deleting now unused module uart_core.
Deleting now unused module uart_reg_top.
Deleting now unused module uart_rx.
Deleting now unused module uart_tx.
<suppressed ~92 debug messages>

yosys> bmuxmap

3.8. Executing BMUXMAP pass.

yosys> demuxmap

3.9. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> tribuf -logic

3.10. Executing TRIBUF pass.

yosys> deminout

3.11. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.
<suppressed ~36 debug messages>

yosys> opt_clean

3.13. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..
Removed 230 unused cells and 3430 unused wires.
<suppressed ~969 debug messages>

yosys> check

3.14. Executing CHECK pass (checking for obvious problems).
Checking module uart...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.15. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.15.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.
<suppressed ~33 debug messages>

yosys> opt_merge -nomux

3.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
<suppressed ~21 debug messages>
Removed a total of 7 cells.

yosys> opt_muxtree

3.15.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$mux_22$prim_alert_sender.sv:142$657: \gen_alert_tx[0].u_prim_alert_sender.state_q -> 3'000
      Replacing known input bits on port B of cell $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.$auto$bmuxmap.cc:60:execute$4460: \gen_alert_tx[0].u_prim_alert_sender.i_decode_ack.gen_async.state_q -> 2'11
      Replacing known input bits on port B of cell $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.$auto$bmuxmap.cc:60:execute$4460: \gen_alert_tx[0].u_prim_alert_sender.i_decode_ping.gen_async.state_q -> 2'11
      Replacing known input bits on port A of cell $flatten\uart_core.$verific$i54$uart_core.sv:121$988: \uart_core.break_st_q -> 1'1
      Replacing known input bits on port A of cell $flatten\uart_core.$verific$i52$uart_core.sv:117$987: \uart_core.break_st_q -> 1'0
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~69 debug messages>

yosys> opt_reduce

3.15.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart.
    New ctrl vector for $pmux cell $flatten\u_reg.$verific$select_279$uart_reg_top.sv:1584$2939: { \u_reg.addr_hit [0] $flatten\u_reg.$verific$n1158$1516 $flatten\u_reg.$verific$n1167$1525 $flatten\u_reg.$verific$n1170$1528 $flatten\u_reg.$verific$n1173$1531 $flatten\u_reg.$verific$n1179$1537 $flatten\u_reg.$verific$n1182$1540 $flatten\u_reg.$verific$n1185$1543 $flatten\u_reg.$verific$n1188$1546 $flatten\u_reg.$verific$n1191$1549 $flatten\u_reg.$verific$n1193$1551 }
  Optimizing cells in module \uart.
Performed a total of 1 changes.

yosys> opt_merge

3.15.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_dff -nodffe -nosdff

3.15.6. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $flatten\uart_core.\uart_tx.$verific$tx_q_reg$uart_tx.sv:54$4384 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.\uart_tx.$verific$tick_baud_q_reg$uart_tx.sv:42$4376 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.\uart_tx.$verific$sreg_q_reg$uart_tx.sv:54$4383 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.\uart_tx.$verific$bit_cnt_q_reg$uart_tx.sv:54$4382 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.\uart_tx.$verific$baud_div_q_reg$uart_tx.sv:42$4375 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.\uart_rx.$verific$tick_baud_q_reg$uart_rx.sv:50$4267 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.\uart_rx.$verific$sreg_q_reg$uart_rx.sv:50$4264 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.\uart_rx.$verific$rx_valid_q_reg$uart_rx.sv:94$4308 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.\uart_rx.$verific$idle_q_reg$uart_rx.sv:50$4268 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.\uart_rx.$verific$bit_cnt_q_reg$uart_rx.sv:50$4265 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.\uart_rx.$verific$baud_div_q_reg$uart_rx.sv:50$4266 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.\u_uart_txfifo.$verific$gen_normal_fifo.fifo_wptr_reg$prim_fifo_sync.sv:89$1360 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.\u_uart_txfifo.$verific$gen_normal_fifo.fifo_rptr_reg$prim_fifo_sync.sv:103$1367 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.\u_uart_rxfifo.$verific$gen_normal_fifo.fifo_wptr_reg$prim_fifo_sync.sv:89$1360 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.\u_uart_rxfifo.$verific$gen_normal_fifo.fifo_rptr_reg$prim_fifo_sync.sv:103$1367 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.\sync_rx.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$829 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.\sync_rx.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$829 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.\intr_hw_tx_watermark.$verific$intr_o_reg[0]$prim_intr_hw.sv:46$1400 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.\intr_hw_tx_empty.$verific$intr_o_reg[0]$prim_intr_hw.sv:46$1400 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.\intr_hw_rx_watermark.$verific$intr_o_reg[0]$prim_intr_hw.sv:46$1400 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.\intr_hw_rx_timeout.$verific$intr_o_reg[0]$prim_intr_hw.sv:46$1400 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.\intr_hw_rx_parity_err.$verific$intr_o_reg[0]$prim_intr_hw.sv:46$1400 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.\intr_hw_rx_overflow.$verific$intr_o_reg[0]$prim_intr_hw.sv:46$1400 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.\intr_hw_rx_frame_err.$verific$intr_o_reg[0]$prim_intr_hw.sv:46$1400 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.\intr_hw_rx_break_err.$verific$intr_o_reg[0]$prim_intr_hw.sv:46$1400 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.$verific$tx_watermark_prev_q_reg$uart_core.sv:329$1170 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.$verific$tx_uart_idle_q_reg$uart_core.sv:329$1172 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.$verific$tx_out_q_reg$uart_core.sv:212$1074 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.$verific$rx_watermark_prev_q_reg$uart_core.sv:329$1171 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.$verific$rx_val_q_reg$uart_core.sv:290$1150 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.$verific$rx_timeout_count_q_reg$uart_core.sv:378$1206 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.$verific$rx_sync_q2_reg$uart_core.sv:241$1082 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.$verific$rx_sync_q1_reg$uart_core.sv:241$1081 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.$verific$rx_fifo_depth_prev_q_reg$uart_core.sv:378$1207 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.$verific$nco_sum_q_reg$uart_core.sv:161$1015 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.$verific$break_st_q_reg$uart_core.sv:128$990 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\uart_core.$verific$allzero_cnt_q_reg$uart_core.sv:97$975 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_wdata.$verific$qe_reg$prim_subreg.sv:67$3089 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_wdata.$verific$q_reg$prim_subreg.sv:72$3093 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3055 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_timeout_ctrl_en.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$rspop_reg$tlul_adapter_reg.sv:86$3197 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$reqsz_reg$tlul_adapter_reg.sv:86$3196 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$reqid_reg$tlul_adapter_reg.sv:86$3195 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$rdata_reg$tlul_adapter_reg.sv:96$3206 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$outstanding_reg$tlul_adapter_reg.sv:73$3185 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$error_reg$tlul_adapter_reg.sv:96$3207 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_ovrd_txval.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_ovrd_txen.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_intr_state_tx_watermark.$verific$q_reg[0]$prim_subreg.sv:72$2981 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_intr_state_tx_empty.$verific$q_reg[0]$prim_subreg.sv:72$2981 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_intr_state_rx_watermark.$verific$q_reg[0]$prim_subreg.sv:72$2981 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_intr_state_rx_timeout.$verific$q_reg[0]$prim_subreg.sv:72$2981 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_intr_state_rx_parity_err.$verific$q_reg[0]$prim_subreg.sv:72$2981 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_intr_state_rx_overflow.$verific$q_reg[0]$prim_subreg.sv:72$2981 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_intr_state_rx_frame_err.$verific$q_reg[0]$prim_subreg.sv:72$2981 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_intr_state_rx_break_err.$verific$q_reg[0]$prim_subreg.sv:72$2981 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_intr_enable_tx_watermark.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$alert_set_q_reg$prim_alert_sender.sv:235$695 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_intr_enable_tx_empty.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$alert_pq_reg$prim_alert_sender.sv:235$693 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_intr_enable_rx_watermark.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$alert_nq_reg$prim_alert_sender.sv:235$694 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_intr_enable_rx_timeout.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_intr_enable_rx_parity_err.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_intr_enable_rx_overflow.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_intr_enable_rx_frame_err.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_intr_enable_rx_break_err.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_fifo_ctrl_txrst.$verific$q_reg[0]$prim_subreg.sv:72$2998 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_fifo_ctrl_txilvl.$verific$q_reg$prim_subreg.sv:72$3036 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_fifo_ctrl_rxrst.$verific$qe_reg$prim_subreg.sv:67$2995 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_fifo_ctrl_rxrst.$verific$q_reg[0]$prim_subreg.sv:72$2998 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_fifo_ctrl_rxilvl.$verific$q_reg$prim_subreg.sv:72$3074 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_ctrl_tx.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_ctrl_slpbk.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_ctrl_rxblvl.$verific$q_reg$prim_subreg.sv:72$3036 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_ctrl_rx.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_ctrl_parity_odd.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_ctrl_parity_en.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_ctrl_nf.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_ctrl_nco.$verific$q_reg$prim_subreg.sv:72$3017 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.\u_ctrl_llpbk.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\u_reg.$verific$intg_err_q_reg$uart_reg_top.sv:61$1684 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.\gen_async.i_sync_p.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$812 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.\gen_async.i_sync_p.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$812 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.\gen_async.i_sync_n.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$829 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.\gen_async.i_sync_n.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$829 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.$verific$gen_async.state_q_reg$prim_diff_decode.sv:172$782 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.$verific$gen_async.diff_pq_reg$prim_diff_decode.sv:172$783 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.$verific$gen_async.diff_nq_reg$prim_diff_decode.sv:172$784 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.\gen_async.i_sync_p.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$812 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.\gen_async.i_sync_p.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$812 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.\gen_async.i_sync_n.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$829 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.\gen_async.i_sync_n.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$829 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.$verific$level_q_reg$prim_diff_decode.sv:172$785 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.$verific$gen_async.state_q_reg$prim_diff_decode.sv:172$782 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.$verific$gen_async.diff_pq_reg$prim_diff_decode.sv:172$783 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.$verific$gen_async.diff_nq_reg$prim_diff_decode.sv:172$784 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$state_q_reg$prim_alert_sender.sv:235$692 ($aldff) from module uart.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$ping_set_q_reg$prim_alert_sender.sv:235$696 ($aldff) from module uart.

yosys> opt_clean

3.15.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..
Removed 6 unused cells and 41 unused wires.
<suppressed ~7 debug messages>

yosys> opt_expr

3.15.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.

3.15.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.15.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~70 debug messages>

yosys> opt_reduce

3.15.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart.
Performed a total of 0 changes.

yosys> opt_merge

3.15.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.15.13. Executing OPT_DFF pass (perform DFF optimizations).
Handling D = Q on $flatten\u_reg.\u_wdata.$verific$q_reg$prim_subreg.sv:72$3093 ($adff) from module uart (removing D path).
Handling D = Q on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3055 ($adff) from module uart (removing D path).
Handling D = Q on $flatten\u_reg.\u_timeout_ctrl_en.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($adff) from module uart (removing D path).
Handling D = Q on $flatten\u_reg.\u_ovrd_txval.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($adff) from module uart (removing D path).
Handling D = Q on $flatten\u_reg.\u_ovrd_txen.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($adff) from module uart (removing D path).
Handling D = Q on $flatten\u_reg.\u_intr_enable_tx_watermark.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($adff) from module uart (removing D path).
Handling D = Q on $flatten\u_reg.\u_intr_enable_tx_empty.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($adff) from module uart (removing D path).
Handling D = Q on $flatten\u_reg.\u_intr_enable_rx_watermark.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($adff) from module uart (removing D path).
Handling D = Q on $flatten\u_reg.\u_intr_enable_rx_timeout.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($adff) from module uart (removing D path).
Handling D = Q on $flatten\u_reg.\u_intr_enable_rx_parity_err.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($adff) from module uart (removing D path).
Handling D = Q on $flatten\u_reg.\u_intr_enable_rx_overflow.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($adff) from module uart (removing D path).
Handling D = Q on $flatten\u_reg.\u_intr_enable_rx_frame_err.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($adff) from module uart (removing D path).
Handling D = Q on $flatten\u_reg.\u_intr_enable_rx_break_err.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($adff) from module uart (removing D path).
Handling D = Q on $flatten\u_reg.\u_fifo_ctrl_txrst.$verific$q_reg[0]$prim_subreg.sv:72$2998 ($adff) from module uart (removing D path).
Handling D = Q on $flatten\u_reg.\u_fifo_ctrl_txilvl.$verific$q_reg$prim_subreg.sv:72$3036 ($adff) from module uart (removing D path).
Handling D = Q on $flatten\u_reg.\u_fifo_ctrl_rxrst.$verific$q_reg[0]$prim_subreg.sv:72$2998 ($adff) from module uart (removing D path).
Handling D = Q on $flatten\u_reg.\u_fifo_ctrl_rxilvl.$verific$q_reg$prim_subreg.sv:72$3074 ($adff) from module uart (removing D path).
Handling D = Q on $flatten\u_reg.\u_ctrl_tx.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($adff) from module uart (removing D path).
Handling D = Q on $flatten\u_reg.\u_ctrl_slpbk.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($adff) from module uart (removing D path).
Handling D = Q on $flatten\u_reg.\u_ctrl_rxblvl.$verific$q_reg$prim_subreg.sv:72$3036 ($adff) from module uart (removing D path).
Handling D = Q on $flatten\u_reg.\u_ctrl_rx.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($adff) from module uart (removing D path).
Handling D = Q on $flatten\u_reg.\u_ctrl_parity_odd.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($adff) from module uart (removing D path).
Handling D = Q on $flatten\u_reg.\u_ctrl_parity_en.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($adff) from module uart (removing D path).
Handling D = Q on $flatten\u_reg.\u_ctrl_nf.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($adff) from module uart (removing D path).
Handling D = Q on $flatten\u_reg.\u_ctrl_nco.$verific$q_reg$prim_subreg.sv:72$3017 ($adff) from module uart (removing D path).
Handling D = Q on $flatten\u_reg.\u_ctrl_llpbk.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($adff) from module uart (removing D path).
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_ctrl_llpbk.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($dlatch) from module uart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_ctrl_nco.$verific$q_reg$prim_subreg.sv:72$3017 ($dlatch) from module uart.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_ctrl_nco.$verific$q_reg$prim_subreg.sv:72$3017 ($dlatch) from module uart.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_ctrl_nco.$verific$q_reg$prim_subreg.sv:72$3017 ($dlatch) from module uart.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_ctrl_nco.$verific$q_reg$prim_subreg.sv:72$3017 ($dlatch) from module uart.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_ctrl_nco.$verific$q_reg$prim_subreg.sv:72$3017 ($dlatch) from module uart.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_ctrl_nco.$verific$q_reg$prim_subreg.sv:72$3017 ($dlatch) from module uart.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_ctrl_nco.$verific$q_reg$prim_subreg.sv:72$3017 ($dlatch) from module uart.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_ctrl_nco.$verific$q_reg$prim_subreg.sv:72$3017 ($dlatch) from module uart.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_ctrl_nco.$verific$q_reg$prim_subreg.sv:72$3017 ($dlatch) from module uart.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_ctrl_nco.$verific$q_reg$prim_subreg.sv:72$3017 ($dlatch) from module uart.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_ctrl_nco.$verific$q_reg$prim_subreg.sv:72$3017 ($dlatch) from module uart.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_ctrl_nco.$verific$q_reg$prim_subreg.sv:72$3017 ($dlatch) from module uart.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_ctrl_nco.$verific$q_reg$prim_subreg.sv:72$3017 ($dlatch) from module uart.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_ctrl_nco.$verific$q_reg$prim_subreg.sv:72$3017 ($dlatch) from module uart.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_ctrl_nco.$verific$q_reg$prim_subreg.sv:72$3017 ($dlatch) from module uart.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_ctrl_nco.$verific$q_reg$prim_subreg.sv:72$3017 ($dlatch) from module uart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_ctrl_nf.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($dlatch) from module uart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_ctrl_parity_en.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($dlatch) from module uart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_ctrl_parity_odd.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($dlatch) from module uart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_ctrl_rx.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($dlatch) from module uart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_ctrl_rxblvl.$verific$q_reg$prim_subreg.sv:72$3036 ($dlatch) from module uart.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_ctrl_rxblvl.$verific$q_reg$prim_subreg.sv:72$3036 ($dlatch) from module uart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_ctrl_slpbk.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($dlatch) from module uart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_ctrl_tx.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($dlatch) from module uart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_fifo_ctrl_rxilvl.$verific$q_reg$prim_subreg.sv:72$3074 ($dlatch) from module uart.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_fifo_ctrl_rxilvl.$verific$q_reg$prim_subreg.sv:72$3074 ($dlatch) from module uart.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_fifo_ctrl_rxilvl.$verific$q_reg$prim_subreg.sv:72$3074 ($dlatch) from module uart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_fifo_ctrl_rxrst.$verific$q_reg[0]$prim_subreg.sv:72$2998 ($dlatch) from module uart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_fifo_ctrl_txilvl.$verific$q_reg$prim_subreg.sv:72$3036 ($dlatch) from module uart.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_fifo_ctrl_txilvl.$verific$q_reg$prim_subreg.sv:72$3036 ($dlatch) from module uart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_fifo_ctrl_txrst.$verific$q_reg[0]$prim_subreg.sv:72$2998 ($dlatch) from module uart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_intr_enable_rx_break_err.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($dlatch) from module uart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_intr_enable_rx_frame_err.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($dlatch) from module uart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_intr_enable_rx_overflow.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($dlatch) from module uart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_intr_enable_rx_parity_err.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($dlatch) from module uart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_intr_enable_rx_timeout.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($dlatch) from module uart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_intr_enable_rx_watermark.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($dlatch) from module uart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_intr_enable_tx_empty.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($dlatch) from module uart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_intr_enable_tx_watermark.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($dlatch) from module uart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_ovrd_txen.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($dlatch) from module uart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_ovrd_txval.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($dlatch) from module uart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_timeout_ctrl_en.$verific$q_reg[0]$prim_subreg.sv:72$2964 ($dlatch) from module uart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3055 ($dlatch) from module uart.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3055 ($dlatch) from module uart.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3055 ($dlatch) from module uart.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3055 ($dlatch) from module uart.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3055 ($dlatch) from module uart.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3055 ($dlatch) from module uart.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3055 ($dlatch) from module uart.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3055 ($dlatch) from module uart.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3055 ($dlatch) from module uart.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3055 ($dlatch) from module uart.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3055 ($dlatch) from module uart.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3055 ($dlatch) from module uart.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3055 ($dlatch) from module uart.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3055 ($dlatch) from module uart.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3055 ($dlatch) from module uart.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3055 ($dlatch) from module uart.
Setting constant 0-bit at position 16 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3055 ($dlatch) from module uart.
Setting constant 0-bit at position 17 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3055 ($dlatch) from module uart.
Setting constant 0-bit at position 18 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3055 ($dlatch) from module uart.
Setting constant 0-bit at position 19 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3055 ($dlatch) from module uart.
Setting constant 0-bit at position 20 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3055 ($dlatch) from module uart.
Setting constant 0-bit at position 21 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3055 ($dlatch) from module uart.
Setting constant 0-bit at position 22 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3055 ($dlatch) from module uart.
Setting constant 0-bit at position 23 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3055 ($dlatch) from module uart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_wdata.$verific$q_reg$prim_subreg.sv:72$3093 ($dlatch) from module uart.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_wdata.$verific$q_reg$prim_subreg.sv:72$3093 ($dlatch) from module uart.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_wdata.$verific$q_reg$prim_subreg.sv:72$3093 ($dlatch) from module uart.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_wdata.$verific$q_reg$prim_subreg.sv:72$3093 ($dlatch) from module uart.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_wdata.$verific$q_reg$prim_subreg.sv:72$3093 ($dlatch) from module uart.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_wdata.$verific$q_reg$prim_subreg.sv:72$3093 ($dlatch) from module uart.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_wdata.$verific$q_reg$prim_subreg.sv:72$3093 ($dlatch) from module uart.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_wdata.$verific$q_reg$prim_subreg.sv:72$3093 ($dlatch) from module uart.

yosys> opt_clean

3.15.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..

yosys> opt_expr

3.15.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.
<suppressed ~67 debug messages>

3.15.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.15.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $flatten\uart_core.$verific$mux_185$uart_core.sv:367$1193.
    dead port 2/2 on $mux $flatten\uart_core.$verific$mux_185$uart_core.sv:367$1193.
    dead port 1/2 on $mux $flatten\uart_core.$verific$mux_186$uart_core.sv:367$1194.
    dead port 2/2 on $mux $flatten\uart_core.$verific$mux_186$uart_core.sv:367$1194.
    dead port 1/2 on $mux $flatten\uart_core.$verific$mux_187$uart_core.sv:367$1195.
    dead port 2/2 on $mux $flatten\uart_core.$verific$mux_187$uart_core.sv:367$1195.
    dead port 1/2 on $mux $flatten\uart_core.\u_uart_txfifo.$verific$mux_47$prim_fifo_sync.sv:102$1364.
    dead port 2/2 on $mux $flatten\uart_core.\u_uart_txfifo.$verific$mux_47$prim_fifo_sync.sv:102$1364.
    dead port 1/2 on $mux $flatten\uart_core.\uart_rx.$verific$i32$uart_rx.sv:68$4277.
    dead port 2/2 on $mux $flatten\uart_core.\uart_rx.$verific$i32$uart_rx.sv:68$4277.
    dead port 1/2 on $mux $flatten\uart_core.\uart_rx.$verific$i47$uart_rx.sv:87$4290.
    dead port 2/2 on $mux $flatten\uart_core.\uart_rx.$verific$i47$uart_rx.sv:87$4290.
    dead port 1/2 on $mux $flatten\uart_core.\uart_rx.$verific$i50$uart_rx.sv:88$4293.
    dead port 2/2 on $mux $flatten\uart_core.\uart_rx.$verific$i50$uart_rx.sv:88$4293.
    dead port 1/2 on $mux $flatten\uart_core.\uart_rx.$verific$i54$uart_rx.sv:88$4297.
    dead port 2/2 on $mux $flatten\uart_core.\uart_rx.$verific$i54$uart_rx.sv:88$4297.
    dead port 1/2 on $mux $flatten\uart_core.\uart_rx.$verific$i57$uart_rx.sv:88$4300.
    dead port 2/2 on $mux $flatten\uart_core.\uart_rx.$verific$i57$uart_rx.sv:88$4300.
    dead port 1/2 on $mux $flatten\uart_core.\uart_rx.$verific$mux_30$uart_rx.sv:68$4276.
    dead port 2/2 on $mux $flatten\uart_core.\uart_rx.$verific$mux_30$uart_rx.sv:68$4276.
    dead port 1/2 on $mux $flatten\uart_core.\uart_rx.$verific$mux_47$uart_rx.sv:87$4291.
    dead port 2/2 on $mux $flatten\uart_core.\uart_rx.$verific$mux_47$uart_rx.sv:87$4291.
    dead port 1/2 on $mux $flatten\uart_core.\uart_rx.$verific$mux_48$uart_rx.sv:87$4292.
    dead port 2/2 on $mux $flatten\uart_core.\uart_rx.$verific$mux_48$uart_rx.sv:87$4292.
    dead port 1/2 on $mux $flatten\uart_core.\uart_rx.$verific$mux_50$uart_rx.sv:88$4294.
    dead port 2/2 on $mux $flatten\uart_core.\uart_rx.$verific$mux_50$uart_rx.sv:88$4294.
    dead port 1/2 on $mux $flatten\uart_core.\uart_rx.$verific$mux_51$uart_rx.sv:88$4295.
    dead port 2/2 on $mux $flatten\uart_core.\uart_rx.$verific$mux_51$uart_rx.sv:88$4295.
    dead port 1/2 on $mux $flatten\uart_core.\uart_rx.$verific$mux_52$uart_rx.sv:88$4296.
    dead port 2/2 on $mux $flatten\uart_core.\uart_rx.$verific$mux_52$uart_rx.sv:88$4296.
    dead port 1/2 on $mux $flatten\uart_core.\uart_rx.$verific$mux_54$uart_rx.sv:88$4298.
    dead port 2/2 on $mux $flatten\uart_core.\uart_rx.$verific$mux_54$uart_rx.sv:88$4298.
    dead port 1/2 on $mux $flatten\uart_core.\uart_rx.$verific$mux_55$uart_rx.sv:88$4299.
    dead port 2/2 on $mux $flatten\uart_core.\uart_rx.$verific$mux_55$uart_rx.sv:88$4299.
    dead port 1/2 on $mux $flatten\uart_core.\uart_tx.$verific$i61$uart_tx.sv:73$4396.
    dead port 2/2 on $mux $flatten\uart_core.\uart_tx.$verific$i61$uart_tx.sv:73$4396.
    dead port 1/2 on $mux $flatten\uart_core.\uart_tx.$verific$mux_59$uart_tx.sv:73$4395.
    dead port 2/2 on $mux $flatten\uart_core.\uart_tx.$verific$mux_59$uart_tx.sv:73$4395.
    dead port 1/2 on $mux $flatten\uart_core.\uart_tx.$verific$mux_61$uart_tx.sv:73$4397.
    dead port 2/2 on $mux $flatten\uart_core.\uart_tx.$verific$mux_61$uart_tx.sv:73$4397.
Removed 40 multiplexer ports.
<suppressed ~50 debug messages>

yosys> opt_reduce

3.15.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart.
    New ctrl vector for $pmux cell $flatten\u_reg.$verific$select_279$uart_reg_top.sv:1584$2939: { \u_reg.addr_hit [0] $flatten\u_reg.$verific$n1170$1528 $flatten\u_reg.$verific$n1173$1531 $flatten\u_reg.$verific$n1182$1540 $flatten\u_reg.$verific$n1188$1546 $flatten\u_reg.$verific$n1193$1551 }
  Optimizing cells in module \uart.
Performed a total of 1 changes.

yosys> opt_merge

3.15.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
<suppressed ~42 debug messages>
Removed a total of 14 cells.

yosys> opt_dff -nodffe -nosdff

3.15.20. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $flatten\uart_core.$verific$rx_timeout_count_q_reg$uart_core.sv:378$1206 ($adff) from module uart.
Setting constant 0-bit at position 1 on $flatten\uart_core.$verific$rx_timeout_count_q_reg$uart_core.sv:378$1206 ($adff) from module uart.
Setting constant 0-bit at position 2 on $flatten\uart_core.$verific$rx_timeout_count_q_reg$uart_core.sv:378$1206 ($adff) from module uart.
Setting constant 0-bit at position 3 on $flatten\uart_core.$verific$rx_timeout_count_q_reg$uart_core.sv:378$1206 ($adff) from module uart.
Setting constant 0-bit at position 4 on $flatten\uart_core.$verific$rx_timeout_count_q_reg$uart_core.sv:378$1206 ($adff) from module uart.
Setting constant 0-bit at position 5 on $flatten\uart_core.$verific$rx_timeout_count_q_reg$uart_core.sv:378$1206 ($adff) from module uart.
Setting constant 0-bit at position 6 on $flatten\uart_core.$verific$rx_timeout_count_q_reg$uart_core.sv:378$1206 ($adff) from module uart.
Setting constant 0-bit at position 7 on $flatten\uart_core.$verific$rx_timeout_count_q_reg$uart_core.sv:378$1206 ($adff) from module uart.
Setting constant 0-bit at position 8 on $flatten\uart_core.$verific$rx_timeout_count_q_reg$uart_core.sv:378$1206 ($adff) from module uart.
Setting constant 0-bit at position 9 on $flatten\uart_core.$verific$rx_timeout_count_q_reg$uart_core.sv:378$1206 ($adff) from module uart.
Setting constant 0-bit at position 10 on $flatten\uart_core.$verific$rx_timeout_count_q_reg$uart_core.sv:378$1206 ($adff) from module uart.
Setting constant 0-bit at position 11 on $flatten\uart_core.$verific$rx_timeout_count_q_reg$uart_core.sv:378$1206 ($adff) from module uart.
Setting constant 0-bit at position 12 on $flatten\uart_core.$verific$rx_timeout_count_q_reg$uart_core.sv:378$1206 ($adff) from module uart.
Setting constant 0-bit at position 13 on $flatten\uart_core.$verific$rx_timeout_count_q_reg$uart_core.sv:378$1206 ($adff) from module uart.
Setting constant 0-bit at position 14 on $flatten\uart_core.$verific$rx_timeout_count_q_reg$uart_core.sv:378$1206 ($adff) from module uart.
Setting constant 0-bit at position 15 on $flatten\uart_core.$verific$rx_timeout_count_q_reg$uart_core.sv:378$1206 ($adff) from module uart.
Setting constant 0-bit at position 16 on $flatten\uart_core.$verific$rx_timeout_count_q_reg$uart_core.sv:378$1206 ($adff) from module uart.
Setting constant 0-bit at position 17 on $flatten\uart_core.$verific$rx_timeout_count_q_reg$uart_core.sv:378$1206 ($adff) from module uart.
Setting constant 0-bit at position 18 on $flatten\uart_core.$verific$rx_timeout_count_q_reg$uart_core.sv:378$1206 ($adff) from module uart.
Setting constant 0-bit at position 19 on $flatten\uart_core.$verific$rx_timeout_count_q_reg$uart_core.sv:378$1206 ($adff) from module uart.
Setting constant 0-bit at position 20 on $flatten\uart_core.$verific$rx_timeout_count_q_reg$uart_core.sv:378$1206 ($adff) from module uart.
Setting constant 0-bit at position 21 on $flatten\uart_core.$verific$rx_timeout_count_q_reg$uart_core.sv:378$1206 ($adff) from module uart.
Setting constant 0-bit at position 22 on $flatten\uart_core.$verific$rx_timeout_count_q_reg$uart_core.sv:378$1206 ($adff) from module uart.
Setting constant 0-bit at position 23 on $flatten\uart_core.$verific$rx_timeout_count_q_reg$uart_core.sv:378$1206 ($adff) from module uart.
Setting constant 1-bit at position 0 on $flatten\uart_core.$verific$tx_uart_idle_q_reg$uart_core.sv:329$1172 ($adff) from module uart.
Setting constant 0-bit at position 0 on $flatten\uart_core.\intr_hw_rx_break_err.$verific$intr_o_reg[0]$prim_intr_hw.sv:46$1400 ($adff) from module uart.
Setting constant 0-bit at position 0 on $flatten\uart_core.\uart_rx.$verific$baud_div_q_reg$uart_rx.sv:50$4266 ($adff) from module uart.
Setting constant 0-bit at position 1 on $flatten\uart_core.\uart_rx.$verific$baud_div_q_reg$uart_rx.sv:50$4266 ($adff) from module uart.
Setting constant 0-bit at position 2 on $flatten\uart_core.\uart_rx.$verific$baud_div_q_reg$uart_rx.sv:50$4266 ($adff) from module uart.
Setting constant 0-bit at position 3 on $flatten\uart_core.\uart_rx.$verific$baud_div_q_reg$uart_rx.sv:50$4266 ($adff) from module uart.
Setting constant 0-bit at position 0 on $flatten\uart_core.\uart_rx.$verific$sreg_q_reg$uart_rx.sv:50$4264 ($adff) from module uart.
Setting constant 0-bit at position 1 on $flatten\uart_core.\uart_rx.$verific$sreg_q_reg$uart_rx.sv:50$4264 ($adff) from module uart.
Setting constant 0-bit at position 2 on $flatten\uart_core.\uart_rx.$verific$sreg_q_reg$uart_rx.sv:50$4264 ($adff) from module uart.
Setting constant 0-bit at position 3 on $flatten\uart_core.\uart_rx.$verific$sreg_q_reg$uart_rx.sv:50$4264 ($adff) from module uart.
Setting constant 0-bit at position 4 on $flatten\uart_core.\uart_rx.$verific$sreg_q_reg$uart_rx.sv:50$4264 ($adff) from module uart.
Setting constant 0-bit at position 5 on $flatten\uart_core.\uart_rx.$verific$sreg_q_reg$uart_rx.sv:50$4264 ($adff) from module uart.
Setting constant 0-bit at position 6 on $flatten\uart_core.\uart_rx.$verific$sreg_q_reg$uart_rx.sv:50$4264 ($adff) from module uart.
Setting constant 0-bit at position 7 on $flatten\uart_core.\uart_rx.$verific$sreg_q_reg$uart_rx.sv:50$4264 ($adff) from module uart.
Setting constant 0-bit at position 8 on $flatten\uart_core.\uart_rx.$verific$sreg_q_reg$uart_rx.sv:50$4264 ($adff) from module uart.
Setting constant 0-bit at position 9 on $flatten\uart_core.\uart_rx.$verific$sreg_q_reg$uart_rx.sv:50$4264 ($adff) from module uart.
Setting constant 0-bit at position 10 on $flatten\uart_core.\uart_rx.$verific$sreg_q_reg$uart_rx.sv:50$4264 ($adff) from module uart.
Setting constant 1-bit at position 0 on $flatten\uart_core.\uart_tx.$verific$sreg_q_reg$uart_tx.sv:54$4383 ($adff) from module uart.
Setting constant 1-bit at position 1 on $flatten\uart_core.\uart_tx.$verific$sreg_q_reg$uart_tx.sv:54$4383 ($adff) from module uart.
Setting constant 1-bit at position 2 on $flatten\uart_core.\uart_tx.$verific$sreg_q_reg$uart_tx.sv:54$4383 ($adff) from module uart.
Setting constant 1-bit at position 3 on $flatten\uart_core.\uart_tx.$verific$sreg_q_reg$uart_tx.sv:54$4383 ($adff) from module uart.
Setting constant 1-bit at position 4 on $flatten\uart_core.\uart_tx.$verific$sreg_q_reg$uart_tx.sv:54$4383 ($adff) from module uart.
Setting constant 1-bit at position 5 on $flatten\uart_core.\uart_tx.$verific$sreg_q_reg$uart_tx.sv:54$4383 ($adff) from module uart.
Setting constant 1-bit at position 6 on $flatten\uart_core.\uart_tx.$verific$sreg_q_reg$uart_tx.sv:54$4383 ($adff) from module uart.
Setting constant 1-bit at position 7 on $flatten\uart_core.\uart_tx.$verific$sreg_q_reg$uart_tx.sv:54$4383 ($adff) from module uart.
Setting constant 1-bit at position 8 on $flatten\uart_core.\uart_tx.$verific$sreg_q_reg$uart_tx.sv:54$4383 ($adff) from module uart.
Setting constant 1-bit at position 9 on $flatten\uart_core.\uart_tx.$verific$sreg_q_reg$uart_tx.sv:54$4383 ($adff) from module uart.
Setting constant 1-bit at position 10 on $flatten\uart_core.\uart_tx.$verific$sreg_q_reg$uart_tx.sv:54$4383 ($adff) from module uart.

yosys> opt_clean

3.15.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..
Removed 58 unused cells and 129 unused wires.
<suppressed ~81 debug messages>

yosys> opt_expr

3.15.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.
<suppressed ~18 debug messages>

3.15.23. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.15.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $flatten\uart_core.\u_uart_rxfifo.$verific$mux_33$prim_fifo_sync.sv:88$1357.
    dead port 2/2 on $mux $flatten\uart_core.\u_uart_rxfifo.$verific$mux_33$prim_fifo_sync.sv:88$1357.
Removed 2 multiplexer ports.
<suppressed ~46 debug messages>

yosys> opt_reduce

3.15.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart.
Performed a total of 0 changes.

yosys> opt_merge

3.15.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.15.27. Executing OPT_DFF pass (perform DFF optimizations).
Handling D = Q on $flatten\uart_core.\u_uart_txfifo.$verific$gen_normal_fifo.fifo_rptr_reg$prim_fifo_sync.sv:103$1367 ($adff) from module uart (removing D path).
Handling D = Q on $flatten\uart_core.$verific$nco_sum_q_reg$uart_core.sv:161$1015 ($adff) from module uart (removing D path).
Handling D = Q on $flatten\uart_core.$verific$allzero_cnt_q_reg$uart_core.sv:97$975 ($adff) from module uart (removing D path).
Setting constant 0-bit at position 0 on $flatten\uart_core.$verific$allzero_cnt_q_reg$uart_core.sv:97$975 ($dlatch) from module uart.
Setting constant 0-bit at position 1 on $flatten\uart_core.$verific$allzero_cnt_q_reg$uart_core.sv:97$975 ($dlatch) from module uart.
Setting constant 0-bit at position 2 on $flatten\uart_core.$verific$allzero_cnt_q_reg$uart_core.sv:97$975 ($dlatch) from module uart.
Setting constant 0-bit at position 3 on $flatten\uart_core.$verific$allzero_cnt_q_reg$uart_core.sv:97$975 ($dlatch) from module uart.
Setting constant 0-bit at position 4 on $flatten\uart_core.$verific$allzero_cnt_q_reg$uart_core.sv:97$975 ($dlatch) from module uart.
Setting constant 0-bit at position 0 on $flatten\uart_core.$verific$nco_sum_q_reg$uart_core.sv:161$1015 ($dlatch) from module uart.
Setting constant 0-bit at position 1 on $flatten\uart_core.$verific$nco_sum_q_reg$uart_core.sv:161$1015 ($dlatch) from module uart.
Setting constant 0-bit at position 2 on $flatten\uart_core.$verific$nco_sum_q_reg$uart_core.sv:161$1015 ($dlatch) from module uart.
Setting constant 0-bit at position 3 on $flatten\uart_core.$verific$nco_sum_q_reg$uart_core.sv:161$1015 ($dlatch) from module uart.
Setting constant 0-bit at position 4 on $flatten\uart_core.$verific$nco_sum_q_reg$uart_core.sv:161$1015 ($dlatch) from module uart.
Setting constant 0-bit at position 5 on $flatten\uart_core.$verific$nco_sum_q_reg$uart_core.sv:161$1015 ($dlatch) from module uart.
Setting constant 0-bit at position 6 on $flatten\uart_core.$verific$nco_sum_q_reg$uart_core.sv:161$1015 ($dlatch) from module uart.
Setting constant 0-bit at position 7 on $flatten\uart_core.$verific$nco_sum_q_reg$uart_core.sv:161$1015 ($dlatch) from module uart.
Setting constant 0-bit at position 8 on $flatten\uart_core.$verific$nco_sum_q_reg$uart_core.sv:161$1015 ($dlatch) from module uart.
Setting constant 0-bit at position 9 on $flatten\uart_core.$verific$nco_sum_q_reg$uart_core.sv:161$1015 ($dlatch) from module uart.
Setting constant 0-bit at position 10 on $flatten\uart_core.$verific$nco_sum_q_reg$uart_core.sv:161$1015 ($dlatch) from module uart.
Setting constant 0-bit at position 11 on $flatten\uart_core.$verific$nco_sum_q_reg$uart_core.sv:161$1015 ($dlatch) from module uart.
Setting constant 0-bit at position 12 on $flatten\uart_core.$verific$nco_sum_q_reg$uart_core.sv:161$1015 ($dlatch) from module uart.
Setting constant 0-bit at position 13 on $flatten\uart_core.$verific$nco_sum_q_reg$uart_core.sv:161$1015 ($dlatch) from module uart.
Setting constant 0-bit at position 14 on $flatten\uart_core.$verific$nco_sum_q_reg$uart_core.sv:161$1015 ($dlatch) from module uart.
Setting constant 0-bit at position 15 on $flatten\uart_core.$verific$nco_sum_q_reg$uart_core.sv:161$1015 ($dlatch) from module uart.
Setting constant 0-bit at position 16 on $flatten\uart_core.$verific$nco_sum_q_reg$uart_core.sv:161$1015 ($dlatch) from module uart.
Setting constant 0-bit at position 0 on $flatten\uart_core.\u_uart_txfifo.$verific$gen_normal_fifo.fifo_rptr_reg$prim_fifo_sync.sv:103$1367 ($dlatch) from module uart.
Setting constant 0-bit at position 1 on $flatten\uart_core.\u_uart_txfifo.$verific$gen_normal_fifo.fifo_rptr_reg$prim_fifo_sync.sv:103$1367 ($dlatch) from module uart.
Setting constant 0-bit at position 2 on $flatten\uart_core.\u_uart_txfifo.$verific$gen_normal_fifo.fifo_rptr_reg$prim_fifo_sync.sv:103$1367 ($dlatch) from module uart.
Setting constant 0-bit at position 3 on $flatten\uart_core.\u_uart_txfifo.$verific$gen_normal_fifo.fifo_rptr_reg$prim_fifo_sync.sv:103$1367 ($dlatch) from module uart.
Setting constant 0-bit at position 4 on $flatten\uart_core.\u_uart_txfifo.$verific$gen_normal_fifo.fifo_rptr_reg$prim_fifo_sync.sv:103$1367 ($dlatch) from module uart.
Setting constant 0-bit at position 5 on $flatten\uart_core.\u_uart_txfifo.$verific$gen_normal_fifo.fifo_rptr_reg$prim_fifo_sync.sv:103$1367 ($dlatch) from module uart.
Setting constant 1-bit at position 0 on $flatten\uart_core.$verific$tx_out_q_reg$uart_core.sv:212$1074 ($adff) from module uart.
Setting constant 0-bit at position 0 on $flatten\uart_core.\uart_rx.$verific$rx_valid_q_reg$uart_rx.sv:94$4308 ($adff) from module uart.

yosys> opt_clean

3.15.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..
Removed 5 unused cells and 18 unused wires.
<suppressed ~8 debug messages>

yosys> opt_expr

3.15.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.
<suppressed ~14 debug messages>

3.15.30. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.15.31. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~44 debug messages>

yosys> opt_reduce

3.15.32. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart.
Performed a total of 0 changes.

yosys> opt_merge

3.15.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.15.34. Executing OPT_DFF pass (perform DFF optimizations).
Handling D = Q on $flatten\uart_core.\u_uart_rxfifo.$verific$gen_normal_fifo.fifo_wptr_reg$prim_fifo_sync.sv:89$1360 ($adff) from module uart (removing D path).
Setting constant 0-bit at position 0 on $flatten\uart_core.\u_uart_rxfifo.$verific$gen_normal_fifo.fifo_wptr_reg$prim_fifo_sync.sv:89$1360 ($dlatch) from module uart.
Setting constant 0-bit at position 1 on $flatten\uart_core.\u_uart_rxfifo.$verific$gen_normal_fifo.fifo_wptr_reg$prim_fifo_sync.sv:89$1360 ($dlatch) from module uart.
Setting constant 0-bit at position 2 on $flatten\uart_core.\u_uart_rxfifo.$verific$gen_normal_fifo.fifo_wptr_reg$prim_fifo_sync.sv:89$1360 ($dlatch) from module uart.
Setting constant 0-bit at position 3 on $flatten\uart_core.\u_uart_rxfifo.$verific$gen_normal_fifo.fifo_wptr_reg$prim_fifo_sync.sv:89$1360 ($dlatch) from module uart.
Setting constant 0-bit at position 4 on $flatten\uart_core.\u_uart_rxfifo.$verific$gen_normal_fifo.fifo_wptr_reg$prim_fifo_sync.sv:89$1360 ($dlatch) from module uart.
Setting constant 0-bit at position 5 on $flatten\uart_core.\u_uart_rxfifo.$verific$gen_normal_fifo.fifo_wptr_reg$prim_fifo_sync.sv:89$1360 ($dlatch) from module uart.

yosys> opt_clean

3.15.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..
Removed 6 unused cells and 24 unused wires.
<suppressed ~19 debug messages>

yosys> opt_expr

3.15.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.
<suppressed ~4 debug messages>

3.15.37. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.15.38. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~43 debug messages>

yosys> opt_reduce

3.15.39. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart.
Performed a total of 0 changes.

yosys> opt_merge

3.15.40. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.15.41. Executing OPT_DFF pass (perform DFF optimizations).
Handling D = Q on $flatten\uart_core.$verific$rx_val_q_reg$uart_core.sv:290$1150 ($adff) from module uart (removing D path).
Setting constant 0-bit at position 0 on $flatten\uart_core.$verific$rx_val_q_reg$uart_core.sv:290$1150 ($dlatch) from module uart.
Setting constant 0-bit at position 1 on $flatten\uart_core.$verific$rx_val_q_reg$uart_core.sv:290$1150 ($dlatch) from module uart.
Setting constant 0-bit at position 2 on $flatten\uart_core.$verific$rx_val_q_reg$uart_core.sv:290$1150 ($dlatch) from module uart.
Setting constant 0-bit at position 3 on $flatten\uart_core.$verific$rx_val_q_reg$uart_core.sv:290$1150 ($dlatch) from module uart.
Setting constant 0-bit at position 4 on $flatten\uart_core.$verific$rx_val_q_reg$uart_core.sv:290$1150 ($dlatch) from module uart.
Setting constant 0-bit at position 5 on $flatten\uart_core.$verific$rx_val_q_reg$uart_core.sv:290$1150 ($dlatch) from module uart.
Setting constant 0-bit at position 6 on $flatten\uart_core.$verific$rx_val_q_reg$uart_core.sv:290$1150 ($dlatch) from module uart.
Setting constant 0-bit at position 7 on $flatten\uart_core.$verific$rx_val_q_reg$uart_core.sv:290$1150 ($dlatch) from module uart.
Setting constant 0-bit at position 8 on $flatten\uart_core.$verific$rx_val_q_reg$uart_core.sv:290$1150 ($dlatch) from module uart.
Setting constant 0-bit at position 9 on $flatten\uart_core.$verific$rx_val_q_reg$uart_core.sv:290$1150 ($dlatch) from module uart.
Setting constant 0-bit at position 10 on $flatten\uart_core.$verific$rx_val_q_reg$uart_core.sv:290$1150 ($dlatch) from module uart.
Setting constant 0-bit at position 11 on $flatten\uart_core.$verific$rx_val_q_reg$uart_core.sv:290$1150 ($dlatch) from module uart.
Setting constant 0-bit at position 12 on $flatten\uart_core.$verific$rx_val_q_reg$uart_core.sv:290$1150 ($dlatch) from module uart.
Setting constant 0-bit at position 13 on $flatten\uart_core.$verific$rx_val_q_reg$uart_core.sv:290$1150 ($dlatch) from module uart.
Setting constant 0-bit at position 14 on $flatten\uart_core.$verific$rx_val_q_reg$uart_core.sv:290$1150 ($dlatch) from module uart.
Setting constant 0-bit at position 15 on $flatten\uart_core.$verific$rx_val_q_reg$uart_core.sv:290$1150 ($dlatch) from module uart.

yosys> opt_clean

3.15.42. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..
Removed 0 unused cells and 2 unused wires.
<suppressed ~2 debug messages>

yosys> opt_expr

3.15.43. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.

3.15.44. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.15.45. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~43 debug messages>

yosys> opt_reduce

3.15.46. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart.
    New ctrl vector for $pmux cell $flatten\u_reg.$verific$select_279$uart_reg_top.sv:1584$2939: { \u_reg.addr_hit [0] $flatten\u_reg.$verific$n1170$1528 $flatten\u_reg.$verific$n1173$1531 $flatten\u_reg.$verific$n1182$1540 $flatten\u_reg.$verific$n1193$1551 }
  Optimizing cells in module \uart.
Performed a total of 1 changes.

yosys> opt_merge

3.15.47. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.15.48. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.15.49. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..
Removed 2 unused cells and 2 unused wires.
<suppressed ~3 debug messages>

yosys> opt_expr

3.15.50. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.

3.15.51. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.15.52. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~43 debug messages>

yosys> opt_reduce

3.15.53. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart.
Performed a total of 0 changes.

yosys> opt_merge

3.15.54. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.15.55. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.15.56. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..

yosys> opt_expr

3.15.57. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.

3.15.58. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

3.16. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.16.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.16.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.16.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.16.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..

yosys> fsm_opt

3.16.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.16.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.16.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.16.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat

3.17. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.17.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.

yosys> opt_merge -nomux

3.17.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.17.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~43 debug messages>

yosys> opt_reduce

3.17.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart.
Performed a total of 0 changes.

yosys> opt_merge

3.17.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.17.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\uart_core.\u_uart_txfifo.$verific$gen_normal_fifo.fifo_wptr_reg$prim_fifo_sync.sv:89$1360 ($adff) from module uart (D = $flatten\uart_core.\u_uart_txfifo.$verific$n112$1318, Q = \uart_core.u_uart_txfifo.gen_normal_fifo.fifo_wptr).
Adding EN signal on $flatten\uart_core.\u_uart_rxfifo.$verific$gen_normal_fifo.fifo_rptr_reg$prim_fifo_sync.sv:103$1367 ($adff) from module uart (D = $flatten\uart_core.\u_uart_rxfifo.$verific$n181$1324, Q = \uart_core.u_uart_rxfifo.gen_normal_fifo.fifo_rptr).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$rspop_reg$tlul_adapter_reg.sv:86$3197 ($adff) from module uart (D = { 2'00 \u_reg.u_reg_if.rd_req }, Q = \u_reg.u_reg_if.rspop).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$reqsz_reg$tlul_adapter_reg.sv:86$3196 ($adff) from module uart (D = \tl_i.a_size, Q = \u_reg.u_reg_if.reqsz).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$reqid_reg$tlul_adapter_reg.sv:86$3195 ($adff) from module uart (D = \tl_i.a_source, Q = \u_reg.u_reg_if.reqid).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$rdata_reg$tlul_adapter_reg.sv:96$3206 ($adff) from module uart (D = $flatten\u_reg.\u_reg_if.$verific$n183$3155, Q = \u_reg.u_reg_if.rdata).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$outstanding_reg$tlul_adapter_reg.sv:73$3185 ($adff) from module uart (D = $flatten\u_reg.\u_reg_if.$verific$n74$3127, Q = \u_reg.u_reg_if.outstanding).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$error_reg$tlul_adapter_reg.sv:96$3207 ($adff) from module uart (D = $flatten\u_reg.\u_reg_if.$verific$n181$3129, Q = \u_reg.u_reg_if.error).
Adding EN signal on $flatten\u_reg.\u_intr_state_tx_watermark.$verific$q_reg[0]$prim_subreg.sv:72$2981 ($adff) from module uart (D = \u_reg.hw2reg.intr_state.tx_watermark.d, Q = \u_reg.u_intr_state_tx_watermark.q).
Adding EN signal on $flatten\u_reg.\u_intr_state_tx_empty.$verific$q_reg[0]$prim_subreg.sv:72$2981 ($adff) from module uart (D = \u_reg.hw2reg.intr_state.tx_empty.d, Q = \u_reg.u_intr_state_tx_empty.q).
Adding EN signal on $flatten\u_reg.\u_intr_state_rx_watermark.$verific$q_reg[0]$prim_subreg.sv:72$2981 ($adff) from module uart (D = \u_reg.hw2reg.intr_state.rx_watermark.d, Q = \u_reg.u_intr_state_rx_watermark.q).
Adding EN signal on $flatten\u_reg.\u_intr_state_rx_timeout.$verific$q_reg[0]$prim_subreg.sv:72$2981 ($adff) from module uart (D = \u_reg.hw2reg.intr_state.rx_timeout.d, Q = \u_reg.u_intr_state_rx_timeout.q).
Adding EN signal on $flatten\u_reg.\u_intr_state_rx_parity_err.$verific$q_reg[0]$prim_subreg.sv:72$2981 ($adff) from module uart (D = \u_reg.hw2reg.intr_state.rx_parity_err.d, Q = \u_reg.u_intr_state_rx_parity_err.q).
Adding EN signal on $flatten\u_reg.\u_intr_state_rx_overflow.$verific$q_reg[0]$prim_subreg.sv:72$2981 ($adff) from module uart (D = \u_reg.hw2reg.intr_state.rx_overflow.d, Q = \u_reg.u_intr_state_rx_overflow.q).
Adding EN signal on $flatten\u_reg.\u_intr_state_rx_frame_err.$verific$q_reg[0]$prim_subreg.sv:72$2981 ($adff) from module uart (D = \u_reg.hw2reg.intr_state.rx_frame_err.d, Q = \u_reg.u_intr_state_rx_frame_err.q).
Adding EN signal on $flatten\u_reg.\u_intr_state_rx_break_err.$verific$q_reg[0]$prim_subreg.sv:72$2981 ($adff) from module uart (D = \u_reg.hw2reg.intr_state.rx_break_err.d, Q = \u_reg.u_intr_state_rx_break_err.q).
Adding EN signal on $flatten\u_reg.$verific$intg_err_q_reg$uart_reg_top.sv:61$1684 ($adff) from module uart (D = 1'1, Q = \u_reg.intg_err_q).
Adding EN signal on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.$verific$gen_async.state_q_reg$prim_diff_decode.sv:172$782 ($adff) from module uart (D = \gen_alert_tx[0].u_prim_alert_sender.i_decode_ping.gen_async.state_d, Q = \gen_alert_tx[0].u_prim_alert_sender.i_decode_ping.gen_async.state_q).
Adding EN signal on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.$verific$gen_async.state_q_reg$prim_diff_decode.sv:172$782 ($adff) from module uart (D = \gen_alert_tx[0].u_prim_alert_sender.i_decode_ack.gen_async.state_d, Q = \gen_alert_tx[0].u_prim_alert_sender.i_decode_ack.gen_async.state_q).
Adding EN signal on $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$state_q_reg$prim_alert_sender.sv:235$692 ($adff) from module uart (D = \gen_alert_tx[0].u_prim_alert_sender.state_d, Q = \gen_alert_tx[0].u_prim_alert_sender.state_q).
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4520 ($adffe) from module uart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4520 ($adffe) from module uart.

yosys> opt_clean

3.17.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..
Removed 16 unused cells and 16 unused wires.
<suppressed ~17 debug messages>

yosys> opt_expr

3.17.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.
<suppressed ~2 debug messages>

3.17.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.17.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~30 debug messages>

yosys> opt_reduce

3.17.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart.
Performed a total of 0 changes.

yosys> opt_merge

3.17.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_dff -sat

3.17.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.17.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.17.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.

3.17.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.17.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~30 debug messages>

yosys> opt_reduce

3.17.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart.
Performed a total of 0 changes.

yosys> opt_merge

3.17.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.17.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.17.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..

yosys> opt_expr

3.17.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.

3.17.23. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.18. Executing WREDUCE pass (reducing word size of cells).
Removed top 2 bits (of 3) from port B of cell uart.$auto$opt_dff.cc:195:make_patterns_logic$4548 ($ne).
Removed top 2 bits (of 5) from port B of cell uart.$auto$opt_dff.cc:195:make_patterns_logic$4553 ($ne).
Removed top 1 bits (of 5) from port B of cell uart.$auto$opt_dff.cc:195:make_patterns_logic$4555 ($ne).
Removed top 1 bits (of 6) from port B of cell uart.$flatten\uart_core.\u_uart_rxfifo.$verific$sub_10$prim_fifo_sync.sv:70$1338 ($sub).
Removed top 5 bits (of 6) from port B of cell uart.$flatten\uart_core.\u_uart_rxfifo.$verific$add_45$prim_fifo_sync.sv:101$1363 ($add).
Removed top 1 bits (of 3) from port B of cell uart.$auto$opt_dff.cc:195:make_patterns_logic$4541 ($ne).
Removed top 5 bits (of 6) from port B of cell uart.$flatten\uart_core.\u_uart_txfifo.$verific$add_31$prim_fifo_sync.sv:87$1355 ($add).
Removed top 1 bits (of 6) from port B of cell uart.$flatten\uart_core.\u_uart_txfifo.$verific$add_11$prim_fifo_sync.sv:70$1339 ($add).
Removed top 4 bits (of 6) from port B of cell uart.$flatten\uart_core.$verific$LessThan_135$uart_core.sv:299$1151 ($lt).
Removed top 5 bits (of 6) from port A of cell uart.$flatten\uart_core.$verific$LessThan_164$uart_core.sv:334$1173 ($le).
Removed top 5 bits (of 6) from port A of cell uart.$flatten\uart_core.\u_uart_rxfifo.$verific$sub_9$prim_fifo_sync.sv:69$1337 ($sub).
Removed top 1 bits (of 6) from port B of cell uart.$flatten\uart_core.\u_uart_rxfifo.$verific$sub_9$prim_fifo_sync.sv:69$1337 ($sub).
Removed top 2 bits (of 3) from port B of cell uart.$flatten\u_reg.\u_reg_if.$verific$equal_8$tlul_adapter_reg.sv:56$3165 ($eq).
Removed top 1 bits (of 4) from port B of cell uart.$flatten\u_reg.\u_reg_if.$verific$equal_76$prim_mubi_pkg.sv:27$3218 ($eq).
Removed top 3 bits (of 4) from port B of cell uart.$flatten\u_reg.$verific$equal_21$uart_reg_top.sv:1352$2766 ($eq).
Removed top 2 bits (of 4) from port B of cell uart.$flatten\u_reg.$verific$equal_23$uart_reg_top.sv:1353$2767 ($eq).
Removed top 2 bits (of 4) from port B of cell uart.$flatten\u_reg.$verific$equal_25$uart_reg_top.sv:1354$2768 ($eq).
Removed top 1 bits (of 4) from port B of cell uart.$flatten\u_reg.$verific$equal_27$uart_reg_top.sv:1355$2769 ($eq).
Removed top 1 bits (of 4) from port B of cell uart.$flatten\u_reg.$verific$equal_29$uart_reg_top.sv:1356$2770 ($eq).
Removed top 1 bits (of 4) from port B of cell uart.$flatten\u_reg.$verific$equal_31$uart_reg_top.sv:1357$2771 ($eq).
Removed top 1 bits (of 4) from port B of cell uart.$flatten\u_reg.$verific$equal_33$uart_reg_top.sv:1358$2772 ($eq).
Removed top 31 bits (of 32) from port A of cell uart.$flatten\u_reg.\u_reg_if.\u_err.$verific$shift_left_23$tlul_err.sv:49$3833 ($shl).
Removed top 28 bits (of 32) from port Y of cell uart.$flatten\u_reg.\u_reg_if.\u_err.$verific$shift_left_23$tlul_err.sv:49$3833 ($shl).
Removed top 1 bits (of 3) from mux cell uart.$flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$mux_22$prim_alert_sender.sv:142$657 ($mux).
Removed top 2 bits (of 4) from wire uart.$flatten\gen_alert_tx[0].u_prim_alert_sender.$auto$bmuxmap.cc:58:execute$4468.
Removed top 1 bits (of 2) from wire uart.$flatten\gen_alert_tx[0].u_prim_alert_sender.$auto$bmuxmap.cc:58:execute$4473.
Removed top 1 bits (of 4) from wire uart.$flatten\gen_alert_tx[0].u_prim_alert_sender.$auto$bmuxmap.cc:58:execute$4488.
Removed top 1 bits (of 4) from wire uart.$flatten\gen_alert_tx[0].u_prim_alert_sender.$auto$bmuxmap.cc:58:execute$4498.
Removed top 1 bits (of 3) from wire uart.$flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$n38$621.
Removed top 1 bits (of 2) from wire uart.$flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.$auto$bmuxmap.cc:58:execute$4443.
Removed top 1 bits (of 2) from wire uart.$flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.$auto$bmuxmap.cc:58:execute$4448.
Removed top 3 bits (of 4) from wire uart.$flatten\u_reg.$verific$n780$1555.
Removed top 1 bits (of 4) from wire uart.$flatten\u_reg.$verific$n837$1557.
Removed top 2 bits (of 4) from wire uart.$flatten\u_reg.$verific$n852$1558.

yosys> peepopt

3.19. Executing PEEPOPT pass (run peephole optimizers).

yosys> opt_clean

3.20. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..
Removed 0 unused cells and 11 unused wires.
<suppressed ~1 debug messages>

yosys> bmuxmap

3.21. Executing BMUXMAP pass.

yosys> demuxmap

3.22. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> alumacc

3.23. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module uart:
  creating $macc model for $flatten\uart_core.\u_uart_rxfifo.$verific$add_45$prim_fifo_sync.sv:101$1363 ($add).
  creating $macc model for $flatten\uart_core.\u_uart_rxfifo.$verific$sub_10$prim_fifo_sync.sv:70$1338 ($sub).
  creating $macc model for $flatten\uart_core.\u_uart_rxfifo.$verific$sub_9$prim_fifo_sync.sv:69$1337 ($sub).
  creating $macc model for $flatten\uart_core.\u_uart_txfifo.$verific$add_11$prim_fifo_sync.sv:70$1339 ($add).
  creating $macc model for $flatten\uart_core.\u_uart_txfifo.$verific$add_31$prim_fifo_sync.sv:87$1355 ($add).
  creating $alu model for $macc $flatten\uart_core.\u_uart_txfifo.$verific$add_31$prim_fifo_sync.sv:87$1355.
  creating $alu model for $macc $flatten\uart_core.\u_uart_txfifo.$verific$add_11$prim_fifo_sync.sv:70$1339.
  creating $alu model for $macc $flatten\uart_core.\u_uart_rxfifo.$verific$sub_9$prim_fifo_sync.sv:69$1337.
  creating $alu model for $macc $flatten\uart_core.\u_uart_rxfifo.$verific$sub_10$prim_fifo_sync.sv:70$1338.
  creating $alu model for $macc $flatten\uart_core.\u_uart_rxfifo.$verific$add_45$prim_fifo_sync.sv:101$1363.
  creating $alu model for $flatten\uart_core.$verific$LessThan_135$uart_core.sv:299$1151 ($lt): new $alu
  creating $alu model for $flatten\uart_core.$verific$LessThan_164$uart_core.sv:334$1173 ($le): new $alu
  creating $alu cell for $flatten\uart_core.$verific$LessThan_164$uart_core.sv:334$1173: $auto$alumacc.cc:485:replace_alu$4571
  creating $alu cell for $flatten\uart_core.$verific$LessThan_135$uart_core.sv:299$1151: $auto$alumacc.cc:485:replace_alu$4580
  creating $alu cell for $flatten\uart_core.\u_uart_rxfifo.$verific$add_45$prim_fifo_sync.sv:101$1363: $auto$alumacc.cc:485:replace_alu$4591
  creating $alu cell for $flatten\uart_core.\u_uart_rxfifo.$verific$sub_10$prim_fifo_sync.sv:70$1338: $auto$alumacc.cc:485:replace_alu$4594
  creating $alu cell for $flatten\uart_core.\u_uart_rxfifo.$verific$sub_9$prim_fifo_sync.sv:69$1337: $auto$alumacc.cc:485:replace_alu$4597
  creating $alu cell for $flatten\uart_core.\u_uart_txfifo.$verific$add_11$prim_fifo_sync.sv:70$1339: $auto$alumacc.cc:485:replace_alu$4600
  creating $alu cell for $flatten\uart_core.\u_uart_txfifo.$verific$add_31$prim_fifo_sync.sv:87$1355: $auto$alumacc.cc:485:replace_alu$4603
  created 7 $alu and 0 $macc cells.

yosys> opt_expr

3.24. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.

yosys> opt_merge -nomux

3.25. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.26. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~30 debug messages>

yosys> opt_reduce

3.27. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart.
Performed a total of 0 changes.

yosys> opt_merge

3.28. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

yosys> opt_share

3.29. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $mux $flatten\uart_core.\u_uart_rxfifo.$verific$mux_12$prim_fifo_sync.sv:70$1340 in front of them:
        $auto$alumacc.cc:485:replace_alu$4594
        $auto$alumacc.cc:485:replace_alu$4597


yosys> opt_dff

3.30. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.31. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..
Removed 0 unused cells and 8 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.32. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.
<suppressed ~1 debug messages>

yosys> opt_muxtree

3.33. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~31 debug messages>

yosys> opt_reduce

3.34. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart.
Performed a total of 0 changes.

yosys> opt_merge

3.35. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

yosys> opt_share

3.36. Executing OPT_SHARE pass.

yosys> opt_dff

3.37. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.38. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.39. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.
MAX OPT ITERATION = 2

yosys> stat

3.40. Printing statistics.

=== uart ===

   Number of wires:               1714
   Number of wire bits:           4743
   Number of public wires:        1493
   Number of public wire bits:    4298
   Number of memories:               1
   Number of memory bits:          256
   Number of processes:              0
   Number of cells:                391
     $adff                          20
     $adffe                         20
     $alu                            6
     $and                           52
     $eq                            20
     $logic_not                      5
     $memrd_v2                       1
     $memwr_v2                       1
     $mux                           90
     $ne                             7
     $not                           52
     $or                            58
     $pmux                           1
     $reduce_and                     8
     $reduce_bool                    1
     $reduce_or                     14
     $reduce_xor                    28
     $shl                            1
     $xor                            6


yosys> memory -nomap

3.41. Executing MEMORY pass.

yosys> opt_mem

3.41.1. Executing OPT_MEM pass (optimize memories).
uart.uart_core.u_uart_rxfifo.gen_normal_fifo.storage: removing const-x lane 0
uart.uart_core.u_uart_rxfifo.gen_normal_fifo.storage: removing const-x lane 1
uart.uart_core.u_uart_rxfifo.gen_normal_fifo.storage: removing const-x lane 2
uart.uart_core.u_uart_rxfifo.gen_normal_fifo.storage: removing const-x lane 3
uart.uart_core.u_uart_rxfifo.gen_normal_fifo.storage: removing const-x lane 4
uart.uart_core.u_uart_rxfifo.gen_normal_fifo.storage: removing const-x lane 5
uart.uart_core.u_uart_rxfifo.gen_normal_fifo.storage: removing const-x lane 6
uart.uart_core.u_uart_rxfifo.gen_normal_fifo.storage: removing const-x lane 7
Performed a total of 2 transformations.

yosys> opt_mem_priority

3.41.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.41.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.41.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.41.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.41.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..

yosys> memory_share

3.41.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.41.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.41.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..

yosys> memory_collect

3.41.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.42. Printing statistics.

=== uart ===

   Number of wires:               1714
   Number of wire bits:           4743
   Number of public wires:        1493
   Number of public wire bits:    4298
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                389
     $adff                          20
     $adffe                         20
     $alu                            6
     $and                           52
     $eq                            20
     $logic_not                      5
     $mux                           90
     $ne                             7
     $not                           52
     $or                            58
     $pmux                           1
     $reduce_and                     8
     $reduce_bool                    1
     $reduce_or                     14
     $reduce_xor                    28
     $shl                            1
     $xor                            6


yosys> muxpack

3.43. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~83 debug messages>

yosys> opt_clean

3.44. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..

yosys> pmuxtree

3.45. Executing PMUXTREE pass.

yosys> muxpack

3.46. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~87 debug messages>

yosys> memory_map

3.47. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> stat

3.48. Printing statistics.

=== uart ===

   Number of wires:               1722
   Number of wire bits:           4906
   Number of public wires:        1493
   Number of public wire bits:    4298
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                396
     $adff                          20
     $adffe                         20
     $alu                            6
     $and                           52
     $eq                            20
     $logic_not                      5
     $mux                           95
     $ne                             7
     $not                           53
     $or                            58
     $reduce_and                     8
     $reduce_bool                    1
     $reduce_or                     16
     $reduce_xor                    28
     $shl                            1
     $xor                            6


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.49. Executing TECHMAP pass (map to technology primitives).

3.49.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.49.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.49.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $eq.
Using template $paramod$a40b3a69ab2154dca9743e30e1e84efb03b892b4\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $adffe.
Using template $paramod$32efbfac1c4dc57230cf86180788fdfd12e3b511\_90_alu for cells of type $alu.
Using template $paramod$9970e6a829a899c1fae39c88305c3c80d98a6bfd\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $adff.
Using template $paramod$e04283ca12514baf3d204c6994bec8f178dd89f8\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_xor.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod$constmap:66d421c313e4e958be776b99540ac2de3b59fdbc$paramod$77562a466236eb4a6d905351a0995599b75075cb\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000110 for cells of type $lcu.
No more expansions possible.
<suppressed ~1209 debug messages>

yosys> stat

3.50. Printing statistics.

=== uart ===

   Number of wires:               2236
   Number of wire bits:          15112
   Number of public wires:        1493
   Number of public wire bits:    4298
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1799
     $_AND_                        172
     $_DFFE_PN0P_                   73
     $_DFF_PN0_                     12
     $_DFF_PN1_                      8
     $_MUX_                        398
     $_NOT_                        124
     $_OR_                         257
     $_XOR_                        755


yosys> opt_expr

3.51. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.
<suppressed ~717 debug messages>

yosys> opt_merge -nomux

3.52. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
<suppressed ~723 debug messages>
Removed a total of 241 cells.

yosys> opt_muxtree

3.53. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.54. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart.
Performed a total of 0 changes.

yosys> opt_merge

3.55. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

yosys> opt_share

3.56. Executing OPT_SHARE pass.

yosys> opt_dff

3.57. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.58. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..
Removed 28 unused cells and 439 unused wires.
<suppressed ~29 debug messages>

yosys> opt_expr

3.59. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.
<suppressed ~16 debug messages>

yosys> opt_muxtree

3.60. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.61. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart.
Performed a total of 0 changes.

yosys> opt_merge

3.62. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

yosys> opt_share

3.63. Executing OPT_SHARE pass.

yosys> opt_dff

3.64. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.65. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..
Removed 0 unused cells and 5 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.66. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.
MAX OPT ITERATION = 2

yosys> opt -fast -full

3.67. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.67.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.
<suppressed ~92 debug messages>

yosys> opt_merge

3.67.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

yosys> opt_dff

3.67.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$6551 ($_DFFE_PN0P_) from module uart (D = \gen_alert_tx[0].u_prim_alert_sender.i_decode_ack.gen_async.state_d [0], Q = \gen_alert_tx[0].u_prim_alert_sender.i_decode_ack.gen_async.state_q [0]).
Adding EN signal on $auto$ff.cc:262:slice$6407 ($_DFFE_PN0P_) from module uart (D = \gen_alert_tx[0].u_prim_alert_sender.i_decode_ping.gen_async.state_d [0], Q = \gen_alert_tx[0].u_prim_alert_sender.i_decode_ping.gen_async.state_q [0]).

yosys> opt_clean

3.67.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..
Removed 0 unused cells and 11 unused wires.
<suppressed ~1 debug messages>

3.67.5. Rerunning OPT passes. (Removed registers in this run.)

yosys> opt_expr -full

3.67.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.
<suppressed ~13 debug messages>

yosys> opt_merge

3.67.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

yosys> opt_dff

3.67.8. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.67.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

3.67.10. Finished fast OPT passes.

yosys> techmap -map +/techmap.v

3.68. Executing TECHMAP pass (map to technology primitives).

3.68.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.68.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> opt -sat

3.69. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.69.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.

yosys> opt_merge -nomux

3.69.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.69.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.69.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart.
Performed a total of 0 changes.

yosys> opt_merge

3.69.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.69.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.69.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..

yosys> opt_expr

3.69.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.

3.69.9. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

3.70. Executing ABC pass (technology mapping using ABC).

3.70.1. Summary of detected clock domains:
  19 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7113, arst=!\rst_ni, srst={ }
  13 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7102, arst=!\rst_ni, srst={ }
  7 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$4549, arst=!\rst_ni, srst={ }
  62 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$4556, arst=!\rst_ni, srst={ }
  8 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$4542, arst=!\rst_ni, srst={ }
  6 cells in clk=\clk_i, en=\u_reg.u_intr_state_tx_watermark.wr_en, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$4525, arst=!\rst_ni, srst={ }
  343 cells in clk=\clk_i, en=\u_reg.u_reg_if.a_ack, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=\u_reg.u_intr_state_tx_empty.wr_en, arst=!\rst_ni, srst={ }
  6 cells in clk=\clk_i, en=\u_reg.u_intr_state_rx_watermark.wr_en, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=\u_reg.u_intr_state_rx_timeout.wr_en, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=\u_reg.u_intr_state_rx_parity_err.wr_en, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=\u_reg.u_intr_state_rx_overflow.wr_en, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=\u_reg.u_intr_state_rx_frame_err.wr_en, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=\u_reg.u_intr_state_rx_break_err.wr_en, arst=!\rst_ni, srst={ }
  257 cells in clk=\clk_i, en=\u_reg.intg_err, arst=!\rst_ni, srst={ }
  44 cells in clk=\clk_i, en=\uart_core.u_uart_txfifo.gen_normal_fifo.fifo_incr_wptr, arst=!\rst_ni, srst={ }
  89 cells in clk=\clk_i, en={ }, arst=!\rst_ni, srst={ }
  47 cells in clk=\clk_i, en=\uart_core.u_uart_rxfifo.gen_normal_fifo.fifo_incr_rptr, arst=!\rst_ni, srst={ }

3.70.2. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7113, asynchronously reset by !\rst_ni
Extracted 19 gates and 30 wires to a netlist network with 10 inputs and 9 outputs.

3.70.2.1. Executing ABC.

3.70.3. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7102, asynchronously reset by !\rst_ni
Extracted 13 gates and 20 wires to a netlist network with 6 inputs and 6 outputs.

3.70.3.1. Executing ABC.

3.70.4. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4549, asynchronously reset by !\rst_ni
Extracted 7 gates and 14 wires to a netlist network with 7 inputs and 5 outputs.

3.70.4.1. Executing ABC.

3.70.5. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4556, asynchronously reset by !\rst_ni
Extracted 62 gates and 70 wires to a netlist network with 6 inputs and 6 outputs.

3.70.5.1. Executing ABC.

3.70.6. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4542, asynchronously reset by !\rst_ni
Extracted 8 gates and 18 wires to a netlist network with 9 inputs and 6 outputs.

3.70.6.1. Executing ABC.

3.70.7. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u_reg.u_intr_state_tx_watermark.wr_en, asynchronously reset by !\rst_ni
Extracted 6 gates and 12 wires to a netlist network with 5 inputs and 2 outputs.

3.70.7.1. Executing ABC.

3.70.8. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$4525, asynchronously reset by !\rst_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 3 outputs.

3.70.8.1. Executing ABC.

3.70.9. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u_reg.u_reg_if.a_ack, asynchronously reset by !\rst_ni
Extracted 343 gates and 413 wires to a netlist network with 68 inputs and 48 outputs.

3.70.9.1. Executing ABC.

3.70.10. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u_reg.u_intr_state_tx_empty.wr_en, asynchronously reset by !\rst_ni
Extracted 4 gates and 8 wires to a netlist network with 3 inputs and 2 outputs.

3.70.10.1. Executing ABC.

3.70.11. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u_reg.u_intr_state_rx_watermark.wr_en, asynchronously reset by !\rst_ni
Extracted 6 gates and 12 wires to a netlist network with 5 inputs and 2 outputs.

3.70.11.1. Executing ABC.

3.70.12. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u_reg.u_intr_state_rx_timeout.wr_en, asynchronously reset by !\rst_ni
Extracted 4 gates and 8 wires to a netlist network with 3 inputs and 2 outputs.

3.70.12.1. Executing ABC.

3.70.13. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u_reg.u_intr_state_rx_parity_err.wr_en, asynchronously reset by !\rst_ni
Extracted 4 gates and 8 wires to a netlist network with 3 inputs and 2 outputs.

3.70.13.1. Executing ABC.

3.70.14. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u_reg.u_intr_state_rx_overflow.wr_en, asynchronously reset by !\rst_ni
Extracted 4 gates and 8 wires to a netlist network with 3 inputs and 2 outputs.

3.70.14.1. Executing ABC.

3.70.15. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u_reg.u_intr_state_rx_frame_err.wr_en, asynchronously reset by !\rst_ni
Extracted 4 gates and 8 wires to a netlist network with 3 inputs and 2 outputs.

3.70.15.1. Executing ABC.

3.70.16. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u_reg.u_intr_state_rx_break_err.wr_en, asynchronously reset by !\rst_ni
Extracted 11 gates and 20 wires to a netlist network with 8 inputs and 7 outputs.

3.70.16.1. Executing ABC.

3.70.17. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u_reg.intg_err, asynchronously reset by !\rst_ni
Extracted 257 gates and 348 wires to a netlist network with 90 inputs and 2 outputs.

3.70.17.1. Executing ABC.

3.70.18. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \uart_core.u_uart_txfifo.gen_normal_fifo.fifo_incr_wptr, asynchronously reset by !\rst_ni
Extracted 44 gates and 45 wires to a netlist network with 0 inputs and 9 outputs.

3.70.18.1. Executing ABC.

3.70.19. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, asynchronously reset by !\rst_ni
Extracted 89 gates and 123 wires to a netlist network with 33 inputs and 31 outputs.

3.70.19.1. Executing ABC.

3.70.20. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \uart_core.u_uart_rxfifo.gen_normal_fifo.fifo_incr_rptr, asynchronously reset by !\rst_ni
Extracted 47 gates and 53 wires to a netlist network with 6 inputs and 13 outputs.

3.70.20.1. Executing ABC.

yosys> abc -dff

3.71. Executing ABC pass (technology mapping using ABC).

3.71.1. Summary of detected clock domains:
  4 cells in clk=\clk_i, en=$abc$7616$u_reg.u_intr_state_rx_parity_err.wr_en, arst=!\rst_ni, srst={ }
  7 cells in clk=\clk_i, en=$abc$7604$u_reg.u_intr_state_rx_watermark.wr_en, arst=!\rst_ni, srst={ }
  12 cells in clk=\clk_i, en=$abc$7232$auto$opt_dff.cc:219:make_patterns_logic$4549, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$7599$u_reg.u_intr_state_tx_empty.wr_en, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$7300$auto$opt_dff.cc:194:make_patterns_logic$4525, arst=!\rst_ni, srst={ }
  5 cells in clk=\clk_i, en=$abc$7293$u_reg.u_intr_state_tx_watermark.wr_en, arst=!\rst_ni, srst={ }
  17 cells in clk=\clk_i, en=$abc$7282$auto$opt_dff.cc:219:make_patterns_logic$4542, arst=!\rst_ni, srst={ }
  34 cells in clk=\clk_i, en=$abc$7240$auto$opt_dff.cc:219:make_patterns_logic$4556, arst=!\rst_ni, srst={ }
  32 cells in clk=\clk_i, en=$abc$7899$uart_core.u_uart_txfifo.gen_normal_fifo.fifo_incr_wptr, arst=!\rst_ni, srst={ }
  225 cells in clk=\clk_i, en=$abc$7643$u_reg.intg_err, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$7611$u_reg.u_intr_state_rx_timeout.wr_en, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$7631$u_reg.u_intr_state_rx_break_err.wr_en, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$7621$u_reg.u_intr_state_rx_overflow.wr_en, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$7626$u_reg.u_intr_state_rx_frame_err.wr_en, arst=!\rst_ni, srst={ }
  12 cells in clk=\clk_i, en=$abc$7198$auto$opt_dff.cc:219:make_patterns_logic$7113, arst=!\rst_ni, srst={ }
  7 cells in clk=\clk_i, en=$abc$7218$auto$opt_dff.cc:219:make_patterns_logic$7102, arst=!\rst_ni, srst={ }
  70 cells in clk=\clk_i, en={ }, arst=!\rst_ni, srst={ }
  230 cells in clk=\clk_i, en=$abc$7307$u_reg.u_reg_if.a_ack, arst=!\rst_ni, srst={ }
  56 cells in clk=\clk_i, en=$abc$7987$uart_core.u_uart_rxfifo.gen_normal_fifo.fifo_incr_rptr, arst=!\rst_ni, srst={ }

3.71.2. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$7616$u_reg.u_intr_state_rx_parity_err.wr_en, asynchronously reset by !\rst_ni
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 2 outputs.

3.71.2.1. Executing ABC.

3.71.3. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$7604$u_reg.u_intr_state_rx_watermark.wr_en, asynchronously reset by !\rst_ni
Extracted 7 gates and 13 wires to a netlist network with 6 inputs and 2 outputs.

3.71.3.1. Executing ABC.

3.71.4. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$7232$auto$opt_dff.cc:219:make_patterns_logic$4549, asynchronously reset by !\rst_ni
Extracted 12 gates and 22 wires to a netlist network with 10 inputs and 5 outputs.

3.71.4.1. Executing ABC.

3.71.5. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$7599$u_reg.u_intr_state_tx_empty.wr_en, asynchronously reset by !\rst_ni
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 2 outputs.

3.71.5.1. Executing ABC.

3.71.6. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$7300$auto$opt_dff.cc:194:make_patterns_logic$4525, asynchronously reset by !\rst_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 3 outputs.

3.71.6.1. Executing ABC.

3.71.7. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$7293$u_reg.u_intr_state_tx_watermark.wr_en, asynchronously reset by !\rst_ni
Extracted 5 gates and 9 wires to a netlist network with 4 inputs and 2 outputs.

3.71.7.1. Executing ABC.

3.71.8. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$7282$auto$opt_dff.cc:219:make_patterns_logic$4542, asynchronously reset by !\rst_ni
Extracted 17 gates and 27 wires to a netlist network with 10 inputs and 6 outputs.

3.71.8.1. Executing ABC.

3.71.9. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$7240$auto$opt_dff.cc:219:make_patterns_logic$4556, asynchronously reset by !\rst_ni
Extracted 34 gates and 39 wires to a netlist network with 5 inputs and 9 outputs.

3.71.9.1. Executing ABC.

3.71.10. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$7899$uart_core.u_uart_txfifo.gen_normal_fifo.fifo_incr_wptr, asynchronously reset by !\rst_ni
Extracted 32 gates and 34 wires to a netlist network with 2 inputs and 12 outputs.

3.71.10.1. Executing ABC.

3.71.11. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$7643$u_reg.intg_err, asynchronously reset by !\rst_ni
Extracted 225 gates and 316 wires to a netlist network with 90 inputs and 2 outputs.

3.71.11.1. Executing ABC.

3.71.12. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$7611$u_reg.u_intr_state_rx_timeout.wr_en, asynchronously reset by !\rst_ni
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 2 outputs.

3.71.12.1. Executing ABC.

3.71.13. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$7631$u_reg.u_intr_state_rx_break_err.wr_en, asynchronously reset by !\rst_ni
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 2 outputs.

3.71.13.1. Executing ABC.

3.71.14. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$7621$u_reg.u_intr_state_rx_overflow.wr_en, asynchronously reset by !\rst_ni
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 2 outputs.

3.71.14.1. Executing ABC.

3.71.15. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$7626$u_reg.u_intr_state_rx_frame_err.wr_en, asynchronously reset by !\rst_ni
Extracted 11 gates and 19 wires to a netlist network with 8 inputs and 7 outputs.

3.71.15.1. Executing ABC.

3.71.16. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$7198$auto$opt_dff.cc:219:make_patterns_logic$7113, asynchronously reset by !\rst_ni
Extracted 12 gates and 20 wires to a netlist network with 8 inputs and 9 outputs.

3.71.16.1. Executing ABC.

3.71.17. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$7218$auto$opt_dff.cc:219:make_patterns_logic$7102, asynchronously reset by !\rst_ni
Extracted 7 gates and 13 wires to a netlist network with 6 inputs and 7 outputs.

3.71.17.1. Executing ABC.

3.71.18. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, asynchronously reset by !\rst_ni
Extracted 70 gates and 100 wires to a netlist network with 30 inputs and 26 outputs.

3.71.18.1. Executing ABC.

3.71.19. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$7307$u_reg.u_reg_if.a_ack, asynchronously reset by !\rst_ni
Extracted 230 gates and 304 wires to a netlist network with 74 inputs and 49 outputs.

3.71.19.1. Executing ABC.

3.71.20. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$7987$uart_core.u_uart_rxfifo.gen_normal_fifo.fifo_incr_rptr, asynchronously reset by !\rst_ni
Extracted 56 gates and 69 wires to a netlist network with 13 inputs and 24 outputs.

3.71.20.1. Executing ABC.

yosys> abc -dff

3.72. Executing ABC pass (technology mapping using ABC).

3.72.1. Summary of detected clock domains:
  9 cells in clk=\clk_i, en=$abc$8420$abc$7218$auto$opt_dff.cc:219:make_patterns_logic$7102, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$8024$abc$7616$u_reg.u_intr_state_rx_parity_err.wr_en, arst=!\rst_ni, srst={ }
  7 cells in clk=\clk_i, en=$abc$8029$abc$7604$u_reg.u_intr_state_rx_watermark.wr_en, arst=!\rst_ni, srst={ }
  7 cells in clk=\clk_i, en=$abc$8037$abc$7232$auto$opt_dff.cc:219:make_patterns_logic$4549, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$8050$abc$7599$u_reg.u_intr_state_tx_empty.wr_en, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$8055$abc$7300$auto$opt_dff.cc:194:make_patterns_logic$4525, arst=!\rst_ni, srst={ }
  6 cells in clk=\clk_i, en=$abc$8062$abc$7293$u_reg.u_intr_state_tx_watermark.wr_en, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$8068$abc$7282$auto$opt_dff.cc:219:make_patterns_logic$4542, arst=!\rst_ni, srst={ }
  38 cells in clk=\clk_i, en=$abc$8083$abc$7240$auto$opt_dff.cc:219:make_patterns_logic$4556, arst=!\rst_ni, srst={ }
  224 cells in clk=\clk_i, en=$abc$8150$abc$7643$u_reg.intg_err, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$8376$abc$7611$u_reg.u_intr_state_rx_timeout.wr_en, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$8381$abc$7631$u_reg.u_intr_state_rx_break_err.wr_en, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$8386$abc$7621$u_reg.u_intr_state_rx_overflow.wr_en, arst=!\rst_ni, srst={ }
  12 cells in clk=\clk_i, en=$abc$8391$abc$7626$u_reg.u_intr_state_rx_frame_err.wr_en, arst=!\rst_ni, srst={ }
  31 cells in clk=\clk_i, en=$abc$8118$abc$7899$uart_core.u_uart_txfifo.gen_normal_fifo.fifo_incr_wptr, arst=!\rst_ni, srst={ }
  14 cells in clk=\clk_i, en=$abc$8403$abc$7198$auto$opt_dff.cc:219:make_patterns_logic$7113, arst=!\rst_ni, srst={ }
  229 cells in clk=\clk_i, en=$abc$8512$abc$7307$u_reg.u_reg_if.a_ack, arst=!\rst_ni, srst={ }
  69 cells in clk=\clk_i, en={ }, arst=!\rst_ni, srst={ }
  49 cells in clk=\clk_i, en=$abc$8777$abc$7987$uart_core.u_uart_rxfifo.gen_normal_fifo.fifo_incr_rptr, arst=!\rst_ni, srst={ }

3.72.2. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$8420$abc$7218$auto$opt_dff.cc:219:make_patterns_logic$7102, asynchronously reset by !\rst_ni
Extracted 9 gates and 15 wires to a netlist network with 6 inputs and 6 outputs.

3.72.2.1. Executing ABC.

3.72.3. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$8024$abc$7616$u_reg.u_intr_state_rx_parity_err.wr_en, asynchronously reset by !\rst_ni
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 2 outputs.

3.72.3.1. Executing ABC.

3.72.4. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$8029$abc$7604$u_reg.u_intr_state_rx_watermark.wr_en, asynchronously reset by !\rst_ni
Extracted 7 gates and 13 wires to a netlist network with 6 inputs and 2 outputs.

3.72.4.1. Executing ABC.

3.72.5. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$8037$abc$7232$auto$opt_dff.cc:219:make_patterns_logic$4549, asynchronously reset by !\rst_ni
Extracted 7 gates and 13 wires to a netlist network with 6 inputs and 4 outputs.

3.72.5.1. Executing ABC.

3.72.6. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$8050$abc$7599$u_reg.u_intr_state_tx_empty.wr_en, asynchronously reset by !\rst_ni
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 2 outputs.

3.72.6.1. Executing ABC.

3.72.7. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$8055$abc$7300$auto$opt_dff.cc:194:make_patterns_logic$4525, asynchronously reset by !\rst_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 3 outputs.

3.72.7.1. Executing ABC.

3.72.8. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$8062$abc$7293$u_reg.u_intr_state_tx_watermark.wr_en, asynchronously reset by !\rst_ni
Extracted 6 gates and 11 wires to a netlist network with 5 inputs and 2 outputs.

3.72.8.1. Executing ABC.

3.72.9. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$8068$abc$7282$auto$opt_dff.cc:219:make_patterns_logic$4542, asynchronously reset by !\rst_ni
Extracted 11 gates and 19 wires to a netlist network with 8 inputs and 4 outputs.

3.72.9.1. Executing ABC.

3.72.10. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$8083$abc$7240$auto$opt_dff.cc:219:make_patterns_logic$4556, asynchronously reset by !\rst_ni
Extracted 38 gates and 49 wires to a netlist network with 11 inputs and 9 outputs.

3.72.10.1. Executing ABC.

3.72.11. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$8150$abc$7643$u_reg.intg_err, asynchronously reset by !\rst_ni
Extracted 224 gates and 315 wires to a netlist network with 90 inputs and 2 outputs.

3.72.11.1. Executing ABC.

3.72.12. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$8376$abc$7611$u_reg.u_intr_state_rx_timeout.wr_en, asynchronously reset by !\rst_ni
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 2 outputs.

3.72.12.1. Executing ABC.

3.72.13. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$8381$abc$7631$u_reg.u_intr_state_rx_break_err.wr_en, asynchronously reset by !\rst_ni
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 2 outputs.

3.72.13.1. Executing ABC.

3.72.14. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$8386$abc$7621$u_reg.u_intr_state_rx_overflow.wr_en, asynchronously reset by !\rst_ni
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 2 outputs.

3.72.14.1. Executing ABC.

3.72.15. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$8391$abc$7626$u_reg.u_intr_state_rx_frame_err.wr_en, asynchronously reset by !\rst_ni
Extracted 12 gates and 19 wires to a netlist network with 7 inputs and 8 outputs.

3.72.15.1. Executing ABC.

3.72.16. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$8118$abc$7899$uart_core.u_uart_txfifo.gen_normal_fifo.fifo_incr_wptr, asynchronously reset by !\rst_ni
Extracted 31 gates and 33 wires to a netlist network with 2 inputs and 12 outputs.

3.72.16.1. Executing ABC.

3.72.17. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$8403$abc$7198$auto$opt_dff.cc:219:make_patterns_logic$7113, asynchronously reset by !\rst_ni
Extracted 14 gates and 22 wires to a netlist network with 8 inputs and 10 outputs.

3.72.17.1. Executing ABC.

3.72.18. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$8512$abc$7307$u_reg.u_reg_if.a_ack, asynchronously reset by !\rst_ni
Extracted 229 gates and 305 wires to a netlist network with 76 inputs and 50 outputs.

3.72.18.1. Executing ABC.

3.72.19. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, asynchronously reset by !\rst_ni
Extracted 69 gates and 101 wires to a netlist network with 32 inputs and 24 outputs.

3.72.19.1. Executing ABC.

3.72.20. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$8777$abc$7987$uart_core.u_uart_rxfifo.gen_normal_fifo.fifo_incr_rptr, asynchronously reset by !\rst_ni
Extracted 49 gates and 63 wires to a netlist network with 14 inputs and 24 outputs.

3.72.20.1. Executing ABC.

yosys> abc -dff

3.73. Executing ABC pass (technology mapping using ABC).

3.73.1. Summary of detected clock domains:
  11 cells in clk=\clk_i, en=$abc$8830$abc$8420$abc$7218$auto$opt_dff.cc:219:make_patterns_logic$7102, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$8840$abc$8024$abc$7616$u_reg.u_intr_state_rx_parity_err.wr_en, arst=!\rst_ni, srst={ }
  7 cells in clk=\clk_i, en=$abc$8845$abc$8029$abc$7604$u_reg.u_intr_state_rx_watermark.wr_en, arst=!\rst_ni, srst={ }
  5 cells in clk=\clk_i, en=$abc$8853$abc$8037$abc$7232$auto$opt_dff.cc:219:make_patterns_logic$4549, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$8861$abc$8050$abc$7599$u_reg.u_intr_state_tx_empty.wr_en, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$8866$abc$8055$abc$7300$auto$opt_dff.cc:194:make_patterns_logic$4525, arst=!\rst_ni, srst={ }
  7 cells in clk=\clk_i, en=$abc$8873$abc$8062$abc$7293$u_reg.u_intr_state_tx_watermark.wr_en, arst=!\rst_ni, srst={ }
  8 cells in clk=\clk_i, en=$abc$8880$abc$8068$abc$7282$auto$opt_dff.cc:219:make_patterns_logic$4542, arst=!\rst_ni, srst={ }
  228 cells in clk=\clk_i, en=$abc$8931$abc$8150$abc$7643$u_reg.intg_err, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$9161$abc$8376$abc$7611$u_reg.u_intr_state_rx_timeout.wr_en, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$9166$abc$8381$abc$7631$u_reg.u_intr_state_rx_break_err.wr_en, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$9171$abc$8386$abc$7621$u_reg.u_intr_state_rx_overflow.wr_en, arst=!\rst_ni, srst={ }
  12 cells in clk=\clk_i, en=$abc$9176$abc$8391$abc$7626$u_reg.u_intr_state_rx_frame_err.wr_en, arst=!\rst_ni, srst={ }
  32 cells in clk=\clk_i, en=$abc$8892$abc$8083$abc$7240$auto$opt_dff.cc:219:make_patterns_logic$4556, arst=!\rst_ni, srst={ }
  98 cells in clk=\clk_i, en={ }, arst=!\rst_ni, srst={ }
  31 cells in clk=\clk_i, en=$abc$9189$abc$8118$abc$7899$uart_core.u_uart_txfifo.gen_normal_fifo.fifo_incr_wptr, arst=!\rst_ni, srst={ }
  208 cells in clk=\clk_i, en=$abc$9236$abc$8512$abc$7307$u_reg.u_reg_if.a_ack, arst=!\rst_ni, srst={ }
  14 cells in clk=\clk_i, en=$abc$9221$abc$8403$abc$7198$auto$opt_dff.cc:219:make_patterns_logic$7113, arst=!\rst_ni, srst={ }
  45 cells in clk=\clk_i, en=$abc$9585$abc$8777$abc$7987$uart_core.u_uart_rxfifo.gen_normal_fifo.fifo_incr_rptr, arst=!\rst_ni, srst={ }

3.73.2. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$8830$abc$8420$abc$7218$auto$opt_dff.cc:219:make_patterns_logic$7102, asynchronously reset by !\rst_ni
Extracted 11 gates and 17 wires to a netlist network with 6 inputs and 7 outputs.

3.73.2.1. Executing ABC.

3.73.3. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$8840$abc$8024$abc$7616$u_reg.u_intr_state_rx_parity_err.wr_en, asynchronously reset by !\rst_ni
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 2 outputs.

3.73.3.1. Executing ABC.

3.73.4. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$8845$abc$8029$abc$7604$u_reg.u_intr_state_rx_watermark.wr_en, asynchronously reset by !\rst_ni
Extracted 7 gates and 13 wires to a netlist network with 6 inputs and 2 outputs.

3.73.4.1. Executing ABC.

3.73.5. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$8853$abc$8037$abc$7232$auto$opt_dff.cc:219:make_patterns_logic$4549, asynchronously reset by !\rst_ni
Extracted 5 gates and 9 wires to a netlist network with 4 inputs and 2 outputs.

3.73.5.1. Executing ABC.

3.73.6. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$8861$abc$8050$abc$7599$u_reg.u_intr_state_tx_empty.wr_en, asynchronously reset by !\rst_ni
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 2 outputs.

3.73.6.1. Executing ABC.

3.73.7. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$8866$abc$8055$abc$7300$auto$opt_dff.cc:194:make_patterns_logic$4525, asynchronously reset by !\rst_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 3 outputs.

3.73.7.1. Executing ABC.

3.73.8. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$8873$abc$8062$abc$7293$u_reg.u_intr_state_tx_watermark.wr_en, asynchronously reset by !\rst_ni
Extracted 7 gates and 13 wires to a netlist network with 6 inputs and 2 outputs.

3.73.8.1. Executing ABC.

3.73.9. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$8880$abc$8068$abc$7282$auto$opt_dff.cc:219:make_patterns_logic$4542, asynchronously reset by !\rst_ni
Extracted 8 gates and 14 wires to a netlist network with 6 inputs and 4 outputs.

3.73.9.1. Executing ABC.

3.73.10. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$8931$abc$8150$abc$7643$u_reg.intg_err, asynchronously reset by !\rst_ni
Extracted 228 gates and 319 wires to a netlist network with 90 inputs and 2 outputs.

3.73.10.1. Executing ABC.

3.73.11. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$9161$abc$8376$abc$7611$u_reg.u_intr_state_rx_timeout.wr_en, asynchronously reset by !\rst_ni
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 2 outputs.

3.73.11.1. Executing ABC.

3.73.12. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$9166$abc$8381$abc$7631$u_reg.u_intr_state_rx_break_err.wr_en, asynchronously reset by !\rst_ni
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 2 outputs.

3.73.12.1. Executing ABC.

3.73.13. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$9171$abc$8386$abc$7621$u_reg.u_intr_state_rx_overflow.wr_en, asynchronously reset by !\rst_ni
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 2 outputs.

3.73.13.1. Executing ABC.

3.73.14. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$9176$abc$8391$abc$7626$u_reg.u_intr_state_rx_frame_err.wr_en, asynchronously reset by !\rst_ni
Extracted 12 gates and 19 wires to a netlist network with 7 inputs and 8 outputs.

3.73.14.1. Executing ABC.

3.73.15. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$8892$abc$8083$abc$7240$auto$opt_dff.cc:219:make_patterns_logic$4556, asynchronously reset by !\rst_ni
Extracted 32 gates and 38 wires to a netlist network with 6 inputs and 7 outputs.

3.73.15.1. Executing ABC.

3.73.16. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, asynchronously reset by !\rst_ni
Extracted 98 gates and 149 wires to a netlist network with 51 inputs and 28 outputs.

3.73.16.1. Executing ABC.

3.73.17. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$9189$abc$8118$abc$7899$uart_core.u_uart_txfifo.gen_normal_fifo.fifo_incr_wptr, asynchronously reset by !\rst_ni
Extracted 31 gates and 33 wires to a netlist network with 2 inputs and 12 outputs.

3.73.17.1. Executing ABC.

3.73.18. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$9236$abc$8512$abc$7307$u_reg.u_reg_if.a_ack, asynchronously reset by !\rst_ni
Extracted 208 gates and 281 wires to a netlist network with 73 inputs and 55 outputs.

3.73.18.1. Executing ABC.

3.73.19. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$9221$abc$8403$abc$7198$auto$opt_dff.cc:219:make_patterns_logic$7113, asynchronously reset by !\rst_ni
Extracted 14 gates and 22 wires to a netlist network with 8 inputs and 10 outputs.

3.73.19.1. Executing ABC.

3.73.20. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$9585$abc$8777$abc$7987$uart_core.u_uart_rxfifo.gen_normal_fifo.fifo_incr_rptr, asynchronously reset by !\rst_ni
Extracted 45 gates and 59 wires to a netlist network with 14 inputs and 24 outputs.

3.73.20.1. Executing ABC.

yosys> opt_ffinv

3.74. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt -sat

3.75. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.75.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.
<suppressed ~3 debug messages>

yosys> opt_merge -nomux

3.75.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
<suppressed ~15 debug messages>
Removed a total of 5 cells.

yosys> opt_muxtree

3.75.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.75.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart.
Performed a total of 0 changes.

yosys> opt_merge

3.75.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.75.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.75.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..
Removed 0 unused cells and 4118 unused wires.
<suppressed ~116 debug messages>

yosys> opt_expr

3.75.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.

3.75.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.75.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.75.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart.
Performed a total of 0 changes.

yosys> opt_merge

3.75.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.75.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.75.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..

yosys> opt_expr

3.75.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.

3.75.16. Finished OPT passes. (There is nothing left to do.)

yosys> bmuxmap

3.76. Executing BMUXMAP pass.

yosys> demuxmap

3.77. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> abc -script /home/users/temp_dir/yosys_MiA4Xm/abc_tmp_1.scr

3.78. Executing ABC pass (technology mapping using ABC).

3.78.1. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Extracted 644 gates and 803 wires to a netlist network with 159 inputs and 85 outputs.

3.78.1.1. Executing ABC.
DE:   #PIs = 159  #Luts =   196  Max Lvl =  10  Avg Lvl =   5.09  [   0.28 sec. at Pass 0]
DE:   #PIs = 159  #Luts =   171  Max Lvl =  11  Avg Lvl =   5.15  [   5.53 sec. at Pass 1]
DE:   #PIs = 159  #Luts =   170  Max Lvl =  12  Avg Lvl =   5.59  [   1.05 sec. at Pass 2]
DE:   #PIs = 159  #Luts =   170  Max Lvl =  12  Avg Lvl =   5.59  [   2.08 sec. at Pass 3]
DE:   #PIs = 159  #Luts =   164  Max Lvl =  11  Avg Lvl =   5.31  [   1.61 sec. at Pass 4]
DE:   #PIs = 159  #Luts =   164  Max Lvl =  11  Avg Lvl =   5.31  [   2.25 sec. at Pass 5]
DE:   #PIs = 159  #Luts =   164  Max Lvl =  11  Avg Lvl =   5.31  [   1.41 sec. at Pass 6]
DE:   #PIs = 159  #Luts =   164  Max Lvl =  11  Avg Lvl =   5.31  [   1.99 sec. at Pass 7]
DE:   #PIs = 159  #Luts =   164  Max Lvl =  11  Avg Lvl =   5.31  [   2.38 sec. at Pass 8]
DE:   #PIs = 159  #Luts =   164  Max Lvl =  11  Avg Lvl =   5.31  [   0.46 sec. at Pass 9]

yosys> opt_expr

3.79. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.

yosys> opt_merge -nomux

3.80. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.81. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.82. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart.
Performed a total of 0 changes.

yosys> opt_merge

3.83. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

yosys> opt_share

3.84. Executing OPT_SHARE pass.

yosys> opt_dff

3.85. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.86. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..
Removed 0 unused cells and 796 unused wires.
<suppressed ~17 debug messages>

yosys> opt_expr

3.87. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.
MAX OPT ITERATION = 1

yosys> opt_ffinv

3.88. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 1 inverters.

yosys> stat

3.89. Printing statistics.

=== uart ===

   Number of wires:               1548
   Number of wire bits:           4310
   Number of public wires:        1362
   Number of public wire bits:    4119
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                239
     $_DFFE_PN0P_                   56
     $_DFF_PN0_                     19
     $_DFF_PN1_                      1
     $lut                          163


yosys> shregmap -minlen 8 -maxlen 20

3.90. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.91. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.92. Printing statistics.

=== uart ===

   Number of wires:               1548
   Number of wire bits:           4310
   Number of public wires:        1362
   Number of public wire bits:    4119
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                239
     $_DFFE_PN0P_                   56
     $_DFF_PN0_                     19
     $_DFF_PN1_                      1
     $lut                          163


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.93. Executing TECHMAP pass (map to technology primitives).

3.93.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.93.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.93.3. Continuing TECHMAP pass.
Using template \$_DFF_PN0_ for cells of type $_DFF_PN0_.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFFE_PN0P_ for cells of type $_DFFE_PN0P_.
Using template \$_DFF_PN1_ for cells of type $_DFF_PN1_.
No more expansions possible.
<suppressed ~375 debug messages>

yosys> opt_expr -mux_undef

3.94. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.
<suppressed ~2734 debug messages>

yosys> simplemap

3.95. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.96. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.

yosys> opt_merge

3.97. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
<suppressed ~3714 debug messages>
Removed a total of 1238 cells.

yosys> opt_dff -nodffe -nosdff

3.98. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.99. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..
Removed 0 unused cells and 634 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.100. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.100.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.
<suppressed ~21 debug messages>

yosys> opt_merge -nomux

3.100.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.100.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.100.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart.
Performed a total of 0 changes.

yosys> opt_merge

3.100.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.100.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.100.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.100.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.

3.100.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.100.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.100.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart.
Performed a total of 0 changes.

yosys> opt_merge

3.100.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.100.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.100.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..

yosys> opt_expr

3.100.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.

3.100.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /home/users/temp_dir/yosys_MiA4Xm/abc_tmp_2.scr

3.101. Executing ABC pass (technology mapping using ABC).

3.101.1. Extracting gate netlist of module `\uart' to `<abc-temp-dir>/input.blif'..
Extracted 872 gates and 1032 wires to a netlist network with 158 inputs and 84 outputs.

3.101.1.1. Executing ABC.
DE:   #PIs = 158  #Luts =   166  Max Lvl =  13  Avg Lvl =   6.07  [   0.19 sec. at Pass 0]
DE:   #PIs = 158  #Luts =   165  Max Lvl =  13  Avg Lvl =   5.75  [   2.71 sec. at Pass 1]
DE:   #PIs = 158  #Luts =   165  Max Lvl =  13  Avg Lvl =   5.75  [   0.86 sec. at Pass 2]
DE:   #PIs = 158  #Luts =   163  Max Lvl =  12  Avg Lvl =   5.29  [   1.26 sec. at Pass 3]
DE:   #PIs = 158  #Luts =   162  Max Lvl =  14  Avg Lvl =   6.52  [   1.26 sec. at Pass 4]
DE:   #PIs = 158  #Luts =   162  Max Lvl =  14  Avg Lvl =   6.52  [   1.72 sec. at Pass 5]
DE:   #PIs = 158  #Luts =   161  Max Lvl =  11  Avg Lvl =   5.11  [   1.61 sec. at Pass 6]
DE:   #PIs = 158  #Luts =   161  Max Lvl =  11  Avg Lvl =   5.11  [   1.60 sec. at Pass 7]
DE:   #PIs = 158  #Luts =   161  Max Lvl =  11  Avg Lvl =   5.11  [   1.45 sec. at Pass 8]
DE:   #PIs = 158  #Luts =   161  Max Lvl =  11  Avg Lvl =   5.11  [   1.64 sec. at Pass 9]
DE:   #PIs = 158  #Luts =   161  Max Lvl =  11  Avg Lvl =   5.11  [   1.84 sec. at Pass 10]
DE:   #PIs = 158  #Luts =   161  Max Lvl =  11  Avg Lvl =   5.11  [   0.37 sec. at Pass 11]

yosys> opt_expr

3.102. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.

yosys> opt_merge -nomux

3.103. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.104. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.105. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart.
Performed a total of 0 changes.

yosys> opt_merge

3.106. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart'.
Removed a total of 0 cells.

yosys> opt_share

3.107. Executing OPT_SHARE pass.

yosys> opt_dff

3.108. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.109. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..
Removed 0 unused cells and 759 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.110. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart.
MAX OPT ITERATION = 1

yosys> hierarchy -check

3.111. Executing HIERARCHY pass (managing design hierarchy).

3.111.1. Analyzing design hierarchy..
Top module:  \uart

3.111.2. Analyzing design hierarchy..
Top module:  \uart
Removed 0 unused modules.

yosys> stat

3.112. Printing statistics.

=== uart ===

   Number of wires:               1545
   Number of wire bits:           4307
   Number of public wires:        1362
   Number of public wire bits:    4119
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                237
     $lut                          161
     dffsre                         76


yosys> opt_clean -purge

3.113. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart..
Removed 0 unused cells and 1307 unused wires.
<suppressed ~1307 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.114. Executing Verilog backend.
Dumping module `\uart'.

Warnings: 232 unique messages, 232 total
End of script. Logfile hash: 052dcff3b3, CPU: user 8.39s system 0.56s, MEM: 36.36 MB peak
Yosys 0.18+10 (git sha1 7a7a25778, gcc 9.1.0 -fPIC -Os)
Time spent: 94% 6x abc (133 sec), 1% 41x opt_expr (2 sec), ...
real 82.70
user 127.28
sys 14.42
