
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.32
 Yosys 0.16+65 (git sha1 7987105a9, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Apr22_SW_Release, released at Thu Apr 28 20:08:21 2022.

yosys> verilog_defaults -add -I.

yosys> read -vhdl b15.vhd

yosys> verific -vhdl b15.vhd

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Apr22_SW_Release, released at Thu Apr 28 20:08:21 2022.
VERIFIC-INFO [VHDL-1504] default VHDL library search path is now "/home/users/meri/Documents/workspace/de-issue/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008"
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'b15.vhd'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.standard' from file '/home/users/meri/Documents/workspace/de-issue/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/standard.vdb'
VERIFIC-INFO [VHDL-1012] b15.vhd:1: analyzing entity 'b15'
VERIFIC-INFO [VHDL-1010] b15.vhd:17: analyzing architecture 'behav'

yosys> synth_rs -top b15 -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.50

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/de-issue/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/de-issue/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/de-issue/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/de-issue/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\dsp_t1_sim'.
Generating RTLIL representation for module `\dsp_t1_20x18x64'.
Generating RTLIL representation for module `\dsp_t1_10x9x32'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top b15

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VHDL-1067] b15.vhd:1: processing 'b15(BEHAV)'
Importing module b15.

3.3.1. Analyzing design hierarchy..
Top module:  \b15

3.3.2. Analyzing design hierarchy..
Top module:  \b15
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_mux

3.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.8. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~17 debug messages>

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~4 debug messages>

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 7 unused cells and 141 unused wires.
<suppressed ~63 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module b15...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~1 debug messages>

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~89 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
    New ctrl vector for $pmux cell $verific$Select_710$b15.vhd:564$890: { $verific$n7780$86 $verific$n7781$87 $auto$opt_reduce.cc:134:opt_pmux$1061 $auto$opt_reduce.cc:134:opt_pmux$1059 }
    New ctrl vector for $pmux cell $verific$Select_712$b15.vhd:564$892: { $verific$n7780$86 $auto$opt_reduce.cc:134:opt_pmux$1067 $auto$opt_reduce.cc:134:opt_pmux$1065 $auto$opt_reduce.cc:134:opt_pmux$1063 }
    New ctrl vector for $pmux cell $verific$Select_718$b15.vhd:564$898: { $verific$n7970$107 $verific$n7787$93 $auto$opt_reduce.cc:134:opt_pmux$1069 $verific$n7789$95 }
    New ctrl vector for $pmux cell $verific$Select_720$b15.vhd:564$899: { $verific$n7970$107 $auto$opt_reduce.cc:134:opt_pmux$1073 $auto$opt_reduce.cc:134:opt_pmux$1071 }
    New ctrl vector for $pmux cell $verific$Select_722$b15.vhd:564$900: { $verific$n7970$107 $auto$opt_reduce.cc:134:opt_pmux$1077 $auto$opt_reduce.cc:134:opt_pmux$1075 }
    New ctrl vector for $pmux cell $verific$Select_724$b15.vhd:564$901: { $verific$n7970$107 $auto$opt_reduce.cc:134:opt_pmux$1079 }
    New ctrl vector for $pmux cell $verific$select_707$b15.vhd:564$887: { $verific$n7780$86 $verific$n7781$87 $auto$opt_reduce.cc:134:opt_pmux$1089 $auto$opt_reduce.cc:134:opt_pmux$1087 $auto$opt_reduce.cc:134:opt_pmux$1085 $auto$opt_reduce.cc:134:opt_pmux$1083 $auto$opt_reduce.cc:134:opt_pmux$1081 }
    New ctrl vector for $pmux cell $verific$select_708$b15.vhd:564$888: { $auto$opt_reduce.cc:134:opt_pmux$1099 $auto$opt_reduce.cc:134:opt_pmux$1097 $verific$n7786$92 $verific$n7788$94 $auto$opt_reduce.cc:134:opt_pmux$1095 $auto$opt_reduce.cc:134:opt_pmux$1093 $auto$opt_reduce.cc:134:opt_pmux$1091 }
    New ctrl vector for $pmux cell $verific$select_713$b15.vhd:564$893: { $verific$n7780$86 $verific$n7781$87 $auto$opt_reduce.cc:134:opt_pmux$1101 }
    New ctrl vector for $pmux cell $verific$select_714$b15.vhd:564$894: { $verific$n7784$90 $verific$n7786$92 $verific$n7788$94 $verific$n7794$100 $auto$opt_reduce.cc:134:opt_pmux$1103 }
    New ctrl vector for $pmux cell $verific$select_715$b15.vhd:564$895: { $verific$n7785$91 $verific$n7795$101 $auto$opt_reduce.cc:134:opt_pmux$1105 }
    New ctrl vector for $pmux cell $verific$select_716$b15.vhd:564$896: { $verific$n7786$92 $verific$n7787$93 $auto$opt_reduce.cc:134:opt_pmux$1109 $auto$opt_reduce.cc:134:opt_pmux$1107 }
    New ctrl vector for $pmux cell $verific$select_725$b15.vhd:564$902: { $verific$n7786$92 $verific$n7787$93 $auto$opt_reduce.cc:134:opt_pmux$1111 }
    New ctrl vector for $pmux cell $verific$select_726$b15.vhd:564$903: { $verific$n7786$92 $verific$n7787$93 $auto$opt_reduce.cc:134:opt_pmux$1113 }
    New ctrl vector for $pmux cell $verific$select_727$b15.vhd:564$904: { $verific$n7787$93 $verific$n7789$95 $auto$opt_reduce.cc:134:opt_pmux$1115 }
    New ctrl vector for $pmux cell $verific$select_728$b15.vhd:564$905: { $verific$n7787$93 $auto$opt_reduce.cc:134:opt_pmux$1117 }
  Optimizing cells in module \b15.
Performed a total of 16 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
<suppressed ~45 debug messages>
Removed a total of 15 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $verific$rEIP_reg$b15.vhd:614$1033 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$ADS_n_reg$b15.vhd:233$624 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$W_R_n_reg$b15.vhd:233$621 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$State_reg$b15.vhd:233$625 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$StateBS16_reg$b15.vhd:233$627 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$RequestPending_reg$b15.vhd:614$1037 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$ReadRequest_reg$b15.vhd:614$1035 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.uWord_reg$b15.vhd:614$1027 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.lWord_reg$b15.vhd:614$1026 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.State2_reg$b15.vhd:614$1003 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.PhyAddrPointer_reg$b15.vhd:614$1023 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.More_reg$b15.vhd:614$1024 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_9$b15.vhd:614$1011 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_8$b15.vhd:614$1010 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_7$b15.vhd:614$1009 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_6$b15.vhd:614$1008 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_5$b15.vhd:614$1007 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_4$b15.vhd:614$1006 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_3$b15.vhd:614$1005 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_2$b15.vhd:614$1004 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_16$b15.vhd:614$1018 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_15$b15.vhd:614$1017 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_14$b15.vhd:614$1016 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_13$b15.vhd:614$1015 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_12$b15.vhd:614$1014 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_11$b15.vhd:614$1013 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_10$b15.vhd:614$1012 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg$b15.vhd:614$1019 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueueWr_Addr_reg$b15.vhd:614$1021 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueueRd_Addr_reg$b15.vhd:614$1020 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstAddrPointer_reg$b15.vhd:614$1022 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.Flush_reg$b15.vhd:614$1025 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$MemoryFetch_reg$b15.vhd:614$1036 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$M_IO_n_reg$b15.vhd:233$623 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$EBX_reg$b15.vhd:614$1032 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$EAX_reg$b15.vhd:614$1031 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$Datao_reg$b15.vhd:614$1029 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$DataWidth_reg$b15.vhd:233$628 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$D_C_n_reg$b15.vhd:233$622 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$CodeFetch_reg$b15.vhd:614$1028 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$ByteEnable_reg$b15.vhd:670$1055 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$BE_n_reg$b15.vhd:233$619 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$Address_reg$b15.vhd:233$620 ($aldff) from module b15.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 2 unused cells and 18 unused wires.
<suppressed ~3 debug messages>

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~90 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

3.11.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~90 debug messages>

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $verific$ByteEnable_reg$b15.vhd:670$1055 ($adff) from module b15 (D = $verific$n9573$528, Q = \ByteEnable).
Setting constant 0-bit at position 2 on $verific$DataWidth_reg$b15.vhd:233$628 ($adff) from module b15.
Setting constant 0-bit at position 3 on $verific$DataWidth_reg$b15.vhd:233$628 ($adff) from module b15.
Setting constant 0-bit at position 4 on $verific$DataWidth_reg$b15.vhd:233$628 ($adff) from module b15.
Setting constant 0-bit at position 5 on $verific$DataWidth_reg$b15.vhd:233$628 ($adff) from module b15.
Setting constant 0-bit at position 6 on $verific$DataWidth_reg$b15.vhd:233$628 ($adff) from module b15.
Setting constant 0-bit at position 7 on $verific$DataWidth_reg$b15.vhd:233$628 ($adff) from module b15.
Setting constant 0-bit at position 8 on $verific$DataWidth_reg$b15.vhd:233$628 ($adff) from module b15.
Setting constant 0-bit at position 9 on $verific$DataWidth_reg$b15.vhd:233$628 ($adff) from module b15.
Setting constant 0-bit at position 10 on $verific$DataWidth_reg$b15.vhd:233$628 ($adff) from module b15.
Setting constant 0-bit at position 11 on $verific$DataWidth_reg$b15.vhd:233$628 ($adff) from module b15.
Setting constant 0-bit at position 12 on $verific$DataWidth_reg$b15.vhd:233$628 ($adff) from module b15.
Setting constant 0-bit at position 13 on $verific$DataWidth_reg$b15.vhd:233$628 ($adff) from module b15.
Setting constant 0-bit at position 14 on $verific$DataWidth_reg$b15.vhd:233$628 ($adff) from module b15.
Setting constant 0-bit at position 15 on $verific$DataWidth_reg$b15.vhd:233$628 ($adff) from module b15.
Setting constant 0-bit at position 16 on $verific$DataWidth_reg$b15.vhd:233$628 ($adff) from module b15.
Setting constant 0-bit at position 17 on $verific$DataWidth_reg$b15.vhd:233$628 ($adff) from module b15.
Setting constant 0-bit at position 18 on $verific$DataWidth_reg$b15.vhd:233$628 ($adff) from module b15.
Setting constant 0-bit at position 19 on $verific$DataWidth_reg$b15.vhd:233$628 ($adff) from module b15.
Setting constant 0-bit at position 20 on $verific$DataWidth_reg$b15.vhd:233$628 ($adff) from module b15.
Setting constant 0-bit at position 21 on $verific$DataWidth_reg$b15.vhd:233$628 ($adff) from module b15.
Setting constant 0-bit at position 22 on $verific$DataWidth_reg$b15.vhd:233$628 ($adff) from module b15.
Setting constant 0-bit at position 23 on $verific$DataWidth_reg$b15.vhd:233$628 ($adff) from module b15.
Setting constant 0-bit at position 24 on $verific$DataWidth_reg$b15.vhd:233$628 ($adff) from module b15.
Setting constant 0-bit at position 25 on $verific$DataWidth_reg$b15.vhd:233$628 ($adff) from module b15.
Setting constant 0-bit at position 26 on $verific$DataWidth_reg$b15.vhd:233$628 ($adff) from module b15.
Setting constant 0-bit at position 27 on $verific$DataWidth_reg$b15.vhd:233$628 ($adff) from module b15.
Setting constant 0-bit at position 28 on $verific$DataWidth_reg$b15.vhd:233$628 ($adff) from module b15.
Setting constant 0-bit at position 29 on $verific$DataWidth_reg$b15.vhd:233$628 ($adff) from module b15.
Setting constant 0-bit at position 30 on $verific$DataWidth_reg$b15.vhd:233$628 ($adff) from module b15.
Setting constant 0-bit at position 31 on $verific$DataWidth_reg$b15.vhd:233$628 ($adff) from module b15.
Setting constant 0-bit at position 31 on $verific$Datao_reg$b15.vhd:614$1029 ($adff) from module b15.
Setting constant 0-bit at position 4 on $verific$P1.InstQueueWr_Addr_reg$b15.vhd:614$1021 ($adff) from module b15.

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~4 debug messages>

3.13.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~90 debug messages>

yosys> opt_reduce

3.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$1121 ($adff) from module b15.
Setting constant 0-bit at position 31 on $auto$ff.cc:262:slice$1122 ($adff) from module b15.
Setting constant 0-bit at position 4 on $verific$P1.InstQueueRd_Addr_reg$b15.vhd:614$1020 ($adff) from module b15.

yosys> opt_clean

3.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

3.13.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~90 debug messages>

yosys> opt_reduce

3.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

yosys> opt_expr

3.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

3.13.23. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 30 bits (of 32) from mux cell b15.$verific$mux_98$b15.vhd:183$588 ($mux).
Removed top 1 bits (of 31) from port Y of cell b15.$verific$add_113$b15.vhd:199$592 ($add).
Removed top 1 bits (of 31) from port A of cell b15.$verific$add_113$b15.vhd:199$592 ($add).
Removed top 1 bits (of 3) from mux cell b15.$verific$mux_127$b15.vhd:217$598 ($mux).
Removed top 15 bits (of 16) from port A of cell b15.$verific$Decoder_193$b15.vhd:307$633 ($shl).
Removed top 1 bits (of 5) from port A of cell b15.$verific$add_210$b15.vhd:308$650 ($add).
Removed top 4 bits (of 5) from port B of cell b15.$verific$add_210$b15.vhd:308$650 ($add).
Removed top 1 bits (of 5) from port Y of cell b15.$verific$add_210$b15.vhd:308$650 ($add).
Removed top 15 bits (of 16) from port A of cell b15.$verific$Decoder_213$b15.vhd:310$653 ($shl).
Removed top 3 bits (of 4) from port B of cell b15.$verific$add_230$b15.vhd:311$670 ($add).
Removed top 8 bits (of 16) from port Y of cell b15.$verific$add_235$b15.vhd:313$674 ($add).
Removed top 8 bits (of 16) from port A of cell b15.$verific$add_235$b15.vhd:313$674 ($add).
Removed top 15 bits (of 16) from port A of cell b15.$verific$Decoder_237$b15.vhd:313$679 ($shl).
Removed top 3 bits (of 4) from port B of cell b15.$verific$add_254$b15.vhd:314$696 ($add).
Removed top 15 bits (of 16) from port A of cell b15.$verific$Decoder_261$b15.vhd:315$704 ($shl).
Removed top 3 bits (of 4) from port B of cell b15.$verific$add_278$b15.vhd:316$721 ($add).
Removed top 29 bits (of 30) from port B of cell b15.$verific$add_281$b15.vhd:317$722 ($add).
Removed top 30 bits (of 31) from port B of cell b15.$verific$add_284$b15.vhd:320$724 ($add).
Removed top 1 bits (of 32) from port A of cell b15.$verific$LessThan_286$b15.vhd:321$726 ($lt).
Removed top 1 bits (of 33) from port Y of cell b15.$verific$unary_minus_287$b15.vhd:322$727 ($neg).
Removed top 1 bits (of 33) from port A of cell b15.$verific$unary_minus_287$b15.vhd:322$727 ($neg).
Removed top 31 bits (of 32) from port B of cell b15.$verific$add_360$b15.vhd:346$752 ($add).
Removed top 1 bits (of 5) from port A of cell b15.$verific$add_362$b15.vhd:347$754 ($add).
Removed top 4 bits (of 5) from port B of cell b15.$verific$add_362$b15.vhd:347$754 ($add).
Removed top 1 bits (of 6) from port Y of cell b15.$verific$add_362$b15.vhd:347$754 ($add).
Removed top 2 bits (of 6) from port A of cell b15.$verific$sub_369$b15.vhd:357$756 ($sub).
Removed top 2 bits (of 6) from port B of cell b15.$verific$sub_369$b15.vhd:357$756 ($sub).
Removed top 1 bits (of 6) from port Y of cell b15.$verific$sub_369$b15.vhd:357$756 ($sub).
Removed top 1 bits (of 6) from port B of cell b15.$verific$LessThan_370$b15.vhd:357$757 ($le).
Removed top 1 bits (of 8) from port A of cell b15.$verific$LessThan_373$b15.vhd:358$759 ($lt).
Removed top 1 bits (of 9) from port A of cell b15.$verific$sub_378$b15.vhd:359$760 ($sub).
Removed top 1 bits (of 9) from port B of cell b15.$verific$sub_378$b15.vhd:359$760 ($sub).
Removed top 1 bits (of 33) from port Y of cell b15.$verific$sub_379$b15.vhd:359$761 ($sub).
Removed top 1 bits (of 33) from port A of cell b15.$verific$sub_379$b15.vhd:359$761 ($sub).
Removed top 1 bits (of 33) from port B of cell b15.$verific$sub_379$b15.vhd:359$761 ($sub).
Removed top 30 bits (of 31) from port B of cell b15.$verific$add_383$b15.vhd:362$763 ($add).
Removed top 24 bits (of 32) from port B of cell b15.$verific$add_387$b15.vhd:362$764 ($add).
Removed top 1 bits (of 6) from port B of cell b15.$verific$LessThan_397$b15.vhd:372$771 ($le).
Removed top 29 bits (of 32) from port B of cell b15.$verific$add_399$b15.vhd:373$772 ($add).
Removed top 24 bits (of 32) from port B of cell b15.$verific$add_403$b15.vhd:373$773 ($add).
Removed top 1 bits (of 3) from port A of cell b15.$verific$add_422$b15.vhd:393$778 ($add).
Removed top 2 bits (of 3) from port B of cell b15.$verific$add_422$b15.vhd:393$778 ($add).
Removed top 1 bits (of 3) from port Y of cell b15.$verific$add_422$b15.vhd:393$778 ($add).
Removed top 1 bits (of 5) from port A of cell b15.$verific$add_424$b15.vhd:393$781 ($add).
Removed top 3 bits (of 5) from port B of cell b15.$verific$add_424$b15.vhd:393$781 ($add).
Removed top 1 bits (of 5) from port Y of cell b15.$verific$add_424$b15.vhd:393$781 ($add).
Removed top 7 bits (of 8) from port B of cell b15.$verific$add_426$b15.vhd:393$784 ($add).
Removed top 1 bits (of 9) from port Y of cell b15.$verific$add_426$b15.vhd:393$784 ($add).
Removed top 1 bits (of 4) from port A of cell b15.$verific$add_427$b15.vhd:393$785 ($add).
Removed top 3 bits (of 4) from port B of cell b15.$verific$add_427$b15.vhd:393$785 ($add).
Removed top 1 bits (of 5) from port A of cell b15.$verific$add_435$b15.vhd:397$789 ($add).
Removed top 2 bits (of 5) from port B of cell b15.$verific$add_435$b15.vhd:397$789 ($add).
Removed top 1 bits (of 5) from port Y of cell b15.$verific$add_435$b15.vhd:397$789 ($add).
Removed top 1 bits (of 5) from mux cell b15.$verific$mux_440$b15.vhd:401$794 ($mux).
Removed top 1 bits (of 6) from port B of cell b15.$verific$LessThan_462$b15.vhd:414$798 ($le).
Removed top 30 bits (of 31) from port B of cell b15.$verific$add_473$b15.vhd:432$801 ($add).
Removed top 1 bits (of 10) from mux cell b15.$verific$mux_943$b15.vhd:446$829 ($mux).
Removed top 1 bits (of 3) from port A of cell b15.$verific$equal_517$b15.vhd:464$831 ($eq).
Removed top 1 bits (of 5) from mux cell b15.$verific$mux_562$b15.vhd:481$848 ($mux).
Removed top 1 bits (of 64) from mux cell b15.$verific$mux_935$b15.vhd:481$851 ($mux).
Removed top 1 bits (of 64) from mux cell b15.$verific$mux_934$b15.vhd:485$859 ($mux).
Removed top 30 bits (of 31) from port B of cell b15.$verific$add_669$b15.vhd:548$860 ($add).
Removed top 1 bits (of 32) from port Y of cell b15.$verific$add_669$b15.vhd:548$860 ($add).
Removed top 30 bits (of 31) from port B of cell b15.$verific$add_676$b15.vhd:554$863 ($add).
Removed top 1 bits (of 32) from port Y of cell b15.$verific$add_676$b15.vhd:554$863 ($add).
Removed top 1 bits (of 8) from port A of cell b15.$verific$equal_689$b15.vhd:350$867 ($eq).
Removed top 5 bits (of 8) from port A of cell b15.$verific$equal_700$b15.vhd:527$878 ($eq).
Removed top 5 bits (of 8) from port A of cell b15.$verific$equal_701$b15.vhd:532$879 ($eq).
Removed top 1 bits (of 8) from port A of cell b15.$verific$equal_704$b15.vhd:547$882 ($eq).
Removed top 1 bits (of 8) from port A of cell b15.$verific$equal_705$b15.vhd:553$883 ($eq).
Removed top 1 bits (of 5) from port B of cell b15.$verific$LessThan_729$b15.vhd:565$906 ($lt).
Removed top 2 bits (of 6) from port A of cell b15.$verific$sub_731$b15.vhd:565$908 ($sub).
Removed top 1 bits (of 6) from port B of cell b15.$verific$sub_731$b15.vhd:565$908 ($sub).
Removed top 1 bits (of 6) from port A of cell b15.$verific$LessThan_732$b15.vhd:565$909 ($lt).
Removed top 1 bits (of 32) from port A of cell b15.$verific$LessThan_742$b15.vhd:581$917 ($lt).
Removed top 1 bits (of 33) from port Y of cell b15.$verific$unary_minus_743$b15.vhd:582$918 ($neg).
Removed top 1 bits (of 33) from port A of cell b15.$verific$unary_minus_743$b15.vhd:582$918 ($neg).
Removed top 30 bits (of 32) from mux cell b15.$verific$mux_746$b15.vhd:587$922 ($mux).
Removed top 1 bits (of 2) from port A of cell b15.$verific$add_747$b15.vhd:588$924 ($add).
Removed top 1 bits (of 4) from mux cell b15.$verific$mux_751$b15.vhd:589$926 ($mux).
Removed top 1 bits (of 5) from mux cell b15.$verific$mux_752$b15.vhd:590$927 ($mux).
Removed top 1 bits (of 5) from mux cell b15.$verific$mux_753$b15.vhd:590$928 ($mux).
Removed top 2 bits (of 6) from port A of cell b15.$verific$sub_754$b15.vhd:591$929 ($sub).
Removed top 2 bits (of 6) from port B of cell b15.$verific$sub_754$b15.vhd:591$929 ($sub).
Removed top 1 bits (of 6) from port Y of cell b15.$verific$sub_754$b15.vhd:591$929 ($sub).
Removed top 1 bits (of 6) from port A of cell b15.$verific$LessThan_755$b15.vhd:591$930 ($lt).
Removed top 1 bits (of 5) from mux cell b15.$verific$mux_757$b15.vhd:596$931 ($mux).
Removed top 1 bits (of 5) from port A of cell b15.$verific$LessThan_758$b15.vhd:599$932 ($le).
Removed top 1 bits (of 5) from port B of cell b15.$verific$LessThan_758$b15.vhd:599$932 ($le).
Removed top 1 bits (of 5) from mux cell b15.$verific$mux_799$b15.vhd:607$968 ($mux).
Removed top 1 bits (of 33) from FF cell b15.$verific$rEIP_reg$b15.vhd:614$1033 ($adff).
Removed top 1 bits (of 2) from port A of cell b15.$verific$equal_896$b15.vhd:636$1047 ($eq).
Removed top 30 bits (of 32) from port Y of cell b15.$verific$unary_minus_743$b15.vhd:582$918 ($neg).
Removed top 30 bits (of 32) from port A of cell b15.$verific$unary_minus_743$b15.vhd:582$918 ($neg).
Removed top 30 bits (of 32) from wire b15.$verific$n1001$168.
Removed top 1 bits (of 31) from wire b15.$verific$n1151$173.
Removed top 1 bits (of 3) from wire b15.$verific$n1294$178.
Removed top 1 bits (of 5) from wire b15.$verific$n2071$211.
Removed top 8 bits (of 16) from wire b15.$verific$n2267$232.
Removed top 1 bits (of 33) from wire b15.$verific$n2793$278.
Removed top 1 bits (of 5) from wire b15.$verific$n3660$305.
Removed top 1 bits (of 33) from wire b15.$verific$n3837$312.
Removed top 1 bits (of 3) from wire b15.$verific$n4619$333.
Removed top 1 bits (of 5) from wire b15.$verific$n4633$335.
Removed top 1 bits (of 4) from wire b15.$verific$n4659$338.
Removed top 1 bits (of 5) from wire b15.$verific$n4791$342.
Removed top 1 bits (of 5) from wire b15.$verific$n4868$346.
Removed top 1 bits (of 5) from wire b15.$verific$n5590$365.
Removed top 1 bits (of 32) from wire b15.$verific$n6129$379.
Removed top 1 bits (of 5) from wire b15.$verific$n6239$383.
Removed top 1 bits (of 32) from wire b15.$verific$n6315$387.
Removed top 31 bits (of 33) from wire b15.$verific$n8109$437.
Removed top 30 bits (of 32) from wire b15.$verific$n8209$440.
Removed top 1 bits (of 4) from wire b15.$verific$n8249$442.
Removed top 1 bits (of 5) from wire b15.$verific$n8254$443.
Removed top 1 bits (of 5) from wire b15.$verific$n8260$444.
Removed top 3 bits (of 4) from wire b15.$verific$n8274$446.
Removed top 1 bits (of 5) from wire b15.$verific$n8279$447.
Removed top 1 bits (of 5) from wire b15.$verific$n8638$483.
Removed top 30 bits (of 32) from wire b15.DataWidth.
Removed top 1 bits (of 5) from wire b15.P1.InstQueueRd_Addr.
Removed top 1 bits (of 5) from wire b15.P1.InstQueueWr_Addr.

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 34 unused cells and 94 unused wires.
<suppressed ~35 debug messages>

yosys> alumacc

3.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module b15:
  creating $macc model for $verific$add_113$b15.vhd:199$592 ($add).
  creating $macc model for $verific$add_210$b15.vhd:308$650 ($add).
  creating $macc model for $verific$add_230$b15.vhd:311$670 ($add).
  creating $macc model for $verific$add_235$b15.vhd:313$674 ($add).
  creating $macc model for $verific$add_254$b15.vhd:314$696 ($add).
  creating $macc model for $verific$add_259$b15.vhd:315$700 ($add).
  creating $macc model for $verific$add_278$b15.vhd:316$721 ($add).
  creating $macc model for $verific$add_28$b15.vhd:127$542 ($add).
  creating $macc model for $verific$add_281$b15.vhd:317$722 ($add).
  creating $macc model for $verific$add_284$b15.vhd:320$724 ($add).
  creating $macc model for $verific$add_360$b15.vhd:346$752 ($add).
  creating $macc model for $verific$add_362$b15.vhd:347$754 ($add).
  creating $macc model for $verific$add_383$b15.vhd:362$763 ($add).
  creating $macc model for $verific$add_387$b15.vhd:362$764 ($add).
  creating $macc model for $verific$add_399$b15.vhd:373$772 ($add).
  creating $macc model for $verific$add_403$b15.vhd:373$773 ($add).
  creating $macc model for $verific$add_422$b15.vhd:393$778 ($add).
  creating $macc model for $verific$add_424$b15.vhd:393$781 ($add).
  creating $macc model for $verific$add_426$b15.vhd:393$784 ($add).
  creating $macc model for $verific$add_427$b15.vhd:393$785 ($add).
  creating $macc model for $verific$add_435$b15.vhd:397$789 ($add).
  creating $macc model for $verific$add_473$b15.vhd:432$801 ($add).
  creating $macc model for $verific$add_669$b15.vhd:548$860 ($add).
  creating $macc model for $verific$add_676$b15.vhd:554$863 ($add).
  creating $macc model for $verific$add_747$b15.vhd:588$924 ($add).
  creating $macc model for $verific$sub_369$b15.vhd:357$756 ($sub).
  creating $macc model for $verific$sub_378$b15.vhd:359$760 ($sub).
  creating $macc model for $verific$sub_379$b15.vhd:359$761 ($sub).
  creating $macc model for $verific$sub_731$b15.vhd:565$908 ($sub).
  creating $macc model for $verific$sub_754$b15.vhd:591$929 ($sub).
  creating $macc model for $verific$unary_minus_287$b15.vhd:322$727 ($neg).
  creating $macc model for $verific$unary_minus_743$b15.vhd:582$918 ($neg).
  creating $alu model for $macc $verific$unary_minus_743$b15.vhd:582$918.
  creating $alu model for $macc $verific$unary_minus_287$b15.vhd:322$727.
  creating $alu model for $macc $verific$sub_754$b15.vhd:591$929.
  creating $alu model for $macc $verific$sub_731$b15.vhd:565$908.
  creating $alu model for $macc $verific$sub_379$b15.vhd:359$761.
  creating $alu model for $macc $verific$sub_378$b15.vhd:359$760.
  creating $alu model for $macc $verific$sub_369$b15.vhd:357$756.
  creating $alu model for $macc $verific$add_747$b15.vhd:588$924.
  creating $alu model for $macc $verific$add_676$b15.vhd:554$863.
  creating $alu model for $macc $verific$add_669$b15.vhd:548$860.
  creating $alu model for $macc $verific$add_473$b15.vhd:432$801.
  creating $alu model for $macc $verific$add_435$b15.vhd:397$789.
  creating $alu model for $macc $verific$add_427$b15.vhd:393$785.
  creating $alu model for $macc $verific$add_426$b15.vhd:393$784.
  creating $alu model for $macc $verific$add_424$b15.vhd:393$781.
  creating $alu model for $macc $verific$add_422$b15.vhd:393$778.
  creating $alu model for $macc $verific$add_403$b15.vhd:373$773.
  creating $alu model for $macc $verific$add_399$b15.vhd:373$772.
  creating $alu model for $macc $verific$add_387$b15.vhd:362$764.
  creating $alu model for $macc $verific$add_383$b15.vhd:362$763.
  creating $alu model for $macc $verific$add_362$b15.vhd:347$754.
  creating $alu model for $macc $verific$add_360$b15.vhd:346$752.
  creating $alu model for $macc $verific$add_284$b15.vhd:320$724.
  creating $alu model for $macc $verific$add_281$b15.vhd:317$722.
  creating $alu model for $macc $verific$add_28$b15.vhd:127$542.
  creating $alu model for $macc $verific$add_278$b15.vhd:316$721.
  creating $alu model for $macc $verific$add_259$b15.vhd:315$700.
  creating $alu model for $macc $verific$add_254$b15.vhd:314$696.
  creating $alu model for $macc $verific$add_235$b15.vhd:313$674.
  creating $alu model for $macc $verific$add_230$b15.vhd:311$670.
  creating $alu model for $macc $verific$add_210$b15.vhd:308$650.
  creating $alu model for $macc $verific$add_113$b15.vhd:199$592.
  creating $alu model for $verific$LessThan_286$b15.vhd:321$726 ($lt): new $alu
  creating $alu model for $verific$LessThan_370$b15.vhd:357$757 ($le): new $alu
  creating $alu model for $verific$LessThan_373$b15.vhd:358$759 ($lt): new $alu
  creating $alu model for $verific$LessThan_397$b15.vhd:372$771 ($le): new $alu
  creating $alu model for $verific$LessThan_462$b15.vhd:414$798 ($le): new $alu
  creating $alu model for $verific$LessThan_729$b15.vhd:565$906 ($lt): new $alu
  creating $alu model for $verific$LessThan_732$b15.vhd:565$909 ($lt): new $alu
  creating $alu model for $verific$LessThan_742$b15.vhd:581$917 ($lt): new $alu
  creating $alu model for $verific$LessThan_755$b15.vhd:591$930 ($lt): new $alu
  creating $alu model for $verific$LessThan_758$b15.vhd:599$932 ($le): new $alu
  creating $alu cell for $verific$LessThan_758$b15.vhd:599$932: $auto$alumacc.cc:485:replace_alu$1399
  creating $alu cell for $verific$LessThan_755$b15.vhd:591$930: $auto$alumacc.cc:485:replace_alu$1408
  creating $alu cell for $verific$LessThan_742$b15.vhd:581$917: $auto$alumacc.cc:485:replace_alu$1413
  creating $alu cell for $verific$LessThan_732$b15.vhd:565$909: $auto$alumacc.cc:485:replace_alu$1418
  creating $alu cell for $verific$LessThan_729$b15.vhd:565$906: $auto$alumacc.cc:485:replace_alu$1423
  creating $alu cell for $verific$LessThan_462$b15.vhd:414$798: $auto$alumacc.cc:485:replace_alu$1434
  creating $alu cell for $verific$LessThan_397$b15.vhd:372$771: $auto$alumacc.cc:485:replace_alu$1447
  creating $alu cell for $verific$LessThan_373$b15.vhd:358$759: $auto$alumacc.cc:485:replace_alu$1460
  creating $alu cell for $verific$LessThan_370$b15.vhd:357$757: $auto$alumacc.cc:485:replace_alu$1465
  creating $alu cell for $verific$LessThan_286$b15.vhd:321$726: $auto$alumacc.cc:485:replace_alu$1478
  creating $alu cell for $verific$add_113$b15.vhd:199$592: $auto$alumacc.cc:485:replace_alu$1483
  creating $alu cell for $verific$add_210$b15.vhd:308$650: $auto$alumacc.cc:485:replace_alu$1486
  creating $alu cell for $verific$add_230$b15.vhd:311$670: $auto$alumacc.cc:485:replace_alu$1489
  creating $alu cell for $verific$add_235$b15.vhd:313$674: $auto$alumacc.cc:485:replace_alu$1492
  creating $alu cell for $verific$add_254$b15.vhd:314$696: $auto$alumacc.cc:485:replace_alu$1495
  creating $alu cell for $verific$add_259$b15.vhd:315$700: $auto$alumacc.cc:485:replace_alu$1498
  creating $alu cell for $verific$add_278$b15.vhd:316$721: $auto$alumacc.cc:485:replace_alu$1501
  creating $alu cell for $verific$add_28$b15.vhd:127$542: $auto$alumacc.cc:485:replace_alu$1504
  creating $alu cell for $verific$add_281$b15.vhd:317$722: $auto$alumacc.cc:485:replace_alu$1507
  creating $alu cell for $verific$add_284$b15.vhd:320$724: $auto$alumacc.cc:485:replace_alu$1510
  creating $alu cell for $verific$add_360$b15.vhd:346$752: $auto$alumacc.cc:485:replace_alu$1513
  creating $alu cell for $verific$add_362$b15.vhd:347$754: $auto$alumacc.cc:485:replace_alu$1516
  creating $alu cell for $verific$add_383$b15.vhd:362$763: $auto$alumacc.cc:485:replace_alu$1519
  creating $alu cell for $verific$add_387$b15.vhd:362$764: $auto$alumacc.cc:485:replace_alu$1522
  creating $alu cell for $verific$add_399$b15.vhd:373$772: $auto$alumacc.cc:485:replace_alu$1525
  creating $alu cell for $verific$add_403$b15.vhd:373$773: $auto$alumacc.cc:485:replace_alu$1528
  creating $alu cell for $verific$add_422$b15.vhd:393$778: $auto$alumacc.cc:485:replace_alu$1531
  creating $alu cell for $verific$add_424$b15.vhd:393$781: $auto$alumacc.cc:485:replace_alu$1534
  creating $alu cell for $verific$add_426$b15.vhd:393$784: $auto$alumacc.cc:485:replace_alu$1537
  creating $alu cell for $verific$add_427$b15.vhd:393$785: $auto$alumacc.cc:485:replace_alu$1540
  creating $alu cell for $verific$add_435$b15.vhd:397$789: $auto$alumacc.cc:485:replace_alu$1543
  creating $alu cell for $verific$add_473$b15.vhd:432$801: $auto$alumacc.cc:485:replace_alu$1546
  creating $alu cell for $verific$add_669$b15.vhd:548$860: $auto$alumacc.cc:485:replace_alu$1549
  creating $alu cell for $verific$add_676$b15.vhd:554$863: $auto$alumacc.cc:485:replace_alu$1552
  creating $alu cell for $verific$add_747$b15.vhd:588$924: $auto$alumacc.cc:485:replace_alu$1555
  creating $alu cell for $verific$sub_369$b15.vhd:357$756: $auto$alumacc.cc:485:replace_alu$1558
  creating $alu cell for $verific$sub_378$b15.vhd:359$760: $auto$alumacc.cc:485:replace_alu$1561
  creating $alu cell for $verific$sub_379$b15.vhd:359$761: $auto$alumacc.cc:485:replace_alu$1564
  creating $alu cell for $verific$sub_731$b15.vhd:565$908: $auto$alumacc.cc:485:replace_alu$1567
  creating $alu cell for $verific$sub_754$b15.vhd:591$929: $auto$alumacc.cc:485:replace_alu$1570
  creating $alu cell for $verific$unary_minus_287$b15.vhd:322$727: $auto$alumacc.cc:485:replace_alu$1573
  creating $alu cell for $verific$unary_minus_743$b15.vhd:582$918: $auto$alumacc.cc:485:replace_alu$1576
  created 42 $alu and 0 $macc cells.

yosys> opt

3.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~6 debug messages>

yosys> opt_merge -nomux

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

yosys> opt_muxtree

3.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~96 debug messages>

yosys> opt_reduce

3.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$1301: { $verific$n7796$102 $verific$n7795$101 $verific$n7794$100 $verific$n7793$99 $verific$n7792$98 $verific$n7791$97 $verific$n7790$96 $verific$n7789$95 $verific$n7788$94 $verific$n7787$93 $verific$n7785$91 $verific$n7783$89 $verific$n7782$88 $verific$n7781$87 $verific$n7780$86 $verific$n7779$85 $verific$n7778$84 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$1249: { $verific$n7789$95 $verific$n7788$94 $verific$n7787$93 $verific$n7786$92 $auto$rtlil.cc:2398:Or$1238 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$1273: { $verific$n7789$95 $verific$n7788$94 $verific$n7787$93 $auto$rtlil.cc:2398:Or$1238 }
  Optimizing cells in module \b15.
Performed a total of 3 changes.

yosys> opt_merge

3.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 4 unused cells and 19 unused wires.
<suppressed ~5 debug messages>

yosys> opt_expr

3.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

3.19.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~96 debug messages>

yosys> opt_reduce

3.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

yosys> opt_expr

3.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

3.19.16. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.20. Printing statistics.

=== b15 ===

   Number of wires:                632
   Number of wire bits:           6283
   Number of public wires:          50
   Number of public wire bits:     453
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                520
     $adff                          42
     $adffe                          1
     $alu                           42
     $and                           22
     $bmux                          48
     $eq                            22
     $logic_not                      1
     $mux                          264
     $not                           18
     $or                            22
     $reduce_and                     5
     $reduce_or                     29
     $shl                            4


yosys> memory -nomap

3.21. Executing MEMORY pass.

yosys> opt_mem

3.21.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.21.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.21.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_dff

3.21.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.21.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

yosys> memory_share

3.21.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.21.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.21.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

yosys> memory_collect

3.21.9. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.22. Printing statistics.

=== b15 ===

   Number of wires:                632
   Number of wire bits:           6283
   Number of public wires:          50
   Number of public wire bits:     453
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                520
     $adff                          42
     $adffe                          1
     $alu                           42
     $and                           22
     $bmux                          48
     $eq                            22
     $logic_not                      1
     $mux                          264
     $not                           18
     $or                            22
     $reduce_and                     5
     $reduce_or                     29
     $shl                            4


yosys> opt_clean

3.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

yosys> stat

3.24. Printing statistics.

=== b15 ===

   Number of wires:                632
   Number of wire bits:           6283
   Number of public wires:          50
   Number of public wire bits:     453
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                520
     $adff                          42
     $adffe                          1
     $alu                           42
     $and                           22
     $bmux                          48
     $eq                            22
     $logic_not                      1
     $mux                          264
     $not                           18
     $or                            22
     $reduce_and                     5
     $reduce_or                     29
     $shl                            4


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.25. Executing TECHMAP pass (map to technology primitives).

3.25.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/de-issue/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/de-issue/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.25.2. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/de-issue/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/de-issue/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.25.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $and.
Using template $paramod$44a13d10af618e7fbe7b9aad2f6151ffcee1e2fa\_90_alu for cells of type $alu.
Using template $paramod$32a7b7b86c07519b7537abc18e96f0331f97914d\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $bmux.
Using template $paramod$constmap:0c58e37f7f9ab9c08bb604a660a738f4cdfdf6a8$paramod$0c53878c2ab6a84f047b5c15f705bf752551700e\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$6268c9849396b992276ed6f68094a32888ec4427\_80_rs_alu for cells of type $alu.
Using template $paramod$354e377aaa263356a1a43d04ca847f8b92483a2a\_80_rs_alu for cells of type $alu.
Using template $paramod$788c3d57e5abb3a3f89aea6d4acd665be37f4e9b\_90_alu for cells of type $alu.
Using template $paramod$6a42b6fefed750f8a1c58eab59479d960557103c\_90_alu for cells of type $alu.
Using template $paramod$d1615bf4e5e328245ffd1550e5fe105901cda77b\_90_alu for cells of type $alu.
Using template $paramod$943564b9366bbc392bf4bbc801aa0a2d7742a4e0\_90_alu for cells of type $alu.
Using template $paramod$4ccbe221165818e15f326ddee3d1183c7924e12f\_90_alu for cells of type $alu.
Using template $paramod$e891e6b399cf52748460a311fafe476815d24bd7\_90_alu for cells of type $alu.
Using template $paramod$9f4898d8264c91aede998c5978e055c0b827a30c\_80_rs_alu for cells of type $alu.
Using template $paramod$e04283ca12514baf3d204c6994bec8f178dd89f8\_90_alu for cells of type $alu.
Using template $paramod$79fc87901d7fd8aaad689b5406671422f5fa25b9\_80_rs_alu for cells of type $alu.
Using template $paramod$653d0dc5a667330298513325d0bd1def0e6c1128\_90_alu for cells of type $alu.
Using template $paramod$2c4d537db249d5ee7774cabca037a7502075cb7a\_80_rs_alu for cells of type $alu.
Using template $paramod$076c9a7a3f037230073fe14dd4865d470cb48917\_90_alu for cells of type $alu.
Using template $paramod$dfca81329cbbac01700318224209a5f2318c7128\_90_alu for cells of type $alu.
Using template $paramod$175e67c02b86e96b1288b9dc100122520d7240d8\_90_alu for cells of type $alu.
Using template $paramod$f85408ed1aa3d09e465edae8a7bf590332ae9f7b\_90_alu for cells of type $alu.
Using template $paramod$bfceb922395790c0ce92e9f9b5b428d4fc72cc30\_90_alu for cells of type $alu.
Using template $paramod$1a3a0c35c4a4896fbfd612699525c057298e72d2\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $eq.
Using template $paramod$b3c20b05d9b1fc2c940ef2f6c917486aead042e8\_90_alu for cells of type $alu.
Using template $paramod$b85fbb3374a1d9ba7ee4f4d6323c30f939df3ada\_90_alu for cells of type $alu.
Using template $paramod$55cc6ea966d24eaadab3a93edfb07f4c9ec754bb\_80_rs_alu for cells of type $alu.
Using template $paramod$63a3f1ffa662be02d3403b533885c56d18ebe02a\_80_rs_alu for cells of type $alu.
Using template $paramod$740b056ede97228d3eae64ea2fdc81f0a33e0fe7\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000011110 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000011111 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000101 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000110 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000011 for cells of type $lcu.
No more expansions possible.
<suppressed ~5878 debug messages>

yosys> stat

3.26. Printing statistics.

=== b15 ===

   Number of wires:               3275
   Number of wire bits:          67747
   Number of public wires:          50
   Number of public wire bits:     453
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              15648
     $_AND_                       1406
     $_DFFE_PP0P_                    4
     $_DFF_PP0_                    410
     $_MUX_                      10582
     $_NOT_                        685
     $_OR_                        1080
     $_XOR_                       1259
     adder_carry                   222


yosys> opt

3.27. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~6598 debug messages>

yosys> opt_merge -nomux

3.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
<suppressed ~3174 debug messages>
Removed a total of 1058 cells.

yosys> opt_muxtree

3.27.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.27.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 458 unused cells and 2301 unused wires.
<suppressed ~459 debug messages>

yosys> opt_expr

3.27.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~146 debug messages>

3.27.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.27.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.27.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$3026 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10771 [3], Q = \P1.InstQueueRd_Addr [3]).
Adding EN signal on $auto$ff.cc:262:slice$3025 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10771 [2], Q = \P1.InstQueueRd_Addr [2]).
Adding EN signal on $auto$ff.cc:262:slice$3024 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10771 [1], Q = \P1.InstQueueRd_Addr [1]).
Adding EN signal on $auto$ff.cc:262:slice$3023 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10771 [0], Q = \P1.InstQueueRd_Addr [0]).
Adding EN signal on $auto$ff.cc:262:slice$3022 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2481, Q = \StateBS16).
Adding EN signal on $auto$ff.cc:262:slice$3021 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2464 [2], Q = \State [2]).
Adding EN signal on $auto$ff.cc:262:slice$3020 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2464 [1], Q = \State [1]).
Adding EN signal on $auto$ff.cc:262:slice$3019 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2464 [0], Q = \State [0]).
Adding EN signal on $auto$ff.cc:262:slice$3018 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2442, Q = \ADS_n).
Adding EN signal on $auto$ff.cc:262:slice$3016 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2432, Q = \D_C_n).
Adding EN signal on $auto$ff.cc:262:slice$3014 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2899 [29], Q = \Address [29]).
Adding EN signal on $auto$ff.cc:262:slice$3013 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2899 [28], Q = \Address [28]).
Adding EN signal on $auto$ff.cc:262:slice$3012 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2899 [27], Q = \Address [27]).
Adding EN signal on $auto$ff.cc:262:slice$3011 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2899 [26], Q = \Address [26]).
Adding EN signal on $auto$ff.cc:262:slice$3010 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2899 [25], Q = \Address [25]).
Adding EN signal on $auto$ff.cc:262:slice$3009 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2899 [24], Q = \Address [24]).
Adding EN signal on $auto$ff.cc:262:slice$3008 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2899 [23], Q = \Address [23]).
Adding EN signal on $auto$ff.cc:262:slice$3007 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2899 [22], Q = \Address [22]).
Adding EN signal on $auto$ff.cc:262:slice$3006 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2899 [21], Q = \Address [21]).
Adding EN signal on $auto$ff.cc:262:slice$3005 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2899 [20], Q = \Address [20]).
Adding EN signal on $auto$ff.cc:262:slice$3004 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2899 [19], Q = \Address [19]).
Adding EN signal on $auto$ff.cc:262:slice$3003 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2899 [18], Q = \Address [18]).
Adding EN signal on $auto$ff.cc:262:slice$3002 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2899 [17], Q = \Address [17]).
Adding EN signal on $auto$ff.cc:262:slice$3001 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2899 [16], Q = \Address [16]).
Adding EN signal on $auto$ff.cc:262:slice$3000 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2899 [15], Q = \Address [15]).
Adding EN signal on $auto$ff.cc:262:slice$2999 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2899 [14], Q = \Address [14]).
Adding EN signal on $auto$ff.cc:262:slice$2998 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2899 [13], Q = \Address [13]).
Adding EN signal on $auto$ff.cc:262:slice$2997 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2899 [12], Q = \Address [12]).
Adding EN signal on $auto$ff.cc:262:slice$2996 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2899 [11], Q = \Address [11]).
Adding EN signal on $auto$ff.cc:262:slice$2995 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2899 [10], Q = \Address [10]).
Adding EN signal on $auto$ff.cc:262:slice$2994 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2899 [9], Q = \Address [9]).
Adding EN signal on $auto$ff.cc:262:slice$2993 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2899 [8], Q = \Address [8]).
Adding EN signal on $auto$ff.cc:262:slice$2992 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2899 [7], Q = \Address [7]).
Adding EN signal on $auto$ff.cc:262:slice$2991 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2899 [6], Q = \Address [6]).
Adding EN signal on $auto$ff.cc:262:slice$2990 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2899 [5], Q = \Address [5]).
Adding EN signal on $auto$ff.cc:262:slice$2989 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2899 [4], Q = \Address [4]).
Adding EN signal on $auto$ff.cc:262:slice$2988 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2899 [3], Q = \Address [3]).
Adding EN signal on $auto$ff.cc:262:slice$2987 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2899 [2], Q = \Address [2]).
Adding EN signal on $auto$ff.cc:262:slice$2986 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2899 [1], Q = \Address [1]).
Adding EN signal on $auto$ff.cc:262:slice$2985 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2899 [0], Q = \Address [0]).
Adding EN signal on $auto$ff.cc:262:slice$2096 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2683 [1], Q = \DataWidth [1]).
Adding EN signal on $auto$ff.cc:262:slice$2095 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$2683 [0], Q = \DataWidth [0]).
Adding EN signal on $auto$ff.cc:262:slice$13212 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12673 [30], Q = \Datao [30]).
Adding EN signal on $auto$ff.cc:262:slice$13211 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12673 [29], Q = \Datao [29]).
Adding EN signal on $auto$ff.cc:262:slice$13210 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12673 [28], Q = \Datao [28]).
Adding EN signal on $auto$ff.cc:262:slice$13209 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12673 [27], Q = \Datao [27]).
Adding EN signal on $auto$ff.cc:262:slice$13208 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12673 [26], Q = \Datao [26]).
Adding EN signal on $auto$ff.cc:262:slice$13207 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12673 [25], Q = \Datao [25]).
Adding EN signal on $auto$ff.cc:262:slice$13206 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12673 [24], Q = \Datao [24]).
Adding EN signal on $auto$ff.cc:262:slice$13205 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12673 [23], Q = \Datao [23]).
Adding EN signal on $auto$ff.cc:262:slice$13204 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12673 [22], Q = \Datao [22]).
Adding EN signal on $auto$ff.cc:262:slice$13203 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12673 [21], Q = \Datao [21]).
Adding EN signal on $auto$ff.cc:262:slice$13202 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12673 [20], Q = \Datao [20]).
Adding EN signal on $auto$ff.cc:262:slice$13201 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12673 [19], Q = \Datao [19]).
Adding EN signal on $auto$ff.cc:262:slice$13200 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12673 [18], Q = \Datao [18]).
Adding EN signal on $auto$ff.cc:262:slice$13199 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12673 [17], Q = \Datao [17]).
Adding EN signal on $auto$ff.cc:262:slice$13198 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12673 [16], Q = \Datao [16]).
Adding EN signal on $auto$ff.cc:262:slice$13197 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12673 [15], Q = \Datao [15]).
Adding EN signal on $auto$ff.cc:262:slice$13196 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12673 [14], Q = \Datao [14]).
Adding EN signal on $auto$ff.cc:262:slice$13195 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12673 [13], Q = \Datao [13]).
Adding EN signal on $auto$ff.cc:262:slice$13194 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12673 [12], Q = \Datao [12]).
Adding EN signal on $auto$ff.cc:262:slice$13193 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12673 [11], Q = \Datao [11]).
Adding EN signal on $auto$ff.cc:262:slice$13192 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12673 [10], Q = \Datao [10]).
Adding EN signal on $auto$ff.cc:262:slice$13191 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12673 [9], Q = \Datao [9]).
Adding EN signal on $auto$ff.cc:262:slice$13190 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12673 [8], Q = \Datao [8]).
Adding EN signal on $auto$ff.cc:262:slice$13189 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12673 [7], Q = \Datao [7]).
Adding EN signal on $auto$ff.cc:262:slice$13188 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12673 [6], Q = \Datao [6]).
Adding EN signal on $auto$ff.cc:262:slice$13187 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12673 [5], Q = \Datao [5]).
Adding EN signal on $auto$ff.cc:262:slice$13186 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12673 [4], Q = \Datao [4]).
Adding EN signal on $auto$ff.cc:262:slice$13185 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12673 [3], Q = \Datao [3]).
Adding EN signal on $auto$ff.cc:262:slice$13184 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12673 [2], Q = \Datao [2]).
Adding EN signal on $auto$ff.cc:262:slice$13183 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12673 [1], Q = \Datao [1]).
Adding EN signal on $auto$ff.cc:262:slice$13182 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12673 [0], Q = \Datao [0]).
Adding EN signal on $auto$ff.cc:262:slice$13037 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8614, Q = \RequestPending).
Adding EN signal on $auto$ff.cc:262:slice$13036 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8595, Q = \MemoryFetch).
Adding EN signal on $auto$ff.cc:262:slice$13035 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8576, Q = \ReadRequest).
Adding EN signal on $auto$ff.cc:262:slice$13034 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8525 [32], Q = \rEIP [31]).
Adding EN signal on $auto$ff.cc:262:slice$13033 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8525 [30], Q = \rEIP [30]).
Adding EN signal on $auto$ff.cc:262:slice$13032 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8525 [29], Q = \rEIP [29]).
Adding EN signal on $auto$ff.cc:262:slice$13031 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8525 [28], Q = \rEIP [28]).
Adding EN signal on $auto$ff.cc:262:slice$13030 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8525 [27], Q = \rEIP [27]).
Adding EN signal on $auto$ff.cc:262:slice$13029 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8525 [26], Q = \rEIP [26]).
Adding EN signal on $auto$ff.cc:262:slice$13028 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8525 [25], Q = \rEIP [25]).
Adding EN signal on $auto$ff.cc:262:slice$13027 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8525 [24], Q = \rEIP [24]).
Adding EN signal on $auto$ff.cc:262:slice$13026 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8525 [23], Q = \rEIP [23]).
Adding EN signal on $auto$ff.cc:262:slice$13025 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8525 [22], Q = \rEIP [22]).
Adding EN signal on $auto$ff.cc:262:slice$13024 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8525 [21], Q = \rEIP [21]).
Adding EN signal on $auto$ff.cc:262:slice$13023 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8525 [20], Q = \rEIP [20]).
Adding EN signal on $auto$ff.cc:262:slice$13022 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8525 [19], Q = \rEIP [19]).
Adding EN signal on $auto$ff.cc:262:slice$13021 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8525 [18], Q = \rEIP [18]).
Adding EN signal on $auto$ff.cc:262:slice$13020 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8525 [17], Q = \rEIP [17]).
Adding EN signal on $auto$ff.cc:262:slice$13019 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8525 [16], Q = \rEIP [16]).
Adding EN signal on $auto$ff.cc:262:slice$13018 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8525 [15], Q = \rEIP [15]).
Adding EN signal on $auto$ff.cc:262:slice$13017 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8525 [14], Q = \rEIP [14]).
Adding EN signal on $auto$ff.cc:262:slice$13016 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8525 [13], Q = \rEIP [13]).
Adding EN signal on $auto$ff.cc:262:slice$13015 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8525 [12], Q = \rEIP [12]).
Adding EN signal on $auto$ff.cc:262:slice$13014 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8525 [11], Q = \rEIP [11]).
Adding EN signal on $auto$ff.cc:262:slice$13013 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8525 [10], Q = \rEIP [10]).
Adding EN signal on $auto$ff.cc:262:slice$13012 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8525 [9], Q = \rEIP [9]).
Adding EN signal on $auto$ff.cc:262:slice$13011 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8525 [8], Q = \rEIP [8]).
Adding EN signal on $auto$ff.cc:262:slice$13010 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8525 [7], Q = \rEIP [7]).
Adding EN signal on $auto$ff.cc:262:slice$13009 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8525 [6], Q = \rEIP [6]).
Adding EN signal on $auto$ff.cc:262:slice$13008 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8525 [5], Q = \rEIP [5]).
Adding EN signal on $auto$ff.cc:262:slice$13007 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8525 [4], Q = \rEIP [4]).
Adding EN signal on $auto$ff.cc:262:slice$13006 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8525 [3], Q = \rEIP [3]).
Adding EN signal on $auto$ff.cc:262:slice$13005 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8525 [2], Q = \rEIP [2]).
Adding EN signal on $auto$ff.cc:262:slice$13004 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8525 [1], Q = \rEIP [1]).
Adding EN signal on $auto$ff.cc:262:slice$13003 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8525 [0], Q = \rEIP [0]).
Adding EN signal on $auto$ff.cc:262:slice$13002 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11703 [30], Q = \EBX [30]).
Adding EN signal on $auto$ff.cc:262:slice$13001 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11703 [29], Q = \EBX [29]).
Adding EN signal on $auto$ff.cc:262:slice$13000 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11703 [28], Q = \EBX [28]).
Adding EN signal on $auto$ff.cc:262:slice$12999 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11703 [27], Q = \EBX [27]).
Adding EN signal on $auto$ff.cc:262:slice$12998 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11703 [26], Q = \EBX [26]).
Adding EN signal on $auto$ff.cc:262:slice$12997 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11703 [25], Q = \EBX [25]).
Adding EN signal on $auto$ff.cc:262:slice$12996 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11703 [24], Q = \EBX [24]).
Adding EN signal on $auto$ff.cc:262:slice$12995 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11703 [23], Q = \EBX [23]).
Adding EN signal on $auto$ff.cc:262:slice$12994 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11703 [22], Q = \EBX [22]).
Adding EN signal on $auto$ff.cc:262:slice$12993 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11703 [21], Q = \EBX [21]).
Adding EN signal on $auto$ff.cc:262:slice$12992 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11703 [20], Q = \EBX [20]).
Adding EN signal on $auto$ff.cc:262:slice$12991 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11703 [19], Q = \EBX [19]).
Adding EN signal on $auto$ff.cc:262:slice$12990 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11703 [18], Q = \EBX [18]).
Adding EN signal on $auto$ff.cc:262:slice$12989 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11703 [17], Q = \EBX [17]).
Adding EN signal on $auto$ff.cc:262:slice$12988 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11703 [16], Q = \EBX [16]).
Adding EN signal on $auto$ff.cc:262:slice$12987 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11703 [15], Q = \EBX [15]).
Adding EN signal on $auto$ff.cc:262:slice$12986 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11703 [14], Q = \EBX [14]).
Adding EN signal on $auto$ff.cc:262:slice$12985 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11703 [13], Q = \EBX [13]).
Adding EN signal on $auto$ff.cc:262:slice$12984 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11703 [12], Q = \EBX [12]).
Adding EN signal on $auto$ff.cc:262:slice$12983 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11703 [11], Q = \EBX [11]).
Adding EN signal on $auto$ff.cc:262:slice$12982 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11703 [10], Q = \EBX [10]).
Adding EN signal on $auto$ff.cc:262:slice$12981 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11703 [9], Q = \EBX [9]).
Adding EN signal on $auto$ff.cc:262:slice$12980 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11703 [8], Q = \EBX [8]).
Adding EN signal on $auto$ff.cc:262:slice$12979 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11703 [7], Q = \EBX [7]).
Adding EN signal on $auto$ff.cc:262:slice$12978 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11703 [6], Q = \EBX [6]).
Adding EN signal on $auto$ff.cc:262:slice$12977 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11703 [5], Q = \EBX [5]).
Adding EN signal on $auto$ff.cc:262:slice$12976 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11703 [4], Q = \EBX [4]).
Adding EN signal on $auto$ff.cc:262:slice$12975 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11703 [3], Q = \EBX [3]).
Adding EN signal on $auto$ff.cc:262:slice$12974 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11703 [2], Q = \EBX [2]).
Adding EN signal on $auto$ff.cc:262:slice$12973 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11703 [1], Q = \EBX [1]).
Adding EN signal on $auto$ff.cc:262:slice$12972 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11703 [0], Q = \EBX [0]).
Adding EN signal on $auto$ff.cc:262:slice$12971 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11234 [30], Q = \EAX [30]).
Adding EN signal on $auto$ff.cc:262:slice$12970 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11234 [29], Q = \EAX [29]).
Adding EN signal on $auto$ff.cc:262:slice$12969 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11234 [28], Q = \EAX [28]).
Adding EN signal on $auto$ff.cc:262:slice$12968 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11234 [27], Q = \EAX [27]).
Adding EN signal on $auto$ff.cc:262:slice$12967 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11234 [26], Q = \EAX [26]).
Adding EN signal on $auto$ff.cc:262:slice$12966 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11234 [25], Q = \EAX [25]).
Adding EN signal on $auto$ff.cc:262:slice$12965 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11234 [24], Q = \EAX [24]).
Adding EN signal on $auto$ff.cc:262:slice$12964 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11234 [23], Q = \EAX [23]).
Adding EN signal on $auto$ff.cc:262:slice$12963 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11234 [22], Q = \EAX [22]).
Adding EN signal on $auto$ff.cc:262:slice$12962 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11234 [21], Q = \EAX [21]).
Adding EN signal on $auto$ff.cc:262:slice$12961 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11234 [20], Q = \EAX [20]).
Adding EN signal on $auto$ff.cc:262:slice$12960 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11234 [19], Q = \EAX [19]).
Adding EN signal on $auto$ff.cc:262:slice$12959 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11234 [18], Q = \EAX [18]).
Adding EN signal on $auto$ff.cc:262:slice$12958 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11234 [17], Q = \EAX [17]).
Adding EN signal on $auto$ff.cc:262:slice$12957 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11234 [16], Q = \EAX [16]).
Adding EN signal on $auto$ff.cc:262:slice$12956 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11234 [15], Q = \EAX [15]).
Adding EN signal on $auto$ff.cc:262:slice$12955 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11234 [14], Q = \EAX [14]).
Adding EN signal on $auto$ff.cc:262:slice$12954 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11234 [13], Q = \EAX [13]).
Adding EN signal on $auto$ff.cc:262:slice$12953 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11234 [12], Q = \EAX [12]).
Adding EN signal on $auto$ff.cc:262:slice$12952 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11234 [11], Q = \EAX [11]).
Adding EN signal on $auto$ff.cc:262:slice$12951 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11234 [10], Q = \EAX [10]).
Adding EN signal on $auto$ff.cc:262:slice$12950 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11234 [9], Q = \EAX [9]).
Adding EN signal on $auto$ff.cc:262:slice$12949 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11234 [8], Q = \EAX [8]).
Adding EN signal on $auto$ff.cc:262:slice$12948 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11234 [7], Q = \EAX [7]).
Adding EN signal on $auto$ff.cc:262:slice$12947 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11234 [6], Q = \EAX [6]).
Adding EN signal on $auto$ff.cc:262:slice$12946 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11234 [5], Q = \EAX [5]).
Adding EN signal on $auto$ff.cc:262:slice$12945 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11234 [4], Q = \EAX [4]).
Adding EN signal on $auto$ff.cc:262:slice$12944 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11234 [3], Q = \EAX [3]).
Adding EN signal on $auto$ff.cc:262:slice$12943 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11234 [2], Q = \EAX [2]).
Adding EN signal on $auto$ff.cc:262:slice$12942 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11234 [1], Q = \EAX [1]).
Adding EN signal on $auto$ff.cc:262:slice$12941 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11234 [0], Q = \EAX [0]).
Adding EN signal on $auto$ff.cc:262:slice$12940 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10692 [3], Q = \P1.InstQueueWr_Addr [3]).
Adding EN signal on $auto$ff.cc:262:slice$12939 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10692 [2], Q = \P1.InstQueueWr_Addr [2]).
Adding EN signal on $auto$ff.cc:262:slice$12938 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10692 [1], Q = \P1.InstQueueWr_Addr [1]).
Adding EN signal on $auto$ff.cc:262:slice$12937 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10692 [0], Q = \P1.InstQueueWr_Addr [0]).
Adding EN signal on $auto$ff.cc:262:slice$12936 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8633, Q = \CodeFetch).
Adding EN signal on $auto$ff.cc:262:slice$12935 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11948 [14], Q = \P1.uWord [14]).
Adding EN signal on $auto$ff.cc:262:slice$12934 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11948 [13], Q = \P1.uWord [13]).
Adding EN signal on $auto$ff.cc:262:slice$12933 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11948 [12], Q = \P1.uWord [12]).
Adding EN signal on $auto$ff.cc:262:slice$12932 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11948 [11], Q = \P1.uWord [11]).
Adding EN signal on $auto$ff.cc:262:slice$12931 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11948 [10], Q = \P1.uWord [10]).
Adding EN signal on $auto$ff.cc:262:slice$12930 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11948 [9], Q = \P1.uWord [9]).
Adding EN signal on $auto$ff.cc:262:slice$12929 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11948 [8], Q = \P1.uWord [8]).
Adding EN signal on $auto$ff.cc:262:slice$12928 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11948 [7], Q = \P1.uWord [7]).
Adding EN signal on $auto$ff.cc:262:slice$12927 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11948 [6], Q = \P1.uWord [6]).
Adding EN signal on $auto$ff.cc:262:slice$12926 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11948 [5], Q = \P1.uWord [5]).
Adding EN signal on $auto$ff.cc:262:slice$12925 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11948 [4], Q = \P1.uWord [4]).
Adding EN signal on $auto$ff.cc:262:slice$12924 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11948 [3], Q = \P1.uWord [3]).
Adding EN signal on $auto$ff.cc:262:slice$12923 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11948 [2], Q = \P1.uWord [2]).
Adding EN signal on $auto$ff.cc:262:slice$12922 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11948 [1], Q = \P1.uWord [1]).
Adding EN signal on $auto$ff.cc:262:slice$12921 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$11948 [0], Q = \P1.uWord [0]).
Adding EN signal on $auto$ff.cc:262:slice$12920 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12191 [15], Q = \P1.lWord [15]).
Adding EN signal on $auto$ff.cc:262:slice$12919 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12191 [14], Q = \P1.lWord [14]).
Adding EN signal on $auto$ff.cc:262:slice$12918 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12191 [13], Q = \P1.lWord [13]).
Adding EN signal on $auto$ff.cc:262:slice$12917 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12191 [12], Q = \P1.lWord [12]).
Adding EN signal on $auto$ff.cc:262:slice$12916 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12191 [11], Q = \P1.lWord [11]).
Adding EN signal on $auto$ff.cc:262:slice$12915 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12191 [10], Q = \P1.lWord [10]).
Adding EN signal on $auto$ff.cc:262:slice$12914 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12191 [9], Q = \P1.lWord [9]).
Adding EN signal on $auto$ff.cc:262:slice$12913 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12191 [8], Q = \P1.lWord [8]).
Adding EN signal on $auto$ff.cc:262:slice$12912 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12191 [7], Q = \P1.lWord [7]).
Adding EN signal on $auto$ff.cc:262:slice$12911 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12191 [6], Q = \P1.lWord [6]).
Adding EN signal on $auto$ff.cc:262:slice$12910 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12191 [5], Q = \P1.lWord [5]).
Adding EN signal on $auto$ff.cc:262:slice$12909 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12191 [4], Q = \P1.lWord [4]).
Adding EN signal on $auto$ff.cc:262:slice$12908 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12191 [3], Q = \P1.lWord [3]).
Adding EN signal on $auto$ff.cc:262:slice$12907 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12191 [2], Q = \P1.lWord [2]).
Adding EN signal on $auto$ff.cc:262:slice$12906 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12191 [1], Q = \P1.lWord [1]).
Adding EN signal on $auto$ff.cc:262:slice$12905 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$12191 [0], Q = \P1.lWord [0]).
Adding EN signal on $auto$ff.cc:262:slice$12904 ($_DFF_PP0_) from module b15 (D = $auto$rtlil.cc:2464:Mux$1168, Q = \P1.Flush).
Adding EN signal on $auto$ff.cc:262:slice$12903 ($_DFF_PP0_) from module b15 (D = $auto$rtlil.cc:2464:Mux$1182, Q = \P1.More).
Adding EN signal on $auto$ff.cc:262:slice$12902 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7479 [31], Q = \P1.PhyAddrPointer [31]).
Adding EN signal on $auto$ff.cc:262:slice$12901 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7479 [30], Q = \P1.PhyAddrPointer [30]).
Adding EN signal on $auto$ff.cc:262:slice$12900 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7479 [29], Q = \P1.PhyAddrPointer [29]).
Adding EN signal on $auto$ff.cc:262:slice$12899 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7479 [28], Q = \P1.PhyAddrPointer [28]).
Adding EN signal on $auto$ff.cc:262:slice$12898 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7479 [27], Q = \P1.PhyAddrPointer [27]).
Adding EN signal on $auto$ff.cc:262:slice$12897 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7479 [26], Q = \P1.PhyAddrPointer [26]).
Adding EN signal on $auto$ff.cc:262:slice$12896 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7479 [25], Q = \P1.PhyAddrPointer [25]).
Adding EN signal on $auto$ff.cc:262:slice$12895 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7479 [24], Q = \P1.PhyAddrPointer [24]).
Adding EN signal on $auto$ff.cc:262:slice$12894 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7479 [23], Q = \P1.PhyAddrPointer [23]).
Adding EN signal on $auto$ff.cc:262:slice$12893 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7479 [22], Q = \P1.PhyAddrPointer [22]).
Adding EN signal on $auto$ff.cc:262:slice$12892 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7479 [21], Q = \P1.PhyAddrPointer [21]).
Adding EN signal on $auto$ff.cc:262:slice$12891 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7479 [20], Q = \P1.PhyAddrPointer [20]).
Adding EN signal on $auto$ff.cc:262:slice$12890 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7479 [19], Q = \P1.PhyAddrPointer [19]).
Adding EN signal on $auto$ff.cc:262:slice$12889 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7479 [18], Q = \P1.PhyAddrPointer [18]).
Adding EN signal on $auto$ff.cc:262:slice$12888 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7479 [17], Q = \P1.PhyAddrPointer [17]).
Adding EN signal on $auto$ff.cc:262:slice$12887 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7479 [16], Q = \P1.PhyAddrPointer [16]).
Adding EN signal on $auto$ff.cc:262:slice$12886 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7479 [15], Q = \P1.PhyAddrPointer [15]).
Adding EN signal on $auto$ff.cc:262:slice$12885 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7479 [14], Q = \P1.PhyAddrPointer [14]).
Adding EN signal on $auto$ff.cc:262:slice$12884 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7479 [13], Q = \P1.PhyAddrPointer [13]).
Adding EN signal on $auto$ff.cc:262:slice$12883 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7479 [12], Q = \P1.PhyAddrPointer [12]).
Adding EN signal on $auto$ff.cc:262:slice$12882 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7479 [11], Q = \P1.PhyAddrPointer [11]).
Adding EN signal on $auto$ff.cc:262:slice$12881 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7479 [10], Q = \P1.PhyAddrPointer [10]).
Adding EN signal on $auto$ff.cc:262:slice$12880 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7479 [9], Q = \P1.PhyAddrPointer [9]).
Adding EN signal on $auto$ff.cc:262:slice$12879 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7479 [8], Q = \P1.PhyAddrPointer [8]).
Adding EN signal on $auto$ff.cc:262:slice$12878 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7479 [7], Q = \P1.PhyAddrPointer [7]).
Adding EN signal on $auto$ff.cc:262:slice$12877 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7479 [6], Q = \P1.PhyAddrPointer [6]).
Adding EN signal on $auto$ff.cc:262:slice$12876 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7479 [5], Q = \P1.PhyAddrPointer [5]).
Adding EN signal on $auto$ff.cc:262:slice$12875 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7479 [4], Q = \P1.PhyAddrPointer [4]).
Adding EN signal on $auto$ff.cc:262:slice$12874 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7479 [3], Q = \P1.PhyAddrPointer [3]).
Adding EN signal on $auto$ff.cc:262:slice$12873 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7479 [2], Q = \P1.PhyAddrPointer [2]).
Adding EN signal on $auto$ff.cc:262:slice$12872 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7479 [1], Q = \P1.PhyAddrPointer [1]).
Adding EN signal on $auto$ff.cc:262:slice$12871 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7479 [0], Q = \P1.PhyAddrPointer [0]).
Adding EN signal on $auto$ff.cc:262:slice$12870 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7963 [31], Q = \P1.InstAddrPointer [31]).
Adding EN signal on $auto$ff.cc:262:slice$12869 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7963 [30], Q = \P1.InstAddrPointer [30]).
Adding EN signal on $auto$ff.cc:262:slice$12868 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7963 [29], Q = \P1.InstAddrPointer [29]).
Adding EN signal on $auto$ff.cc:262:slice$12867 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7963 [28], Q = \P1.InstAddrPointer [28]).
Adding EN signal on $auto$ff.cc:262:slice$12866 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7963 [27], Q = \P1.InstAddrPointer [27]).
Adding EN signal on $auto$ff.cc:262:slice$12865 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7963 [26], Q = \P1.InstAddrPointer [26]).
Adding EN signal on $auto$ff.cc:262:slice$12864 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7963 [25], Q = \P1.InstAddrPointer [25]).
Adding EN signal on $auto$ff.cc:262:slice$12863 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7963 [24], Q = \P1.InstAddrPointer [24]).
Adding EN signal on $auto$ff.cc:262:slice$12862 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7963 [23], Q = \P1.InstAddrPointer [23]).
Adding EN signal on $auto$ff.cc:262:slice$12861 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7963 [22], Q = \P1.InstAddrPointer [22]).
Adding EN signal on $auto$ff.cc:262:slice$12860 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7963 [21], Q = \P1.InstAddrPointer [21]).
Adding EN signal on $auto$ff.cc:262:slice$12859 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7963 [20], Q = \P1.InstAddrPointer [20]).
Adding EN signal on $auto$ff.cc:262:slice$12858 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7963 [19], Q = \P1.InstAddrPointer [19]).
Adding EN signal on $auto$ff.cc:262:slice$12857 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7963 [18], Q = \P1.InstAddrPointer [18]).
Adding EN signal on $auto$ff.cc:262:slice$12856 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7963 [17], Q = \P1.InstAddrPointer [17]).
Adding EN signal on $auto$ff.cc:262:slice$12855 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7963 [16], Q = \P1.InstAddrPointer [16]).
Adding EN signal on $auto$ff.cc:262:slice$12854 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7963 [15], Q = \P1.InstAddrPointer [15]).
Adding EN signal on $auto$ff.cc:262:slice$12853 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7963 [14], Q = \P1.InstAddrPointer [14]).
Adding EN signal on $auto$ff.cc:262:slice$12852 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7963 [13], Q = \P1.InstAddrPointer [13]).
Adding EN signal on $auto$ff.cc:262:slice$12851 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7963 [12], Q = \P1.InstAddrPointer [12]).
Adding EN signal on $auto$ff.cc:262:slice$12850 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7963 [11], Q = \P1.InstAddrPointer [11]).
Adding EN signal on $auto$ff.cc:262:slice$12849 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7963 [10], Q = \P1.InstAddrPointer [10]).
Adding EN signal on $auto$ff.cc:262:slice$12848 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7963 [9], Q = \P1.InstAddrPointer [9]).
Adding EN signal on $auto$ff.cc:262:slice$12847 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7963 [8], Q = \P1.InstAddrPointer [8]).
Adding EN signal on $auto$ff.cc:262:slice$12846 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7963 [7], Q = \P1.InstAddrPointer [7]).
Adding EN signal on $auto$ff.cc:262:slice$12845 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7963 [6], Q = \P1.InstAddrPointer [6]).
Adding EN signal on $auto$ff.cc:262:slice$12844 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7963 [5], Q = \P1.InstAddrPointer [5]).
Adding EN signal on $auto$ff.cc:262:slice$12843 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7963 [4], Q = \P1.InstAddrPointer [4]).
Adding EN signal on $auto$ff.cc:262:slice$12842 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7963 [3], Q = \P1.InstAddrPointer [3]).
Adding EN signal on $auto$ff.cc:262:slice$12841 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7963 [2], Q = \P1.InstAddrPointer [2]).
Adding EN signal on $auto$ff.cc:262:slice$12840 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7963 [1], Q = \P1.InstAddrPointer [1]).
Adding EN signal on $auto$ff.cc:262:slice$12839 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7963 [0], Q = \P1.InstAddrPointer [0]).
Adding EN signal on $auto$ff.cc:262:slice$12838 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10610 [7], Q = \P1.InstQueue[0] [7]).
Adding EN signal on $auto$ff.cc:262:slice$12837 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10610 [6], Q = \P1.InstQueue[0] [6]).
Adding EN signal on $auto$ff.cc:262:slice$12836 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10610 [5], Q = \P1.InstQueue[0] [5]).
Adding EN signal on $auto$ff.cc:262:slice$12835 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10610 [4], Q = \P1.InstQueue[0] [4]).
Adding EN signal on $auto$ff.cc:262:slice$12834 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10610 [3], Q = \P1.InstQueue[0] [3]).
Adding EN signal on $auto$ff.cc:262:slice$12833 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10610 [2], Q = \P1.InstQueue[0] [2]).
Adding EN signal on $auto$ff.cc:262:slice$12832 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10610 [1], Q = \P1.InstQueue[0] [1]).
Adding EN signal on $auto$ff.cc:262:slice$12831 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10610 [0], Q = \P1.InstQueue[0] [0]).
Adding EN signal on $auto$ff.cc:262:slice$12830 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10486 [7], Q = \P1.InstQueue[1] [7]).
Adding EN signal on $auto$ff.cc:262:slice$12829 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10486 [6], Q = \P1.InstQueue[1] [6]).
Adding EN signal on $auto$ff.cc:262:slice$12828 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10486 [5], Q = \P1.InstQueue[1] [5]).
Adding EN signal on $auto$ff.cc:262:slice$12827 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10486 [4], Q = \P1.InstQueue[1] [4]).
Adding EN signal on $auto$ff.cc:262:slice$12826 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10486 [3], Q = \P1.InstQueue[1] [3]).
Adding EN signal on $auto$ff.cc:262:slice$12825 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10486 [2], Q = \P1.InstQueue[1] [2]).
Adding EN signal on $auto$ff.cc:262:slice$12824 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10486 [1], Q = \P1.InstQueue[1] [1]).
Adding EN signal on $auto$ff.cc:262:slice$12823 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10486 [0], Q = \P1.InstQueue[1] [0]).
Adding EN signal on $auto$ff.cc:262:slice$12822 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10362 [7], Q = \P1.InstQueue[2] [7]).
Adding EN signal on $auto$ff.cc:262:slice$12821 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10362 [6], Q = \P1.InstQueue[2] [6]).
Adding EN signal on $auto$ff.cc:262:slice$12820 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10362 [5], Q = \P1.InstQueue[2] [5]).
Adding EN signal on $auto$ff.cc:262:slice$12819 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10362 [4], Q = \P1.InstQueue[2] [4]).
Adding EN signal on $auto$ff.cc:262:slice$12818 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10362 [3], Q = \P1.InstQueue[2] [3]).
Adding EN signal on $auto$ff.cc:262:slice$12817 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10362 [2], Q = \P1.InstQueue[2] [2]).
Adding EN signal on $auto$ff.cc:262:slice$12816 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10362 [1], Q = \P1.InstQueue[2] [1]).
Adding EN signal on $auto$ff.cc:262:slice$12815 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10362 [0], Q = \P1.InstQueue[2] [0]).
Adding EN signal on $auto$ff.cc:262:slice$12814 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10238 [7], Q = \P1.InstQueue[3] [7]).
Adding EN signal on $auto$ff.cc:262:slice$12813 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10238 [6], Q = \P1.InstQueue[3] [6]).
Adding EN signal on $auto$ff.cc:262:slice$12812 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10238 [5], Q = \P1.InstQueue[3] [5]).
Adding EN signal on $auto$ff.cc:262:slice$12811 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10238 [4], Q = \P1.InstQueue[3] [4]).
Adding EN signal on $auto$ff.cc:262:slice$12810 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10238 [3], Q = \P1.InstQueue[3] [3]).
Adding EN signal on $auto$ff.cc:262:slice$12809 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10238 [2], Q = \P1.InstQueue[3] [2]).
Adding EN signal on $auto$ff.cc:262:slice$12808 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10238 [1], Q = \P1.InstQueue[3] [1]).
Adding EN signal on $auto$ff.cc:262:slice$12807 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10238 [0], Q = \P1.InstQueue[3] [0]).
Adding EN signal on $auto$ff.cc:262:slice$12806 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10114 [7], Q = \P1.InstQueue[4] [7]).
Adding EN signal on $auto$ff.cc:262:slice$12805 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10114 [6], Q = \P1.InstQueue[4] [6]).
Adding EN signal on $auto$ff.cc:262:slice$12804 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10114 [5], Q = \P1.InstQueue[4] [5]).
Adding EN signal on $auto$ff.cc:262:slice$12803 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10114 [4], Q = \P1.InstQueue[4] [4]).
Adding EN signal on $auto$ff.cc:262:slice$12802 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10114 [3], Q = \P1.InstQueue[4] [3]).
Adding EN signal on $auto$ff.cc:262:slice$12801 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10114 [2], Q = \P1.InstQueue[4] [2]).
Adding EN signal on $auto$ff.cc:262:slice$12800 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10114 [1], Q = \P1.InstQueue[4] [1]).
Adding EN signal on $auto$ff.cc:262:slice$12799 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$10114 [0], Q = \P1.InstQueue[4] [0]).
Adding EN signal on $auto$ff.cc:262:slice$12798 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9990 [7], Q = \P1.InstQueue[5] [7]).
Adding EN signal on $auto$ff.cc:262:slice$12797 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9990 [6], Q = \P1.InstQueue[5] [6]).
Adding EN signal on $auto$ff.cc:262:slice$12796 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9990 [5], Q = \P1.InstQueue[5] [5]).
Adding EN signal on $auto$ff.cc:262:slice$12795 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9990 [4], Q = \P1.InstQueue[5] [4]).
Adding EN signal on $auto$ff.cc:262:slice$12794 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9990 [3], Q = \P1.InstQueue[5] [3]).
Adding EN signal on $auto$ff.cc:262:slice$12793 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9990 [2], Q = \P1.InstQueue[5] [2]).
Adding EN signal on $auto$ff.cc:262:slice$12792 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9990 [1], Q = \P1.InstQueue[5] [1]).
Adding EN signal on $auto$ff.cc:262:slice$12791 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9990 [0], Q = \P1.InstQueue[5] [0]).
Adding EN signal on $auto$ff.cc:262:slice$12790 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9866 [7], Q = \P1.InstQueue[6] [7]).
Adding EN signal on $auto$ff.cc:262:slice$12789 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9866 [6], Q = \P1.InstQueue[6] [6]).
Adding EN signal on $auto$ff.cc:262:slice$12788 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9866 [5], Q = \P1.InstQueue[6] [5]).
Adding EN signal on $auto$ff.cc:262:slice$12787 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9866 [4], Q = \P1.InstQueue[6] [4]).
Adding EN signal on $auto$ff.cc:262:slice$12786 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9866 [3], Q = \P1.InstQueue[6] [3]).
Adding EN signal on $auto$ff.cc:262:slice$12785 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9866 [2], Q = \P1.InstQueue[6] [2]).
Adding EN signal on $auto$ff.cc:262:slice$12784 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9866 [1], Q = \P1.InstQueue[6] [1]).
Adding EN signal on $auto$ff.cc:262:slice$12783 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9866 [0], Q = \P1.InstQueue[6] [0]).
Adding EN signal on $auto$ff.cc:262:slice$12782 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9742 [7], Q = \P1.InstQueue[7] [7]).
Adding EN signal on $auto$ff.cc:262:slice$12781 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9742 [6], Q = \P1.InstQueue[7] [6]).
Adding EN signal on $auto$ff.cc:262:slice$12780 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9742 [5], Q = \P1.InstQueue[7] [5]).
Adding EN signal on $auto$ff.cc:262:slice$12779 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9742 [4], Q = \P1.InstQueue[7] [4]).
Adding EN signal on $auto$ff.cc:262:slice$12778 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9742 [3], Q = \P1.InstQueue[7] [3]).
Adding EN signal on $auto$ff.cc:262:slice$12777 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9742 [2], Q = \P1.InstQueue[7] [2]).
Adding EN signal on $auto$ff.cc:262:slice$12776 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9742 [1], Q = \P1.InstQueue[7] [1]).
Adding EN signal on $auto$ff.cc:262:slice$12775 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9742 [0], Q = \P1.InstQueue[7] [0]).
Adding EN signal on $auto$ff.cc:262:slice$12774 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9618 [7], Q = \P1.InstQueue[8] [7]).
Adding EN signal on $auto$ff.cc:262:slice$12773 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9618 [6], Q = \P1.InstQueue[8] [6]).
Adding EN signal on $auto$ff.cc:262:slice$12772 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9618 [5], Q = \P1.InstQueue[8] [5]).
Adding EN signal on $auto$ff.cc:262:slice$12771 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9618 [4], Q = \P1.InstQueue[8] [4]).
Adding EN signal on $auto$ff.cc:262:slice$12770 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9618 [3], Q = \P1.InstQueue[8] [3]).
Adding EN signal on $auto$ff.cc:262:slice$12769 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9618 [2], Q = \P1.InstQueue[8] [2]).
Adding EN signal on $auto$ff.cc:262:slice$12768 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9618 [1], Q = \P1.InstQueue[8] [1]).
Adding EN signal on $auto$ff.cc:262:slice$12767 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9618 [0], Q = \P1.InstQueue[8] [0]).
Adding EN signal on $auto$ff.cc:262:slice$12766 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9494 [7], Q = \P1.InstQueue[9] [7]).
Adding EN signal on $auto$ff.cc:262:slice$12765 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9494 [6], Q = \P1.InstQueue[9] [6]).
Adding EN signal on $auto$ff.cc:262:slice$12764 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9494 [5], Q = \P1.InstQueue[9] [5]).
Adding EN signal on $auto$ff.cc:262:slice$12763 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9494 [4], Q = \P1.InstQueue[9] [4]).
Adding EN signal on $auto$ff.cc:262:slice$12762 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9494 [3], Q = \P1.InstQueue[9] [3]).
Adding EN signal on $auto$ff.cc:262:slice$12761 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9494 [2], Q = \P1.InstQueue[9] [2]).
Adding EN signal on $auto$ff.cc:262:slice$12760 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9494 [1], Q = \P1.InstQueue[9] [1]).
Adding EN signal on $auto$ff.cc:262:slice$12759 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9494 [0], Q = \P1.InstQueue[9] [0]).
Adding EN signal on $auto$ff.cc:262:slice$12758 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9370 [7], Q = \P1.InstQueue[10] [7]).
Adding EN signal on $auto$ff.cc:262:slice$12757 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9370 [6], Q = \P1.InstQueue[10] [6]).
Adding EN signal on $auto$ff.cc:262:slice$12756 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9370 [5], Q = \P1.InstQueue[10] [5]).
Adding EN signal on $auto$ff.cc:262:slice$12755 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9370 [4], Q = \P1.InstQueue[10] [4]).
Adding EN signal on $auto$ff.cc:262:slice$12754 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9370 [3], Q = \P1.InstQueue[10] [3]).
Adding EN signal on $auto$ff.cc:262:slice$12753 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9370 [2], Q = \P1.InstQueue[10] [2]).
Adding EN signal on $auto$ff.cc:262:slice$12752 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9370 [1], Q = \P1.InstQueue[10] [1]).
Adding EN signal on $auto$ff.cc:262:slice$12751 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9370 [0], Q = \P1.InstQueue[10] [0]).
Adding EN signal on $auto$ff.cc:262:slice$12750 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9246 [7], Q = \P1.InstQueue[11] [7]).
Adding EN signal on $auto$ff.cc:262:slice$12749 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9246 [6], Q = \P1.InstQueue[11] [6]).
Adding EN signal on $auto$ff.cc:262:slice$12748 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9246 [5], Q = \P1.InstQueue[11] [5]).
Adding EN signal on $auto$ff.cc:262:slice$12747 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9246 [4], Q = \P1.InstQueue[11] [4]).
Adding EN signal on $auto$ff.cc:262:slice$12746 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9246 [3], Q = \P1.InstQueue[11] [3]).
Adding EN signal on $auto$ff.cc:262:slice$12745 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9246 [2], Q = \P1.InstQueue[11] [2]).
Adding EN signal on $auto$ff.cc:262:slice$12744 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9246 [1], Q = \P1.InstQueue[11] [1]).
Adding EN signal on $auto$ff.cc:262:slice$12743 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9246 [0], Q = \P1.InstQueue[11] [0]).
Adding EN signal on $auto$ff.cc:262:slice$12742 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9122 [7], Q = \P1.InstQueue[12] [7]).
Adding EN signal on $auto$ff.cc:262:slice$12741 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9122 [6], Q = \P1.InstQueue[12] [6]).
Adding EN signal on $auto$ff.cc:262:slice$12740 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9122 [5], Q = \P1.InstQueue[12] [5]).
Adding EN signal on $auto$ff.cc:262:slice$12739 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9122 [4], Q = \P1.InstQueue[12] [4]).
Adding EN signal on $auto$ff.cc:262:slice$12738 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9122 [3], Q = \P1.InstQueue[12] [3]).
Adding EN signal on $auto$ff.cc:262:slice$12737 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9122 [2], Q = \P1.InstQueue[12] [2]).
Adding EN signal on $auto$ff.cc:262:slice$12736 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9122 [1], Q = \P1.InstQueue[12] [1]).
Adding EN signal on $auto$ff.cc:262:slice$12735 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$9122 [0], Q = \P1.InstQueue[12] [0]).
Adding EN signal on $auto$ff.cc:262:slice$12734 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8998 [7], Q = \P1.InstQueue[13] [7]).
Adding EN signal on $auto$ff.cc:262:slice$12733 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8998 [6], Q = \P1.InstQueue[13] [6]).
Adding EN signal on $auto$ff.cc:262:slice$12732 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8998 [5], Q = \P1.InstQueue[13] [5]).
Adding EN signal on $auto$ff.cc:262:slice$12731 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8998 [4], Q = \P1.InstQueue[13] [4]).
Adding EN signal on $auto$ff.cc:262:slice$12730 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8998 [3], Q = \P1.InstQueue[13] [3]).
Adding EN signal on $auto$ff.cc:262:slice$12729 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8998 [2], Q = \P1.InstQueue[13] [2]).
Adding EN signal on $auto$ff.cc:262:slice$12728 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8998 [1], Q = \P1.InstQueue[13] [1]).
Adding EN signal on $auto$ff.cc:262:slice$12727 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8998 [0], Q = \P1.InstQueue[13] [0]).
Adding EN signal on $auto$ff.cc:262:slice$12726 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8874 [7], Q = \P1.InstQueue[14] [7]).
Adding EN signal on $auto$ff.cc:262:slice$12725 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8874 [6], Q = \P1.InstQueue[14] [6]).
Adding EN signal on $auto$ff.cc:262:slice$12724 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8874 [5], Q = \P1.InstQueue[14] [5]).
Adding EN signal on $auto$ff.cc:262:slice$12723 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8874 [4], Q = \P1.InstQueue[14] [4]).
Adding EN signal on $auto$ff.cc:262:slice$12722 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8874 [3], Q = \P1.InstQueue[14] [3]).
Adding EN signal on $auto$ff.cc:262:slice$12721 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8874 [2], Q = \P1.InstQueue[14] [2]).
Adding EN signal on $auto$ff.cc:262:slice$12720 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8874 [1], Q = \P1.InstQueue[14] [1]).
Adding EN signal on $auto$ff.cc:262:slice$12719 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8874 [0], Q = \P1.InstQueue[14] [0]).
Adding EN signal on $auto$ff.cc:262:slice$12718 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8750 [7], Q = \P1.InstQueue[15] [7]).
Adding EN signal on $auto$ff.cc:262:slice$12717 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8750 [6], Q = \P1.InstQueue[15] [6]).
Adding EN signal on $auto$ff.cc:262:slice$12716 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8750 [5], Q = \P1.InstQueue[15] [5]).
Adding EN signal on $auto$ff.cc:262:slice$12715 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8750 [4], Q = \P1.InstQueue[15] [4]).
Adding EN signal on $auto$ff.cc:262:slice$12714 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8750 [3], Q = \P1.InstQueue[15] [3]).
Adding EN signal on $auto$ff.cc:262:slice$12713 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8750 [2], Q = \P1.InstQueue[15] [2]).
Adding EN signal on $auto$ff.cc:262:slice$12712 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8750 [1], Q = \P1.InstQueue[15] [1]).
Adding EN signal on $auto$ff.cc:262:slice$12711 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8750 [0], Q = \P1.InstQueue[15] [0]).
Adding EN signal on $auto$ff.cc:262:slice$12710 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8055 [3], Q = \P1.State2 [3]).
Adding EN signal on $auto$ff.cc:262:slice$12709 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8055 [2], Q = \P1.State2 [2]).
Adding EN signal on $auto$ff.cc:262:slice$12708 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8055 [1], Q = \P1.State2 [1]).
Adding EN signal on $auto$ff.cc:262:slice$12707 ($_DFF_PP0_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$8055 [0], Q = \P1.State2 [0]).

yosys> opt_clean

3.27.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 7 unused cells and 3156 unused wires.
<suppressed ~8 debug messages>

yosys> opt_expr

3.27.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~13114 debug messages>

3.27.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.27.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.27.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
<suppressed ~53025 debug messages>
Removed a total of 17675 cells.

yosys> opt_dff

3.27.20. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$2981 ($_DFF_PP0_) from module b15 (D = \ByteEnable [0], Q = \BE_n [0]).
Adding EN signal on $auto$ff.cc:262:slice$2982 ($_DFF_PP0_) from module b15 (D = \ByteEnable [1], Q = \BE_n [1]).
Adding EN signal on $auto$ff.cc:262:slice$2983 ($_DFF_PP0_) from module b15 (D = \ByteEnable [2], Q = \BE_n [2]).
Adding EN signal on $auto$ff.cc:262:slice$2984 ($_DFF_PP0_) from module b15 (D = \ByteEnable [3], Q = \BE_n [3]).
Adding EN signal on $auto$ff.cc:262:slice$3015 ($_DFF_PP0_) from module b15 (D = $verific$n398$9, Q = \W_R_n).
Adding EN signal on $auto$ff.cc:262:slice$3017 ($_DFF_PP0_) from module b15 (D = \MemoryFetch, Q = \M_IO_n).

yosys> opt_clean

3.27.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 12 unused cells and 15399 unused wires.
<suppressed ~13 debug messages>

yosys> opt_expr

3.27.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

3.27.23. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.27.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.27.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
<suppressed ~33 debug messages>
Removed a total of 11 cells.

yosys> opt_dff

3.27.27. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 0 unused cells and 11 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.27.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

3.27.30. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.27.31. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.32. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.27.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.34. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

yosys> opt_expr

3.27.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

3.27.37. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~2912 debug messages>

yosys> opt_merge

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
<suppressed ~45 debug messages>
Removed a total of 15 cells.

yosys> opt_dff

3.28.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 0 unused cells and 159 unused wires.
<suppressed ~1 debug messages>

3.28.5. Finished fast OPT passes.

yosys> memory_map

3.29. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.30. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~20 debug messages>

yosys> opt_merge -nomux

3.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_share

3.30.6. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$2122 in front of them:
        $auto$simplemap.cc:278:simplemap_mux$6058
        $auto$simplemap.cc:278:simplemap_mux$5711

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$2460 in front of them:
        $auto$simplemap.cc:312:simplemap_bmux$2450
        $auto$simplemap.cc:312:simplemap_bmux$2447


yosys> opt_dff

3.30.7. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$53378 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7898 [1], Q = \P1.InstAddrPointer [1]).
Adding EN signal on $auto$ff.cc:262:slice$53156 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7898 [2], Q = \P1.InstAddrPointer [2]).
Adding EN signal on $auto$ff.cc:262:slice$52934 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7898 [3], Q = \P1.InstAddrPointer [3]).
Adding EN signal on $auto$ff.cc:262:slice$52712 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7898 [4], Q = \P1.InstAddrPointer [4]).
Adding EN signal on $auto$ff.cc:262:slice$52490 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7898 [5], Q = \P1.InstAddrPointer [5]).
Adding EN signal on $auto$ff.cc:262:slice$52268 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7898 [6], Q = \P1.InstAddrPointer [6]).
Adding EN signal on $auto$ff.cc:262:slice$52046 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7898 [7], Q = \P1.InstAddrPointer [7]).
Adding EN signal on $auto$ff.cc:262:slice$51824 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7898 [8], Q = \P1.InstAddrPointer [8]).
Adding EN signal on $auto$ff.cc:262:slice$51602 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7898 [9], Q = \P1.InstAddrPointer [9]).
Adding EN signal on $auto$ff.cc:262:slice$51380 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7898 [10], Q = \P1.InstAddrPointer [10]).
Adding EN signal on $auto$ff.cc:262:slice$51158 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7898 [11], Q = \P1.InstAddrPointer [11]).
Adding EN signal on $auto$ff.cc:262:slice$50936 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7898 [12], Q = \P1.InstAddrPointer [12]).
Adding EN signal on $auto$ff.cc:262:slice$50714 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7898 [13], Q = \P1.InstAddrPointer [13]).
Adding EN signal on $auto$ff.cc:262:slice$50492 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7898 [14], Q = \P1.InstAddrPointer [14]).
Adding EN signal on $auto$ff.cc:262:slice$50270 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7898 [15], Q = \P1.InstAddrPointer [15]).
Adding EN signal on $auto$ff.cc:262:slice$50048 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7898 [16], Q = \P1.InstAddrPointer [16]).
Adding EN signal on $auto$ff.cc:262:slice$49826 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7898 [17], Q = \P1.InstAddrPointer [17]).
Adding EN signal on $auto$ff.cc:262:slice$49604 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7898 [18], Q = \P1.InstAddrPointer [18]).
Adding EN signal on $auto$ff.cc:262:slice$49382 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7898 [19], Q = \P1.InstAddrPointer [19]).
Adding EN signal on $auto$ff.cc:262:slice$49160 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7898 [20], Q = \P1.InstAddrPointer [20]).
Adding EN signal on $auto$ff.cc:262:slice$48938 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7898 [21], Q = \P1.InstAddrPointer [21]).
Adding EN signal on $auto$ff.cc:262:slice$48716 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7898 [22], Q = \P1.InstAddrPointer [22]).
Adding EN signal on $auto$ff.cc:262:slice$48494 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7898 [23], Q = \P1.InstAddrPointer [23]).
Adding EN signal on $auto$ff.cc:262:slice$48272 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7898 [24], Q = \P1.InstAddrPointer [24]).
Adding EN signal on $auto$ff.cc:262:slice$48050 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7898 [25], Q = \P1.InstAddrPointer [25]).
Adding EN signal on $auto$ff.cc:262:slice$47828 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7898 [26], Q = \P1.InstAddrPointer [26]).
Adding EN signal on $auto$ff.cc:262:slice$47606 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7898 [27], Q = \P1.InstAddrPointer [27]).
Adding EN signal on $auto$ff.cc:262:slice$47384 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7898 [28], Q = \P1.InstAddrPointer [28]).
Adding EN signal on $auto$ff.cc:262:slice$47162 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7898 [29], Q = \P1.InstAddrPointer [29]).
Adding EN signal on $auto$ff.cc:262:slice$46940 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7898 [30], Q = \P1.InstAddrPointer [30]).
Adding EN signal on $auto$ff.cc:262:slice$46718 ($_DFFE_PP0P_) from module b15 (D = $auto$simplemap.cc:309:simplemap_bmux$7898 [31], Q = \P1.InstAddrPointer [31]).

yosys> opt_clean

3.30.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 0 unused cells and 64 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.30.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~157 debug messages>

3.30.10. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.30.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

yosys> opt_reduce -full

3.30.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.30.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
<suppressed ~639 debug messages>
Removed a total of 213 cells.

yosys> opt_share

3.30.14. Executing OPT_SHARE pass.

yosys> opt_dff

3.30.15. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 0 unused cells and 216 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.30.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

3.30.18. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.30.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

yosys> opt_reduce -full

3.30.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.30.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_share

3.30.22. Executing OPT_SHARE pass.

yosys> opt_dff

3.30.23. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

yosys> opt_expr -full

3.30.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

3.30.26. Finished OPT passes. (There is nothing left to do.)

yosys> techmap -map +/techmap.v

3.31. Executing TECHMAP pass (map to technology primitives).

3.31.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/de-issue/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/de-issue/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.31.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
No more expansions possible.
<suppressed ~73 debug messages>

yosys> opt -sat

3.32. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

yosys> opt_merge -nomux

3.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.32.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.32.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.32.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.32.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.32.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

yosys> opt_expr

3.32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

3.32.9. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

3.33. Executing ABC pass (technology mapping using ABC).

3.33.1. Summary of detected clock domains:
  588 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$77315, arst=\RESET, srst={ }
  8 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$77255, arst=\RESET, srst={ }
  411 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$66439, arst=\RESET, srst={ }
  851 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$65965, arst=\RESET, srst={ }
  38 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$65153, arst=\RESET, srst={ }
  20 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$64401, arst=\RESET, srst={ }
  36 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$63649, arst=\RESET, srst={ }
  20 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$62897, arst=\RESET, srst={ }
  36 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$62145, arst=\RESET, srst={ }
  20 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$61393, arst=\RESET, srst={ }
  36 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$60641, arst=\RESET, srst={ }
  20 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$59889, arst=\RESET, srst={ }
  36 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$59137, arst=\RESET, srst={ }
  20 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$58385, arst=\RESET, srst={ }
  36 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$57633, arst=\RESET, srst={ }
  20 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$56881, arst=\RESET, srst={ }
  36 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$56129, arst=\RESET, srst={ }
  20 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$55377, arst=\RESET, srst={ }
  36 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$54625, arst=\RESET, srst={ }
  38 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$53873, arst=\RESET, srst={ }
  48 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$53774, arst=\RESET, srst={ }
  91 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$46707, arst=\RESET, srst={ }
  12 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$46584, arst=\RESET, srst={ }
  203 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$43267, arst=\RESET, srst={ }
  49 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$43152, arst=\RESET, srst={ }
  102 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$38817, arst=\RESET, srst={ }
  10 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$38674, arst=\RESET, srst={ }
  25 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$38562, arst=\RESET, srst={ }
  55 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$38287, arst=\RESET, srst={ }
  240 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$36689, arst=\RESET, srst={ }
  180 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$33812, arst=\RESET, srst={ }
  386 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$30679, arst=\RESET, srst={ }
  210 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$25307, arst=\RESET, srst={ }
  13 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$25140, arst=\RESET, srst={ }
  14 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$25017, arst=\RESET, srst={ }
  31 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$24894, arst=\RESET, srst={ }
  41 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$23587, arst=\RESET, srst={ }
  36 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$21110, arst=\RESET, srst={ }
  20 cells in clk=\CLOCK, en=$auto$opt_dff.cc:194:make_patterns_logic$1119, arst=\RESET, srst={ }
  67 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$19390, arst=\RESET, srst={ }
  4 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$19343, arst=\RESET, srst={ }
  4 cells in clk=\CLOCK, en=$auto$opt_dff.cc:194:make_patterns_logic$19309, arst=\RESET, srst={ }
  88 cells in clk=\CLOCK, en=$auto$opt_dff.cc:194:make_patterns_logic$19255, arst=\RESET, srst={ }
  694 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$19247, arst=\RESET, srst={ }
  234 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$19017, arst=\RESET, srst={ }

3.33.2. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$77315, asynchronously reset by \RESET
Extracted 588 gates and 708 wires to a netlist network with 120 inputs and 98 outputs.

3.33.2.1. Executing ABC.

3.33.3. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$77255, asynchronously reset by \RESET
Extracted 8 gates and 16 wires to a netlist network with 8 inputs and 7 outputs.

3.33.3.1. Executing ABC.

3.33.4. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$66439, asynchronously reset by \RESET
Extracted 321 gates and 607 wires to a netlist network with 284 inputs and 168 outputs.

3.33.4.1. Executing ABC.

3.33.5. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$65965, asynchronously reset by \RESET
Extracted 816 gates and 1455 wires to a netlist network with 637 inputs and 311 outputs.

3.33.5.1. Executing ABC.

3.33.6. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$65153, asynchronously reset by \RESET
Extracted 38 gates and 70 wires to a netlist network with 32 inputs and 27 outputs.

3.33.6.1. Executing ABC.

3.33.7. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$64401, asynchronously reset by \RESET
Extracted 20 gates and 41 wires to a netlist network with 21 inputs and 17 outputs.

3.33.7.1. Executing ABC.

3.33.8. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$63649, asynchronously reset by \RESET
Extracted 36 gates and 66 wires to a netlist network with 30 inputs and 25 outputs.

3.33.8.1. Executing ABC.

3.33.9. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$62897, asynchronously reset by \RESET
Extracted 20 gates and 41 wires to a netlist network with 21 inputs and 17 outputs.

3.33.9.1. Executing ABC.

3.33.10. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$62145, asynchronously reset by \RESET
Extracted 36 gates and 66 wires to a netlist network with 30 inputs and 25 outputs.

3.33.10.1. Executing ABC.

3.33.11. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$61393, asynchronously reset by \RESET
Extracted 20 gates and 41 wires to a netlist network with 21 inputs and 17 outputs.

3.33.11.1. Executing ABC.

3.33.12. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$60641, asynchronously reset by \RESET
Extracted 36 gates and 66 wires to a netlist network with 30 inputs and 25 outputs.

3.33.12.1. Executing ABC.

3.33.13. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$59889, asynchronously reset by \RESET
Extracted 20 gates and 41 wires to a netlist network with 21 inputs and 17 outputs.

3.33.13.1. Executing ABC.

3.33.14. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$59137, asynchronously reset by \RESET
Extracted 36 gates and 66 wires to a netlist network with 30 inputs and 25 outputs.

3.33.14.1. Executing ABC.

3.33.15. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$58385, asynchronously reset by \RESET
Extracted 20 gates and 41 wires to a netlist network with 21 inputs and 17 outputs.

3.33.15.1. Executing ABC.

3.33.16. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$57633, asynchronously reset by \RESET
Extracted 36 gates and 66 wires to a netlist network with 30 inputs and 25 outputs.

3.33.16.1. Executing ABC.

3.33.17. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$56881, asynchronously reset by \RESET
Extracted 20 gates and 41 wires to a netlist network with 21 inputs and 17 outputs.

3.33.17.1. Executing ABC.

3.33.18. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$56129, asynchronously reset by \RESET
Extracted 36 gates and 66 wires to a netlist network with 30 inputs and 25 outputs.

3.33.18.1. Executing ABC.

3.33.19. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$55377, asynchronously reset by \RESET
Extracted 20 gates and 41 wires to a netlist network with 21 inputs and 17 outputs.

3.33.19.1. Executing ABC.

3.33.20. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$54625, asynchronously reset by \RESET
Extracted 36 gates and 66 wires to a netlist network with 30 inputs and 25 outputs.

3.33.20.1. Executing ABC.

3.33.21. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$53873, asynchronously reset by \RESET
Extracted 38 gates and 67 wires to a netlist network with 28 inputs and 34 outputs.

3.33.21.1. Executing ABC.

3.33.22. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$53774, asynchronously reset by \RESET
Extracted 48 gates and 78 wires to a netlist network with 29 inputs and 12 outputs.

3.33.22.1. Executing ABC.

3.33.23. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$46707, asynchronously reset by \RESET
Extracted 91 gates and 157 wires to a netlist network with 66 inputs and 6 outputs.

3.33.23.1. Executing ABC.

3.33.24. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$46584, asynchronously reset by \RESET
Extracted 9 gates and 17 wires to a netlist network with 8 inputs and 5 outputs.

3.33.24.1. Executing ABC.

3.33.25. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$43267, asynchronously reset by \RESET
Extracted 203 gates and 243 wires to a netlist network with 40 inputs and 93 outputs.

3.33.25.1. Executing ABC.

3.33.26. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$79100$auto$opt_dff.cc:219:make_patterns_logic$43152, asynchronously reset by \RESET
Extracted 49 gates and 82 wires to a netlist network with 31 inputs and 21 outputs.

3.33.26.1. Executing ABC.

3.33.27. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$38817, asynchronously reset by \RESET
Extracted 102 gates and 164 wires to a netlist network with 61 inputs and 33 outputs.

3.33.27.1. Executing ABC.

3.33.28. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$38674, asynchronously reset by \RESET
Extracted 10 gates and 19 wires to a netlist network with 9 inputs and 3 outputs.

3.33.28.1. Executing ABC.

3.33.29. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$38562, asynchronously reset by \RESET
Extracted 21 gates and 34 wires to a netlist network with 12 inputs and 16 outputs.

3.33.29.1. Executing ABC.

3.33.30. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$38287, asynchronously reset by \RESET
Extracted 49 gates and 72 wires to a netlist network with 22 inputs and 34 outputs.

3.33.30.1. Executing ABC.

3.33.31. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$36689, asynchronously reset by \RESET
Extracted 240 gates and 366 wires to a netlist network with 125 inputs and 55 outputs.

3.33.31.1. Executing ABC.

3.33.32. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$33812, asynchronously reset by \RESET
Extracted 180 gates and 264 wires to a netlist network with 83 inputs and 48 outputs.

3.33.32.1. Executing ABC.

3.33.33. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$30679, asynchronously reset by \RESET
Extracted 378 gates and 567 wires to a netlist network with 188 inputs and 91 outputs.

3.33.33.1. Executing ABC.

3.33.34. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$25307, asynchronously reset by \RESET
Extracted 154 gates and 206 wires to a netlist network with 50 inputs and 78 outputs.

3.33.34.1. Executing ABC.

3.33.35. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$25140, asynchronously reset by \RESET
Extracted 13 gates and 22 wires to a netlist network with 9 inputs and 2 outputs.

3.33.35.1. Executing ABC.

3.33.36. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$25017, asynchronously reset by \RESET
Extracted 14 gates and 25 wires to a netlist network with 11 inputs and 5 outputs.

3.33.36.1. Executing ABC.

3.33.37. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$24894, asynchronously reset by \RESET
Extracted 31 gates and 49 wires to a netlist network with 17 inputs and 12 outputs.

3.33.37.1. Executing ABC.

3.33.38. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$23587, asynchronously reset by \RESET
Extracted 41 gates and 82 wires to a netlist network with 41 inputs and 37 outputs.

3.33.38.1. Executing ABC.

3.33.39. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$21110, asynchronously reset by \RESET
Extracted 36 gates and 65 wires to a netlist network with 29 inputs and 16 outputs.

3.33.39.1. Executing ABC.

3.33.40. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$1119, asynchronously reset by \RESET
Extracted 20 gates and 31 wires to a netlist network with 10 inputs and 6 outputs.

3.33.40.1. Executing ABC.

3.33.41. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$19390, asynchronously reset by \RESET
Extracted 63 gates and 128 wires to a netlist network with 65 inputs and 31 outputs.

3.33.41.1. Executing ABC.

3.33.42. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$19343, asynchronously reset by \RESET
Extracted 4 gates and 10 wires to a netlist network with 6 inputs and 3 outputs.

3.33.42.1. Executing ABC.

3.33.43. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19309, asynchronously reset by \RESET
Extracted 4 gates and 11 wires to a netlist network with 6 inputs and 3 outputs.

3.33.43.1. Executing ABC.

3.33.44. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19255, asynchronously reset by \RESET
Extracted 88 gates and 108 wires to a netlist network with 18 inputs and 21 outputs.

3.33.44.1. Executing ABC.

3.33.45. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$19247, asynchronously reset by \RESET
Extracted 678 gates and 929 wires to a netlist network with 250 inputs and 303 outputs.

3.33.45.1. Executing ABC.

3.33.46. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$19017, asynchronously reset by \RESET
Extracted 234 gates and 338 wires to a netlist network with 104 inputs and 115 outputs.

3.33.46.1. Executing ABC.

yosys> abc -dff

3.34. Executing ABC pass (technology mapping using ABC).

3.34.1. Summary of detected clock domains:
  86 cells in clk=\CLOCK, en=$abc$80522$auto$opt_dff.cc:219:make_patterns_logic$62897, arst=\RESET, srst={ }
  94 cells in clk=\CLOCK, en=$abc$80641$auto$opt_dff.cc:219:make_patterns_logic$60641, arst=\RESET, srst={ }
  92 cells in clk=\CLOCK, en=$abc$80604$auto$opt_dff.cc:219:make_patterns_logic$61393, arst=\RESET, srst={ }
  84 cells in clk=\CLOCK, en=$abc$80477$auto$opt_dff.cc:219:make_patterns_logic$63649, arst=\RESET, srst={ }
  92 cells in clk=\CLOCK, en=$abc$80440$auto$opt_dff.cc:219:make_patterns_logic$64401, arst=\RESET, srst={ }
  4 cells in clk=\CLOCK, en=$abc$83119$auto$opt_dff.cc:194:make_patterns_logic$19309, arst=\RESET, srst={ }
  13 cells in clk=\CLOCK, en=$abc$82822$auto$opt_dff.cc:219:make_patterns_logic$25017, arst=\RESET, srst={ }
  3 cells in clk=\CLOCK, en=$abc$83113$auto$opt_dff.cc:219:make_patterns_logic$19343, arst=\RESET, srst={ }
  21 cells in clk=\CLOCK, en=$abc$82837$auto$opt_dff.cc:219:make_patterns_logic$24894, arst=\RESET, srst={ }
  346 cells in clk=\CLOCK, en=$abc$78825$auto$opt_dff.cc:219:make_patterns_logic$66439, arst=\RESET, srst={ }
  557 cells in clk=\CLOCK, en=$abc$79100$auto$opt_dff.cc:219:make_patterns_logic$65965, arst=\RESET, srst={ }
  22 cells in clk=\CLOCK, en=$abc$82995$auto$opt_dff.cc:194:make_patterns_logic$1119, arst=\RESET, srst={ }
  237 cells in clk=\CLOCK, en=$abc$83220$auto$opt_dff.cc:219:make_patterns_logic$19247, arst=\RESET, srst={ }
  126 cells in clk=\CLOCK, en=$abc$83125$auto$opt_dff.cc:194:make_patterns_logic$19255, arst=\RESET, srst={ }
  92 cells in clk=\CLOCK, en=$abc$81112$auto$opt_dff.cc:219:make_patterns_logic$46707, arst=\RESET, srst={ }
  31 cells in clk=\CLOCK, en=$abc$81653$auto$opt_dff.cc:219:make_patterns_logic$38562, arst=\RESET, srst={ }
  10 cells in clk=\CLOCK, en=$abc$81642$auto$opt_dff.cc:219:make_patterns_logic$38674, arst=\RESET, srst={ }
  35 cells in clk=\CLOCK, en=$abc$79100$auto$opt_dff.cc:219:make_patterns_logic$43152, arst=\RESET, srst={ }
  17 cells in clk=\CLOCK, en=$abc$81200$auto$opt_dff.cc:219:make_patterns_logic$46584, arst=\RESET, srst={ }
  85 cells in clk=\CLOCK, en=$abc$80768$auto$opt_dff.cc:219:make_patterns_logic$58385, arst=\RESET, srst={ }
  90 cells in clk=\CLOCK, en=$abc$80805$auto$opt_dff.cc:219:make_patterns_logic$57633, arst=\RESET, srst={ }
  79 cells in clk=\CLOCK, en=$abc$80850$auto$opt_dff.cc:219:make_patterns_logic$56881, arst=\RESET, srst={ }
  90 cells in clk=\CLOCK, en=$abc$80887$auto$opt_dff.cc:219:make_patterns_logic$56129, arst=\RESET, srst={ }
  79 cells in clk=\CLOCK, en=$abc$80932$auto$opt_dff.cc:219:make_patterns_logic$55377, arst=\RESET, srst={ }
  78 cells in clk=\CLOCK, en=$abc$80969$auto$opt_dff.cc:219:make_patterns_logic$54625, arst=\RESET, srst={ }
  42 cells in clk=\CLOCK, en=$abc$81072$auto$opt_dff.cc:219:make_patterns_logic$53774, arst=\RESET, srst={ }
  92 cells in clk=\CLOCK, en=$abc$81676$auto$opt_dff.cc:219:make_patterns_logic$38287, arst=\RESET, srst={ }
  235 cells in clk=\CLOCK, en=$abc$82029$auto$opt_dff.cc:219:make_patterns_logic$33812, arst=\RESET, srst={ }
  363 cells in clk=\CLOCK, en=$abc$82274$auto$opt_dff.cc:219:make_patterns_logic$30679, arst=\RESET, srst={ }
  11 cells in clk=\CLOCK, en=$abc$82810$auto$opt_dff.cc:219:make_patterns_logic$25140, arst=\RESET, srst={ }
  56 cells in clk=\CLOCK, en=$abc$82936$auto$opt_dff.cc:219:make_patterns_logic$21110, arst=\RESET, srst={ }
  8 cells in clk=\CLOCK, en=$abc$78805$auto$opt_dff.cc:219:make_patterns_logic$77255, arst=\RESET, srst={ }
  409 cells in clk=\CLOCK, en=$abc$78154$auto$opt_dff.cc:219:make_patterns_logic$77315, arst=\RESET, srst={ }
  33 cells in clk=\CLOCK, en=$abc$83019$auto$opt_dff.cc:219:make_patterns_logic$19390, arst=\RESET, srst={ }
  109 cells in clk=\CLOCK, en=$abc$81014$auto$opt_dff.cc:219:make_patterns_logic$53873, arst=\RESET, srst={ }
  78 cells in clk=\CLOCK, en=$abc$80559$auto$opt_dff.cc:219:make_patterns_logic$62145, arst=\RESET, srst={ }
  84 cells in clk=\CLOCK, en=$abc$80723$auto$opt_dff.cc:219:make_patterns_logic$59137, arst=\RESET, srst={ }
  77 cells in clk=\CLOCK, en=$abc$80686$auto$opt_dff.cc:219:make_patterns_logic$59889, arst=\RESET, srst={ }
  79 cells in clk=\CLOCK, en=$abc$80393$auto$opt_dff.cc:219:make_patterns_logic$65153, arst=\RESET, srst={ }
  295 cells in clk=\CLOCK, en=$abc$81736$auto$opt_dff.cc:219:make_patterns_logic$36689, arst=\RESET, srst={ }
  120 cells in clk=\CLOCK, en=$abc$81485$auto$opt_dff.cc:219:make_patterns_logic$38817, arst=\RESET, srst={ }
  493 cells in clk=\CLOCK, en=$abc$82619$auto$opt_dff.cc:219:make_patterns_logic$25307, arst=\RESET, srst={ }
  66 cells in clk=\CLOCK, en=$abc$82863$auto$opt_dff.cc:219:make_patterns_logic$23587, arst=\RESET, srst={ }
  292 cells in clk=\CLOCK, en=$abc$81212$auto$opt_dff.cc:219:make_patterns_logic$43267, arst=\RESET, srst={ }
  183 cells in clk=\CLOCK, en=$abc$83837$auto$opt_dff.cc:219:make_patterns_logic$19017, arst=\RESET, srst={ }

3.34.2. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$80522$auto$opt_dff.cc:219:make_patterns_logic$62897, asynchronously reset by \RESET
Extracted 86 gates and 135 wires to a netlist network with 49 inputs and 14 outputs.

3.34.2.1. Executing ABC.

3.34.3. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$80641$auto$opt_dff.cc:219:make_patterns_logic$60641, asynchronously reset by \RESET
Extracted 94 gates and 146 wires to a netlist network with 52 inputs and 19 outputs.

3.34.3.1. Executing ABC.

3.34.4. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$80604$auto$opt_dff.cc:219:make_patterns_logic$61393, asynchronously reset by \RESET
Extracted 92 gates and 144 wires to a netlist network with 52 inputs and 17 outputs.

3.34.4.1. Executing ABC.

3.34.5. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$80477$auto$opt_dff.cc:219:make_patterns_logic$63649, asynchronously reset by \RESET
Extracted 84 gates and 131 wires to a netlist network with 47 inputs and 13 outputs.

3.34.5.1. Executing ABC.

3.34.6. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$80440$auto$opt_dff.cc:219:make_patterns_logic$64401, asynchronously reset by \RESET
Extracted 92 gates and 144 wires to a netlist network with 52 inputs and 17 outputs.

3.34.6.1. Executing ABC.

3.34.7. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$83119$auto$opt_dff.cc:194:make_patterns_logic$19309, asynchronously reset by \RESET
Extracted 4 gates and 8 wires to a netlist network with 4 inputs and 3 outputs.

3.34.7.1. Executing ABC.

3.34.8. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$82822$auto$opt_dff.cc:219:make_patterns_logic$25017, asynchronously reset by \RESET
Extracted 13 gates and 25 wires to a netlist network with 12 inputs and 6 outputs.

3.34.8.1. Executing ABC.

3.34.9. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$83113$auto$opt_dff.cc:219:make_patterns_logic$19343, asynchronously reset by \RESET
Extracted 3 gates and 8 wires to a netlist network with 5 inputs and 3 outputs.

3.34.9.1. Executing ABC.

3.34.10. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$82837$auto$opt_dff.cc:219:make_patterns_logic$24894, asynchronously reset by \RESET
Extracted 21 gates and 38 wires to a netlist network with 17 inputs and 7 outputs.

3.34.10.1. Executing ABC.

3.34.11. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$78825$auto$opt_dff.cc:219:make_patterns_logic$66439, asynchronously reset by \RESET
Extracted 255 gates and 512 wires to a netlist network with 257 inputs and 147 outputs.

3.34.11.1. Executing ABC.

3.34.12. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$79100$auto$opt_dff.cc:219:make_patterns_logic$65965, asynchronously reset by \RESET
Extracted 534 gates and 833 wires to a netlist network with 299 inputs and 236 outputs.

3.34.12.1. Executing ABC.

3.34.13. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$82995$auto$opt_dff.cc:194:make_patterns_logic$1119, asynchronously reset by \RESET
Extracted 22 gates and 32 wires to a netlist network with 10 inputs and 7 outputs.

3.34.13.1. Executing ABC.

3.34.14. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$83220$auto$opt_dff.cc:219:make_patterns_logic$19247, asynchronously reset by \RESET
Extracted 221 gates and 343 wires to a netlist network with 122 inputs and 104 outputs.

3.34.14.1. Executing ABC.

3.34.15. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$83125$auto$opt_dff.cc:194:make_patterns_logic$19255, asynchronously reset by \RESET
Extracted 126 gates and 200 wires to a netlist network with 74 inputs and 47 outputs.

3.34.15.1. Executing ABC.

3.34.16. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$81112$auto$opt_dff.cc:219:make_patterns_logic$46707, asynchronously reset by \RESET
Extracted 92 gates and 162 wires to a netlist network with 70 inputs and 7 outputs.

3.34.16.1. Executing ABC.

3.34.17. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$81653$auto$opt_dff.cc:219:make_patterns_logic$38562, asynchronously reset by \RESET
Extracted 27 gates and 47 wires to a netlist network with 20 inputs and 15 outputs.

3.34.17.1. Executing ABC.

3.34.18. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$81642$auto$opt_dff.cc:219:make_patterns_logic$38674, asynchronously reset by \RESET
Extracted 10 gates and 20 wires to a netlist network with 10 inputs and 4 outputs.

3.34.18.1. Executing ABC.

3.34.19. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$84878$abc$79100$auto$opt_dff.cc:219:make_patterns_logic$43152, asynchronously reset by \RESET
Extracted 35 gates and 58 wires to a netlist network with 23 inputs and 10 outputs.

3.34.19.1. Executing ABC.

3.34.20. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$81200$auto$opt_dff.cc:219:make_patterns_logic$46584, asynchronously reset by \RESET
Extracted 14 gates and 26 wires to a netlist network with 12 inputs and 6 outputs.

3.34.20.1. Executing ABC.

3.34.21. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$80768$auto$opt_dff.cc:219:make_patterns_logic$58385, asynchronously reset by \RESET
Extracted 85 gates and 133 wires to a netlist network with 48 inputs and 13 outputs.

3.34.21.1. Executing ABC.

3.34.22. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$80805$auto$opt_dff.cc:219:make_patterns_logic$57633, asynchronously reset by \RESET
Extracted 90 gates and 140 wires to a netlist network with 50 inputs and 16 outputs.

3.34.22.1. Executing ABC.

3.34.23. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$80850$auto$opt_dff.cc:219:make_patterns_logic$56881, asynchronously reset by \RESET
Extracted 79 gates and 124 wires to a netlist network with 45 inputs and 10 outputs.

3.34.23.1. Executing ABC.

3.34.24. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$80887$auto$opt_dff.cc:219:make_patterns_logic$56129, asynchronously reset by \RESET
Extracted 90 gates and 140 wires to a netlist network with 50 inputs and 16 outputs.

3.34.24.1. Executing ABC.

3.34.25. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$80932$auto$opt_dff.cc:219:make_patterns_logic$55377, asynchronously reset by \RESET
Extracted 79 gates and 124 wires to a netlist network with 45 inputs and 10 outputs.

3.34.25.1. Executing ABC.

3.34.26. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$80969$auto$opt_dff.cc:219:make_patterns_logic$54625, asynchronously reset by \RESET
Extracted 78 gates and 122 wires to a netlist network with 44 inputs and 10 outputs.

3.34.26.1. Executing ABC.

3.34.27. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$81072$auto$opt_dff.cc:219:make_patterns_logic$53774, asynchronously reset by \RESET
Extracted 42 gates and 73 wires to a netlist network with 31 inputs and 17 outputs.

3.34.27.1. Executing ABC.

3.34.28. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$81676$auto$opt_dff.cc:219:make_patterns_logic$38287, asynchronously reset by \RESET
Extracted 88 gates and 137 wires to a netlist network with 49 inputs and 42 outputs.

3.34.28.1. Executing ABC.

3.34.29. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$82029$auto$opt_dff.cc:219:make_patterns_logic$33812, asynchronously reset by \RESET
Extracted 235 gates and 320 wires to a netlist network with 85 inputs and 48 outputs.

3.34.29.1. Executing ABC.

3.34.30. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$82274$auto$opt_dff.cc:219:make_patterns_logic$30679, asynchronously reset by \RESET
Extracted 355 gates and 548 wires to a netlist network with 193 inputs and 94 outputs.

3.34.30.1. Executing ABC.

3.34.31. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$82810$auto$opt_dff.cc:219:make_patterns_logic$25140, asynchronously reset by \RESET
Extracted 11 gates and 19 wires to a netlist network with 8 inputs and 4 outputs.

3.34.31.1. Executing ABC.

3.34.32. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$82936$auto$opt_dff.cc:219:make_patterns_logic$21110, asynchronously reset by \RESET
Extracted 56 gates and 100 wires to a netlist network with 44 inputs and 21 outputs.

3.34.32.1. Executing ABC.

3.34.33. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$78805$auto$opt_dff.cc:219:make_patterns_logic$77255, asynchronously reset by \RESET
Extracted 8 gates and 16 wires to a netlist network with 8 inputs and 7 outputs.

3.34.33.1. Executing ABC.

3.34.34. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$78154$auto$opt_dff.cc:219:make_patterns_logic$77315, asynchronously reset by \RESET
Extracted 409 gates and 520 wires to a netlist network with 111 inputs and 103 outputs.

3.34.34.1. Executing ABC.

3.34.35. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$83019$auto$opt_dff.cc:219:make_patterns_logic$19390, asynchronously reset by \RESET
Extracted 33 gates and 67 wires to a netlist network with 34 inputs and 31 outputs.

3.34.35.1. Executing ABC.

3.34.36. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$81014$auto$opt_dff.cc:219:make_patterns_logic$53873, asynchronously reset by \RESET
Extracted 109 gates and 169 wires to a netlist network with 60 inputs and 33 outputs.

3.34.36.1. Executing ABC.

3.34.37. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$80559$auto$opt_dff.cc:219:make_patterns_logic$62145, asynchronously reset by \RESET
Extracted 78 gates and 122 wires to a netlist network with 44 inputs and 10 outputs.

3.34.37.1. Executing ABC.

3.34.38. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$80723$auto$opt_dff.cc:219:make_patterns_logic$59137, asynchronously reset by \RESET
Extracted 84 gates and 122 wires to a netlist network with 38 inputs and 13 outputs.

3.34.38.1. Executing ABC.

3.34.39. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$80686$auto$opt_dff.cc:219:make_patterns_logic$59889, asynchronously reset by \RESET
Extracted 77 gates and 120 wires to a netlist network with 43 inputs and 9 outputs.

3.34.39.1. Executing ABC.

3.34.40. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$80393$auto$opt_dff.cc:219:make_patterns_logic$65153, asynchronously reset by \RESET
Extracted 79 gates and 121 wires to a netlist network with 42 inputs and 11 outputs.

3.34.40.1. Executing ABC.

3.34.41. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$81736$auto$opt_dff.cc:219:make_patterns_logic$36689, asynchronously reset by \RESET
Extracted 295 gates and 413 wires to a netlist network with 118 inputs and 65 outputs.

3.34.41.1. Executing ABC.

3.34.42. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$81485$auto$opt_dff.cc:219:make_patterns_logic$38817, asynchronously reset by \RESET
Extracted 120 gates and 195 wires to a netlist network with 75 inputs and 33 outputs.

3.34.42.1. Executing ABC.

3.34.43. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$82619$auto$opt_dff.cc:219:make_patterns_logic$25307, asynchronously reset by \RESET
Extracted 421 gates and 610 wires to a netlist network with 189 inputs and 94 outputs.

3.34.43.1. Executing ABC.

3.34.44. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$82863$auto$opt_dff.cc:219:make_patterns_logic$23587, asynchronously reset by \RESET
Extracted 66 gates and 110 wires to a netlist network with 44 inputs and 31 outputs.

3.34.44.1. Executing ABC.

3.34.45. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$81212$auto$opt_dff.cc:219:make_patterns_logic$43267, asynchronously reset by \RESET
Extracted 292 gates and 395 wires to a netlist network with 103 inputs and 93 outputs.

3.34.45.1. Executing ABC.

3.34.46. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$83837$auto$opt_dff.cc:219:make_patterns_logic$19017, asynchronously reset by \RESET
Extracted 182 gates and 291 wires to a netlist network with 109 inputs and 137 outputs.

3.34.46.1. Executing ABC.

yosys> abc -dff

3.35. Executing ABC pass (technology mapping using ABC).

3.35.1. Summary of detected clock domains:
  91 cells in clk=\CLOCK, en=$abc$84088$abc$80522$auto$opt_dff.cc:219:make_patterns_logic$62897, arst=\RESET, srst={ }
  94 cells in clk=\CLOCK, en=$abc$84183$abc$80641$auto$opt_dff.cc:219:make_patterns_logic$60641, arst=\RESET, srst={ }
  97 cells in clk=\CLOCK, en=$abc$84282$abc$80604$auto$opt_dff.cc:219:make_patterns_logic$61393, arst=\RESET, srst={ }
  87 cells in clk=\CLOCK, en=$abc$84380$abc$80477$auto$opt_dff.cc:219:make_patterns_logic$63649, arst=\RESET, srst={ }
  5 cells in clk=\CLOCK, en=$abc$84571$abc$83119$auto$opt_dff.cc:194:make_patterns_logic$19309, arst=\RESET, srst={ }
  17 cells in clk=\CLOCK, en=$abc$84577$abc$82822$auto$opt_dff.cc:219:make_patterns_logic$25017, arst=\RESET, srst={ }
  5 cells in clk=\CLOCK, en=$abc$84593$abc$83113$auto$opt_dff.cc:219:make_patterns_logic$19343, arst=\RESET, srst={ }
  28 cells in clk=\CLOCK, en=$abc$84599$abc$82837$auto$opt_dff.cc:219:make_patterns_logic$24894, arst=\RESET, srst={ }
  315 cells in clk=\CLOCK, en=$abc$84621$abc$78825$auto$opt_dff.cc:219:make_patterns_logic$66439, arst=\RESET, srst={ }
  499 cells in clk=\CLOCK, en=$abc$84878$abc$79100$auto$opt_dff.cc:219:make_patterns_logic$65965, arst=\RESET, srst={ }
  22 cells in clk=\CLOCK, en=$abc$85405$abc$82995$auto$opt_dff.cc:194:make_patterns_logic$1119, arst=\RESET, srst={ }
  236 cells in clk=\CLOCK, en=$abc$85434$abc$83220$auto$opt_dff.cc:219:make_patterns_logic$19247, arst=\RESET, srst={ }
  98 cells in clk=\CLOCK, en=$abc$84473$abc$80440$auto$opt_dff.cc:219:make_patterns_logic$64401, arst=\RESET, srst={ }
  93 cells in clk=\CLOCK, en=$abc$85778$abc$81112$auto$opt_dff.cc:219:make_patterns_logic$46707, arst=\RESET, srst={ }
  38 cells in clk=\CLOCK, en=$abc$85870$abc$81653$auto$opt_dff.cc:219:make_patterns_logic$38562, arst=\RESET, srst={ }
  10 cells in clk=\CLOCK, en=$abc$85902$abc$81642$auto$opt_dff.cc:219:make_patterns_logic$38674, arst=\RESET, srst={ }
  36 cells in clk=\CLOCK, en=$abc$84878$abc$79100$auto$opt_dff.cc:219:make_patterns_logic$43152, arst=\RESET, srst={ }
  15 cells in clk=\CLOCK, en=$abc$85947$abc$81200$auto$opt_dff.cc:219:make_patterns_logic$46584, arst=\RESET, srst={ }
  90 cells in clk=\CLOCK, en=$abc$85963$abc$80768$auto$opt_dff.cc:219:make_patterns_logic$58385, arst=\RESET, srst={ }
  86 cells in clk=\CLOCK, en=$abc$86057$abc$80805$auto$opt_dff.cc:219:make_patterns_logic$57633, arst=\RESET, srst={ }
  92 cells in clk=\CLOCK, en=$abc$86153$abc$80850$auto$opt_dff.cc:219:make_patterns_logic$56881, arst=\RESET, srst={ }
  94 cells in clk=\CLOCK, en=$abc$86244$abc$80887$auto$opt_dff.cc:219:make_patterns_logic$56129, arst=\RESET, srst={ }
  84 cells in clk=\CLOCK, en=$abc$86340$abc$80932$auto$opt_dff.cc:219:make_patterns_logic$55377, arst=\RESET, srst={ }
  92 cells in clk=\CLOCK, en=$abc$86431$abc$80969$auto$opt_dff.cc:219:make_patterns_logic$54625, arst=\RESET, srst={ }
  41 cells in clk=\CLOCK, en=$abc$86521$abc$81072$auto$opt_dff.cc:219:make_patterns_logic$53774, arst=\RESET, srst={ }
  104 cells in clk=\CLOCK, en=$abc$86565$abc$81676$auto$opt_dff.cc:219:make_patterns_logic$38287, arst=\RESET, srst={ }
  218 cells in clk=\CLOCK, en=$abc$86671$abc$82029$auto$opt_dff.cc:219:make_patterns_logic$33812, arst=\RESET, srst={ }
  8 cells in clk=\CLOCK, en=$abc$87257$abc$82810$auto$opt_dff.cc:219:make_patterns_logic$25140, arst=\RESET, srst={ }
  71 cells in clk=\CLOCK, en=$abc$87267$abc$82936$auto$opt_dff.cc:219:make_patterns_logic$21110, arst=\RESET, srst={ }
  7 cells in clk=\CLOCK, en=$abc$87363$abc$78805$auto$opt_dff.cc:219:make_patterns_logic$77255, arst=\RESET, srst={ }
  428 cells in clk=\CLOCK, en=$abc$87383$abc$78154$auto$opt_dff.cc:219:make_patterns_logic$77315, arst=\RESET, srst={ }
  102 cells in clk=\CLOCK, en=$abc$87896$abc$81014$auto$opt_dff.cc:219:make_patterns_logic$53873, arst=\RESET, srst={ }
  80 cells in clk=\CLOCK, en=$abc$88011$abc$80559$auto$opt_dff.cc:219:make_patterns_logic$62145, arst=\RESET, srst={ }
  77 cells in clk=\CLOCK, en=$abc$88101$abc$80723$auto$opt_dff.cc:219:make_patterns_logic$59137, arst=\RESET, srst={ }
  87 cells in clk=\CLOCK, en=$abc$88183$abc$80686$auto$opt_dff.cc:219:make_patterns_logic$59889, arst=\RESET, srst={ }
  109 cells in clk=\CLOCK, en=$abc$85658$abc$83125$auto$opt_dff.cc:194:make_patterns_logic$19255, arst=\RESET, srst={ }
  88 cells in clk=\CLOCK, en=$abc$88273$abc$80393$auto$opt_dff.cc:219:make_patterns_logic$65153, arst=\RESET, srst={ }
  305 cells in clk=\CLOCK, en=$abc$88371$abc$81736$auto$opt_dff.cc:219:make_patterns_logic$36689, arst=\RESET, srst={ }
  380 cells in clk=\CLOCK, en=$abc$86905$abc$82274$auto$opt_dff.cc:219:make_patterns_logic$30679, arst=\RESET, srst={ }
  123 cells in clk=\CLOCK, en=$abc$88670$abc$81485$auto$opt_dff.cc:219:make_patterns_logic$38817, arst=\RESET, srst={ }
  539 cells in clk=\CLOCK, en=$abc$88813$abc$82619$auto$opt_dff.cc:219:make_patterns_logic$25307, arst=\RESET, srst={ }
  72 cells in clk=\CLOCK, en=$abc$89272$abc$82863$auto$opt_dff.cc:219:make_patterns_logic$23587, arst=\RESET, srst={ }
  36 cells in clk=\CLOCK, en=$abc$87802$abc$83019$auto$opt_dff.cc:219:make_patterns_logic$19390, arst=\RESET, srst={ }
  294 cells in clk=\CLOCK, en=$abc$89371$abc$81212$auto$opt_dff.cc:219:make_patterns_logic$43267, arst=\RESET, srst={ }
  167 cells in clk=\CLOCK, en=$abc$89679$abc$83837$auto$opt_dff.cc:219:make_patterns_logic$19017, arst=\RESET, srst={ }

3.35.2. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$84088$abc$80522$auto$opt_dff.cc:219:make_patterns_logic$62897, asynchronously reset by \RESET
Extracted 91 gates and 140 wires to a netlist network with 49 inputs and 14 outputs.

3.35.2.1. Executing ABC.

3.35.3. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$84183$abc$80641$auto$opt_dff.cc:219:make_patterns_logic$60641, asynchronously reset by \RESET
Extracted 94 gates and 145 wires to a netlist network with 51 inputs and 17 outputs.

3.35.3.1. Executing ABC.

3.35.4. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$84282$abc$80604$auto$opt_dff.cc:219:make_patterns_logic$61393, asynchronously reset by \RESET
Extracted 97 gates and 149 wires to a netlist network with 52 inputs and 17 outputs.

3.35.4.1. Executing ABC.

3.35.5. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$84380$abc$80477$auto$opt_dff.cc:219:make_patterns_logic$63649, asynchronously reset by \RESET
Extracted 87 gates and 134 wires to a netlist network with 47 inputs and 13 outputs.

3.35.5.1. Executing ABC.

3.35.6. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$84571$abc$83119$auto$opt_dff.cc:194:make_patterns_logic$19309, asynchronously reset by \RESET
Extracted 5 gates and 9 wires to a netlist network with 4 inputs and 4 outputs.

3.35.6.1. Executing ABC.

3.35.7. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$84577$abc$82822$auto$opt_dff.cc:219:make_patterns_logic$25017, asynchronously reset by \RESET
Extracted 17 gates and 31 wires to a netlist network with 14 inputs and 8 outputs.

3.35.7.1. Executing ABC.

3.35.8. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$84593$abc$83113$auto$opt_dff.cc:219:make_patterns_logic$19343, asynchronously reset by \RESET
Extracted 5 gates and 10 wires to a netlist network with 5 inputs and 3 outputs.

3.35.8.1. Executing ABC.

3.35.9. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$84599$abc$82837$auto$opt_dff.cc:219:make_patterns_logic$24894, asynchronously reset by \RESET
Extracted 28 gates and 48 wires to a netlist network with 20 inputs and 9 outputs.

3.35.9.1. Executing ABC.

3.35.10. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$84621$abc$78825$auto$opt_dff.cc:219:make_patterns_logic$66439, asynchronously reset by \RESET
Extracted 224 gates and 444 wires to a netlist network with 220 inputs and 133 outputs.

3.35.10.1. Executing ABC.

3.35.11. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$84878$abc$79100$auto$opt_dff.cc:219:make_patterns_logic$65965, asynchronously reset by \RESET
Extracted 478 gates and 757 wires to a netlist network with 279 inputs and 204 outputs.

3.35.11.1. Executing ABC.

3.35.12. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$85405$abc$82995$auto$opt_dff.cc:194:make_patterns_logic$1119, asynchronously reset by \RESET
Extracted 22 gates and 32 wires to a netlist network with 10 inputs and 6 outputs.

3.35.12.1. Executing ABC.

3.35.13. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$85434$abc$83220$auto$opt_dff.cc:219:make_patterns_logic$19247, asynchronously reset by \RESET
Extracted 220 gates and 344 wires to a netlist network with 124 inputs and 102 outputs.

3.35.13.1. Executing ABC.

3.35.14. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$84473$abc$80440$auto$opt_dff.cc:219:make_patterns_logic$64401, asynchronously reset by \RESET
Extracted 98 gates and 151 wires to a netlist network with 53 inputs and 18 outputs.

3.35.14.1. Executing ABC.

3.35.15. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$85778$abc$81112$auto$opt_dff.cc:219:make_patterns_logic$46707, asynchronously reset by \RESET
Extracted 93 gates and 160 wires to a netlist network with 67 inputs and 10 outputs.

3.35.15.1. Executing ABC.

3.35.16. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$85870$abc$81653$auto$opt_dff.cc:219:make_patterns_logic$38562, asynchronously reset by \RESET
Extracted 34 gates and 54 wires to a netlist network with 20 inputs and 18 outputs.

3.35.16.1. Executing ABC.

3.35.17. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$85902$abc$81642$auto$opt_dff.cc:219:make_patterns_logic$38674, asynchronously reset by \RESET
Extracted 10 gates and 20 wires to a netlist network with 10 inputs and 4 outputs.

3.35.17.1. Executing ABC.

3.35.18. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$84878$abc$79100$auto$opt_dff.cc:219:make_patterns_logic$43152, asynchronously reset by \RESET
Extracted 36 gates and 61 wires to a netlist network with 25 inputs and 13 outputs.

3.35.18.1. Executing ABC.

3.35.19. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$85947$abc$81200$auto$opt_dff.cc:219:make_patterns_logic$46584, asynchronously reset by \RESET
Extracted 12 gates and 23 wires to a netlist network with 11 inputs and 4 outputs.

3.35.19.1. Executing ABC.

3.35.20. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$85963$abc$80768$auto$opt_dff.cc:219:make_patterns_logic$58385, asynchronously reset by \RESET
Extracted 90 gates and 139 wires to a netlist network with 49 inputs and 14 outputs.

3.35.20.1. Executing ABC.

3.35.21. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$86057$abc$80805$auto$opt_dff.cc:219:make_patterns_logic$57633, asynchronously reset by \RESET
Extracted 86 gates and 132 wires to a netlist network with 46 inputs and 12 outputs.

3.35.21.1. Executing ABC.

3.35.22. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$86153$abc$80850$auto$opt_dff.cc:219:make_patterns_logic$56881, asynchronously reset by \RESET
Extracted 92 gates and 142 wires to a netlist network with 50 inputs and 15 outputs.

3.35.22.1. Executing ABC.

3.35.23. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$86244$abc$80887$auto$opt_dff.cc:219:make_patterns_logic$56129, asynchronously reset by \RESET
Extracted 94 gates and 144 wires to a netlist network with 50 inputs and 16 outputs.

3.35.23.1. Executing ABC.

3.35.24. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$86340$abc$80932$auto$opt_dff.cc:219:make_patterns_logic$55377, asynchronously reset by \RESET
Extracted 84 gates and 130 wires to a netlist network with 46 inputs and 11 outputs.

3.35.24.1. Executing ABC.

3.35.25. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$86431$abc$80969$auto$opt_dff.cc:219:make_patterns_logic$54625, asynchronously reset by \RESET
Extracted 92 gates and 141 wires to a netlist network with 49 inputs and 15 outputs.

3.35.25.1. Executing ABC.

3.35.26. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$86521$abc$81072$auto$opt_dff.cc:219:make_patterns_logic$53774, asynchronously reset by \RESET
Extracted 41 gates and 72 wires to a netlist network with 31 inputs and 16 outputs.

3.35.26.1. Executing ABC.

3.35.27. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$86565$abc$81676$auto$opt_dff.cc:219:make_patterns_logic$38287, asynchronously reset by \RESET
Extracted 100 gates and 149 wires to a netlist network with 49 inputs and 41 outputs.

3.35.27.1. Executing ABC.

3.35.28. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$86671$abc$82029$auto$opt_dff.cc:219:make_patterns_logic$33812, asynchronously reset by \RESET
Extracted 218 gates and 290 wires to a netlist network with 72 inputs and 39 outputs.

3.35.28.1. Executing ABC.

3.35.29. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$87257$abc$82810$auto$opt_dff.cc:219:make_patterns_logic$25140, asynchronously reset by \RESET
Extracted 8 gates and 15 wires to a netlist network with 7 inputs and 4 outputs.

3.35.29.1. Executing ABC.

3.35.30. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$87267$abc$82936$auto$opt_dff.cc:219:make_patterns_logic$21110, asynchronously reset by \RESET
Extracted 71 gates and 116 wires to a netlist network with 45 inputs and 18 outputs.

3.35.30.1. Executing ABC.

3.35.31. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$87363$abc$78805$auto$opt_dff.cc:219:make_patterns_logic$77255, asynchronously reset by \RESET
Extracted 7 gates and 15 wires to a netlist network with 8 inputs and 7 outputs.

3.35.31.1. Executing ABC.

3.35.32. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$87383$abc$78154$auto$opt_dff.cc:219:make_patterns_logic$77315, asynchronously reset by \RESET
Extracted 428 gates and 539 wires to a netlist network with 111 inputs and 106 outputs.

3.35.32.1. Executing ABC.

3.35.33. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$87896$abc$81014$auto$opt_dff.cc:219:make_patterns_logic$53873, asynchronously reset by \RESET
Extracted 102 gates and 157 wires to a netlist network with 55 inputs and 27 outputs.

3.35.33.1. Executing ABC.

3.35.34. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$88011$abc$80559$auto$opt_dff.cc:219:make_patterns_logic$62145, asynchronously reset by \RESET
Extracted 80 gates and 122 wires to a netlist network with 42 inputs and 9 outputs.

3.35.34.1. Executing ABC.

3.35.35. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$88101$abc$80723$auto$opt_dff.cc:219:make_patterns_logic$59137, asynchronously reset by \RESET
Extracted 77 gates and 115 wires to a netlist network with 38 inputs and 13 outputs.

3.35.35.1. Executing ABC.

3.35.36. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$88183$abc$80686$auto$opt_dff.cc:219:make_patterns_logic$59889, asynchronously reset by \RESET
Extracted 87 gates and 134 wires to a netlist network with 47 inputs and 13 outputs.

3.35.36.1. Executing ABC.

3.35.37. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$85658$abc$83125$auto$opt_dff.cc:194:make_patterns_logic$19255, asynchronously reset by \RESET
Extracted 109 gates and 175 wires to a netlist network with 66 inputs and 45 outputs.

3.35.37.1. Executing ABC.

3.35.38. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$88273$abc$80393$auto$opt_dff.cc:219:make_patterns_logic$65153, asynchronously reset by \RESET
Extracted 88 gates and 128 wires to a netlist network with 40 inputs and 10 outputs.

3.35.38.1. Executing ABC.

3.35.39. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$88371$abc$81736$auto$opt_dff.cc:219:make_patterns_logic$36689, asynchronously reset by \RESET
Extracted 305 gates and 435 wires to a netlist network with 130 inputs and 67 outputs.

3.35.39.1. Executing ABC.

3.35.40. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$86905$abc$82274$auto$opt_dff.cc:219:make_patterns_logic$30679, asynchronously reset by \RESET
Extracted 372 gates and 584 wires to a netlist network with 212 inputs and 95 outputs.

3.35.40.1. Executing ABC.

3.35.41. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$88670$abc$81485$auto$opt_dff.cc:219:make_patterns_logic$38817, asynchronously reset by \RESET
Extracted 123 gates and 189 wires to a netlist network with 66 inputs and 35 outputs.

3.35.41.1. Executing ABC.

3.35.42. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$88813$abc$82619$auto$opt_dff.cc:219:make_patterns_logic$25307, asynchronously reset by \RESET
Extracted 465 gates and 661 wires to a netlist network with 196 inputs and 132 outputs.

3.35.42.1. Executing ABC.

3.35.43. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$89272$abc$82863$auto$opt_dff.cc:219:make_patterns_logic$23587, asynchronously reset by \RESET
Extracted 72 gates and 116 wires to a netlist network with 44 inputs and 24 outputs.

3.35.43.1. Executing ABC.

3.35.44. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$87802$abc$83019$auto$opt_dff.cc:219:make_patterns_logic$19390, asynchronously reset by \RESET
Extracted 36 gates and 74 wires to a netlist network with 38 inputs and 31 outputs.

3.35.44.1. Executing ABC.

3.35.45. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$89371$abc$81212$auto$opt_dff.cc:219:make_patterns_logic$43267, asynchronously reset by \RESET
Extracted 294 gates and 399 wires to a netlist network with 105 inputs and 94 outputs.

3.35.45.1. Executing ABC.

3.35.46. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$89679$abc$83837$auto$opt_dff.cc:219:make_patterns_logic$19017, asynchronously reset by \RESET
Extracted 166 gates and 274 wires to a netlist network with 108 inputs and 120 outputs.

3.35.46.1. Executing ABC.

yosys> abc -dff

3.36. Executing ABC pass (technology mapping using ABC).

3.36.1. Summary of detected clock domains:
  95 cells in clk=\CLOCK, en=$abc$89862$abc$84088$abc$80522$auto$opt_dff.cc:219:make_patterns_logic$62897, arst=\RESET, srst={ }
  95 cells in clk=\CLOCK, en=$abc$89957$abc$84183$abc$80641$auto$opt_dff.cc:219:make_patterns_logic$60641, arst=\RESET, srst={ }
  97 cells in clk=\CLOCK, en=$abc$90055$abc$84282$abc$80604$auto$opt_dff.cc:219:make_patterns_logic$61393, arst=\RESET, srst={ }
  4 cells in clk=\CLOCK, en=$abc$90247$abc$84571$abc$83119$auto$opt_dff.cc:194:make_patterns_logic$19309, arst=\RESET, srst={ }
  23 cells in clk=\CLOCK, en=$abc$90254$abc$84577$abc$82822$auto$opt_dff.cc:219:make_patterns_logic$25017, arst=\RESET, srst={ }
  4 cells in clk=\CLOCK, en=$abc$90271$abc$84593$abc$83113$auto$opt_dff.cc:219:make_patterns_logic$19343, arst=\RESET, srst={ }
  28 cells in clk=\CLOCK, en=$abc$90278$abc$84599$abc$82837$auto$opt_dff.cc:219:make_patterns_logic$24894, arst=\RESET, srst={ }
  337 cells in clk=\CLOCK, en=$abc$90307$abc$84621$abc$78825$auto$opt_dff.cc:219:make_patterns_logic$66439, arst=\RESET, srst={ }
  503 cells in clk=\CLOCK, en=$abc$90537$abc$84878$abc$79100$auto$opt_dff.cc:219:make_patterns_logic$65965, arst=\RESET, srst={ }
  23 cells in clk=\CLOCK, en=$abc$91020$abc$85405$abc$82995$auto$opt_dff.cc:194:make_patterns_logic$1119, arst=\RESET, srst={ }
  236 cells in clk=\CLOCK, en=$abc$91048$abc$85434$abc$83220$auto$opt_dff.cc:219:make_patterns_logic$19247, arst=\RESET, srst={ }
  85 cells in clk=\CLOCK, en=$abc$91367$abc$85778$abc$81112$auto$opt_dff.cc:219:make_patterns_logic$46707, arst=\RESET, srst={ }
  39 cells in clk=\CLOCK, en=$abc$91458$abc$85870$abc$81653$auto$opt_dff.cc:219:make_patterns_logic$38562, arst=\RESET, srst={ }
  10 cells in clk=\CLOCK, en=$abc$91493$abc$85902$abc$81642$auto$opt_dff.cc:219:make_patterns_logic$38674, arst=\RESET, srst={ }
  33 cells in clk=\CLOCK, en=$abc$91505$abc$84878$abc$79100$auto$opt_dff.cc:219:make_patterns_logic$43152, arst=\RESET, srst={ }
  29 cells in clk=\CLOCK, en=$abc$91541$abc$85947$abc$81200$auto$opt_dff.cc:219:make_patterns_logic$46584, arst=\RESET, srst={ }
  91 cells in clk=\CLOCK, en=$abc$91555$abc$85963$abc$80768$auto$opt_dff.cc:219:make_patterns_logic$58385, arst=\RESET, srst={ }
  94 cells in clk=\CLOCK, en=$abc$91650$abc$86057$abc$80805$auto$opt_dff.cc:219:make_patterns_logic$57633, arst=\RESET, srst={ }
  84 cells in clk=\CLOCK, en=$abc$91742$abc$86153$abc$80850$auto$opt_dff.cc:219:make_patterns_logic$56881, arst=\RESET, srst={ }
  82 cells in clk=\CLOCK, en=$abc$91838$abc$86244$abc$80887$auto$opt_dff.cc:219:make_patterns_logic$56129, arst=\RESET, srst={ }
  96 cells in clk=\CLOCK, en=$abc$91934$abc$86340$abc$80932$auto$opt_dff.cc:219:make_patterns_logic$55377, arst=\RESET, srst={ }
  96 cells in clk=\CLOCK, en=$abc$92026$abc$86431$abc$80969$auto$opt_dff.cc:219:make_patterns_logic$54625, arst=\RESET, srst={ }
  99 cells in clk=\CLOCK, en=$abc$91268$abc$84473$abc$80440$auto$opt_dff.cc:219:make_patterns_logic$64401, arst=\RESET, srst={ }
  43 cells in clk=\CLOCK, en=$abc$92121$abc$86521$abc$81072$auto$opt_dff.cc:219:make_patterns_logic$53774, arst=\RESET, srst={ }
  100 cells in clk=\CLOCK, en=$abc$92164$abc$86565$abc$81676$auto$opt_dff.cc:219:make_patterns_logic$38287, arst=\RESET, srst={ }
  7 cells in clk=\CLOCK, en=$abc$92495$abc$87257$abc$82810$auto$opt_dff.cc:219:make_patterns_logic$25140, arst=\RESET, srst={ }
  58 cells in clk=\CLOCK, en=$abc$92505$abc$87267$abc$82936$auto$opt_dff.cc:219:make_patterns_logic$21110, arst=\RESET, srst={ }
  224 cells in clk=\CLOCK, en=$abc$92268$abc$86671$abc$82029$auto$opt_dff.cc:219:make_patterns_logic$33812, arst=\RESET, srst={ }
  8 cells in clk=\CLOCK, en=$abc$92580$abc$87363$abc$78805$auto$opt_dff.cc:219:make_patterns_logic$77255, arst=\RESET, srst={ }
  98 cells in clk=\CLOCK, en=$abc$93035$abc$87896$abc$81014$auto$opt_dff.cc:219:make_patterns_logic$53873, arst=\RESET, srst={ }
  80 cells in clk=\CLOCK, en=$abc$93144$abc$88011$abc$80559$auto$opt_dff.cc:219:make_patterns_logic$62145, arst=\RESET, srst={ }
  75 cells in clk=\CLOCK, en=$abc$93233$abc$88101$abc$80723$auto$opt_dff.cc:219:make_patterns_logic$59137, arst=\RESET, srst={ }
  86 cells in clk=\CLOCK, en=$abc$93315$abc$88183$abc$80686$auto$opt_dff.cc:219:make_patterns_logic$59889, arst=\RESET, srst={ }
  81 cells in clk=\CLOCK, en=$abc$93409$abc$85658$abc$83125$auto$opt_dff.cc:194:make_patterns_logic$19255, arst=\RESET, srst={ }
  436 cells in clk=\CLOCK, en=$abc$92600$abc$87383$abc$78154$auto$opt_dff.cc:219:make_patterns_logic$77315, arst=\RESET, srst={ }
  88 cells in clk=\CLOCK, en=$abc$93519$abc$88273$abc$80393$auto$opt_dff.cc:219:make_patterns_logic$65153, arst=\RESET, srst={ }
  299 cells in clk=\CLOCK, en=$abc$93616$abc$88371$abc$81736$auto$opt_dff.cc:219:make_patterns_logic$36689, arst=\RESET, srst={ }
  375 cells in clk=\CLOCK, en=$abc$93925$abc$86905$abc$82274$auto$opt_dff.cc:219:make_patterns_logic$30679, arst=\RESET, srst={ }
  84 cells in clk=\CLOCK, en=$abc$90153$abc$84380$abc$80477$auto$opt_dff.cc:219:make_patterns_logic$63649, arst=\RESET, srst={ }
  127 cells in clk=\CLOCK, en=$abc$94296$abc$88670$abc$81485$auto$opt_dff.cc:219:make_patterns_logic$38817, arst=\RESET, srst={ }
  79 cells in clk=\CLOCK, en=$abc$94926$abc$89272$abc$82863$auto$opt_dff.cc:219:make_patterns_logic$23587, arst=\RESET, srst={ }
  63 cells in clk=\CLOCK, en=$abc$95037$abc$87802$abc$83019$auto$opt_dff.cc:219:make_patterns_logic$19390, arst=\RESET, srst={ }
  284 cells in clk=\CLOCK, en=$abc$95131$abc$89371$abc$81212$auto$opt_dff.cc:219:make_patterns_logic$43267, arst=\RESET, srst={ }
  523 cells in clk=\CLOCK, en=$abc$94425$abc$88813$abc$82619$auto$opt_dff.cc:219:make_patterns_logic$25307, arst=\RESET, srst={ }
  163 cells in clk=\CLOCK, en=$abc$95443$abc$89679$abc$83837$auto$opt_dff.cc:219:make_patterns_logic$19017, arst=\RESET, srst={ }

3.36.2. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$89862$abc$84088$abc$80522$auto$opt_dff.cc:219:make_patterns_logic$62897, asynchronously reset by \RESET
Extracted 95 gates and 146 wires to a netlist network with 51 inputs and 16 outputs.

3.36.2.1. Executing ABC.

3.36.3. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$89957$abc$84183$abc$80641$auto$opt_dff.cc:219:make_patterns_logic$60641, asynchronously reset by \RESET
Extracted 95 gates and 146 wires to a netlist network with 51 inputs and 17 outputs.

3.36.3.1. Executing ABC.

3.36.4. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$90055$abc$84282$abc$80604$auto$opt_dff.cc:219:make_patterns_logic$61393, asynchronously reset by \RESET
Extracted 97 gates and 149 wires to a netlist network with 52 inputs and 17 outputs.

3.36.4.1. Executing ABC.

3.36.5. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$90247$abc$84571$abc$83119$auto$opt_dff.cc:194:make_patterns_logic$19309, asynchronously reset by \RESET
Extracted 4 gates and 9 wires to a netlist network with 5 inputs and 3 outputs.

3.36.5.1. Executing ABC.

3.36.6. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$90254$abc$84577$abc$82822$auto$opt_dff.cc:219:make_patterns_logic$25017, asynchronously reset by \RESET
Extracted 23 gates and 40 wires to a netlist network with 17 inputs and 12 outputs.

3.36.6.1. Executing ABC.

3.36.7. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$90271$abc$84593$abc$83113$auto$opt_dff.cc:219:make_patterns_logic$19343, asynchronously reset by \RESET
Extracted 4 gates and 9 wires to a netlist network with 5 inputs and 2 outputs.

3.36.7.1. Executing ABC.

3.36.8. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$90278$abc$84599$abc$82837$auto$opt_dff.cc:219:make_patterns_logic$24894, asynchronously reset by \RESET
Extracted 28 gates and 48 wires to a netlist network with 20 inputs and 9 outputs.

3.36.8.1. Executing ABC.

3.36.9. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$90307$abc$84621$abc$78825$auto$opt_dff.cc:219:make_patterns_logic$66439, asynchronously reset by \RESET
Extracted 248 gates and 498 wires to a netlist network with 250 inputs and 145 outputs.

3.36.9.1. Executing ABC.

3.36.10. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$90537$abc$84878$abc$79100$auto$opt_dff.cc:219:make_patterns_logic$65965, asynchronously reset by \RESET
Extracted 479 gates and 764 wires to a netlist network with 285 inputs and 211 outputs.

3.36.10.1. Executing ABC.

3.36.11. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$91020$abc$85405$abc$82995$auto$opt_dff.cc:194:make_patterns_logic$1119, asynchronously reset by \RESET
Extracted 23 gates and 34 wires to a netlist network with 11 inputs and 6 outputs.

3.36.11.1. Executing ABC.

3.36.12. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$91048$abc$85434$abc$83220$auto$opt_dff.cc:219:make_patterns_logic$19247, asynchronously reset by \RESET
Extracted 220 gates and 344 wires to a netlist network with 124 inputs and 102 outputs.

3.36.12.1. Executing ABC.

3.36.13. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$91367$abc$85778$abc$81112$auto$opt_dff.cc:219:make_patterns_logic$46707, asynchronously reset by \RESET
Extracted 85 gates and 152 wires to a netlist network with 67 inputs and 7 outputs.

3.36.13.1. Executing ABC.

3.36.14. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$91458$abc$85870$abc$81653$auto$opt_dff.cc:219:make_patterns_logic$38562, asynchronously reset by \RESET
Extracted 35 gates and 58 wires to a netlist network with 23 inputs and 20 outputs.

3.36.14.1. Executing ABC.

3.36.15. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$91493$abc$85902$abc$81642$auto$opt_dff.cc:219:make_patterns_logic$38674, asynchronously reset by \RESET
Extracted 10 gates and 20 wires to a netlist network with 10 inputs and 4 outputs.

3.36.15.1. Executing ABC.

3.36.16. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$96215$abc$91505$abc$84878$abc$79100$auto$opt_dff.cc:219:make_patterns_logic$43152, asynchronously reset by \RESET
Extracted 33 gates and 56 wires to a netlist network with 23 inputs and 11 outputs.

3.36.16.1. Executing ABC.

3.36.17. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$91541$abc$85947$abc$81200$auto$opt_dff.cc:219:make_patterns_logic$46584, asynchronously reset by \RESET
Extracted 26 gates and 50 wires to a netlist network with 24 inputs and 18 outputs.

3.36.17.1. Executing ABC.

3.36.18. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$91555$abc$85963$abc$80768$auto$opt_dff.cc:219:make_patterns_logic$58385, asynchronously reset by \RESET
Extracted 91 gates and 140 wires to a netlist network with 49 inputs and 14 outputs.

3.36.18.1. Executing ABC.

3.36.19. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$91650$abc$86057$abc$80805$auto$opt_dff.cc:219:make_patterns_logic$57633, asynchronously reset by \RESET
Extracted 94 gates and 144 wires to a netlist network with 50 inputs and 16 outputs.

3.36.19.1. Executing ABC.

3.36.20. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$91742$abc$86153$abc$80850$auto$opt_dff.cc:219:make_patterns_logic$56881, asynchronously reset by \RESET
Extracted 84 gates and 130 wires to a netlist network with 46 inputs and 11 outputs.

3.36.20.1. Executing ABC.

3.36.21. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$91838$abc$86244$abc$80887$auto$opt_dff.cc:219:make_patterns_logic$56129, asynchronously reset by \RESET
Extracted 82 gates and 126 wires to a netlist network with 44 inputs and 10 outputs.

3.36.21.1. Executing ABC.

3.36.22. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$91934$abc$86340$abc$80932$auto$opt_dff.cc:219:make_patterns_logic$55377, asynchronously reset by \RESET
Extracted 96 gates and 148 wires to a netlist network with 52 inputs and 17 outputs.

3.36.22.1. Executing ABC.

3.36.23. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$92026$abc$86431$abc$80969$auto$opt_dff.cc:219:make_patterns_logic$54625, asynchronously reset by \RESET
Extracted 96 gates and 147 wires to a netlist network with 51 inputs and 17 outputs.

3.36.23.1. Executing ABC.

3.36.24. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$91268$abc$84473$abc$80440$auto$opt_dff.cc:219:make_patterns_logic$64401, asynchronously reset by \RESET
Extracted 99 gates and 152 wires to a netlist network with 53 inputs and 19 outputs.

3.36.24.1. Executing ABC.

3.36.25. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$92121$abc$86521$abc$81072$auto$opt_dff.cc:219:make_patterns_logic$53774, asynchronously reset by \RESET
Extracted 43 gates and 74 wires to a netlist network with 31 inputs and 17 outputs.

3.36.25.1. Executing ABC.

3.36.26. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$92164$abc$86565$abc$81676$auto$opt_dff.cc:219:make_patterns_logic$38287, asynchronously reset by \RESET
Extracted 96 gates and 144 wires to a netlist network with 48 inputs and 37 outputs.

3.36.26.1. Executing ABC.

3.36.27. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$92495$abc$87257$abc$82810$auto$opt_dff.cc:219:make_patterns_logic$25140, asynchronously reset by \RESET
Extracted 7 gates and 15 wires to a netlist network with 8 inputs and 4 outputs.

3.36.27.1. Executing ABC.

3.36.28. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$92505$abc$87267$abc$82936$auto$opt_dff.cc:219:make_patterns_logic$21110, asynchronously reset by \RESET
Extracted 58 gates and 102 wires to a netlist network with 44 inputs and 16 outputs.

3.36.28.1. Executing ABC.

3.36.29. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$92268$abc$86671$abc$82029$auto$opt_dff.cc:219:make_patterns_logic$33812, asynchronously reset by \RESET
Extracted 224 gates and 295 wires to a netlist network with 71 inputs and 37 outputs.

3.36.29.1. Executing ABC.

3.36.30. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$92580$abc$87363$abc$78805$auto$opt_dff.cc:219:make_patterns_logic$77255, asynchronously reset by \RESET
Extracted 8 gates and 16 wires to a netlist network with 8 inputs and 7 outputs.

3.36.30.1. Executing ABC.

3.36.31. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$93035$abc$87896$abc$81014$auto$opt_dff.cc:219:make_patterns_logic$53873, asynchronously reset by \RESET
Extracted 98 gates and 150 wires to a netlist network with 52 inputs and 25 outputs.

3.36.31.1. Executing ABC.

3.36.32. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$93144$abc$88011$abc$80559$auto$opt_dff.cc:219:make_patterns_logic$62145, asynchronously reset by \RESET
Extracted 80 gates and 122 wires to a netlist network with 42 inputs and 9 outputs.

3.36.32.1. Executing ABC.

3.36.33. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$93233$abc$88101$abc$80723$auto$opt_dff.cc:219:make_patterns_logic$59137, asynchronously reset by \RESET
Extracted 75 gates and 112 wires to a netlist network with 37 inputs and 12 outputs.

3.36.33.1. Executing ABC.

3.36.34. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$93315$abc$88183$abc$80686$auto$opt_dff.cc:219:make_patterns_logic$59889, asynchronously reset by \RESET
Extracted 86 gates and 133 wires to a netlist network with 47 inputs and 12 outputs.

3.36.34.1. Executing ABC.

3.36.35. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$93409$abc$85658$abc$83125$auto$opt_dff.cc:194:make_patterns_logic$19255, asynchronously reset by \RESET
Extracted 81 gates and 97 wires to a netlist network with 16 inputs and 20 outputs.

3.36.35.1. Executing ABC.

3.36.36. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$92600$abc$87383$abc$78154$auto$opt_dff.cc:219:make_patterns_logic$77315, asynchronously reset by \RESET
Extracted 436 gates and 553 wires to a netlist network with 117 inputs and 109 outputs.

3.36.36.1. Executing ABC.

3.36.37. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$93519$abc$88273$abc$80393$auto$opt_dff.cc:219:make_patterns_logic$65153, asynchronously reset by \RESET
Extracted 88 gates and 128 wires to a netlist network with 40 inputs and 10 outputs.

3.36.37.1. Executing ABC.

3.36.38. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$93616$abc$88371$abc$81736$auto$opt_dff.cc:219:make_patterns_logic$36689, asynchronously reset by \RESET
Extracted 299 gates and 424 wires to a netlist network with 125 inputs and 63 outputs.

3.36.38.1. Executing ABC.

3.36.39. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$93925$abc$86905$abc$82274$auto$opt_dff.cc:219:make_patterns_logic$30679, asynchronously reset by \RESET
Extracted 367 gates and 577 wires to a netlist network with 210 inputs and 93 outputs.

3.36.39.1. Executing ABC.

3.36.40. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$90153$abc$84380$abc$80477$auto$opt_dff.cc:219:make_patterns_logic$63649, asynchronously reset by \RESET
Extracted 84 gates and 129 wires to a netlist network with 45 inputs and 11 outputs.

3.36.40.1. Executing ABC.

3.36.41. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$94296$abc$88670$abc$81485$auto$opt_dff.cc:219:make_patterns_logic$38817, asynchronously reset by \RESET
Extracted 127 gates and 193 wires to a netlist network with 66 inputs and 34 outputs.

3.36.41.1. Executing ABC.

3.36.42. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$94926$abc$89272$abc$82863$auto$opt_dff.cc:219:make_patterns_logic$23587, asynchronously reset by \RESET
Extracted 79 gates and 123 wires to a netlist network with 44 inputs and 24 outputs.

3.36.42.1. Executing ABC.

3.36.43. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$95037$abc$87802$abc$83019$auto$opt_dff.cc:219:make_patterns_logic$19390, asynchronously reset by \RESET
Extracted 63 gates and 126 wires to a netlist network with 63 inputs and 31 outputs.

3.36.43.1. Executing ABC.

3.36.44. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$95131$abc$89371$abc$81212$auto$opt_dff.cc:219:make_patterns_logic$43267, asynchronously reset by \RESET
Extracted 284 gates and 406 wires to a netlist network with 122 inputs and 108 outputs.

3.36.44.1. Executing ABC.

3.36.45. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$94425$abc$88813$abc$82619$auto$opt_dff.cc:219:make_patterns_logic$25307, asynchronously reset by \RESET
Extracted 450 gates and 641 wires to a netlist network with 191 inputs and 114 outputs.

3.36.45.1. Executing ABC.

3.36.46. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$95443$abc$89679$abc$83837$auto$opt_dff.cc:219:make_patterns_logic$19017, asynchronously reset by \RESET
Extracted 162 gates and 269 wires to a netlist network with 107 inputs and 118 outputs.

3.36.46.1. Executing ABC.

yosys> opt_ffinv

3.37. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt -sat

3.38. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.38.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~72 debug messages>

yosys> opt_merge -nomux

3.38.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
<suppressed ~132 debug messages>
Removed a total of 44 cells.

yosys> opt_muxtree

3.38.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.38.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.38.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.38.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.38.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 0 unused cells and 30716 unused wires.
<suppressed ~20 debug messages>

yosys> opt_expr

3.38.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

3.38.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.38.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.38.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.38.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.38.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.38.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

yosys> opt_expr

3.38.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

3.38.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /tmp/yosys_yr4p1K/abc_tmp_1.scr

3.39. Executing ABC pass (technology mapping using ABC).

3.39.1. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Extracted 4960 gates and 5563 wires to a netlist network with 601 inputs and 629 outputs.

3.39.1.1. Executing ABC.
DE:   #PIs = 601  #Luts =  1646  Max Lvl =  23  Avg Lvl =   8.88  [   0.37 sec. at Pass 0]
DE:   #PIs = 601  #Luts =  1425  Max Lvl =  16  Avg Lvl =   5.52  [  27.75 sec. at Pass 1]
DE:   #PIs = 601  #Luts =  1410  Max Lvl =  15  Avg Lvl =   5.22  [   4.94 sec. at Pass 2]
DE:   #PIs = 601  #Luts =  1392  Max Lvl =  15  Avg Lvl =   5.13  [   5.74 sec. at Pass 3]
DE:   #PIs = 601  #Luts =  1370  Max Lvl =  16  Avg Lvl =   5.13  [   5.88 sec. at Pass 4]
DE:   #PIs = 601  #Luts =  1351  Max Lvl =  15  Avg Lvl =   5.18  [   7.70 sec. at Pass 5]
DE:   #PIs = 601  #Luts =  1351  Max Lvl =  15  Avg Lvl =   5.18  [   4.24 sec. at Pass 6]
DE:   #PIs = 601  #Luts =  1334  Max Lvl =  14  Avg Lvl =   4.87  [   8.26 sec. at Pass 7]
DE:   #PIs = 601  #Luts =  1334  Max Lvl =  14  Avg Lvl =   4.87  [   5.68 sec. at Pass 8]
DE:   #PIs = 601  #Luts =  1334  Max Lvl =  14  Avg Lvl =   4.87  [   5.90 sec. at Pass 9]
DE:   #PIs = 601  #Luts =  1334  Max Lvl =  14  Avg Lvl =   4.87  [   3.88 sec. at Pass 10]
DE:   #PIs = 601  #Luts =  1334  Max Lvl =  14  Avg Lvl =   4.87  [   0.97 sec. at Pass 11]

yosys> opt

3.40. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.40.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

yosys> opt_merge -nomux

3.40.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_muxtree

3.40.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.40.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.40.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_dff

3.40.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.40.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 0 unused cells and 5428 unused wires.
<suppressed ~2 debug messages>

yosys> opt_expr

3.40.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

3.40.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.40.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.40.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.40.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_dff

3.40.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.40.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

yosys> opt_expr

3.40.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

3.40.16. Finished OPT passes. (There is nothing left to do.)

yosys> opt_ffinv

3.41. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 3 inverters.

yosys> stat

3.42. Printing statistics.

=== b15 ===

   Number of wires:               1516
   Number of wire bits:           2534
   Number of public wires:          30
   Number of public wire bits:     267
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1965
     $_DFFE_PP0P_                  410
     $_DFFE_PP1P_                    3
     $lut                         1330
     adder_carry                   222


yosys> shregmap -minlen 8 -maxlen 20

3.43. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.44. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.45. Printing statistics.

=== b15 ===

   Number of wires:               1516
   Number of wire bits:           2534
   Number of public wires:          30
   Number of public wire bits:     267
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1965
     $_DFFE_PP0P_                  410
     $_DFFE_PP1P_                    3
     $lut                         1330
     adder_carry                   222


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.46. Executing TECHMAP pass (map to technology primitives).

3.46.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/de-issue/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/de-issue/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.46.2. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/de-issue/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/de-issue/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.46.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using template \$_DFFE_PP1P_ for cells of type $_DFFE_PP1P_.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~2292 debug messages>

yosys> opt_expr -mux_undef

3.47. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~37827 debug messages>

yosys> simplemap

3.48. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.49. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

yosys> opt_merge

3.50. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
<suppressed ~12666 debug messages>
Removed a total of 4222 cells.

yosys> opt_dff -nodffe -nosdff

3.51. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.52. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 1 unused cells and 5595 unused wires.
<suppressed ~2 debug messages>

yosys> opt -nodffe -nosdff

3.53. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.53.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~1153 debug messages>

yosys> opt_merge -nomux

3.53.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
<suppressed ~39 debug messages>
Removed a total of 13 cells.

yosys> opt_muxtree

3.53.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.53.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.53.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.53.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.53.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 0 unused cells and 299 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.53.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

3.53.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.53.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.53.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.53.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.53.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.53.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

yosys> opt_expr

3.53.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

3.53.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /tmp/yosys_yr4p1K/abc_tmp_2.scr

3.54. Executing ABC pass (technology mapping using ABC).

3.54.1. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Extracted 5131 gates and 5734 wires to a netlist network with 601 inputs and 625 outputs.

3.54.1.1. Executing ABC.
DE:   #PIs = 601  #Luts =  1328  Max Lvl =  14  Avg Lvl =   4.98  [   0.44 sec. at Pass 0]
DE:   #PIs = 601  #Luts =  1328  Max Lvl =  14  Avg Lvl =   4.98  [  20.80 sec. at Pass 1]
DE:   #PIs = 601  #Luts =  1328  Max Lvl =  14  Avg Lvl =   4.98  [   4.21 sec. at Pass 2]
DE:   #PIs = 601  #Luts =  1316  Max Lvl =  15  Avg Lvl =   5.04  [   6.90 sec. at Pass 3]
DE:   #PIs = 601  #Luts =  1316  Max Lvl =  15  Avg Lvl =   5.04  [   5.04 sec. at Pass 4]
DE:   #PIs = 601  #Luts =  1307  Max Lvl =  17  Avg Lvl =   5.64  [   9.16 sec. at Pass 5]
DE:   #PIs = 601  #Luts =  1298  Max Lvl =  16  Avg Lvl =   5.22  [   6.77 sec. at Pass 6]
DE:   #PIs = 601  #Luts =  1298  Max Lvl =  16  Avg Lvl =   5.22  [   7.81 sec. at Pass 7]
DE:   #PIs = 601  #Luts =  1294  Max Lvl =  15  Avg Lvl =   5.12  [   5.15 sec. at Pass 8]
DE:   #PIs = 601  #Luts =  1294  Max Lvl =  15  Avg Lvl =   5.12  [   8.98 sec. at Pass 9]
DE:   #PIs = 601  #Luts =  1287  Max Lvl =  15  Avg Lvl =   5.10  [   6.60 sec. at Pass 10]
DE:   #PIs = 601  #Luts =  1287  Max Lvl =  15  Avg Lvl =   5.10  [   7.92 sec. at Pass 11]
DE:   #PIs = 601  #Luts =  1286  Max Lvl =  15  Avg Lvl =   5.08  [   6.06 sec. at Pass 12]
DE:   #PIs = 601  #Luts =  1286  Max Lvl =  15  Avg Lvl =   5.08  [   8.63 sec. at Pass 13]
DE:   #PIs = 601  #Luts =  1278  Max Lvl =  15  Avg Lvl =   5.33  [   6.49 sec. at Pass 14]
DE:   #PIs = 601  #Luts =  1278  Max Lvl =  15  Avg Lvl =   5.33  [   8.28 sec. at Pass 15]
DE:   #PIs = 601  #Luts =  1278  Max Lvl =  15  Avg Lvl =   5.33  [   6.48 sec. at Pass 16]
DE:   #PIs = 601  #Luts =  1278  Max Lvl =  15  Avg Lvl =   5.33  [   8.10 sec. at Pass 17]
DE:   #PIs = 601  #Luts =  1278  Max Lvl =  15  Avg Lvl =   5.33  [   1.46 sec. at Pass 18]

yosys> opt

3.55. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.55.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

yosys> opt_merge -nomux

3.55.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.55.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.55.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.55.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_dff

3.55.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.55.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 0 unused cells and 4747 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.55.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

3.55.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.55.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.55.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.55.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_dff

3.55.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.55.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

yosys> opt_expr

3.55.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

3.55.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.56. Executing HIERARCHY pass (managing design hierarchy).

3.56.1. Analyzing design hierarchy..
Top module:  \b15

3.56.2. Analyzing design hierarchy..
Top module:  \b15
Removed 0 unused modules.

yosys> stat

3.57. Printing statistics.

=== b15 ===

   Number of wires:               1463
   Number of wire bits:           2481
   Number of public wires:          30
   Number of public wire bits:     267
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1913
     $lut                         1278
     adder_carry                   222
     dffsre                        413


yosys> opt_clean -purge

3.58. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 0 unused cells and 2 unused wires.
<suppressed ~2 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.59. Executing Verilog backend.

yosys> bmuxmap

3.59.1. Executing BMUXMAP pass.

yosys> demuxmap

3.59.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\b15'.

End of script. Logfile hash: e402e51725, CPU: user 61.01s system 1.72s, MEM: 115.22 MB peak
Yosys 0.16+65 (git sha1 7987105a9, gcc 9.1.0 -fPIC -Os)
Time spent: 95% 6x abc (1235 sec), 1% 61x opt_expr (16 sec), ...
real 350.23
user 1202.25
sys 87.12
