
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.47
 Yosys 0.18+10 (git sha1 8217e4c48, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Apr22_SW_Release, released at Thu Apr 28 20:08:21 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k arbiter.v

yosys> verific -vlog2k arbiter.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Apr22_SW_Release, released at Thu Apr 28 20:08:21 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'arbiter.v'

yosys> synth_rs -top top -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.57

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\RS_DSP2_MULT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_sim'.
Generating RTLIL representation for module `\dsp_t1_20x18x64'.
Generating RTLIL representation for module `\dsp_t1_10x9x32'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top top

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] arbiter.v:1: compiling module 'top'
Importing module top.

3.3.1. Analyzing design hierarchy..
Top module:  \top

3.3.2. Analyzing design hierarchy..
Top module:  \top
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.4.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.4.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 11839 unused wires.
<suppressed ~11840 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module top...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.11.9. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.13.9. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> alumacc

3.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module top:
  created 0 $alu and 0 $macc cells.

yosys> opt

3.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge -nomux

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr

3.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.19.9. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.20. Printing statistics.

=== top ===

   Number of wires:              23489
   Number of wire bits:          23489
   Number of public wires:       12095
   Number of public wire bits:   12095
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              23233
     $and                        11838
     $not                        11394
     $or                             1


yosys> memory -nomap

3.21. Executing MEMORY pass.

yosys> opt_mem

3.21.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.21.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.21.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.21.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.21.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.21.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> memory_share

3.21.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.21.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.21.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> memory_collect

3.21.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.22. Printing statistics.

=== top ===

   Number of wires:              23489
   Number of wire bits:          23489
   Number of public wires:       12095
   Number of public wire bits:   12095
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              23233
     $and                        11838
     $not                        11394
     $or                             1


yosys> opt_clean

3.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> stat

3.24. Printing statistics.

=== top ===

   Number of wires:              23489
   Number of wire bits:          23489
   Number of public wires:       12095
   Number of public wire bits:   12095
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              23233
     $and                        11838
     $not                        11394
     $or                             1


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.25. Executing TECHMAP pass (map to technology primitives).

3.25.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.25.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.25.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $or.
No more expansions possible.
<suppressed ~23304 debug messages>

yosys> stat

3.26. Printing statistics.

=== top ===

   Number of wires:              23489
   Number of wire bits:          23489
   Number of public wires:       12095
   Number of public wire bits:   12095
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              23233
     $_AND_                      11838
     $_NOT_                      11394
     $_OR_                           1


yosys> opt

3.27. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge -nomux

3.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.27.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.27.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr

3.27.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.27.9. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff

3.28.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

3.28.5. Finished fast OPT passes.

yosys> memory_map

3.29. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.30. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge -nomux

3.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_share

3.30.6. Executing OPT_SHARE pass.

yosys> opt_dff

3.30.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr -full

3.30.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.30.10. Finished OPT passes. (There is nothing left to do.)

yosys> techmap -map +/techmap.v

3.31. Executing TECHMAP pass (map to technology primitives).

3.31.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.31.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> opt -sat

3.32. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge -nomux

3.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.32.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.32.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.32.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.32.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.32.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr

3.32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.32.9. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

3.33. Executing ABC pass (technology mapping using ABC).

3.33.1. Summary of detected clock domains:
  23233 cells in clk={ }, en={ }, arst={ }, srst={ }

3.33.2. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
No matching clock domain found. Not extracting any FF cells.
Extracted 23233 gates and 23489 wires to a netlist network with 256 inputs and 129 outputs.

3.33.2.1. Executing ABC.

yosys> abc -dff

3.34. Executing ABC pass (technology mapping using ABC).

3.34.1. Summary of detected clock domains:
  11849 cells in clk={ }, en={ }, arst={ }, srst={ }

3.34.2. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
No matching clock domain found. Not extracting any FF cells.
Extracted 11849 gates and 12105 wires to a netlist network with 256 inputs and 129 outputs.

3.34.2.1. Executing ABC.

yosys> abc -dff

3.35. Executing ABC pass (technology mapping using ABC).

3.35.1. Summary of detected clock domains:
  11841 cells in clk={ }, en={ }, arst={ }, srst={ }

3.35.2. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
No matching clock domain found. Not extracting any FF cells.
Extracted 11841 gates and 12097 wires to a netlist network with 256 inputs and 129 outputs.

3.35.2.1. Executing ABC.

yosys> abc -dff

3.36. Executing ABC pass (technology mapping using ABC).

3.36.1. Summary of detected clock domains:
  11842 cells in clk={ }, en={ }, arst={ }, srst={ }

3.36.2. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
No matching clock domain found. Not extracting any FF cells.
Extracted 11842 gates and 12098 wires to a netlist network with 256 inputs and 129 outputs.

3.36.2.1. Executing ABC.

yosys> opt_ffinv

3.37. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt -sat

3.38. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.38.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge -nomux

3.38.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.38.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.38.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.38.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.38.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.38.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 59789 unused wires.
<suppressed ~11711 debug messages>

yosys> opt_expr

3.38.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.38.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.38.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.38.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.38.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.38.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.38.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr

3.38.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.38.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /home/users/temp_dir/yosys_05ygQd/abc_tmp_1.scr

3.39. Executing ABC pass (technology mapping using ABC).

3.39.1. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Extracted 11842 gates and 12098 wires to a netlist network with 256 inputs and 129 outputs.

3.39.1.1. Executing ABC.
DE:   #PIs = 256  #Luts =  2594  Max Lvl =  19  Avg Lvl =  18.89  [   0.61 sec. at Pass 0]
DE:   #PIs = 256  #Luts =  1661  Max Lvl =  10  Avg Lvl =   7.48  [  64.46 sec. at Pass 1]
DE:   #PIs = 256  #Luts =  1485  Max Lvl =  11  Avg Lvl =   8.60  [   4.67 sec. at Pass 2]
DE:   #PIs = 256  #Luts =  1220  Max Lvl =  12  Avg Lvl =   8.94  [  12.98 sec. at Pass 3]
DE:   #PIs = 256  #Luts =  1192  Max Lvl =  13  Avg Lvl =   9.35  [   4.02 sec. at Pass 4]
DE:   #PIs = 256  #Luts =  1098  Max Lvl =  12  Avg Lvl =   9.22  [  10.50 sec. at Pass 5]
DE:   #PIs = 256  #Luts =  1084  Max Lvl =  14  Avg Lvl =   9.90  [   3.34 sec. at Pass 6]
DE:   #PIs = 256  #Luts =   995  Max Lvl =  15  Avg Lvl =  10.06  [   8.32 sec. at Pass 7]
DE:   #PIs = 256  #Luts =   995  Max Lvl =  15  Avg Lvl =  10.06  [   2.65 sec. at Pass 8]
DE:   #PIs = 256  #Luts =   955  Max Lvl =  13  Avg Lvl =  10.16  [   6.52 sec. at Pass 9]
DE:   #PIs = 256  #Luts =   955  Max Lvl =  13  Avg Lvl =  10.16  [   2.22 sec. at Pass 10]
DE:   #PIs = 256  #Luts =   930  Max Lvl =  14  Avg Lvl =  10.17  [   6.13 sec. at Pass 11]
DE:   #PIs = 256  #Luts =   929  Max Lvl =  14  Avg Lvl =  10.50  [   2.51 sec. at Pass 12]
DE:   #PIs = 256  #Luts =   910  Max Lvl =  14  Avg Lvl =  10.19  [   5.97 sec. at Pass 13]
DE:   #PIs = 256  #Luts =   905  Max Lvl =  14  Avg Lvl =  10.49  [   1.91 sec. at Pass 14]
DE:   #PIs = 256  #Luts =   876  Max Lvl =  15  Avg Lvl =  10.91  [   5.28 sec. at Pass 15]
DE:   #PIs = 256  #Luts =   876  Max Lvl =  15  Avg Lvl =  10.91  [   2.11 sec. at Pass 16]
DE:   #PIs = 256  #Luts =   860  Max Lvl =  15  Avg Lvl =  11.50  [   5.49 sec. at Pass 17]
DE:   #PIs = 256  #Luts =   857  Max Lvl =  15  Avg Lvl =  11.17  [   1.99 sec. at Pass 18]
DE:   #PIs = 256  #Luts =   836  Max Lvl =  15  Avg Lvl =  11.76  [   5.06 sec. at Pass 19]
DE:   #PIs = 256  #Luts =   835  Max Lvl =  16  Avg Lvl =  11.46  [   1.86 sec. at Pass 20]
DE:   #PIs = 256  #Luts =   820  Max Lvl =  16  Avg Lvl =  11.59  [   5.00 sec. at Pass 21]
DE:   #PIs = 256  #Luts =   820  Max Lvl =  16  Avg Lvl =  11.59  [   2.05 sec. at Pass 22]
DE:   #PIs = 256  #Luts =   807  Max Lvl =  14  Avg Lvl =  11.22  [   4.47 sec. at Pass 23]
DE:   #PIs = 256  #Luts =   807  Max Lvl =  14  Avg Lvl =  11.22  [   2.26 sec. at Pass 24]
DE:   #PIs = 256  #Luts =   790  Max Lvl =  15  Avg Lvl =  11.48  [   5.70 sec. at Pass 25]
DE:   #PIs = 256  #Luts =   787  Max Lvl =  15  Avg Lvl =  11.43  [   1.64 sec. at Pass 26]
DE:   #PIs = 256  #Luts =   773  Max Lvl =  14  Avg Lvl =  11.29  [   4.30 sec. at Pass 27]
DE:   #PIs = 256  #Luts =   773  Max Lvl =  14  Avg Lvl =  11.29  [   1.44 sec. at Pass 28]
DE:   #PIs = 256  #Luts =   762  Max Lvl =  16  Avg Lvl =  11.26  [   3.72 sec. at Pass 29]
DE:   #PIs = 256  #Luts =   762  Max Lvl =  16  Avg Lvl =  11.26  [   1.46 sec. at Pass 30]
DE:   #PIs = 256  #Luts =   759  Max Lvl =  15  Avg Lvl =  11.91  [   3.75 sec. at Pass 31]
DE:   #PIs = 256  #Luts =   754  Max Lvl =  13  Avg Lvl =  10.70  [   1.55 sec. at Pass 32]
DE:   #PIs = 256  #Luts =   749  Max Lvl =  16  Avg Lvl =  11.76  [   3.72 sec. at Pass 33]
DE:   #PIs = 256  #Luts =   746  Max Lvl =  16  Avg Lvl =  11.98  [   1.41 sec. at Pass 34]
DE:   #PIs = 256  #Luts =   731  Max Lvl =  16  Avg Lvl =  11.70  [   3.64 sec. at Pass 35]
DE:   #PIs = 256  #Luts =   731  Max Lvl =  16  Avg Lvl =  11.70  [   1.38 sec. at Pass 36]
DE:   #PIs = 256  #Luts =   726  Max Lvl =  16  Avg Lvl =  11.88  [   3.32 sec. at Pass 37]
DE:   #PIs = 256  #Luts =   722  Max Lvl =  15  Avg Lvl =  11.64  [   1.26 sec. at Pass 38]
DE:   #PIs = 256  #Luts =   713  Max Lvl =  16  Avg Lvl =  11.71  [   3.08 sec. at Pass 39]
DE:   #PIs = 256  #Luts =   713  Max Lvl =  16  Avg Lvl =  11.71  [   1.12 sec. at Pass 40]
DE:   #PIs = 256  #Luts =   710  Max Lvl =  16  Avg Lvl =  11.91  [   3.63 sec. at Pass 41]
DE:   #PIs = 256  #Luts =   710  Max Lvl =  16  Avg Lvl =  11.91  [   1.24 sec. at Pass 42]
DE:   #PIs = 256  #Luts =   704  Max Lvl =  16  Avg Lvl =  12.12  [   3.27 sec. at Pass 43]
DE:   #PIs = 256  #Luts =   702  Max Lvl =  15  Avg Lvl =  11.43  [   1.36 sec. at Pass 44]
DE:   #PIs = 256  #Luts =   702  Max Lvl =  15  Avg Lvl =  11.43  [   3.55 sec. at Pass 45]
DE:   #PIs = 256  #Luts =   698  Max Lvl =  17  Avg Lvl =  11.71  [   1.37 sec. at Pass 46]
DE:   #PIs = 256  #Luts =   688  Max Lvl =  17  Avg Lvl =  12.23  [   3.27 sec. at Pass 47]
DE:   #PIs = 256  #Luts =   688  Max Lvl =  17  Avg Lvl =  12.23  [   1.38 sec. at Pass 48]
DE:   #PIs = 256  #Luts =   679  Max Lvl =  17  Avg Lvl =  11.85  [   3.37 sec. at Pass 49]
DE:   #PIs = 256  #Luts =   679  Max Lvl =  17  Avg Lvl =  11.85  [   1.44 sec. at Pass 50]
DE:   #PIs = 256  #Luts =   666  Max Lvl =  18  Avg Lvl =  12.39  [   3.19 sec. at Pass 51]
DE:   #PIs = 256  #Luts =   656  Max Lvl =  16  Avg Lvl =  11.91  [   1.26 sec. at Pass 52]
DE:   #PIs = 256  #Luts =   652  Max Lvl =  16  Avg Lvl =  11.88  [   3.14 sec. at Pass 53]
DE:   #PIs = 256  #Luts =   652  Max Lvl =  16  Avg Lvl =  11.88  [   1.19 sec. at Pass 54]
DE:   #PIs = 256  #Luts =   639  Max Lvl =  18  Avg Lvl =  12.53  [   2.99 sec. at Pass 55]
DE:   #PIs = 256  #Luts =   639  Max Lvl =  18  Avg Lvl =  12.53  [   1.21 sec. at Pass 56]
DE:   #PIs = 256  #Luts =   621  Max Lvl =  18  Avg Lvl =  12.18  [   2.77 sec. at Pass 57]
DE:   #PIs = 256  #Luts =   617  Max Lvl =  17  Avg Lvl =  12.43  [   1.11 sec. at Pass 58]
DE:   #PIs = 256  #Luts =   614  Max Lvl =  18  Avg Lvl =  12.50  [   2.60 sec. at Pass 59]
DE:   #PIs = 256  #Luts =   609  Max Lvl =  16  Avg Lvl =  11.64  [   1.05 sec. at Pass 60]
DE:   #PIs = 256  #Luts =   604  Max Lvl =  17  Avg Lvl =  11.51  [   2.50 sec. at Pass 61]
DE:   #PIs = 256  #Luts =   604  Max Lvl =  17  Avg Lvl =  11.51  [   1.30 sec. at Pass 62]
DE:   #PIs = 256  #Luts =   602  Max Lvl =  17  Avg Lvl =  12.63  [   2.56 sec. at Pass 63]
DE:   #PIs = 256  #Luts =   602  Max Lvl =  17  Avg Lvl =  12.63  [   1.25 sec. at Pass 64]
DE:   #PIs = 256  #Luts =   598  Max Lvl =  18  Avg Lvl =  13.01  [   2.38 sec. at Pass 65]
DE:   #PIs = 256  #Luts =   598  Max Lvl =  18  Avg Lvl =  13.01  [   1.06 sec. at Pass 66]
DE:   #PIs = 256  #Luts =   594  Max Lvl =  16  Avg Lvl =  12.12  [   2.68 sec. at Pass 67]
DE:   #PIs = 256  #Luts =   594  Max Lvl =  16  Avg Lvl =  12.12  [   1.06 sec. at Pass 68]
DE:   #PIs = 256  #Luts =   591  Max Lvl =  17  Avg Lvl =  12.08  [   2.25 sec. at Pass 69]
DE:   #PIs = 256  #Luts =   591  Max Lvl =  17  Avg Lvl =  12.08  [   1.03 sec. at Pass 70]
DE:   #PIs = 256  #Luts =   591  Max Lvl =  17  Avg Lvl =  12.08  [   2.31 sec. at Pass 71]
DE:   #PIs = 256  #Luts =   591  Max Lvl =  17  Avg Lvl =  12.08  [   0.99 sec. at Pass 72]
DE:   #PIs = 256  #Luts =   585  Max Lvl =  17  Avg Lvl =  12.38  [   1.55 sec. at Pass 73]
DE:   #PIs = 256  #Luts =   585  Max Lvl =  17  Avg Lvl =  12.38  [   2.21 sec. at Pass 74]
DE:   #PIs = 256  #Luts =   580  Max Lvl =  17  Avg Lvl =  12.43  [   0.97 sec. at Pass 75]
DE:   #PIs = 256  #Luts =   580  Max Lvl =  17  Avg Lvl =  12.43  [   2.43 sec. at Pass 76]
DE:   #PIs = 256  #Luts =   578  Max Lvl =  17  Avg Lvl =  12.31  [   1.19 sec. at Pass 77]
DE:   #PIs = 256  #Luts =   578  Max Lvl =  17  Avg Lvl =  12.31  [   2.24 sec. at Pass 78]
DE:   #PIs = 256  #Luts =   576  Max Lvl =  18  Avg Lvl =  12.42  [   0.97 sec. at Pass 79]
DE:   #PIs = 256  #Luts =   573  Max Lvl =  16  Avg Lvl =  11.89  [   2.19 sec. at Pass 80]
DE:   #PIs = 256  #Luts =   572  Max Lvl =  18  Avg Lvl =  12.74  [   0.94 sec. at Pass 81]
DE:   #PIs = 256  #Luts =   563  Max Lvl =  17  Avg Lvl =  12.18  [   2.19 sec. at Pass 82]
DE:   #PIs = 256  #Luts =   562  Max Lvl =  17  Avg Lvl =  12.22  [   1.00 sec. at Pass 83]
DE:   #PIs = 256  #Luts =   554  Max Lvl =  17  Avg Lvl =  12.12  [   2.62 sec. at Pass 84]
DE:   #PIs = 256  #Luts =   554  Max Lvl =  17  Avg Lvl =  12.12  [   0.98 sec. at Pass 85]
DE:   #PIs = 256  #Luts =   552  Max Lvl =  18  Avg Lvl =  12.57  [   2.05 sec. at Pass 86]
DE:   #PIs = 256  #Luts =   552  Max Lvl =  18  Avg Lvl =  12.57  [   1.13 sec. at Pass 87]
DE:   #PIs = 256  #Luts =   552  Max Lvl =  18  Avg Lvl =  12.57  [   2.44 sec. at Pass 88]
DE:   #PIs = 256  #Luts =   549  Max Lvl =  16  Avg Lvl =  12.02  [   0.89 sec. at Pass 89]
DE:   #PIs = 256  #Luts =   541  Max Lvl =  18  Avg Lvl =  12.44  [   2.17 sec. at Pass 90]
DE:   #PIs = 256  #Luts =   539  Max Lvl =  18  Avg Lvl =  12.41  [   0.95 sec. at Pass 91]
DE:   #PIs = 256  #Luts =   539  Max Lvl =  18  Avg Lvl =  12.41  [   2.26 sec. at Pass 92]
DE:   #PIs = 256  #Luts =   539  Max Lvl =  18  Avg Lvl =  12.41  [   1.14 sec. at Pass 93]
DE:   #PIs = 256  #Luts =   532  Max Lvl =  17  Avg Lvl =  12.31  [   2.34 sec. at Pass 94]
DE:   #PIs = 256  #Luts =   532  Max Lvl =  17  Avg Lvl =  12.31  [   0.92 sec. at Pass 95]
DE:   #PIs = 256  #Luts =   532  Max Lvl =  17  Avg Lvl =  12.31  [   2.05 sec. at Pass 96]
DE:   #PIs = 256  #Luts =   530  Max Lvl =  17  Avg Lvl =  12.83  [   0.93 sec. at Pass 97]
DE:   #PIs = 256  #Luts =   524  Max Lvl =  18  Avg Lvl =  12.56  [   2.05 sec. at Pass 98]
DE:   #PIs = 256  #Luts =   523  Max Lvl =  17  Avg Lvl =  12.27  [   0.90 sec. at Pass 99]
DE:   #PIs = 256  #Luts =   523  Max Lvl =  17  Avg Lvl =  12.27  [   1.86 sec. at Pass 100]
DE:   #PIs = 256  #Luts =   520  Max Lvl =  18  Avg Lvl =  12.14  [   0.45 sec. at Pass 101]

yosys> opt

3.40. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.40.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge -nomux

3.40.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.40.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.40.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.40.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff

3.40.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.40.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 12098 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.40.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.40.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.40.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.40.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.40.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff

3.40.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.40.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr

3.40.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.40.16. Finished OPT passes. (There is nothing left to do.)

yosys> opt_ffinv

3.41. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> stat

3.42. Printing statistics.

=== top ===

   Number of wires:                776
   Number of wire bits:            776
   Number of public wires:         385
   Number of public wire bits:     385
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                520
     $lut                          520


yosys> shregmap -minlen 8 -maxlen 20

3.43. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.44. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.45. Printing statistics.

=== top ===

   Number of wires:                776
   Number of wire bits:            776
   Number of public wires:         385
   Number of public wire bits:     385
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                520
     $lut                          520


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.46. Executing TECHMAP pass (map to technology primitives).

3.46.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.46.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.46.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
No more expansions possible.
<suppressed ~656 debug messages>

yosys> opt_expr -mux_undef

3.47. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~15046 debug messages>

yosys> simplemap

3.48. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.49. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge

3.50. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~1215 debug messages>
Removed a total of 405 cells.

yosys> opt_dff -nodffe -nosdff

3.51. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.52. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 901 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.53. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.53.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~52 debug messages>

yosys> opt_merge -nomux

3.53.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.53.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.53.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.53.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.53.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.53.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr

3.53.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.53.9. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /home/users/temp_dir/yosys_05ygQd/abc_tmp_2.scr

3.54. Executing ABC pass (technology mapping using ABC).

3.54.1. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Extracted 2117 gates and 2375 wires to a netlist network with 256 inputs and 129 outputs.

3.54.1.1. Executing ABC.
DE:   #PIs = 256  #Luts =   554  Max Lvl =  23  Avg Lvl =  14.12  [   0.09 sec. at Pass 0]
DE:   #PIs = 256  #Luts =   547  Max Lvl =  20  Avg Lvl =  13.51  [   3.08 sec. at Pass 1]
DE:   #PIs = 256  #Luts =   518  Max Lvl =  18  Avg Lvl =  13.06  [   0.76 sec. at Pass 2]
DE:   #PIs = 256  #Luts =   512  Max Lvl =  19  Avg Lvl =  13.37  [   1.99 sec. at Pass 3]
DE:   #PIs = 256  #Luts =   507  Max Lvl =  19  Avg Lvl =  13.04  [   0.79 sec. at Pass 4]
DE:   #PIs = 256  #Luts =   496  Max Lvl =  19  Avg Lvl =  13.22  [   1.96 sec. at Pass 5]
DE:   #PIs = 256  #Luts =   494  Max Lvl =  20  Avg Lvl =  13.94  [   0.95 sec. at Pass 6]
DE:   #PIs = 256  #Luts =   492  Max Lvl =  20  Avg Lvl =  13.74  [   2.06 sec. at Pass 7]
DE:   #PIs = 256  #Luts =   492  Max Lvl =  20  Avg Lvl =  13.74  [   0.93 sec. at Pass 8]
DE:   #PIs = 256  #Luts =   487  Max Lvl =  20  Avg Lvl =  13.97  [   2.21 sec. at Pass 9]
DE:   #PIs = 256  #Luts =   487  Max Lvl =  20  Avg Lvl =  13.97  [   0.82 sec. at Pass 10]
DE:   #PIs = 256  #Luts =   487  Max Lvl =  20  Avg Lvl =  13.97  [   2.01 sec. at Pass 11]
DE:   #PIs = 256  #Luts =   487  Max Lvl =  20  Avg Lvl =  13.97  [   0.80 sec. at Pass 12]
DE:   #PIs = 256  #Luts =   483  Max Lvl =  19  Avg Lvl =  13.40  [   1.23 sec. at Pass 13]
DE:   #PIs = 256  #Luts =   480  Max Lvl =  19  Avg Lvl =  13.69  [   1.93 sec. at Pass 14]
DE:   #PIs = 256  #Luts =   480  Max Lvl =  19  Avg Lvl =  13.69  [   0.86 sec. at Pass 15]
DE:   #PIs = 256  #Luts =   477  Max Lvl =  20  Avg Lvl =  13.98  [   1.78 sec. at Pass 16]
DE:   #PIs = 256  #Luts =   477  Max Lvl =  20  Avg Lvl =  13.98  [   0.70 sec. at Pass 17]
DE:   #PIs = 256  #Luts =   474  Max Lvl =  20  Avg Lvl =  14.27  [   1.65 sec. at Pass 18]
DE:   #PIs = 256  #Luts =   474  Max Lvl =  20  Avg Lvl =  14.27  [   0.84 sec. at Pass 19]
DE:   #PIs = 256  #Luts =   473  Max Lvl =  19  Avg Lvl =  12.88  [   1.95 sec. at Pass 20]
DE:   #PIs = 256  #Luts =   473  Max Lvl =  19  Avg Lvl =  12.88  [   0.76 sec. at Pass 21]
DE:   #PIs = 256  #Luts =   470  Max Lvl =  20  Avg Lvl =  13.38  [   1.76 sec. at Pass 22]
DE:   #PIs = 256  #Luts =   470  Max Lvl =  20  Avg Lvl =  13.38  [   0.71 sec. at Pass 23]
DE:   #PIs = 256  #Luts =   470  Max Lvl =  20  Avg Lvl =  13.38  [   2.10 sec. at Pass 24]
DE:   #PIs = 256  #Luts =   470  Max Lvl =  20  Avg Lvl =  13.38  [   0.89 sec. at Pass 25]
DE:   #PIs = 256  #Luts =   467  Max Lvl =  19  Avg Lvl =  13.10  [   1.45 sec. at Pass 26]
DE:   #PIs = 256  #Luts =   465  Max Lvl =  19  Avg Lvl =  13.27  [   1.88 sec. at Pass 27]
DE:   #PIs = 256  #Luts =   465  Max Lvl =  19  Avg Lvl =  13.27  [   0.82 sec. at Pass 28]
DE:   #PIs = 256  #Luts =   465  Max Lvl =  19  Avg Lvl =  13.27  [   1.88 sec. at Pass 29]
DE:   #PIs = 256  #Luts =   463  Max Lvl =  21  Avg Lvl =  13.41  [   0.78 sec. at Pass 30]
DE:   #PIs = 256  #Luts =   459  Max Lvl =  20  Avg Lvl =  13.12  [   1.76 sec. at Pass 31]
DE:   #PIs = 256  #Luts =   458  Max Lvl =  19  Avg Lvl =  12.48  [   0.76 sec. at Pass 32]
DE:   #PIs = 256  #Luts =   458  Max Lvl =  19  Avg Lvl =  12.48  [   1.90 sec. at Pass 33]
DE:   #PIs = 256  #Luts =   458  Max Lvl =  19  Avg Lvl =  12.48  [   0.80 sec. at Pass 34]
DE:   #PIs = 256  #Luts =   458  Max Lvl =  19  Avg Lvl =  12.48  [   1.86 sec. at Pass 35]
DE:   #PIs = 256  #Luts =   452  Max Lvl =  21  Avg Lvl =  13.45  [   1.32 sec. at Pass 36]
DE:   #PIs = 256  #Luts =   452  Max Lvl =  21  Avg Lvl =  13.45  [   0.80 sec. at Pass 37]
DE:   #PIs = 256  #Luts =   452  Max Lvl =  21  Avg Lvl =  13.45  [   1.93 sec. at Pass 38]
DE:   #PIs = 256  #Luts =   452  Max Lvl =  21  Avg Lvl =  13.45  [   0.90 sec. at Pass 39]
DE:   #PIs = 256  #Luts =   451  Max Lvl =  20  Avg Lvl =  13.22  [   1.26 sec. at Pass 40]
DE:   #PIs = 256  #Luts =   451  Max Lvl =  20  Avg Lvl =  13.22  [   1.84 sec. at Pass 41]
DE:   #PIs = 256  #Luts =   451  Max Lvl =  20  Avg Lvl =  13.22  [   0.82 sec. at Pass 42]
DE:   #PIs = 256  #Luts =   451  Max Lvl =  20  Avg Lvl =  13.22  [   1.88 sec. at Pass 43]
DE:   #PIs = 256  #Luts =   451  Max Lvl =  20  Avg Lvl =  13.22  [   0.39 sec. at Pass 44]

yosys> opt

3.55. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.55.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge -nomux

3.55.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.55.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.55.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.55.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff

3.55.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.55.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 2303 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.55.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.55.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.55.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.55.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.55.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff

3.55.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.55.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr

3.55.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.55.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.56. Executing HIERARCHY pass (managing design hierarchy).

3.56.1. Analyzing design hierarchy..
Top module:  \top

3.56.2. Analyzing design hierarchy..
Top module:  \top
Removed 0 unused modules.

yosys> stat

3.57. Printing statistics.

=== top ===

   Number of wires:                707
   Number of wire bits:            707
   Number of public wires:         385
   Number of public wire bits:     385
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                451
     $lut                          451


yosys> opt_clean -purge

3.58. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> write_verilog -noattr -nohex synthesized.v

3.59. Executing Verilog backend.
Dumping module `\top'.

End of script. Logfile hash: ffc281d310, CPU: user 51.09s system 0.60s, MEM: 148.94 MB peak
Yosys 0.18+10 (git sha1 8217e4c48, gcc 9.1.0 -fPIC -Os)
Time spent: 98% 6x abc (3832 sec), 0% 28x opt_expr (18 sec), ...
real 486.96
user 3687.31
sys 193.30
