
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.24
 Yosys 0.16+65 (git sha1 03bd62bb8, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.

yosys> verilog_defaults -add -I.

yosys> read -vhdl rtea.vhdl

yosys> verific -vhdl rtea.vhdl

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.
VERIFIC-INFO [VHDL-1504] default VHDL library search path is now "/home/users/aram/Workspace/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008"
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'rtea.vhdl'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_1164' from file '/home/users/aram/Workspace/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_1164.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.standard' from file '/home/users/aram/Workspace/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/standard.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.textio' from file '/home/users/aram/Workspace/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/textio.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.numeric_std' from file '/home/users/aram/Workspace/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/numeric_std.vdb'
VERIFIC-INFO [VHDL-1012] rtea.vhdl:20: analyzing entity 'rtea'
VERIFIC-INFO [VHDL-1010] rtea.vhdl:34: analyzing architecture 'behave'

yosys> synth_rs -top rtea -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.47

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\dsp_t1_sim'.
Generating RTLIL representation for module `\dsp_t1_20x18x64'.
Generating RTLIL representation for module `\dsp_t1_10x9x32'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top rtea

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VHDL-1067] rtea.vhdl:20: processing 'rtea(behave)'
Importing module rtea.

3.3.1. Analyzing design hierarchy..
Top module:  \rtea

3.3.2. Analyzing design hierarchy..
Top module:  \rtea
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_mux

3.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.8. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.
<suppressed ~14 debug messages>

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..
Removed 2 unused cells and 25 unused wires.
<suppressed ~19 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module rtea...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rtea..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rtea.
Performed a total of 0 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Removing never-active async load on $verific$round_reg$rtea.vhdl:118$127 ($aldff) from module rtea.
Removing never-active async load on $verific$r_reg$rtea.vhdl:118$124 ($aldff) from module rtea.
Removing never-active async load on $verific$l_reg$rtea.vhdl:118$123 ($aldff) from module rtea.
Removing never-active async load on $verific$dout_reg$rtea.vhdl:118$128 ($aldff) from module rtea.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rtea..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rtea.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.

3.11.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rtea..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rtea.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $verific$run_reg$rtea.vhdl:118$126 ($dff) from module rtea (D = $verific$n1158$16, Q = \run, rval = 1'1).
Adding EN signal on $auto$ff.cc:262:slice$130 ($sdff) from module rtea (D = $verific$n1158$16, Q = \run).
Adding EN signal on $verific$round_reg$rtea.vhdl:118$127 ($dff) from module rtea (D = $verific$n1234$59, Q = \round).
Adding EN signal on $verific$r_reg$rtea.vhdl:118$124 ($dff) from module rtea (D = $verific$n1199$58, Q = \r).
Adding EN signal on $verific$mode_reg_reg$rtea.vhdl:118$125 ($dff) from module rtea (D = \mode, Q = \mode_reg).
Adding EN signal on $verific$l_reg$rtea.vhdl:118$123 ($dff) from module rtea (D = $verific$n1166$57, Q = \l).
Adding EN signal on $verific$dout_reg$rtea.vhdl:118$128 ($dff) from module rtea (D = { \r \l }, Q = \dout).

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..
Removed 4 unused cells and 4 unused wires.
<suppressed ~5 debug messages>

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.
<suppressed ~1 debug messages>

3.13.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rtea..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~5 debug messages>

yosys> opt_reduce

3.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rtea.
Performed a total of 0 changes.

yosys> opt_merge

3.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_dff -sat

3.13.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.

3.13.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rtea..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~5 debug messages>

yosys> opt_reduce

3.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rtea.
Performed a total of 0 changes.

yosys> opt_merge

3.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..

yosys> opt_expr

3.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.

3.13.23. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 2) from port B of cell rtea.$auto$opt_dff.cc:195:make_patterns_logic$147 ($ne).
Removed top 1 bits (of 2) from port B of cell rtea.$auto$opt_dff.cc:195:make_patterns_logic$135 ($ne).
Removed top 1 bits (of 2) from port B of cell rtea.$verific$equal_5$rtea.vhdl:67$66 ($eq).
Removed top 26 bits (of 32) from port B of cell rtea.$verific$add_12$rtea.vhdl:74$73 ($add).
Removed top 8 bits (of 32) from port B of cell rtea.$verific$xor_14$../vhdl_packages/vhdl_2008/src/numeric_std-body.vhdl:3548$75 ($xor).
Removed top 26 bits (of 32) from port B of cell rtea.$verific$add_18$rtea.vhdl:75$79 ($add).
Removed top 8 bits (of 32) from port B of cell rtea.$verific$xor_20$../vhdl_packages/vhdl_2008/src/numeric_std-body.vhdl:3548$81 ($xor).
Removed top 1 bits (of 33) from port A of cell rtea.$verific$sub_40$rtea.vhdl:96$94 ($sub).
Removed top 1 bits (of 33) from port B of cell rtea.$verific$sub_40$rtea.vhdl:96$94 ($sub).
Removed top 1 bits (of 33) from port Y of cell rtea.$verific$sub_40$rtea.vhdl:96$94 ($sub).
Removed top 5 bits (of 6) from port B of cell rtea.$verific$add_53$../vhdl_packages/vhdl_2008/src/numeric_std-body.vhdl:482$105 ($add).
Removed top 1 bits (of 7) from port A of cell rtea.$verific$sub_59$../vhdl_packages/vhdl_2008/src/numeric_std-body.vhdl:593$110 ($sub).
Removed top 6 bits (of 7) from port B of cell rtea.$verific$sub_59$../vhdl_packages/vhdl_2008/src/numeric_std-body.vhdl:593$110 ($sub).
Removed top 1 bits (of 7) from port Y of cell rtea.$verific$sub_59$../vhdl_packages/vhdl_2008/src/numeric_std-body.vhdl:593$110 ($sub).
Removed top 1 bits (of 7) from wire rtea.$verific$n1135$53.
Removed top 1 bits (of 33) from wire rtea.$verific$n744$40.

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

yosys> alumacc

3.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module rtea:
  creating $macc model for $verific$add_12$rtea.vhdl:74$73 ($add).
  creating $macc model for $verific$add_13$rtea.vhdl:74$74 ($add).
  creating $macc model for $verific$add_16$rtea.vhdl:74$77 ($add).
  creating $macc model for $verific$add_18$rtea.vhdl:75$79 ($add).
  creating $macc model for $verific$add_19$rtea.vhdl:75$80 ($add).
  creating $macc model for $verific$add_22$rtea.vhdl:75$83 ($add).
  creating $macc model for $verific$add_37$rtea.vhdl:93$93 ($add).
  creating $macc model for $verific$add_53$../vhdl_packages/vhdl_2008/src/numeric_std-body.vhdl:482$105 ($add).
  creating $macc model for $verific$sub_40$rtea.vhdl:96$94 ($sub).
  creating $macc model for $verific$sub_59$../vhdl_packages/vhdl_2008/src/numeric_std-body.vhdl:593$110 ($sub).
  merging $macc model for $verific$add_22$rtea.vhdl:75$83 into $verific$sub_40$rtea.vhdl:96$94.
  merging $macc model for $verific$add_19$rtea.vhdl:75$80 into $verific$sub_40$rtea.vhdl:96$94.
  merging $macc model for $verific$add_18$rtea.vhdl:75$79 into $verific$sub_40$rtea.vhdl:96$94.
  merging $macc model for $verific$add_16$rtea.vhdl:74$77 into $verific$add_37$rtea.vhdl:93$93.
  merging $macc model for $verific$add_13$rtea.vhdl:74$74 into $verific$add_37$rtea.vhdl:93$93.
  merging $macc model for $verific$add_12$rtea.vhdl:74$73 into $verific$add_37$rtea.vhdl:93$93.
  creating $alu model for $macc $verific$add_53$../vhdl_packages/vhdl_2008/src/numeric_std-body.vhdl:482$105.
  creating $alu model for $macc $verific$sub_59$../vhdl_packages/vhdl_2008/src/numeric_std-body.vhdl:593$110.
  creating $macc cell for $verific$sub_40$rtea.vhdl:96$94: $auto$alumacc.cc:365:replace_macc$159
  creating $macc cell for $verific$add_37$rtea.vhdl:93$93: $auto$alumacc.cc:365:replace_macc$160
  creating $alu cell for $verific$sub_59$../vhdl_packages/vhdl_2008/src/numeric_std-body.vhdl:593$110: $auto$alumacc.cc:485:replace_alu$161
  creating $alu cell for $verific$add_53$../vhdl_packages/vhdl_2008/src/numeric_std-body.vhdl:482$105: $auto$alumacc.cc:485:replace_alu$164
  created 2 $alu and 2 $macc cells.

yosys> opt

3.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.

yosys> opt_merge -nomux

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rtea..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~5 debug messages>

yosys> opt_reduce

3.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rtea.
Performed a total of 0 changes.

yosys> opt_merge

3.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..
Removed 6 unused cells and 6 unused wires.
<suppressed ~9 debug messages>

yosys> opt_expr

3.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.

3.19.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rtea..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~5 debug messages>

yosys> opt_reduce

3.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rtea.
Performed a total of 0 changes.

yosys> opt_merge

3.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..

yosys> opt_expr

3.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.

3.19.16. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.20. Printing statistics.

=== rtea ===

   Number of wires:                 54
   Number of wire bits:            839
   Number of public wires:          14
   Number of public wire bits:     370
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 43
     $alu                            2
     $dffe                           5
     $eq                             3
     $logic_not                      2
     $macc                           2
     $mux                           17
     $ne                             4
     $not                            1
     $reduce_and                     3
     $reduce_bool                    1
     $sdffe                          1
     $xor                            2


yosys> memory -nomap

3.21. Executing MEMORY pass.

yosys> opt_mem

3.21.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.21.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.21.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_dff

3.21.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.21.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..

yosys> memory_share

3.21.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.21.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.21.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..

yosys> memory_collect

3.21.9. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.22. Printing statistics.

=== rtea ===

   Number of wires:                 54
   Number of wire bits:            839
   Number of public wires:          14
   Number of public wire bits:     370
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 43
     $alu                            2
     $dffe                           5
     $eq                             3
     $logic_not                      2
     $macc                           2
     $mux                           17
     $ne                             4
     $not                            1
     $reduce_and                     3
     $reduce_bool                    1
     $sdffe                          1
     $xor                            2


yosys> opt_clean

3.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..

yosys> stat

3.24. Printing statistics.

=== rtea ===

   Number of wires:                 54
   Number of wire bits:            839
   Number of public wires:          14
   Number of public wire bits:     370
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 43
     $alu                            2
     $dffe                           5
     $eq                             3
     $logic_not                      2
     $macc                           2
     $mux                           17
     $ne                             4
     $not                            1
     $reduce_and                     3
     $reduce_bool                    1
     $sdffe                          1
     $xor                            2


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.25. Executing TECHMAP pass (map to technology primitives).

3.25.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.25.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.25.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $ne.
Using extmapper maccmap for cells of type $macc.
  add \r (32 bits, unsigned)
  sub \l (32 bits, unsigned)
  sub $verific$n416$29 (32 bits, unsigned)
  sub \key_slice (32 bits, unsigned)
  sub \round (6 bits, unsigned)
  packed 4 (1) bits / 1 words into adder tree
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$a04dd9d4d8b430140c4ff94b50470fb380fda2a0\_90_alu for cells of type $alu.
  add \l (32 bits, unsigned)
  add \r (32 bits, unsigned)
  add $verific$n215$24 (32 bits, unsigned)
  add \key_slice (32 bits, unsigned)
  add \round (6 bits, unsigned)
Using template $paramod$32efbfac1c4dc57230cf86180788fdfd12e3b511\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $sdffe.
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000000100000 for cells of type $fa.
Using template $paramod$61e2435132e1ce40c0d75c6c88e4344ff37fc23f\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $and.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000110 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod$fbc7873bff55778c0b3173955b7e4bce1d9d6834\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $or.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100000 for cells of type $lcu.
No more expansions possible.
<suppressed ~929 debug messages>

yosys> stat

3.26. Printing statistics.

=== rtea ===

   Number of wires:                414
   Number of wire bits:           8778
   Number of public wires:          14
   Number of public wire bits:     370
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2191
     $_AND_                        535
     $_DFFE_PN_                      1
     $_DFFE_PP_                    134
     $_MUX_                        399
     $_NOT_                        210
     $_OR_                         286
     $_SDFFE_PN1P_                   1
     $_XOR_                        593
     adder_carry                    32


yosys> opt

3.27. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.
<suppressed ~464 debug messages>

yosys> opt_merge -nomux

3.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
<suppressed ~114 debug messages>
Removed a total of 38 cells.

yosys> opt_muxtree

3.27.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rtea..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rtea.
Performed a total of 0 changes.

yosys> opt_merge

3.27.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:262:slice$319 ($_DFFE_PP_) from module rtea (D = $verific$n1159$56 [4], Q = \round [4], rval = 1'0).

yosys> opt_clean

3.27.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..
Removed 104 unused cells and 257 unused wires.
<suppressed ~105 debug messages>

yosys> opt_expr

3.27.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.

3.27.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.27.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rtea..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rtea.
Performed a total of 0 changes.

yosys> opt_merge

3.27.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..

yosys> opt_expr

3.27.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.

3.27.16. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.
<suppressed ~80 debug messages>

yosys> opt_merge

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
Removed a total of 0 cells.

yosys> opt_dff

3.28.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..
Removed 0 unused cells and 7 unused wires.
<suppressed ~1 debug messages>

3.28.5. Finished fast OPT passes.

yosys> memory_map

3.29. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.30. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.

yosys> opt_merge -nomux

3.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rtea..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rtea.
Performed a total of 0 changes.

yosys> opt_merge

3.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
Removed a total of 0 cells.

yosys> opt_share

3.30.6. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$720 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$1066
        $auto$simplemap.cc:86:simplemap_bitop$1133


yosys> opt_dff

3.30.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..

yosys> opt_expr -full

3.30.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.
<suppressed ~1 debug messages>

3.30.10. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.30.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rtea..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

yosys> opt_reduce -full

3.30.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rtea.
Performed a total of 0 changes.

yosys> opt_merge

3.30.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
Removed a total of 0 cells.

yosys> opt_share

3.30.14. Executing OPT_SHARE pass.

yosys> opt_dff

3.30.15. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..

yosys> opt_expr -full

3.30.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.

3.30.18. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

3.31. Executing ABC pass (technology mapping using ABC).

3.31.1. Summary of detected clock domains:
  5 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$136, arst={ }, srst=!\start
  1523 cells in clk=\clk, en=$auto$opt_dff.cc:194:make_patterns_logic$146, arst={ }, srst={ }
  22 cells in clk=\clk, en=!\start, arst={ }, srst={ }
  65 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$155, arst={ }, srst={ }
  39 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$143, arst={ }, srst={ }
  8 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$143, arst={ }, srst=!\start

3.31.2. Extracting gate netlist of module `\rtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$136, synchronously reset by !\start
Extracted 4 gates and 8 wires to a netlist network with 4 inputs and 2 outputs.

3.31.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.2.2. Re-integrating ABC results.
ABC RESULTS:               NOT cells:        1
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        4
ABC RESULTS:          output signals:        2
Removing temp directory.

3.31.3. Extracting gate netlist of module `\rtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:194:make_patterns_logic$146
Extracted 1491 gates and 1733 wires to a netlist network with 242 inputs and 125 outputs.

3.31.3.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 64 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.3.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       64
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               MUX cells:      156
ABC RESULTS:                OR cells:       83
ABC RESULTS:            ANDNOT cells:        8
ABC RESULTS:               XOR cells:      182
ABC RESULTS:              XNOR cells:      262
ABC RESULTS:             ORNOT cells:       90
ABC RESULTS:               AND cells:      142
ABC RESULTS:              NAND cells:      443
ABC RESULTS:               BUF cells:       64
ABC RESULTS:        internal signals:     1366
ABC RESULTS:           input signals:      242
ABC RESULTS:          output signals:      125
Removing temp directory.

3.31.4. Extracting gate netlist of module `\rtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !\start
Extracted 21 gates and 38 wires to a netlist network with 17 inputs and 11 outputs.

3.31.4.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 1 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.4.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        2
ABC RESULTS:               AND cells:        2
ABC RESULTS:                OR cells:        1
ABC RESULTS:               XOR cells:        4
ABC RESULTS:               MUX cells:        4
ABC RESULTS:               NOR cells:        2
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:              NAND cells:        2
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:               BUF cells:        2
ABC RESULTS:        internal signals:       10
ABC RESULTS:           input signals:       17
ABC RESULTS:          output signals:       11
Removing temp directory.

3.31.5. Extracting gate netlist of module `\rtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$155
Extracted 65 gates and 131 wires to a netlist network with 66 inputs and 65 outputs.

3.31.5.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 64 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.5.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       64
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:      128
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:       66
ABC RESULTS:          output signals:       65
Removing temp directory.

3.31.6. Extracting gate netlist of module `\rtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$143
Extracted 39 gates and 51 wires to a netlist network with 12 inputs and 23 outputs.

3.31.6.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 5 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.6.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        5
ABC RESULTS:               NOT cells:        5
ABC RESULTS:               AND cells:        4
ABC RESULTS:              XNOR cells:        2
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:               XOR cells:        2
ABC RESULTS:               MUX cells:        5
ABC RESULTS:               BUF cells:        5
ABC RESULTS:                OR cells:       10
ABC RESULTS:        internal signals:       16
ABC RESULTS:           input signals:       12
ABC RESULTS:          output signals:       23
Removing temp directory.

3.31.7. Extracting gate netlist of module `\rtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4553$auto$opt_dff.cc:219:make_patterns_logic$143, synchronously reset by !\start
Extracted 8 gates and 13 wires to a netlist network with 5 inputs and 6 outputs.

3.31.7.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.7.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               AND cells:        2
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:                OR cells:        2
ABC RESULTS:               BUF cells:        2
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        5
ABC RESULTS:          output signals:        6
Removing temp directory.

yosys> abc -dff

3.32. Executing ABC pass (technology mapping using ABC).

3.32.1. Summary of detected clock domains:
  145 cells in clk=\clk, en=!\start, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$2836$auto$opt_dff.cc:219:make_patterns_logic$136, arst={ }, srst=!\start
  41 cells in clk=\clk, en=$abc$4553$auto$opt_dff.cc:219:make_patterns_logic$143, arst={ }, srst={ }
  1330 cells in clk=\clk, en=$abc$2840$auto$opt_dff.cc:194:make_patterns_logic$146, arst={ }, srst={ }
  65 cells in clk=\clk, en=$abc$4359$auto$opt_dff.cc:219:make_patterns_logic$155, arst={ }, srst={ }
  9 cells in clk=\clk, en=$abc$4553$auto$opt_dff.cc:219:make_patterns_logic$143, arst={ }, srst=!\start

3.32.2. Extracting gate netlist of module `\rtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !\start
Extracted 137 gates and 252 wires to a netlist network with 115 inputs and 55 outputs.

3.32.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 1 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.32.2.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:             ORNOT cells:        3
ABC RESULTS:               NOR cells:        1
ABC RESULTS:            ANDNOT cells:        3
ABC RESULTS:               XOR cells:        5
ABC RESULTS:                OR cells:       11
ABC RESULTS:               MUX cells:       25
ABC RESULTS:              NAND cells:       30
ABC RESULTS:               AND cells:       15
ABC RESULTS:              XNOR cells:       40
ABC RESULTS:               NOT cells:        5
ABC RESULTS:               BUF cells:        2
ABC RESULTS:        internal signals:       82
ABC RESULTS:           input signals:      115
ABC RESULTS:          output signals:       55
Removing temp directory.

3.32.3. Extracting gate netlist of module `\rtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$2836$auto$opt_dff.cc:219:make_patterns_logic$136, synchronously reset by !\start
Extracted 4 gates and 8 wires to a netlist network with 4 inputs and 2 outputs.

3.32.3.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.32.3.2. Re-integrating ABC results.
ABC RESULTS:               MUX cells:        1
ABC RESULTS:               NOT cells:        2
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        4
ABC RESULTS:          output signals:        2
Removing temp directory.

3.32.4. Extracting gate netlist of module `\rtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4553$auto$opt_dff.cc:219:make_patterns_logic$143
Extracted 41 gates and 55 wires to a netlist network with 14 inputs and 25 outputs.

3.32.4.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 5 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.32.4.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        5
ABC RESULTS:               NOT cells:        5
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:               AND cells:        4
ABC RESULTS:              NAND cells:        3
ABC RESULTS:               XOR cells:        4
ABC RESULTS:               MUX cells:        5
ABC RESULTS:               BUF cells:        3
ABC RESULTS:                OR cells:       11
ABC RESULTS:        internal signals:       16
ABC RESULTS:           input signals:       14
ABC RESULTS:          output signals:       25
Removing temp directory.

3.32.5. Extracting gate netlist of module `\rtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$2840$auto$opt_dff.cc:194:make_patterns_logic$146
Extracted 1305 gates and 1557 wires to a netlist network with 252 inputs and 177 outputs.

3.32.5.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 64 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.32.5.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       64
ABC RESULTS:               NOT cells:       14
ABC RESULTS:               NOR cells:        2
ABC RESULTS:            ANDNOT cells:       16
ABC RESULTS:               XOR cells:      185
ABC RESULTS:              XNOR cells:      190
ABC RESULTS:               MUX cells:      138
ABC RESULTS:                OR cells:       84
ABC RESULTS:             ORNOT cells:       95
ABC RESULTS:               AND cells:      143
ABC RESULTS:              NAND cells:      380
ABC RESULTS:               BUF cells:       64
ABC RESULTS:        internal signals:     1128
ABC RESULTS:           input signals:      252
ABC RESULTS:          output signals:      177
Removing temp directory.

3.32.6. Extracting gate netlist of module `\rtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4359$auto$opt_dff.cc:219:make_patterns_logic$155
Extracted 65 gates and 131 wires to a netlist network with 66 inputs and 65 outputs.

3.32.6.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 64 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.32.6.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       64
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:      128
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:       66
ABC RESULTS:          output signals:       65
Removing temp directory.

3.32.7. Extracting gate netlist of module `\rtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4750$abc$4553$auto$opt_dff.cc:219:make_patterns_logic$143, synchronously reset by !\start
Extracted 9 gates and 17 wires to a netlist network with 8 inputs and 7 outputs.

3.32.7.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.32.7.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        3
ABC RESULTS:               AND cells:        4
ABC RESULTS:               BUF cells:        2
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        7
Removing temp directory.

yosys> abc -dff

3.33. Executing ABC pass (technology mapping using ABC).

3.33.1. Summary of detected clock domains:
  352 cells in clk=\clk, en=!\start, arst={ }, srst={ }
  8 cells in clk=\clk, en=$abc$4746$abc$2836$auto$opt_dff.cc:219:make_patterns_logic$136, arst={ }, srst=!\start
  38 cells in clk=\clk, en=$abc$4750$abc$4553$auto$opt_dff.cc:219:make_patterns_logic$143, arst={ }, srst={ }
  1127 cells in clk=\clk, en=$abc$4793$abc$2840$auto$opt_dff.cc:194:make_patterns_logic$146, arst={ }, srst={ }
  65 cells in clk=\clk, en=$abc$6169$abc$4359$auto$opt_dff.cc:219:make_patterns_logic$155, arst={ }, srst={ }
  10 cells in clk=\clk, en=$abc$4750$abc$4553$auto$opt_dff.cc:219:make_patterns_logic$143, arst={ }, srst=!\start

3.33.2. Extracting gate netlist of module `\rtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !\start
Extracted 330 gates and 571 wires to a netlist network with 241 inputs and 135 outputs.

3.33.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 1 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.33.2.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:             ORNOT cells:       28
ABC RESULTS:                OR cells:       23
ABC RESULTS:               MUX cells:       62
ABC RESULTS:               AND cells:       27
ABC RESULTS:            ANDNOT cells:       10
ABC RESULTS:               XOR cells:       33
ABC RESULTS:              XNOR cells:       67
ABC RESULTS:              NAND cells:       63
ABC RESULTS:               NOT cells:        9
ABC RESULTS:               BUF cells:        2
ABC RESULTS:        internal signals:      195
ABC RESULTS:           input signals:      241
ABC RESULTS:          output signals:      135
Removing temp directory.

3.33.3. Extracting gate netlist of module `\rtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4746$abc$2836$auto$opt_dff.cc:219:make_patterns_logic$136, synchronously reset by !\start
Extracted 7 gates and 15 wires to a netlist network with 8 inputs and 4 outputs.

3.33.3.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.33.3.2. Re-integrating ABC results.
ABC RESULTS:                OR cells:        1
ABC RESULTS:               NOR cells:        1
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:               NOT cells:        3
ABC RESULTS:               MUX cells:        1
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        4
Removing temp directory.

3.33.4. Extracting gate netlist of module `\rtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4750$abc$4553$auto$opt_dff.cc:219:make_patterns_logic$143
Extracted 38 gates and 52 wires to a netlist network with 14 inputs and 24 outputs.

3.33.4.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 5 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.33.4.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        5
ABC RESULTS:               NOT cells:        5
ABC RESULTS:             ORNOT cells:        3
ABC RESULTS:               AND cells:        4
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               XOR cells:        6
ABC RESULTS:               MUX cells:        5
ABC RESULTS:               BUF cells:        3
ABC RESULTS:                OR cells:        7
ABC RESULTS:        internal signals:       14
ABC RESULTS:           input signals:       14
ABC RESULTS:          output signals:       24
Removing temp directory.

3.33.5. Extracting gate netlist of module `\rtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4793$abc$2840$auto$opt_dff.cc:194:make_patterns_logic$146
Extracted 1116 gates and 1376 wires to a netlist network with 260 inputs and 199 outputs.

3.33.5.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 64 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.33.5.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       64
ABC RESULTS:               NOT cells:        9
ABC RESULTS:               NOR cells:        1
ABC RESULTS:            ANDNOT cells:       13
ABC RESULTS:               XOR cells:      169
ABC RESULTS:             ORNOT cells:       66
ABC RESULTS:              XNOR cells:      144
ABC RESULTS:                OR cells:       74
ABC RESULTS:              NAND cells:      340
ABC RESULTS:               AND cells:      124
ABC RESULTS:               MUX cells:      108
ABC RESULTS:               BUF cells:       64
ABC RESULTS:        internal signals:      917
ABC RESULTS:           input signals:      260
ABC RESULTS:          output signals:      199
Removing temp directory.

3.33.6. Extracting gate netlist of module `\rtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$6169$abc$4359$auto$opt_dff.cc:219:make_patterns_logic$155
Extracted 65 gates and 131 wires to a netlist network with 66 inputs and 65 outputs.

3.33.6.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 64 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.33.6.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       64
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:      128
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:       66
ABC RESULTS:          output signals:       65
Removing temp directory.

3.33.7. Extracting gate netlist of module `\rtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$6710$abc$4750$abc$4553$auto$opt_dff.cc:219:make_patterns_logic$143, synchronously reset by !\start
Extracted 10 gates and 18 wires to a netlist network with 8 inputs and 7 outputs.

3.33.7.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.33.7.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               AND cells:        4
ABC RESULTS:                OR cells:        3
ABC RESULTS:               XOR cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        7
Removing temp directory.

yosys> opt_ffinv

3.34. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt -sat

3.35. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.35.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.
<suppressed ~2 debug messages>

yosys> opt_merge -nomux

3.35.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

yosys> opt_muxtree

3.35.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rtea..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

yosys> opt_reduce

3.35.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rtea.
Performed a total of 0 changes.

yosys> opt_merge

3.35.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.35.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.35.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..
Removed 0 unused cells and 5512 unused wires.
<suppressed ~2 debug messages>

yosys> opt_expr

3.35.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.

3.35.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.35.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rtea..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

yosys> opt_reduce

3.35.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rtea.
Performed a total of 0 changes.

yosys> opt_merge

3.35.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.35.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.35.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..

yosys> opt_expr

3.35.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.

3.35.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

3.36. Executing ABC pass (technology mapping using ABC).

3.36.1. Summary of detected clock domains:
  8 cells in clk=\clk, en=$abc$2836$auto$opt_dff.cc:219:make_patterns_logic$136, arst={ }, srst=!\start
  18 cells in clk=\clk, en=$abc$4553$auto$opt_dff.cc:219:make_patterns_logic$143, arst={ }, srst=!\start
  65 cells in clk=\clk, en=$abc$4359$auto$opt_dff.cc:219:make_patterns_logic$155, arst={ }, srst={ }
  1232 cells in clk=\clk, en=$abc$2840$auto$opt_dff.cc:194:make_patterns_logic$146, arst={ }, srst={ }
  28 cells in clk=\clk, en=$abc$4553$auto$opt_dff.cc:219:make_patterns_logic$143, arst={ }, srst={ }
  235 cells in clk=\clk, en=!\start, arst={ }, srst={ }

3.36.2. Extracting gate netlist of module `\rtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$2836$auto$opt_dff.cc:219:make_patterns_logic$136, synchronously reset by !\start
Extracted 7 gates and 16 wires to a netlist network with 9 inputs and 5 outputs.

3.36.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.36.2.2. Re-integrating ABC results.
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:               NOR cells:        1
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:               MUX cells:        1
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        9
ABC RESULTS:          output signals:        5
Removing temp directory.

3.36.3. Extracting gate netlist of module `\rtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4553$auto$opt_dff.cc:219:make_patterns_logic$143, synchronously reset by !\start
Extracted 18 gates and 32 wires to a netlist network with 14 inputs and 9 outputs.

3.36.3.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.36.3.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               AND cells:        4
ABC RESULTS:              NAND cells:        2
ABC RESULTS:                OR cells:        4
ABC RESULTS:               XOR cells:        2
ABC RESULTS:        internal signals:        9
ABC RESULTS:           input signals:       14
ABC RESULTS:          output signals:        9
Removing temp directory.

3.36.4. Extracting gate netlist of module `\rtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4359$auto$opt_dff.cc:219:make_patterns_logic$155
Extracted 65 gates and 131 wires to a netlist network with 66 inputs and 65 outputs.

3.36.4.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 64 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.36.4.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       64
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:      128
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:       66
ABC RESULTS:          output signals:       65
Removing temp directory.

3.36.5. Extracting gate netlist of module `\rtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$8134$abc$2840$auto$opt_dff.cc:194:make_patterns_logic$146
Extracted 1201 gates and 1506 wires to a netlist network with 305 inputs and 219 outputs.

3.36.5.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 64 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.36.5.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       64
ABC RESULTS:               NOT cells:       16
ABC RESULTS:               NOR cells:        8
ABC RESULTS:            ANDNOT cells:       21
ABC RESULTS:               XOR cells:      151
ABC RESULTS:              XNOR cells:      192
ABC RESULTS:               MUX cells:      164
ABC RESULTS:                OR cells:       72
ABC RESULTS:             ORNOT cells:       88
ABC RESULTS:               AND cells:      109
ABC RESULTS:              NAND cells:      310
ABC RESULTS:               BUF cells:       64
ABC RESULTS:        internal signals:      982
ABC RESULTS:           input signals:      305
ABC RESULTS:          output signals:      219
Removing temp directory.

3.36.6. Extracting gate netlist of module `\rtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$8142$abc$4553$auto$opt_dff.cc:219:make_patterns_logic$143
Extracted 27 gates and 34 wires to a netlist network with 7 inputs and 19 outputs.

3.36.6.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 5 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.36.6.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        5
ABC RESULTS:               NOT cells:        5
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:                OR cells:        3
ABC RESULTS:               AND cells:        3
ABC RESULTS:               XOR cells:        4
ABC RESULTS:               MUX cells:        5
ABC RESULTS:               BUF cells:        5
ABC RESULTS:        internal signals:        8
ABC RESULTS:           input signals:        7
ABC RESULTS:          output signals:       19
Removing temp directory.

3.36.7. Extracting gate netlist of module `\rtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !\start
Extracted 234 gates and 347 wires to a netlist network with 113 inputs and 76 outputs.

3.36.7.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 1 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.36.7.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOR cells:        2
ABC RESULTS:            ANDNOT cells:        5
ABC RESULTS:               NOT cells:       12
ABC RESULTS:             ORNOT cells:       15
ABC RESULTS:               XOR cells:       39
ABC RESULTS:               MUX cells:        7
ABC RESULTS:                OR cells:       14
ABC RESULTS:              XNOR cells:       36
ABC RESULTS:              NAND cells:       90
ABC RESULTS:               AND cells:       21
ABC RESULTS:               BUF cells:        2
ABC RESULTS:        internal signals:      158
ABC RESULTS:           input signals:      113
ABC RESULTS:          output signals:       76
Removing temp directory.

yosys> opt_ffinv

3.37. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> abc -script /tmp/yosys_ehCrKK/abc_tmp_1.scr

3.38. Executing ABC pass (technology mapping using ABC).

3.38.1. Extracting gate netlist of module `\rtea' to `<abc-temp-dir>/input.blif'..
Extracted 1417 gates and 1715 wires to a netlist network with 298 inputs and 136 outputs.

3.38.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /tmp/yosys_ehCrKK/abc_tmp_1.scr 
ABC:   #PIs = 298  #Luts =   461  Max Lvl =  33  Avg Lvl =   6.21  [   0.09 sec. at Pass 0]
ABC:   #PIs = 298  #Luts =   430  Max Lvl =  25  Avg Lvl =   4.94  [   4.74 sec. at Pass 1]
ABC:   #PIs = 298  #Luts =   415  Max Lvl =  22  Avg Lvl =   4.85  [   0.90 sec. at Pass 2]
ABC:   #PIs = 298  #Luts =   415  Max Lvl =  22  Avg Lvl =   4.85  [   1.77 sec. at Pass 3]
ABC:   #PIs = 298  #Luts =   413  Max Lvl =  23  Avg Lvl =   5.10  [   1.12 sec. at Pass 4]
ABC:   #PIs = 298  #Luts =   413  Max Lvl =  23  Avg Lvl =   5.10  [   1.74 sec. at Pass 5]
ABC:   #PIs = 298  #Luts =   412  Max Lvl =  24  Avg Lvl =   5.02  [   1.20 sec. at Pass 6]
ABC:   #PIs = 298  #Luts =   412  Max Lvl =  24  Avg Lvl =   5.02  [   2.92 sec. at Pass 7]
ABC:   #PIs = 298  #Luts =   409  Max Lvl =  23  Avg Lvl =   5.04  [   1.05 sec. at Pass 8]
ABC:   #PIs = 298  #Luts =   409  Max Lvl =  23  Avg Lvl =   5.04  [   1.81 sec. at Pass 9]
ABC:   #PIs = 298  #Luts =   409  Max Lvl =  23  Avg Lvl =   5.04  [   0.78 sec. at Pass 10]
ABC:   #PIs = 298  #Luts =   409  Max Lvl =  23  Avg Lvl =   5.04  [   1.37 sec. at Pass 11]
ABC:   #PIs = 298  #Luts =   404  Max Lvl =  24  Avg Lvl =   4.99  [   6.78 sec. at Pass 12]
ABC:   #PIs = 298  #Luts =   404  Max Lvl =  24  Avg Lvl =   4.99  [   1.02 sec. at Pass 13]
ABC:   #PIs = 298  #Luts =   404  Max Lvl =  24  Avg Lvl =   4.99  [   1.94 sec. at Pass 14]
ABC:   #PIs = 298  #Luts =   404  Max Lvl =  24  Avg Lvl =   4.99  [   1.17 sec. at Pass 15]
ABC:   #PIs = 298  #Luts =   402  Max Lvl =  24  Avg Lvl =   5.11  [  10.77 sec. at Pass 16]
ABC:   #PIs = 298  #Luts =   402  Max Lvl =  24  Avg Lvl =   5.11  [   2.68 sec. at Pass 17]
ABC:   #PIs = 298  #Luts =   400  Max Lvl =  24  Avg Lvl =   5.15  [   1.08 sec. at Pass 18]
ABC:   #PIs = 298  #Luts =   400  Max Lvl =  24  Avg Lvl =   5.15  [   3.19 sec. at Pass 19]
ABC:   #PIs = 298  #Luts =   400  Max Lvl =  24  Avg Lvl =   5.15  [   1.27 sec. at Pass 20]
ABC:   #PIs = 298  #Luts =   400  Max Lvl =  24  Avg Lvl =   5.15  [   2.24 sec. at Pass 21]
ABC:   #PIs = 298  #Luts =   396  Max Lvl =  25  Avg Lvl =   5.18  [  10.71 sec. at Pass 22]
ABC:   #PIs = 298  #Luts =   396  Max Lvl =  25  Avg Lvl =   5.18  [   1.09 sec. at Pass 23]
ABC:   #PIs = 298  #Luts =   396  Max Lvl =  25  Avg Lvl =   5.18  [   2.10 sec. at Pass 24]
ABC:   #PIs = 298  #Luts =   396  Max Lvl =  25  Avg Lvl =   5.18  [   1.20 sec. at Pass 25]
ABC:   #PIs = 298  #Luts =   395  Max Lvl =  24  Avg Lvl =   5.21  [   9.33 sec. at Pass 26]
ABC:   #PIs = 298  #Luts =   395  Max Lvl =  24  Avg Lvl =   5.21  [   2.44 sec. at Pass 27]
ABC:   #PIs = 298  #Luts =   395  Max Lvl =  24  Avg Lvl =   5.21  [   0.93 sec. at Pass 28]
ABC:   #PIs = 298  #Luts =   395  Max Lvl =  24  Avg Lvl =   5.21  [   1.48 sec. at Pass 29]
ABC:   #PIs = 298  #Luts =   395  Max Lvl =  24  Avg Lvl =   5.21  [   0.20 sec. at Pass 30]
ABC:   [DE total time =   82.86 sec. ]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.38.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      395
ABC RESULTS:        internal signals:     1281
ABC RESULTS:           input signals:      298
ABC RESULTS:          output signals:      136
Removing temp directory.

yosys> opt

3.39. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.39.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.

yosys> opt_merge -nomux

3.39.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.39.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rtea..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

yosys> opt_reduce

3.39.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rtea.
Performed a total of 0 changes.

yosys> opt_merge

3.39.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
Removed a total of 0 cells.

yosys> opt_dff

3.39.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.39.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..
Removed 0 unused cells and 3972 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.39.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.

3.39.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.39.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rtea..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

yosys> opt_reduce

3.39.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rtea.
Performed a total of 0 changes.

yosys> opt_merge

3.39.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
Removed a total of 0 cells.

yosys> opt_dff

3.39.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.39.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..

yosys> opt_expr

3.39.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.

3.39.16. Finished OPT passes. (There is nothing left to do.)

yosys> opt_ffinv

3.40. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> stat

3.41. Printing statistics.

=== rtea ===

   Number of wires:                356
   Number of wire bits:            811
   Number of public wires:          13
   Number of public wire bits:     338
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                564
     $_DFFE_PN_                      1
     $_DFFE_PP_                    133
     $_SDFFE_PN0P_                   1
     $_SDFFE_PN1P_                   1
     $lut                          395
     $mux                            1
     adder_carry                    32


yosys> shregmap -minlen 8 -maxlen 20

3.42. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.43. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.44. Printing statistics.

=== rtea ===

   Number of wires:                360
   Number of wire bits:            815
   Number of public wires:          13
   Number of public wire bits:     338
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                568
     $_DFFE_PP0N_                    1
     $_DFFE_PP0P_                  133
     $_DFF_P_                        2
     $_MUX_                          4
     $lut                          395
     $mux                            1
     adder_carry                    32


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.45. Executing TECHMAP pass (map to technology primitives).

3.45.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.45.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.45.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using template \$_DFFE_PP0N_ for cells of type $_DFFE_PP0N_.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~803 debug messages>

yosys> opt_expr -mux_undef

3.46. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.
<suppressed ~8475 debug messages>

yosys> simplemap

3.47. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.48. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.

yosys> opt_merge

3.49. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
<suppressed ~9276 debug messages>
Removed a total of 3092 cells.

yosys> opt_dff -nodffe -nosdff

3.50. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.51. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..
Removed 0 unused cells and 1651 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.52. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.52.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.
<suppressed ~72 debug messages>

yosys> opt_merge -nomux

3.52.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_muxtree

3.52.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rtea..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.52.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rtea.
Performed a total of 0 changes.

yosys> opt_merge

3.52.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.52.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.52.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..
Removed 0 unused cells and 13 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.52.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.

3.52.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.52.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rtea..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.52.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rtea.
Performed a total of 0 changes.

yosys> opt_merge

3.52.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.52.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.52.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..

yosys> opt_expr

3.52.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.

3.52.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /tmp/yosys_ehCrKK/abc_tmp_2.scr

3.53. Executing ABC pass (technology mapping using ABC).

3.53.1. Extracting gate netlist of module `\rtea' to `<abc-temp-dir>/input.blif'..
Extracted 2551 gates and 2850 wires to a netlist network with 297 inputs and 136 outputs.

3.53.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /tmp/yosys_ehCrKK/abc_tmp_2.scr 
ABC:   #PIs = 297  #Luts =   399  Max Lvl =  25  Avg Lvl =   5.32  [   0.19 sec. at Pass 0]
ABC:   #PIs = 297  #Luts =   399  Max Lvl =  25  Avg Lvl =   5.32  [   5.44 sec. at Pass 1]
ABC:   #PIs = 297  #Luts =   399  Max Lvl =  25  Avg Lvl =   5.32  [   1.22 sec. at Pass 2]
ABC:   #PIs = 297  #Luts =   399  Max Lvl =  25  Avg Lvl =   5.32  [   1.78 sec. at Pass 3]
ABC:   #PIs = 297  #Luts =   399  Max Lvl =  25  Avg Lvl =   5.32  [   1.11 sec. at Pass 4]
ABC:   #PIs = 297  #Luts =   399  Max Lvl =  25  Avg Lvl =   5.32  [   1.98 sec. at Pass 5]
ABC:   #PIs = 297  #Luts =   397  Max Lvl =  25  Avg Lvl =   5.25  [  10.66 sec. at Pass 6]
ABC:   #PIs = 297  #Luts =   397  Max Lvl =  25  Avg Lvl =   5.25  [   1.34 sec. at Pass 7]
ABC:   #PIs = 297  #Luts =   397  Max Lvl =  25  Avg Lvl =   5.25  [   2.58 sec. at Pass 8]
ABC:   #PIs = 297  #Luts =   397  Max Lvl =  25  Avg Lvl =   5.25  [   1.86 sec. at Pass 9]
ABC:   #PIs = 297  #Luts =   397  Max Lvl =  23  Avg Lvl =   5.19  [  10.86 sec. at Pass 10]
ABC:   #PIs = 297  #Luts =   397  Max Lvl =  23  Avg Lvl =   5.19  [   2.60 sec. at Pass 11]
ABC:   #PIs = 297  #Luts =   397  Max Lvl =  23  Avg Lvl =   5.19  [   1.41 sec. at Pass 12]
ABC:   #PIs = 297  #Luts =   397  Max Lvl =  23  Avg Lvl =   5.19  [   2.25 sec. at Pass 13]
ABC:   #PIs = 297  #Luts =   396  Max Lvl =  23  Avg Lvl =   5.18  [  14.02 sec. at Pass 14]
ABC:   #PIs = 297  #Luts =   396  Max Lvl =  23  Avg Lvl =   5.18  [   1.41 sec. at Pass 15]
ABC:   #PIs = 297  #Luts =   396  Max Lvl =  23  Avg Lvl =   5.18  [   3.12 sec. at Pass 16]
ABC:   #PIs = 297  #Luts =   396  Max Lvl =  23  Avg Lvl =   5.18  [   1.24 sec. at Pass 17]
ABC:   #PIs = 297  #Luts =   396  Max Lvl =  23  Avg Lvl =   5.18  [  11.19 sec. at Pass 18]
ABC:   #PIs = 297  #Luts =   395  Max Lvl =  23  Avg Lvl =   5.08  [   0.23 sec. at Pass 19]
ABC:   [DE total time =   77.83 sec. ]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.53.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      395
ABC RESULTS:        internal signals:     2417
ABC RESULTS:           input signals:      297
ABC RESULTS:          output signals:      136
Removing temp directory.

yosys> opt

3.54. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.54.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.

yosys> opt_merge -nomux

3.54.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.54.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rtea..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.54.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rtea.
Performed a total of 0 changes.

yosys> opt_merge

3.54.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
Removed a total of 0 cells.

yosys> opt_dff

3.54.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.54.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..
Removed 0 unused cells and 1746 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.54.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.

3.54.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.54.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rtea..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.54.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rtea.
Performed a total of 0 changes.

yosys> opt_merge

3.54.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
Removed a total of 0 cells.

yosys> opt_dff

3.54.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.54.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..

yosys> opt_expr

3.54.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.

3.54.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.55. Executing HIERARCHY pass (managing design hierarchy).

3.55.1. Analyzing design hierarchy..
Top module:  \rtea

3.55.2. Analyzing design hierarchy..
Top module:  \rtea
Removed 0 unused modules.

yosys> stat

3.56. Printing statistics.

=== rtea ===

   Number of wires:                356
   Number of wire bits:            811
   Number of public wires:          13
   Number of public wire bits:     338
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                563
     $lut                          395
     adder_carry                    32
     dffsre                        136


yosys> opt_clean -purge

3.57. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..
Removed 0 unused cells and 2 unused wires.
<suppressed ~2 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.58. Executing Verilog backend.

yosys> bmuxmap

3.58.1. Executing BMUXMAP pass.

yosys> demuxmap

3.58.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\rtea'.

End of script. Logfile hash: 2d8b942d0b, CPU: user 4.97s system 0.14s, MEM: 45.01 MB peak
Yosys 0.16+65 (git sha1 03bd62bb8, gcc 9.1.0 -fPIC -Os)
Time spent: 99% 6x abc (1888 sec), 0% 37x opt_expr (1 sec), ...
real 173.51
user 1790.09
sys 102.56
