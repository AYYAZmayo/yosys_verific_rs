
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.36
 Yosys 0.17+76 (git sha1 ba67c2ec9, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Apr22_SW_Release, released at Thu Apr 28 20:08:21 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k gost89_ecb.v gost89_round.v gost89_sbox.v

yosys> verific -vlog2k gost89_ecb.v gost89_round.v gost89_sbox.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Apr22_SW_Release, released at Thu Apr 28 20:08:21 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'gost89_ecb.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'gost89_round.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'gost89_sbox.v'

yosys> synth_rs -top gost89_ecb -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.52

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\RS_DSP2_MULT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_sim'.
Generating RTLIL representation for module `\dsp_t1_20x18x64'.
Generating RTLIL representation for module `\dsp_t1_10x9x32'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top gost89_ecb

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] gost89_ecb.v:1: compiling module 'gost89_ecb'
VERIFIC-INFO [VERI-1018] gost89_round.v:1: compiling module 'gost89_round'
VERIFIC-INFO [VERI-1018] gost89_sbox.v:1: compiling module 'gost89_sbox'
VERIFIC-WARNING [VERI-1209] gost89_ecb.v:34: expression size 7 truncated to fit in target size 6
Importing module gost89_ecb.
Importing module gost89_round.
Importing module gost89_sbox.

3.3.1. Analyzing design hierarchy..
Top module:  \gost89_ecb
Used module:     \gost89_round
Used module:         \gost89_sbox

3.3.2. Analyzing design hierarchy..
Top module:  \gost89_ecb
Used module:     \gost89_round
Used module:         \gost89_sbox
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.4.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.4.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_sbox.
Optimizing module gost89_round.
Optimizing module gost89_ecb.
<suppressed ~3 debug messages>

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).
Deleting now unused module gost89_sbox.
Deleting now unused module gost89_round.
<suppressed ~9 debug messages>

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..
Removed 0 unused cells and 1459 unused wires.
<suppressed ~21 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module gost89_ecb...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_ecb..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~10 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_ecb.
    New ctrl vector for $pmux cell $verific$select_186$gost89_ecb.v:117$890: { $auto$opt_reduce.cc:134:opt_pmux$1530 $auto$opt_reduce.cc:134:opt_pmux$1528 $auto$opt_reduce.cc:134:opt_pmux$1526 $auto$opt_reduce.cc:134:opt_pmux$1524 $auto$opt_reduce.cc:134:opt_pmux$1522 $auto$opt_reduce.cc:134:opt_pmux$1520 $auto$opt_reduce.cc:134:opt_pmux$1518 $auto$opt_reduce.cc:134:opt_pmux$1516 $auto$opt_reduce.cc:134:opt_pmux$1514 $auto$opt_reduce.cc:134:opt_pmux$1512 $auto$opt_reduce.cc:134:opt_pmux$1510 $auto$opt_reduce.cc:134:opt_pmux$1508 $auto$opt_reduce.cc:134:opt_pmux$1506 $auto$opt_reduce.cc:134:opt_pmux$1504 $auto$opt_reduce.cc:134:opt_pmux$1502 $auto$opt_reduce.cc:134:opt_pmux$1500 $verific$n1897$50 }
  Optimizing cells in module \gost89_ecb.
Performed a total of 1 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Removing never-active async load on $verific$round_num_reg$gost89_ecb.v:45$853 ($aldff) from module gost89_ecb.
Removing never-active async load on $verific$round_key_reg$gost89_ecb.v:118$893 ($aldff) from module gost89_ecb.
Removing never-active async load on $verific$out_reg$gost89_ecb.v:45$854 ($aldff) from module gost89_ecb.
Removing never-active async load on $verific$n2_reg$gost89_ecb.v:45$851 ($aldff) from module gost89_ecb.
Removing never-active async load on $verific$n1_reg$gost89_ecb.v:45$850 ($aldff) from module gost89_ecb.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_ecb..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~10 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_ecb.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

3.11.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_ecb..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~10 debug messages>

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_ecb.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $verific$round_key_reg$gost89_ecb.v:118$893 ($dff) from module gost89_ecb (D = $verific$n3053$139, Q = \round_key).
Adding EN signal on $verific$out_reg$gost89_ecb.v:45$854 ($dff) from module gost89_ecb (D = { \n1 \rnd.out1 }, Q = \out).

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..
Removed 2 unused cells and 2 unused wires.
<suppressed ~3 debug messages>

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

3.13.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_ecb..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~9 debug messages>

yosys> opt_reduce

3.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_ecb.
Performed a total of 0 changes.

yosys> opt_merge

3.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..

yosys> opt_expr

3.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

3.13.16. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 5 bits (of 6) from port B of cell gost89_ecb.$verific$add_22$gost89_ecb.v:34$833 ($add).
Removed top 5 bits (of 6) from port A of cell gost89_ecb.$verific$LessThan_25$gost89_ecb.v:35$836 ($lt).
Removed top 5 bits (of 6) from port B of cell gost89_ecb.$verific$equal_82$gost89_ecb.v:51$856 ($eq).
Removed top 4 bits (of 6) from port B of cell gost89_ecb.$verific$equal_83$gost89_ecb.v:52$857 ($eq).
Removed top 4 bits (of 6) from port B of cell gost89_ecb.$verific$equal_84$gost89_ecb.v:53$858 ($eq).
Removed top 3 bits (of 6) from port B of cell gost89_ecb.$verific$equal_85$gost89_ecb.v:54$859 ($eq).
Removed top 3 bits (of 6) from port B of cell gost89_ecb.$verific$equal_86$gost89_ecb.v:55$860 ($eq).
Removed top 3 bits (of 6) from port B of cell gost89_ecb.$verific$equal_87$gost89_ecb.v:56$861 ($eq).
Removed top 3 bits (of 6) from port B of cell gost89_ecb.$verific$equal_88$gost89_ecb.v:57$862 ($eq).
Removed top 2 bits (of 6) from port B of cell gost89_ecb.$verific$equal_89$gost89_ecb.v:58$863 ($eq).
Removed top 2 bits (of 6) from port B of cell gost89_ecb.$verific$equal_90$gost89_ecb.v:59$864 ($eq).
Removed top 2 bits (of 6) from port B of cell gost89_ecb.$verific$equal_91$gost89_ecb.v:60$865 ($eq).
Removed top 2 bits (of 6) from port B of cell gost89_ecb.$verific$equal_92$gost89_ecb.v:61$866 ($eq).
Removed top 2 bits (of 6) from port B of cell gost89_ecb.$verific$equal_93$gost89_ecb.v:62$867 ($eq).
Removed top 2 bits (of 6) from port B of cell gost89_ecb.$verific$equal_94$gost89_ecb.v:63$868 ($eq).
Removed top 2 bits (of 6) from port B of cell gost89_ecb.$verific$equal_95$gost89_ecb.v:64$869 ($eq).
Removed top 2 bits (of 6) from port B of cell gost89_ecb.$verific$equal_96$gost89_ecb.v:65$870 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_ecb.$verific$equal_97$gost89_ecb.v:66$871 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_ecb.$verific$equal_98$gost89_ecb.v:67$872 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_ecb.$verific$equal_99$gost89_ecb.v:68$873 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_ecb.$verific$equal_100$gost89_ecb.v:69$874 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_ecb.$verific$equal_101$gost89_ecb.v:70$875 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_ecb.$verific$equal_102$gost89_ecb.v:71$876 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_ecb.$verific$equal_103$gost89_ecb.v:72$877 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_ecb.$verific$equal_104$gost89_ecb.v:73$878 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_ecb.$verific$equal_105$gost89_ecb.v:74$879 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_ecb.$verific$equal_106$gost89_ecb.v:75$880 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_ecb.$verific$equal_107$gost89_ecb.v:76$881 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_ecb.$verific$equal_108$gost89_ecb.v:77$882 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_ecb.$verific$equal_109$gost89_ecb.v:78$883 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_ecb.$verific$equal_110$gost89_ecb.v:79$884 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_ecb.$verific$equal_111$gost89_ecb.v:80$885 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_ecb.$verific$equal_112$gost89_ecb.v:81$886 ($eq).

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..
Removed 2 unused cells and 4 unused wires.
<suppressed ~3 debug messages>

yosys> alumacc

3.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module gost89_ecb:
  creating $macc model for $flatten\rnd.$verific$add_3$gost89_round.v:12$900 ($add).
  creating $macc model for $verific$add_22$gost89_ecb.v:34$833 ($add).
  creating $alu model for $macc $verific$add_22$gost89_ecb.v:34$833.
  creating $alu model for $macc $flatten\rnd.$verific$add_3$gost89_round.v:12$900.
  creating $alu model for $verific$LessThan_21$gost89_ecb.v:33$832 ($lt): new $alu
  creating $alu model for $verific$LessThan_25$gost89_ecb.v:35$836 ($lt): new $alu
  creating $alu model for $verific$equal_32$gost89_ecb.v:39$842 ($eq): merged with $verific$LessThan_21$gost89_ecb.v:33$832.
  creating $alu cell for $verific$LessThan_25$gost89_ecb.v:35$836: $auto$alumacc.cc:485:replace_alu$1595
  creating $alu cell for $verific$LessThan_21$gost89_ecb.v:33$832, $verific$equal_32$gost89_ecb.v:39$842: $auto$alumacc.cc:485:replace_alu$1600
  creating $alu cell for $flatten\rnd.$verific$add_3$gost89_round.v:12$900: $auto$alumacc.cc:485:replace_alu$1611
  creating $alu cell for $verific$add_22$gost89_ecb.v:34$833: $auto$alumacc.cc:485:replace_alu$1614
  created 4 $alu and 0 $macc cells.

yosys> opt

3.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.
<suppressed ~2 debug messages>

yosys> opt_merge -nomux

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_ecb..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~9 debug messages>

yosys> opt_reduce

3.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_ecb.
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$1563: { $auto$rtlil.cc:2398:Or$1550 $verific$n1895$48 $verific$n1894$47 $verific$n1867$20 $verific$n1866$19 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$1589: { $auto$rtlil.cc:2398:Or$1550 $auto$rtlil.cc:2398:Or$1560 $verific$n1895$48 $verific$n1894$47 $verific$n1891$44 $verific$n1890$43 $verific$n1889$42 $verific$n1872$25 $verific$n1871$24 $verific$n1870$23 $verific$n1867$20 $verific$n1866$19 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$1585: { $auto$rtlil.cc:2398:Or$1572 $verific$n1886$39 $verific$n1885$38 $verific$n1878$31 $verific$n1877$30 }
    New input vector for $reduce_and cell $auto$opt_dff.cc:220:make_patterns_logic$1540: { $auto$alumacc.cc:501:replace_alu$1601 $verific$n237$11 }
  Optimizing cells in module \gost89_ecb.
Performed a total of 4 changes.

yosys> opt_merge

3.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..
Removed 3 unused cells and 6 unused wires.
<suppressed ~4 debug messages>

yosys> opt_expr

3.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

3.19.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_ecb..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~9 debug messages>

yosys> opt_reduce

3.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_ecb.
Performed a total of 0 changes.

yosys> opt_merge

3.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..

yosys> opt_expr

3.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

3.19.16. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.20. Printing statistics.

=== gost89_ecb ===

   Number of wires:                159
   Number of wire bits:           3906
   Number of public wires:          48
   Number of public wire bits:    2380
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                119
     $alu                            4
     $and                            3
     $bmux                           8
     $dff                            4
     $dffe                           2
     $eq                            31
     $logic_not                      1
     $mux                           32
     $ne                             2
     $not                            6
     $or                             5
     $reduce_and                     3
     $reduce_or                     17
     $xor                            1


yosys> memory -nomap

3.21. Executing MEMORY pass.

yosys> opt_mem

3.21.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.21.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.21.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.21.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.21.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.21.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..

yosys> memory_share

3.21.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.21.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.21.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..

yosys> memory_collect

3.21.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.22. Printing statistics.

=== gost89_ecb ===

   Number of wires:                159
   Number of wire bits:           3906
   Number of public wires:          48
   Number of public wire bits:    2380
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                119
     $alu                            4
     $and                            3
     $bmux                           8
     $dff                            4
     $dffe                           2
     $eq                            31
     $logic_not                      1
     $mux                           32
     $ne                             2
     $not                            6
     $or                             5
     $reduce_and                     3
     $reduce_or                     17
     $xor                            1


yosys> opt_clean

3.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..

yosys> stat

3.24. Printing statistics.

=== gost89_ecb ===

   Number of wires:                159
   Number of wire bits:           3906
   Number of public wires:          48
   Number of public wire bits:    2380
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                119
     $alu                            4
     $and                            3
     $bmux                           8
     $dff                            4
     $dffe                           2
     $eq                            31
     $logic_not                      1
     $mux                           32
     $ne                             2
     $not                            6
     $or                             5
     $reduce_and                     3
     $reduce_or                     17
     $xor                            1


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.25. Executing TECHMAP pass (map to technology primitives).

3.25.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.25.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.25.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $not.
Using template $paramod$32efbfac1c4dc57230cf86180788fdfd12e3b511\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $and.
Using template $paramod$00298f3f8094950cb9a5ff2fda48d0d8bde8806c\_90_alu for cells of type $alu.
Using template $paramod$be80489e44a49c29884f59fd81c31ed03229cfc1\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $bmux.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000110 for cells of type $lcu.
No more expansions possible.
<suppressed ~610 debug messages>

yosys> stat

3.26. Printing statistics.

=== gost89_ecb ===

   Number of wires:                521
   Number of wire bits:           8945
   Number of public wires:          48
   Number of public wire bits:    2380
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2771
     $_AND_                         63
     $_DFFE_PP_                     96
     $_DFF_P_                       71
     $_MUX_                       1872
     $_NOT_                         88
     $_OR_                         254
     $_XOR_                        295
     adder_carry                    32


yosys> opt

3.27. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.
<suppressed ~319 debug messages>

yosys> opt_merge -nomux

3.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
<suppressed ~1407 debug messages>
Removed a total of 469 cells.

yosys> opt_muxtree

3.27.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_ecb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_ecb.
Performed a total of 0 changes.

yosys> opt_merge

3.27.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..
Removed 43 unused cells and 358 unused wires.
<suppressed ~44 debug messages>

yosys> opt_expr

3.27.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

3.27.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.27.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_ecb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_ecb.
Performed a total of 0 changes.

yosys> opt_merge

3.27.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..

yosys> opt_expr

3.27.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

3.27.16. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.
<suppressed ~98 debug messages>

yosys> opt_merge

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_dff

3.28.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

3.28.5. Finished fast OPT passes.

yosys> memory_map

3.29. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.30. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

yosys> opt_merge -nomux

3.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_ecb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_ecb.
Performed a total of 0 changes.

yosys> opt_merge

3.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_share

3.30.6. Executing OPT_SHARE pass.

yosys> opt_dff

3.30.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..

yosys> opt_expr -full

3.30.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

3.30.10. Finished OPT passes. (There is nothing left to do.)

yosys> techmap -map +/techmap.v

3.31. Executing TECHMAP pass (map to technology primitives).

3.31.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.31.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> opt -sat

3.32. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

yosys> opt_merge -nomux

3.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.32.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_ecb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.32.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_ecb.
Performed a total of 0 changes.

yosys> opt_merge

3.32.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.32.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.32.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..

yosys> opt_expr

3.32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

3.32.9. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

3.33. Executing ABC pass (technology mapping using ABC).

3.33.1. Summary of detected clock domains:
  1046 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$1536, arst={ }, srst={ }
  582 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$1539, arst={ }, srst={ }
  367 cells in clk=\clk, en={ }, arst={ }, srst={ }

3.33.2. Extracting gate netlist of module `\gost89_ecb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1536
Extracted 1046 gates and 1347 wires to a netlist network with 301 inputs and 33 outputs.

3.33.2.1. Executing ABC.

3.33.3. Extracting gate netlist of module `\gost89_ecb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1539
Extracted 582 gates and 1197 wires to a netlist network with 615 inputs and 97 outputs.

3.33.3.1. Executing ABC.

3.33.4. Extracting gate netlist of module `\gost89_ecb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 335 gates and 436 wires to a netlist network with 100 inputs and 80 outputs.

3.33.4.1. Executing ABC.

yosys> abc -dff

3.34. Executing ABC pass (technology mapping using ABC).

3.34.1. Summary of detected clock domains:
  1589 cells in clk=\clk, en=$abc$5079$auto$opt_dff.cc:219:make_patterns_logic$1536, arst={ }, srst={ }
  99 cells in clk=\clk, en=$abc$6669$auto$opt_dff.cc:219:make_patterns_logic$1539, arst={ }, srst={ }
  990 cells in clk=\clk, en={ }, arst={ }, srst={ }

3.34.2. Extracting gate netlist of module `\gost89_ecb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5079$auto$opt_dff.cc:219:make_patterns_logic$1536
Extracted 1589 gates and 1890 wires to a netlist network with 301 inputs and 33 outputs.

3.34.2.1. Executing ABC.

3.34.3. Extracting gate netlist of module `\gost89_ecb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$6669$auto$opt_dff.cc:219:make_patterns_logic$1539
Extracted 99 gates and 199 wires to a netlist network with 100 inputs and 65 outputs.

3.34.3.1. Executing ABC.

3.34.4. Extracting gate netlist of module `\gost89_ecb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 958 gates and 1569 wires to a netlist network with 611 inputs and 111 outputs.

3.34.4.1. Executing ABC.

yosys> abc -dff

3.35. Executing ABC pass (technology mapping using ABC).

3.35.1. Summary of detected clock domains:
  1642 cells in clk=\clk, en=$abc$7890$abc$5079$auto$opt_dff.cc:219:make_patterns_logic$1536, arst={ }, srst={ }
  108 cells in clk=\clk, en=$abc$9533$abc$6669$auto$opt_dff.cc:219:make_patterns_logic$1539, arst={ }, srst={ }
  1020 cells in clk=\clk, en={ }, arst={ }, srst={ }

3.35.2. Extracting gate netlist of module `\gost89_ecb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$7890$abc$5079$auto$opt_dff.cc:219:make_patterns_logic$1536
Extracted 1642 gates and 1943 wires to a netlist network with 301 inputs and 33 outputs.

3.35.2.1. Executing ABC.

3.35.3. Extracting gate netlist of module `\gost89_ecb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$9533$abc$6669$auto$opt_dff.cc:219:make_patterns_logic$1539
Extracted 108 gates and 208 wires to a netlist network with 100 inputs and 65 outputs.

3.35.3.1. Executing ABC.

3.35.4. Extracting gate netlist of module `\gost89_ecb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 988 gates and 1599 wires to a netlist network with 611 inputs and 111 outputs.

3.35.4.1. Executing ABC.

yosys> abc -dff

3.36. Executing ABC pass (technology mapping using ABC).

3.36.1. Summary of detected clock domains:
  1623 cells in clk=\clk, en=$abc$10792$abc$7890$abc$5079$auto$opt_dff.cc:219:make_patterns_logic$1536, arst={ }, srst={ }
  100 cells in clk=\clk, en=$abc$12416$abc$9533$abc$6669$auto$opt_dff.cc:219:make_patterns_logic$1539, arst={ }, srst={ }
  998 cells in clk=\clk, en={ }, arst={ }, srst={ }

3.36.2. Extracting gate netlist of module `\gost89_ecb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$10792$abc$7890$abc$5079$auto$opt_dff.cc:219:make_patterns_logic$1536
Extracted 1623 gates and 1924 wires to a netlist network with 301 inputs and 33 outputs.

3.36.2.1. Executing ABC.

3.36.3. Extracting gate netlist of module `\gost89_ecb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$12416$abc$9533$abc$6669$auto$opt_dff.cc:219:make_patterns_logic$1539
Extracted 100 gates and 200 wires to a netlist network with 100 inputs and 65 outputs.

3.36.3.1. Executing ABC.

3.36.4. Extracting gate netlist of module `\gost89_ecb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 966 gates and 1577 wires to a netlist network with 611 inputs and 111 outputs.

3.36.4.1. Executing ABC.

yosys> opt_ffinv

3.37. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt -sat

3.38. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.38.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.
<suppressed ~25 debug messages>

yosys> opt_merge -nomux

3.38.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
<suppressed ~102 debug messages>
Removed a total of 34 cells.

yosys> opt_muxtree

3.38.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_ecb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.38.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_ecb.
Performed a total of 0 changes.

yosys> opt_merge

3.38.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.38.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $abc$15554$auto$blifparse.cc:362:parse_blif$15588 ($_DFF_P_) from module gost89_ecb (D = $abc$15554$li33_li33, Q = $abc$15554$lo33).
Adding EN signal on $abc$15554$auto$blifparse.cc:362:parse_blif$15587 ($_DFF_P_) from module gost89_ecb (D = $abc$15554$li32_li32, Q = $abc$15554$lo32).
Adding EN signal on $abc$15554$auto$blifparse.cc:362:parse_blif$15586 ($_DFF_P_) from module gost89_ecb (D = $abc$15554$li31_li31, Q = $abc$15554$lo31).
Adding EN signal on $abc$15554$auto$blifparse.cc:362:parse_blif$15585 ($_DFF_P_) from module gost89_ecb (D = $abc$15554$li30_li30, Q = $abc$15554$lo30).
Adding EN signal on $abc$15554$auto$blifparse.cc:362:parse_blif$15584 ($_DFF_P_) from module gost89_ecb (D = $abc$15554$li29_li29, Q = $abc$15554$lo29).
Adding EN signal on $abc$15554$auto$blifparse.cc:362:parse_blif$15583 ($_DFF_P_) from module gost89_ecb (D = $abc$15554$li28_li28, Q = $abc$15554$lo28).
Adding EN signal on $abc$15554$auto$blifparse.cc:362:parse_blif$15582 ($_DFF_P_) from module gost89_ecb (D = $abc$15554$li27_li27, Q = $abc$15554$lo27).
Adding EN signal on $abc$15554$auto$blifparse.cc:362:parse_blif$15581 ($_DFF_P_) from module gost89_ecb (D = $abc$15554$li26_li26, Q = $abc$15554$lo26).
Adding EN signal on $abc$15554$auto$blifparse.cc:362:parse_blif$15580 ($_DFF_P_) from module gost89_ecb (D = $abc$15554$li25_li25, Q = $abc$15554$lo25).
Adding EN signal on $abc$15554$auto$blifparse.cc:362:parse_blif$15579 ($_DFF_P_) from module gost89_ecb (D = $abc$15554$li24_li24, Q = $abc$15554$lo24).
Adding EN signal on $abc$15554$auto$blifparse.cc:362:parse_blif$15578 ($_DFF_P_) from module gost89_ecb (D = $abc$15554$li23_li23, Q = $abc$15554$lo23).
Adding EN signal on $abc$15554$auto$blifparse.cc:362:parse_blif$15577 ($_DFF_P_) from module gost89_ecb (D = $abc$15554$li22_li22, Q = $abc$15554$lo22).
Adding EN signal on $abc$15554$auto$blifparse.cc:362:parse_blif$15576 ($_DFF_P_) from module gost89_ecb (D = $abc$15554$li21_li21, Q = $abc$15554$lo21).
Adding EN signal on $abc$15554$auto$blifparse.cc:362:parse_blif$15575 ($_DFF_P_) from module gost89_ecb (D = $abc$15554$li20_li20, Q = $abc$15554$lo20).
Adding EN signal on $abc$15554$auto$blifparse.cc:362:parse_blif$15574 ($_DFF_P_) from module gost89_ecb (D = $abc$15554$li19_li19, Q = $abc$15554$lo19).
Adding EN signal on $abc$15554$auto$blifparse.cc:362:parse_blif$15573 ($_DFF_P_) from module gost89_ecb (D = $abc$15554$li18_li18, Q = $abc$15554$lo18).
Adding EN signal on $abc$15554$auto$blifparse.cc:362:parse_blif$15572 ($_DFF_P_) from module gost89_ecb (D = $abc$15554$li17_li17, Q = $abc$15554$lo17).
Adding EN signal on $abc$15554$auto$blifparse.cc:362:parse_blif$15571 ($_DFF_P_) from module gost89_ecb (D = $abc$15554$li16_li16, Q = $abc$15554$lo16).
Adding EN signal on $abc$15554$auto$blifparse.cc:362:parse_blif$15570 ($_DFF_P_) from module gost89_ecb (D = $abc$15554$li15_li15, Q = $abc$15554$lo15).
Adding EN signal on $abc$15554$auto$blifparse.cc:362:parse_blif$15569 ($_DFF_P_) from module gost89_ecb (D = $abc$15554$li14_li14, Q = $abc$15554$lo14).
Adding EN signal on $abc$15554$auto$blifparse.cc:362:parse_blif$15568 ($_DFF_P_) from module gost89_ecb (D = $abc$15554$li13_li13, Q = $abc$15554$lo13).
Adding EN signal on $abc$15554$auto$blifparse.cc:362:parse_blif$15567 ($_DFF_P_) from module gost89_ecb (D = $abc$15554$li12_li12, Q = $abc$15554$lo12).
Adding EN signal on $abc$15554$auto$blifparse.cc:362:parse_blif$15566 ($_DFF_P_) from module gost89_ecb (D = $abc$15554$li11_li11, Q = $abc$15554$lo11).
Adding EN signal on $abc$15554$auto$blifparse.cc:362:parse_blif$15565 ($_DFF_P_) from module gost89_ecb (D = $abc$15554$li10_li10, Q = $abc$15554$lo10).
Adding EN signal on $abc$15554$auto$blifparse.cc:362:parse_blif$15564 ($_DFF_P_) from module gost89_ecb (D = $abc$15554$li09_li09, Q = $abc$15554$lo09).
Adding EN signal on $abc$15554$auto$blifparse.cc:362:parse_blif$15563 ($_DFF_P_) from module gost89_ecb (D = $abc$15554$li08_li08, Q = $abc$15554$lo08).
Adding EN signal on $abc$15554$auto$blifparse.cc:362:parse_blif$15562 ($_DFF_P_) from module gost89_ecb (D = $abc$15554$li07_li07, Q = $abc$15554$lo07).
Adding EN signal on $abc$15554$auto$blifparse.cc:362:parse_blif$15561 ($_DFF_P_) from module gost89_ecb (D = $abc$15554$li06_li06, Q = $abc$15554$lo06).
Adding EN signal on $abc$15554$auto$blifparse.cc:362:parse_blif$15560 ($_DFF_P_) from module gost89_ecb (D = $abc$15554$li05_li05, Q = $abc$15554$lo05).
Adding EN signal on $abc$15554$auto$blifparse.cc:362:parse_blif$15559 ($_DFF_P_) from module gost89_ecb (D = $abc$15554$li04_li04, Q = $abc$15554$lo04).
Adding EN signal on $abc$15554$auto$blifparse.cc:362:parse_blif$15558 ($_DFF_P_) from module gost89_ecb (D = $abc$15554$li03_li03, Q = $abc$15554$lo03).
Adding EN signal on $abc$15554$auto$blifparse.cc:362:parse_blif$15557 ($_DFF_P_) from module gost89_ecb (D = $abc$15554$li02_li02, Q = $abc$15554$lo02).
Adding EN signal on $abc$15554$auto$blifparse.cc:362:parse_blif$15556 ($_DFF_P_) from module gost89_ecb (D = $abc$15554$li01_li01, Q = $abc$15554$lo01).
Adding EN signal on $abc$15554$auto$blifparse.cc:362:parse_blif$15555 ($_DFF_P_) from module gost89_ecb (D = $abc$15554$li00_li00, Q = $abc$15554$lo00).
Adding EN signal on $abc$15554$auto$blifparse.cc:362:parse_blif$15618 ($_DFF_P_) from module gost89_ecb (D = $abc$15554$li63_li63, Q = $abc$15554$lo63).
Adding EN signal on $abc$15554$auto$blifparse.cc:362:parse_blif$15617 ($_DFF_P_) from module gost89_ecb (D = $abc$15554$li62_li62, Q = $abc$15554$lo62).
Adding EN signal on $abc$15554$auto$blifparse.cc:362:parse_blif$15616 ($_DFF_P_) from module gost89_ecb (D = $abc$15554$li61_li61, Q = $abc$15554$lo61).
Adding EN signal on $abc$15554$auto$blifparse.cc:362:parse_blif$15615 ($_DFF_P_) from module gost89_ecb (D = $abc$15554$li60_li60, Q = $abc$15554$lo60).
Adding EN signal on $abc$15554$auto$blifparse.cc:362:parse_blif$15614 ($_DFF_P_) from module gost89_ecb (D = $abc$15554$li59_li59, Q = $abc$15554$lo59).
Adding EN signal on $abc$15554$auto$blifparse.cc:362:parse_blif$15613 ($_DFF_P_) from module gost89_ecb (D = $abc$15554$li58_li58, Q = $abc$15554$lo58).
Adding EN signal on $abc$15554$auto$blifparse.cc:362:parse_blif$15612 ($_DFF_P_) from module gost89_ecb (D = $abc$15554$li57_li57, Q = $abc$15554$lo57).
Adding EN signal on $abc$15554$auto$blifparse.cc:362:parse_blif$15611 ($_DFF_P_) from module gost89_ecb (D = $abc$15554$li56_li56, Q = $abc$15554$lo56).
Adding EN signal on $abc$15554$auto$blifparse.cc:362:parse_blif$15610 ($_DFF_P_) from module gost89_ecb (D = $abc$15554$li55_li55, Q = $abc$15554$lo55).
Adding EN signal on $abc$15554$auto$blifparse.cc:362:parse_blif$15609 ($_DFF_P_) from module gost89_ecb (D = $abc$15554$li54_li54, Q = $abc$15554$lo54).
Adding EN signal on $abc$15554$auto$blifparse.cc:362:parse_blif$15608 ($_DFF_P_) from module gost89_ecb (D = $abc$15554$li53_li53, Q = $abc$15554$lo53).
Adding EN signal on $abc$15554$auto$blifparse.cc:362:parse_blif$15607 ($_DFF_P_) from module gost89_ecb (D = $abc$15554$li52_li52, Q = $abc$15554$lo52).
Adding EN signal on $abc$15554$auto$blifparse.cc:362:parse_blif$15606 ($_DFF_P_) from module gost89_ecb (D = $abc$15554$li51_li51, Q = $abc$15554$lo51).
Adding EN signal on $abc$15554$auto$blifparse.cc:362:parse_blif$15605 ($_DFF_P_) from module gost89_ecb (D = $abc$15554$li50_li50, Q = $abc$15554$lo50).
Adding EN signal on $abc$15554$auto$blifparse.cc:362:parse_blif$15604 ($_DFF_P_) from module gost89_ecb (D = $abc$15554$li49_li49, Q = $abc$15554$lo49).
Adding EN signal on $abc$15554$auto$blifparse.cc:362:parse_blif$15603 ($_DFF_P_) from module gost89_ecb (D = $abc$15554$li48_li48, Q = $abc$15554$lo48).
Adding EN signal on $abc$15554$auto$blifparse.cc:362:parse_blif$15602 ($_DFF_P_) from module gost89_ecb (D = $abc$15554$li47_li47, Q = $abc$15554$lo47).
Adding EN signal on $abc$15554$auto$blifparse.cc:362:parse_blif$15601 ($_DFF_P_) from module gost89_ecb (D = $abc$15554$li46_li46, Q = $abc$15554$lo46).
Adding EN signal on $abc$15554$auto$blifparse.cc:362:parse_blif$15600 ($_DFF_P_) from module gost89_ecb (D = $abc$15554$li45_li45, Q = $abc$15554$lo45).
Adding EN signal on $abc$15554$auto$blifparse.cc:362:parse_blif$15599 ($_DFF_P_) from module gost89_ecb (D = $abc$15554$li44_li44, Q = $abc$15554$lo44).
Adding EN signal on $abc$15554$auto$blifparse.cc:362:parse_blif$15598 ($_DFF_P_) from module gost89_ecb (D = $abc$15554$li43_li43, Q = $abc$15554$lo43).
Adding EN signal on $abc$15554$auto$blifparse.cc:362:parse_blif$15597 ($_DFF_P_) from module gost89_ecb (D = $abc$15554$li42_li42, Q = $abc$15554$lo42).
Adding EN signal on $abc$15554$auto$blifparse.cc:362:parse_blif$15596 ($_DFF_P_) from module gost89_ecb (D = $abc$15554$li41_li41, Q = $abc$15554$lo41).
Adding EN signal on $abc$15554$auto$blifparse.cc:362:parse_blif$15595 ($_DFF_P_) from module gost89_ecb (D = $abc$15554$li40_li40, Q = $abc$15554$lo40).
Adding EN signal on $abc$15554$auto$blifparse.cc:362:parse_blif$15594 ($_DFF_P_) from module gost89_ecb (D = $abc$15554$li39_li39, Q = $abc$15554$lo39).
Adding EN signal on $abc$15554$auto$blifparse.cc:362:parse_blif$15593 ($_DFF_P_) from module gost89_ecb (D = $abc$15554$li38_li38, Q = $abc$15554$lo38).
Adding EN signal on $abc$15554$auto$blifparse.cc:362:parse_blif$15592 ($_DFF_P_) from module gost89_ecb (D = $abc$15554$li37_li37, Q = $abc$15554$lo37).
Adding EN signal on $abc$15554$auto$blifparse.cc:362:parse_blif$15591 ($_DFF_P_) from module gost89_ecb (D = $abc$15554$li36_li36, Q = $abc$15554$lo36).
Adding EN signal on $abc$15554$auto$blifparse.cc:362:parse_blif$15590 ($_DFF_P_) from module gost89_ecb (D = $abc$15554$li35_li35, Q = $abc$15554$lo35).
Adding EN signal on $abc$15554$auto$blifparse.cc:362:parse_blif$15589 ($_DFF_P_) from module gost89_ecb (D = $abc$15554$li34_li34, Q = $abc$15554$lo34).

yosys> opt_clean

3.38.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..
Removed 2 unused cells and 13244 unused wires.
<suppressed ~15 debug messages>

yosys> opt_expr

3.38.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.
<suppressed ~128 debug messages>

3.38.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.38.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_ecb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.38.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_ecb.
Performed a total of 0 changes.

yosys> opt_merge

3.38.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
<suppressed ~378 debug messages>
Removed a total of 126 cells.

yosys> opt_dff -sat

3.38.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.38.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..
Removed 0 unused cells and 190 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.38.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

3.38.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.38.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_ecb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.38.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_ecb.
Performed a total of 0 changes.

yosys> opt_merge

3.38.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.38.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.38.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..

yosys> opt_expr

3.38.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

3.38.23. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /home/users/temp_dir/yosys_OxzEt0/abc_tmp_1.scr

3.39. Executing ABC pass (technology mapping using ABC).

3.39.1. Extracting gate netlist of module `\gost89_ecb' to `<abc-temp-dir>/input.blif'..
Extracted 2557 gates and 3527 wires to a netlist network with 969 inputs and 168 outputs.

3.39.1.1. Executing ABC.
DE:   #PIs = 969  #Luts =   742  Max Lvl =   7  Avg Lvl =   3.43  [   0.34 sec. at Pass 0]
DE:   #PIs = 969  #Luts =   630  Max Lvl =   6  Avg Lvl =   3.30  [   8.05 sec. at Pass 1]
DE:   #PIs = 969  #Luts =   624  Max Lvl =   6  Avg Lvl =   3.25  [   1.56 sec. at Pass 2]
DE:   #PIs = 969  #Luts =   612  Max Lvl =   6  Avg Lvl =   3.19  [   4.19 sec. at Pass 3]
DE:   #PIs = 969  #Luts =   612  Max Lvl =   6  Avg Lvl =   3.19  [   2.91 sec. at Pass 4]
DE:   #PIs = 969  #Luts =   612  Max Lvl =   6  Avg Lvl =   3.19  [   3.97 sec. at Pass 5]
DE:   #PIs = 969  #Luts =   612  Max Lvl =   6  Avg Lvl =   3.19  [   2.81 sec. at Pass 6]
DE:   #PIs = 969  #Luts =   612  Max Lvl =   6  Avg Lvl =   3.19  [   1.05 sec. at Pass 7]

yosys> opt

3.40. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.40.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

yosys> opt_merge -nomux

3.40.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.40.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_ecb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.40.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_ecb.
Performed a total of 0 changes.

yosys> opt_merge

3.40.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_dff

3.40.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.40.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..
Removed 0 unused cells and 3521 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.40.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

3.40.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.40.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_ecb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.40.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_ecb.
Performed a total of 0 changes.

yosys> opt_merge

3.40.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_dff

3.40.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.40.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..

yosys> opt_expr

3.40.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

3.40.16. Finished OPT passes. (There is nothing left to do.)

yosys> opt_ffinv

3.41. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> stat

3.42. Printing statistics.

=== gost89_ecb ===

   Number of wires:                659
   Number of wire bits:           2932
   Number of public wires:          36
   Number of public wire bits:    2246
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                811
     $_DFFE_PP_                    160
     $_DFF_P_                        7
     $lut                          612
     adder_carry                    32


yosys> shregmap -minlen 8 -maxlen 20

3.43. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.44. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.45. Printing statistics.

=== gost89_ecb ===

   Number of wires:                659
   Number of wire bits:           2932
   Number of public wires:          36
   Number of public wire bits:    2246
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                811
     $_DFFE_PP0P_                  160
     $_DFF_P_                        7
     $lut                          612
     adder_carry                    32


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.46. Executing TECHMAP pass (map to technology primitives).

3.46.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.46.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.46.3. Continuing TECHMAP pass.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~1075 debug messages>

yosys> opt_expr -mux_undef

3.47. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.
<suppressed ~19773 debug messages>

yosys> simplemap

3.48. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.49. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

yosys> opt_merge

3.50. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
<suppressed ~12537 debug messages>
Removed a total of 4179 cells.

yosys> opt_dff -nodffe -nosdff

3.51. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.52. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..
Removed 0 unused cells and 2238 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.53. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.53.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.
<suppressed ~1519 debug messages>

yosys> opt_merge -nomux

3.53.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.53.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_ecb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.53.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_ecb.
Performed a total of 0 changes.

yosys> opt_merge

3.53.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.53.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.53.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..
Removed 0 unused cells and 90 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.53.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

3.53.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.53.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_ecb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.53.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_ecb.
Performed a total of 0 changes.

yosys> opt_merge

3.53.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.53.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.53.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..

yosys> opt_expr

3.53.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

3.53.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /home/users/temp_dir/yosys_OxzEt0/abc_tmp_2.scr

3.54. Executing ABC pass (technology mapping using ABC).

3.54.1. Extracting gate netlist of module `\gost89_ecb' to `<abc-temp-dir>/input.blif'..
Extracted 2905 gates and 3876 wires to a netlist network with 969 inputs and 168 outputs.

3.54.1.1. Executing ABC.
DE:   #PIs = 969  #Luts =   616  Max Lvl =   7  Avg Lvl =   3.20  [   0.33 sec. at Pass 0]
DE:   #PIs = 969  #Luts =   616  Max Lvl =   5  Avg Lvl =   3.12  [   8.64 sec. at Pass 1]
DE:   #PIs = 969  #Luts =   616  Max Lvl =   5  Avg Lvl =   3.12  [   2.17 sec. at Pass 2]
DE:   #PIs = 969  #Luts =   615  Max Lvl =   7  Avg Lvl =   3.20  [   2.91 sec. at Pass 3]
DE:   #PIs = 969  #Luts =   611  Max Lvl =   7  Avg Lvl =   3.18  [   2.07 sec. at Pass 4]
DE:   #PIs = 969  #Luts =   611  Max Lvl =   7  Avg Lvl =   3.18  [   2.94 sec. at Pass 5]
DE:   #PIs = 969  #Luts =   610  Max Lvl =   6  Avg Lvl =   3.14  [   1.68 sec. at Pass 6]
DE:   #PIs = 969  #Luts =   610  Max Lvl =   6  Avg Lvl =   3.14  [   2.19 sec. at Pass 7]
DE:   #PIs = 969  #Luts =   609  Max Lvl =   6  Avg Lvl =   3.14  [   2.66 sec. at Pass 8]
DE:   #PIs = 969  #Luts =   609  Max Lvl =   6  Avg Lvl =   3.14  [   3.17 sec. at Pass 9]
DE:   #PIs = 969  #Luts =   609  Max Lvl =   6  Avg Lvl =   3.14  [   2.96 sec. at Pass 10]
DE:   #PIs = 969  #Luts =   609  Max Lvl =   6  Avg Lvl =   3.14  [   3.37 sec. at Pass 11]
DE:   #PIs = 969  #Luts =   609  Max Lvl =   6  Avg Lvl =   3.14  [   0.92 sec. at Pass 12]

yosys> opt

3.55. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.55.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

yosys> opt_merge -nomux

3.55.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.55.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_ecb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.55.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_ecb.
Performed a total of 0 changes.

yosys> opt_merge

3.55.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_dff

3.55.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.55.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..
Removed 0 unused cells and 3401 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.55.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

3.55.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.55.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_ecb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.55.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_ecb.
Performed a total of 0 changes.

yosys> opt_merge

3.55.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_ecb'.
Removed a total of 0 cells.

yosys> opt_dff

3.55.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.55.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..

yosys> opt_expr

3.55.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_ecb.

3.55.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.56. Executing HIERARCHY pass (managing design hierarchy).

3.56.1. Analyzing design hierarchy..
Top module:  \gost89_ecb

3.56.2. Analyzing design hierarchy..
Top module:  \gost89_ecb
Removed 0 unused modules.

yosys> stat

3.57. Printing statistics.

=== gost89_ecb ===

   Number of wires:                656
   Number of wire bits:           2929
   Number of public wires:          36
   Number of public wire bits:    2246
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                808
     $lut                          609
     adder_carry                    32
     dffsre                        167


yosys> opt_clean -purge

3.58. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_ecb..
Removed 0 unused cells and 17 unused wires.
<suppressed ~17 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.59. Executing Verilog backend.

yosys> bmuxmap

3.59.1. Executing BMUXMAP pass.

yosys> demuxmap

3.59.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\gost89_ecb'.

Warnings: 1 unique messages, 1 total
End of script. Logfile hash: 8c8e780f0c, CPU: user 12.07s system 0.27s, MEM: 72.91 MB peak
Yosys 0.17+76 (git sha1 ba67c2ec9, gcc 9.1.0 -fPIC -Os)
Time spent: 96% 6x abc (264 sec), 1% 36x opt_expr (4 sec), ...
real 102.41
user 249.48
sys 26.25
