
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.47
 Yosys 0.18+10 (git sha1 8217e4c48, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Apr22_SW_Release, released at Thu Apr 28 20:08:21 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k gost89_cfb_decrypt.v gost89_ecb_encrypt.v gost89_round.v gost89_sbox.v

yosys> verific -vlog2k gost89_cfb_decrypt.v gost89_ecb_encrypt.v gost89_round.v gost89_sbox.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Apr22_SW_Release, released at Thu Apr 28 20:08:21 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'gost89_cfb_decrypt.v'
VERIFIC-INFO [VERI-2561] gost89_cfb_decrypt.v:17: undeclared symbol 'reset_ecb', assumed default net type 'wire'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'gost89_ecb_encrypt.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'gost89_round.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'gost89_sbox.v'

yosys> synth_rs -top gost89_cfb_decrypt -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.57

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\RS_DSP2_MULT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_sim'.
Generating RTLIL representation for module `\dsp_t1_20x18x64'.
Generating RTLIL representation for module `\dsp_t1_10x9x32'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top gost89_cfb_decrypt

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] gost89_cfb_decrypt.v:1: compiling module 'gost89_cfb_decrypt'
VERIFIC-INFO [VERI-1018] gost89_ecb_encrypt.v:1: compiling module 'gost89_ecb_encrypt'
VERIFIC-INFO [VERI-1018] gost89_round.v:1: compiling module 'gost89_round'
VERIFIC-INFO [VERI-1018] gost89_sbox.v:1: compiling module 'gost89_sbox'
VERIFIC-WARNING [VERI-1209] gost89_ecb_encrypt.v:33: expression size 7 truncated to fit in target size 6
Importing module gost89_cfb_decrypt.
Importing module gost89_ecb_encrypt.
Importing module gost89_round.
Importing module gost89_sbox.

3.3.1. Analyzing design hierarchy..
Top module:  \gost89_cfb_decrypt
Used module:     \gost89_ecb_encrypt
Used module:         \gost89_round
Used module:             \gost89_sbox

3.3.2. Analyzing design hierarchy..
Top module:  \gost89_cfb_decrypt
Used module:     \gost89_ecb_encrypt
Used module:         \gost89_round
Used module:             \gost89_sbox
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.4.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.4.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_sbox.
Optimizing module gost89_round.
Optimizing module gost89_ecb_encrypt.
<suppressed ~3 debug messages>
Optimizing module gost89_cfb_decrypt.

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).
Deleting now unused module gost89_sbox.
Deleting now unused module gost89_round.
Deleting now unused module gost89_ecb_encrypt.
<suppressed ~10 debug messages>

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb_decrypt.

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb_decrypt..
Removed 0 unused cells and 2336 unused wires.
<suppressed ~28 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module gost89_cfb_decrypt...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb_decrypt.
<suppressed ~3 debug messages>

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb_decrypt'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb_decrypt..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~14 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb_decrypt.
    New ctrl vector for $pmux cell $flatten\ecb_encrypt.$verific$select_114$gost89_ecb_encrypt.v:80$1811: { $auto$opt_reduce.cc:134:opt_pmux$2433 $auto$opt_reduce.cc:134:opt_pmux$2431 $auto$opt_reduce.cc:134:opt_pmux$2429 $auto$opt_reduce.cc:134:opt_pmux$2427 $auto$opt_reduce.cc:134:opt_pmux$2425 $auto$opt_reduce.cc:134:opt_pmux$2423 $auto$opt_reduce.cc:134:opt_pmux$2421 $auto$opt_reduce.cc:134:opt_pmux$2419 $flatten\ecb_encrypt.$verific$n1897$1004 }
  Optimizing cells in module \gost89_cfb_decrypt.
Performed a total of 1 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb_decrypt'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Removing never-active async load on $verific$out_reg$gost89_cfb_decrypt.v:38$954 ($aldff) from module gost89_cfb_decrypt.
Removing never-active async load on $verific$in_value_reg$gost89_cfb_decrypt.v:38$953 ($aldff) from module gost89_cfb_decrypt.
Removing never-active async load on $verific$gamma_reg$gost89_cfb_decrypt.v:38$951 ($aldff) from module gost89_cfb_decrypt.
Removing never-active async load on $flatten\ecb_encrypt.$verific$round_num_reg$gost89_ecb_encrypt.v:44$1774 ($aldff) from module gost89_cfb_decrypt.
Removing never-active async load on $flatten\ecb_encrypt.$verific$round_key_reg$gost89_ecb_encrypt.v:80$1812 ($aldff) from module gost89_cfb_decrypt.
Removing never-active async load on $flatten\ecb_encrypt.$verific$out_reg$gost89_ecb_encrypt.v:44$1775 ($aldff) from module gost89_cfb_decrypt.
Removing never-active async load on $flatten\ecb_encrypt.$verific$n2_reg$gost89_ecb_encrypt.v:44$1772 ($aldff) from module gost89_cfb_decrypt.
Removing never-active async load on $flatten\ecb_encrypt.$verific$n1_reg$gost89_ecb_encrypt.v:44$1771 ($aldff) from module gost89_cfb_decrypt.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb_decrypt..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb_decrypt.
<suppressed ~6 debug messages>

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb_decrypt..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~14 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb_decrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb_decrypt'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb_decrypt..
Removed 1 unused cells and 2 unused wires.
<suppressed ~2 debug messages>

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb_decrypt.

3.11.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb_decrypt..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~14 debug messages>

yosys> opt_reduce

3.11.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb_decrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.11.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb_decrypt'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb_decrypt..

yosys> opt_expr

3.11.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb_decrypt.

3.11.23. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb_decrypt..

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb_decrypt.

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb_decrypt'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb_decrypt..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~14 debug messages>

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb_decrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb_decrypt'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $verific$out_reg$gost89_cfb_decrypt.v:38$954 ($dff) from module gost89_cfb_decrypt (D = $verific$n413$21, Q = \out).
Adding EN signal on $verific$in_value_reg$gost89_cfb_decrypt.v:38$953 ($dff) from module gost89_cfb_decrypt (D = \in, Q = \in_value).
Adding EN signal on $verific$gamma_reg$gost89_cfb_decrypt.v:38$951 ($dff) from module gost89_cfb_decrypt (D = $verific$n544$23, Q = \gamma).
Adding SRST signal on $verific$busy_reg$gost89_cfb_decrypt.v:38$952 ($dff) from module gost89_cfb_decrypt (D = $verific$n341$11, Q = \busy, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$2439 ($sdff) from module gost89_cfb_decrypt (D = $verific$n341$11, Q = \busy).
Adding EN signal on $flatten\ecb_encrypt.$verific$round_key_reg$gost89_ecb_encrypt.v:80$1812 ($dff) from module gost89_cfb_decrypt (D = $flatten\ecb_encrypt.$verific$n1898$1059, Q = \ecb_encrypt.round_key).
Adding EN signal on $flatten\ecb_encrypt.$verific$out_reg$gost89_ecb_encrypt.v:44$1775 ($dff) from module gost89_cfb_decrypt (D = { \ecb_encrypt.n1 \ecb_encrypt.out1 }, Q = \ecb_encrypt.out).

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb_decrypt..
Removed 5 unused cells and 5 unused wires.
<suppressed ~6 debug messages>

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb_decrypt.
<suppressed ~6 debug messages>

3.13.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb_decrypt..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~11 debug messages>

yosys> opt_reduce

3.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb_decrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb_decrypt'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb_decrypt..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb_decrypt.

3.13.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb_decrypt..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~11 debug messages>

yosys> opt_reduce

3.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb_decrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb_decrypt'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb_decrypt..

yosys> opt_expr

3.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb_decrypt.

3.13.23. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 6) from port B of cell gost89_cfb_decrypt.$flatten\ecb_encrypt.$verific$equal_112$gost89_ecb_encrypt.v:79$1807 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb_decrypt.$flatten\ecb_encrypt.$verific$equal_111$gost89_ecb_encrypt.v:78$1806 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb_decrypt.$flatten\ecb_encrypt.$verific$equal_110$gost89_ecb_encrypt.v:77$1805 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb_decrypt.$flatten\ecb_encrypt.$verific$equal_109$gost89_ecb_encrypt.v:76$1804 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb_decrypt.$flatten\ecb_encrypt.$verific$equal_108$gost89_ecb_encrypt.v:75$1803 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb_decrypt.$flatten\ecb_encrypt.$verific$equal_107$gost89_ecb_encrypt.v:74$1802 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb_decrypt.$flatten\ecb_encrypt.$verific$equal_106$gost89_ecb_encrypt.v:73$1801 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb_decrypt.$flatten\ecb_encrypt.$verific$equal_105$gost89_ecb_encrypt.v:72$1800 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb_decrypt.$flatten\ecb_encrypt.$verific$equal_104$gost89_ecb_encrypt.v:71$1799 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb_decrypt.$flatten\ecb_encrypt.$verific$equal_103$gost89_ecb_encrypt.v:70$1798 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb_decrypt.$flatten\ecb_encrypt.$verific$equal_102$gost89_ecb_encrypt.v:69$1797 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb_decrypt.$flatten\ecb_encrypt.$verific$equal_101$gost89_ecb_encrypt.v:68$1796 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb_decrypt.$flatten\ecb_encrypt.$verific$equal_100$gost89_ecb_encrypt.v:67$1795 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb_decrypt.$flatten\ecb_encrypt.$verific$equal_99$gost89_ecb_encrypt.v:66$1794 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb_decrypt.$flatten\ecb_encrypt.$verific$equal_98$gost89_ecb_encrypt.v:65$1793 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb_decrypt.$flatten\ecb_encrypt.$verific$equal_97$gost89_ecb_encrypt.v:64$1792 ($eq).
Removed top 2 bits (of 6) from port B of cell gost89_cfb_decrypt.$flatten\ecb_encrypt.$verific$equal_96$gost89_ecb_encrypt.v:63$1791 ($eq).
Removed top 2 bits (of 6) from port B of cell gost89_cfb_decrypt.$flatten\ecb_encrypt.$verific$equal_95$gost89_ecb_encrypt.v:62$1790 ($eq).
Removed top 2 bits (of 6) from port B of cell gost89_cfb_decrypt.$flatten\ecb_encrypt.$verific$equal_94$gost89_ecb_encrypt.v:61$1789 ($eq).
Removed top 2 bits (of 6) from port B of cell gost89_cfb_decrypt.$flatten\ecb_encrypt.$verific$equal_93$gost89_ecb_encrypt.v:60$1788 ($eq).
Removed top 2 bits (of 6) from port B of cell gost89_cfb_decrypt.$flatten\ecb_encrypt.$verific$equal_92$gost89_ecb_encrypt.v:59$1787 ($eq).
Removed top 2 bits (of 6) from port B of cell gost89_cfb_decrypt.$flatten\ecb_encrypt.$verific$equal_91$gost89_ecb_encrypt.v:58$1786 ($eq).
Removed top 2 bits (of 6) from port B of cell gost89_cfb_decrypt.$flatten\ecb_encrypt.$verific$equal_90$gost89_ecb_encrypt.v:57$1785 ($eq).
Removed top 2 bits (of 6) from port B of cell gost89_cfb_decrypt.$flatten\ecb_encrypt.$verific$equal_89$gost89_ecb_encrypt.v:56$1784 ($eq).
Removed top 3 bits (of 6) from port B of cell gost89_cfb_decrypt.$flatten\ecb_encrypt.$verific$equal_88$gost89_ecb_encrypt.v:55$1783 ($eq).
Removed top 3 bits (of 6) from port B of cell gost89_cfb_decrypt.$flatten\ecb_encrypt.$verific$equal_87$gost89_ecb_encrypt.v:54$1782 ($eq).
Removed top 3 bits (of 6) from port B of cell gost89_cfb_decrypt.$flatten\ecb_encrypt.$verific$equal_86$gost89_ecb_encrypt.v:53$1781 ($eq).
Removed top 3 bits (of 6) from port B of cell gost89_cfb_decrypt.$flatten\ecb_encrypt.$verific$equal_85$gost89_ecb_encrypt.v:52$1780 ($eq).
Removed top 4 bits (of 6) from port B of cell gost89_cfb_decrypt.$flatten\ecb_encrypt.$verific$equal_84$gost89_ecb_encrypt.v:51$1779 ($eq).
Removed top 4 bits (of 6) from port B of cell gost89_cfb_decrypt.$flatten\ecb_encrypt.$verific$equal_83$gost89_ecb_encrypt.v:50$1778 ($eq).
Removed top 5 bits (of 6) from port B of cell gost89_cfb_decrypt.$flatten\ecb_encrypt.$verific$equal_82$gost89_ecb_encrypt.v:49$1777 ($eq).
Removed top 5 bits (of 6) from port A of cell gost89_cfb_decrypt.$flatten\ecb_encrypt.$verific$LessThan_25$gost89_ecb_encrypt.v:34$1756 ($lt).
Removed top 5 bits (of 6) from port B of cell gost89_cfb_decrypt.$flatten\ecb_encrypt.$verific$add_22$gost89_ecb_encrypt.v:33$1753 ($add).

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb_decrypt..
Removed 2 unused cells and 3 unused wires.
<suppressed ~3 debug messages>

yosys> alumacc

3.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module gost89_cfb_decrypt:
  creating $macc model for $flatten\ecb_encrypt.$verific$add_22$gost89_ecb_encrypt.v:33$1753 ($add).
  creating $macc model for $flatten\ecb_encrypt.\rnd.$verific$add_3$gost89_round.v:12$1819 ($add).
  creating $alu model for $macc $flatten\ecb_encrypt.\rnd.$verific$add_3$gost89_round.v:12$1819.
  creating $alu model for $macc $flatten\ecb_encrypt.$verific$add_22$gost89_ecb_encrypt.v:33$1753.
  creating $alu model for $flatten\ecb_encrypt.$verific$LessThan_21$gost89_ecb_encrypt.v:32$1752 ($lt): new $alu
  creating $alu model for $flatten\ecb_encrypt.$verific$LessThan_25$gost89_ecb_encrypt.v:34$1756 ($lt): new $alu
  creating $alu model for $flatten\ecb_encrypt.$verific$equal_32$gost89_ecb_encrypt.v:38$1762 ($eq): merged with $flatten\ecb_encrypt.$verific$LessThan_21$gost89_ecb_encrypt.v:32$1752.
  creating $alu cell for $flatten\ecb_encrypt.$verific$LessThan_25$gost89_ecb_encrypt.v:34$1756: $auto$alumacc.cc:485:replace_alu$2481
  creating $alu cell for $flatten\ecb_encrypt.$verific$LessThan_21$gost89_ecb_encrypt.v:32$1752, $flatten\ecb_encrypt.$verific$equal_32$gost89_ecb_encrypt.v:38$1762: $auto$alumacc.cc:485:replace_alu$2486
  creating $alu cell for $flatten\ecb_encrypt.$verific$add_22$gost89_ecb_encrypt.v:33$1753: $auto$alumacc.cc:485:replace_alu$2497
  creating $alu cell for $flatten\ecb_encrypt.\rnd.$verific$add_3$gost89_round.v:12$1819: $auto$alumacc.cc:485:replace_alu$2500
  created 4 $alu and 0 $macc cells.

yosys> opt

3.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb_decrypt.
<suppressed ~2 debug messages>

yosys> opt_merge -nomux

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb_decrypt'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb_decrypt..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~11 debug messages>

yosys> opt_reduce

3.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb_decrypt.
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$2475: { $flatten\ecb_encrypt.$verific$n1866$973 $flatten\ecb_encrypt.$verific$n1867$974 $flatten\ecb_encrypt.$verific$n1868$975 $flatten\ecb_encrypt.$verific$n1874$981 $flatten\ecb_encrypt.$verific$n1875$982 $flatten\ecb_encrypt.$verific$n1876$983 $flatten\ecb_encrypt.$verific$n1882$989 $flatten\ecb_encrypt.$verific$n1883$990 $flatten\ecb_encrypt.$verific$n1884$991 $flatten\ecb_encrypt.$verific$n1893$1000 $flatten\ecb_encrypt.$verific$n1894$1001 $flatten\ecb_encrypt.$verific$n1895$1002 $auto$rtlil.cc:2400:Or$2462 }
    New input vector for $reduce_and cell $auto$opt_dff.cc:220:make_patterns_logic$2450: { $auto$rtlil.cc:2369:Not$2448 $auto$alumacc.cc:501:replace_alu$2487 }
  Optimizing cells in module \gost89_cfb_decrypt.
Performed a total of 2 changes.

yosys> opt_merge

3.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb_decrypt'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb_decrypt..
Removed 1 unused cells and 4 unused wires.
<suppressed ~2 debug messages>

yosys> opt_expr

3.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb_decrypt.

3.19.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb_decrypt..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~11 debug messages>

yosys> opt_reduce

3.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb_decrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb_decrypt'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb_decrypt..

yosys> opt_expr

3.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb_decrypt.

3.19.16. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.20. Printing statistics.

=== gost89_cfb_decrypt ===

   Number of wires:                159
   Number of wire bits:           4348
   Number of public wires:          61
   Number of public wire bits:    3474
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                111
     $alu                            4
     $and                            6
     $bmux                           8
     $dff                            4
     $dffe                           5
     $eq                            31
     $logic_not                      1
     $mux                           25
     $not                            8
     $or                             3
     $reduce_and                     2
     $reduce_bool                    2
     $reduce_or                      9
     $sdffe                          1
     $xor                            2


yosys> memory -nomap

3.21. Executing MEMORY pass.

yosys> opt_mem

3.21.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.21.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.21.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.21.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.21.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.21.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb_decrypt..

yosys> memory_share

3.21.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.21.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.21.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb_decrypt..

yosys> memory_collect

3.21.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.22. Printing statistics.

=== gost89_cfb_decrypt ===

   Number of wires:                159
   Number of wire bits:           4348
   Number of public wires:          61
   Number of public wire bits:    3474
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                111
     $alu                            4
     $and                            6
     $bmux                           8
     $dff                            4
     $dffe                           5
     $eq                            31
     $logic_not                      1
     $mux                           25
     $not                            8
     $or                             3
     $reduce_and                     2
     $reduce_bool                    2
     $reduce_or                      9
     $sdffe                          1
     $xor                            2


yosys> opt_clean

3.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb_decrypt..

yosys> stat

3.24. Printing statistics.

=== gost89_cfb_decrypt ===

   Number of wires:                159
   Number of wire bits:           4348
   Number of public wires:          61
   Number of public wire bits:    3474
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                111
     $alu                            4
     $and                            6
     $bmux                           8
     $dff                            4
     $dffe                           5
     $eq                            31
     $logic_not                      1
     $mux                           25
     $not                            8
     $or                             3
     $reduce_and                     2
     $reduce_bool                    2
     $reduce_or                      9
     $sdffe                          1
     $xor                            2


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.25. Executing TECHMAP pass (map to technology primitives).

3.25.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.25.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.25.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $sdffe.
Using template $paramod$32efbfac1c4dc57230cf86180788fdfd12e3b511\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $bmux.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $dff.
Using template $paramod$00298f3f8094950cb9a5ff2fda48d0d8bde8806c\_90_alu for cells of type $alu.
Using template $paramod$be80489e44a49c29884f59fd81c31ed03229cfc1\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000110 for cells of type $lcu.
No more expansions possible.
<suppressed ~605 debug messages>

yosys> stat

3.26. Printing statistics.

=== gost89_cfb_decrypt ===

   Number of wires:                513
   Number of wire bits:           9383
   Number of public wires:          61
   Number of public wire bits:    3474
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2318
     $_AND_                         65
     $_DFFE_PP_                    288
     $_DFF_P_                       71
     $_MUX_                       1163
     $_NOT_                         90
     $_OR_                         253
     $_SDFFE_PP0P_                   1
     $_XOR_                        355
     adder_carry                    32


yosys> opt

3.27. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb_decrypt.
<suppressed ~313 debug messages>

yosys> opt_merge -nomux

3.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb_decrypt'.
<suppressed ~648 debug messages>
Removed a total of 216 cells.

yosys> opt_muxtree

3.27.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb_decrypt..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb_decrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.27.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb_decrypt'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb_decrypt..
Removed 43 unused cells and 343 unused wires.
<suppressed ~44 debug messages>

yosys> opt_expr

3.27.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb_decrypt.

3.27.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.27.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb_decrypt..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb_decrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.27.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb_decrypt'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb_decrypt..

yosys> opt_expr

3.27.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb_decrypt.

3.27.16. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb_decrypt.
<suppressed ~131 debug messages>

yosys> opt_merge

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb_decrypt'.
Removed a total of 0 cells.

yosys> opt_dff

3.28.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb_decrypt..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

3.28.5. Finished fast OPT passes.

yosys> memory_map

3.29. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.30. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb_decrypt.

yosys> opt_merge -nomux

3.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb_decrypt'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb_decrypt..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb_decrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb_decrypt'.
Removed a total of 0 cells.

yosys> opt_share

3.30.6. Executing OPT_SHARE pass.

yosys> opt_dff

3.30.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb_decrypt..

yosys> opt_expr -full

3.30.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb_decrypt.

3.30.10. Finished OPT passes. (There is nothing left to do.)

yosys> techmap -map +/techmap.v

3.31. Executing TECHMAP pass (map to technology primitives).

3.31.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.31.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> opt -sat

3.32. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb_decrypt.

yosys> opt_merge -nomux

3.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb_decrypt'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.32.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb_decrypt..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.32.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb_decrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.32.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb_decrypt'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.32.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.32.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb_decrypt..

yosys> opt_expr

3.32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb_decrypt.

3.32.9. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

3.33. Executing ABC pass (technology mapping using ABC).

3.33.1. Summary of detected clock domains:
  648 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$2449, arst={ }, srst={ }
  384 cells in clk=\clk, en={ }, arst={ }, srst={ }
  67 cells in clk=\clk, en=$verific$n347$15, arst={ }, srst={ }
  130 cells in clk=\clk, en=\ecb_encrypt.load_data, arst={ }, srst={ }
  65 cells in clk=\clk, en=$auto$opt_dff.cc:194:make_patterns_logic$2437, arst={ }, srst={ }
  4 cells in clk=\clk, en=$auto$opt_dff.cc:194:make_patterns_logic$2441, arst={ }, srst=$verific$n347$15
  434 cells in clk=\clk, en=$auto$opt_dff.cc:194:make_patterns_logic$2444, arst={ }, srst={ }

3.33.2. Extracting gate netlist of module `\gost89_cfb_decrypt' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2449
Extracted 648 gates and 1328 wires to a netlist network with 680 inputs and 98 outputs.

3.33.2.1. Executing ABC.

3.33.3. Extracting gate netlist of module `\gost89_cfb_decrypt' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 352 gates and 484 wires to a netlist network with 131 inputs and 111 outputs.

3.33.3.1. Executing ABC.

3.33.4. Extracting gate netlist of module `\gost89_cfb_decrypt' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $verific$n347$15
Extracted 67 gates and 135 wires to a netlist network with 68 inputs and 65 outputs.

3.33.4.1. Executing ABC.

3.33.5. Extracting gate netlist of module `\gost89_cfb_decrypt' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by \ecb_encrypt.load_data
Extracted 130 gates and 197 wires to a netlist network with 67 inputs and 130 outputs.

3.33.5.1. Executing ABC.

3.33.6. Extracting gate netlist of module `\gost89_cfb_decrypt' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:194:make_patterns_logic$2437
Extracted 65 gates and 131 wires to a netlist network with 66 inputs and 65 outputs.

3.33.6.1. Executing ABC.

3.33.7. Extracting gate netlist of module `\gost89_cfb_decrypt' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:194:make_patterns_logic$2441, synchronously reset by $abc$6705$verific$n347$15
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 4 outputs.

3.33.7.1. Executing ABC.

3.33.8. Extracting gate netlist of module `\gost89_cfb_decrypt' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:194:make_patterns_logic$2444
Extracted 434 gates and 702 wires to a netlist network with 268 inputs and 33 outputs.

3.33.8.1. Executing ABC.

yosys> abc -dff

3.34. Executing ABC pass (technology mapping using ABC).

3.34.1. Summary of detected clock domains:
  176 cells in clk=\clk, en=$abc$6901$ecb_encrypt.load_data, arst={ }, srst={ }
  4 cells in clk=\clk, en=$abc$7354$auto$opt_dff.cc:194:make_patterns_logic$2441, arst={ }, srst=$abc$6705$verific$n347$15
  84 cells in clk=\clk, en=$abc$6705$verific$n347$15, arst={ }, srst={ }
  959 cells in clk=\clk, en={ }, arst={ }, srst={ }
  98 cells in clk=\clk, en=$abc$5494$auto$opt_dff.cc:219:make_patterns_logic$2449, arst={ }, srst={ }
  89 cells in clk=\clk, en=$abc$7160$auto$opt_dff.cc:194:make_patterns_logic$2437, arst={ }, srst={ }
  477 cells in clk=\clk, en=$abc$7361$auto$opt_dff.cc:194:make_patterns_logic$2444, arst={ }, srst={ }

3.34.2. Extracting gate netlist of module `\gost89_cfb_decrypt' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$6901$ecb_encrypt.load_data
Extracted 176 gates and 290 wires to a netlist network with 114 inputs and 129 outputs.

3.34.2.1. Executing ABC.

3.34.3. Extracting gate netlist of module `\gost89_cfb_decrypt' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$7354$auto$opt_dff.cc:194:make_patterns_logic$2441, synchronously reset by $abc$6705$verific$n347$15
Extracted 4 gates and 8 wires to a netlist network with 4 inputs and 4 outputs.

3.34.3.1. Executing ABC.

3.34.4. Extracting gate netlist of module `\gost89_cfb_decrypt' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$6705$verific$n347$15
Extracted 84 gates and 167 wires to a netlist network with 83 inputs and 65 outputs.

3.34.4.1. Executing ABC.

3.34.5. Extracting gate netlist of module `\gost89_cfb_decrypt' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 927 gates and 1567 wires to a netlist network with 640 inputs and 166 outputs.

3.34.5.1. Executing ABC.

3.34.6. Extracting gate netlist of module `\gost89_cfb_decrypt' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5494$auto$opt_dff.cc:219:make_patterns_logic$2449
Extracted 98 gates and 197 wires to a netlist network with 99 inputs and 65 outputs.

3.34.6.1. Executing ABC.

3.34.7. Extracting gate netlist of module `\gost89_cfb_decrypt' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$7160$auto$opt_dff.cc:194:make_patterns_logic$2437
Extracted 89 gates and 180 wires to a netlist network with 91 inputs and 65 outputs.

3.34.7.1. Executing ABC.

3.34.8. Extracting gate netlist of module `\gost89_cfb_decrypt' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$7361$auto$opt_dff.cc:194:make_patterns_logic$2444
Extracted 477 gates and 745 wires to a netlist network with 268 inputs and 33 outputs.

3.34.8.1. Executing ABC.

yosys> abc -dff

3.35. Executing ABC pass (technology mapping using ABC).

3.35.1. Summary of detected clock domains:
  157 cells in clk=\clk, en=$abc$7871$abc$6901$ecb_encrypt.load_data, arst={ }, srst={ }
  4 cells in clk=\clk, en=$abc$8129$abc$7354$auto$opt_dff.cc:194:make_patterns_logic$2441, arst={ }, srst=$abc$8136$abc$6705$verific$n347$15
  70 cells in clk=\clk, en=$abc$8136$abc$6705$verific$n347$15, arst={ }, srst={ }
  86 cells in clk=\clk, en=$abc$9451$abc$5494$auto$opt_dff.cc:219:make_patterns_logic$2449, arst={ }, srst={ }
  1068 cells in clk=\clk, en={ }, arst={ }, srst={ }
  127 cells in clk=\clk, en=$abc$9645$abc$7160$auto$opt_dff.cc:194:make_patterns_logic$2437, arst={ }, srst={ }
  597 cells in clk=\clk, en=$abc$9839$abc$7361$auto$opt_dff.cc:194:make_patterns_logic$2444, arst={ }, srst={ }

3.35.2. Extracting gate netlist of module `\gost89_cfb_decrypt' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$7871$abc$6901$ecb_encrypt.load_data
Extracted 157 gates and 273 wires to a netlist network with 116 inputs and 117 outputs.

3.35.2.1. Executing ABC.

3.35.3. Extracting gate netlist of module `\gost89_cfb_decrypt' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$8129$abc$7354$auto$opt_dff.cc:194:make_patterns_logic$2441, synchronously reset by $abc$8136$abc$6705$verific$n347$15
Extracted 4 gates and 8 wires to a netlist network with 4 inputs and 4 outputs.

3.35.3.1. Executing ABC.

3.35.4. Extracting gate netlist of module `\gost89_cfb_decrypt' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$8136$abc$6705$verific$n347$15
Extracted 70 gates and 141 wires to a netlist network with 71 inputs and 65 outputs.

3.35.4.1. Executing ABC.

3.35.5. Extracting gate netlist of module `\gost89_cfb_decrypt' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$9451$abc$5494$auto$opt_dff.cc:219:make_patterns_logic$2449
Extracted 86 gates and 169 wires to a netlist network with 83 inputs and 66 outputs.

3.35.5.1. Executing ABC.

3.35.6. Extracting gate netlist of module `\gost89_cfb_decrypt' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 1036 gates and 1677 wires to a netlist network with 641 inputs and 151 outputs.

3.35.6.1. Executing ABC.

3.35.7. Extracting gate netlist of module `\gost89_cfb_decrypt' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$9645$abc$7160$auto$opt_dff.cc:194:make_patterns_logic$2437
Extracted 127 gates and 253 wires to a netlist network with 126 inputs and 65 outputs.

3.35.7.1. Executing ABC.

3.35.8. Extracting gate netlist of module `\gost89_cfb_decrypt' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$9839$abc$7361$auto$opt_dff.cc:194:make_patterns_logic$2444
Extracted 597 gates and 865 wires to a netlist network with 268 inputs and 33 outputs.

3.35.8.1. Executing ABC.

yosys> abc -dff

3.36. Executing ABC pass (technology mapping using ABC).

3.36.1. Summary of detected clock domains:
  118 cells in clk=\clk, en=$abc$10469$abc$7871$abc$6901$ecb_encrypt.load_data, arst={ }, srst={ }
  4 cells in clk=\clk, en=$abc$10715$abc$8129$abc$7354$auto$opt_dff.cc:194:make_patterns_logic$2441, arst={ }, srst=$abc$10722$abc$8136$abc$6705$verific$n347$15
  78 cells in clk=\clk, en=$abc$10722$abc$8136$abc$6705$verific$n347$15, arst={ }, srst={ }
  201 cells in clk=\clk, en=$abc$10917$abc$9451$abc$5494$auto$opt_dff.cc:219:make_patterns_logic$2449, arst={ }, srst={ }
  123 cells in clk=\clk, en=$abc$12159$abc$9645$abc$7160$auto$opt_dff.cc:194:make_patterns_logic$2437, arst={ }, srst={ }
  925 cells in clk=\clk, en={ }, arst={ }, srst={ }
  419 cells in clk=\clk, en=$abc$12358$abc$9839$abc$7361$auto$opt_dff.cc:194:make_patterns_logic$2444, arst={ }, srst={ }

3.36.2. Extracting gate netlist of module `\gost89_cfb_decrypt' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$10469$abc$7871$abc$6901$ecb_encrypt.load_data
Extracted 118 gates and 205 wires to a netlist network with 87 inputs and 105 outputs.

3.36.2.1. Executing ABC.

3.36.3. Extracting gate netlist of module `\gost89_cfb_decrypt' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$10715$abc$8129$abc$7354$auto$opt_dff.cc:194:make_patterns_logic$2441, synchronously reset by $abc$10722$abc$8136$abc$6705$verific$n347$15
Extracted 4 gates and 8 wires to a netlist network with 4 inputs and 4 outputs.

3.36.3.1. Executing ABC.

3.36.4. Extracting gate netlist of module `\gost89_cfb_decrypt' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$10722$abc$8136$abc$6705$verific$n347$15
Extracted 78 gates and 157 wires to a netlist network with 79 inputs and 65 outputs.

3.36.4.1. Executing ABC.

3.36.5. Extracting gate netlist of module `\gost89_cfb_decrypt' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$10917$abc$9451$abc$5494$auto$opt_dff.cc:219:make_patterns_logic$2449
Extracted 201 gates and 397 wires to a netlist network with 196 inputs and 70 outputs.

3.36.5.1. Executing ABC.

3.36.6. Extracting gate netlist of module `\gost89_cfb_decrypt' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$12159$abc$9645$abc$7160$auto$opt_dff.cc:194:make_patterns_logic$2437
Extracted 123 gates and 242 wires to a netlist network with 119 inputs and 65 outputs.

3.36.6.1. Executing ABC.

3.36.7. Extracting gate netlist of module `\gost89_cfb_decrypt' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 893 gates and 1458 wires to a netlist network with 565 inputs and 136 outputs.

3.36.7.1. Executing ABC.

3.36.8. Extracting gate netlist of module `\gost89_cfb_decrypt' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$12358$abc$9839$abc$7361$auto$opt_dff.cc:194:make_patterns_logic$2444
Extracted 419 gates and 687 wires to a netlist network with 268 inputs and 33 outputs.

3.36.8.1. Executing ABC.

yosys> opt_ffinv

3.37. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt -sat

3.38. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.38.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb_decrypt.
<suppressed ~63 debug messages>

yosys> opt_merge -nomux

3.38.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb_decrypt'.
<suppressed ~33 debug messages>
Removed a total of 11 cells.

yosys> opt_muxtree

3.38.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb_decrypt..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.38.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb_decrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.38.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb_decrypt'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.38.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $abc$13742$auto$blifparse.cc:362:parse_blif$13780 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$13742$li37_li37, Q = $abc$13742$lo37).
Adding EN signal on $abc$13742$auto$blifparse.cc:362:parse_blif$13808 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$13742$li65_li65, Q = $abc$13742$lo65).
Adding EN signal on $abc$13742$auto$blifparse.cc:362:parse_blif$13809 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$13742$li66_li66, Q = $abc$13742$lo66).
Adding EN signal on $abc$13742$auto$blifparse.cc:362:parse_blif$13786 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$13742$li43_li43, Q = $abc$13742$lo43).
Adding EN signal on $abc$13742$auto$blifparse.cc:362:parse_blif$13799 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$13742$li56_li56, Q = $abc$13742$lo56).
Adding EN signal on $abc$13742$auto$blifparse.cc:362:parse_blif$13785 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$13742$li42_li42, Q = $abc$13742$lo42).
Adding EN signal on $abc$13742$auto$blifparse.cc:362:parse_blif$13792 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$13742$li49_li49, Q = $abc$13742$lo49).
Adding EN signal on $abc$13742$auto$blifparse.cc:362:parse_blif$13794 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$13742$li51_li51, Q = $abc$13742$lo51).
Adding EN signal on $abc$13742$auto$blifparse.cc:362:parse_blif$13783 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$13742$li40_li40, Q = $abc$13742$lo40).
Adding EN signal on $abc$13742$auto$blifparse.cc:362:parse_blif$13787 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$13742$li44_li44, Q = $abc$13742$lo44).
Adding EN signal on $abc$13742$auto$blifparse.cc:362:parse_blif$13773 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$13742$li30_li30, Q = $abc$13742$lo30).
Adding EN signal on $abc$13742$auto$blifparse.cc:362:parse_blif$13771 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$13742$li28_li28, Q = $abc$13742$lo28).
Adding EN signal on $abc$13742$auto$blifparse.cc:362:parse_blif$13793 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$13742$li50_li50, Q = $abc$13742$lo50).
Adding EN signal on $abc$13742$auto$blifparse.cc:362:parse_blif$13812 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$13742$li69_li69, Q = $abc$13742$lo69).
Adding EN signal on $abc$13742$auto$blifparse.cc:362:parse_blif$13795 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$13742$li52_li52, Q = $abc$13742$lo52).
Adding EN signal on $abc$13742$auto$blifparse.cc:362:parse_blif$13754 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$13742$li11_li11, Q = $abc$13742$lo11).
Adding EN signal on $abc$13742$auto$blifparse.cc:362:parse_blif$13751 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$13742$li08_li08, Q = $abc$13742$lo08).
Adding EN signal on $abc$13742$auto$blifparse.cc:362:parse_blif$13810 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$13742$li67_li67, Q = $abc$13742$lo67).
Adding EN signal on $abc$13742$auto$blifparse.cc:362:parse_blif$13750 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$13742$li07_li07, Q = $abc$13742$lo07).
Adding EN signal on $abc$13742$auto$blifparse.cc:362:parse_blif$13747 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$13742$li04_li04, Q = $abc$13742$lo04).
Adding EN signal on $abc$13742$auto$blifparse.cc:362:parse_blif$13807 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$13742$li64_li64, Q = $abc$13742$lo64).
Adding EN signal on $abc$13742$auto$blifparse.cc:362:parse_blif$13781 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$13742$li38_li38, Q = $abc$13742$lo38).
Adding EN signal on $abc$13742$auto$blifparse.cc:362:parse_blif$13800 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$13742$li57_li57, Q = $abc$13742$lo57).
Adding EN signal on $abc$13742$auto$blifparse.cc:362:parse_blif$13796 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$13742$li53_li53, Q = $abc$13742$lo53).
Adding EN signal on $abc$13742$auto$blifparse.cc:362:parse_blif$13788 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$13742$li45_li45, Q = $abc$13742$lo45).
Adding EN signal on $abc$13742$auto$blifparse.cc:362:parse_blif$13782 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$13742$li39_li39, Q = $abc$13742$lo39).
Adding EN signal on $abc$13742$auto$blifparse.cc:362:parse_blif$13805 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$13742$li62_li62, Q = $abc$13742$lo62).
Adding EN signal on $abc$13742$auto$blifparse.cc:362:parse_blif$13776 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$13742$li33_li33, Q = $abc$13742$lo33).
Adding EN signal on $abc$13742$auto$blifparse.cc:362:parse_blif$13778 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$13742$li35_li35, Q = $abc$13742$lo35).
Adding EN signal on $abc$13742$auto$blifparse.cc:362:parse_blif$13791 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$13742$li48_li48, Q = $abc$13742$lo48).
Adding EN signal on $abc$13742$auto$blifparse.cc:362:parse_blif$13779 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$13742$li36_li36, Q = $abc$13742$lo36).
Adding EN signal on $abc$13742$auto$blifparse.cc:362:parse_blif$13813 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$13742$li70_li70, Q = $abc$13742$lo70).
Adding EN signal on $abc$13742$auto$blifparse.cc:362:parse_blif$13777 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$13742$li34_li34, Q = $abc$13742$lo34).
Adding EN signal on $abc$13742$auto$blifparse.cc:362:parse_blif$13806 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$13742$li63_li63, Q = $abc$13742$lo63).
Adding EN signal on $abc$13742$auto$blifparse.cc:362:parse_blif$13790 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$13742$li47_li47, Q = $abc$13742$lo47).
Adding EN signal on $abc$13742$auto$blifparse.cc:362:parse_blif$13784 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$13742$li41_li41, Q = $abc$13742$lo41).
Adding EN signal on $abc$13742$auto$blifparse.cc:362:parse_blif$13797 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$13742$li54_li54, Q = $abc$13742$lo54).

yosys> opt_clean

3.38.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb_decrypt..
Removed 1 unused cells and 13413 unused wires.
<suppressed ~16 debug messages>

yosys> opt_expr

3.38.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb_decrypt.
<suppressed ~74 debug messages>

3.38.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.38.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb_decrypt..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.38.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb_decrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.38.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb_decrypt'.
<suppressed ~108 debug messages>
Removed a total of 36 cells.

yosys> opt_dff -sat

3.38.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $abc$13742$auto$blifparse.cc:362:parse_blif$13811 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$11112$abc$8331$li54_li54, Q = \ecb_encrypt.n1 [17]).
Adding EN signal on $abc$13742$auto$blifparse.cc:362:parse_blif$13775 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$11112$abc$8331$li57_li57, Q = \ecb_encrypt.n1 [12]).
Adding EN signal on $abc$13742$auto$blifparse.cc:362:parse_blif$13774 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$11112$abc$8331$li60_li60, Q = \ecb_encrypt.n1 [13]).
Adding EN signal on $abc$13742$auto$blifparse.cc:362:parse_blif$13772 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$11112$li24_li24, Q = $abc$11112$lo24).
Adding EN signal on $abc$13742$auto$blifparse.cc:362:parse_blif$13770 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$11112$li23_li23, Q = $abc$11112$lo23).
Adding EN signal on $abc$13742$auto$blifparse.cc:362:parse_blif$13769 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$11112$li22_li22, Q = $abc$13742$lo26).
Adding EN signal on $abc$13742$auto$blifparse.cc:362:parse_blif$13768 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$11112$li21_li21, Q = $abc$11112$lo21).
Adding EN signal on $abc$13742$auto$blifparse.cc:362:parse_blif$13766 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$11112$abc$9645$abc$6365$li35_li35, Q = $abc$11112$lo20).
Adding EN signal on $abc$13742$auto$blifparse.cc:362:parse_blif$13765 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$11112$abc$8331$li66_li66, Q = \ecb_encrypt.n1 [25]).
Adding EN signal on $abc$13742$auto$blifparse.cc:362:parse_blif$13760 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$11112$li14_li14, Q = \ecb_encrypt.n2 [30]).
Adding EN signal on $abc$13742$auto$blifparse.cc:362:parse_blif$13759 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$11112$li13_li13, Q = \ecb_encrypt.n2 [25]).
Adding EN signal on $abc$13742$auto$blifparse.cc:362:parse_blif$13757 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$11112$li12_li12, Q = \ecb_encrypt.n2 [27]).
Adding EN signal on $abc$13742$auto$blifparse.cc:362:parse_blif$13756 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$11112$li11_li11, Q = \ecb_encrypt.n2 [29]).
Adding EN signal on $abc$13742$auto$blifparse.cc:362:parse_blif$13755 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$11112$li10_li10, Q = \ecb_encrypt.n2 [31]).
Adding EN signal on $abc$13742$auto$blifparse.cc:362:parse_blif$13753 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$11112$abc$8331$li06_li06, Q = \ecb_encrypt.n1 [2]).
Adding EN signal on $abc$13742$auto$blifparse.cc:362:parse_blif$13752 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$11112$abc$8331$li05_li05, Q = \ecb_encrypt.n1 [4]).
Adding EN signal on $abc$13742$auto$blifparse.cc:362:parse_blif$13748 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$11112$abc$8331$li02_li02, Q = \ecb_encrypt.n1 [3]).
Adding EN signal on $abc$13742$auto$blifparse.cc:362:parse_blif$13745 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$11112$abc$8331$li65_li65, Q = \ecb_encrypt.n1 [26]).
Adding EN signal on $abc$13742$auto$blifparse.cc:362:parse_blif$13744 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$11112$abc$8331$li64_li64, Q = \ecb_encrypt.n1 [27]).
Adding EN signal on $abc$13742$auto$blifparse.cc:362:parse_blif$13743 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$11112$abc$8331$li59_li59, Q = \ecb_encrypt.n1 [15]).

yosys> opt_clean

3.38.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb_decrypt..
Removed 0 unused cells and 93 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.38.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb_decrypt.
<suppressed ~40 debug messages>

3.38.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.38.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb_decrypt..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.38.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb_decrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.38.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb_decrypt'.
<suppressed ~60 debug messages>
Removed a total of 20 cells.

yosys> opt_dff -sat

3.38.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.38.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb_decrypt..
Removed 0 unused cells and 40 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.38.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb_decrypt.

3.38.23. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.38.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb_decrypt..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.38.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb_decrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.38.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb_decrypt'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.38.27. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.38.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb_decrypt..

yosys> opt_expr

3.38.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb_decrypt.

3.38.30. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /home/users/temp_dir/yosys_jxlmMm/abc_tmp_1.scr

3.39. Executing ABC pass (technology mapping using ABC).

3.39.1. Extracting gate netlist of module `\gost89_cfb_decrypt' to `<abc-temp-dir>/input.blif'..
Extracted 1564 gates and 2726 wires to a netlist network with 1161 inputs and 300 outputs.

3.39.1.1. Executing ABC.
DE:   #PIs = 1161  #Luts =   596  Max Lvl =   5  Avg Lvl =   2.31  [   0.09 sec. at Pass 0]
DE:   #PIs = 1161  #Luts =   568  Max Lvl =   5  Avg Lvl =   2.23  [   2.05 sec. at Pass 1]
DE:   #PIs = 1161  #Luts =   568  Max Lvl =   5  Avg Lvl =   2.23  [   0.56 sec. at Pass 2]
DE:   #PIs = 1161  #Luts =   568  Max Lvl =   5  Avg Lvl =   2.23  [   0.89 sec. at Pass 3]
DE:   #PIs = 1161  #Luts =   567  Max Lvl =   5  Avg Lvl =   2.23  [   0.85 sec. at Pass 4]
DE:   #PIs = 1161  #Luts =   567  Max Lvl =   5  Avg Lvl =   2.23  [   1.01 sec. at Pass 5]
DE:   #PIs = 1161  #Luts =   567  Max Lvl =   5  Avg Lvl =   2.23  [   0.79 sec. at Pass 6]
DE:   #PIs = 1161  #Luts =   567  Max Lvl =   5  Avg Lvl =   2.23  [   0.95 sec. at Pass 7]
DE:   #PIs = 1161  #Luts =   567  Max Lvl =   5  Avg Lvl =   2.23  [   2.90 sec. at Pass 8]
DE:   #PIs = 1161  #Luts =   567  Max Lvl =   5  Avg Lvl =   2.23  [   0.23 sec. at Pass 9]

yosys> opt

3.40. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.40.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb_decrypt.

yosys> opt_merge -nomux

3.40.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb_decrypt'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.40.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb_decrypt..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.40.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb_decrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.40.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb_decrypt'.
Removed a total of 0 cells.

yosys> opt_dff

3.40.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.40.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb_decrypt..
Removed 0 unused cells and 2722 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.40.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb_decrypt.

3.40.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.40.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb_decrypt..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.40.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb_decrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.40.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb_decrypt'.
Removed a total of 0 cells.

yosys> opt_dff

3.40.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.40.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb_decrypt..

yosys> opt_expr

3.40.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb_decrypt.

3.40.16. Finished OPT passes. (There is nothing left to do.)

yosys> opt_ffinv

3.41. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> stat

3.42. Printing statistics.

=== gost89_cfb_decrypt ===

   Number of wires:                802
   Number of wire bits:           4030
   Number of public wires:          47
   Number of public wire bits:    3212
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                959
     $_DFFE_PP_                    345
     $_DFF_P_                       14
     $_SDFFE_PP0P_                   1
     $lut                          567
     adder_carry                    32


yosys> shregmap -minlen 8 -maxlen 20

3.43. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.44. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.45. Printing statistics.

=== gost89_cfb_decrypt ===

   Number of wires:                804
   Number of wire bits:           4032
   Number of public wires:          47
   Number of public wire bits:    3212
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                961
     $_DFFE_PP0P_                  345
     $_DFF_P_                       15
     $_MUX_                          2
     $lut                          567
     adder_carry                    32


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.46. Executing TECHMAP pass (map to technology primitives).

3.46.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.46.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.46.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~1408 debug messages>

yosys> opt_expr -mux_undef

3.47. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb_decrypt.
<suppressed ~13532 debug messages>

yosys> simplemap

3.48. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.49. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb_decrypt.

yosys> opt_merge

3.50. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb_decrypt'.
<suppressed ~3591 debug messages>
Removed a total of 1197 cells.

yosys> opt_dff -nodffe -nosdff

3.51. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.52. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb_decrypt..
Removed 0 unused cells and 3503 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.53. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.53.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb_decrypt.
<suppressed ~487 debug messages>

yosys> opt_merge -nomux

3.53.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb_decrypt'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.53.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb_decrypt..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.53.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb_decrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.53.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb_decrypt'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.53.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.53.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb_decrypt..
Removed 0 unused cells and 59 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.53.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb_decrypt.

3.53.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.53.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb_decrypt..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.53.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb_decrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.53.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb_decrypt'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.53.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.53.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb_decrypt..

yosys> opt_expr

3.53.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb_decrypt.

3.53.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /home/users/temp_dir/yosys_jxlmMm/abc_tmp_2.scr

3.54. Executing ABC pass (technology mapping using ABC).

3.54.1. Extracting gate netlist of module `\gost89_cfb_decrypt' to `<abc-temp-dir>/input.blif'..
Extracted 1932 gates and 3095 wires to a netlist network with 1161 inputs and 300 outputs.

3.54.1.1. Executing ABC.
DE:   #PIs = 1161  #Luts =   567  Max Lvl =   5  Avg Lvl =   2.23  [   0.10 sec. at Pass 0]
DE:   #PIs = 1161  #Luts =   567  Max Lvl =   5  Avg Lvl =   2.23  [   1.93 sec. at Pass 1]
DE:   #PIs = 1161  #Luts =   567  Max Lvl =   5  Avg Lvl =   2.23  [   0.65 sec. at Pass 2]
DE:   #PIs = 1161  #Luts =   567  Max Lvl =   5  Avg Lvl =   2.23  [   0.80 sec. at Pass 3]
DE:   #PIs = 1161  #Luts =   567  Max Lvl =   5  Avg Lvl =   2.23  [   0.67 sec. at Pass 4]
DE:   #PIs = 1161  #Luts =   567  Max Lvl =   5  Avg Lvl =   2.23  [   0.95 sec. at Pass 5]
DE:   #PIs = 1161  #Luts =   567  Max Lvl =   5  Avg Lvl =   2.23  [   2.36 sec. at Pass 6]
DE:   #PIs = 1161  #Luts =   567  Max Lvl =   5  Avg Lvl =   2.23  [   0.22 sec. at Pass 7]

yosys> opt

3.55. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.55.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb_decrypt.

yosys> opt_merge -nomux

3.55.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb_decrypt'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.55.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb_decrypt..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.55.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb_decrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.55.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb_decrypt'.
Removed a total of 0 cells.

yosys> opt_dff

3.55.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.55.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb_decrypt..
Removed 0 unused cells and 2727 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.55.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb_decrypt.

3.55.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.55.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb_decrypt..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.55.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb_decrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.55.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb_decrypt'.
Removed a total of 0 cells.

yosys> opt_dff

3.55.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.55.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb_decrypt..

yosys> opt_expr

3.55.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb_decrypt.

3.55.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.56. Executing HIERARCHY pass (managing design hierarchy).

3.56.1. Analyzing design hierarchy..
Top module:  \gost89_cfb_decrypt

3.56.2. Analyzing design hierarchy..
Top module:  \gost89_cfb_decrypt
Removed 0 unused modules.

yosys> stat

3.57. Printing statistics.

=== gost89_cfb_decrypt ===

   Number of wires:                802
   Number of wire bits:           4030
   Number of public wires:          47
   Number of public wire bits:    3212
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                959
     $lut                          567
     adder_carry                    32
     dffsre                        360


yosys> opt_clean -purge

3.58. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb_decrypt..
Removed 0 unused cells and 25 unused wires.
<suppressed ~25 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.59. Executing Verilog backend.
Dumping module `\gost89_cfb_decrypt'.

Warnings: 1 unique messages, 1 total
End of script. Logfile hash: 2b06271353, CPU: user 7.09s system 0.23s, MEM: 55.54 MB peak
Yosys 0.18+10 (git sha1 8217e4c48, gcc 9.1.0 -fPIC -Os)
Time spent: 96% 6x abc (160 sec), 1% 39x opt_expr (2 sec), ...
real 34.40
user 152.60
sys 13.94
