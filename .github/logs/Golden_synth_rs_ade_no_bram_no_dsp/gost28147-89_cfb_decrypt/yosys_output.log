
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.49
 Yosys 0.18+10 (git sha1 7a7a25778, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 05:39:28 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k gost89_cfb_decrypt.v gost89_ecb_encrypt.v gost89_round.v gost89_sbox.v

yosys> verific -vlog2k gost89_cfb_decrypt.v gost89_ecb_encrypt.v gost89_round.v gost89_sbox.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 05:39:28 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'gost89_cfb_decrypt.v'
VERIFIC-INFO [VERI-2561] gost89_cfb_decrypt.v:17: undeclared symbol 'reset_ecb', assumed default net type 'wire'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'gost89_ecb_encrypt.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'gost89_round.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'gost89_sbox.v'

yosys> synth_rs -top gost89_cfb_decrypt -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.58

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\RS_DSP2_MULT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_sim'.
Generating RTLIL representation for module `\dsp_t1_20x18x64'.
Generating RTLIL representation for module `\dsp_t1_10x9x32'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top gost89_cfb_decrypt

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] gost89_cfb_decrypt.v:1: compiling module 'gost89_cfb_decrypt'
VERIFIC-INFO [VERI-1018] gost89_ecb_encrypt.v:1: compiling module 'gost89_ecb_encrypt'
VERIFIC-INFO [VERI-1018] gost89_round.v:1: compiling module 'gost89_round'
VERIFIC-INFO [VERI-1018] gost89_sbox.v:1: compiling module 'gost89_sbox'
VERIFIC-WARNING [VERI-1209] gost89_ecb_encrypt.v:33: expression size 7 truncated to fit in target size 6
Importing module gost89_cfb_decrypt.
Importing module gost89_ecb_encrypt.
Importing module gost89_round.
Importing module gost89_sbox.

3.3.1. Analyzing design hierarchy..
Top module:  \gost89_cfb_decrypt
Used module:     \gost89_ecb_encrypt
Used module:         \gost89_round
Used module:             \gost89_sbox

3.3.2. Analyzing design hierarchy..
Top module:  \gost89_cfb_decrypt
Used module:     \gost89_ecb_encrypt
Used module:         \gost89_round
Used module:             \gost89_sbox
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.4.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.4.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_sbox.
Optimizing module gost89_round.
Optimizing module gost89_ecb_encrypt.
<suppressed ~3 debug messages>
Optimizing module gost89_cfb_decrypt.

yosys> bmuxmap

3.5. Executing BMUXMAP pass.

yosys> demuxmap

3.6. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> flatten

3.7. Executing FLATTEN pass (flatten design).
Deleting now unused module gost89_ecb_encrypt.
Deleting now unused module gost89_round.
Deleting now unused module gost89_sbox.
<suppressed ~10 debug messages>

yosys> bmuxmap

3.8. Executing BMUXMAP pass.

yosys> demuxmap

3.9. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> tribuf -logic

3.10. Executing TRIBUF pass.

yosys> deminout

3.11. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb_decrypt.

yosys> opt_clean

3.13. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb_decrypt..
Removed 0 unused cells and 2344 unused wires.
<suppressed ~28 debug messages>

yosys> check

3.14. Executing CHECK pass (checking for obvious problems).
Checking module gost89_cfb_decrypt...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.15. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.15.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb_decrypt.
<suppressed ~3 debug messages>

yosys> opt_merge -nomux

3.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb_decrypt'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_muxtree

3.15.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb_decrypt..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~22 debug messages>

yosys> opt_reduce

3.15.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb_decrypt.
    New ctrl vector for $pmux cell $flatten\ecb_encrypt.$verific$select_114$gost89_ecb_encrypt.v:80$1811: { $auto$opt_reduce.cc:134:opt_pmux$2452 $auto$opt_reduce.cc:134:opt_pmux$2450 $auto$opt_reduce.cc:134:opt_pmux$2448 $auto$opt_reduce.cc:134:opt_pmux$2446 $auto$opt_reduce.cc:134:opt_pmux$2444 $auto$opt_reduce.cc:134:opt_pmux$2442 $auto$opt_reduce.cc:134:opt_pmux$2440 $auto$opt_reduce.cc:134:opt_pmux$2438 $flatten\ecb_encrypt.$verific$n1897$1004 }
  Optimizing cells in module \gost89_cfb_decrypt.
Performed a total of 1 changes.

yosys> opt_merge

3.15.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb_decrypt'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.15.6. Executing OPT_DFF pass (perform DFF optimizations).
Removing never-active async load on $verific$out_reg$gost89_cfb_decrypt.v:38$954 ($aldff) from module gost89_cfb_decrypt.
Removing never-active async load on $verific$in_value_reg$gost89_cfb_decrypt.v:38$953 ($aldff) from module gost89_cfb_decrypt.
Removing never-active async load on $verific$gamma_reg$gost89_cfb_decrypt.v:38$951 ($aldff) from module gost89_cfb_decrypt.
Removing never-active async load on $flatten\ecb_encrypt.$verific$round_num_reg$gost89_ecb_encrypt.v:44$1774 ($aldff) from module gost89_cfb_decrypt.
Removing never-active async load on $flatten\ecb_encrypt.$verific$round_key_reg$gost89_ecb_encrypt.v:80$1812 ($aldff) from module gost89_cfb_decrypt.
Removing never-active async load on $flatten\ecb_encrypt.$verific$out_reg$gost89_ecb_encrypt.v:44$1775 ($aldff) from module gost89_cfb_decrypt.
Removing never-active async load on $flatten\ecb_encrypt.$verific$n2_reg$gost89_ecb_encrypt.v:44$1772 ($aldff) from module gost89_cfb_decrypt.
Removing never-active async load on $flatten\ecb_encrypt.$verific$n1_reg$gost89_ecb_encrypt.v:44$1771 ($aldff) from module gost89_cfb_decrypt.

yosys> opt_clean

3.15.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb_decrypt..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.15.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb_decrypt.
<suppressed ~6 debug messages>

3.15.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.15.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb_decrypt..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~22 debug messages>

yosys> opt_reduce

3.15.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb_decrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.15.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb_decrypt'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.15.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.15.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb_decrypt..
Removed 1 unused cells and 2 unused wires.
<suppressed ~2 debug messages>

yosys> opt_expr

3.15.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb_decrypt.

3.15.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.15.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb_decrypt..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~22 debug messages>

yosys> opt_reduce

3.15.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb_decrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.15.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb_decrypt'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.15.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.15.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb_decrypt..

yosys> opt_expr

3.15.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb_decrypt.

3.15.23. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

3.16. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.16.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.16.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.16.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.16.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb_decrypt..

yosys> fsm_opt

3.16.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.16.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.16.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.16.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat

3.17. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.17.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb_decrypt.

yosys> opt_merge -nomux

3.17.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb_decrypt'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.17.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb_decrypt..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~22 debug messages>

yosys> opt_reduce

3.17.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb_decrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.17.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb_decrypt'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.17.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $verific$out_reg$gost89_cfb_decrypt.v:38$954 ($dff) from module gost89_cfb_decrypt (D = $verific$n413$21, Q = \out).
Adding EN signal on $verific$in_value_reg$gost89_cfb_decrypt.v:38$953 ($dff) from module gost89_cfb_decrypt (D = \in, Q = \in_value).
Adding EN signal on $verific$gamma_reg$gost89_cfb_decrypt.v:38$951 ($dff) from module gost89_cfb_decrypt (D = $verific$n544$23, Q = \gamma).
Adding SRST signal on $verific$busy_reg$gost89_cfb_decrypt.v:38$952 ($dff) from module gost89_cfb_decrypt (D = $verific$n341$11, Q = \busy, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$2458 ($sdff) from module gost89_cfb_decrypt (D = $verific$n341$11, Q = \busy).
Adding EN signal on $flatten\ecb_encrypt.$verific$round_key_reg$gost89_ecb_encrypt.v:80$1812 ($dff) from module gost89_cfb_decrypt (D = $flatten\ecb_encrypt.$verific$n1898$1059, Q = \ecb_encrypt.round_key).
Adding EN signal on $flatten\ecb_encrypt.$verific$out_reg$gost89_ecb_encrypt.v:44$1775 ($dff) from module gost89_cfb_decrypt (D = { \ecb_encrypt.n1 \ecb_encrypt.out1 }, Q = \ecb_encrypt.out).

yosys> opt_clean

3.17.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb_decrypt..
Removed 5 unused cells and 5 unused wires.
<suppressed ~6 debug messages>

yosys> opt_expr

3.17.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb_decrypt.
<suppressed ~6 debug messages>

3.17.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.17.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb_decrypt..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~19 debug messages>

yosys> opt_reduce

3.17.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb_decrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.17.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb_decrypt'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.17.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.17.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb_decrypt..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.17.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb_decrypt.

3.17.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.17.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb_decrypt..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~19 debug messages>

yosys> opt_reduce

3.17.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb_decrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.17.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb_decrypt'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.17.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.17.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb_decrypt..

yosys> opt_expr

3.17.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb_decrypt.

3.17.23. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.18. Executing WREDUCE pass (reducing word size of cells).
Removed top 5 bits (of 6) from port A of cell gost89_cfb_decrypt.$flatten\ecb_encrypt.$verific$LessThan_25$gost89_ecb_encrypt.v:34$1756 ($lt).
Removed top 5 bits (of 6) from port B of cell gost89_cfb_decrypt.$flatten\ecb_encrypt.$verific$add_22$gost89_ecb_encrypt.v:33$1753 ($add).
Removed top 1 bits (of 6) from port B of cell gost89_cfb_decrypt.$flatten\ecb_encrypt.$verific$equal_100$gost89_ecb_encrypt.v:67$1795 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb_decrypt.$flatten\ecb_encrypt.$verific$equal_101$gost89_ecb_encrypt.v:68$1796 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb_decrypt.$flatten\ecb_encrypt.$verific$equal_102$gost89_ecb_encrypt.v:69$1797 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb_decrypt.$flatten\ecb_encrypt.$verific$equal_103$gost89_ecb_encrypt.v:70$1798 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb_decrypt.$flatten\ecb_encrypt.$verific$equal_104$gost89_ecb_encrypt.v:71$1799 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb_decrypt.$flatten\ecb_encrypt.$verific$equal_105$gost89_ecb_encrypt.v:72$1800 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb_decrypt.$flatten\ecb_encrypt.$verific$equal_106$gost89_ecb_encrypt.v:73$1801 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb_decrypt.$flatten\ecb_encrypt.$verific$equal_107$gost89_ecb_encrypt.v:74$1802 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb_decrypt.$flatten\ecb_encrypt.$verific$equal_108$gost89_ecb_encrypt.v:75$1803 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb_decrypt.$flatten\ecb_encrypt.$verific$equal_109$gost89_ecb_encrypt.v:76$1804 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb_decrypt.$flatten\ecb_encrypt.$verific$equal_110$gost89_ecb_encrypt.v:77$1805 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb_decrypt.$flatten\ecb_encrypt.$verific$equal_111$gost89_ecb_encrypt.v:78$1806 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb_decrypt.$flatten\ecb_encrypt.$verific$equal_112$gost89_ecb_encrypt.v:79$1807 ($eq).
Removed top 5 bits (of 6) from port B of cell gost89_cfb_decrypt.$flatten\ecb_encrypt.$verific$equal_82$gost89_ecb_encrypt.v:49$1777 ($eq).
Removed top 4 bits (of 6) from port B of cell gost89_cfb_decrypt.$flatten\ecb_encrypt.$verific$equal_83$gost89_ecb_encrypt.v:50$1778 ($eq).
Removed top 4 bits (of 6) from port B of cell gost89_cfb_decrypt.$flatten\ecb_encrypt.$verific$equal_84$gost89_ecb_encrypt.v:51$1779 ($eq).
Removed top 3 bits (of 6) from port B of cell gost89_cfb_decrypt.$flatten\ecb_encrypt.$verific$equal_85$gost89_ecb_encrypt.v:52$1780 ($eq).
Removed top 3 bits (of 6) from port B of cell gost89_cfb_decrypt.$flatten\ecb_encrypt.$verific$equal_86$gost89_ecb_encrypt.v:53$1781 ($eq).
Removed top 3 bits (of 6) from port B of cell gost89_cfb_decrypt.$flatten\ecb_encrypt.$verific$equal_87$gost89_ecb_encrypt.v:54$1782 ($eq).
Removed top 3 bits (of 6) from port B of cell gost89_cfb_decrypt.$flatten\ecb_encrypt.$verific$equal_88$gost89_ecb_encrypt.v:55$1783 ($eq).
Removed top 2 bits (of 6) from port B of cell gost89_cfb_decrypt.$flatten\ecb_encrypt.$verific$equal_89$gost89_ecb_encrypt.v:56$1784 ($eq).
Removed top 2 bits (of 6) from port B of cell gost89_cfb_decrypt.$flatten\ecb_encrypt.$verific$equal_90$gost89_ecb_encrypt.v:57$1785 ($eq).
Removed top 2 bits (of 6) from port B of cell gost89_cfb_decrypt.$flatten\ecb_encrypt.$verific$equal_91$gost89_ecb_encrypt.v:58$1786 ($eq).
Removed top 2 bits (of 6) from port B of cell gost89_cfb_decrypt.$flatten\ecb_encrypt.$verific$equal_92$gost89_ecb_encrypt.v:59$1787 ($eq).
Removed top 2 bits (of 6) from port B of cell gost89_cfb_decrypt.$flatten\ecb_encrypt.$verific$equal_93$gost89_ecb_encrypt.v:60$1788 ($eq).
Removed top 2 bits (of 6) from port B of cell gost89_cfb_decrypt.$flatten\ecb_encrypt.$verific$equal_94$gost89_ecb_encrypt.v:61$1789 ($eq).
Removed top 2 bits (of 6) from port B of cell gost89_cfb_decrypt.$flatten\ecb_encrypt.$verific$equal_95$gost89_ecb_encrypt.v:62$1790 ($eq).
Removed top 2 bits (of 6) from port B of cell gost89_cfb_decrypt.$flatten\ecb_encrypt.$verific$equal_96$gost89_ecb_encrypt.v:63$1791 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb_decrypt.$flatten\ecb_encrypt.$verific$equal_97$gost89_ecb_encrypt.v:64$1792 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb_decrypt.$flatten\ecb_encrypt.$verific$equal_98$gost89_ecb_encrypt.v:65$1793 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb_decrypt.$flatten\ecb_encrypt.$verific$equal_99$gost89_ecb_encrypt.v:66$1794 ($eq).

yosys> peepopt

3.19. Executing PEEPOPT pass (run peephole optimizers).

yosys> opt_clean

3.20. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb_decrypt..

yosys> bmuxmap

3.21. Executing BMUXMAP pass.

yosys> demuxmap

3.22. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> alumacc

3.23. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module gost89_cfb_decrypt:
  creating $macc model for $flatten\ecb_encrypt.$verific$add_22$gost89_ecb_encrypt.v:33$1753 ($add).
  creating $macc model for $flatten\ecb_encrypt.\rnd.$verific$add_3$gost89_round.v:12$1819 ($add).
  creating $alu model for $macc $flatten\ecb_encrypt.\rnd.$verific$add_3$gost89_round.v:12$1819.
  creating $alu model for $macc $flatten\ecb_encrypt.$verific$add_22$gost89_ecb_encrypt.v:33$1753.
  creating $alu model for $flatten\ecb_encrypt.$verific$LessThan_21$gost89_ecb_encrypt.v:32$1752 ($lt): new $alu
  creating $alu model for $flatten\ecb_encrypt.$verific$LessThan_25$gost89_ecb_encrypt.v:34$1756 ($lt): new $alu
  creating $alu model for $flatten\ecb_encrypt.$verific$equal_32$gost89_ecb_encrypt.v:38$1762 ($eq): merged with $flatten\ecb_encrypt.$verific$LessThan_21$gost89_ecb_encrypt.v:32$1752.
  creating $alu cell for $flatten\ecb_encrypt.$verific$LessThan_25$gost89_ecb_encrypt.v:34$1756: $auto$alumacc.cc:485:replace_alu$2472
  creating $alu cell for $flatten\ecb_encrypt.$verific$LessThan_21$gost89_ecb_encrypt.v:32$1752, $flatten\ecb_encrypt.$verific$equal_32$gost89_ecb_encrypt.v:38$1762: $auto$alumacc.cc:485:replace_alu$2477
  creating $alu cell for $flatten\ecb_encrypt.$verific$add_22$gost89_ecb_encrypt.v:33$1753: $auto$alumacc.cc:485:replace_alu$2488
  creating $alu cell for $flatten\ecb_encrypt.\rnd.$verific$add_3$gost89_round.v:12$1819: $auto$alumacc.cc:485:replace_alu$2491
  created 4 $alu and 0 $macc cells.

yosys> opt_expr

3.24. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb_decrypt.
<suppressed ~1 debug messages>

yosys> opt_merge -nomux

3.25. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb_decrypt'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.26. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb_decrypt..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~19 debug messages>

yosys> opt_reduce

3.27. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb_decrypt.
    New input vector for $reduce_and cell $auto$opt_dff.cc:220:make_patterns_logic$2469: { $auto$alumacc.cc:501:replace_alu$2478 $auto$rtlil.cc:2369:Not$2467 }
  Optimizing cells in module \gost89_cfb_decrypt.
Performed a total of 1 changes.

yosys> opt_merge

3.28. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb_decrypt'.
Removed a total of 0 cells.

yosys> opt_share

3.29. Executing OPT_SHARE pass.

yosys> opt_dff

3.30. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.31. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb_decrypt..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.32. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb_decrypt.
MAX OPT ITERATION = 1

yosys> stat

3.33. Printing statistics.

=== gost89_cfb_decrypt ===

   Number of wires:                173
   Number of wire bits:           4538
   Number of public wires:          61
   Number of public wire bits:    3474
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                213
     $alu                            4
     $and                            6
     $dff                            4
     $dffe                           5
     $eq                            31
     $logic_not                      1
     $mux                          136
     $not                            8
     $or                             1
     $pmux                           1
     $reduce_and                     2
     $reduce_bool                    2
     $reduce_or                      9
     $sdffe                          1
     $xor                            2


yosys> memory -nomap

3.34. Executing MEMORY pass.

yosys> opt_mem

3.34.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.34.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.34.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.34.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.34.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.34.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb_decrypt..

yosys> memory_share

3.34.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.34.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.34.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb_decrypt..

yosys> memory_collect

3.34.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.35. Printing statistics.

=== gost89_cfb_decrypt ===

   Number of wires:                173
   Number of wire bits:           4538
   Number of public wires:          61
   Number of public wire bits:    3474
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                213
     $alu                            4
     $and                            6
     $dff                            4
     $dffe                           5
     $eq                            31
     $logic_not                      1
     $mux                          136
     $not                            8
     $or                             1
     $pmux                           1
     $reduce_and                     2
     $reduce_bool                    2
     $reduce_or                      9
     $sdffe                          1
     $xor                            2


yosys> muxpack

3.36. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~137 debug messages>

yosys> opt_clean

3.37. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb_decrypt..

yosys> pmuxtree

3.38. Executing PMUXTREE pass.

yosys> muxpack

3.39. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converting gost89_cfb_decrypt.$auto$pmuxtree.cc:65:recursive_mux_generator$2510 ... gost89_cfb_decrypt.$auto$pmuxtree.cc:65:recursive_mux_generator$2512 to a pmux with 2 cases.
Converting gost89_cfb_decrypt.$auto$pmuxtree.cc:65:recursive_mux_generator$2500 ... gost89_cfb_decrypt.$auto$pmuxtree.cc:65:recursive_mux_generator$2502 to a pmux with 2 cases.
Converted 4 (p)mux cells into 2 pmux cells.
<suppressed ~145 debug messages>

yosys> memory_map

3.40. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> stat

3.41. Printing statistics.

=== gost89_cfb_decrypt ===

   Number of wires:                187
   Number of wire bits:           4831
   Number of public wires:          61
   Number of public wire bits:    3474
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                224
     $alu                            4
     $and                            6
     $dff                            4
     $dffe                           5
     $eq                            31
     $logic_not                      1
     $mux                          141
     $not                            9
     $or                             3
     $pmux                           2
     $reduce_and                     2
     $reduce_bool                    2
     $reduce_or                     11
     $sdffe                          1
     $xor                            2


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.42. Executing TECHMAP pass (map to technology primitives).

3.42.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.42.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.42.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $sdffe.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $or.
Using template $paramod$8fabc56b80a569262acfc42757a02ca0b8e91278\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod$32efbfac1c4dc57230cf86180788fdfd12e3b511\_90_alu for cells of type $alu.
Using template $paramod$00298f3f8094950cb9a5ff2fda48d0d8bde8806c\_90_alu for cells of type $alu.
Using template $paramod$be80489e44a49c29884f59fd81c31ed03229cfc1\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000110 for cells of type $lcu.
No more expansions possible.
<suppressed ~803 debug messages>

yosys> stat

3.43. Printing statistics.

=== gost89_cfb_decrypt ===

   Number of wires:                727
   Number of wire bits:          10292
   Number of public wires:          61
   Number of public wire bits:    3474
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2451
     $_AND_                        193
     $_DFFE_PP_                    288
     $_DFF_P_                       71
     $_MUX_                       1099
     $_NOT_                         91
     $_OR_                         321
     $_SDFFE_PP0P_                   1
     $_XOR_                        355
     adder_carry                    32


yosys> opt_expr

3.44. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb_decrypt.
<suppressed ~345 debug messages>

yosys> opt_merge -nomux

3.45. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb_decrypt'.
<suppressed ~633 debug messages>
Removed a total of 211 cells.

yosys> opt_muxtree

3.46. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb_decrypt..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.47. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb_decrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.48. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb_decrypt'.
Removed a total of 0 cells.

yosys> opt_share

3.49. Executing OPT_SHARE pass.

yosys> opt_dff

3.50. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.51. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb_decrypt..
Removed 50 unused cells and 555 unused wires.
<suppressed ~51 debug messages>

yosys> opt_expr

3.52. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb_decrypt.

yosys> opt_muxtree

3.53. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb_decrypt..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.54. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb_decrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.55. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb_decrypt'.
Removed a total of 0 cells.

yosys> opt_share

3.56. Executing OPT_SHARE pass.

yosys> opt_dff

3.57. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.58. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb_decrypt..

yosys> opt_expr

3.59. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb_decrypt.
MAX OPT ITERATION = 2

yosys> opt -fast -full

3.60. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.60.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb_decrypt.
<suppressed ~131 debug messages>

yosys> opt_merge

3.60.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb_decrypt'.
Removed a total of 0 cells.

yosys> opt_dff

3.60.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.60.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb_decrypt..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

3.60.5. Finished fast OPT passes.

yosys> techmap -map +/techmap.v

3.61. Executing TECHMAP pass (map to technology primitives).

3.61.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.61.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> opt -sat

3.62. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.62.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb_decrypt.

yosys> opt_merge -nomux

3.62.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb_decrypt'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.62.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb_decrypt..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.62.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb_decrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.62.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb_decrypt'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.62.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.62.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb_decrypt..

yosys> opt_expr

3.62.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb_decrypt.

3.62.9. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

3.63. Executing ABC pass (technology mapping using ABC).

3.63.1. Summary of detected clock domains:
  647 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$2468, arst={ }, srst={ }
  389 cells in clk=\clk, en={ }, arst={ }, srst={ }
  67 cells in clk=\clk, en=$verific$n347$15, arst={ }, srst={ }
  130 cells in clk=\clk, en=\ecb_encrypt.load_data, arst={ }, srst={ }
  65 cells in clk=\clk, en=$auto$opt_dff.cc:194:make_patterns_logic$2456, arst={ }, srst={ }
  4 cells in clk=\clk, en=$auto$opt_dff.cc:194:make_patterns_logic$2460, arst={ }, srst=$verific$n347$15
  561 cells in clk=\clk, en=$auto$opt_dff.cc:194:make_patterns_logic$2463, arst={ }, srst={ }

3.63.2. Extracting gate netlist of module `\gost89_cfb_decrypt' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2468
Extracted 647 gates and 1326 wires to a netlist network with 679 inputs and 97 outputs.

3.63.2.1. Executing ABC.

3.63.3. Extracting gate netlist of module `\gost89_cfb_decrypt' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 357 gates and 488 wires to a netlist network with 130 inputs and 111 outputs.

3.63.3.1. Executing ABC.

3.63.4. Extracting gate netlist of module `\gost89_cfb_decrypt' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $verific$n347$15
Extracted 67 gates and 135 wires to a netlist network with 68 inputs and 65 outputs.

3.63.4.1. Executing ABC.

3.63.5. Extracting gate netlist of module `\gost89_cfb_decrypt' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by \ecb_encrypt.load_data
Extracted 130 gates and 197 wires to a netlist network with 67 inputs and 130 outputs.

3.63.5.1. Executing ABC.

3.63.6. Extracting gate netlist of module `\gost89_cfb_decrypt' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:194:make_patterns_logic$2456
Extracted 65 gates and 131 wires to a netlist network with 66 inputs and 65 outputs.

3.63.6.1. Executing ABC.

3.63.7. Extracting gate netlist of module `\gost89_cfb_decrypt' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:194:make_patterns_logic$2460, synchronously reset by $abc$6942$verific$n347$15
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 4 outputs.

3.63.7.1. Executing ABC.

3.63.8. Extracting gate netlist of module `\gost89_cfb_decrypt' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:194:make_patterns_logic$2463
Extracted 561 gates and 829 wires to a netlist network with 268 inputs and 33 outputs.

3.63.8.1. Executing ABC.

yosys> abc -dff

3.64. Executing ABC pass (technology mapping using ABC).

3.64.1. Summary of detected clock domains:
  176 cells in clk=\clk, en=$abc$7138$ecb_encrypt.load_data, arst={ }, srst={ }
  4 cells in clk=\clk, en=$abc$7591$auto$opt_dff.cc:194:make_patterns_logic$2460, arst={ }, srst=$abc$6942$verific$n347$15
  84 cells in clk=\clk, en=$abc$6942$verific$n347$15, arst={ }, srst={ }
  76 cells in clk=\clk, en=$abc$5720$auto$opt_dff.cc:219:make_patterns_logic$2468, arst={ }, srst={ }
  86 cells in clk=\clk, en=$abc$7397$auto$opt_dff.cc:194:make_patterns_logic$2456, arst={ }, srst={ }
  995 cells in clk=\clk, en={ }, arst={ }, srst={ }
  574 cells in clk=\clk, en=$abc$7598$auto$opt_dff.cc:194:make_patterns_logic$2463, arst={ }, srst={ }

3.64.2. Extracting gate netlist of module `\gost89_cfb_decrypt' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$7138$ecb_encrypt.load_data
Extracted 176 gates and 290 wires to a netlist network with 114 inputs and 129 outputs.

3.64.2.1. Executing ABC.

3.64.3. Extracting gate netlist of module `\gost89_cfb_decrypt' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$7591$auto$opt_dff.cc:194:make_patterns_logic$2460, synchronously reset by $abc$6942$verific$n347$15
Extracted 4 gates and 8 wires to a netlist network with 4 inputs and 4 outputs.

3.64.3.1. Executing ABC.

3.64.4. Extracting gate netlist of module `\gost89_cfb_decrypt' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$6942$verific$n347$15
Extracted 84 gates and 167 wires to a netlist network with 83 inputs and 65 outputs.

3.64.4.1. Executing ABC.

3.64.5. Extracting gate netlist of module `\gost89_cfb_decrypt' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5720$auto$opt_dff.cc:219:make_patterns_logic$2468
Extracted 76 gates and 153 wires to a netlist network with 77 inputs and 65 outputs.

3.64.5.1. Executing ABC.

3.64.6. Extracting gate netlist of module `\gost89_cfb_decrypt' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$7397$auto$opt_dff.cc:194:make_patterns_logic$2456
Extracted 86 gates and 174 wires to a netlist network with 88 inputs and 65 outputs.

3.64.6.1. Executing ABC.

3.64.7. Extracting gate netlist of module `\gost89_cfb_decrypt' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 963 gates and 1603 wires to a netlist network with 640 inputs and 138 outputs.

3.64.7.1. Executing ABC.

3.64.8. Extracting gate netlist of module `\gost89_cfb_decrypt' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$7598$auto$opt_dff.cc:194:make_patterns_logic$2463
Extracted 574 gates and 842 wires to a netlist network with 268 inputs and 33 outputs.

3.64.8.1. Executing ABC.

yosys> abc -dff

3.65. Executing ABC pass (technology mapping using ABC).

3.65.1. Summary of detected clock domains:
  159 cells in clk=\clk, en=$abc$8205$abc$7138$ecb_encrypt.load_data, arst={ }, srst={ }
  132 cells in clk=\clk, en=$abc$8665$abc$5720$auto$opt_dff.cc:219:make_patterns_logic$2468, arst={ }, srst={ }
  4 cells in clk=\clk, en=$abc$8463$abc$7591$auto$opt_dff.cc:194:make_patterns_logic$2460, arst={ }, srst=$abc$8470$abc$6942$verific$n347$15
  92 cells in clk=\clk, en=$abc$8861$abc$7397$auto$opt_dff.cc:194:make_patterns_logic$2456, arst={ }, srst={ }
  70 cells in clk=\clk, en=$abc$8470$abc$6942$verific$n347$15, arst={ }, srst={ }
  1013 cells in clk=\clk, en={ }, arst={ }, srst={ }
  491 cells in clk=\clk, en=$abc$10131$abc$7598$auto$opt_dff.cc:194:make_patterns_logic$2463, arst={ }, srst={ }

3.65.2. Extracting gate netlist of module `\gost89_cfb_decrypt' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$8205$abc$7138$ecb_encrypt.load_data
Extracted 159 gates and 259 wires to a netlist network with 100 inputs and 126 outputs.

3.65.2.1. Executing ABC.

3.65.3. Extracting gate netlist of module `\gost89_cfb_decrypt' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$8665$abc$5720$auto$opt_dff.cc:219:make_patterns_logic$2468
Extracted 132 gates and 267 wires to a netlist network with 135 inputs and 67 outputs.

3.65.3.1. Executing ABC.

3.65.4. Extracting gate netlist of module `\gost89_cfb_decrypt' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$8463$abc$7591$auto$opt_dff.cc:194:make_patterns_logic$2460, synchronously reset by $abc$8470$abc$6942$verific$n347$15
Extracted 4 gates and 8 wires to a netlist network with 4 inputs and 4 outputs.

3.65.4.1. Executing ABC.

3.65.5. Extracting gate netlist of module `\gost89_cfb_decrypt' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$8861$abc$7397$auto$opt_dff.cc:194:make_patterns_logic$2456
Extracted 92 gates and 165 wires to a netlist network with 73 inputs and 66 outputs.

3.65.5.1. Executing ABC.

3.65.6. Extracting gate netlist of module `\gost89_cfb_decrypt' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$8470$abc$6942$verific$n347$15
Extracted 70 gates and 141 wires to a netlist network with 71 inputs and 65 outputs.

3.65.6.1. Executing ABC.

3.65.7. Extracting gate netlist of module `\gost89_cfb_decrypt' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 981 gates and 1592 wires to a netlist network with 611 inputs and 114 outputs.

3.65.7.1. Executing ABC.

3.65.8. Extracting gate netlist of module `\gost89_cfb_decrypt' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$10131$abc$7598$auto$opt_dff.cc:194:make_patterns_logic$2463
Extracted 491 gates and 759 wires to a netlist network with 268 inputs and 33 outputs.

3.65.8.1. Executing ABC.

yosys> abc -dff

3.66. Executing ABC pass (technology mapping using ABC).

3.66.1. Summary of detected clock domains:
  4 cells in clk=\clk, en=$abc$11148$abc$8463$abc$7591$auto$opt_dff.cc:194:make_patterns_logic$2460, arst={ }, srst=$abc$11350$abc$8470$abc$6942$verific$n347$15
  231 cells in clk=\clk, en=$abc$10910$abc$8665$abc$5720$auto$opt_dff.cc:219:make_patterns_logic$2468, arst={ }, srst={ }
  926 cells in clk=\clk, en={ }, arst={ }, srst={ }
  129 cells in clk=\clk, en=$abc$10655$abc$8205$abc$7138$ecb_encrypt.load_data, arst={ }, srst={ }
  123 cells in clk=\clk, en=$abc$11155$abc$8861$abc$7397$auto$opt_dff.cc:194:make_patterns_logic$2456, arst={ }, srst={ }
  110 cells in clk=\clk, en=$abc$11350$abc$8470$abc$6942$verific$n347$15, arst={ }, srst={ }
  546 cells in clk=\clk, en=$abc$12605$abc$10131$abc$7598$auto$opt_dff.cc:194:make_patterns_logic$2463, arst={ }, srst={ }

3.66.2. Extracting gate netlist of module `\gost89_cfb_decrypt' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$11148$abc$8463$abc$7591$auto$opt_dff.cc:194:make_patterns_logic$2460, synchronously reset by $abc$11350$abc$8470$abc$6942$verific$n347$15
Extracted 4 gates and 8 wires to a netlist network with 4 inputs and 4 outputs.

3.66.2.1. Executing ABC.

3.66.3. Extracting gate netlist of module `\gost89_cfb_decrypt' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$10910$abc$8665$abc$5720$auto$opt_dff.cc:219:make_patterns_logic$2468
Extracted 231 gates and 424 wires to a netlist network with 193 inputs and 72 outputs.

3.66.3.1. Executing ABC.

3.66.4. Extracting gate netlist of module `\gost89_cfb_decrypt' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 894 gates and 1446 wires to a netlist network with 552 inputs and 126 outputs.

3.66.4.1. Executing ABC.

3.66.5. Extracting gate netlist of module `\gost89_cfb_decrypt' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$10655$abc$8205$abc$7138$ecb_encrypt.load_data
Extracted 129 gates and 210 wires to a netlist network with 81 inputs and 116 outputs.

3.66.5.1. Executing ABC.

3.66.6. Extracting gate netlist of module `\gost89_cfb_decrypt' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$11155$abc$8861$abc$7397$auto$opt_dff.cc:194:make_patterns_logic$2456
Extracted 123 gates and 218 wires to a netlist network with 95 inputs and 66 outputs.

3.66.6.1. Executing ABC.

3.66.7. Extracting gate netlist of module `\gost89_cfb_decrypt' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$11350$abc$8470$abc$6942$verific$n347$15
Extracted 110 gates and 221 wires to a netlist network with 111 inputs and 65 outputs.

3.66.7.1. Executing ABC.

3.66.8. Extracting gate netlist of module `\gost89_cfb_decrypt' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$12605$abc$10131$abc$7598$auto$opt_dff.cc:194:make_patterns_logic$2463
Extracted 546 gates and 814 wires to a netlist network with 268 inputs and 33 outputs.

3.66.8.1. Executing ABC.

yosys> opt_ffinv

3.67. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt -sat

3.68. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.68.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb_decrypt.
<suppressed ~18 debug messages>

yosys> opt_merge -nomux

3.68.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb_decrypt'.
<suppressed ~21 debug messages>
Removed a total of 7 cells.

yosys> opt_muxtree

3.68.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb_decrypt..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.68.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb_decrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.68.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb_decrypt'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.68.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $abc$13528$auto$blifparse.cc:362:parse_blif$13594 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$13528$li65_li65, Q = $abc$13528$lo65).
Adding EN signal on $abc$13528$auto$blifparse.cc:362:parse_blif$13591 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$13528$li62_li62, Q = $abc$13528$lo62).
Adding EN signal on $abc$13528$auto$blifparse.cc:362:parse_blif$13588 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$13528$li59_li59, Q = $abc$13528$lo59).
Adding EN signal on $abc$13528$auto$blifparse.cc:362:parse_blif$13593 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$13528$li64_li64, Q = $abc$13528$lo64).
Adding EN signal on $abc$13528$auto$blifparse.cc:362:parse_blif$13584 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$13528$li55_li55, Q = $abc$13528$lo55).
Adding EN signal on $abc$13528$auto$blifparse.cc:362:parse_blif$13583 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$13528$li54_li54, Q = $abc$13528$lo54).
Adding EN signal on $abc$13528$auto$blifparse.cc:362:parse_blif$13582 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$13528$li53_li53, Q = $abc$13528$lo53).
Adding EN signal on $abc$13528$auto$blifparse.cc:362:parse_blif$13581 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$13528$li52_li52, Q = $abc$13528$lo52).
Adding EN signal on $abc$13528$auto$blifparse.cc:362:parse_blif$13579 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$13528$li50_li50, Q = $abc$13528$lo50).
Adding EN signal on $abc$13528$auto$blifparse.cc:362:parse_blif$13578 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$13528$li49_li49, Q = $abc$13528$lo49).
Adding EN signal on $abc$13528$auto$blifparse.cc:362:parse_blif$13577 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$13528$li48_li48, Q = $abc$13528$lo48).
Adding EN signal on $abc$13528$auto$blifparse.cc:362:parse_blif$13570 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$13528$li41_li41, Q = $abc$13528$lo41).
Adding EN signal on $abc$13528$auto$blifparse.cc:362:parse_blif$13565 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$13528$li36_li36, Q = $abc$13528$lo36).
Adding EN signal on $abc$13528$auto$blifparse.cc:362:parse_blif$13598 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$13528$li69_li69, Q = $abc$13528$lo69).
Adding EN signal on $abc$13528$auto$blifparse.cc:362:parse_blif$13560 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$13528$li31_li31, Q = $abc$13528$lo31).
Adding EN signal on $abc$13528$auto$blifparse.cc:362:parse_blif$13557 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$13528$li28_li28, Q = $abc$13528$lo28).
Adding EN signal on $abc$13528$auto$blifparse.cc:362:parse_blif$13550 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$13528$li21_li21, Q = $abc$13528$lo21).
Adding EN signal on $abc$13528$auto$blifparse.cc:362:parse_blif$13549 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$13528$li20_li20, Q = $abc$13528$lo20).
Adding EN signal on $abc$13528$auto$blifparse.cc:362:parse_blif$13539 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$13528$li10_li10, Q = $abc$13528$lo10).

yosys> opt_clean

3.68.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb_decrypt..
Removed 0 unused cells and 13429 unused wires.
<suppressed ~17 debug messages>

yosys> opt_expr

3.68.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb_decrypt.
<suppressed ~38 debug messages>

3.68.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.68.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb_decrypt..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.68.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb_decrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.68.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb_decrypt'.
<suppressed ~54 debug messages>
Removed a total of 18 cells.

yosys> opt_dff -sat

3.68.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $abc$13528$auto$blifparse.cc:362:parse_blif$13568 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$11545$li26_li26, Q = $abc$11545$lo26).
Adding EN signal on $abc$13528$auto$blifparse.cc:362:parse_blif$13564 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$11545$li22_li22, Q = $abc$13528$lo35).
Adding EN signal on $abc$13528$auto$blifparse.cc:362:parse_blif$13563 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$11545$li21_li21, Q = $abc$11545$lo21).
Adding EN signal on $abc$13528$auto$blifparse.cc:362:parse_blif$13559 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$11545$li66_li66, Q = $abc$13528$lo30).
Adding EN signal on $abc$13528$auto$blifparse.cc:362:parse_blif$13558 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$11545$li41_li41, Q = $abc$13528$lo29).
Adding EN signal on $abc$13528$auto$blifparse.cc:362:parse_blif$13553 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$11545$li14_li14, Q = $abc$13528$lo24).
Adding EN signal on $abc$13528$auto$blifparse.cc:362:parse_blif$13547 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$11545$li10_li10, Q = $abc$13528$lo18).
Adding EN signal on $abc$13528$auto$blifparse.cc:362:parse_blif$13544 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$11545$li69_li69, Q = $abc$13528$lo15).
Adding EN signal on $abc$13528$auto$blifparse.cc:362:parse_blif$13537 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$11545$li35_li35, Q = $abc$11545$lo35).
Adding EN signal on $abc$13528$auto$blifparse.cc:362:parse_blif$13535 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$11545$li49_li49, Q = $abc$11545$lo49).
Adding EN signal on $abc$13528$auto$blifparse.cc:362:parse_blif$13533 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$11155$abc$9055$li63_li63, Q = $abc$13528$lo04).
Adding EN signal on $abc$13528$auto$blifparse.cc:362:parse_blif$13531 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$11155$abc$9055$li41_li41, Q = \ecb_encrypt.n1 [14]).
Adding EN signal on $abc$13528$auto$blifparse.cc:362:parse_blif$13530 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$11545$li47_li47, Q = $abc$13528$lo01).
Adding EN signal on $abc$13528$auto$blifparse.cc:362:parse_blif$13529 ($_DFF_P_) from module gost89_cfb_decrypt (D = $abc$11545$li50_li50, Q = $abc$13528$lo00).

yosys> opt_clean

3.68.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb_decrypt..
Removed 0 unused cells and 51 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.68.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb_decrypt.
<suppressed ~28 debug messages>

3.68.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.68.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb_decrypt..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.68.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb_decrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.68.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb_decrypt'.
<suppressed ~42 debug messages>
Removed a total of 14 cells.

yosys> opt_dff -sat

3.68.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.68.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb_decrypt..
Removed 0 unused cells and 28 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.68.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb_decrypt.

3.68.23. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.68.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb_decrypt..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.68.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb_decrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.68.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb_decrypt'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.68.27. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.68.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb_decrypt..

yosys> opt_expr

3.68.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb_decrypt.

3.68.30. Finished OPT passes. (There is nothing left to do.)

yosys> bmuxmap

3.69. Executing BMUXMAP pass.

yosys> demuxmap

3.70. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> abc -script /home/users/temp_dir/yosys_jHLGKA/abc_tmp_1.scr

3.71. Executing ABC pass (technology mapping using ABC).

3.71.1. Extracting gate netlist of module `\gost89_cfb_decrypt' to `<abc-temp-dir>/input.blif'..
Extracted 1719 gates and 2881 wires to a netlist network with 1161 inputs and 300 outputs.

3.71.1.1. Executing ABC.
DE:   #PIs = 1161  #Luts =   595  Max Lvl =   5  Avg Lvl =   2.31  [   0.39 sec. at Pass 0]
DE:   #PIs = 1161  #Luts =   568  Max Lvl =   5  Avg Lvl =   2.23  [   5.86 sec. at Pass 1]
DE:   #PIs = 1161  #Luts =   568  Max Lvl =   5  Avg Lvl =   2.23  [   2.33 sec. at Pass 2]
DE:   #PIs = 1161  #Luts =   568  Max Lvl =   5  Avg Lvl =   2.23  [   2.51 sec. at Pass 3]
DE:   #PIs = 1161  #Luts =   568  Max Lvl =   5  Avg Lvl =   2.23  [   2.43 sec. at Pass 4]
DE:   #PIs = 1161  #Luts =   568  Max Lvl =   5  Avg Lvl =   2.23  [   2.58 sec. at Pass 5]
DE:   #PIs = 1161  #Luts =   568  Max Lvl =   5  Avg Lvl =   2.23  [  10.79 sec. at Pass 6]
DE:   #PIs = 1161  #Luts =   568  Max Lvl =   5  Avg Lvl =   2.23  [   0.90 sec. at Pass 7]

yosys> opt_expr

3.72. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb_decrypt.

yosys> opt_merge -nomux

3.73. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb_decrypt'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.74. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb_decrypt..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.75. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb_decrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.76. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb_decrypt'.
Removed a total of 0 cells.

yosys> opt_share

3.77. Executing OPT_SHARE pass.

yosys> opt_dff

3.78. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.79. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb_decrypt..
Removed 0 unused cells and 2877 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.80. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb_decrypt.
MAX OPT ITERATION = 1

yosys> opt_ffinv

3.81. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> stat

3.82. Printing statistics.

=== gost89_cfb_decrypt ===

   Number of wires:                803
   Number of wire bits:           3969
   Number of public wires:          45
   Number of public wire bits:    3148
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                960
     $_DFFE_PP_                    321
     $_DFF_P_                       38
     $_SDFFE_PP0P_                   1
     $lut                          568
     adder_carry                    32


yosys> shregmap -minlen 8 -maxlen 20

3.83. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.84. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.85. Printing statistics.

=== gost89_cfb_decrypt ===

   Number of wires:                805
   Number of wire bits:           3971
   Number of public wires:          45
   Number of public wire bits:    3148
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                962
     $_DFFE_PP0P_                  321
     $_DFF_P_                       39
     $_MUX_                          2
     $lut                          568
     adder_carry                    32


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.86. Executing TECHMAP pass (map to technology primitives).

3.86.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.86.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.86.3. Continuing TECHMAP pass.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using extmapper simplemap for cells of type $lut.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~1385 debug messages>

yosys> opt_expr -mux_undef

3.87. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb_decrypt.
<suppressed ~11249 debug messages>

yosys> simplemap

3.88. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.89. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb_decrypt.

yosys> opt_merge

3.90. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb_decrypt'.
<suppressed ~8922 debug messages>
Removed a total of 2974 cells.

yosys> opt_dff -nodffe -nosdff

3.91. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.92. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb_decrypt..
Removed 0 unused cells and 3014 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.93. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.93.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb_decrypt.
<suppressed ~1061 debug messages>

yosys> opt_merge -nomux

3.93.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb_decrypt'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.93.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb_decrypt..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.93.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb_decrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.93.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb_decrypt'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.93.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.93.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb_decrypt..
Removed 0 unused cells and 68 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.93.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb_decrypt.

3.93.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.93.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb_decrypt..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.93.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb_decrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.93.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb_decrypt'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.93.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.93.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb_decrypt..

yosys> opt_expr

3.93.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb_decrypt.

3.93.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /home/users/temp_dir/yosys_jHLGKA/abc_tmp_2.scr

3.94. Executing ABC pass (technology mapping using ABC).

3.94.1. Extracting gate netlist of module `\gost89_cfb_decrypt' to `<abc-temp-dir>/input.blif'..
Extracted 2319 gates and 3482 wires to a netlist network with 1161 inputs and 300 outputs.

3.94.1.1. Executing ABC.
DE:   #PIs = 1161  #Luts =   568  Max Lvl =   5  Avg Lvl =   2.23  [   0.31 sec. at Pass 0]
DE:   #PIs = 1161  #Luts =   568  Max Lvl =   4  Avg Lvl =   2.22  [   4.20 sec. at Pass 1]
DE:   #PIs = 1161  #Luts =   568  Max Lvl =   4  Avg Lvl =   2.22  [   1.12 sec. at Pass 2]
DE:   #PIs = 1161  #Luts =   568  Max Lvl =   4  Avg Lvl =   2.22  [   1.93 sec. at Pass 3]
DE:   #PIs = 1161  #Luts =   568  Max Lvl =   4  Avg Lvl =   2.22  [   1.90 sec. at Pass 4]
DE:   #PIs = 1161  #Luts =   568  Max Lvl =   4  Avg Lvl =   2.22  [   2.04 sec. at Pass 5]
DE:   #PIs = 1161  #Luts =   568  Max Lvl =   4  Avg Lvl =   2.22  [   7.62 sec. at Pass 6]
DE:   #PIs = 1161  #Luts =   568  Max Lvl =   4  Avg Lvl =   2.22  [   0.74 sec. at Pass 7]

yosys> opt_expr

3.95. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb_decrypt.

yosys> opt_merge -nomux

3.96. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb_decrypt'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.97. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb_decrypt..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.98. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb_decrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.99. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb_decrypt'.
Removed a total of 0 cells.

yosys> opt_share

3.100. Executing OPT_SHARE pass.

yosys> opt_dff

3.101. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.102. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb_decrypt..
Removed 0 unused cells and 3137 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.103. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb_decrypt.
MAX OPT ITERATION = 1

yosys> hierarchy -check

3.104. Executing HIERARCHY pass (managing design hierarchy).

3.104.1. Analyzing design hierarchy..
Top module:  \gost89_cfb_decrypt

3.104.2. Analyzing design hierarchy..
Top module:  \gost89_cfb_decrypt
Removed 0 unused modules.

yosys> stat

3.105. Printing statistics.

=== gost89_cfb_decrypt ===

   Number of wires:                803
   Number of wire bits:           3969
   Number of public wires:          45
   Number of public wire bits:    3148
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                960
     $lut                          568
     adder_carry                    32
     dffsre                        360


yosys> opt_clean -purge

3.106. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb_decrypt..
Removed 0 unused cells and 24 unused wires.
<suppressed ~24 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.107. Executing Verilog backend.
Dumping module `\gost89_cfb_decrypt'.

Warnings: 1 unique messages, 1 total
End of script. Logfile hash: 95a68fbbb4, CPU: user 11.58s system 0.37s, MEM: 56.58 MB peak
Yosys 0.18+10 (git sha1 7a7a25778, gcc 9.1.0 -fPIC -Os)
Time spent: 95% 6x abc (203 sec), 1% 34x opt_expr (3 sec), ...
real 84.18
user 199.06
sys 14.71
