
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.70
 Yosys 0.18+10 (git sha1 c98b0e94e, gcc 9.4.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 05:39:28 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k sha_top.v sha512.v

yosys> verific -vlog2k sha_top.v sha512.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 05:39:28 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'sha_top.v'
VERIFIC-WARNING [VERI-1407] sha_top.v:28: attribute target identifier 'resource_sharing' not found in this scope
VERIFIC-WARNING [VERI-1407] sha_top.v:27: attribute target identifier 'resource_sharing' not found in this scope
VERIFIC-WARNING [VERI-1407] sha_top.v:26: attribute target identifier 'resource_sharing' not found in this scope
VERIFIC-WARNING [VERI-1407] sha_top.v:25: attribute target identifier 'resource_sharing' not found in this scope
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'sha512.v'

yosys> synth_rs -top sha_top -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.69

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v +/rapidsilicon/genesis/dsp_sim.v

3.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Successfully finished Verilog frontend.

3.3. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_sim.v' to AST representation.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\RS_DSP2_MULT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_ports'.
Generating RTLIL representation for module `\RS_DSP3'.
Generating RTLIL representation for module `\RS_DSP3_MULT'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_params'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top sha_top

3.4. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] sha_top.v:1: compiling module 'sha_top'
VERIFIC-INFO [VERI-1018] sha512.v:138: compiling module 'sha512'
VERIFIC-WARNING [VERI-1209] sha512.v:247: expression size 8 truncated to fit in target size 7
VERIFIC-WARNING [VERI-1209] sha512.v:1006: expression size 32 truncated to fit in target size 5
Importing module sha_top.
Importing module sha512.

3.4.1. Analyzing design hierarchy..
Top module:  \sha_top
Used module:     \sha512

3.4.2. Analyzing design hierarchy..
Top module:  \sha_top
Used module:     \sha512
Removed 0 unused modules.

yosys> proc

3.5. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.5.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.5.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.5.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.5.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.5.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.5.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.5.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.5.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.5.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.5.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.5.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.5.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module sha512.
<suppressed ~18 debug messages>
Optimizing module sha_top.

yosys> bmuxmap

3.6. Executing BMUXMAP pass.

yosys> demuxmap

3.7. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> flatten

3.8. Executing FLATTEN pass (flatten design).
Deleting now unused module sha512.
<suppressed ~4 debug messages>

yosys> bmuxmap

3.9. Executing BMUXMAP pass.

yosys> demuxmap

3.10. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> tribuf -logic -formal

3.11. Executing TRIBUF pass.

yosys> deminout

3.12. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.13. Executing OPT_EXPR pass (perform const folding).
Optimizing module sha_top.
<suppressed ~15184 debug messages>

yosys> opt_clean

3.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sha_top..
Removed 4 unused cells and 2324 unused wires.
<suppressed ~241 debug messages>

yosys> check

3.15. Executing CHECK pass (checking for obvious problems).
Checking module sha_top...
Found and reported 0 problems.

yosys> opt_expr

3.16. Executing OPT_EXPR pass (perform const folding).
Optimizing module sha_top.
<suppressed ~124 debug messages>

yosys> opt_merge -nomux

3.17. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sha_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.18. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sha_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~152 debug messages>

yosys> opt_reduce

3.19. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sha_top.
    New ctrl vector for $pmux cell $flatten\I0.$verific$select_739$sha512.v:980$1191: { $flatten\I0.$verific$n37066$315 $flatten\I0.$verific$n37067$316 $flatten\I0.$verific$n37068$317 $flatten\I0.$verific$n37069$318 $flatten\I0.$verific$n37070$319 $flatten\I0.$verific$n37071$320 $flatten\I0.$verific$n37072$321 $flatten\I0.$verific$n37073$322 $flatten\I0.$verific$n37074$323 $flatten\I0.$verific$n37075$324 $flatten\I0.$verific$n37076$325 $flatten\I0.$verific$n37077$326 }
    New ctrl vector for $pmux cell $flatten\I0.$verific$select_774$sha512.v:1002$1200: { $flatten\I0.$verific$n37673$328 $flatten\I0.$verific$n37674$329 $flatten\I0.$verific$n37675$330 $flatten\I0.$verific$n37676$331 $flatten\I0.$verific$n37066$315 $flatten\I0.$verific$n37067$316 $flatten\I0.$verific$n37068$317 $flatten\I0.$verific$n37069$318 $flatten\I0.$verific$n37070$319 $flatten\I0.$verific$n37071$320 $flatten\I0.$verific$n37072$321 $flatten\I0.$verific$n37073$322 $flatten\I0.$verific$n37074$323 $flatten\I0.$verific$n37075$324 $flatten\I0.$verific$n37076$325 $flatten\I0.$verific$n37077$326 }
    New ctrl vector for $pmux cell $flatten\I1.$verific$select_739$sha512.v:980$1191: { $flatten\I1.$verific$n37066$315 $flatten\I1.$verific$n37067$316 $flatten\I1.$verific$n37068$317 $flatten\I1.$verific$n37069$318 $flatten\I1.$verific$n37070$319 $flatten\I1.$verific$n37071$320 $flatten\I1.$verific$n37072$321 $flatten\I1.$verific$n37073$322 $flatten\I1.$verific$n37074$323 $flatten\I1.$verific$n37075$324 $flatten\I1.$verific$n37076$325 $flatten\I1.$verific$n37077$326 }
    New ctrl vector for $pmux cell $flatten\I1.$verific$select_774$sha512.v:1002$1200: { $flatten\I1.$verific$n37673$328 $flatten\I1.$verific$n37674$329 $flatten\I1.$verific$n37675$330 $flatten\I1.$verific$n37676$331 $flatten\I1.$verific$n37066$315 $flatten\I1.$verific$n37067$316 $flatten\I1.$verific$n37068$317 $flatten\I1.$verific$n37069$318 $flatten\I1.$verific$n37070$319 $flatten\I1.$verific$n37071$320 $flatten\I1.$verific$n37072$321 $flatten\I1.$verific$n37073$322 $flatten\I1.$verific$n37074$323 $flatten\I1.$verific$n37075$324 $flatten\I1.$verific$n37076$325 $flatten\I1.$verific$n37077$326 }
    New ctrl vector for $pmux cell $flatten\I2.$verific$select_739$sha512.v:980$1191: { $flatten\I2.$verific$n37066$315 $flatten\I2.$verific$n37067$316 $flatten\I2.$verific$n37068$317 $flatten\I2.$verific$n37069$318 $flatten\I2.$verific$n37070$319 $flatten\I2.$verific$n37071$320 $flatten\I2.$verific$n37072$321 $flatten\I2.$verific$n37073$322 $flatten\I2.$verific$n37074$323 $flatten\I2.$verific$n37075$324 $flatten\I2.$verific$n37076$325 $flatten\I2.$verific$n37077$326 }
    New ctrl vector for $pmux cell $flatten\I2.$verific$select_774$sha512.v:1002$1200: { $flatten\I2.$verific$n37673$328 $flatten\I2.$verific$n37674$329 $flatten\I2.$verific$n37675$330 $flatten\I2.$verific$n37676$331 $flatten\I2.$verific$n37066$315 $flatten\I2.$verific$n37067$316 $flatten\I2.$verific$n37068$317 $flatten\I2.$verific$n37069$318 $flatten\I2.$verific$n37070$319 $flatten\I2.$verific$n37071$320 $flatten\I2.$verific$n37072$321 $flatten\I2.$verific$n37073$322 $flatten\I2.$verific$n37074$323 $flatten\I2.$verific$n37075$324 $flatten\I2.$verific$n37076$325 $flatten\I2.$verific$n37077$326 }
    New ctrl vector for $pmux cell $flatten\I3.$verific$select_739$sha512.v:980$1191: { $flatten\I3.$verific$n37066$315 $flatten\I3.$verific$n37067$316 $flatten\I3.$verific$n37068$317 $flatten\I3.$verific$n37069$318 $flatten\I3.$verific$n37070$319 $flatten\I3.$verific$n37071$320 $flatten\I3.$verific$n37072$321 $flatten\I3.$verific$n37073$322 $flatten\I3.$verific$n37074$323 $flatten\I3.$verific$n37075$324 $flatten\I3.$verific$n37076$325 $flatten\I3.$verific$n37077$326 }
    New ctrl vector for $pmux cell $flatten\I3.$verific$select_774$sha512.v:1002$1200: { $flatten\I3.$verific$n37673$328 $flatten\I3.$verific$n37674$329 $flatten\I3.$verific$n37675$330 $flatten\I3.$verific$n37676$331 $flatten\I3.$verific$n37066$315 $flatten\I3.$verific$n37067$316 $flatten\I3.$verific$n37068$317 $flatten\I3.$verific$n37069$318 $flatten\I3.$verific$n37070$319 $flatten\I3.$verific$n37071$320 $flatten\I3.$verific$n37072$321 $flatten\I3.$verific$n37073$322 $flatten\I3.$verific$n37074$323 $flatten\I3.$verific$n37075$324 $flatten\I3.$verific$n37076$325 $flatten\I3.$verific$n37077$326 }
  Optimizing cells in module \sha_top.
Performed a total of 8 changes.

yosys> opt_merge

3.20. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sha_top'.
<suppressed ~2664 debug messages>
Removed a total of 888 cells.

yosys> opt_share

3.21. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.22. Executing OPT_DFF pass (perform DFF optimizations).
Removing never-active async load on $flatten\I3.$verific$text_o_reg$sha512.v:1014$1213 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I3.$verific$round_reg$sha512.v:824$1133 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I3.$verific$read_counter_reg$sha512.v:1014$1214 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I3.$verific$cmd_reg$sha512.v:211$931 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I3.$verific$Wt_reg$sha512.v:824$1150 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I3.$verific$W9_reg$sha512.v:824$1144 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I3.$verific$W8_reg$sha512.v:824$1143 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I3.$verific$W7_reg$sha512.v:824$1142 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I3.$verific$W6_reg$sha512.v:824$1141 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I3.$verific$W5_reg$sha512.v:824$1140 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I3.$verific$W4_reg$sha512.v:824$1139 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I3.$verific$W3_reg$sha512.v:824$1138 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I3.$verific$W2_reg$sha512.v:824$1137 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I3.$verific$W1_reg$sha512.v:824$1136 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I3.$verific$W14_reg$sha512.v:824$1149 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I3.$verific$W13_reg$sha512.v:824$1148 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I3.$verific$W12_reg$sha512.v:824$1147 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I3.$verific$W11_reg$sha512.v:824$1146 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I3.$verific$W10_reg$sha512.v:824$1145 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I3.$verific$W0_reg$sha512.v:824$1135 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I3.$verific$Kt_reg$sha512.v:938$1170 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I3.$verific$H_reg$sha512.v:824$1158 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I3.$verific$H7_reg$sha512.v:824$1166 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I3.$verific$H6_reg$sha512.v:824$1165 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I3.$verific$H5_reg$sha512.v:824$1164 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I3.$verific$H4_reg$sha512.v:824$1163 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I3.$verific$H3_reg$sha512.v:824$1162 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I3.$verific$H2_reg$sha512.v:824$1161 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I3.$verific$H1_reg$sha512.v:824$1160 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I3.$verific$H0_reg$sha512.v:824$1159 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I3.$verific$G_reg$sha512.v:824$1157 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I3.$verific$F_reg$sha512.v:824$1156 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I3.$verific$E_reg$sha512.v:824$1155 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I3.$verific$D_reg$sha512.v:824$1154 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I3.$verific$C_reg$sha512.v:824$1153 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I3.$verific$B_reg$sha512.v:824$1152 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I3.$verific$A_reg$sha512.v:824$1151 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I0.$verific$text_o_reg$sha512.v:1014$1213 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I0.$verific$round_reg$sha512.v:824$1133 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I0.$verific$read_counter_reg$sha512.v:1014$1214 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I2.$verific$text_o_reg$sha512.v:1014$1213 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I2.$verific$round_reg$sha512.v:824$1133 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I2.$verific$read_counter_reg$sha512.v:1014$1214 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I2.$verific$cmd_reg$sha512.v:211$931 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I2.$verific$Wt_reg$sha512.v:824$1150 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I2.$verific$W9_reg$sha512.v:824$1144 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I2.$verific$W8_reg$sha512.v:824$1143 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I2.$verific$W7_reg$sha512.v:824$1142 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I2.$verific$W6_reg$sha512.v:824$1141 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I2.$verific$W5_reg$sha512.v:824$1140 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I2.$verific$W4_reg$sha512.v:824$1139 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I2.$verific$W3_reg$sha512.v:824$1138 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I2.$verific$W2_reg$sha512.v:824$1137 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I2.$verific$W1_reg$sha512.v:824$1136 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I2.$verific$W14_reg$sha512.v:824$1149 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I2.$verific$W13_reg$sha512.v:824$1148 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I2.$verific$W12_reg$sha512.v:824$1147 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I2.$verific$W11_reg$sha512.v:824$1146 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I2.$verific$W10_reg$sha512.v:824$1145 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I2.$verific$W0_reg$sha512.v:824$1135 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I2.$verific$Kt_reg$sha512.v:938$1170 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I2.$verific$H_reg$sha512.v:824$1158 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I2.$verific$H7_reg$sha512.v:824$1166 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I2.$verific$H6_reg$sha512.v:824$1165 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I2.$verific$H5_reg$sha512.v:824$1164 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I2.$verific$H4_reg$sha512.v:824$1163 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I2.$verific$H3_reg$sha512.v:824$1162 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I2.$verific$H2_reg$sha512.v:824$1161 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I2.$verific$H1_reg$sha512.v:824$1160 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I2.$verific$H0_reg$sha512.v:824$1159 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I2.$verific$G_reg$sha512.v:824$1157 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I2.$verific$F_reg$sha512.v:824$1156 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I2.$verific$E_reg$sha512.v:824$1155 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I2.$verific$D_reg$sha512.v:824$1154 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I2.$verific$C_reg$sha512.v:824$1153 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I2.$verific$B_reg$sha512.v:824$1152 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I2.$verific$A_reg$sha512.v:824$1151 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I0.$verific$cmd_reg$sha512.v:211$931 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I0.$verific$Wt_reg$sha512.v:824$1150 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I0.$verific$W9_reg$sha512.v:824$1144 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I0.$verific$W8_reg$sha512.v:824$1143 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I0.$verific$W7_reg$sha512.v:824$1142 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I0.$verific$W6_reg$sha512.v:824$1141 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I0.$verific$W5_reg$sha512.v:824$1140 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I0.$verific$W4_reg$sha512.v:824$1139 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I0.$verific$W3_reg$sha512.v:824$1138 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I0.$verific$W2_reg$sha512.v:824$1137 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I0.$verific$W1_reg$sha512.v:824$1136 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I0.$verific$W14_reg$sha512.v:824$1149 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I0.$verific$W13_reg$sha512.v:824$1148 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I0.$verific$W12_reg$sha512.v:824$1147 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I0.$verific$W11_reg$sha512.v:824$1146 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I0.$verific$W10_reg$sha512.v:824$1145 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I0.$verific$W0_reg$sha512.v:824$1135 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I0.$verific$Kt_reg$sha512.v:938$1170 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I0.$verific$H_reg$sha512.v:824$1158 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I0.$verific$H7_reg$sha512.v:824$1166 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I0.$verific$H6_reg$sha512.v:824$1165 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I0.$verific$H5_reg$sha512.v:824$1164 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I0.$verific$H4_reg$sha512.v:824$1163 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I0.$verific$H3_reg$sha512.v:824$1162 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I0.$verific$H2_reg$sha512.v:824$1161 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I0.$verific$H1_reg$sha512.v:824$1160 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I0.$verific$H0_reg$sha512.v:824$1159 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I0.$verific$G_reg$sha512.v:824$1157 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I0.$verific$F_reg$sha512.v:824$1156 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I0.$verific$E_reg$sha512.v:824$1155 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I0.$verific$D_reg$sha512.v:824$1154 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I0.$verific$C_reg$sha512.v:824$1153 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I0.$verific$B_reg$sha512.v:824$1152 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I0.$verific$A_reg$sha512.v:824$1151 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I1.$verific$text_o_reg$sha512.v:1014$1213 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I1.$verific$round_reg$sha512.v:824$1133 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I1.$verific$read_counter_reg$sha512.v:1014$1214 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I1.$verific$cmd_reg$sha512.v:211$931 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I1.$verific$Wt_reg$sha512.v:824$1150 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I1.$verific$W9_reg$sha512.v:824$1144 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I1.$verific$W8_reg$sha512.v:824$1143 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I1.$verific$W7_reg$sha512.v:824$1142 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I1.$verific$W6_reg$sha512.v:824$1141 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I1.$verific$W5_reg$sha512.v:824$1140 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I1.$verific$W4_reg$sha512.v:824$1139 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I1.$verific$W3_reg$sha512.v:824$1138 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I1.$verific$W2_reg$sha512.v:824$1137 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I1.$verific$W1_reg$sha512.v:824$1136 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I1.$verific$W14_reg$sha512.v:824$1149 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I1.$verific$W13_reg$sha512.v:824$1148 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I1.$verific$W12_reg$sha512.v:824$1147 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I1.$verific$W11_reg$sha512.v:824$1146 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I1.$verific$W10_reg$sha512.v:824$1145 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I1.$verific$W0_reg$sha512.v:824$1135 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I1.$verific$Kt_reg$sha512.v:938$1170 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I1.$verific$H_reg$sha512.v:824$1158 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I1.$verific$H7_reg$sha512.v:824$1166 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I1.$verific$H6_reg$sha512.v:824$1165 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I1.$verific$H5_reg$sha512.v:824$1164 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I1.$verific$H4_reg$sha512.v:824$1163 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I1.$verific$H3_reg$sha512.v:824$1162 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I1.$verific$H2_reg$sha512.v:824$1161 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I1.$verific$H1_reg$sha512.v:824$1160 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I1.$verific$H0_reg$sha512.v:824$1159 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I1.$verific$G_reg$sha512.v:824$1157 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I1.$verific$F_reg$sha512.v:824$1156 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I1.$verific$E_reg$sha512.v:824$1155 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I1.$verific$D_reg$sha512.v:824$1154 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I1.$verific$C_reg$sha512.v:824$1153 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I1.$verific$B_reg$sha512.v:824$1152 ($aldff) from module sha_top.
Removing never-active async load on $flatten\I1.$verific$A_reg$sha512.v:824$1151 ($aldff) from module sha_top.

yosys> opt_clean

3.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sha_top..
Removed 16 unused cells and 80 unused wires.
<suppressed ~17 debug messages>

yosys> opt_expr

3.24. Executing OPT_EXPR pass (perform const folding).
Optimizing module sha_top.
<suppressed ~108 debug messages>

yosys> opt_muxtree

3.25. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sha_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~220 debug messages>

yosys> opt_reduce

3.26. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sha_top.
Performed a total of 0 changes.

yosys> opt_merge

3.27. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sha_top'.
Removed a total of 0 cells.

yosys> opt_share

3.28. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.29. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sha_top..

yosys> opt_expr

3.31. Executing OPT_EXPR pass (perform const folding).
Optimizing module sha_top.
MAX OPT ITERATION = 2

yosys> fsm -encoding binary

3.32. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.32.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking sha_top.I0.Kt as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking sha_top.I1.Kt as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking sha_top.I2.Kt as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking sha_top.I3.Kt as FSM state register:
    Users of register don't seem to benefit from recoding.

yosys> fsm_extract

3.32.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.32.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.32.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sha_top..

yosys> fsm_opt

3.32.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.32.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.32.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.32.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt_expr

3.33. Executing OPT_EXPR pass (perform const folding).
Optimizing module sha_top.

yosys> opt_merge -nomux

3.34. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sha_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.35. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sha_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~220 debug messages>

yosys> opt_reduce

3.36. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sha_top.
Performed a total of 0 changes.

yosys> opt_merge

3.37. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sha_top'.
Removed a total of 0 cells.

yosys> opt_share

3.38. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.39. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\I3.$verific$text_o_reg$sha512.v:1014$1213 ($dff) from module sha_top (D = $flatten\I3.$verific$n37887$916, Q = \I3.text_o).
Adding EN signal on $flatten\I3.$verific$read_counter_reg$sha512.v:1014$1214 ($dff) from module sha_top (D = $flatten\I3.$verific$n37920$917, Q = \I3.read_counter).
Adding EN signal on $flatten\I3.$verific$cmd_reg$sha512.v:211$931 ($dff) from module sha_top (D = $flatten\I3.$verific$n35$338 [3:2], Q = \I3.cmd [3:2]).
Adding EN signal on $flatten\I3.$verific$cmd_reg$sha512.v:211$931 ($dff) from module sha_top (D = $flatten\I3.$verific$n35$338 [1:0], Q = \I3.cmd [1:0]).
Adding EN signal on $flatten\I3.$verific$cmd_reg$sha512.v:211$931 ($dff) from module sha_top (D = $flatten\I3.$verific$n35$338 [4], Q = \I3.cmd [4]).
Adding EN signal on $flatten\I3.$verific$busy_reg$sha512.v:824$1134 ($dff) from module sha_top (D = $flatten\I3.$verific$n25842$313, Q = \I3.busy).
Adding EN signal on $flatten\I3.$verific$Wt_reg$sha512.v:824$1150 ($dff) from module sha_top (D = $flatten\I3.$verific$n26818$756 [31:0], Q = \I3.Wt [31:0]).
Adding EN signal on $flatten\I3.$verific$Wt_reg$sha512.v:824$1150 ($dff) from module sha_top (D = $flatten\I3.$verific$n26818$756 [63:32], Q = \I3.Wt [63:32]).
Adding EN signal on $flatten\I3.$verific$W9_reg$sha512.v:824$1144 ($dff) from module sha_top (D = $flatten\I3.$verific$n26428$750 [63:32], Q = \I3.W9 [63:32]).
Adding EN signal on $flatten\I3.$verific$W9_reg$sha512.v:824$1144 ($dff) from module sha_top (D = $flatten\I3.$verific$n26428$750 [31:0], Q = \I3.W9 [31:0]).
Adding EN signal on $flatten\I3.$verific$W8_reg$sha512.v:824$1143 ($dff) from module sha_top (D = $flatten\I3.$verific$n26363$749 [63:32], Q = \I3.W8 [63:32]).
Adding EN signal on $flatten\I3.$verific$W8_reg$sha512.v:824$1143 ($dff) from module sha_top (D = $flatten\I3.$verific$n26363$749 [31:0], Q = \I3.W8 [31:0]).
Adding EN signal on $flatten\I3.$verific$W7_reg$sha512.v:824$1142 ($dff) from module sha_top (D = $flatten\I3.$verific$n26298$748 [63:32], Q = \I3.W7 [63:32]).
Adding EN signal on $flatten\I3.$verific$W7_reg$sha512.v:824$1142 ($dff) from module sha_top (D = $flatten\I3.$verific$n26298$748 [31:0], Q = \I3.W7 [31:0]).
Adding EN signal on $flatten\I3.$verific$W6_reg$sha512.v:824$1141 ($dff) from module sha_top (D = $flatten\I3.$verific$n26233$747 [63:32], Q = \I3.W6 [63:32]).
Adding EN signal on $flatten\I3.$verific$W6_reg$sha512.v:824$1141 ($dff) from module sha_top (D = $flatten\I3.$verific$n26233$747 [31:0], Q = \I3.W6 [31:0]).
Adding EN signal on $flatten\I3.$verific$W5_reg$sha512.v:824$1140 ($dff) from module sha_top (D = $flatten\I3.$verific$n26168$746 [63:32], Q = \I3.W5 [63:32]).
Adding EN signal on $flatten\I3.$verific$W5_reg$sha512.v:824$1140 ($dff) from module sha_top (D = $flatten\I3.$verific$n26168$746 [31:0], Q = \I3.W5 [31:0]).
Adding EN signal on $flatten\I3.$verific$W4_reg$sha512.v:824$1139 ($dff) from module sha_top (D = $flatten\I3.$verific$n26103$745 [63:32], Q = \I3.W4 [63:32]).
Adding EN signal on $flatten\I3.$verific$W4_reg$sha512.v:824$1139 ($dff) from module sha_top (D = $flatten\I3.$verific$n26103$745 [31:0], Q = \I3.W4 [31:0]).
Adding EN signal on $flatten\I3.$verific$W3_reg$sha512.v:824$1138 ($dff) from module sha_top (D = $flatten\I3.$verific$n26038$744 [63:32], Q = \I3.W3 [63:32]).
Adding EN signal on $flatten\I3.$verific$W3_reg$sha512.v:824$1138 ($dff) from module sha_top (D = $flatten\I3.$verific$n26038$744 [31:0], Q = \I3.W3 [31:0]).
Adding EN signal on $flatten\I3.$verific$W2_reg$sha512.v:824$1137 ($dff) from module sha_top (D = $flatten\I3.$verific$n25973$743 [63:32], Q = \I3.W2 [63:32]).
Adding EN signal on $flatten\I3.$verific$W2_reg$sha512.v:824$1137 ($dff) from module sha_top (D = $flatten\I3.$verific$n25973$743 [31:0], Q = \I3.W2 [31:0]).
Adding EN signal on $flatten\I3.$verific$W1_reg$sha512.v:824$1136 ($dff) from module sha_top (D = $flatten\I3.$verific$n25908$742 [63:32], Q = \I3.W1 [63:32]).
Adding EN signal on $flatten\I3.$verific$W1_reg$sha512.v:824$1136 ($dff) from module sha_top (D = $flatten\I3.$verific$n25908$742 [31:0], Q = \I3.W1 [31:0]).
Adding EN signal on $flatten\I3.$verific$W14_reg$sha512.v:824$1149 ($dff) from module sha_top (D = $flatten\I3.$verific$n26753$755 [63:32], Q = \I3.W14 [63:32]).
Adding EN signal on $flatten\I3.$verific$W14_reg$sha512.v:824$1149 ($dff) from module sha_top (D = $flatten\I3.$verific$n26753$755 [31:0], Q = \I3.W14 [31:0]).
Adding EN signal on $flatten\I3.$verific$W13_reg$sha512.v:824$1148 ($dff) from module sha_top (D = $flatten\I3.$verific$n26688$754 [63:32], Q = \I3.W13 [63:32]).
Adding EN signal on $flatten\I3.$verific$W13_reg$sha512.v:824$1148 ($dff) from module sha_top (D = $flatten\I3.$verific$n26688$754 [31:0], Q = \I3.W13 [31:0]).
Adding EN signal on $flatten\I3.$verific$W12_reg$sha512.v:824$1147 ($dff) from module sha_top (D = $flatten\I3.$verific$n26623$753 [63:32], Q = \I3.W12 [63:32]).
Adding EN signal on $flatten\I3.$verific$W12_reg$sha512.v:824$1147 ($dff) from module sha_top (D = $flatten\I3.$verific$n26623$753 [31:0], Q = \I3.W12 [31:0]).
Adding EN signal on $flatten\I3.$verific$W11_reg$sha512.v:824$1146 ($dff) from module sha_top (D = $flatten\I3.$verific$n26558$752 [63:32], Q = \I3.W11 [63:32]).
Adding EN signal on $flatten\I3.$verific$W11_reg$sha512.v:824$1146 ($dff) from module sha_top (D = $flatten\I3.$verific$n26558$752 [31:0], Q = \I3.W11 [31:0]).
Adding EN signal on $flatten\I3.$verific$W10_reg$sha512.v:824$1145 ($dff) from module sha_top (D = $flatten\I3.$verific$n26493$751 [63:32], Q = \I3.W10 [63:32]).
Adding EN signal on $flatten\I3.$verific$W10_reg$sha512.v:824$1145 ($dff) from module sha_top (D = $flatten\I3.$verific$n26493$751 [31:0], Q = \I3.W10 [31:0]).
Adding EN signal on $flatten\I3.$verific$W0_reg$sha512.v:824$1135 ($dff) from module sha_top (D = $flatten\I3.$verific$n25843$741 [31:0], Q = \I3.W0 [31:0]).
Adding EN signal on $flatten\I3.$verific$W0_reg$sha512.v:824$1135 ($dff) from module sha_top (D = $flatten\I3.$verific$n25843$741 [63:32], Q = \I3.W0 [63:32]).
Adding EN signal on $flatten\I3.$verific$H_reg$sha512.v:824$1158 ($dff) from module sha_top (D = $flatten\I3.$verific$n27338$764, Q = \I3.H).
Adding EN signal on $flatten\I3.$verific$H7_reg$sha512.v:824$1166 ($dff) from module sha_top (D = $flatten\I3.$verific$n27858$772, Q = \I3.H7).
Adding EN signal on $flatten\I3.$verific$H6_reg$sha512.v:824$1165 ($dff) from module sha_top (D = $flatten\I3.$verific$n27793$771, Q = \I3.H6).
Adding EN signal on $flatten\I3.$verific$H5_reg$sha512.v:824$1164 ($dff) from module sha_top (D = $flatten\I3.$verific$n27728$770, Q = \I3.H5).
Adding EN signal on $flatten\I3.$verific$H4_reg$sha512.v:824$1163 ($dff) from module sha_top (D = $flatten\I3.$verific$n27663$769, Q = \I3.H4).
Adding EN signal on $flatten\I3.$verific$H3_reg$sha512.v:824$1162 ($dff) from module sha_top (D = $flatten\I3.$verific$n27598$768, Q = \I3.H3).
Adding EN signal on $flatten\I3.$verific$H2_reg$sha512.v:824$1161 ($dff) from module sha_top (D = $flatten\I3.$verific$n27533$767, Q = \I3.H2).
Adding EN signal on $flatten\I3.$verific$H1_reg$sha512.v:824$1160 ($dff) from module sha_top (D = $flatten\I3.$verific$n27468$766, Q = \I3.H1).
Adding EN signal on $flatten\I3.$verific$H0_reg$sha512.v:824$1159 ($dff) from module sha_top (D = $flatten\I3.$verific$n27403$765, Q = \I3.H0).
Adding EN signal on $flatten\I3.$verific$G_reg$sha512.v:824$1157 ($dff) from module sha_top (D = $flatten\I3.$verific$n27273$763, Q = \I3.G).
Adding EN signal on $flatten\I3.$verific$F_reg$sha512.v:824$1156 ($dff) from module sha_top (D = $flatten\I3.$verific$n27208$762, Q = \I3.F).
Adding EN signal on $flatten\I3.$verific$E_reg$sha512.v:824$1155 ($dff) from module sha_top (D = $flatten\I3.$verific$n27143$761, Q = \I3.E).
Adding EN signal on $flatten\I3.$verific$D_reg$sha512.v:824$1154 ($dff) from module sha_top (D = $flatten\I3.$verific$n27078$760, Q = \I3.D).
Adding EN signal on $flatten\I3.$verific$C_reg$sha512.v:824$1153 ($dff) from module sha_top (D = $flatten\I3.$verific$n27013$759, Q = \I3.C).
Adding EN signal on $flatten\I3.$verific$B_reg$sha512.v:824$1152 ($dff) from module sha_top (D = $flatten\I3.$verific$n26948$758, Q = \I3.B).
Adding EN signal on $flatten\I3.$verific$A_reg$sha512.v:824$1151 ($dff) from module sha_top (D = $flatten\I3.$verific$n26883$757, Q = \I3.A).
Adding EN signal on $flatten\I2.$verific$text_o_reg$sha512.v:1014$1213 ($dff) from module sha_top (D = $flatten\I2.$verific$n37887$916, Q = \I2.text_o).
Adding EN signal on $flatten\I2.$verific$read_counter_reg$sha512.v:1014$1214 ($dff) from module sha_top (D = $flatten\I2.$verific$n37920$917, Q = \I2.read_counter).
Adding EN signal on $flatten\I2.$verific$cmd_reg$sha512.v:211$931 ($dff) from module sha_top (D = $flatten\I2.$verific$n35$338 [3:2], Q = \I2.cmd [3:2]).
Adding EN signal on $flatten\I2.$verific$cmd_reg$sha512.v:211$931 ($dff) from module sha_top (D = $flatten\I2.$verific$n35$338 [1:0], Q = \I2.cmd [1:0]).
Adding EN signal on $flatten\I2.$verific$cmd_reg$sha512.v:211$931 ($dff) from module sha_top (D = $flatten\I2.$verific$n35$338 [4], Q = \I2.cmd [4]).
Adding EN signal on $flatten\I2.$verific$busy_reg$sha512.v:824$1134 ($dff) from module sha_top (D = $flatten\I2.$verific$n25842$313, Q = \I2.busy).
Adding EN signal on $flatten\I2.$verific$Wt_reg$sha512.v:824$1150 ($dff) from module sha_top (D = $flatten\I2.$verific$n26818$756 [31:0], Q = \I2.Wt [31:0]).
Adding EN signal on $flatten\I2.$verific$Wt_reg$sha512.v:824$1150 ($dff) from module sha_top (D = $flatten\I2.$verific$n26818$756 [63:32], Q = \I2.Wt [63:32]).
Adding EN signal on $flatten\I2.$verific$W9_reg$sha512.v:824$1144 ($dff) from module sha_top (D = $flatten\I2.$verific$n26428$750 [63:32], Q = \I2.W9 [63:32]).
Adding EN signal on $flatten\I2.$verific$W9_reg$sha512.v:824$1144 ($dff) from module sha_top (D = $flatten\I2.$verific$n26428$750 [31:0], Q = \I2.W9 [31:0]).
Adding EN signal on $flatten\I2.$verific$W8_reg$sha512.v:824$1143 ($dff) from module sha_top (D = $flatten\I2.$verific$n26363$749 [63:32], Q = \I2.W8 [63:32]).
Adding EN signal on $flatten\I2.$verific$W8_reg$sha512.v:824$1143 ($dff) from module sha_top (D = $flatten\I2.$verific$n26363$749 [31:0], Q = \I2.W8 [31:0]).
Adding EN signal on $flatten\I2.$verific$W7_reg$sha512.v:824$1142 ($dff) from module sha_top (D = $flatten\I2.$verific$n26298$748 [63:32], Q = \I2.W7 [63:32]).
Adding EN signal on $flatten\I2.$verific$W7_reg$sha512.v:824$1142 ($dff) from module sha_top (D = $flatten\I2.$verific$n26298$748 [31:0], Q = \I2.W7 [31:0]).
Adding EN signal on $flatten\I2.$verific$W6_reg$sha512.v:824$1141 ($dff) from module sha_top (D = $flatten\I2.$verific$n26233$747 [63:32], Q = \I2.W6 [63:32]).
Adding EN signal on $flatten\I2.$verific$W6_reg$sha512.v:824$1141 ($dff) from module sha_top (D = $flatten\I2.$verific$n26233$747 [31:0], Q = \I2.W6 [31:0]).
Adding EN signal on $flatten\I2.$verific$W5_reg$sha512.v:824$1140 ($dff) from module sha_top (D = $flatten\I2.$verific$n26168$746 [63:32], Q = \I2.W5 [63:32]).
Adding EN signal on $flatten\I2.$verific$W5_reg$sha512.v:824$1140 ($dff) from module sha_top (D = $flatten\I2.$verific$n26168$746 [31:0], Q = \I2.W5 [31:0]).
Adding EN signal on $flatten\I2.$verific$W4_reg$sha512.v:824$1139 ($dff) from module sha_top (D = $flatten\I2.$verific$n26103$745 [63:32], Q = \I2.W4 [63:32]).
Adding EN signal on $flatten\I2.$verific$W4_reg$sha512.v:824$1139 ($dff) from module sha_top (D = $flatten\I2.$verific$n26103$745 [31:0], Q = \I2.W4 [31:0]).
Adding EN signal on $flatten\I2.$verific$W3_reg$sha512.v:824$1138 ($dff) from module sha_top (D = $flatten\I2.$verific$n26038$744 [63:32], Q = \I2.W3 [63:32]).
Adding EN signal on $flatten\I2.$verific$W3_reg$sha512.v:824$1138 ($dff) from module sha_top (D = $flatten\I2.$verific$n26038$744 [31:0], Q = \I2.W3 [31:0]).
Adding EN signal on $flatten\I2.$verific$W2_reg$sha512.v:824$1137 ($dff) from module sha_top (D = $flatten\I2.$verific$n25973$743 [63:32], Q = \I2.W2 [63:32]).
Adding EN signal on $flatten\I2.$verific$W2_reg$sha512.v:824$1137 ($dff) from module sha_top (D = $flatten\I2.$verific$n25973$743 [31:0], Q = \I2.W2 [31:0]).
Adding EN signal on $flatten\I2.$verific$W1_reg$sha512.v:824$1136 ($dff) from module sha_top (D = $flatten\I2.$verific$n25908$742 [63:32], Q = \I2.W1 [63:32]).
Adding EN signal on $flatten\I2.$verific$W1_reg$sha512.v:824$1136 ($dff) from module sha_top (D = $flatten\I2.$verific$n25908$742 [31:0], Q = \I2.W1 [31:0]).
Adding EN signal on $flatten\I2.$verific$W14_reg$sha512.v:824$1149 ($dff) from module sha_top (D = $flatten\I2.$verific$n26753$755 [63:32], Q = \I2.W14 [63:32]).
Adding EN signal on $flatten\I2.$verific$W14_reg$sha512.v:824$1149 ($dff) from module sha_top (D = $flatten\I2.$verific$n26753$755 [31:0], Q = \I2.W14 [31:0]).
Adding EN signal on $flatten\I2.$verific$W13_reg$sha512.v:824$1148 ($dff) from module sha_top (D = $flatten\I2.$verific$n26688$754 [63:32], Q = \I2.W13 [63:32]).
Adding EN signal on $flatten\I2.$verific$W13_reg$sha512.v:824$1148 ($dff) from module sha_top (D = $flatten\I2.$verific$n26688$754 [31:0], Q = \I2.W13 [31:0]).
Adding EN signal on $flatten\I2.$verific$W12_reg$sha512.v:824$1147 ($dff) from module sha_top (D = $flatten\I2.$verific$n26623$753 [63:32], Q = \I2.W12 [63:32]).
Adding EN signal on $flatten\I2.$verific$W12_reg$sha512.v:824$1147 ($dff) from module sha_top (D = $flatten\I2.$verific$n26623$753 [31:0], Q = \I2.W12 [31:0]).
Adding EN signal on $flatten\I2.$verific$W11_reg$sha512.v:824$1146 ($dff) from module sha_top (D = $flatten\I2.$verific$n26558$752 [63:32], Q = \I2.W11 [63:32]).
Adding EN signal on $flatten\I2.$verific$W11_reg$sha512.v:824$1146 ($dff) from module sha_top (D = $flatten\I2.$verific$n26558$752 [31:0], Q = \I2.W11 [31:0]).
Adding EN signal on $flatten\I2.$verific$W10_reg$sha512.v:824$1145 ($dff) from module sha_top (D = $flatten\I2.$verific$n26493$751 [63:32], Q = \I2.W10 [63:32]).
Adding EN signal on $flatten\I2.$verific$W10_reg$sha512.v:824$1145 ($dff) from module sha_top (D = $flatten\I2.$verific$n26493$751 [31:0], Q = \I2.W10 [31:0]).
Adding EN signal on $flatten\I2.$verific$W0_reg$sha512.v:824$1135 ($dff) from module sha_top (D = $flatten\I2.$verific$n25843$741 [31:0], Q = \I2.W0 [31:0]).
Adding EN signal on $flatten\I2.$verific$W0_reg$sha512.v:824$1135 ($dff) from module sha_top (D = $flatten\I2.$verific$n25843$741 [63:32], Q = \I2.W0 [63:32]).
Adding EN signal on $flatten\I2.$verific$H_reg$sha512.v:824$1158 ($dff) from module sha_top (D = $flatten\I2.$verific$n27338$764, Q = \I2.H).
Adding EN signal on $flatten\I2.$verific$H7_reg$sha512.v:824$1166 ($dff) from module sha_top (D = $flatten\I2.$verific$n27858$772, Q = \I2.H7).
Adding EN signal on $flatten\I2.$verific$H6_reg$sha512.v:824$1165 ($dff) from module sha_top (D = $flatten\I2.$verific$n27793$771, Q = \I2.H6).
Adding EN signal on $flatten\I2.$verific$H5_reg$sha512.v:824$1164 ($dff) from module sha_top (D = $flatten\I2.$verific$n27728$770, Q = \I2.H5).
Adding EN signal on $flatten\I2.$verific$H4_reg$sha512.v:824$1163 ($dff) from module sha_top (D = $flatten\I2.$verific$n27663$769, Q = \I2.H4).
Adding EN signal on $flatten\I2.$verific$H3_reg$sha512.v:824$1162 ($dff) from module sha_top (D = $flatten\I2.$verific$n27598$768, Q = \I2.H3).
Adding EN signal on $flatten\I2.$verific$H2_reg$sha512.v:824$1161 ($dff) from module sha_top (D = $flatten\I2.$verific$n27533$767, Q = \I2.H2).
Adding EN signal on $flatten\I2.$verific$H1_reg$sha512.v:824$1160 ($dff) from module sha_top (D = $flatten\I2.$verific$n27468$766, Q = \I2.H1).
Adding EN signal on $flatten\I2.$verific$H0_reg$sha512.v:824$1159 ($dff) from module sha_top (D = $flatten\I2.$verific$n27403$765, Q = \I2.H0).
Adding EN signal on $flatten\I2.$verific$G_reg$sha512.v:824$1157 ($dff) from module sha_top (D = $flatten\I2.$verific$n27273$763, Q = \I2.G).
Adding EN signal on $flatten\I2.$verific$F_reg$sha512.v:824$1156 ($dff) from module sha_top (D = $flatten\I2.$verific$n27208$762, Q = \I2.F).
Adding EN signal on $flatten\I2.$verific$E_reg$sha512.v:824$1155 ($dff) from module sha_top (D = $flatten\I2.$verific$n27143$761, Q = \I2.E).
Adding EN signal on $flatten\I2.$verific$D_reg$sha512.v:824$1154 ($dff) from module sha_top (D = $flatten\I2.$verific$n27078$760, Q = \I2.D).
Adding EN signal on $flatten\I2.$verific$C_reg$sha512.v:824$1153 ($dff) from module sha_top (D = $flatten\I2.$verific$n27013$759, Q = \I2.C).
Adding EN signal on $flatten\I2.$verific$B_reg$sha512.v:824$1152 ($dff) from module sha_top (D = $flatten\I2.$verific$n26948$758, Q = \I2.B).
Adding EN signal on $flatten\I2.$verific$A_reg$sha512.v:824$1151 ($dff) from module sha_top (D = $flatten\I2.$verific$n26883$757, Q = \I2.A).
Adding EN signal on $flatten\I1.$verific$text_o_reg$sha512.v:1014$1213 ($dff) from module sha_top (D = $flatten\I1.$verific$n37887$916, Q = \I1.text_o).
Adding EN signal on $flatten\I1.$verific$read_counter_reg$sha512.v:1014$1214 ($dff) from module sha_top (D = $flatten\I1.$verific$n37920$917, Q = \I1.read_counter).
Adding EN signal on $flatten\I1.$verific$cmd_reg$sha512.v:211$931 ($dff) from module sha_top (D = $flatten\I1.$verific$n35$338 [3:2], Q = \I1.cmd [3:2]).
Adding EN signal on $flatten\I1.$verific$cmd_reg$sha512.v:211$931 ($dff) from module sha_top (D = $flatten\I1.$verific$n35$338 [1:0], Q = \I1.cmd [1:0]).
Adding EN signal on $flatten\I1.$verific$cmd_reg$sha512.v:211$931 ($dff) from module sha_top (D = $flatten\I1.$verific$n35$338 [4], Q = \I1.cmd [4]).
Adding EN signal on $flatten\I1.$verific$busy_reg$sha512.v:824$1134 ($dff) from module sha_top (D = $flatten\I1.$verific$n25842$313, Q = \I1.busy).
Adding EN signal on $flatten\I1.$verific$Wt_reg$sha512.v:824$1150 ($dff) from module sha_top (D = $flatten\I1.$verific$n26818$756 [31:0], Q = \I1.Wt [31:0]).
Adding EN signal on $flatten\I1.$verific$Wt_reg$sha512.v:824$1150 ($dff) from module sha_top (D = $flatten\I1.$verific$n26818$756 [63:32], Q = \I1.Wt [63:32]).
Adding EN signal on $flatten\I1.$verific$W9_reg$sha512.v:824$1144 ($dff) from module sha_top (D = $flatten\I1.$verific$n26428$750 [63:32], Q = \I1.W9 [63:32]).
Adding EN signal on $flatten\I1.$verific$W9_reg$sha512.v:824$1144 ($dff) from module sha_top (D = $flatten\I1.$verific$n26428$750 [31:0], Q = \I1.W9 [31:0]).
Adding EN signal on $flatten\I1.$verific$W8_reg$sha512.v:824$1143 ($dff) from module sha_top (D = $flatten\I1.$verific$n26363$749 [63:32], Q = \I1.W8 [63:32]).
Adding EN signal on $flatten\I1.$verific$W8_reg$sha512.v:824$1143 ($dff) from module sha_top (D = $flatten\I1.$verific$n26363$749 [31:0], Q = \I1.W8 [31:0]).
Adding EN signal on $flatten\I1.$verific$W7_reg$sha512.v:824$1142 ($dff) from module sha_top (D = $flatten\I1.$verific$n26298$748 [63:32], Q = \I1.W7 [63:32]).
Adding EN signal on $flatten\I1.$verific$W7_reg$sha512.v:824$1142 ($dff) from module sha_top (D = $flatten\I1.$verific$n26298$748 [31:0], Q = \I1.W7 [31:0]).
Adding EN signal on $flatten\I1.$verific$W6_reg$sha512.v:824$1141 ($dff) from module sha_top (D = $flatten\I1.$verific$n26233$747 [63:32], Q = \I1.W6 [63:32]).
Adding EN signal on $flatten\I1.$verific$W6_reg$sha512.v:824$1141 ($dff) from module sha_top (D = $flatten\I1.$verific$n26233$747 [31:0], Q = \I1.W6 [31:0]).
Adding EN signal on $flatten\I1.$verific$W5_reg$sha512.v:824$1140 ($dff) from module sha_top (D = $flatten\I1.$verific$n26168$746 [63:32], Q = \I1.W5 [63:32]).
Adding EN signal on $flatten\I1.$verific$W5_reg$sha512.v:824$1140 ($dff) from module sha_top (D = $flatten\I1.$verific$n26168$746 [31:0], Q = \I1.W5 [31:0]).
Adding EN signal on $flatten\I1.$verific$W4_reg$sha512.v:824$1139 ($dff) from module sha_top (D = $flatten\I1.$verific$n26103$745 [63:32], Q = \I1.W4 [63:32]).
Adding EN signal on $flatten\I1.$verific$W4_reg$sha512.v:824$1139 ($dff) from module sha_top (D = $flatten\I1.$verific$n26103$745 [31:0], Q = \I1.W4 [31:0]).
Adding EN signal on $flatten\I1.$verific$W3_reg$sha512.v:824$1138 ($dff) from module sha_top (D = $flatten\I1.$verific$n26038$744 [63:32], Q = \I1.W3 [63:32]).
Adding EN signal on $flatten\I1.$verific$W3_reg$sha512.v:824$1138 ($dff) from module sha_top (D = $flatten\I1.$verific$n26038$744 [31:0], Q = \I1.W3 [31:0]).
Adding EN signal on $flatten\I1.$verific$W2_reg$sha512.v:824$1137 ($dff) from module sha_top (D = $flatten\I1.$verific$n25973$743 [63:32], Q = \I1.W2 [63:32]).
Adding EN signal on $flatten\I1.$verific$W2_reg$sha512.v:824$1137 ($dff) from module sha_top (D = $flatten\I1.$verific$n25973$743 [31:0], Q = \I1.W2 [31:0]).
Adding EN signal on $flatten\I1.$verific$W1_reg$sha512.v:824$1136 ($dff) from module sha_top (D = $flatten\I1.$verific$n25908$742 [63:32], Q = \I1.W1 [63:32]).
Adding EN signal on $flatten\I1.$verific$W1_reg$sha512.v:824$1136 ($dff) from module sha_top (D = $flatten\I1.$verific$n25908$742 [31:0], Q = \I1.W1 [31:0]).
Adding EN signal on $flatten\I1.$verific$W14_reg$sha512.v:824$1149 ($dff) from module sha_top (D = $flatten\I1.$verific$n26753$755 [63:32], Q = \I1.W14 [63:32]).
Adding EN signal on $flatten\I1.$verific$W14_reg$sha512.v:824$1149 ($dff) from module sha_top (D = $flatten\I1.$verific$n26753$755 [31:0], Q = \I1.W14 [31:0]).
Adding EN signal on $flatten\I1.$verific$W13_reg$sha512.v:824$1148 ($dff) from module sha_top (D = $flatten\I1.$verific$n26688$754 [63:32], Q = \I1.W13 [63:32]).
Adding EN signal on $flatten\I1.$verific$W13_reg$sha512.v:824$1148 ($dff) from module sha_top (D = $flatten\I1.$verific$n26688$754 [31:0], Q = \I1.W13 [31:0]).
Adding EN signal on $flatten\I1.$verific$W12_reg$sha512.v:824$1147 ($dff) from module sha_top (D = $flatten\I1.$verific$n26623$753 [63:32], Q = \I1.W12 [63:32]).
Adding EN signal on $flatten\I1.$verific$W12_reg$sha512.v:824$1147 ($dff) from module sha_top (D = $flatten\I1.$verific$n26623$753 [31:0], Q = \I1.W12 [31:0]).
Adding EN signal on $flatten\I1.$verific$W11_reg$sha512.v:824$1146 ($dff) from module sha_top (D = $flatten\I1.$verific$n26558$752 [63:32], Q = \I1.W11 [63:32]).
Adding EN signal on $flatten\I1.$verific$W11_reg$sha512.v:824$1146 ($dff) from module sha_top (D = $flatten\I1.$verific$n26558$752 [31:0], Q = \I1.W11 [31:0]).
Adding EN signal on $flatten\I1.$verific$W10_reg$sha512.v:824$1145 ($dff) from module sha_top (D = $flatten\I1.$verific$n26493$751 [63:32], Q = \I1.W10 [63:32]).
Adding EN signal on $flatten\I1.$verific$W10_reg$sha512.v:824$1145 ($dff) from module sha_top (D = $flatten\I1.$verific$n26493$751 [31:0], Q = \I1.W10 [31:0]).
Adding EN signal on $flatten\I1.$verific$W0_reg$sha512.v:824$1135 ($dff) from module sha_top (D = $flatten\I1.$verific$n25843$741 [31:0], Q = \I1.W0 [31:0]).
Adding EN signal on $flatten\I1.$verific$W0_reg$sha512.v:824$1135 ($dff) from module sha_top (D = $flatten\I1.$verific$n25843$741 [63:32], Q = \I1.W0 [63:32]).
Adding EN signal on $flatten\I1.$verific$H_reg$sha512.v:824$1158 ($dff) from module sha_top (D = $flatten\I1.$verific$n27338$764, Q = \I1.H).
Adding EN signal on $flatten\I1.$verific$H7_reg$sha512.v:824$1166 ($dff) from module sha_top (D = $flatten\I1.$verific$n27858$772, Q = \I1.H7).
Adding EN signal on $flatten\I1.$verific$H6_reg$sha512.v:824$1165 ($dff) from module sha_top (D = $flatten\I1.$verific$n27793$771, Q = \I1.H6).
Adding EN signal on $flatten\I1.$verific$H5_reg$sha512.v:824$1164 ($dff) from module sha_top (D = $flatten\I1.$verific$n27728$770, Q = \I1.H5).
Adding EN signal on $flatten\I1.$verific$H4_reg$sha512.v:824$1163 ($dff) from module sha_top (D = $flatten\I1.$verific$n27663$769, Q = \I1.H4).
Adding EN signal on $flatten\I1.$verific$H3_reg$sha512.v:824$1162 ($dff) from module sha_top (D = $flatten\I1.$verific$n27598$768, Q = \I1.H3).
Adding EN signal on $flatten\I1.$verific$H2_reg$sha512.v:824$1161 ($dff) from module sha_top (D = $flatten\I1.$verific$n27533$767, Q = \I1.H2).
Adding EN signal on $flatten\I1.$verific$H1_reg$sha512.v:824$1160 ($dff) from module sha_top (D = $flatten\I1.$verific$n27468$766, Q = \I1.H1).
Adding EN signal on $flatten\I1.$verific$H0_reg$sha512.v:824$1159 ($dff) from module sha_top (D = $flatten\I1.$verific$n27403$765, Q = \I1.H0).
Adding EN signal on $flatten\I1.$verific$G_reg$sha512.v:824$1157 ($dff) from module sha_top (D = $flatten\I1.$verific$n27273$763, Q = \I1.G).
Adding EN signal on $flatten\I1.$verific$F_reg$sha512.v:824$1156 ($dff) from module sha_top (D = $flatten\I1.$verific$n27208$762, Q = \I1.F).
Adding EN signal on $flatten\I1.$verific$E_reg$sha512.v:824$1155 ($dff) from module sha_top (D = $flatten\I1.$verific$n27143$761, Q = \I1.E).
Adding EN signal on $flatten\I1.$verific$D_reg$sha512.v:824$1154 ($dff) from module sha_top (D = $flatten\I1.$verific$n27078$760, Q = \I1.D).
Adding EN signal on $flatten\I1.$verific$C_reg$sha512.v:824$1153 ($dff) from module sha_top (D = $flatten\I1.$verific$n27013$759, Q = \I1.C).
Adding EN signal on $flatten\I1.$verific$B_reg$sha512.v:824$1152 ($dff) from module sha_top (D = $flatten\I1.$verific$n26948$758, Q = \I1.B).
Adding EN signal on $flatten\I1.$verific$A_reg$sha512.v:824$1151 ($dff) from module sha_top (D = $flatten\I1.$verific$n26883$757, Q = \I1.A).
Adding EN signal on $flatten\I0.$verific$text_o_reg$sha512.v:1014$1213 ($dff) from module sha_top (D = $flatten\I0.$verific$n37887$916, Q = \I0.text_o).
Adding EN signal on $flatten\I0.$verific$read_counter_reg$sha512.v:1014$1214 ($dff) from module sha_top (D = $flatten\I0.$verific$n37920$917, Q = \I0.read_counter).
Adding EN signal on $flatten\I0.$verific$cmd_reg$sha512.v:211$931 ($dff) from module sha_top (D = $flatten\I0.$verific$n35$338 [3:2], Q = \I0.cmd [3:2]).
Adding EN signal on $flatten\I0.$verific$cmd_reg$sha512.v:211$931 ($dff) from module sha_top (D = $flatten\I0.$verific$n35$338 [1:0], Q = \I0.cmd [1:0]).
Adding EN signal on $flatten\I0.$verific$cmd_reg$sha512.v:211$931 ($dff) from module sha_top (D = $flatten\I0.$verific$n35$338 [4], Q = \I0.cmd [4]).
Adding EN signal on $flatten\I0.$verific$busy_reg$sha512.v:824$1134 ($dff) from module sha_top (D = $flatten\I0.$verific$n25842$313, Q = \I0.busy).
Adding EN signal on $flatten\I0.$verific$Wt_reg$sha512.v:824$1150 ($dff) from module sha_top (D = $flatten\I0.$verific$n26818$756 [31:0], Q = \I0.Wt [31:0]).
Adding EN signal on $flatten\I0.$verific$Wt_reg$sha512.v:824$1150 ($dff) from module sha_top (D = $flatten\I0.$verific$n26818$756 [63:32], Q = \I0.Wt [63:32]).
Adding EN signal on $flatten\I0.$verific$W9_reg$sha512.v:824$1144 ($dff) from module sha_top (D = $flatten\I0.$verific$n26428$750 [63:32], Q = \I0.W9 [63:32]).
Adding EN signal on $flatten\I0.$verific$W9_reg$sha512.v:824$1144 ($dff) from module sha_top (D = $flatten\I0.$verific$n26428$750 [31:0], Q = \I0.W9 [31:0]).
Adding EN signal on $flatten\I0.$verific$W8_reg$sha512.v:824$1143 ($dff) from module sha_top (D = $flatten\I0.$verific$n26363$749 [63:32], Q = \I0.W8 [63:32]).
Adding EN signal on $flatten\I0.$verific$W8_reg$sha512.v:824$1143 ($dff) from module sha_top (D = $flatten\I0.$verific$n26363$749 [31:0], Q = \I0.W8 [31:0]).
Adding EN signal on $flatten\I0.$verific$W7_reg$sha512.v:824$1142 ($dff) from module sha_top (D = $flatten\I0.$verific$n26298$748 [63:32], Q = \I0.W7 [63:32]).
Adding EN signal on $flatten\I0.$verific$W7_reg$sha512.v:824$1142 ($dff) from module sha_top (D = $flatten\I0.$verific$n26298$748 [31:0], Q = \I0.W7 [31:0]).
Adding EN signal on $flatten\I0.$verific$W6_reg$sha512.v:824$1141 ($dff) from module sha_top (D = $flatten\I0.$verific$n26233$747 [63:32], Q = \I0.W6 [63:32]).
Adding EN signal on $flatten\I0.$verific$W6_reg$sha512.v:824$1141 ($dff) from module sha_top (D = $flatten\I0.$verific$n26233$747 [31:0], Q = \I0.W6 [31:0]).
Adding EN signal on $flatten\I0.$verific$W5_reg$sha512.v:824$1140 ($dff) from module sha_top (D = $flatten\I0.$verific$n26168$746 [63:32], Q = \I0.W5 [63:32]).
Adding EN signal on $flatten\I0.$verific$W5_reg$sha512.v:824$1140 ($dff) from module sha_top (D = $flatten\I0.$verific$n26168$746 [31:0], Q = \I0.W5 [31:0]).
Adding EN signal on $flatten\I0.$verific$W4_reg$sha512.v:824$1139 ($dff) from module sha_top (D = $flatten\I0.$verific$n26103$745 [63:32], Q = \I0.W4 [63:32]).
Adding EN signal on $flatten\I0.$verific$W4_reg$sha512.v:824$1139 ($dff) from module sha_top (D = $flatten\I0.$verific$n26103$745 [31:0], Q = \I0.W4 [31:0]).
Adding EN signal on $flatten\I0.$verific$W3_reg$sha512.v:824$1138 ($dff) from module sha_top (D = $flatten\I0.$verific$n26038$744 [63:32], Q = \I0.W3 [63:32]).
Adding EN signal on $flatten\I0.$verific$W3_reg$sha512.v:824$1138 ($dff) from module sha_top (D = $flatten\I0.$verific$n26038$744 [31:0], Q = \I0.W3 [31:0]).
Adding EN signal on $flatten\I0.$verific$W2_reg$sha512.v:824$1137 ($dff) from module sha_top (D = $flatten\I0.$verific$n25973$743 [63:32], Q = \I0.W2 [63:32]).
Adding EN signal on $flatten\I0.$verific$W2_reg$sha512.v:824$1137 ($dff) from module sha_top (D = $flatten\I0.$verific$n25973$743 [31:0], Q = \I0.W2 [31:0]).
Adding EN signal on $flatten\I0.$verific$W1_reg$sha512.v:824$1136 ($dff) from module sha_top (D = $flatten\I0.$verific$n25908$742 [63:32], Q = \I0.W1 [63:32]).
Adding EN signal on $flatten\I0.$verific$W1_reg$sha512.v:824$1136 ($dff) from module sha_top (D = $flatten\I0.$verific$n25908$742 [31:0], Q = \I0.W1 [31:0]).
Adding EN signal on $flatten\I0.$verific$W14_reg$sha512.v:824$1149 ($dff) from module sha_top (D = $flatten\I0.$verific$n26753$755 [63:32], Q = \I0.W14 [63:32]).
Adding EN signal on $flatten\I0.$verific$W14_reg$sha512.v:824$1149 ($dff) from module sha_top (D = $flatten\I0.$verific$n26753$755 [31:0], Q = \I0.W14 [31:0]).
Adding EN signal on $flatten\I0.$verific$W13_reg$sha512.v:824$1148 ($dff) from module sha_top (D = $flatten\I0.$verific$n26688$754 [63:32], Q = \I0.W13 [63:32]).
Adding EN signal on $flatten\I0.$verific$W13_reg$sha512.v:824$1148 ($dff) from module sha_top (D = $flatten\I0.$verific$n26688$754 [31:0], Q = \I0.W13 [31:0]).
Adding EN signal on $flatten\I0.$verific$W12_reg$sha512.v:824$1147 ($dff) from module sha_top (D = $flatten\I0.$verific$n26623$753 [63:32], Q = \I0.W12 [63:32]).
Adding EN signal on $flatten\I0.$verific$W12_reg$sha512.v:824$1147 ($dff) from module sha_top (D = $flatten\I0.$verific$n26623$753 [31:0], Q = \I0.W12 [31:0]).
Adding EN signal on $flatten\I0.$verific$W11_reg$sha512.v:824$1146 ($dff) from module sha_top (D = $flatten\I0.$verific$n26558$752 [63:32], Q = \I0.W11 [63:32]).
Adding EN signal on $flatten\I0.$verific$W11_reg$sha512.v:824$1146 ($dff) from module sha_top (D = $flatten\I0.$verific$n26558$752 [31:0], Q = \I0.W11 [31:0]).
Adding EN signal on $flatten\I0.$verific$W10_reg$sha512.v:824$1145 ($dff) from module sha_top (D = $flatten\I0.$verific$n26493$751 [63:32], Q = \I0.W10 [63:32]).
Adding EN signal on $flatten\I0.$verific$W10_reg$sha512.v:824$1145 ($dff) from module sha_top (D = $flatten\I0.$verific$n26493$751 [31:0], Q = \I0.W10 [31:0]).
Adding EN signal on $flatten\I0.$verific$W0_reg$sha512.v:824$1135 ($dff) from module sha_top (D = $flatten\I0.$verific$n25843$741 [31:0], Q = \I0.W0 [31:0]).
Adding EN signal on $flatten\I0.$verific$W0_reg$sha512.v:824$1135 ($dff) from module sha_top (D = $flatten\I0.$verific$n25843$741 [63:32], Q = \I0.W0 [63:32]).
Adding EN signal on $flatten\I0.$verific$H_reg$sha512.v:824$1158 ($dff) from module sha_top (D = $flatten\I0.$verific$n27338$764, Q = \I0.H).
Adding EN signal on $flatten\I0.$verific$H7_reg$sha512.v:824$1166 ($dff) from module sha_top (D = $flatten\I0.$verific$n27858$772, Q = \I0.H7).
Adding EN signal on $flatten\I0.$verific$H6_reg$sha512.v:824$1165 ($dff) from module sha_top (D = $flatten\I0.$verific$n27793$771, Q = \I0.H6).
Adding EN signal on $flatten\I0.$verific$H5_reg$sha512.v:824$1164 ($dff) from module sha_top (D = $flatten\I0.$verific$n27728$770, Q = \I0.H5).
Adding EN signal on $flatten\I0.$verific$H4_reg$sha512.v:824$1163 ($dff) from module sha_top (D = $flatten\I0.$verific$n27663$769, Q = \I0.H4).
Adding EN signal on $flatten\I0.$verific$H3_reg$sha512.v:824$1162 ($dff) from module sha_top (D = $flatten\I0.$verific$n27598$768, Q = \I0.H3).
Adding EN signal on $flatten\I0.$verific$H2_reg$sha512.v:824$1161 ($dff) from module sha_top (D = $flatten\I0.$verific$n27533$767, Q = \I0.H2).
Adding EN signal on $flatten\I0.$verific$H1_reg$sha512.v:824$1160 ($dff) from module sha_top (D = $flatten\I0.$verific$n27468$766, Q = \I0.H1).
Adding EN signal on $flatten\I0.$verific$H0_reg$sha512.v:824$1159 ($dff) from module sha_top (D = $flatten\I0.$verific$n27403$765, Q = \I0.H0).
Adding EN signal on $flatten\I0.$verific$G_reg$sha512.v:824$1157 ($dff) from module sha_top (D = $flatten\I0.$verific$n27273$763, Q = \I0.G).
Adding EN signal on $flatten\I0.$verific$F_reg$sha512.v:824$1156 ($dff) from module sha_top (D = $flatten\I0.$verific$n27208$762, Q = \I0.F).
Adding EN signal on $flatten\I0.$verific$E_reg$sha512.v:824$1155 ($dff) from module sha_top (D = $flatten\I0.$verific$n27143$761, Q = \I0.E).
Adding EN signal on $flatten\I0.$verific$D_reg$sha512.v:824$1154 ($dff) from module sha_top (D = $flatten\I0.$verific$n27078$760, Q = \I0.D).
Adding EN signal on $flatten\I0.$verific$C_reg$sha512.v:824$1153 ($dff) from module sha_top (D = $flatten\I0.$verific$n27013$759, Q = \I0.C).
Adding EN signal on $flatten\I0.$verific$B_reg$sha512.v:824$1152 ($dff) from module sha_top (D = $flatten\I0.$verific$n26948$758, Q = \I0.B).
Adding EN signal on $flatten\I0.$verific$A_reg$sha512.v:824$1151 ($dff) from module sha_top (D = $flatten\I0.$verific$n26883$757, Q = \I0.A).

yosys> opt_clean

3.40. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sha_top..
Removed 6 unused cells and 3 unused wires.
<suppressed ~7 debug messages>

yosys> opt_expr

3.41. Executing OPT_EXPR pass (perform const folding).
Optimizing module sha_top.
<suppressed ~204 debug messages>

yosys> opt_muxtree

3.42. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sha_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~220 debug messages>

yosys> opt_reduce

3.43. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sha_top.
Performed a total of 0 changes.

yosys> opt_merge

3.44. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sha_top'.
<suppressed ~3825 debug messages>
Removed a total of 1275 cells.

yosys> opt_share

3.45. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.46. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.47. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sha_top..
Removed 0 unused cells and 1243 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.48. Executing OPT_EXPR pass (perform const folding).
Optimizing module sha_top.

yosys> opt_muxtree

3.49. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sha_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~284 debug messages>

yosys> opt_reduce

3.50. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sha_top.
Performed a total of 0 changes.

yosys> opt_merge

3.51. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sha_top'.
Removed a total of 0 cells.

yosys> opt_share

3.52. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.53. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.54. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sha_top..

yosys> opt_expr

3.55. Executing OPT_EXPR pass (perform const folding).
Optimizing module sha_top.
MAX OPT ITERATION = 3

yosys> wreduce -keepdc

3.56. Executing WREDUCE pass (reducing word size of cells).
Removed top 3 bits (of 7) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6168 ($ne).
Removed top 3 bits (of 6) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6170 ($ne).
Removed top 3 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6181 ($ne).
Removed top 2 bits (of 5) from mux cell sha_top.$flatten\I3.$auto$bmuxmap.cc:60:execute$1217 ($mux).
Removed top 4 bits (of 64) from mux cell sha_top.$flatten\I3.$auto$bmuxmap.cc:60:execute$1235 ($mux).
Removed top 2 bits (of 64) from mux cell sha_top.$flatten\I3.$auto$bmuxmap.cc:60:execute$1236 ($mux).
Removed top 1 bits (of 64) from mux cell sha_top.$flatten\I3.$auto$bmuxmap.cc:60:execute$1237 ($mux).
Removed top 2 bits (of 64) from mux cell sha_top.$flatten\I3.$auto$bmuxmap.cc:60:execute$1238 ($mux).
Removed top 2 bits (of 64) from mux cell sha_top.$flatten\I3.$auto$bmuxmap.cc:60:execute$1239 ($mux).
Removed top 4 bits (of 64) from mux cell sha_top.$flatten\I3.$auto$bmuxmap.cc:60:execute$1240 ($mux).
Removed top 3 bits (of 64) from mux cell sha_top.$flatten\I3.$auto$bmuxmap.cc:60:execute$1241 ($mux).
Removed top 3 bits (of 64) from mux cell sha_top.$flatten\I3.$auto$bmuxmap.cc:60:execute$1242 ($mux).
Removed top 4 bits (of 64) from mux cell sha_top.$flatten\I3.$auto$bmuxmap.cc:60:execute$1243 ($mux).
Removed top 3 bits (of 64) from mux cell sha_top.$flatten\I3.$auto$bmuxmap.cc:60:execute$1244 ($mux).
Removed top 3 bits (of 64) from mux cell sha_top.$flatten\I3.$auto$bmuxmap.cc:60:execute$1245 ($mux).
Removed top 3 bits (of 64) from mux cell sha_top.$flatten\I3.$auto$bmuxmap.cc:60:execute$1246 ($mux).
Removed top 4 bits (of 64) from mux cell sha_top.$flatten\I3.$auto$bmuxmap.cc:60:execute$1247 ($mux).
Removed top 5 bits (of 64) from mux cell sha_top.$flatten\I3.$auto$bmuxmap.cc:60:execute$1248 ($mux).
Removed top 5 bits (of 64) from mux cell sha_top.$flatten\I3.$auto$bmuxmap.cc:60:execute$1249 ($mux).
Removed top 5 bits (of 64) from mux cell sha_top.$flatten\I3.$auto$bmuxmap.cc:60:execute$1251 ($mux).
Removed top 3 bits (of 64) from mux cell sha_top.$flatten\I3.$auto$bmuxmap.cc:60:execute$1252 ($mux).
Removed top 1 bits (of 64) from mux cell sha_top.$flatten\I3.$auto$bmuxmap.cc:60:execute$1253 ($mux).
Removed top 2 bits (of 64) from mux cell sha_top.$flatten\I3.$auto$bmuxmap.cc:60:execute$1254 ($mux).
Removed top 4 bits (of 64) from mux cell sha_top.$flatten\I3.$auto$bmuxmap.cc:60:execute$1255 ($mux).
Removed top 4 bits (of 64) from mux cell sha_top.$flatten\I3.$auto$bmuxmap.cc:60:execute$1256 ($mux).
Removed top 2 bits (of 64) from mux cell sha_top.$flatten\I3.$auto$bmuxmap.cc:60:execute$1257 ($mux).
Removed top 1 bits (of 64) from mux cell sha_top.$flatten\I3.$auto$bmuxmap.cc:60:execute$1258 ($mux).
Removed top 3 bits (of 64) from mux cell sha_top.$flatten\I3.$auto$bmuxmap.cc:60:execute$1259 ($mux).
Removed top 3 bits (of 64) from mux cell sha_top.$flatten\I3.$auto$bmuxmap.cc:60:execute$1260 ($mux).
Removed top 4 bits (of 64) from mux cell sha_top.$flatten\I3.$auto$bmuxmap.cc:60:execute$1261 ($mux).
Removed top 4 bits (of 64) from mux cell sha_top.$flatten\I3.$auto$bmuxmap.cc:60:execute$1262 ($mux).
Removed top 3 bits (of 64) from mux cell sha_top.$flatten\I3.$auto$bmuxmap.cc:60:execute$1263 ($mux).
Removed top 1 bits (of 64) from mux cell sha_top.$flatten\I3.$auto$bmuxmap.cc:60:execute$1264 ($mux).
Removed top 3 bits (of 64) from mux cell sha_top.$flatten\I3.$auto$bmuxmap.cc:60:execute$1265 ($mux).
Removed top 2 bits (of 64) from mux cell sha_top.$flatten\I3.$auto$bmuxmap.cc:60:execute$1266 ($mux).
Removed top 2 bits (of 64) from mux cell sha_top.$flatten\I3.$auto$bmuxmap.cc:60:execute$1284 ($mux).
Removed top 1 bits (of 64) from mux cell sha_top.$flatten\I3.$auto$bmuxmap.cc:60:execute$1285 ($mux).
Removed top 1 bits (of 64) from mux cell sha_top.$flatten\I3.$auto$bmuxmap.cc:60:execute$1286 ($mux).
Removed top 2 bits (of 64) from mux cell sha_top.$flatten\I3.$auto$bmuxmap.cc:60:execute$1287 ($mux).
Removed top 1 bits (of 64) from mux cell sha_top.$flatten\I3.$auto$bmuxmap.cc:60:execute$1289 ($mux).
Removed top 1 bits (of 64) from mux cell sha_top.$flatten\I3.$auto$bmuxmap.cc:60:execute$1291 ($mux).
Removed top 1 bits (of 64) from mux cell sha_top.$flatten\I3.$auto$bmuxmap.cc:60:execute$1293 ($mux).
Removed top 2 bits (of 64) from mux cell sha_top.$flatten\I3.$auto$bmuxmap.cc:60:execute$1294 ($mux).
Removed top 1 bits (of 64) from mux cell sha_top.$flatten\I3.$auto$bmuxmap.cc:60:execute$1296 ($mux).
Removed top 1 bits (of 64) from mux cell sha_top.$flatten\I3.$auto$bmuxmap.cc:60:execute$1298 ($mux).
Removed top 2 bits (of 64) from mux cell sha_top.$flatten\I3.$auto$bmuxmap.cc:60:execute$1300 ($mux).
Removed top 1 bits (of 64) from mux cell sha_top.$flatten\I3.$auto$bmuxmap.cc:60:execute$1301 ($mux).
Removed top 1 bits (of 64) from mux cell sha_top.$flatten\I3.$auto$bmuxmap.cc:60:execute$1303 ($mux).
Removed top 2 bits (of 64) from mux cell sha_top.$flatten\I3.$auto$bmuxmap.cc:60:execute$1304 ($mux).
Removed top 3 bits (of 64) from mux cell sha_top.$flatten\I3.$auto$bmuxmap.cc:60:execute$1305 ($mux).
Removed top 1 bits (of 64) from mux cell sha_top.$flatten\I3.$auto$bmuxmap.cc:60:execute$1306 ($mux).
Removed top 2 bits (of 64) from mux cell sha_top.$flatten\I3.$auto$bmuxmap.cc:60:execute$1307 ($mux).
Removed top 1 bits (of 64) from mux cell sha_top.$flatten\I3.$auto$bmuxmap.cc:60:execute$1325 ($mux).
Removed top 1 bits (of 64) from mux cell sha_top.$flatten\I3.$auto$bmuxmap.cc:60:execute$1328 ($mux).
Removed top 2 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6421 ($ne).
Removed top 2 bits (of 6) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6410 ($ne).
Removed top 2 bits (of 7) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6408 ($ne).
Removed top 2 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6406 ($ne).
Removed top 2 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6391 ($ne).
Removed top 2 bits (of 7) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6378 ($ne).
Removed top 2 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6376 ($ne).
Removed top 2 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6361 ($ne).
Removed top 2 bits (of 6) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6350 ($ne).
Removed top 2 bits (of 7) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6348 ($ne).
Removed top 2 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6346 ($ne).
Removed top 2 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6331 ($ne).
Removed top 2 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6091 ($ne).
Removed top 2 bits (of 5) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6322 ($ne).
Removed top 2 bits (of 6) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6320 ($ne).
Removed top 2 bits (of 7) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6318 ($ne).
Removed top 2 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6316 ($ne).
Removed top 5 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6301 ($ne).
Removed top 5 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6286 ($ne).
Removed top 4 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6271 ($ne).
Removed top 4 bits (of 7) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6258 ($ne).
Removed top 4 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6256 ($ne).
Removed top 4 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6241 ($ne).
Removed top 2 bits (of 7) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6078 ($ne).
Removed top 2 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7245 ($ne).
Removed top 2 bits (of 7) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7232 ($ne).
Removed top 2 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7230 ($ne).
Removed top 4 bits (of 7) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6228 ($ne).
Removed top 4 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6226 ($ne).
Removed top 3 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6211 ($ne).
Removed top 6 bits (of 7) from port B of cell sha_top.$flatten\I3.$verific$add_58$sha512.v:247$972 ($add).
Removed top 1 bits (of 5) from port B of cell sha_top.$flatten\I3.$verific$equal_726$sha512.v:967$1176 ($eq).
Removed top 1 bits (of 5) from port B of cell sha_top.$flatten\I3.$verific$equal_727$sha512.v:968$1177 ($eq).
Removed top 1 bits (of 5) from port B of cell sha_top.$flatten\I3.$verific$equal_728$sha512.v:969$1178 ($eq).
Removed top 1 bits (of 5) from port B of cell sha_top.$flatten\I3.$verific$equal_729$sha512.v:970$1179 ($eq).
Removed top 2 bits (of 5) from port B of cell sha_top.$flatten\I3.$verific$equal_730$sha512.v:971$1180 ($eq).
Removed top 2 bits (of 5) from port B of cell sha_top.$flatten\I3.$verific$equal_731$sha512.v:972$1181 ($eq).
Removed top 2 bits (of 5) from port B of cell sha_top.$flatten\I3.$verific$equal_732$sha512.v:973$1182 ($eq).
Removed top 2 bits (of 5) from port B of cell sha_top.$flatten\I3.$verific$equal_733$sha512.v:974$1183 ($eq).
Removed top 3 bits (of 5) from port B of cell sha_top.$flatten\I3.$verific$equal_734$sha512.v:975$1184 ($eq).
Removed top 3 bits (of 5) from port B of cell sha_top.$flatten\I3.$verific$equal_735$sha512.v:976$1185 ($eq).
Removed top 4 bits (of 5) from port B of cell sha_top.$flatten\I3.$verific$equal_736$sha512.v:977$1186 ($eq).
Removed top 1 bits (of 5) from port B of cell sha_top.$flatten\I3.$verific$equal_757$sha512.v:985$1193 ($eq).
Removed top 1 bits (of 5) from port B of cell sha_top.$flatten\I3.$verific$equal_758$sha512.v:986$1194 ($eq).
Removed top 1 bits (of 5) from port B of cell sha_top.$flatten\I3.$verific$equal_759$sha512.v:987$1195 ($eq).
Removed top 1 bits (of 5) from port B of cell sha_top.$flatten\I3.$verific$equal_760$sha512.v:988$1196 ($eq).
Removed top 1 bits (of 6) from port A of cell sha_top.$flatten\I3.$verific$sub_777$sha512.v:1006$1203 ($sub).
Removed top 5 bits (of 6) from port B of cell sha_top.$flatten\I3.$verific$sub_777$sha512.v:1006$1203 ($sub).
Removed top 1 bits (of 6) from port Y of cell sha_top.$flatten\I3.$verific$sub_777$sha512.v:1006$1203 ($sub).
Removed top 7 bits (of 64) from port B of cell sha_top.$flatten\I3.$verific$xor_34$sha512.v:228$948 ($xor).
Removed top 6 bits (of 64) from port B of cell sha_top.$flatten\I3.$verific$xor_38$sha512.v:231$952 ($xor).
Removed top 3 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6151 ($ne).
Removed top 1 bits (of 3) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$8379 ($ne).
Removed top 6 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$8395 ($ne).
Removed top 5 bits (of 7) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$8397 ($ne).
Removed top 4 bits (of 6) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$8399 ($ne).
Removed top 3 bits (of 5) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$8401 ($ne).
Removed top 2 bits (of 4) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$8403 ($ne).
Removed top 1 bits (of 3) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$8407 ($ne).
Removed top 2 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$8428 ($ne).
Removed top 2 bits (of 7) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$8430 ($ne).
Removed top 2 bits (of 6) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$8432 ($ne).
Removed top 2 bits (of 5) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$8434 ($ne).
Removed top 2 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$8443 ($ne).
Removed top 2 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$8458 ($ne).
Removed top 2 bits (of 7) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$8460 ($ne).
Removed top 2 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$8473 ($ne).
Removed top 3 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$8488 ($ne).
Removed top 3 bits (of 7) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$8490 ($ne).
Removed top 3 bits (of 6) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$8492 ($ne).
Removed top 3 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$8503 ($ne).
Removed top 3 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$8518 ($ne).
Removed top 3 bits (of 7) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$8520 ($ne).
Removed top 3 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$8533 ($ne).
Removed top 3 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$8548 ($ne).
Removed top 3 bits (of 7) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$8550 ($ne).
Removed top 3 bits (of 6) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$8552 ($ne).
Removed top 3 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$8563 ($ne).
Removed top 3 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$8578 ($ne).
Removed top 3 bits (of 7) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$8580 ($ne).
Removed top 3 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$8593 ($ne).
Removed top 4 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$8608 ($ne).
Removed top 4 bits (of 7) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$8610 ($ne).
Removed top 4 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$8623 ($ne).
Removed top 4 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$8638 ($ne).
Removed top 4 bits (of 7) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$8640 ($ne).
Removed top 4 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$8653 ($ne).
Removed top 5 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$8668 ($ne).
Removed top 5 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$8683 ($ne).
Removed top 2 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$8698 ($ne).
Removed top 2 bits (of 7) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$8700 ($ne).
Removed top 2 bits (of 6) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$8702 ($ne).
Removed top 2 bits (of 5) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$8704 ($ne).
Removed top 2 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$8713 ($ne).
Removed top 2 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$8728 ($ne).
Removed top 2 bits (of 7) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$8730 ($ne).
Removed top 2 bits (of 6) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$8732 ($ne).
Removed top 2 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$8743 ($ne).
Removed top 2 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$8758 ($ne).
Removed top 2 bits (of 7) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$8760 ($ne).
Removed top 3 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6166 ($ne).
Removed top 2 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$8773 ($ne).
Removed top 2 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$8788 ($ne).
Removed top 2 bits (of 7) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$8790 ($ne).
Removed top 2 bits (of 6) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$8792 ($ne).
Removed top 2 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$8803 ($ne).
Removed top 2 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$8818 ($ne).
Removed top 2 bits (of 7) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$8820 ($ne).
Removed top 2 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$8833 ($ne).
Removed top 2 bits (of 5) from mux cell sha_top.$flatten\I2.$auto$bmuxmap.cc:60:execute$1217 ($mux).
Removed top 4 bits (of 64) from mux cell sha_top.$flatten\I2.$auto$bmuxmap.cc:60:execute$1235 ($mux).
Removed top 2 bits (of 64) from mux cell sha_top.$flatten\I2.$auto$bmuxmap.cc:60:execute$1236 ($mux).
Removed top 1 bits (of 64) from mux cell sha_top.$flatten\I2.$auto$bmuxmap.cc:60:execute$1237 ($mux).
Removed top 2 bits (of 64) from mux cell sha_top.$flatten\I2.$auto$bmuxmap.cc:60:execute$1238 ($mux).
Removed top 2 bits (of 64) from mux cell sha_top.$flatten\I2.$auto$bmuxmap.cc:60:execute$1239 ($mux).
Removed top 4 bits (of 64) from mux cell sha_top.$flatten\I2.$auto$bmuxmap.cc:60:execute$1240 ($mux).
Removed top 3 bits (of 64) from mux cell sha_top.$flatten\I2.$auto$bmuxmap.cc:60:execute$1241 ($mux).
Removed top 3 bits (of 64) from mux cell sha_top.$flatten\I2.$auto$bmuxmap.cc:60:execute$1242 ($mux).
Removed top 4 bits (of 64) from mux cell sha_top.$flatten\I2.$auto$bmuxmap.cc:60:execute$1243 ($mux).
Removed top 3 bits (of 64) from mux cell sha_top.$flatten\I2.$auto$bmuxmap.cc:60:execute$1244 ($mux).
Removed top 3 bits (of 64) from mux cell sha_top.$flatten\I2.$auto$bmuxmap.cc:60:execute$1245 ($mux).
Removed top 3 bits (of 64) from mux cell sha_top.$flatten\I2.$auto$bmuxmap.cc:60:execute$1246 ($mux).
Removed top 4 bits (of 64) from mux cell sha_top.$flatten\I2.$auto$bmuxmap.cc:60:execute$1247 ($mux).
Removed top 5 bits (of 64) from mux cell sha_top.$flatten\I2.$auto$bmuxmap.cc:60:execute$1248 ($mux).
Removed top 5 bits (of 64) from mux cell sha_top.$flatten\I2.$auto$bmuxmap.cc:60:execute$1249 ($mux).
Removed top 5 bits (of 64) from mux cell sha_top.$flatten\I2.$auto$bmuxmap.cc:60:execute$1251 ($mux).
Removed top 3 bits (of 64) from mux cell sha_top.$flatten\I2.$auto$bmuxmap.cc:60:execute$1252 ($mux).
Removed top 1 bits (of 64) from mux cell sha_top.$flatten\I2.$auto$bmuxmap.cc:60:execute$1253 ($mux).
Removed top 2 bits (of 64) from mux cell sha_top.$flatten\I2.$auto$bmuxmap.cc:60:execute$1254 ($mux).
Removed top 4 bits (of 64) from mux cell sha_top.$flatten\I2.$auto$bmuxmap.cc:60:execute$1255 ($mux).
Removed top 4 bits (of 64) from mux cell sha_top.$flatten\I2.$auto$bmuxmap.cc:60:execute$1256 ($mux).
Removed top 2 bits (of 64) from mux cell sha_top.$flatten\I2.$auto$bmuxmap.cc:60:execute$1257 ($mux).
Removed top 1 bits (of 64) from mux cell sha_top.$flatten\I2.$auto$bmuxmap.cc:60:execute$1258 ($mux).
Removed top 3 bits (of 64) from mux cell sha_top.$flatten\I2.$auto$bmuxmap.cc:60:execute$1259 ($mux).
Removed top 3 bits (of 64) from mux cell sha_top.$flatten\I2.$auto$bmuxmap.cc:60:execute$1260 ($mux).
Removed top 4 bits (of 64) from mux cell sha_top.$flatten\I2.$auto$bmuxmap.cc:60:execute$1261 ($mux).
Removed top 4 bits (of 64) from mux cell sha_top.$flatten\I2.$auto$bmuxmap.cc:60:execute$1262 ($mux).
Removed top 3 bits (of 64) from mux cell sha_top.$flatten\I2.$auto$bmuxmap.cc:60:execute$1263 ($mux).
Removed top 1 bits (of 64) from mux cell sha_top.$flatten\I2.$auto$bmuxmap.cc:60:execute$1264 ($mux).
Removed top 3 bits (of 64) from mux cell sha_top.$flatten\I2.$auto$bmuxmap.cc:60:execute$1265 ($mux).
Removed top 2 bits (of 64) from mux cell sha_top.$flatten\I2.$auto$bmuxmap.cc:60:execute$1266 ($mux).
Removed top 2 bits (of 64) from mux cell sha_top.$flatten\I2.$auto$bmuxmap.cc:60:execute$1284 ($mux).
Removed top 1 bits (of 64) from mux cell sha_top.$flatten\I2.$auto$bmuxmap.cc:60:execute$1285 ($mux).
Removed top 1 bits (of 64) from mux cell sha_top.$flatten\I2.$auto$bmuxmap.cc:60:execute$1286 ($mux).
Removed top 2 bits (of 64) from mux cell sha_top.$flatten\I2.$auto$bmuxmap.cc:60:execute$1287 ($mux).
Removed top 1 bits (of 64) from mux cell sha_top.$flatten\I2.$auto$bmuxmap.cc:60:execute$1289 ($mux).
Removed top 1 bits (of 64) from mux cell sha_top.$flatten\I2.$auto$bmuxmap.cc:60:execute$1291 ($mux).
Removed top 1 bits (of 64) from mux cell sha_top.$flatten\I2.$auto$bmuxmap.cc:60:execute$1293 ($mux).
Removed top 2 bits (of 64) from mux cell sha_top.$flatten\I2.$auto$bmuxmap.cc:60:execute$1294 ($mux).
Removed top 1 bits (of 64) from mux cell sha_top.$flatten\I2.$auto$bmuxmap.cc:60:execute$1296 ($mux).
Removed top 1 bits (of 64) from mux cell sha_top.$flatten\I2.$auto$bmuxmap.cc:60:execute$1298 ($mux).
Removed top 2 bits (of 64) from mux cell sha_top.$flatten\I2.$auto$bmuxmap.cc:60:execute$1300 ($mux).
Removed top 1 bits (of 64) from mux cell sha_top.$flatten\I2.$auto$bmuxmap.cc:60:execute$1301 ($mux).
Removed top 1 bits (of 64) from mux cell sha_top.$flatten\I2.$auto$bmuxmap.cc:60:execute$1303 ($mux).
Removed top 2 bits (of 64) from mux cell sha_top.$flatten\I2.$auto$bmuxmap.cc:60:execute$1304 ($mux).
Removed top 3 bits (of 64) from mux cell sha_top.$flatten\I2.$auto$bmuxmap.cc:60:execute$1305 ($mux).
Removed top 1 bits (of 64) from mux cell sha_top.$flatten\I2.$auto$bmuxmap.cc:60:execute$1306 ($mux).
Removed top 2 bits (of 64) from mux cell sha_top.$flatten\I2.$auto$bmuxmap.cc:60:execute$1307 ($mux).
Removed top 1 bits (of 64) from mux cell sha_top.$flatten\I2.$auto$bmuxmap.cc:60:execute$1325 ($mux).
Removed top 1 bits (of 64) from mux cell sha_top.$flatten\I2.$auto$bmuxmap.cc:60:execute$1328 ($mux).
Removed top 2 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6076 ($ne).
Removed top 2 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6061 ($ne).
Removed top 2 bits (of 5) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6052 ($ne).
Removed top 2 bits (of 6) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6050 ($ne).
Removed top 2 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7215 ($ne).
Removed top 2 bits (of 6) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7204 ($ne).
Removed top 2 bits (of 7) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7202 ($ne).
Removed top 2 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7200 ($ne).
Removed top 2 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6451 ($ne).
Removed top 2 bits (of 7) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6438 ($ne).
Removed top 2 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6436 ($ne).
Removed top 6 bits (of 7) from port B of cell sha_top.$flatten\I2.$verific$add_58$sha512.v:247$972 ($add).
Removed top 1 bits (of 5) from port B of cell sha_top.$flatten\I2.$verific$equal_726$sha512.v:967$1176 ($eq).
Removed top 1 bits (of 5) from port B of cell sha_top.$flatten\I2.$verific$equal_727$sha512.v:968$1177 ($eq).
Removed top 1 bits (of 5) from port B of cell sha_top.$flatten\I2.$verific$equal_728$sha512.v:969$1178 ($eq).
Removed top 1 bits (of 5) from port B of cell sha_top.$flatten\I2.$verific$equal_729$sha512.v:970$1179 ($eq).
Removed top 2 bits (of 5) from port B of cell sha_top.$flatten\I2.$verific$equal_730$sha512.v:971$1180 ($eq).
Removed top 2 bits (of 5) from port B of cell sha_top.$flatten\I2.$verific$equal_731$sha512.v:972$1181 ($eq).
Removed top 2 bits (of 5) from port B of cell sha_top.$flatten\I2.$verific$equal_732$sha512.v:973$1182 ($eq).
Removed top 2 bits (of 5) from port B of cell sha_top.$flatten\I2.$verific$equal_733$sha512.v:974$1183 ($eq).
Removed top 3 bits (of 5) from port B of cell sha_top.$flatten\I2.$verific$equal_734$sha512.v:975$1184 ($eq).
Removed top 3 bits (of 5) from port B of cell sha_top.$flatten\I2.$verific$equal_735$sha512.v:976$1185 ($eq).
Removed top 4 bits (of 5) from port B of cell sha_top.$flatten\I2.$verific$equal_736$sha512.v:977$1186 ($eq).
Removed top 1 bits (of 5) from port B of cell sha_top.$flatten\I2.$verific$equal_757$sha512.v:985$1193 ($eq).
Removed top 1 bits (of 5) from port B of cell sha_top.$flatten\I2.$verific$equal_758$sha512.v:986$1194 ($eq).
Removed top 1 bits (of 5) from port B of cell sha_top.$flatten\I2.$verific$equal_759$sha512.v:987$1195 ($eq).
Removed top 1 bits (of 5) from port B of cell sha_top.$flatten\I2.$verific$equal_760$sha512.v:988$1196 ($eq).
Removed top 1 bits (of 5) from mux cell sha_top.$flatten\I2.$verific$mux_13$sha512.v:210$930 ($mux).
Removed top 3 bits (of 7) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6198 ($ne).
Removed top 3 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6196 ($ne).
Removed top 1 bits (of 6) from port A of cell sha_top.$flatten\I2.$verific$sub_777$sha512.v:1006$1203 ($sub).
Removed top 5 bits (of 6) from port B of cell sha_top.$flatten\I2.$verific$sub_777$sha512.v:1006$1203 ($sub).
Removed top 1 bits (of 6) from port Y of cell sha_top.$flatten\I2.$verific$sub_777$sha512.v:1006$1203 ($sub).
Removed top 7 bits (of 64) from port B of cell sha_top.$flatten\I2.$verific$xor_34$sha512.v:228$948 ($xor).
Removed top 6 bits (of 64) from port B of cell sha_top.$flatten\I2.$verific$xor_38$sha512.v:231$952 ($xor).
Removed top 3 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6136 ($ne).
Removed top 3 bits (of 7) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6138 ($ne).
Removed top 3 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7799 ($ne).
Removed top 4 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7814 ($ne).
Removed top 4 bits (of 7) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7816 ($ne).
Removed top 4 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7829 ($ne).
Removed top 4 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7844 ($ne).
Removed top 4 bits (of 7) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7846 ($ne).
Removed top 4 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7859 ($ne).
Removed top 5 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7874 ($ne).
Removed top 5 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7889 ($ne).
Removed top 2 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7904 ($ne).
Removed top 2 bits (of 7) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7906 ($ne).
Removed top 2 bits (of 6) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7908 ($ne).
Removed top 2 bits (of 5) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7910 ($ne).
Removed top 2 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7919 ($ne).
Removed top 2 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7934 ($ne).
Removed top 2 bits (of 7) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7936 ($ne).
Removed top 2 bits (of 6) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7938 ($ne).
Removed top 2 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7949 ($ne).
Removed top 2 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7964 ($ne).
Removed top 2 bits (of 7) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7966 ($ne).
Removed top 2 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7979 ($ne).
Removed top 2 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7994 ($ne).
Removed top 2 bits (of 7) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7996 ($ne).
Removed top 2 bits (of 6) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7998 ($ne).
Removed top 2 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$8009 ($ne).
Removed top 2 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$8024 ($ne).
Removed top 2 bits (of 7) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$8026 ($ne).
Removed top 2 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$8039 ($ne).
Removed top 2 bits (of 5) from mux cell sha_top.$flatten\I1.$auto$bmuxmap.cc:60:execute$1217 ($mux).
Removed top 4 bits (of 64) from mux cell sha_top.$flatten\I1.$auto$bmuxmap.cc:60:execute$1235 ($mux).
Removed top 2 bits (of 64) from mux cell sha_top.$flatten\I1.$auto$bmuxmap.cc:60:execute$1236 ($mux).
Removed top 1 bits (of 64) from mux cell sha_top.$flatten\I1.$auto$bmuxmap.cc:60:execute$1237 ($mux).
Removed top 2 bits (of 64) from mux cell sha_top.$flatten\I1.$auto$bmuxmap.cc:60:execute$1238 ($mux).
Removed top 2 bits (of 64) from mux cell sha_top.$flatten\I1.$auto$bmuxmap.cc:60:execute$1239 ($mux).
Removed top 4 bits (of 64) from mux cell sha_top.$flatten\I1.$auto$bmuxmap.cc:60:execute$1240 ($mux).
Removed top 3 bits (of 64) from mux cell sha_top.$flatten\I1.$auto$bmuxmap.cc:60:execute$1241 ($mux).
Removed top 3 bits (of 64) from mux cell sha_top.$flatten\I1.$auto$bmuxmap.cc:60:execute$1242 ($mux).
Removed top 4 bits (of 64) from mux cell sha_top.$flatten\I1.$auto$bmuxmap.cc:60:execute$1243 ($mux).
Removed top 3 bits (of 64) from mux cell sha_top.$flatten\I1.$auto$bmuxmap.cc:60:execute$1244 ($mux).
Removed top 3 bits (of 64) from mux cell sha_top.$flatten\I1.$auto$bmuxmap.cc:60:execute$1245 ($mux).
Removed top 3 bits (of 64) from mux cell sha_top.$flatten\I1.$auto$bmuxmap.cc:60:execute$1246 ($mux).
Removed top 4 bits (of 64) from mux cell sha_top.$flatten\I1.$auto$bmuxmap.cc:60:execute$1247 ($mux).
Removed top 5 bits (of 64) from mux cell sha_top.$flatten\I1.$auto$bmuxmap.cc:60:execute$1248 ($mux).
Removed top 5 bits (of 64) from mux cell sha_top.$flatten\I1.$auto$bmuxmap.cc:60:execute$1249 ($mux).
Removed top 5 bits (of 64) from mux cell sha_top.$flatten\I1.$auto$bmuxmap.cc:60:execute$1251 ($mux).
Removed top 3 bits (of 64) from mux cell sha_top.$flatten\I1.$auto$bmuxmap.cc:60:execute$1252 ($mux).
Removed top 1 bits (of 64) from mux cell sha_top.$flatten\I1.$auto$bmuxmap.cc:60:execute$1253 ($mux).
Removed top 2 bits (of 64) from mux cell sha_top.$flatten\I1.$auto$bmuxmap.cc:60:execute$1254 ($mux).
Removed top 4 bits (of 64) from mux cell sha_top.$flatten\I1.$auto$bmuxmap.cc:60:execute$1255 ($mux).
Removed top 4 bits (of 64) from mux cell sha_top.$flatten\I1.$auto$bmuxmap.cc:60:execute$1256 ($mux).
Removed top 2 bits (of 64) from mux cell sha_top.$flatten\I1.$auto$bmuxmap.cc:60:execute$1257 ($mux).
Removed top 1 bits (of 64) from mux cell sha_top.$flatten\I1.$auto$bmuxmap.cc:60:execute$1258 ($mux).
Removed top 3 bits (of 64) from mux cell sha_top.$flatten\I1.$auto$bmuxmap.cc:60:execute$1259 ($mux).
Removed top 3 bits (of 64) from mux cell sha_top.$flatten\I1.$auto$bmuxmap.cc:60:execute$1260 ($mux).
Removed top 4 bits (of 64) from mux cell sha_top.$flatten\I1.$auto$bmuxmap.cc:60:execute$1261 ($mux).
Removed top 4 bits (of 64) from mux cell sha_top.$flatten\I1.$auto$bmuxmap.cc:60:execute$1262 ($mux).
Removed top 3 bits (of 64) from mux cell sha_top.$flatten\I1.$auto$bmuxmap.cc:60:execute$1263 ($mux).
Removed top 1 bits (of 64) from mux cell sha_top.$flatten\I1.$auto$bmuxmap.cc:60:execute$1264 ($mux).
Removed top 3 bits (of 64) from mux cell sha_top.$flatten\I1.$auto$bmuxmap.cc:60:execute$1265 ($mux).
Removed top 2 bits (of 64) from mux cell sha_top.$flatten\I1.$auto$bmuxmap.cc:60:execute$1266 ($mux).
Removed top 2 bits (of 64) from mux cell sha_top.$flatten\I1.$auto$bmuxmap.cc:60:execute$1284 ($mux).
Removed top 1 bits (of 64) from mux cell sha_top.$flatten\I1.$auto$bmuxmap.cc:60:execute$1285 ($mux).
Removed top 1 bits (of 64) from mux cell sha_top.$flatten\I1.$auto$bmuxmap.cc:60:execute$1286 ($mux).
Removed top 2 bits (of 64) from mux cell sha_top.$flatten\I1.$auto$bmuxmap.cc:60:execute$1287 ($mux).
Removed top 1 bits (of 64) from mux cell sha_top.$flatten\I1.$auto$bmuxmap.cc:60:execute$1289 ($mux).
Removed top 1 bits (of 64) from mux cell sha_top.$flatten\I1.$auto$bmuxmap.cc:60:execute$1291 ($mux).
Removed top 1 bits (of 64) from mux cell sha_top.$flatten\I1.$auto$bmuxmap.cc:60:execute$1293 ($mux).
Removed top 2 bits (of 64) from mux cell sha_top.$flatten\I1.$auto$bmuxmap.cc:60:execute$1294 ($mux).
Removed top 1 bits (of 64) from mux cell sha_top.$flatten\I1.$auto$bmuxmap.cc:60:execute$1296 ($mux).
Removed top 1 bits (of 64) from mux cell sha_top.$flatten\I1.$auto$bmuxmap.cc:60:execute$1298 ($mux).
Removed top 2 bits (of 64) from mux cell sha_top.$flatten\I1.$auto$bmuxmap.cc:60:execute$1300 ($mux).
Removed top 1 bits (of 64) from mux cell sha_top.$flatten\I1.$auto$bmuxmap.cc:60:execute$1301 ($mux).
Removed top 1 bits (of 64) from mux cell sha_top.$flatten\I1.$auto$bmuxmap.cc:60:execute$1303 ($mux).
Removed top 2 bits (of 64) from mux cell sha_top.$flatten\I1.$auto$bmuxmap.cc:60:execute$1304 ($mux).
Removed top 3 bits (of 64) from mux cell sha_top.$flatten\I1.$auto$bmuxmap.cc:60:execute$1305 ($mux).
Removed top 1 bits (of 64) from mux cell sha_top.$flatten\I1.$auto$bmuxmap.cc:60:execute$1306 ($mux).
Removed top 2 bits (of 64) from mux cell sha_top.$flatten\I1.$auto$bmuxmap.cc:60:execute$1307 ($mux).
Removed top 1 bits (of 64) from mux cell sha_top.$flatten\I1.$auto$bmuxmap.cc:60:execute$1325 ($mux).
Removed top 1 bits (of 64) from mux cell sha_top.$flatten\I1.$auto$bmuxmap.cc:60:execute$1328 ($mux).
Removed top 3 bits (of 7) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6902 ($ne).
Removed top 3 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6900 ($ne).
Removed top 2 bits (of 7) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6048 ($ne).
Removed top 2 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6885 ($ne).
Removed top 2 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6046 ($ne).
Removed top 2 bits (of 7) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6872 ($ne).
Removed top 2 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6870 ($ne).
Removed top 2 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6855 ($ne).
Removed top 2 bits (of 5) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6846 ($ne).
Removed top 2 bits (of 6) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6844 ($ne).
Removed top 2 bits (of 7) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6842 ($ne).
Removed top 2 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6840 ($ne).
Removed top 1 bits (of 3) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6819 ($ne).
Removed top 2 bits (of 4) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6815 ($ne).
Removed top 3 bits (of 5) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6813 ($ne).
Removed top 4 bits (of 6) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6811 ($ne).
Removed top 5 bits (of 7) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6809 ($ne).
Removed top 6 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6807 ($ne).
Removed top 1 bits (of 3) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6791 ($ne).
Removed top 1 bits (of 3) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6025 ($ne).
Removed top 2 bits (of 4) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6021 ($ne).
Removed top 2 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7185 ($ne).
Removed top 2 bits (of 7) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7172 ($ne).
Removed top 2 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7170 ($ne).
Removed top 6 bits (of 7) from port B of cell sha_top.$flatten\I1.$verific$add_58$sha512.v:247$972 ($add).
Removed top 1 bits (of 5) from port B of cell sha_top.$flatten\I1.$verific$equal_726$sha512.v:967$1176 ($eq).
Removed top 1 bits (of 5) from port B of cell sha_top.$flatten\I1.$verific$equal_727$sha512.v:968$1177 ($eq).
Removed top 1 bits (of 5) from port B of cell sha_top.$flatten\I1.$verific$equal_728$sha512.v:969$1178 ($eq).
Removed top 1 bits (of 5) from port B of cell sha_top.$flatten\I1.$verific$equal_729$sha512.v:970$1179 ($eq).
Removed top 2 bits (of 5) from port B of cell sha_top.$flatten\I1.$verific$equal_730$sha512.v:971$1180 ($eq).
Removed top 2 bits (of 5) from port B of cell sha_top.$flatten\I1.$verific$equal_731$sha512.v:972$1181 ($eq).
Removed top 2 bits (of 5) from port B of cell sha_top.$flatten\I1.$verific$equal_732$sha512.v:973$1182 ($eq).
Removed top 2 bits (of 5) from port B of cell sha_top.$flatten\I1.$verific$equal_733$sha512.v:974$1183 ($eq).
Removed top 3 bits (of 5) from port B of cell sha_top.$flatten\I1.$verific$equal_734$sha512.v:975$1184 ($eq).
Removed top 3 bits (of 5) from port B of cell sha_top.$flatten\I1.$verific$equal_735$sha512.v:976$1185 ($eq).
Removed top 4 bits (of 5) from port B of cell sha_top.$flatten\I1.$verific$equal_736$sha512.v:977$1186 ($eq).
Removed top 1 bits (of 5) from port B of cell sha_top.$flatten\I1.$verific$equal_757$sha512.v:985$1193 ($eq).
Removed top 1 bits (of 5) from port B of cell sha_top.$flatten\I1.$verific$equal_758$sha512.v:986$1194 ($eq).
Removed top 1 bits (of 5) from port B of cell sha_top.$flatten\I1.$verific$equal_759$sha512.v:987$1195 ($eq).
Removed top 1 bits (of 5) from port B of cell sha_top.$flatten\I1.$verific$equal_760$sha512.v:988$1196 ($eq).
Removed top 1 bits (of 5) from mux cell sha_top.$flatten\I1.$verific$mux_13$sha512.v:210$930 ($mux).
Removed top 1 bits (of 6) from port A of cell sha_top.$flatten\I1.$verific$sub_777$sha512.v:1006$1203 ($sub).
Removed top 5 bits (of 6) from port B of cell sha_top.$flatten\I1.$verific$sub_777$sha512.v:1006$1203 ($sub).
Removed top 1 bits (of 6) from port Y of cell sha_top.$flatten\I1.$verific$sub_777$sha512.v:1006$1203 ($sub).
Removed top 7 bits (of 64) from port B of cell sha_top.$flatten\I1.$verific$xor_34$sha512.v:228$948 ($xor).
Removed top 6 bits (of 64) from port B of cell sha_top.$flatten\I1.$verific$xor_38$sha512.v:231$952 ($xor).
Removed top 3 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6106 ($ne).
Removed top 3 bits (of 7) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6108 ($ne).
Removed top 3 bits (of 6) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6110 ($ne).
Removed top 3 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6121 ($ne).
Removed top 1 bits (of 3) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7585 ($ne).
Removed top 6 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7601 ($ne).
Removed top 5 bits (of 7) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7603 ($ne).
Removed top 4 bits (of 6) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7605 ($ne).
Removed top 3 bits (of 5) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7607 ($ne).
Removed top 2 bits (of 4) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7609 ($ne).
Removed top 1 bits (of 3) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7613 ($ne).
Removed top 2 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7634 ($ne).
Removed top 2 bits (of 7) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7636 ($ne).
Removed top 2 bits (of 6) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7638 ($ne).
Removed top 2 bits (of 5) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7640 ($ne).
Removed top 2 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7649 ($ne).
Removed top 2 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7664 ($ne).
Removed top 2 bits (of 7) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7666 ($ne).
Removed top 2 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7679 ($ne).
Removed top 3 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7694 ($ne).
Removed top 3 bits (of 7) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7696 ($ne).
Removed top 3 bits (of 6) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7698 ($ne).
Removed top 3 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7709 ($ne).
Removed top 3 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7724 ($ne).
Removed top 3 bits (of 7) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7726 ($ne).
Removed top 3 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7739 ($ne).
Removed top 3 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7754 ($ne).
Removed top 3 bits (of 7) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7756 ($ne).
Removed top 3 bits (of 6) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7758 ($ne).
Removed top 3 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7769 ($ne).
Removed top 3 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7784 ($ne).
Removed top 3 bits (of 7) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7786 ($ne).
Removed top 2 bits (of 5) from mux cell sha_top.$flatten\I0.$auto$bmuxmap.cc:60:execute$1217 ($mux).
Removed top 4 bits (of 64) from mux cell sha_top.$flatten\I0.$auto$bmuxmap.cc:60:execute$1235 ($mux).
Removed top 2 bits (of 64) from mux cell sha_top.$flatten\I0.$auto$bmuxmap.cc:60:execute$1236 ($mux).
Removed top 1 bits (of 64) from mux cell sha_top.$flatten\I0.$auto$bmuxmap.cc:60:execute$1237 ($mux).
Removed top 2 bits (of 64) from mux cell sha_top.$flatten\I0.$auto$bmuxmap.cc:60:execute$1238 ($mux).
Removed top 2 bits (of 64) from mux cell sha_top.$flatten\I0.$auto$bmuxmap.cc:60:execute$1239 ($mux).
Removed top 4 bits (of 64) from mux cell sha_top.$flatten\I0.$auto$bmuxmap.cc:60:execute$1240 ($mux).
Removed top 3 bits (of 64) from mux cell sha_top.$flatten\I0.$auto$bmuxmap.cc:60:execute$1241 ($mux).
Removed top 3 bits (of 64) from mux cell sha_top.$flatten\I0.$auto$bmuxmap.cc:60:execute$1242 ($mux).
Removed top 4 bits (of 64) from mux cell sha_top.$flatten\I0.$auto$bmuxmap.cc:60:execute$1243 ($mux).
Removed top 3 bits (of 64) from mux cell sha_top.$flatten\I0.$auto$bmuxmap.cc:60:execute$1244 ($mux).
Removed top 3 bits (of 64) from mux cell sha_top.$flatten\I0.$auto$bmuxmap.cc:60:execute$1245 ($mux).
Removed top 3 bits (of 64) from mux cell sha_top.$flatten\I0.$auto$bmuxmap.cc:60:execute$1246 ($mux).
Removed top 4 bits (of 64) from mux cell sha_top.$flatten\I0.$auto$bmuxmap.cc:60:execute$1247 ($mux).
Removed top 5 bits (of 64) from mux cell sha_top.$flatten\I0.$auto$bmuxmap.cc:60:execute$1248 ($mux).
Removed top 5 bits (of 64) from mux cell sha_top.$flatten\I0.$auto$bmuxmap.cc:60:execute$1249 ($mux).
Removed top 5 bits (of 64) from mux cell sha_top.$flatten\I0.$auto$bmuxmap.cc:60:execute$1251 ($mux).
Removed top 3 bits (of 64) from mux cell sha_top.$flatten\I0.$auto$bmuxmap.cc:60:execute$1252 ($mux).
Removed top 1 bits (of 64) from mux cell sha_top.$flatten\I0.$auto$bmuxmap.cc:60:execute$1253 ($mux).
Removed top 2 bits (of 64) from mux cell sha_top.$flatten\I0.$auto$bmuxmap.cc:60:execute$1254 ($mux).
Removed top 4 bits (of 64) from mux cell sha_top.$flatten\I0.$auto$bmuxmap.cc:60:execute$1255 ($mux).
Removed top 4 bits (of 64) from mux cell sha_top.$flatten\I0.$auto$bmuxmap.cc:60:execute$1256 ($mux).
Removed top 2 bits (of 64) from mux cell sha_top.$flatten\I0.$auto$bmuxmap.cc:60:execute$1257 ($mux).
Removed top 1 bits (of 64) from mux cell sha_top.$flatten\I0.$auto$bmuxmap.cc:60:execute$1258 ($mux).
Removed top 3 bits (of 64) from mux cell sha_top.$flatten\I0.$auto$bmuxmap.cc:60:execute$1259 ($mux).
Removed top 3 bits (of 64) from mux cell sha_top.$flatten\I0.$auto$bmuxmap.cc:60:execute$1260 ($mux).
Removed top 4 bits (of 64) from mux cell sha_top.$flatten\I0.$auto$bmuxmap.cc:60:execute$1261 ($mux).
Removed top 4 bits (of 64) from mux cell sha_top.$flatten\I0.$auto$bmuxmap.cc:60:execute$1262 ($mux).
Removed top 3 bits (of 64) from mux cell sha_top.$flatten\I0.$auto$bmuxmap.cc:60:execute$1263 ($mux).
Removed top 1 bits (of 64) from mux cell sha_top.$flatten\I0.$auto$bmuxmap.cc:60:execute$1264 ($mux).
Removed top 3 bits (of 64) from mux cell sha_top.$flatten\I0.$auto$bmuxmap.cc:60:execute$1265 ($mux).
Removed top 2 bits (of 64) from mux cell sha_top.$flatten\I0.$auto$bmuxmap.cc:60:execute$1266 ($mux).
Removed top 2 bits (of 64) from mux cell sha_top.$flatten\I0.$auto$bmuxmap.cc:60:execute$1284 ($mux).
Removed top 1 bits (of 64) from mux cell sha_top.$flatten\I0.$auto$bmuxmap.cc:60:execute$1285 ($mux).
Removed top 1 bits (of 64) from mux cell sha_top.$flatten\I0.$auto$bmuxmap.cc:60:execute$1286 ($mux).
Removed top 2 bits (of 64) from mux cell sha_top.$flatten\I0.$auto$bmuxmap.cc:60:execute$1287 ($mux).
Removed top 1 bits (of 64) from mux cell sha_top.$flatten\I0.$auto$bmuxmap.cc:60:execute$1289 ($mux).
Removed top 1 bits (of 64) from mux cell sha_top.$flatten\I0.$auto$bmuxmap.cc:60:execute$1291 ($mux).
Removed top 1 bits (of 64) from mux cell sha_top.$flatten\I0.$auto$bmuxmap.cc:60:execute$1293 ($mux).
Removed top 2 bits (of 64) from mux cell sha_top.$flatten\I0.$auto$bmuxmap.cc:60:execute$1294 ($mux).
Removed top 1 bits (of 64) from mux cell sha_top.$flatten\I0.$auto$bmuxmap.cc:60:execute$1296 ($mux).
Removed top 1 bits (of 64) from mux cell sha_top.$flatten\I0.$auto$bmuxmap.cc:60:execute$1298 ($mux).
Removed top 2 bits (of 64) from mux cell sha_top.$flatten\I0.$auto$bmuxmap.cc:60:execute$1300 ($mux).
Removed top 1 bits (of 64) from mux cell sha_top.$flatten\I0.$auto$bmuxmap.cc:60:execute$1301 ($mux).
Removed top 1 bits (of 64) from mux cell sha_top.$flatten\I0.$auto$bmuxmap.cc:60:execute$1303 ($mux).
Removed top 2 bits (of 64) from mux cell sha_top.$flatten\I0.$auto$bmuxmap.cc:60:execute$1304 ($mux).
Removed top 3 bits (of 64) from mux cell sha_top.$flatten\I0.$auto$bmuxmap.cc:60:execute$1305 ($mux).
Removed top 1 bits (of 64) from mux cell sha_top.$flatten\I0.$auto$bmuxmap.cc:60:execute$1306 ($mux).
Removed top 2 bits (of 64) from mux cell sha_top.$flatten\I0.$auto$bmuxmap.cc:60:execute$1307 ($mux).
Removed top 1 bits (of 64) from mux cell sha_top.$flatten\I0.$auto$bmuxmap.cc:60:execute$1325 ($mux).
Removed top 1 bits (of 64) from mux cell sha_top.$flatten\I0.$auto$bmuxmap.cc:60:execute$1328 ($mux).
Removed top 2 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7125 ($ne).
Removed top 3 bits (of 5) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6019 ($ne).
Removed top 2 bits (of 5) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7116 ($ne).
Removed top 2 bits (of 6) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7114 ($ne).
Removed top 2 bits (of 7) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7112 ($ne).
Removed top 2 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7110 ($ne).
Removed top 4 bits (of 6) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6017 ($ne).
Removed top 5 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7095 ($ne).
Removed top 5 bits (of 7) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6015 ($ne).
Removed top 5 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7080 ($ne).
Removed top 6 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6013 ($ne).
Removed top 4 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7065 ($ne).
Removed top 4 bits (of 7) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7052 ($ne).
Removed top 4 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7050 ($ne).
Removed top 4 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7035 ($ne).
Removed top 4 bits (of 7) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7022 ($ne).
Removed top 4 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7020 ($ne).
Removed top 3 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7005 ($ne).
Removed top 3 bits (of 7) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6992 ($ne).
Removed top 3 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6990 ($ne).
Removed top 3 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6975 ($ne).
Removed top 1 bits (of 3) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$5997 ($ne).
Removed top 3 bits (of 6) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6964 ($ne).
Removed top 3 bits (of 7) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6962 ($ne).
Removed top 3 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6960 ($ne).
Removed top 3 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6945 ($ne).
Removed top 3 bits (of 7) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6932 ($ne).
Removed top 3 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6930 ($ne).
Removed top 2 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7155 ($ne).
Removed top 2 bits (of 6) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7144 ($ne).
Removed top 2 bits (of 7) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7142 ($ne).
Removed top 2 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$7140 ($ne).
Removed top 3 bits (of 8) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6915 ($ne).
Removed top 3 bits (of 6) from port B of cell sha_top.$auto$opt_dff.cc:195:make_patterns_logic$6904 ($ne).
Removed top 6 bits (of 7) from port B of cell sha_top.$flatten\I0.$verific$add_58$sha512.v:247$972 ($add).
Removed top 1 bits (of 5) from port B of cell sha_top.$flatten\I0.$verific$equal_726$sha512.v:967$1176 ($eq).
Removed top 1 bits (of 5) from port B of cell sha_top.$flatten\I0.$verific$equal_727$sha512.v:968$1177 ($eq).
Removed top 1 bits (of 5) from port B of cell sha_top.$flatten\I0.$verific$equal_728$sha512.v:969$1178 ($eq).
Removed top 1 bits (of 5) from port B of cell sha_top.$flatten\I0.$verific$equal_729$sha512.v:970$1179 ($eq).
Removed top 2 bits (of 5) from port B of cell sha_top.$flatten\I0.$verific$equal_730$sha512.v:971$1180 ($eq).
Removed top 2 bits (of 5) from port B of cell sha_top.$flatten\I0.$verific$equal_731$sha512.v:972$1181 ($eq).
Removed top 2 bits (of 5) from port B of cell sha_top.$flatten\I0.$verific$equal_732$sha512.v:973$1182 ($eq).
Removed top 2 bits (of 5) from port B of cell sha_top.$flatten\I0.$verific$equal_733$sha512.v:974$1183 ($eq).
Removed top 3 bits (of 5) from port B of cell sha_top.$flatten\I0.$verific$equal_734$sha512.v:975$1184 ($eq).
Removed top 3 bits (of 5) from port B of cell sha_top.$flatten\I0.$verific$equal_735$sha512.v:976$1185 ($eq).
Removed top 4 bits (of 5) from port B of cell sha_top.$flatten\I0.$verific$equal_736$sha512.v:977$1186 ($eq).
Removed top 1 bits (of 5) from port B of cell sha_top.$flatten\I0.$verific$equal_757$sha512.v:985$1193 ($eq).
Removed top 1 bits (of 5) from port B of cell sha_top.$flatten\I0.$verific$equal_758$sha512.v:986$1194 ($eq).
Removed top 1 bits (of 5) from port B of cell sha_top.$flatten\I0.$verific$equal_759$sha512.v:987$1195 ($eq).
Removed top 1 bits (of 5) from port B of cell sha_top.$flatten\I0.$verific$equal_760$sha512.v:988$1196 ($eq).
Removed top 1 bits (of 5) from mux cell sha_top.$flatten\I0.$verific$mux_13$sha512.v:210$930 ($mux).
Removed top 1 bits (of 6) from port A of cell sha_top.$flatten\I0.$verific$sub_777$sha512.v:1006$1203 ($sub).
Removed top 5 bits (of 6) from port B of cell sha_top.$flatten\I0.$verific$sub_777$sha512.v:1006$1203 ($sub).
Removed top 1 bits (of 6) from port Y of cell sha_top.$flatten\I0.$verific$sub_777$sha512.v:1006$1203 ($sub).
Removed top 7 bits (of 64) from port B of cell sha_top.$flatten\I0.$verific$xor_34$sha512.v:228$948 ($xor).
Removed top 6 bits (of 64) from port B of cell sha_top.$flatten\I0.$verific$xor_38$sha512.v:231$952 ($xor).
Removed top 1 bits (of 5) from mux cell sha_top.$flatten\I2.$verific$mux_12$sha512.v:210$929 ($mux).
Removed top 1 bits (of 5) from mux cell sha_top.$flatten\I1.$verific$mux_12$sha512.v:210$929 ($mux).
Removed top 1 bits (of 5) from mux cell sha_top.$flatten\I0.$verific$mux_12$sha512.v:210$929 ($mux).
Removed top 2 bits (of 5) from wire sha_top.$flatten\I0.$auto$bmuxmap.cc:58:execute$1216.
Removed top 1026 bits (of 4096) from wire sha_top.$flatten\I0.$auto$bmuxmap.cc:58:execute$1218.
Removed top 514 bits (of 2048) from wire sha_top.$flatten\I0.$auto$bmuxmap.cc:58:execute$1283.
Removed top 257 bits (of 1024) from wire sha_top.$flatten\I0.$auto$bmuxmap.cc:58:execute$1316.
Removed top 254 bits (of 512) from wire sha_top.$flatten\I0.$auto$bmuxmap.cc:58:execute$1333.
Removed top 64 bits (of 256) from wire sha_top.$flatten\I0.$auto$bmuxmap.cc:58:execute$1342.
Removed top 16 bits (of 64) from wire sha_top.$flatten\I0.$auto$bmuxmap.cc:58:execute$5640.
Removed top 8 bits (of 32) from wire sha_top.$flatten\I0.$auto$bmuxmap.cc:58:execute$5705.
Removed top 4 bits (of 16) from wire sha_top.$flatten\I0.$auto$bmuxmap.cc:58:execute$5738.
Removed top 2 bits (of 8) from wire sha_top.$flatten\I0.$auto$bmuxmap.cc:58:execute$5755.
Removed top 1 bits (of 4) from wire sha_top.$flatten\I0.$auto$bmuxmap.cc:58:execute$5764.
Removed top 112 bits (of 448) from wire sha_top.$flatten\I0.$auto$bmuxmap.cc:58:execute$5774.
Removed top 56 bits (of 224) from wire sha_top.$flatten\I0.$auto$bmuxmap.cc:58:execute$5839.
Removed top 28 bits (of 112) from wire sha_top.$flatten\I0.$auto$bmuxmap.cc:58:execute$5872.
Removed top 14 bits (of 56) from wire sha_top.$flatten\I0.$auto$bmuxmap.cc:58:execute$5889.
Removed top 7 bits (of 28) from wire sha_top.$flatten\I0.$auto$bmuxmap.cc:58:execute$5898.
Removed top 1 bits (of 5) from wire sha_top.$flatten\I0.$verific$n29$337.
Removed top 1 bits (of 5) from wire sha_top.$flatten\I0.$verific$n35$338.
Removed top 1 bits (of 6) from wire sha_top.$flatten\I0.$verific$n37757$909.
Removed top 2 bits (of 5) from wire sha_top.$flatten\I1.$auto$bmuxmap.cc:58:execute$1216.
Removed top 1026 bits (of 4096) from wire sha_top.$flatten\I1.$auto$bmuxmap.cc:58:execute$1218.
Removed top 514 bits (of 2048) from wire sha_top.$flatten\I1.$auto$bmuxmap.cc:58:execute$1283.
Removed top 257 bits (of 1024) from wire sha_top.$flatten\I1.$auto$bmuxmap.cc:58:execute$1316.
Removed top 128 bits (of 512) from wire sha_top.$flatten\I1.$auto$bmuxmap.cc:58:execute$1333.
Removed top 64 bits (of 256) from wire sha_top.$flatten\I1.$auto$bmuxmap.cc:58:execute$1342.
Removed top 16 bits (of 64) from wire sha_top.$flatten\I1.$auto$bmuxmap.cc:58:execute$5640.
Removed top 8 bits (of 32) from wire sha_top.$flatten\I1.$auto$bmuxmap.cc:58:execute$5705.
Removed top 4 bits (of 16) from wire sha_top.$flatten\I1.$auto$bmuxmap.cc:58:execute$5738.
Removed top 2 bits (of 8) from wire sha_top.$flatten\I1.$auto$bmuxmap.cc:58:execute$5755.
Removed top 1 bits (of 4) from wire sha_top.$flatten\I1.$auto$bmuxmap.cc:58:execute$5764.
Removed top 112 bits (of 448) from wire sha_top.$flatten\I1.$auto$bmuxmap.cc:58:execute$5774.
Removed top 56 bits (of 224) from wire sha_top.$flatten\I1.$auto$bmuxmap.cc:58:execute$5839.
Removed top 28 bits (of 112) from wire sha_top.$flatten\I1.$auto$bmuxmap.cc:58:execute$5872.
Removed top 14 bits (of 56) from wire sha_top.$flatten\I1.$auto$bmuxmap.cc:58:execute$5889.
Removed top 7 bits (of 28) from wire sha_top.$flatten\I1.$auto$bmuxmap.cc:58:execute$5898.
Removed top 1 bits (of 5) from wire sha_top.$flatten\I1.$verific$n29$337.
Removed top 1 bits (of 5) from wire sha_top.$flatten\I1.$verific$n35$338.
Removed top 1 bits (of 6) from wire sha_top.$flatten\I1.$verific$n37757$909.
Removed top 2 bits (of 5) from wire sha_top.$flatten\I2.$auto$bmuxmap.cc:58:execute$1216.
Removed top 1026 bits (of 4096) from wire sha_top.$flatten\I2.$auto$bmuxmap.cc:58:execute$1218.
Removed top 1296 bits (of 2048) from wire sha_top.$flatten\I2.$auto$bmuxmap.cc:58:execute$1283.
Removed top 257 bits (of 1024) from wire sha_top.$flatten\I2.$auto$bmuxmap.cc:58:execute$1316.
Removed top 128 bits (of 512) from wire sha_top.$flatten\I2.$auto$bmuxmap.cc:58:execute$1333.
Removed top 64 bits (of 256) from wire sha_top.$flatten\I2.$auto$bmuxmap.cc:58:execute$1342.
Removed top 16 bits (of 64) from wire sha_top.$flatten\I2.$auto$bmuxmap.cc:58:execute$5640.
Removed top 8 bits (of 32) from wire sha_top.$flatten\I2.$auto$bmuxmap.cc:58:execute$5705.
Removed top 4 bits (of 16) from wire sha_top.$flatten\I2.$auto$bmuxmap.cc:58:execute$5738.
Removed top 2 bits (of 8) from wire sha_top.$flatten\I2.$auto$bmuxmap.cc:58:execute$5755.
Removed top 1 bits (of 4) from wire sha_top.$flatten\I2.$auto$bmuxmap.cc:58:execute$5764.
Removed top 112 bits (of 448) from wire sha_top.$flatten\I2.$auto$bmuxmap.cc:58:execute$5774.
Removed top 56 bits (of 224) from wire sha_top.$flatten\I2.$auto$bmuxmap.cc:58:execute$5839.
Removed top 28 bits (of 112) from wire sha_top.$flatten\I2.$auto$bmuxmap.cc:58:execute$5872.
Removed top 14 bits (of 56) from wire sha_top.$flatten\I2.$auto$bmuxmap.cc:58:execute$5889.
Removed top 7 bits (of 28) from wire sha_top.$flatten\I2.$auto$bmuxmap.cc:58:execute$5898.
Removed top 1 bits (of 5) from wire sha_top.$flatten\I2.$verific$n29$337.
Removed top 1 bits (of 5) from wire sha_top.$flatten\I2.$verific$n35$338.
Removed top 1 bits (of 6) from wire sha_top.$flatten\I2.$verific$n37757$909.
Removed top 2 bits (of 5) from wire sha_top.$flatten\I3.$auto$bmuxmap.cc:58:execute$1216.
Removed top 1026 bits (of 4096) from wire sha_top.$flatten\I3.$auto$bmuxmap.cc:58:execute$1218.
Removed top 257 bits (of 1024) from wire sha_top.$flatten\I3.$auto$bmuxmap.cc:58:execute$1316.
Removed top 16 bits (of 64) from wire sha_top.$flatten\I3.$auto$bmuxmap.cc:58:execute$5640.
Removed top 8 bits (of 32) from wire sha_top.$flatten\I3.$auto$bmuxmap.cc:58:execute$5705.
Removed top 4 bits (of 16) from wire sha_top.$flatten\I3.$auto$bmuxmap.cc:58:execute$5738.
Removed top 2 bits (of 8) from wire sha_top.$flatten\I3.$auto$bmuxmap.cc:58:execute$5755.
Removed top 1 bits (of 4) from wire sha_top.$flatten\I3.$auto$bmuxmap.cc:58:execute$5764.
Removed top 112 bits (of 448) from wire sha_top.$flatten\I3.$auto$bmuxmap.cc:58:execute$5774.
Removed top 56 bits (of 224) from wire sha_top.$flatten\I3.$auto$bmuxmap.cc:58:execute$5839.
Removed top 28 bits (of 112) from wire sha_top.$flatten\I3.$auto$bmuxmap.cc:58:execute$5872.
Removed top 14 bits (of 56) from wire sha_top.$flatten\I3.$auto$bmuxmap.cc:58:execute$5889.
Removed top 7 bits (of 28) from wire sha_top.$flatten\I3.$auto$bmuxmap.cc:58:execute$5898.
Removed top 1 bits (of 6) from wire sha_top.$flatten\I3.$verific$n37757$909.

yosys> peepopt

3.57. Executing PEEPOPT pass (run peephole optimizers).

yosys> opt_clean

3.58. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sha_top..
Removed 0 unused cells and 75 unused wires.
<suppressed ~1 debug messages>

yosys> bmuxmap

3.59. Executing BMUXMAP pass.

yosys> demuxmap

3.60. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> alumacc

3.61. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module sha_top:
  creating $macc model for $flatten\I0.$verific$add_40$sha512.v:233$954 ($add).
  creating $macc model for $flatten\I0.$verific$add_41$sha512.v:233$955 ($add).
  creating $macc model for $flatten\I0.$verific$add_42$sha512.v:233$956 ($add).
  creating $macc model for $flatten\I0.$verific$add_44$sha512.v:235$958 ($add).
  creating $macc model for $flatten\I0.$verific$add_45$sha512.v:235$959 ($add).
  creating $macc model for $flatten\I0.$verific$add_46$sha512.v:235$960 ($add).
  creating $macc model for $flatten\I0.$verific$add_47$sha512.v:235$961 ($add).
  creating $macc model for $flatten\I0.$verific$add_482$sha512.v:806$1048 ($add).
  creating $macc model for $flatten\I0.$verific$add_484$sha512.v:807$1050 ($add).
  creating $macc model for $flatten\I0.$verific$add_486$sha512.v:808$1052 ($add).
  creating $macc model for $flatten\I0.$verific$add_488$sha512.v:809$1054 ($add).
  creating $macc model for $flatten\I0.$verific$add_49$sha512.v:237$963 ($add).
  creating $macc model for $flatten\I0.$verific$add_490$sha512.v:810$1056 ($add).
  creating $macc model for $flatten\I0.$verific$add_492$sha512.v:811$1058 ($add).
  creating $macc model for $flatten\I0.$verific$add_494$sha512.v:812$1060 ($add).
  creating $macc model for $flatten\I0.$verific$add_496$sha512.v:813$1062 ($add).
  creating $macc model for $flatten\I0.$verific$add_52$sha512.v:240$966 ($add).
  creating $macc model for $flatten\I0.$verific$add_54$sha512.v:241$968 ($add).
  creating $macc model for $flatten\I0.$verific$add_58$sha512.v:247$972 ($add).
  creating $macc model for $flatten\I0.$verific$sub_777$sha512.v:1006$1203 ($sub).
  creating $macc model for $flatten\I1.$verific$add_40$sha512.v:233$954 ($add).
  creating $macc model for $flatten\I1.$verific$add_41$sha512.v:233$955 ($add).
  creating $macc model for $flatten\I1.$verific$add_42$sha512.v:233$956 ($add).
  creating $macc model for $flatten\I1.$verific$add_44$sha512.v:235$958 ($add).
  creating $macc model for $flatten\I1.$verific$add_45$sha512.v:235$959 ($add).
  creating $macc model for $flatten\I1.$verific$add_46$sha512.v:235$960 ($add).
  creating $macc model for $flatten\I1.$verific$add_47$sha512.v:235$961 ($add).
  creating $macc model for $flatten\I1.$verific$add_482$sha512.v:806$1048 ($add).
  creating $macc model for $flatten\I1.$verific$add_484$sha512.v:807$1050 ($add).
  creating $macc model for $flatten\I1.$verific$add_486$sha512.v:808$1052 ($add).
  creating $macc model for $flatten\I1.$verific$add_488$sha512.v:809$1054 ($add).
  creating $macc model for $flatten\I1.$verific$add_49$sha512.v:237$963 ($add).
  creating $macc model for $flatten\I1.$verific$add_490$sha512.v:810$1056 ($add).
  creating $macc model for $flatten\I1.$verific$add_492$sha512.v:811$1058 ($add).
  creating $macc model for $flatten\I1.$verific$add_494$sha512.v:812$1060 ($add).
  creating $macc model for $flatten\I1.$verific$add_496$sha512.v:813$1062 ($add).
  creating $macc model for $flatten\I1.$verific$add_52$sha512.v:240$966 ($add).
  creating $macc model for $flatten\I1.$verific$add_54$sha512.v:241$968 ($add).
  creating $macc model for $flatten\I1.$verific$add_58$sha512.v:247$972 ($add).
  creating $macc model for $flatten\I1.$verific$sub_777$sha512.v:1006$1203 ($sub).
  creating $macc model for $flatten\I2.$verific$add_40$sha512.v:233$954 ($add).
  creating $macc model for $flatten\I2.$verific$add_41$sha512.v:233$955 ($add).
  creating $macc model for $flatten\I2.$verific$add_42$sha512.v:233$956 ($add).
  creating $macc model for $flatten\I2.$verific$add_44$sha512.v:235$958 ($add).
  creating $macc model for $flatten\I2.$verific$add_45$sha512.v:235$959 ($add).
  creating $macc model for $flatten\I2.$verific$add_46$sha512.v:235$960 ($add).
  creating $macc model for $flatten\I2.$verific$add_47$sha512.v:235$961 ($add).
  creating $macc model for $flatten\I2.$verific$add_482$sha512.v:806$1048 ($add).
  creating $macc model for $flatten\I2.$verific$add_484$sha512.v:807$1050 ($add).
  creating $macc model for $flatten\I2.$verific$add_486$sha512.v:808$1052 ($add).
  creating $macc model for $flatten\I2.$verific$add_488$sha512.v:809$1054 ($add).
  creating $macc model for $flatten\I2.$verific$add_49$sha512.v:237$963 ($add).
  creating $macc model for $flatten\I2.$verific$add_490$sha512.v:810$1056 ($add).
  creating $macc model for $flatten\I2.$verific$add_492$sha512.v:811$1058 ($add).
  creating $macc model for $flatten\I2.$verific$add_494$sha512.v:812$1060 ($add).
  creating $macc model for $flatten\I2.$verific$add_496$sha512.v:813$1062 ($add).
  creating $macc model for $flatten\I2.$verific$add_52$sha512.v:240$966 ($add).
  creating $macc model for $flatten\I2.$verific$add_54$sha512.v:241$968 ($add).
  creating $macc model for $flatten\I2.$verific$add_58$sha512.v:247$972 ($add).
  creating $macc model for $flatten\I2.$verific$sub_777$sha512.v:1006$1203 ($sub).
  creating $macc model for $flatten\I3.$verific$add_40$sha512.v:233$954 ($add).
  creating $macc model for $flatten\I3.$verific$add_41$sha512.v:233$955 ($add).
  creating $macc model for $flatten\I3.$verific$add_42$sha512.v:233$956 ($add).
  creating $macc model for $flatten\I3.$verific$add_44$sha512.v:235$958 ($add).
  creating $macc model for $flatten\I3.$verific$add_45$sha512.v:235$959 ($add).
  creating $macc model for $flatten\I3.$verific$add_46$sha512.v:235$960 ($add).
  creating $macc model for $flatten\I3.$verific$add_47$sha512.v:235$961 ($add).
  creating $macc model for $flatten\I3.$verific$add_482$sha512.v:806$1048 ($add).
  creating $macc model for $flatten\I3.$verific$add_484$sha512.v:807$1050 ($add).
  creating $macc model for $flatten\I3.$verific$add_486$sha512.v:808$1052 ($add).
  creating $macc model for $flatten\I3.$verific$add_488$sha512.v:809$1054 ($add).
  creating $macc model for $flatten\I3.$verific$add_49$sha512.v:237$963 ($add).
  creating $macc model for $flatten\I3.$verific$add_490$sha512.v:810$1056 ($add).
  creating $macc model for $flatten\I3.$verific$add_492$sha512.v:811$1058 ($add).
  creating $macc model for $flatten\I3.$verific$add_494$sha512.v:812$1060 ($add).
  creating $macc model for $flatten\I3.$verific$add_496$sha512.v:813$1062 ($add).
  creating $macc model for $flatten\I3.$verific$add_52$sha512.v:240$966 ($add).
  creating $macc model for $flatten\I3.$verific$add_54$sha512.v:241$968 ($add).
  creating $macc model for $flatten\I3.$verific$add_58$sha512.v:247$972 ($add).
  creating $macc model for $flatten\I3.$verific$sub_777$sha512.v:1006$1203 ($sub).
  merging $macc model for $flatten\I3.$verific$add_49$sha512.v:237$963 into $flatten\I3.$verific$add_54$sha512.v:241$968.
  merging $macc model for $flatten\I3.$verific$add_46$sha512.v:235$960 into $flatten\I3.$verific$add_47$sha512.v:235$961.
  merging $macc model for $flatten\I3.$verific$add_45$sha512.v:235$959 into $flatten\I3.$verific$add_47$sha512.v:235$961.
  merging $macc model for $flatten\I3.$verific$add_44$sha512.v:235$958 into $flatten\I3.$verific$add_47$sha512.v:235$961.
  merging $macc model for $flatten\I3.$verific$add_41$sha512.v:233$955 into $flatten\I3.$verific$add_42$sha512.v:233$956.
  merging $macc model for $flatten\I3.$verific$add_40$sha512.v:233$954 into $flatten\I3.$verific$add_42$sha512.v:233$956.
  merging $macc model for $flatten\I2.$verific$add_49$sha512.v:237$963 into $flatten\I2.$verific$add_54$sha512.v:241$968.
  merging $macc model for $flatten\I2.$verific$add_46$sha512.v:235$960 into $flatten\I2.$verific$add_47$sha512.v:235$961.
  merging $macc model for $flatten\I2.$verific$add_45$sha512.v:235$959 into $flatten\I2.$verific$add_47$sha512.v:235$961.
  merging $macc model for $flatten\I2.$verific$add_44$sha512.v:235$958 into $flatten\I2.$verific$add_47$sha512.v:235$961.
  merging $macc model for $flatten\I2.$verific$add_41$sha512.v:233$955 into $flatten\I2.$verific$add_42$sha512.v:233$956.
  merging $macc model for $flatten\I2.$verific$add_40$sha512.v:233$954 into $flatten\I2.$verific$add_42$sha512.v:233$956.
  merging $macc model for $flatten\I1.$verific$add_49$sha512.v:237$963 into $flatten\I1.$verific$add_54$sha512.v:241$968.
  merging $macc model for $flatten\I1.$verific$add_46$sha512.v:235$960 into $flatten\I1.$verific$add_47$sha512.v:235$961.
  merging $macc model for $flatten\I1.$verific$add_45$sha512.v:235$959 into $flatten\I1.$verific$add_47$sha512.v:235$961.
  merging $macc model for $flatten\I1.$verific$add_44$sha512.v:235$958 into $flatten\I1.$verific$add_47$sha512.v:235$961.
  merging $macc model for $flatten\I1.$verific$add_41$sha512.v:233$955 into $flatten\I1.$verific$add_42$sha512.v:233$956.
  merging $macc model for $flatten\I1.$verific$add_40$sha512.v:233$954 into $flatten\I1.$verific$add_42$sha512.v:233$956.
  merging $macc model for $flatten\I0.$verific$add_49$sha512.v:237$963 into $flatten\I0.$verific$add_54$sha512.v:241$968.
  merging $macc model for $flatten\I0.$verific$add_46$sha512.v:235$960 into $flatten\I0.$verific$add_47$sha512.v:235$961.
  merging $macc model for $flatten\I0.$verific$add_45$sha512.v:235$959 into $flatten\I0.$verific$add_47$sha512.v:235$961.
  merging $macc model for $flatten\I0.$verific$add_44$sha512.v:235$958 into $flatten\I0.$verific$add_47$sha512.v:235$961.
  merging $macc model for $flatten\I0.$verific$add_41$sha512.v:233$955 into $flatten\I0.$verific$add_42$sha512.v:233$956.
  merging $macc model for $flatten\I0.$verific$add_40$sha512.v:233$954 into $flatten\I0.$verific$add_42$sha512.v:233$956.
  creating $alu model for $macc $flatten\I2.$verific$add_496$sha512.v:813$1062.
  creating $alu model for $macc $flatten\I2.$verific$add_494$sha512.v:812$1060.
  creating $alu model for $macc $flatten\I2.$verific$add_492$sha512.v:811$1058.
  creating $alu model for $macc $flatten\I2.$verific$add_490$sha512.v:810$1056.
  creating $alu model for $macc $flatten\I2.$verific$add_488$sha512.v:809$1054.
  creating $alu model for $macc $flatten\I2.$verific$add_486$sha512.v:808$1052.
  creating $alu model for $macc $flatten\I2.$verific$add_484$sha512.v:807$1050.
  creating $alu model for $macc $flatten\I2.$verific$add_482$sha512.v:806$1048.
  creating $alu model for $macc $flatten\I2.$verific$sub_777$sha512.v:1006$1203.
  creating $alu model for $macc $flatten\I2.$verific$add_58$sha512.v:247$972.
  creating $alu model for $macc $flatten\I3.$verific$add_482$sha512.v:806$1048.
  creating $alu model for $macc $flatten\I1.$verific$sub_777$sha512.v:1006$1203.
  creating $alu model for $macc $flatten\I1.$verific$add_58$sha512.v:247$972.
  creating $alu model for $macc $flatten\I1.$verific$add_52$sha512.v:240$966.
  creating $alu model for $macc $flatten\I1.$verific$add_496$sha512.v:813$1062.
  creating $alu model for $macc $flatten\I1.$verific$add_494$sha512.v:812$1060.
  creating $alu model for $macc $flatten\I1.$verific$add_492$sha512.v:811$1058.
  creating $alu model for $macc $flatten\I1.$verific$add_490$sha512.v:810$1056.
  creating $alu model for $macc $flatten\I3.$verific$add_484$sha512.v:807$1050.
  creating $alu model for $macc $flatten\I1.$verific$add_488$sha512.v:809$1054.
  creating $alu model for $macc $flatten\I1.$verific$add_486$sha512.v:808$1052.
  creating $alu model for $macc $flatten\I1.$verific$add_484$sha512.v:807$1050.
  creating $alu model for $macc $flatten\I1.$verific$add_482$sha512.v:806$1048.
  creating $alu model for $macc $flatten\I3.$verific$add_486$sha512.v:808$1052.
  creating $alu model for $macc $flatten\I3.$verific$add_488$sha512.v:809$1054.
  creating $alu model for $macc $flatten\I2.$verific$add_52$sha512.v:240$966.
  creating $alu model for $macc $flatten\I3.$verific$add_490$sha512.v:810$1056.
  creating $alu model for $macc $flatten\I3.$verific$add_492$sha512.v:811$1058.
  creating $alu model for $macc $flatten\I0.$verific$sub_777$sha512.v:1006$1203.
  creating $alu model for $macc $flatten\I0.$verific$add_58$sha512.v:247$972.
  creating $alu model for $macc $flatten\I0.$verific$add_52$sha512.v:240$966.
  creating $alu model for $macc $flatten\I0.$verific$add_496$sha512.v:813$1062.
  creating $alu model for $macc $flatten\I0.$verific$add_494$sha512.v:812$1060.
  creating $alu model for $macc $flatten\I0.$verific$add_492$sha512.v:811$1058.
  creating $alu model for $macc $flatten\I0.$verific$add_490$sha512.v:810$1056.
  creating $alu model for $macc $flatten\I3.$verific$add_494$sha512.v:812$1060.
  creating $alu model for $macc $flatten\I0.$verific$add_488$sha512.v:809$1054.
  creating $alu model for $macc $flatten\I0.$verific$add_486$sha512.v:808$1052.
  creating $alu model for $macc $flatten\I0.$verific$add_484$sha512.v:807$1050.
  creating $alu model for $macc $flatten\I0.$verific$add_482$sha512.v:806$1048.
  creating $alu model for $macc $flatten\I3.$verific$add_496$sha512.v:813$1062.
  creating $alu model for $macc $flatten\I3.$verific$add_52$sha512.v:240$966.
  creating $alu model for $macc $flatten\I3.$verific$add_58$sha512.v:247$972.
  creating $alu model for $macc $flatten\I3.$verific$sub_777$sha512.v:1006$1203.
  creating $macc cell for $flatten\I1.$verific$add_42$sha512.v:233$956: $auto$alumacc.cc:365:replace_macc$9237
  creating $macc cell for $flatten\I3.$verific$add_47$sha512.v:235$961: $auto$alumacc.cc:365:replace_macc$9238
  creating $macc cell for $flatten\I0.$verific$add_54$sha512.v:241$968: $auto$alumacc.cc:365:replace_macc$9239
  creating $macc cell for $flatten\I2.$verific$add_42$sha512.v:233$956: $auto$alumacc.cc:365:replace_macc$9240
  creating $macc cell for $flatten\I3.$verific$add_42$sha512.v:233$956: $auto$alumacc.cc:365:replace_macc$9241
  creating $macc cell for $flatten\I0.$verific$add_47$sha512.v:235$961: $auto$alumacc.cc:365:replace_macc$9242
  creating $macc cell for $flatten\I2.$verific$add_54$sha512.v:241$968: $auto$alumacc.cc:365:replace_macc$9243
  creating $macc cell for $flatten\I1.$verific$add_47$sha512.v:235$961: $auto$alumacc.cc:365:replace_macc$9244
  creating $macc cell for $flatten\I3.$verific$add_54$sha512.v:241$968: $auto$alumacc.cc:365:replace_macc$9245
  creating $macc cell for $flatten\I0.$verific$add_42$sha512.v:233$956: $auto$alumacc.cc:365:replace_macc$9246
  creating $macc cell for $flatten\I1.$verific$add_54$sha512.v:241$968: $auto$alumacc.cc:365:replace_macc$9247
  creating $macc cell for $flatten\I2.$verific$add_47$sha512.v:235$961: $auto$alumacc.cc:365:replace_macc$9248
  creating $alu cell for $flatten\I3.$verific$sub_777$sha512.v:1006$1203: $auto$alumacc.cc:485:replace_alu$9249
  creating $alu cell for $flatten\I3.$verific$add_58$sha512.v:247$972: $auto$alumacc.cc:485:replace_alu$9252
  creating $alu cell for $flatten\I3.$verific$add_52$sha512.v:240$966: $auto$alumacc.cc:485:replace_alu$9255
  creating $alu cell for $flatten\I3.$verific$add_496$sha512.v:813$1062: $auto$alumacc.cc:485:replace_alu$9258
  creating $alu cell for $flatten\I0.$verific$add_482$sha512.v:806$1048: $auto$alumacc.cc:485:replace_alu$9261
  creating $alu cell for $flatten\I0.$verific$add_484$sha512.v:807$1050: $auto$alumacc.cc:485:replace_alu$9264
  creating $alu cell for $flatten\I0.$verific$add_486$sha512.v:808$1052: $auto$alumacc.cc:485:replace_alu$9267
  creating $alu cell for $flatten\I0.$verific$add_488$sha512.v:809$1054: $auto$alumacc.cc:485:replace_alu$9270
  creating $alu cell for $flatten\I3.$verific$add_494$sha512.v:812$1060: $auto$alumacc.cc:485:replace_alu$9273
  creating $alu cell for $flatten\I0.$verific$add_490$sha512.v:810$1056: $auto$alumacc.cc:485:replace_alu$9276
  creating $alu cell for $flatten\I0.$verific$add_492$sha512.v:811$1058: $auto$alumacc.cc:485:replace_alu$9279
  creating $alu cell for $flatten\I0.$verific$add_494$sha512.v:812$1060: $auto$alumacc.cc:485:replace_alu$9282
  creating $alu cell for $flatten\I0.$verific$add_496$sha512.v:813$1062: $auto$alumacc.cc:485:replace_alu$9285
  creating $alu cell for $flatten\I0.$verific$add_52$sha512.v:240$966: $auto$alumacc.cc:485:replace_alu$9288
  creating $alu cell for $flatten\I0.$verific$add_58$sha512.v:247$972: $auto$alumacc.cc:485:replace_alu$9291
  creating $alu cell for $flatten\I0.$verific$sub_777$sha512.v:1006$1203: $auto$alumacc.cc:485:replace_alu$9294
  creating $alu cell for $flatten\I3.$verific$add_492$sha512.v:811$1058: $auto$alumacc.cc:485:replace_alu$9297
  creating $alu cell for $flatten\I3.$verific$add_490$sha512.v:810$1056: $auto$alumacc.cc:485:replace_alu$9300
  creating $alu cell for $flatten\I2.$verific$add_52$sha512.v:240$966: $auto$alumacc.cc:485:replace_alu$9303
  creating $alu cell for $flatten\I3.$verific$add_488$sha512.v:809$1054: $auto$alumacc.cc:485:replace_alu$9306
  creating $alu cell for $flatten\I3.$verific$add_486$sha512.v:808$1052: $auto$alumacc.cc:485:replace_alu$9309
  creating $alu cell for $flatten\I1.$verific$add_482$sha512.v:806$1048: $auto$alumacc.cc:485:replace_alu$9312
  creating $alu cell for $flatten\I1.$verific$add_484$sha512.v:807$1050: $auto$alumacc.cc:485:replace_alu$9315
  creating $alu cell for $flatten\I1.$verific$add_486$sha512.v:808$1052: $auto$alumacc.cc:485:replace_alu$9318
  creating $alu cell for $flatten\I1.$verific$add_488$sha512.v:809$1054: $auto$alumacc.cc:485:replace_alu$9321
  creating $alu cell for $flatten\I3.$verific$add_484$sha512.v:807$1050: $auto$alumacc.cc:485:replace_alu$9324
  creating $alu cell for $flatten\I1.$verific$add_490$sha512.v:810$1056: $auto$alumacc.cc:485:replace_alu$9327
  creating $alu cell for $flatten\I1.$verific$add_492$sha512.v:811$1058: $auto$alumacc.cc:485:replace_alu$9330
  creating $alu cell for $flatten\I1.$verific$add_494$sha512.v:812$1060: $auto$alumacc.cc:485:replace_alu$9333
  creating $alu cell for $flatten\I1.$verific$add_496$sha512.v:813$1062: $auto$alumacc.cc:485:replace_alu$9336
  creating $alu cell for $flatten\I1.$verific$add_52$sha512.v:240$966: $auto$alumacc.cc:485:replace_alu$9339
  creating $alu cell for $flatten\I1.$verific$add_58$sha512.v:247$972: $auto$alumacc.cc:485:replace_alu$9342
  creating $alu cell for $flatten\I1.$verific$sub_777$sha512.v:1006$1203: $auto$alumacc.cc:485:replace_alu$9345
  creating $alu cell for $flatten\I3.$verific$add_482$sha512.v:806$1048: $auto$alumacc.cc:485:replace_alu$9348
  creating $alu cell for $flatten\I2.$verific$add_58$sha512.v:247$972: $auto$alumacc.cc:485:replace_alu$9351
  creating $alu cell for $flatten\I2.$verific$sub_777$sha512.v:1006$1203: $auto$alumacc.cc:485:replace_alu$9354
  creating $alu cell for $flatten\I2.$verific$add_482$sha512.v:806$1048: $auto$alumacc.cc:485:replace_alu$9357
  creating $alu cell for $flatten\I2.$verific$add_484$sha512.v:807$1050: $auto$alumacc.cc:485:replace_alu$9360
  creating $alu cell for $flatten\I2.$verific$add_486$sha512.v:808$1052: $auto$alumacc.cc:485:replace_alu$9363
  creating $alu cell for $flatten\I2.$verific$add_488$sha512.v:809$1054: $auto$alumacc.cc:485:replace_alu$9366
  creating $alu cell for $flatten\I2.$verific$add_490$sha512.v:810$1056: $auto$alumacc.cc:485:replace_alu$9369
  creating $alu cell for $flatten\I2.$verific$add_492$sha512.v:811$1058: $auto$alumacc.cc:485:replace_alu$9372
  creating $alu cell for $flatten\I2.$verific$add_494$sha512.v:812$1060: $auto$alumacc.cc:485:replace_alu$9375
  creating $alu cell for $flatten\I2.$verific$add_496$sha512.v:813$1062: $auto$alumacc.cc:485:replace_alu$9378
  created 44 $alu and 12 $macc cells.

yosys> opt_expr

3.62. Executing OPT_EXPR pass (perform const folding).
Optimizing module sha_top.

yosys> opt_merge -nomux

3.63. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sha_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.64. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sha_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~284 debug messages>

yosys> opt_reduce

3.65. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sha_top.
Performed a total of 0 changes.

yosys> opt_merge

3.66. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sha_top'.
Removed a total of 0 cells.

yosys> opt_share

3.67. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.68. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.69. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sha_top..
Removed 24 unused cells and 24 unused wires.
<suppressed ~29 debug messages>

yosys> opt_expr

3.70. Executing OPT_EXPR pass (perform const folding).
Optimizing module sha_top.

yosys> opt_muxtree

3.71. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sha_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~284 debug messages>

yosys> opt_reduce

3.72. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sha_top.
Performed a total of 0 changes.

yosys> opt_merge

3.73. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sha_top'.
Removed a total of 0 cells.

yosys> opt_share

3.74. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.75. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.76. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sha_top..

yosys> opt_expr

3.77. Executing OPT_EXPR pass (perform const folding).
Optimizing module sha_top.
MAX OPT ITERATION = 2

yosys> stat

3.78. Printing statistics.

=== sha_top ===

   Number of wires:               2043
   Number of wire bits:         739829
   Number of public wires:         253
   Number of public wire bits:   15951
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2551
     $alu                           44
     $and                           12
     $dff                            8
     $dffe                         213
     $eq                            60
     $logic_not                      4
     $macc                          12
     $mux                         1700
     $ne                           265
     $not                            4
     $pmux                           8
     $reduce_and                   144
     $reduce_bool                   29
     $reduce_or                      4
     $xor                           44


yosys> memory -nomap

3.79. Executing MEMORY pass.

yosys> opt_mem

3.79.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.79.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.79.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.79.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.79.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.79.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sha_top..

yosys> memory_share

3.79.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.79.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.79.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sha_top..

yosys> memory_collect

3.79.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.80. Printing statistics.

=== sha_top ===

   Number of wires:               2043
   Number of wire bits:         739829
   Number of public wires:         253
   Number of public wire bits:   15951
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2551
     $alu                           44
     $and                           12
     $dff                            8
     $dffe                         213
     $eq                            60
     $logic_not                      4
     $macc                          12
     $mux                         1700
     $ne                           265
     $not                            4
     $pmux                           8
     $reduce_and                   144
     $reduce_bool                   29
     $reduce_or                      4
     $xor                           44


yosys> muxpack

3.81. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~1393 debug messages>

yosys> opt_clean

3.82. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sha_top..

yosys> pmuxtree

3.83. Executing PMUXTREE pass.

yosys> muxpack

3.84. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converting sha_top.$auto$pmuxtree.cc:65:recursive_mux_generator$9709 ... sha_top.$auto$pmuxtree.cc:65:recursive_mux_generator$9711 to a pmux with 2 cases.
Converting sha_top.$auto$pmuxtree.cc:65:recursive_mux_generator$9623 ... sha_top.$auto$pmuxtree.cc:65:recursive_mux_generator$9625 to a pmux with 2 cases.
Converting sha_top.$auto$pmuxtree.cc:65:recursive_mux_generator$9537 ... sha_top.$auto$pmuxtree.cc:65:recursive_mux_generator$9539 to a pmux with 2 cases.
Converting sha_top.$auto$pmuxtree.cc:65:recursive_mux_generator$9451 ... sha_top.$auto$pmuxtree.cc:65:recursive_mux_generator$9453 to a pmux with 2 cases.
Converted 8 (p)mux cells into 4 pmux cells.
<suppressed ~1485 debug messages>

yosys> memory_map

3.85. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> stat

3.86. Printing statistics.

=== sha_top ===

   Number of wires:               2215
   Number of wire bits:         743473
   Number of public wires:         253
   Number of public wire bits:   15951
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2711
     $alu                           44
     $and                           12
     $dff                            8
     $dffe                         213
     $eq                            60
     $logic_not                      4
     $macc                          12
     $mux                         1804
     $ne                           265
     $not                           12
     $or                            20
     $pmux                           4
     $reduce_and                   144
     $reduce_bool                   29
     $reduce_or                     36
     $xor                           44


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.87. Executing TECHMAP pass (map to technology primitives).

3.87.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.87.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.87.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $mux.
Using extmapper maccmap for cells of type $macc.
  add \I1.f6_W14_64 (64 bits, unsigned)
  add { \I1.W0 [31:0] \I1.W0 [63:32] } (64 bits, unsigned)
  add \I1.f5_W1_64 (64 bits, unsigned)
  add { \I1.W9 [31:0] \I1.W9 [63:32] } (64 bits, unsigned)
Using template $paramod$8fabc56b80a569262acfc42757a02ca0b8e91278\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $dff.
  add \I0.H (64 bits, unsigned)
  add { \I0.Wt [31:0] \I0.Wt [63:32] } (64 bits, unsigned)
  add \I0.Kt (64 bits, unsigned)
  add \I0.f1_EFG_64 (64 bits, unsigned)
  add \I0.f4_E_64 (64 bits, unsigned)
  add \I0.T1_64 (64 bits, unsigned)
  add \I0.f3_A_64 (64 bits, unsigned)
  add \I0.f2_ABC_64 (64 bits, unsigned)
Using template $paramod$103b4016182df467cceab67bcf3e18e6361ec0fd\_90_alu for cells of type $alu.
Using template $paramod$3f5816c888d561f8e32a8977eece62cb643241f3\_80_rs_alu for cells of type $alu.
  add \I0.f6_W14_64 (64 bits, unsigned)
  add { \I0.W0 [31:0] \I0.W0 [63:32] } (64 bits, unsigned)
  add \I0.f5_W1_64 (64 bits, unsigned)
  add { \I0.W9 [31:0] \I0.W9 [63:32] } (64 bits, unsigned)
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $xor.
  add \I3.f6_W14_64 (64 bits, unsigned)
  add { \I3.W0 [31:0] \I3.W0 [63:32] } (64 bits, unsigned)
  add \I3.f5_W1_64 (64 bits, unsigned)
  add { \I3.W9 [31:0] \I3.W9 [63:32] } (64 bits, unsigned)
Using template $paramod$dc04b7d98e503a7bab16fce2df70e6e2c5ca34d6\_90_alu for cells of type $alu.
  add \I1.H (64 bits, unsigned)
  add { \I1.Wt [31:0] \I1.Wt [63:32] } (64 bits, unsigned)
  add \I1.Kt (64 bits, unsigned)
  add \I1.f1_EFG_64 (64 bits, unsigned)
  add \I1.f4_E_64 (64 bits, unsigned)
  add \I3.H (64 bits, unsigned)
  add { \I3.Wt [31:0] \I3.Wt [63:32] } (64 bits, unsigned)
  add \I3.Kt (64 bits, unsigned)
  add \I3.f1_EFG_64 (64 bits, unsigned)
  add \I3.f4_E_64 (64 bits, unsigned)
  add \I3.T1_64 (64 bits, unsigned)
  add \I3.f3_A_64 (64 bits, unsigned)
  add \I3.f2_ABC_64 (64 bits, unsigned)
  add \I2.H (64 bits, unsigned)
  add { \I2.Wt [31:0] \I2.Wt [63:32] } (64 bits, unsigned)
  add \I2.Kt (64 bits, unsigned)
  add \I2.f1_EFG_64 (64 bits, unsigned)
  add \I2.f4_E_64 (64 bits, unsigned)
  add \I1.T1_64 (64 bits, unsigned)
  add \I1.f3_A_64 (64 bits, unsigned)
  add \I1.f2_ABC_64 (64 bits, unsigned)
  add \I2.T1_64 (64 bits, unsigned)
  add \I2.f3_A_64 (64 bits, unsigned)
  add \I2.f2_ABC_64 (64 bits, unsigned)
  add \I2.f6_W14_64 (64 bits, unsigned)
  add { \I2.W0 [31:0] \I2.W0 [63:32] } (64 bits, unsigned)
  add \I2.f5_W1_64 (64 bits, unsigned)
  add { \I2.W9 [31:0] \I2.W9 [63:32] } (64 bits, unsigned)
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000001000000 for cells of type $fa.
Using template $paramod$039520c137afc9cd69dd56c3fb11a4e1fbe5f664\_90_alu for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000111 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000101 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000001000000 for cells of type $lcu.
No more expansions possible.
<suppressed ~8110 debug messages>

yosys> stat

3.88. Printing statistics.

=== sha_top ===

   Number of wires:               9146
   Number of wire bits:         848309
   Number of public wires:         253
   Number of public wire bits:   15951
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:             147595
     $_AND_                       8332
     $_DFFE_PP_                   8361
     $_DFF_P_                      284
     $_MUX_                     107614
     $_NOT_                       3448
     $_OR_                        5274
     $_XOR_                      11978
     adder_carry                  2304


yosys> opt_expr

3.89. Executing OPT_EXPR pass (perform const folding).
Optimizing module sha_top.
<suppressed ~15778 debug messages>

yosys> opt_merge -nomux

3.90. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sha_top'.
<suppressed ~35004 debug messages>
Removed a total of 11668 cells.

yosys> opt_muxtree

3.91. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sha_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.92. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sha_top.
Performed a total of 0 changes.

yosys> opt_merge

3.93. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sha_top'.
Removed a total of 0 cells.

yosys> opt_share

3.94. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.95. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.96. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sha_top..
Removed 3364 unused cells and 4167 unused wires.
<suppressed ~3365 debug messages>

yosys> opt_expr

3.97. Executing OPT_EXPR pass (perform const folding).
Optimizing module sha_top.
<suppressed ~1112 debug messages>

yosys> opt_muxtree

3.98. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sha_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.99. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sha_top.
Performed a total of 0 changes.

yosys> opt_merge

3.100. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sha_top'.
Removed a total of 0 cells.

yosys> opt_share

3.101. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.102. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.103. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sha_top..

yosys> opt_expr

3.104. Executing OPT_EXPR pass (perform const folding).
Optimizing module sha_top.
MAX OPT ITERATION = 2

yosys> opt_expr -full

3.105. Executing OPT_EXPR pass (perform const folding).
Optimizing module sha_top.
<suppressed ~41084 debug messages>

yosys> techmap -map +/techmap.v

3.106. Executing TECHMAP pass (map to technology primitives).

3.106.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.106.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> opt_expr

3.107. Executing OPT_EXPR pass (perform const folding).
Optimizing module sha_top.

yosys> opt_merge -nomux

3.108. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sha_top'.
<suppressed ~72 debug messages>
Removed a total of 24 cells.

yosys> opt_muxtree

3.109. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sha_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.110. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sha_top.
Performed a total of 0 changes.

yosys> opt_merge

3.111. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sha_top'.
Removed a total of 0 cells.

yosys> opt_dff -nosdff -nodffe -sat

3.112. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.113. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sha_top..
Removed 0 unused cells and 440 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.114. Executing OPT_EXPR pass (perform const folding).
Optimizing module sha_top.
MAX OPT ITERATION = 1

yosys> abc -dff

3.115. Executing ABC pass (technology mapping using ABC).

3.115.1. Summary of detected clock domains:
  41 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7614, arst={ }, srst={ }
  226 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7623, arst={ }, srst={ }
  132 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$8876, arst={ }, srst={ }
  198 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7645, arst={ }, srst={ }
  134 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7675, arst={ }, srst={ }
  136 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7705, arst={ }, srst={ }
  135 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7735, arst={ }, srst={ }
  138 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7765, arst={ }, srst={ }
  135 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7795, arst={ }, srst={ }
  133 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7825, arst={ }, srst={ }
  133 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7855, arst={ }, srst={ }
  197 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7885, arst={ }, srst={ }
  214 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7915, arst={ }, srst={ }
  133 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7945, arst={ }, srst={ }
  133 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7975, arst={ }, srst={ }
  136 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$6192, arst={ }, srst={ }
  133 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$8005, arst={ }, srst={ }
  133 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$8035, arst={ }, srst={ }
  133 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$8067, arst={ }, srst={ }
  1674 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$8118, arst={ }, srst={ }
  6146 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$8099, arst={ }, srst={ }
  641 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$8373, arst={ }, srst={ }
  133 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7196, arst={ }, srst={ }
  30 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$6798, arst={ }, srst={ }
  229 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$6042, arst={ }, srst={ }
  229 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$6836, arst={ }, srst={ }
  198 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$6866, arst={ }, srst={ }
  133 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$6896, arst={ }, srst={ }
  66 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$8082, arst={ }, srst={ }
  103 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$8050, arst={ }, srst={ }
  107 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$8020, arst={ }, srst={ }
  101 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7990, arst={ }, srst={ }
  104 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7960, arst={ }, srst={ }
  148 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7930, arst={ }, srst={ }
  159 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7900, arst={ }, srst={ }
  102 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7870, arst={ }, srst={ }
  107 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7840, arst={ }, srst={ }
  102 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7810, arst={ }, srst={ }
  65 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$6792, arst={ }, srst={ }
  42 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$6820, arst={ }, srst={ }
  132 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$6829, arst={ }, srst={ }
  134 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$6851, arst={ }, srst={ }
  73 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$6881, arst={ }, srst={ }
  69 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$6911, arst={ }, srst={ }
  68 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$6941, arst={ }, srst={ }
  70 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$6971, arst={ }, srst={ }
  68 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7001, arst={ }, srst={ }
  73 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7031, arst={ }, srst={ }
  71 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7061, arst={ }, srst={ }
  133 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7091, arst={ }, srst={ }
  154 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7121, arst={ }, srst={ }
  72 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7151, arst={ }, srst={ }
  73 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7181, arst={ }, srst={ }
  69 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7211, arst={ }, srst={ }
  69 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7241, arst={ }, srst={ }
  67 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7273, arst={ }, srst={ }
  2910 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7324, arst={ }, srst={ }
  3636 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7305, arst={ }, srst={ }
  65 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$7579, arst={ }, srst={ }
  138 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$6462, arst={ }, srst={ }
  74 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7226, arst={ }, srst={ }
  136 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$6494, arst={ }, srst={ }
  199 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$6072, arst={ }, srst={ }
  132 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$8844, arst={ }, srst={ }
  136 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$8814, arst={ }, srst={ }
  132 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$8784, arst={ }, srst={ }
  138 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$8754, arst={ }, srst={ }
  219 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$8724, arst={ }, srst={ }
  204 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$8694, arst={ }, srst={ }
  134 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$8664, arst={ }, srst={ }
  135 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$8634, arst={ }, srst={ }
  133 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$8604, arst={ }, srst={ }
  136 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$8574, arst={ }, srst={ }
  136 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$8544, arst={ }, srst={ }
  135 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$8514, arst={ }, srst={ }
  133 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$8484, arst={ }, srst={ }
  199 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$8454, arst={ }, srst={ }
  228 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$8424, arst={ }, srst={ }
  32 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$8386, arst={ }, srst={ }
  133 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$6162, arst={ }, srst={ }
  65 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$5998, arst={ }, srst={ }
  41 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$6026, arst={ }, srst={ }
  132 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$6035, arst={ }, srst={ }
  71 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$6057, arst={ }, srst={ }
  68 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$6087, arst={ }, srst={ }
  69 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$6117, arst={ }, srst={ }
  73 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$6147, arst={ }, srst={ }
  68 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$6177, arst={ }, srst={ }
  69 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$6207, arst={ }, srst={ }
  69 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$6237, arst={ }, srst={ }
  69 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$6267, arst={ }, srst={ }
  132 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$6297, arst={ }, srst={ }
  150 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$6327, arst={ }, srst={ }
  69 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$6357, arst={ }, srst={ }
  69 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$6387, arst={ }, srst={ }
  69 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$6417, arst={ }, srst={ }
  71 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$6447, arst={ }, srst={ }
  68 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$6479, arst={ }, srst={ }
  2649 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$6530, arst={ }, srst={ }
  4026 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$6511, arst={ }, srst={ }
  65 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$6785, arst={ }, srst={ }
  76 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$6222, arst={ }, srst={ }
  71 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7256, arst={ }, srst={ }
  73 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$6252, arst={ }, srst={ }
  70 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$6282, arst={ }, srst={ }
  127 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$6312, arst={ }, srst={ }
  72 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$6102, arst={ }, srst={ }
  114 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$6342, arst={ }, srst={ }
  73 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$6372, arst={ }, srst={ }
  71 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$6402, arst={ }, srst={ }
  73 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$6432, arst={ }, srst={ }
  65 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$8380, arst={ }, srst={ }
  39 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$8408, arst={ }, srst={ }
  132 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$8417, arst={ }, srst={ }
  71 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$8439, arst={ }, srst={ }
  71 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$8469, arst={ }, srst={ }
  74 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$8499, arst={ }, srst={ }
  68 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$8529, arst={ }, srst={ }
  70 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$8559, arst={ }, srst={ }
  70 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$8589, arst={ }, srst={ }
  70 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$8619, arst={ }, srst={ }
  69 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$8649, arst={ }, srst={ }
  122 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$8679, arst={ }, srst={ }
  108 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$8709, arst={ }, srst={ }
  71 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$8739, arst={ }, srst={ }
  70 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$8769, arst={ }, srst={ }
  71 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$8799, arst={ }, srst={ }
  71 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$8829, arst={ }, srst={ }
  67 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$8861, arst={ }, srst={ }
  2457 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$8912, arst={ }, srst={ }
  4092 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$8893, arst={ }, srst={ }
  72 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$6926, arst={ }, srst={ }
  69 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7166, arst={ }, srst={ }
  65 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$5991, arst={ }, srst={ }
  72 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$6956, arst={ }, srst={ }
  71 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$6986, arst={ }, srst={ }
  72 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7016, arst={ }, srst={ }
  25 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$6004, arst={ }, srst={ }
  3 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$6007, arst={ }, srst={ }
  69 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7046, arst={ }, srst={ }
  71 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7076, arst={ }, srst={ }
  126 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7106, arst={ }, srst={ }
  113 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7136, arst={ }, srst={ }
  101 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7780, arst={ }, srst={ }
  102 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7750, arst={ }, srst={ }
  106 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7720, arst={ }, srst={ }
  102 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7690, arst={ }, srst={ }
  107 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7660, arst={ }, srst={ }
  165 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7630, arst={ }, srst={ }
  29 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$7592, arst={ }, srst={ }
  71 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7288, arst={ }, srst={ }
  75 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$6132, arst={ }, srst={ }
  65 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7586, arst={ }, srst={ }
  30712 cells in clk=\clk_i, en={ }, arst={ }, srst={ }
  5236 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$6001, arst={ }, srst={ }

3.115.2. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7614
Extracted 41 gates and 82 wires to a netlist network with 40 inputs and 36 outputs.

3.115.2.1. Executing ABC.

3.115.3. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7623
Extracted 226 gates and 331 wires to a netlist network with 104 inputs and 130 outputs.

3.115.3.1. Executing ABC.

3.115.4. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$8876
Extracted 132 gates and 203 wires to a netlist network with 70 inputs and 67 outputs.

3.115.4.1. Executing ABC.

3.115.5. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7645
Extracted 198 gates and 305 wires to a netlist network with 106 inputs and 98 outputs.

3.115.5.1. Executing ABC.

3.115.6. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7675
Extracted 134 gates and 208 wires to a netlist network with 73 inputs and 36 outputs.

3.115.6.1. Executing ABC.

3.115.7. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7705
Extracted 136 gates and 213 wires to a netlist network with 76 inputs and 36 outputs.

3.115.7.1. Executing ABC.

3.115.8. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7735
Extracted 135 gates and 211 wires to a netlist network with 75 inputs and 37 outputs.

3.115.8.1. Executing ABC.

3.115.9. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7765
Extracted 138 gates and 216 wires to a netlist network with 77 inputs and 37 outputs.

3.115.9.1. Executing ABC.

3.115.10. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7795
Extracted 135 gates and 211 wires to a netlist network with 75 inputs and 35 outputs.

3.115.10.1. Executing ABC.

3.115.11. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7825
Extracted 133 gates and 207 wires to a netlist network with 73 inputs and 33 outputs.

3.115.11.1. Executing ABC.

3.115.12. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7855
Extracted 133 gates and 207 wires to a netlist network with 73 inputs and 33 outputs.

3.115.12.1. Executing ABC.

3.115.13. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7885
Extracted 197 gates and 285 wires to a netlist network with 87 inputs and 73 outputs.

3.115.13.1. Executing ABC.

3.115.14. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7915
Extracted 214 gates and 321 wires to a netlist network with 106 inputs and 88 outputs.

3.115.14.1. Executing ABC.

3.115.15. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7945
Extracted 133 gates and 207 wires to a netlist network with 73 inputs and 33 outputs.

3.115.15.1. Executing ABC.

3.115.16. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7975
Extracted 133 gates and 207 wires to a netlist network with 73 inputs and 34 outputs.

3.115.16.1. Executing ABC.

3.115.17. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6192
Extracted 136 gates and 213 wires to a netlist network with 76 inputs and 36 outputs.

3.115.17.1. Executing ABC.

3.115.18. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$8005
Extracted 133 gates and 207 wires to a netlist network with 73 inputs and 33 outputs.

3.115.18.1. Executing ABC.

3.115.19. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$8035
Extracted 133 gates and 207 wires to a netlist network with 73 inputs and 33 outputs.

3.115.19.1. Executing ABC.

3.115.20. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$8067
Extracted 133 gates and 206 wires to a netlist network with 72 inputs and 68 outputs.

3.115.20.1. Executing ABC.

3.115.21. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$8118
Extracted 1546 gates and 2582 wires to a netlist network with 1035 inputs and 640 outputs.

3.115.21.1. Executing ABC.

3.115.22. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$8099
Extracted 5698 gates and 7335 wires to a netlist network with 1635 inputs and 3389 outputs.

3.115.22.1. Executing ABC.

3.115.23. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$8373
Extracted 641 gates and 1191 wires to a netlist network with 549 inputs and 609 outputs.

3.115.23.1. Executing ABC.

3.115.24. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7196
Extracted 133 gates and 207 wires to a netlist network with 73 inputs and 34 outputs.

3.115.24.1. Executing ABC.

3.115.25. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$6798
Extracted 30 gates and 54 wires to a netlist network with 23 inputs and 19 outputs.

3.115.25.1. Executing ABC.

3.115.26. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6042
Extracted 229 gates and 336 wires to a netlist network with 106 inputs and 132 outputs.

3.115.26.1. Executing ABC.

3.115.27. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6836
Extracted 229 gates and 336 wires to a netlist network with 106 inputs and 132 outputs.

3.115.27.1. Executing ABC.

3.115.28. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6866
Extracted 198 gates and 306 wires to a netlist network with 107 inputs and 97 outputs.

3.115.28.1. Executing ABC.

3.115.29. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6896
Extracted 133 gates and 207 wires to a netlist network with 73 inputs and 34 outputs.

3.115.29.1. Executing ABC.

3.115.30. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$8082
Extracted 66 gates and 103 wires to a netlist network with 36 inputs and 33 outputs.

3.115.30.1. Executing ABC.

3.115.31. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$8050
Extracted 103 gates and 178 wires to a netlist network with 74 inputs and 67 outputs.

3.115.31.1. Executing ABC.

3.115.32. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$8020
Extracted 107 gates and 185 wires to a netlist network with 77 inputs and 70 outputs.

3.115.32.1. Executing ABC.

3.115.33. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7990
Extracted 101 gates and 174 wires to a netlist network with 72 inputs and 66 outputs.

3.115.33.1. Executing ABC.

3.115.34. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7960
Extracted 104 gates and 180 wires to a netlist network with 75 inputs and 67 outputs.

3.115.34.1. Executing ABC.

3.115.35. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7930
Extracted 148 gates and 248 wires to a netlist network with 99 inputs and 101 outputs.

3.115.35.1. Executing ABC.

3.115.36. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7900
Extracted 159 gates and 240 wires to a netlist network with 80 inputs and 99 outputs.

3.115.36.1. Executing ABC.

3.115.37. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7870
Extracted 102 gates and 176 wires to a netlist network with 73 inputs and 66 outputs.

3.115.37.1. Executing ABC.

3.115.38. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7840
Extracted 107 gates and 184 wires to a netlist network with 76 inputs and 70 outputs.

3.115.38.1. Executing ABC.

3.115.39. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7810
Extracted 102 gates and 176 wires to a netlist network with 73 inputs and 65 outputs.

3.115.39.1. Executing ABC.

3.115.40. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6792
Extracted 65 gates and 74 wires to a netlist network with 8 inputs and 25 outputs.

3.115.40.1. Executing ABC.

3.115.41. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6820
Extracted 42 gates and 84 wires to a netlist network with 41 inputs and 37 outputs.

3.115.41.1. Executing ABC.

3.115.42. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6829
Extracted 132 gates and 203 wires to a netlist network with 70 inputs and 99 outputs.

3.115.42.1. Executing ABC.

3.115.43. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6851
Extracted 134 gates and 207 wires to a netlist network with 72 inputs and 98 outputs.

3.115.43.1. Executing ABC.

3.115.44. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6881
Extracted 73 gates and 116 wires to a netlist network with 42 inputs and 37 outputs.

3.115.44.1. Executing ABC.

3.115.45. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6911
Extracted 69 gates and 109 wires to a netlist network with 39 inputs and 34 outputs.

3.115.45.1. Executing ABC.

3.115.46. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6941
Extracted 68 gates and 107 wires to a netlist network with 38 inputs and 33 outputs.

3.115.46.1. Executing ABC.

3.115.47. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6971
Extracted 70 gates and 111 wires to a netlist network with 40 inputs and 34 outputs.

3.115.47.1. Executing ABC.

3.115.48. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7001
Extracted 68 gates and 107 wires to a netlist network with 38 inputs and 33 outputs.

3.115.48.1. Executing ABC.

3.115.49. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7031
Extracted 73 gates and 117 wires to a netlist network with 43 inputs and 37 outputs.

3.115.49.1. Executing ABC.

3.115.50. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7061
Extracted 71 gates and 113 wires to a netlist network with 41 inputs and 34 outputs.

3.115.50.1. Executing ABC.

3.115.51. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7091
Extracted 133 gates and 187 wires to a netlist network with 53 inputs and 74 outputs.

3.115.51.1. Executing ABC.

3.115.52. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7121
Extracted 154 gates and 230 wires to a netlist network with 75 inputs and 92 outputs.

3.115.52.1. Executing ABC.

3.115.53. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7151
Extracted 72 gates and 115 wires to a netlist network with 42 inputs and 37 outputs.

3.115.53.1. Executing ABC.

3.115.54. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7181
Extracted 73 gates and 117 wires to a netlist network with 43 inputs and 37 outputs.

3.115.54.1. Executing ABC.

3.115.55. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7211
Extracted 69 gates and 109 wires to a netlist network with 39 inputs and 33 outputs.

3.115.55.1. Executing ABC.

3.115.56. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7241
Extracted 69 gates and 109 wires to a netlist network with 39 inputs and 34 outputs.

3.115.56.1. Executing ABC.

3.115.57. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7273
Extracted 67 gates and 105 wires to a netlist network with 37 inputs and 34 outputs.

3.115.57.1. Executing ABC.

3.115.58. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7324
Extracted 2462 gates and 3758 wires to a netlist network with 1295 inputs and 958 outputs.

3.115.58.1. Executing ABC.

3.115.59. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7305
Extracted 3636 gates and 4365 wires to a netlist network with 728 inputs and 1412 outputs.

3.115.59.1. Executing ABC.

3.115.60. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$7579
Extracted 65 gates and 100 wires to a netlist network with 34 inputs and 33 outputs.

3.115.60.1. Executing ABC.

3.115.61. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6462
Extracted 138 gates and 216 wires to a netlist network with 77 inputs and 38 outputs.

3.115.61.1. Executing ABC.

3.115.62. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7226
Extracted 74 gates and 118 wires to a netlist network with 43 inputs and 37 outputs.

3.115.62.1. Executing ABC.

3.115.63. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6494
Extracted 136 gates and 210 wires to a netlist network with 73 inputs and 71 outputs.

3.115.63.1. Executing ABC.

3.115.64. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6072
Extracted 199 gates and 308 wires to a netlist network with 108 inputs and 98 outputs.

3.115.64.1. Executing ABC.

3.115.65. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$8844
Extracted 132 gates and 205 wires to a netlist network with 72 inputs and 34 outputs.

3.115.65.1. Executing ABC.

3.115.66. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$8814
Extracted 136 gates and 213 wires to a netlist network with 76 inputs and 35 outputs.

3.115.66.1. Executing ABC.

3.115.67. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$8784
Extracted 132 gates and 205 wires to a netlist network with 72 inputs and 34 outputs.

3.115.67.1. Executing ABC.

3.115.68. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$8754
Extracted 138 gates and 216 wires to a netlist network with 77 inputs and 37 outputs.

3.115.68.1. Executing ABC.

3.115.69. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$8724
Extracted 219 gates and 325 wires to a netlist network with 105 inputs and 87 outputs.

3.115.69.1. Executing ABC.

3.115.70. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$8694
Extracted 204 gates and 292 wires to a netlist network with 87 inputs and 74 outputs.

3.115.70.1. Executing ABC.

3.115.71. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$8664
Extracted 134 gates and 208 wires to a netlist network with 73 inputs and 36 outputs.

3.115.71.1. Executing ABC.

3.115.72. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$8634
Extracted 135 gates and 211 wires to a netlist network with 75 inputs and 34 outputs.

3.115.72.1. Executing ABC.

3.115.73. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$8604
Extracted 133 gates and 207 wires to a netlist network with 73 inputs and 35 outputs.

3.115.73.1. Executing ABC.

3.115.74. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$8574
Extracted 136 gates and 213 wires to a netlist network with 76 inputs and 35 outputs.

3.115.74.1. Executing ABC.

3.115.75. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$8544
Extracted 136 gates and 212 wires to a netlist network with 75 inputs and 38 outputs.

3.115.75.1. Executing ABC.

3.115.76. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$8514
Extracted 135 gates and 211 wires to a netlist network with 75 inputs and 35 outputs.

3.115.76.1. Executing ABC.

3.115.77. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$8484
Extracted 133 gates and 207 wires to a netlist network with 73 inputs and 35 outputs.

3.115.77.1. Executing ABC.

3.115.78. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$8454
Extracted 199 gates and 308 wires to a netlist network with 108 inputs and 98 outputs.

3.115.78.1. Executing ABC.

3.115.79. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$8424
Extracted 228 gates and 334 wires to a netlist network with 105 inputs and 131 outputs.

3.115.79.1. Executing ABC.

3.115.80. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$8386
Extracted 32 gates and 56 wires to a netlist network with 23 inputs and 19 outputs.

3.115.80.1. Executing ABC.

3.115.81. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6162
Extracted 133 gates and 207 wires to a netlist network with 73 inputs and 34 outputs.

3.115.81.1. Executing ABC.

3.115.82. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5998
Extracted 65 gates and 74 wires to a netlist network with 8 inputs and 25 outputs.

3.115.82.1. Executing ABC.

3.115.83. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6026
Extracted 41 gates and 81 wires to a netlist network with 39 inputs and 36 outputs.

3.115.83.1. Executing ABC.

3.115.84. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6035
Extracted 132 gates and 203 wires to a netlist network with 70 inputs and 99 outputs.

3.115.84.1. Executing ABC.

3.115.85. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6057
Extracted 71 gates and 113 wires to a netlist network with 41 inputs and 35 outputs.

3.115.85.1. Executing ABC.

3.115.86. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6087
Extracted 68 gates and 107 wires to a netlist network with 38 inputs and 33 outputs.

3.115.86.1. Executing ABC.

3.115.87. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6117
Extracted 69 gates and 109 wires to a netlist network with 39 inputs and 34 outputs.

3.115.87.1. Executing ABC.

3.115.88. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6147
Extracted 73 gates and 117 wires to a netlist network with 43 inputs and 37 outputs.

3.115.88.1. Executing ABC.

3.115.89. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6177
Extracted 68 gates and 107 wires to a netlist network with 38 inputs and 33 outputs.

3.115.89.1. Executing ABC.

3.115.90. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6207
Extracted 69 gates and 109 wires to a netlist network with 39 inputs and 33 outputs.

3.115.90.1. Executing ABC.

3.115.91. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6237
Extracted 69 gates and 109 wires to a netlist network with 39 inputs and 33 outputs.

3.115.91.1. Executing ABC.

3.115.92. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6267
Extracted 69 gates and 109 wires to a netlist network with 39 inputs and 34 outputs.

3.115.92.1. Executing ABC.

3.115.93. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6297
Extracted 132 gates and 185 wires to a netlist network with 52 inputs and 72 outputs.

3.115.93.1. Executing ABC.

3.115.94. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6327
Extracted 150 gates and 223 wires to a netlist network with 72 inputs and 88 outputs.

3.115.94.1. Executing ABC.

3.115.95. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6357
Extracted 69 gates and 109 wires to a netlist network with 39 inputs and 33 outputs.

3.115.95.1. Executing ABC.

3.115.96. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6387
Extracted 69 gates and 109 wires to a netlist network with 39 inputs and 34 outputs.

3.115.96.1. Executing ABC.

3.115.97. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6417
Extracted 69 gates and 109 wires to a netlist network with 39 inputs and 33 outputs.

3.115.97.1. Executing ABC.

3.115.98. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6447
Extracted 71 gates and 113 wires to a netlist network with 41 inputs and 35 outputs.

3.115.98.1. Executing ABC.

3.115.99. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6479
Extracted 68 gates and 107 wires to a netlist network with 38 inputs and 33 outputs.

3.115.99.1. Executing ABC.

3.115.100. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6530
Extracted 2457 gates and 3748 wires to a netlist network with 1290 inputs and 706 outputs.

3.115.100.1. Executing ABC.

3.115.101. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6511
Extracted 3642 gates and 4384 wires to a netlist network with 741 inputs and 1417 outputs.

3.115.101.1. Executing ABC.

3.115.102. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$6785
Extracted 65 gates and 100 wires to a netlist network with 34 inputs and 33 outputs.

3.115.102.1. Executing ABC.

3.115.103. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6222
Extracted 76 gates and 121 wires to a netlist network with 44 inputs and 39 outputs.

3.115.103.1. Executing ABC.

3.115.104. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7256
Extracted 71 gates and 113 wires to a netlist network with 41 inputs and 36 outputs.

3.115.104.1. Executing ABC.

3.115.105. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6252
Extracted 73 gates and 117 wires to a netlist network with 43 inputs and 36 outputs.

3.115.105.1. Executing ABC.

3.115.106. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6282
Extracted 70 gates and 111 wires to a netlist network with 40 inputs and 35 outputs.

3.115.106.1. Executing ABC.

3.115.107. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6312
Extracted 127 gates and 175 wires to a netlist network with 47 inputs and 67 outputs.

3.115.107.1. Executing ABC.

3.115.108. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6102
Extracted 72 gates and 115 wires to a netlist network with 42 inputs and 36 outputs.

3.115.108.1. Executing ABC.

3.115.109. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6342
Extracted 114 gates and 179 wires to a netlist network with 64 inputs and 67 outputs.

3.115.109.1. Executing ABC.

3.115.110. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6372
Extracted 73 gates and 117 wires to a netlist network with 43 inputs and 36 outputs.

3.115.110.1. Executing ABC.

3.115.111. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6402
Extracted 71 gates and 113 wires to a netlist network with 41 inputs and 36 outputs.

3.115.111.1. Executing ABC.

3.115.112. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6432
Extracted 73 gates and 117 wires to a netlist network with 43 inputs and 36 outputs.

3.115.112.1. Executing ABC.

3.115.113. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$8380
Extracted 65 gates and 74 wires to a netlist network with 8 inputs and 25 outputs.

3.115.113.1. Executing ABC.

3.115.114. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$8408
Extracted 39 gates and 78 wires to a netlist network with 38 inputs and 35 outputs.

3.115.114.1. Executing ABC.

3.115.115. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$8417
Extracted 132 gates and 204 wires to a netlist network with 71 inputs and 100 outputs.

3.115.115.1. Executing ABC.

3.115.116. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$8439
Extracted 71 gates and 113 wires to a netlist network with 41 inputs and 35 outputs.

3.115.116.1. Executing ABC.

3.115.117. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$8469
Extracted 71 gates and 113 wires to a netlist network with 41 inputs and 35 outputs.

3.115.117.1. Executing ABC.

3.115.118. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$8499
Extracted 74 gates and 119 wires to a netlist network with 44 inputs and 37 outputs.

3.115.118.1. Executing ABC.

3.115.119. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$8529
Extracted 68 gates and 107 wires to a netlist network with 38 inputs and 34 outputs.

3.115.119.1. Executing ABC.

3.115.120. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$8559
Extracted 70 gates and 111 wires to a netlist network with 40 inputs and 34 outputs.

3.115.120.1. Executing ABC.

3.115.121. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$8589
Extracted 70 gates and 111 wires to a netlist network with 40 inputs and 35 outputs.

3.115.121.1. Executing ABC.

3.115.122. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$8619
Extracted 70 gates and 111 wires to a netlist network with 40 inputs and 34 outputs.

3.115.122.1. Executing ABC.

3.115.123. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$8649
Extracted 69 gates and 109 wires to a netlist network with 39 inputs and 34 outputs.

3.115.123.1. Executing ABC.

3.115.124. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$8679
Extracted 122 gates and 166 wires to a netlist network with 43 inputs and 64 outputs.

3.115.124.1. Executing ABC.

3.115.125. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$8709
Extracted 108 gates and 167 wires to a netlist network with 58 inputs and 61 outputs.

3.115.125.1. Executing ABC.

3.115.126. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$8739
Extracted 71 gates and 113 wires to a netlist network with 41 inputs and 35 outputs.

3.115.126.1. Executing ABC.

3.115.127. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$8769
Extracted 70 gates and 111 wires to a netlist network with 40 inputs and 35 outputs.

3.115.127.1. Executing ABC.

3.115.128. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$8799
Extracted 71 gates and 113 wires to a netlist network with 41 inputs and 35 outputs.

3.115.128.1. Executing ABC.

3.115.129. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$8829
Extracted 71 gates and 113 wires to a netlist network with 41 inputs and 36 outputs.

3.115.129.1. Executing ABC.

3.115.130. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$8861
Extracted 67 gates and 105 wires to a netlist network with 37 inputs and 34 outputs.

3.115.130.1. Executing ABC.

3.115.131. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$8912
Extracted 2457 gates and 3750 wires to a netlist network with 1292 inputs and 581 outputs.

3.115.131.1. Executing ABC.

3.115.132. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$8893
Extracted 3644 gates and 4387 wires to a netlist network with 742 inputs and 1419 outputs.

3.115.132.1. Executing ABC.

3.115.133. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6926
Extracted 72 gates and 115 wires to a netlist network with 42 inputs and 35 outputs.

3.115.133.1. Executing ABC.

3.115.134. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7166
Extracted 69 gates and 109 wires to a netlist network with 39 inputs and 33 outputs.

3.115.134.1. Executing ABC.

3.115.135. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$5991
Extracted 65 gates and 100 wires to a netlist network with 34 inputs and 33 outputs.

3.115.135.1. Executing ABC.

3.115.136. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6956
Extracted 72 gates and 115 wires to a netlist network with 42 inputs and 35 outputs.

3.115.136.1. Executing ABC.

3.115.137. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6986
Extracted 71 gates and 113 wires to a netlist network with 41 inputs and 35 outputs.

3.115.137.1. Executing ABC.

3.115.138. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7016
Extracted 72 gates and 115 wires to a netlist network with 42 inputs and 36 outputs.

3.115.138.1. Executing ABC.

3.115.139. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$6004
Extracted 25 gates and 46 wires to a netlist network with 20 inputs and 17 outputs.

3.115.139.1. Executing ABC.

3.115.140. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$6007
Extracted 3 gates and 6 wires to a netlist network with 3 inputs and 2 outputs.

3.115.140.1. Executing ABC.

3.115.141. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7046
Extracted 69 gates and 109 wires to a netlist network with 39 inputs and 33 outputs.

3.115.141.1. Executing ABC.

3.115.142. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7076
Extracted 71 gates and 113 wires to a netlist network with 41 inputs and 35 outputs.

3.115.142.1. Executing ABC.

3.115.143. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7106
Extracted 126 gates and 173 wires to a netlist network with 46 inputs and 67 outputs.

3.115.143.1. Executing ABC.

3.115.144. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7136
Extracted 113 gates and 177 wires to a netlist network with 63 inputs and 66 outputs.

3.115.144.1. Executing ABC.

3.115.145. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7780
Extracted 101 gates and 174 wires to a netlist network with 72 inputs and 65 outputs.

3.115.145.1. Executing ABC.

3.115.146. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7750
Extracted 102 gates and 175 wires to a netlist network with 72 inputs and 68 outputs.

3.115.146.1. Executing ABC.

3.115.147. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7720
Extracted 106 gates and 184 wires to a netlist network with 77 inputs and 69 outputs.

3.115.147.1. Executing ABC.

3.115.148. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7690
Extracted 102 gates and 176 wires to a netlist network with 73 inputs and 67 outputs.

3.115.148.1. Executing ABC.

3.115.149. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7660
Extracted 107 gates and 184 wires to a netlist network with 76 inputs and 69 outputs.

3.115.149.1. Executing ABC.

3.115.150. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7630
Extracted 165 gates and 270 wires to a netlist network with 104 inputs and 132 outputs.

3.115.150.1. Executing ABC.

3.115.151. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$7592
Extracted 29 gates and 52 wires to a netlist network with 22 inputs and 19 outputs.

3.115.151.1. Executing ABC.

3.115.152. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7288
Extracted 71 gates and 113 wires to a netlist network with 41 inputs and 38 outputs.

3.115.152.1. Executing ABC.

3.115.153. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6132
Extracted 75 gates and 120 wires to a netlist network with 44 inputs and 38 outputs.

3.115.153.1. Executing ABC.

3.115.154. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7586
Extracted 65 gates and 74 wires to a netlist network with 8 inputs and 25 outputs.

3.115.154.1. Executing ABC.

3.115.155. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i
Extracted 30456 gates and 41289 wires to a netlist network with 10831 inputs and 5291 outputs.

3.115.155.1. Executing ABC.

3.115.156. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$6001
Extracted 5236 gates and 9139 wires to a netlist network with 3901 inputs and 1923 outputs.

3.115.156.1. Executing ABC.

yosys> abc -dff

3.116. Executing ABC pass (technology mapping using ABC).

3.116.1. Summary of detected clock domains:
  131 cells in clk=\clk_i, en=$abc$185649$auto$opt_dff.cc:219:make_patterns_logic$6479, arst={ }, srst={ }
  103 cells in clk=\clk_i, en=$abc$184789$auto$opt_dff.cc:219:make_patterns_logic$6267, arst={ }, srst={ }
  102 cells in clk=\clk_i, en=$abc$160507$auto$opt_dff.cc:219:make_patterns_logic$7675, arst={ }, srst={ }
  167 cells in clk=\clk_i, en=$abc$160339$auto$opt_dff.cc:219:make_patterns_logic$7645, arst={ }, srst={ }
  134 cells in clk=\clk_i, en=$abc$160206$auto$opt_dff.cc:219:make_patterns_logic$8876, arst={ }, srst={ }
  100 cells in clk=\clk_i, en=$abc$184484$auto$opt_dff.cc:219:make_patterns_logic$6177, arst={ }, srst={ }
  131 cells in clk=\clk_i, en=$abc$159968$auto$opt_dff.cc:219:make_patterns_logic$7614, arst={ }, srst={ }
  698 cells in clk=\clk_i, en=$abc$160010$auto$opt_dff.cc:219:make_patterns_logic$7623, arst={ }, srst={ }
  100 cells in clk=\clk_i, en=$abc$184687$auto$opt_dff.cc:219:make_patterns_logic$6237, arst={ }, srst={ }
  102 cells in clk=\clk_i, en=$abc$184585$auto$opt_dff.cc:219:make_patterns_logic$6207, arst={ }, srst={ }
  101 cells in clk=\clk_i, en=$abc$185545$auto$opt_dff.cc:219:make_patterns_logic$6447, arst={ }, srst={ }
  104 cells in clk=\clk_i, en=$abc$185443$auto$opt_dff.cc:219:make_patterns_logic$6417, arst={ }, srst={ }
  99 cells in clk=\clk_i, en=$abc$185341$auto$opt_dff.cc:219:make_patterns_logic$6387, arst={ }, srst={ }
  100 cells in clk=\clk_i, en=$abc$185239$auto$opt_dff.cc:219:make_patterns_logic$6357, arst={ }, srst={ }
  160 cells in clk=\clk_i, en=$abc$185056$auto$opt_dff.cc:219:make_patterns_logic$6327, arst={ }, srst={ }
  164 cells in clk=\clk_i, en=$abc$184891$auto$opt_dff.cc:219:make_patterns_logic$6297, arst={ }, srst={ }
  27 cells in clk=\clk_i, en=$abc$201925$auto$opt_dff.cc:194:make_patterns_logic$6004, arst={ }, srst={ }
  531 cells in clk=\clk_i, en=$abc$193318$auto$opt_dff.cc:219:make_patterns_logic$8408, arst={ }, srst={ }
  24 cells in clk=\clk_i, en=$abc$203351$auto$opt_dff.cc:194:make_patterns_logic$7592, arst={ }, srst={ }
  103 cells in clk=\clk_i, en=$abc$194249$auto$opt_dff.cc:219:make_patterns_logic$8649, arst={ }, srst={ }
  106 cells in clk=\clk_i, en=$abc$194146$auto$opt_dff.cc:219:make_patterns_logic$8619, arst={ }, srst={ }
  103 cells in clk=\clk_i, en=$abc$194043$auto$opt_dff.cc:219:make_patterns_logic$8589, arst={ }, srst={ }
  103 cells in clk=\clk_i, en=$abc$193940$auto$opt_dff.cc:219:make_patterns_logic$8559, arst={ }, srst={ }
  101 cells in clk=\clk_i, en=$abc$193839$auto$opt_dff.cc:219:make_patterns_logic$8529, arst={ }, srst={ }
  104 cells in clk=\clk_i, en=$abc$193732$auto$opt_dff.cc:219:make_patterns_logic$8499, arst={ }, srst={ }
  102 cells in clk=\clk_i, en=$abc$192436$auto$opt_dff.cc:219:make_patterns_logic$6282, arst={ }, srst={ }
  95 cells in clk=\clk_i, en=$abc$192330$auto$opt_dff.cc:219:make_patterns_logic$6252, arst={ }, srst={ }
  103 cells in clk=\clk_i, en=$abc$192226$auto$opt_dff.cc:219:make_patterns_logic$7256, arst={ }, srst={ }
  78 cells in clk=\clk_i, en=$abc$192117$auto$opt_dff.cc:219:make_patterns_logic$6222, arst={ }, srst={ }
  625 cells in clk=\clk_i, en=$abc$192019$auto$opt_dff.cc:194:make_patterns_logic$6785, arst={ }, srst={ }
  38 cells in clk=\clk_i, en=$abc$203596$auto$opt_dff.cc:219:make_patterns_logic$7586, arst={ }, srst={ }
  98 cells in clk=\clk_i, en=$abc$203488$auto$opt_dff.cc:219:make_patterns_logic$6132, arst={ }, srst={ }
  102 cells in clk=\clk_i, en=$abc$201716$auto$opt_dff.cc:219:make_patterns_logic$6986, arst={ }, srst={ }
  103 cells in clk=\clk_i, en=$abc$201611$auto$opt_dff.cc:219:make_patterns_logic$6956, arst={ }, srst={ }
  65 cells in clk=\clk_i, en=$abc$201513$auto$opt_dff.cc:194:make_patterns_logic$5991, arst={ }, srst={ }
  102 cells in clk=\clk_i, en=$abc$201411$auto$opt_dff.cc:219:make_patterns_logic$7166, arst={ }, srst={ }
  104 cells in clk=\clk_i, en=$abc$201306$auto$opt_dff.cc:219:make_patterns_logic$6926, arst={ }, srst={ }
  104 cells in clk=\clk_i, en=$abc$161138$auto$opt_dff.cc:219:make_patterns_logic$7855, arst={ }, srst={ }
  718 cells in clk=\clk_i, en=$abc$203153$auto$opt_dff.cc:219:make_patterns_logic$7630, arst={ }, srst={ }
  102 cells in clk=\clk_i, en=$abc$181796$auto$opt_dff.cc:219:make_patterns_logic$8844, arst={ }, srst={ }
  104 cells in clk=\clk_i, en=$abc$173060$auto$opt_dff.cc:219:make_patterns_logic$6881, arst={ }, srst={ }
  110 cells in clk=\clk_i, en=$abc$172893$auto$opt_dff.cc:219:make_patterns_logic$6851, arst={ }, srst={ }
  74 cells in clk=\clk_i, en=$abc$181627$auto$opt_dff.cc:219:make_patterns_logic$6072, arst={ }, srst={ }
  134 cells in clk=\clk_i, en=$abc$181490$auto$opt_dff.cc:219:make_patterns_logic$6494, arst={ }, srst={ }
  689 cells in clk=\clk_i, en=$abc$172728$auto$opt_dff.cc:219:make_patterns_logic$6829, arst={ }, srst={ }
  395 cells in clk=\clk_i, en=$abc$172684$auto$opt_dff.cc:219:make_patterns_logic$6820, arst={ }, srst={ }
  128 cells in clk=\clk_i, en=$abc$203384$auto$opt_dff.cc:219:make_patterns_logic$7288, arst={ }, srst={ }
  3 cells in clk=\clk_i, en=$abc$201955$auto$opt_dff.cc:194:make_patterns_logic$6007, arst={ }, srst={ }
  105 cells in clk=\clk_i, en=$abc$181383$auto$opt_dff.cc:219:make_patterns_logic$7226, arst={ }, srst={ }
  75 cells in clk=\clk_i, en=$abc$181275$auto$opt_dff.cc:219:make_patterns_logic$6462, arst={ }, srst={ }
  38 cells in clk=\clk_i, en=$abc$172633$auto$opt_dff.cc:219:make_patterns_logic$6792, arst={ }, srst={ }
  106 cells in clk=\clk_i, en=$abc$172358$auto$opt_dff.cc:219:make_patterns_logic$7840, arst={ }, srst={ }
  595 cells in clk=\clk_i, en=$abc$181177$auto$opt_dff.cc:194:make_patterns_logic$7579, arst={ }, srst={ }
  102 cells in clk=\clk_i, en=$abc$172223$auto$opt_dff.cc:219:make_patterns_logic$7870, arst={ }, srst={ }
  169 cells in clk=\clk_i, en=$abc$172031$auto$opt_dff.cc:219:make_patterns_logic$7900, arst={ }, srst={ }
  103 cells in clk=\clk_i, en=$abc$193628$auto$opt_dff.cc:219:make_patterns_logic$8469, arst={ }, srst={ }
  105 cells in clk=\clk_i, en=$abc$193524$auto$opt_dff.cc:219:make_patterns_logic$8439, arst={ }, srst={ }
  710 cells in clk=\clk_i, en=$abc$193359$auto$opt_dff.cc:219:make_patterns_logic$8417, arst={ }, srst={ }
  99 cells in clk=\clk_i, en=$abc$193161$auto$opt_dff.cc:219:make_patterns_logic$6432, arst={ }, srst={ }
  79 cells in clk=\clk_i, en=$abc$193057$auto$opt_dff.cc:219:make_patterns_logic$6402, arst={ }, srst={ }
  84 cells in clk=\clk_i, en=$abc$192951$auto$opt_dff.cc:219:make_patterns_logic$6372, arst={ }, srst={ }
  156 cells in clk=\clk_i, en=$abc$192804$auto$opt_dff.cc:219:make_patterns_logic$6342, arst={ }, srst={ }
  88 cells in clk=\clk_i, en=$abc$192699$auto$opt_dff.cc:219:make_patterns_logic$6102, arst={ }, srst={ }
  137 cells in clk=\clk_i, en=$abc$192539$auto$opt_dff.cc:219:make_patterns_logic$6312, arst={ }, srst={ }
  191 cells in clk=\clk_i, en=$abc$171850$auto$opt_dff.cc:219:make_patterns_logic$7930, arst={ }, srst={ }
  104 cells in clk=\clk_i, en=$abc$171713$auto$opt_dff.cc:219:make_patterns_logic$7960, arst={ }, srst={ }
  103 cells in clk=\clk_i, en=$abc$171579$auto$opt_dff.cc:219:make_patterns_logic$7990, arst={ }, srst={ }
  110 cells in clk=\clk_i, en=$abc$171439$auto$opt_dff.cc:219:make_patterns_logic$8020, arst={ }, srst={ }
  75 cells in clk=\clk_i, en=$abc$162110$auto$opt_dff.cc:219:make_patterns_logic$8067, arst={ }, srst={ }
  103 cells in clk=\clk_i, en=$abc$171303$auto$opt_dff.cc:219:make_patterns_logic$8050, arst={ }, srst={ }
  67 cells in clk=\clk_i, en=$abc$171204$auto$opt_dff.cc:219:make_patterns_logic$8082, arst={ }, srst={ }
  187 cells in clk=\clk_i, en=$abc$203014$auto$opt_dff.cc:219:make_patterns_logic$7660, arst={ }, srst={ }
  127 cells in clk=\clk_i, en=$abc$202879$auto$opt_dff.cc:219:make_patterns_logic$7690, arst={ }, srst={ }
  133 cells in clk=\clk_i, en=$abc$202740$auto$opt_dff.cc:219:make_patterns_logic$7720, arst={ }, srst={ }
  127 cells in clk=\clk_i, en=$abc$202605$auto$opt_dff.cc:219:make_patterns_logic$7750, arst={ }, srst={ }
  130 cells in clk=\clk_i, en=$abc$202471$auto$opt_dff.cc:219:make_patterns_logic$7780, arst={ }, srst={ }
  186 cells in clk=\clk_i, en=$abc$202325$auto$opt_dff.cc:219:make_patterns_logic$7136, arst={ }, srst={ }
  170 cells in clk=\clk_i, en=$abc$202166$auto$opt_dff.cc:219:make_patterns_logic$7106, arst={ }, srst={ }
  101 cells in clk=\clk_i, en=$abc$202062$auto$opt_dff.cc:219:make_patterns_logic$7076, arst={ }, srst={ }
  99 cells in clk=\clk_i, en=$abc$201960$auto$opt_dff.cc:219:make_patterns_logic$7046, arst={ }, srst={ }
  101 cells in clk=\clk_i, en=$abc$162007$auto$opt_dff.cc:219:make_patterns_logic$8035, arst={ }, srst={ }
  101 cells in clk=\clk_i, en=$abc$161904$auto$opt_dff.cc:219:make_patterns_logic$8005, arst={ }, srst={ }
  71 cells in clk=\clk_i, en=$abc$171101$auto$opt_dff.cc:219:make_patterns_logic$6896, arst={ }, srst={ }
  134 cells in clk=\clk_i, en=$abc$170933$auto$opt_dff.cc:219:make_patterns_logic$6866, arst={ }, srst={ }
  130 cells in clk=\clk_i, en=$abc$195062$auto$opt_dff.cc:219:make_patterns_logic$8861, arst={ }, srst={ }
  2172 cells in clk=\clk_i, en=$abc$195162$auto$opt_dff.cc:219:make_patterns_logic$8912, arst={ }, srst={ }
  103 cells in clk=\clk_i, en=$abc$194958$auto$opt_dff.cc:219:make_patterns_logic$8829, arst={ }, srst={ }
  103 cells in clk=\clk_i, en=$abc$194854$auto$opt_dff.cc:219:make_patterns_logic$8799, arst={ }, srst={ }
  101 cells in clk=\clk_i, en=$abc$194751$auto$opt_dff.cc:219:make_patterns_logic$8769, arst={ }, srst={ }
  103 cells in clk=\clk_i, en=$abc$194647$auto$opt_dff.cc:219:make_patterns_logic$8739, arst={ }, srst={ }
  187 cells in clk=\clk_i, en=$abc$194506$auto$opt_dff.cc:219:make_patterns_logic$8709, arst={ }, srst={ }
  166 cells in clk=\clk_i, en=$abc$194351$auto$opt_dff.cc:219:make_patterns_logic$8679, arst={ }, srst={ }
  75 cells in clk=\clk_i, en=$abc$161798$auto$opt_dff.cc:219:make_patterns_logic$6192, arst={ }, srst={ }
  102 cells in clk=\clk_i, en=$abc$161592$auto$opt_dff.cc:219:make_patterns_logic$7945, arst={ }, srst={ }
  83 cells in clk=\clk_i, en=$abc$184378$auto$opt_dff.cc:219:make_patterns_logic$6147, arst={ }, srst={ }
  68 cells in clk=\clk_i, en=$abc$184276$auto$opt_dff.cc:219:make_patterns_logic$6117, arst={ }, srst={ }
  70 cells in clk=\clk_i, en=$abc$184175$auto$opt_dff.cc:219:make_patterns_logic$6087, arst={ }, srst={ }
  69 cells in clk=\clk_i, en=$abc$184071$auto$opt_dff.cc:219:make_patterns_logic$6057, arst={ }, srst={ }
  650 cells in clk=\clk_i, en=$abc$183906$auto$opt_dff.cc:219:make_patterns_logic$6035, arst={ }, srst={ }
  530 cells in clk=\clk_i, en=$abc$183864$auto$opt_dff.cc:219:make_patterns_logic$6026, arst={ }, srst={ }
  6525 cells in clk=\clk_i, en={ }, arst={ }, srst={ }
  25 cells in clk=\clk_i, en=$abc$183676$auto$opt_dff.cc:194:make_patterns_logic$8386, arst={ }, srst={ }
  704 cells in clk=\clk_i, en=$abc$183478$auto$opt_dff.cc:219:make_patterns_logic$8424, arst={ }, srst={ }
  107 cells in clk=\clk_i, en=$abc$183309$auto$opt_dff.cc:219:make_patterns_logic$8454, arst={ }, srst={ }
  101 cells in clk=\clk_i, en=$abc$183206$auto$opt_dff.cc:219:make_patterns_logic$8484, arst={ }, srst={ }
  107 cells in clk=\clk_i, en=$abc$183101$auto$opt_dff.cc:219:make_patterns_logic$8514, arst={ }, srst={ }
  102 cells in clk=\clk_i, en=$abc$182995$auto$opt_dff.cc:219:make_patterns_logic$8544, arst={ }, srst={ }
  101 cells in clk=\clk_i, en=$abc$182889$auto$opt_dff.cc:219:make_patterns_logic$8574, arst={ }, srst={ }
  103 cells in clk=\clk_i, en=$abc$182786$auto$opt_dff.cc:219:make_patterns_logic$8604, arst={ }, srst={ }
  101 cells in clk=\clk_i, en=$abc$182681$auto$opt_dff.cc:219:make_patterns_logic$8634, arst={ }, srst={ }
  100 cells in clk=\clk_i, en=$abc$182577$auto$opt_dff.cc:219:make_patterns_logic$8664, arst={ }, srst={ }
  612 cells in clk=\clk_i, en=$abc$170734$auto$opt_dff.cc:219:make_patterns_logic$6836, arst={ }, srst={ }
  610 cells in clk=\clk_i, en=$abc$170535$auto$opt_dff.cc:219:make_patterns_logic$6042, arst={ }, srst={ }
  24 cells in clk=\clk_i, en=$abc$170502$auto$opt_dff.cc:194:make_patterns_logic$6798, arst={ }, srst={ }
  139 cells in clk=\clk_i, en=$abc$161408$auto$opt_dff.cc:219:make_patterns_logic$7915, arst={ }, srst={ }
  161 cells in clk=\clk_i, en=$abc$161241$auto$opt_dff.cc:219:make_patterns_logic$7885, arst={ }, srst={ }
  159 cells in clk=\clk_i, en=$abc$182403$auto$opt_dff.cc:219:make_patterns_logic$8694, arst={ }, srst={ }
  148 cells in clk=\clk_i, en=$abc$182214$auto$opt_dff.cc:219:make_patterns_logic$8724, arst={ }, srst={ }
  105 cells in clk=\clk_i, en=$abc$182106$auto$opt_dff.cc:219:make_patterns_logic$8754, arst={ }, srst={ }
  101 cells in clk=\clk_i, en=$abc$182004$auto$opt_dff.cc:219:make_patterns_logic$8784, arst={ }, srst={ }
  101 cells in clk=\clk_i, en=$abc$181898$auto$opt_dff.cc:219:make_patterns_logic$8814, arst={ }, srst={ }
  2434 cells in clk=\clk_i, en=$abc$174651$auto$opt_dff.cc:219:make_patterns_logic$7324, arst={ }, srst={ }
  67 cells in clk=\clk_i, en=$abc$174551$auto$opt_dff.cc:219:make_patterns_logic$7273, arst={ }, srst={ }
  69 cells in clk=\clk_i, en=$abc$174449$auto$opt_dff.cc:219:make_patterns_logic$7241, arst={ }, srst={ }
  73 cells in clk=\clk_i, en=$abc$174347$auto$opt_dff.cc:219:make_patterns_logic$7211, arst={ }, srst={ }
  74 cells in clk=\clk_i, en=$abc$174241$auto$opt_dff.cc:219:make_patterns_logic$7181, arst={ }, srst={ }
  71 cells in clk=\clk_i, en=$abc$174136$auto$opt_dff.cc:219:make_patterns_logic$7151, arst={ }, srst={ }
  109 cells in clk=\clk_i, en=$abc$173949$auto$opt_dff.cc:219:make_patterns_logic$7121, arst={ }, srst={ }
  122 cells in clk=\clk_i, en=$abc$173783$auto$opt_dff.cc:219:make_patterns_logic$7091, arst={ }, srst={ }
  74 cells in clk=\clk_i, en=$abc$173679$auto$opt_dff.cc:219:make_patterns_logic$7061, arst={ }, srst={ }
  71 cells in clk=\clk_i, en=$abc$173573$auto$opt_dff.cc:219:make_patterns_logic$7031, arst={ }, srst={ }
  72 cells in clk=\clk_i, en=$abc$173472$auto$opt_dff.cc:219:make_patterns_logic$7001, arst={ }, srst={ }
  69 cells in clk=\clk_i, en=$abc$173369$auto$opt_dff.cc:219:make_patterns_logic$6971, arst={ }, srst={ }
  71 cells in clk=\clk_i, en=$abc$173268$auto$opt_dff.cc:219:make_patterns_logic$6941, arst={ }, srst={ }
  85 cells in clk=\clk_i, en=$abc$173166$auto$opt_dff.cc:219:make_patterns_logic$6911, arst={ }, srst={ }
  267 cells in clk=\clk_i, en=$abc$169725$auto$opt_dff.cc:194:make_patterns_logic$8373, arst={ }, srst={ }
  7839 cells in clk=\clk_i, en=$abc$163921$auto$opt_dff.cc:219:make_patterns_logic$8099, arst={ }, srst={ }
  2075 cells in clk=\clk_i, en=$abc$162244$auto$opt_dff.cc:219:make_patterns_logic$8118, arst={ }, srst={ }
  79 cells in clk=\clk_i, en=$abc$183710$auto$opt_dff.cc:219:make_patterns_logic$6162, arst={ }, srst={ }
  91 cells in clk=\clk_i, en=$abc$201820$auto$opt_dff.cc:219:make_patterns_logic$7016, arst={ }, srst={ }
  97 cells in clk=\clk_i, en=$abc$170399$auto$opt_dff.cc:219:make_patterns_logic$7196, arst={ }, srst={ }
  38 cells in clk=\clk_i, en=$abc$183813$auto$opt_dff.cc:219:make_patterns_logic$5998, arst={ }, srst={ }
  78 cells in clk=\clk_i, en=$abc$161035$auto$opt_dff.cc:219:make_patterns_logic$7825, arst={ }, srst={ }
  70 cells in clk=\clk_i, en=$abc$160930$auto$opt_dff.cc:219:make_patterns_logic$7795, arst={ }, srst={ }
  8913 cells in clk=\clk_i, en=$abc$188207$auto$opt_dff.cc:219:make_patterns_logic$6511, arst={ }, srst={ }
  115 cells in clk=\clk_i, en=$abc$172498$auto$opt_dff.cc:219:make_patterns_logic$7810, arst={ }, srst={ }
  76 cells in clk=\clk_i, en=$abc$160822$auto$opt_dff.cc:219:make_patterns_logic$7765, arst={ }, srst={ }
  71 cells in clk=\clk_i, en=$abc$160717$auto$opt_dff.cc:219:make_patterns_logic$7735, arst={ }, srst={ }
  90 cells in clk=\clk_i, en=$abc$161695$auto$opt_dff.cc:219:make_patterns_logic$7975, arst={ }, srst={ }
  100 cells in clk=\clk_i, en=$abc$160611$auto$opt_dff.cc:219:make_patterns_logic$7705, arst={ }, srst={ }
  38 cells in clk=\clk_i, en=$abc$193267$auto$opt_dff.cc:219:make_patterns_logic$8380, arst={ }, srst={ }
  2388 cells in clk=\clk_i, en=$abc$185750$auto$opt_dff.cc:219:make_patterns_logic$6530, arst={ }, srst={ }
  8879 cells in clk=\clk_i, en=$abc$197492$auto$opt_dff.cc:219:make_patterns_logic$8893, arst={ }, srst={ }
  8641 cells in clk=\clk_i, en=$abc$177372$auto$opt_dff.cc:219:make_patterns_logic$7305, arst={ }, srst={ }
  1384 cells in clk=\clk_i, en=$abc$231801$auto$opt_dff.cc:194:make_patterns_logic$6001, arst={ }, srst={ }

3.116.2. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$185649$auto$opt_dff.cc:219:make_patterns_logic$6479
Extracted 131 gates and 201 wires to a netlist network with 70 inputs and 64 outputs.

3.116.2.1. Executing ABC.

3.116.3. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$184789$auto$opt_dff.cc:219:make_patterns_logic$6267
Extracted 103 gates and 177 wires to a netlist network with 74 inputs and 35 outputs.

3.116.3.1. Executing ABC.

3.116.4. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$160507$auto$opt_dff.cc:219:make_patterns_logic$7675
Extracted 102 gates and 174 wires to a netlist network with 72 inputs and 36 outputs.

3.116.4.1. Executing ABC.

3.116.5. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$160339$auto$opt_dff.cc:219:make_patterns_logic$7645
Extracted 167 gates and 273 wires to a netlist network with 106 inputs and 99 outputs.

3.116.5.1. Executing ABC.

3.116.6. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$160206$auto$opt_dff.cc:219:make_patterns_logic$8876
Extracted 134 gates and 206 wires to a netlist network with 72 inputs and 69 outputs.

3.116.6.1. Executing ABC.

3.116.7. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$184484$auto$opt_dff.cc:219:make_patterns_logic$6177
Extracted 100 gates and 171 wires to a netlist network with 71 inputs and 33 outputs.

3.116.7.1. Executing ABC.

3.116.8. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$159968$auto$opt_dff.cc:219:make_patterns_logic$7614
Extracted 131 gates and 249 wires to a netlist network with 118 inputs and 35 outputs.

3.116.8.1. Executing ABC.

3.116.9. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$160010$auto$opt_dff.cc:219:make_patterns_logic$7623
Extracted 698 gates and 943 wires to a netlist network with 245 inputs and 133 outputs.

3.116.9.1. Executing ABC.

3.116.10. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$184687$auto$opt_dff.cc:219:make_patterns_logic$6237
Extracted 100 gates and 171 wires to a netlist network with 71 inputs and 33 outputs.

3.116.10.1. Executing ABC.

3.116.11. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$184585$auto$opt_dff.cc:219:make_patterns_logic$6207
Extracted 102 gates and 175 wires to a netlist network with 73 inputs and 34 outputs.

3.116.11.1. Executing ABC.

3.116.12. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$185545$auto$opt_dff.cc:219:make_patterns_logic$6447
Extracted 101 gates and 172 wires to a netlist network with 71 inputs and 35 outputs.

3.116.12.1. Executing ABC.

3.116.13. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$185443$auto$opt_dff.cc:219:make_patterns_logic$6417
Extracted 104 gates and 178 wires to a netlist network with 74 inputs and 39 outputs.

3.116.13.1. Executing ABC.

3.116.14. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$185341$auto$opt_dff.cc:219:make_patterns_logic$6387
Extracted 99 gates and 169 wires to a netlist network with 70 inputs and 35 outputs.

3.116.14.1. Executing ABC.

3.116.15. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$185239$auto$opt_dff.cc:219:make_patterns_logic$6357
Extracted 100 gates and 171 wires to a netlist network with 71 inputs and 35 outputs.

3.116.15.1. Executing ABC.

3.116.16. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$185056$auto$opt_dff.cc:219:make_patterns_logic$6327
Extracted 160 gates and 246 wires to a netlist network with 86 inputs and 86 outputs.

3.116.16.1. Executing ABC.

3.116.17. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$184891$auto$opt_dff.cc:219:make_patterns_logic$6297
Extracted 164 gates and 248 wires to a netlist network with 84 inputs and 74 outputs.

3.116.17.1. Executing ABC.

3.116.18. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$201925$auto$opt_dff.cc:194:make_patterns_logic$6004
Extracted 27 gates and 49 wires to a netlist network with 22 inputs and 22 outputs.

3.116.18.1. Executing ABC.

3.116.19. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$193318$auto$opt_dff.cc:219:make_patterns_logic$8408
Extracted 531 gates and 962 wires to a netlist network with 431 inputs and 37 outputs.

3.116.19.1. Executing ABC.

3.116.20. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$203351$auto$opt_dff.cc:194:make_patterns_logic$7592
Extracted 24 gates and 43 wires to a netlist network with 19 inputs and 17 outputs.

3.116.20.1. Executing ABC.

3.116.21. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$194249$auto$opt_dff.cc:219:make_patterns_logic$8649
Extracted 103 gates and 177 wires to a netlist network with 74 inputs and 35 outputs.

3.116.21.1. Executing ABC.

3.116.22. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$194146$auto$opt_dff.cc:219:make_patterns_logic$8619
Extracted 106 gates and 183 wires to a netlist network with 77 inputs and 38 outputs.

3.116.22.1. Executing ABC.

3.116.23. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$194043$auto$opt_dff.cc:219:make_patterns_logic$8589
Extracted 103 gates and 177 wires to a netlist network with 74 inputs and 35 outputs.

3.116.23.1. Executing ABC.

3.116.24. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$193940$auto$opt_dff.cc:219:make_patterns_logic$8559
Extracted 103 gates and 177 wires to a netlist network with 74 inputs and 35 outputs.

3.116.24.1. Executing ABC.

3.116.25. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$193839$auto$opt_dff.cc:219:make_patterns_logic$8529
Extracted 101 gates and 173 wires to a netlist network with 72 inputs and 35 outputs.

3.116.25.1. Executing ABC.

3.116.26. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$193732$auto$opt_dff.cc:219:make_patterns_logic$8499
Extracted 104 gates and 178 wires to a netlist network with 74 inputs and 36 outputs.

3.116.26.1. Executing ABC.

3.116.27. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$192436$auto$opt_dff.cc:219:make_patterns_logic$6282
Extracted 102 gates and 175 wires to a netlist network with 73 inputs and 36 outputs.

3.116.27.1. Executing ABC.

3.116.28. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$192330$auto$opt_dff.cc:219:make_patterns_logic$6252
Extracted 95 gates and 160 wires to a netlist network with 65 inputs and 36 outputs.

3.116.28.1. Executing ABC.

3.116.29. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$192226$auto$opt_dff.cc:219:make_patterns_logic$7256
Extracted 103 gates and 177 wires to a netlist network with 74 inputs and 36 outputs.

3.116.29.1. Executing ABC.

3.116.30. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$192117$auto$opt_dff.cc:219:make_patterns_logic$6222
Extracted 78 gates and 126 wires to a netlist network with 48 inputs and 37 outputs.

3.116.30.1. Executing ABC.

3.116.31. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$192019$auto$opt_dff.cc:194:make_patterns_logic$6785
Extracted 625 gates and 1135 wires to a netlist network with 510 inputs and 571 outputs.

3.116.31.1. Executing ABC.

3.116.32. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$203596$auto$opt_dff.cc:219:make_patterns_logic$7586
Extracted 38 gates and 47 wires to a netlist network with 9 inputs and 12 outputs.

3.116.32.1. Executing ABC.

3.116.33. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$203488$auto$opt_dff.cc:219:make_patterns_logic$6132
Extracted 98 gates and 167 wires to a netlist network with 69 inputs and 36 outputs.

3.116.33.1. Executing ABC.

3.116.34. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$201716$auto$opt_dff.cc:219:make_patterns_logic$6986
Extracted 102 gates and 175 wires to a netlist network with 73 inputs and 34 outputs.

3.116.34.1. Executing ABC.

3.116.35. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$201611$auto$opt_dff.cc:219:make_patterns_logic$6956
Extracted 103 gates and 177 wires to a netlist network with 74 inputs and 34 outputs.

3.116.35.1. Executing ABC.

3.116.36. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$201513$auto$opt_dff.cc:194:make_patterns_logic$5991
Extracted 65 gates and 99 wires to a netlist network with 34 inputs and 33 outputs.

3.116.36.1. Executing ABC.

3.116.37. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$201411$auto$opt_dff.cc:219:make_patterns_logic$7166
Extracted 102 gates and 175 wires to a netlist network with 73 inputs and 34 outputs.

3.116.37.1. Executing ABC.

3.116.38. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$201306$auto$opt_dff.cc:219:make_patterns_logic$6926
Extracted 104 gates and 179 wires to a netlist network with 75 inputs and 35 outputs.

3.116.38.1. Executing ABC.

3.116.39. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$161138$auto$opt_dff.cc:219:make_patterns_logic$7855
Extracted 104 gates and 178 wires to a netlist network with 74 inputs and 36 outputs.

3.116.39.1. Executing ABC.

3.116.40. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$203153$auto$opt_dff.cc:219:make_patterns_logic$7630
Extracted 718 gates and 952 wires to a netlist network with 234 inputs and 139 outputs.

3.116.40.1. Executing ABC.

3.116.41. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$181796$auto$opt_dff.cc:219:make_patterns_logic$8844
Extracted 102 gates and 174 wires to a netlist network with 72 inputs and 36 outputs.

3.116.41.1. Executing ABC.

3.116.42. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$173060$auto$opt_dff.cc:219:make_patterns_logic$6881
Extracted 104 gates and 178 wires to a netlist network with 74 inputs and 36 outputs.

3.116.42.1. Executing ABC.

3.116.43. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$172893$auto$opt_dff.cc:219:make_patterns_logic$6851
Extracted 110 gates and 187 wires to a netlist network with 77 inputs and 70 outputs.

3.116.43.1. Executing ABC.

3.116.44. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$181627$auto$opt_dff.cc:219:make_patterns_logic$6072
Extracted 74 gates and 116 wires to a netlist network with 42 inputs and 37 outputs.

3.116.44.1. Executing ABC.

3.116.45. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$181490$auto$opt_dff.cc:219:make_patterns_logic$6494
Extracted 134 gates and 206 wires to a netlist network with 72 inputs and 69 outputs.

3.116.45.1. Executing ABC.

3.116.46. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$172728$auto$opt_dff.cc:219:make_patterns_logic$6829
Extracted 689 gates and 917 wires to a netlist network with 228 inputs and 105 outputs.

3.116.46.1. Executing ABC.

3.116.47. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$172684$auto$opt_dff.cc:219:make_patterns_logic$6820
Extracted 395 gates and 734 wires to a netlist network with 339 inputs and 36 outputs.

3.116.47.1. Executing ABC.

3.116.48. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$203384$auto$opt_dff.cc:219:make_patterns_logic$7288
Extracted 128 gates and 198 wires to a netlist network with 70 inputs and 67 outputs.

3.116.48.1. Executing ABC.

3.116.49. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$201955$auto$opt_dff.cc:194:make_patterns_logic$6007
Extracted 3 gates and 6 wires to a netlist network with 3 inputs and 2 outputs.

3.116.49.1. Executing ABC.

3.116.50. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$181383$auto$opt_dff.cc:219:make_patterns_logic$7226
Extracted 105 gates and 180 wires to a netlist network with 75 inputs and 36 outputs.

3.116.50.1. Executing ABC.

3.116.51. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$181275$auto$opt_dff.cc:219:make_patterns_logic$6462
Extracted 75 gates and 118 wires to a netlist network with 43 inputs and 39 outputs.

3.116.51.1. Executing ABC.

3.116.52. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$172633$auto$opt_dff.cc:219:make_patterns_logic$6792
Extracted 38 gates and 47 wires to a netlist network with 9 inputs and 12 outputs.

3.116.52.1. Executing ABC.

3.116.53. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$172358$auto$opt_dff.cc:219:make_patterns_logic$7840
Extracted 106 gates and 182 wires to a netlist network with 76 inputs and 69 outputs.

3.116.53.1. Executing ABC.

3.116.54. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$181177$auto$opt_dff.cc:194:make_patterns_logic$7579
Extracted 595 gates and 1161 wires to a netlist network with 566 inputs and 563 outputs.

3.116.54.1. Executing ABC.

3.116.55. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$172223$auto$opt_dff.cc:219:make_patterns_logic$7870
Extracted 102 gates and 175 wires to a netlist network with 73 inputs and 66 outputs.

3.116.55.1. Executing ABC.

3.116.56. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$172031$auto$opt_dff.cc:219:make_patterns_logic$7900
Extracted 169 gates and 257 wires to a netlist network with 88 inputs and 108 outputs.

3.116.56.1. Executing ABC.

3.116.57. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$193628$auto$opt_dff.cc:219:make_patterns_logic$8469
Extracted 103 gates and 177 wires to a netlist network with 74 inputs and 35 outputs.

3.116.57.1. Executing ABC.

3.116.58. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$193524$auto$opt_dff.cc:219:make_patterns_logic$8439
Extracted 105 gates and 181 wires to a netlist network with 76 inputs and 69 outputs.

3.116.58.1. Executing ABC.

3.116.59. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$193359$auto$opt_dff.cc:219:make_patterns_logic$8417
Extracted 710 gates and 933 wires to a netlist network with 223 inputs and 102 outputs.

3.116.59.1. Executing ABC.

3.116.60. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$193161$auto$opt_dff.cc:219:make_patterns_logic$6432
Extracted 99 gates and 168 wires to a netlist network with 69 inputs and 35 outputs.

3.116.60.1. Executing ABC.

3.116.61. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$193057$auto$opt_dff.cc:219:make_patterns_logic$6402
Extracted 79 gates and 129 wires to a netlist network with 50 inputs and 36 outputs.

3.116.61.1. Executing ABC.

3.116.62. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$192951$auto$opt_dff.cc:219:make_patterns_logic$6372
Extracted 84 gates and 138 wires to a netlist network with 54 inputs and 37 outputs.

3.116.62.1. Executing ABC.

3.116.63. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$192804$auto$opt_dff.cc:219:make_patterns_logic$6342
Extracted 156 gates and 261 wires to a netlist network with 105 inputs and 96 outputs.

3.116.63.1. Executing ABC.

3.116.64. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$192699$auto$opt_dff.cc:219:make_patterns_logic$6102
Extracted 88 gates and 147 wires to a netlist network with 59 inputs and 37 outputs.

3.116.64.1. Executing ABC.

3.116.65. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$192539$auto$opt_dff.cc:219:make_patterns_logic$6312
Extracted 137 gates and 195 wires to a netlist network with 58 inputs and 71 outputs.

3.116.65.1. Executing ABC.

3.116.66. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$171850$auto$opt_dff.cc:219:make_patterns_logic$7930
Extracted 191 gates and 310 wires to a netlist network with 119 inputs and 122 outputs.

3.116.66.1. Executing ABC.

3.116.67. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$171713$auto$opt_dff.cc:219:make_patterns_logic$7960
Extracted 104 gates and 179 wires to a netlist network with 75 inputs and 67 outputs.

3.116.67.1. Executing ABC.

3.116.68. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$171579$auto$opt_dff.cc:219:make_patterns_logic$7990
Extracted 103 gates and 177 wires to a netlist network with 74 inputs and 68 outputs.

3.116.68.1. Executing ABC.

3.116.69. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$171439$auto$opt_dff.cc:219:make_patterns_logic$8020
Extracted 110 gates and 188 wires to a netlist network with 78 inputs and 73 outputs.

3.116.69.1. Executing ABC.

3.116.70. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$162110$auto$opt_dff.cc:219:make_patterns_logic$8067
Extracted 75 gates and 117 wires to a netlist network with 42 inputs and 39 outputs.

3.116.70.1. Executing ABC.

3.116.71. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$171303$auto$opt_dff.cc:219:make_patterns_logic$8050
Extracted 103 gates and 177 wires to a netlist network with 74 inputs and 67 outputs.

3.116.71.1. Executing ABC.

3.116.72. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$171204$auto$opt_dff.cc:219:make_patterns_logic$8082
Extracted 67 gates and 104 wires to a netlist network with 37 inputs and 34 outputs.

3.116.72.1. Executing ABC.

3.116.73. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$203014$auto$opt_dff.cc:219:make_patterns_logic$7660
Extracted 187 gates and 291 wires to a netlist network with 104 inputs and 98 outputs.

3.116.73.1. Executing ABC.

3.116.74. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$202879$auto$opt_dff.cc:219:make_patterns_logic$7690
Extracted 127 gates and 200 wires to a netlist network with 73 inputs and 40 outputs.

3.116.74.1. Executing ABC.

3.116.75. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$202740$auto$opt_dff.cc:219:make_patterns_logic$7720
Extracted 133 gates and 211 wires to a netlist network with 78 inputs and 44 outputs.

3.116.75.1. Executing ABC.

3.116.76. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$202605$auto$opt_dff.cc:219:make_patterns_logic$7750
Extracted 127 gates and 200 wires to a netlist network with 73 inputs and 41 outputs.

3.116.76.1. Executing ABC.

3.116.77. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$202471$auto$opt_dff.cc:219:make_patterns_logic$7780
Extracted 130 gates and 204 wires to a netlist network with 74 inputs and 42 outputs.

3.116.77.1. Executing ABC.

3.116.78. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$202325$auto$opt_dff.cc:219:make_patterns_logic$7136
Extracted 186 gates and 301 wires to a netlist network with 115 inputs and 88 outputs.

3.116.78.1. Executing ABC.

3.116.79. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$202166$auto$opt_dff.cc:219:make_patterns_logic$7106
Extracted 170 gates and 254 wires to a netlist network with 84 inputs and 75 outputs.

3.116.79.1. Executing ABC.

3.116.80. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$202062$auto$opt_dff.cc:219:make_patterns_logic$7076
Extracted 101 gates and 172 wires to a netlist network with 71 inputs and 36 outputs.

3.116.80.1. Executing ABC.

3.116.81. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$201960$auto$opt_dff.cc:219:make_patterns_logic$7046
Extracted 99 gates and 169 wires to a netlist network with 70 inputs and 34 outputs.

3.116.81.1. Executing ABC.

3.116.82. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$162007$auto$opt_dff.cc:219:make_patterns_logic$8035
Extracted 101 gates and 173 wires to a netlist network with 72 inputs and 33 outputs.

3.116.82.1. Executing ABC.

3.116.83. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$161904$auto$opt_dff.cc:219:make_patterns_logic$8005
Extracted 101 gates and 173 wires to a netlist network with 72 inputs and 33 outputs.

3.116.83.1. Executing ABC.

3.116.84. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$171101$auto$opt_dff.cc:219:make_patterns_logic$6896
Extracted 71 gates and 112 wires to a netlist network with 41 inputs and 36 outputs.

3.116.84.1. Executing ABC.

3.116.85. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$170933$auto$opt_dff.cc:219:make_patterns_logic$6866
Extracted 134 gates and 207 wires to a netlist network with 73 inputs and 97 outputs.

3.116.85.1. Executing ABC.

3.116.86. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$195062$auto$opt_dff.cc:219:make_patterns_logic$8861
Extracted 130 gates and 199 wires to a netlist network with 69 inputs and 65 outputs.

3.116.86.1. Executing ABC.

3.116.87. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$195162$auto$opt_dff.cc:219:make_patterns_logic$8912
Extracted 2171 gates and 3318 wires to a netlist network with 1147 inputs and 584 outputs.

3.116.87.1. Executing ABC.

3.116.88. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$194958$auto$opt_dff.cc:219:make_patterns_logic$8829
Extracted 103 gates and 177 wires to a netlist network with 74 inputs and 35 outputs.

3.116.88.1. Executing ABC.

3.116.89. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$194854$auto$opt_dff.cc:219:make_patterns_logic$8799
Extracted 103 gates and 177 wires to a netlist network with 74 inputs and 35 outputs.

3.116.89.1. Executing ABC.

3.116.90. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$194751$auto$opt_dff.cc:219:make_patterns_logic$8769
Extracted 101 gates and 173 wires to a netlist network with 72 inputs and 34 outputs.

3.116.90.1. Executing ABC.

3.116.91. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$194647$auto$opt_dff.cc:219:make_patterns_logic$8739
Extracted 103 gates and 177 wires to a netlist network with 74 inputs and 35 outputs.

3.116.91.1. Executing ABC.

3.116.92. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$194506$auto$opt_dff.cc:219:make_patterns_logic$8709
Extracted 187 gates and 308 wires to a netlist network with 121 inputs and 92 outputs.

3.116.92.1. Executing ABC.

3.116.93. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$194351$auto$opt_dff.cc:219:make_patterns_logic$8679
Extracted 166 gates and 253 wires to a netlist network with 87 inputs and 75 outputs.

3.116.93.1. Executing ABC.

3.116.94. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$161798$auto$opt_dff.cc:219:make_patterns_logic$6192
Extracted 75 gates and 119 wires to a netlist network with 44 inputs and 38 outputs.

3.116.94.1. Executing ABC.

3.116.95. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$161592$auto$opt_dff.cc:219:make_patterns_logic$7945
Extracted 102 gates and 175 wires to a netlist network with 73 inputs and 34 outputs.

3.116.95.1. Executing ABC.

3.116.96. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$184378$auto$opt_dff.cc:219:make_patterns_logic$6147
Extracted 83 gates and 137 wires to a netlist network with 54 inputs and 37 outputs.

3.116.96.1. Executing ABC.

3.116.97. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$184276$auto$opt_dff.cc:219:make_patterns_logic$6117
Extracted 68 gates and 106 wires to a netlist network with 38 inputs and 33 outputs.

3.116.97.1. Executing ABC.

3.116.98. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$184175$auto$opt_dff.cc:219:make_patterns_logic$6087
Extracted 70 gates and 110 wires to a netlist network with 40 inputs and 35 outputs.

3.116.98.1. Executing ABC.

3.116.99. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$184071$auto$opt_dff.cc:219:make_patterns_logic$6057
Extracted 69 gates and 108 wires to a netlist network with 39 inputs and 33 outputs.

3.116.99.1. Executing ABC.

3.116.100. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$183906$auto$opt_dff.cc:219:make_patterns_logic$6035
Extracted 650 gates and 879 wires to a netlist network with 229 inputs and 103 outputs.

3.116.100.1. Executing ABC.

3.116.101. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$183864$auto$opt_dff.cc:219:make_patterns_logic$6026
Extracted 530 gates and 960 wires to a netlist network with 430 inputs and 37 outputs.

3.116.101.1. Executing ABC.

3.116.102. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i
Extracted 6524 gates and 7340 wires to a netlist network with 816 inputs and 1476 outputs.

3.116.102.1. Executing ABC.

3.116.103. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$183676$auto$opt_dff.cc:194:make_patterns_logic$8386
Extracted 25 gates and 46 wires to a netlist network with 21 inputs and 20 outputs.

3.116.103.1. Executing ABC.

3.116.104. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$183478$auto$opt_dff.cc:219:make_patterns_logic$8424
Extracted 704 gates and 909 wires to a netlist network with 205 inputs and 115 outputs.

3.116.104.1. Executing ABC.

3.116.105. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$183309$auto$opt_dff.cc:219:make_patterns_logic$8454
Extracted 107 gates and 182 wires to a netlist network with 75 inputs and 70 outputs.

3.116.105.1. Executing ABC.

3.116.106. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$183206$auto$opt_dff.cc:219:make_patterns_logic$8484
Extracted 101 gates and 173 wires to a netlist network with 72 inputs and 35 outputs.

3.116.106.1. Executing ABC.

3.116.107. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$183101$auto$opt_dff.cc:219:make_patterns_logic$8514
Extracted 107 gates and 184 wires to a netlist network with 77 inputs and 38 outputs.

3.116.107.1. Executing ABC.

3.116.108. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$182995$auto$opt_dff.cc:219:make_patterns_logic$8544
Extracted 102 gates and 174 wires to a netlist network with 72 inputs and 36 outputs.

3.116.108.1. Executing ABC.

3.116.109. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$182889$auto$opt_dff.cc:219:make_patterns_logic$8574
Extracted 101 gates and 173 wires to a netlist network with 72 inputs and 33 outputs.

3.116.109.1. Executing ABC.

3.116.110. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$182786$auto$opt_dff.cc:219:make_patterns_logic$8604
Extracted 103 gates and 175 wires to a netlist network with 72 inputs and 37 outputs.

3.116.110.1. Executing ABC.

3.116.111. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$182681$auto$opt_dff.cc:219:make_patterns_logic$8634
Extracted 101 gates and 173 wires to a netlist network with 72 inputs and 33 outputs.

3.116.111.1. Executing ABC.

3.116.112. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$182577$auto$opt_dff.cc:219:make_patterns_logic$8664
Extracted 100 gates and 171 wires to a netlist network with 71 inputs and 34 outputs.

3.116.112.1. Executing ABC.

3.116.113. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$170734$auto$opt_dff.cc:219:make_patterns_logic$6836
Extracted 612 gates and 816 wires to a netlist network with 204 inputs and 106 outputs.

3.116.113.1. Executing ABC.

3.116.114. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$170535$auto$opt_dff.cc:219:make_patterns_logic$6042
Extracted 610 gates and 819 wires to a netlist network with 209 inputs and 107 outputs.

3.116.114.1. Executing ABC.

3.116.115. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$170502$auto$opt_dff.cc:194:make_patterns_logic$6798
Extracted 24 gates and 44 wires to a netlist network with 20 inputs and 19 outputs.

3.116.115.1. Executing ABC.

3.116.116. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$161408$auto$opt_dff.cc:219:make_patterns_logic$7915
Extracted 139 gates and 213 wires to a netlist network with 74 inputs and 89 outputs.

3.116.116.1. Executing ABC.

3.116.117. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$161241$auto$opt_dff.cc:219:make_patterns_logic$7885
Extracted 161 gates and 243 wires to a netlist network with 82 inputs and 77 outputs.

3.116.117.1. Executing ABC.

3.116.118. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$182403$auto$opt_dff.cc:219:make_patterns_logic$8694
Extracted 159 gates and 231 wires to a netlist network with 72 inputs and 75 outputs.

3.116.118.1. Executing ABC.

3.116.119. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$182214$auto$opt_dff.cc:219:make_patterns_logic$8724
Extracted 148 gates and 223 wires to a netlist network with 75 inputs and 92 outputs.

3.116.119.1. Executing ABC.

3.116.120. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$182106$auto$opt_dff.cc:219:make_patterns_logic$8754
Extracted 105 gates and 180 wires to a netlist network with 75 inputs and 36 outputs.

3.116.120.1. Executing ABC.

3.116.121. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$182004$auto$opt_dff.cc:219:make_patterns_logic$8784
Extracted 101 gates and 173 wires to a netlist network with 72 inputs and 35 outputs.

3.116.121.1. Executing ABC.

3.116.122. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$181898$auto$opt_dff.cc:219:make_patterns_logic$8814
Extracted 101 gates and 173 wires to a netlist network with 72 inputs and 33 outputs.

3.116.122.1. Executing ABC.

3.116.123. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$174651$auto$opt_dff.cc:219:make_patterns_logic$7324
Extracted 1992 gates and 2947 wires to a netlist network with 955 inputs and 631 outputs.

3.116.123.1. Executing ABC.

3.116.124. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$174551$auto$opt_dff.cc:219:make_patterns_logic$7273
Extracted 67 gates and 104 wires to a netlist network with 37 inputs and 34 outputs.

3.116.124.1. Executing ABC.

3.116.125. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$174449$auto$opt_dff.cc:219:make_patterns_logic$7241
Extracted 69 gates and 108 wires to a netlist network with 39 inputs and 34 outputs.

3.116.125.1. Executing ABC.

3.116.126. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$174347$auto$opt_dff.cc:219:make_patterns_logic$7211
Extracted 73 gates and 115 wires to a netlist network with 42 inputs and 37 outputs.

3.116.126.1. Executing ABC.

3.116.127. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$174241$auto$opt_dff.cc:219:make_patterns_logic$7181
Extracted 74 gates and 118 wires to a netlist network with 44 inputs and 38 outputs.

3.116.127.1. Executing ABC.

3.116.128. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$174136$auto$opt_dff.cc:219:make_patterns_logic$7151
Extracted 71 gates and 111 wires to a netlist network with 40 inputs and 36 outputs.

3.116.128.1. Executing ABC.

3.116.129. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$173949$auto$opt_dff.cc:219:make_patterns_logic$7121
Extracted 109 gates and 150 wires to a netlist network with 41 inputs and 63 outputs.

3.116.129.1. Executing ABC.

3.116.130. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$173783$auto$opt_dff.cc:219:make_patterns_logic$7091
Extracted 122 gates and 161 wires to a netlist network with 39 inputs and 64 outputs.

3.116.130.1. Executing ABC.

3.116.131. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$173679$auto$opt_dff.cc:219:make_patterns_logic$7061
Extracted 74 gates and 117 wires to a netlist network with 43 inputs and 37 outputs.

3.116.131.1. Executing ABC.

3.116.132. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$173573$auto$opt_dff.cc:219:make_patterns_logic$7031
Extracted 71 gates and 112 wires to a netlist network with 41 inputs and 35 outputs.

3.116.132.1. Executing ABC.

3.116.133. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$173472$auto$opt_dff.cc:219:make_patterns_logic$7001
Extracted 72 gates and 113 wires to a netlist network with 41 inputs and 37 outputs.

3.116.133.1. Executing ABC.

3.116.134. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$173369$auto$opt_dff.cc:219:make_patterns_logic$6971
Extracted 69 gates and 108 wires to a netlist network with 39 inputs and 33 outputs.

3.116.134.1. Executing ABC.

3.116.135. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$173268$auto$opt_dff.cc:219:make_patterns_logic$6941
Extracted 71 gates and 111 wires to a netlist network with 40 inputs and 36 outputs.

3.116.135.1. Executing ABC.

3.116.136. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$173166$auto$opt_dff.cc:219:make_patterns_logic$6911
Extracted 85 gates and 140 wires to a netlist network with 55 inputs and 36 outputs.

3.116.136.1. Executing ABC.

3.116.137. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$169725$auto$opt_dff.cc:194:make_patterns_logic$8373
Extracted 267 gates and 509 wires to a netlist network with 242 inputs and 234 outputs.

3.116.137.1. Executing ABC.

3.116.138. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$163921$auto$opt_dff.cc:219:make_patterns_logic$8099
Extracted 7390 gates and 9025 wires to a netlist network with 1635 inputs and 2517 outputs.

3.116.138.1. Executing ABC.

3.116.139. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$162244$auto$opt_dff.cc:219:make_patterns_logic$8118
Extracted 1948 gates and 2859 wires to a netlist network with 911 inputs and 706 outputs.

3.116.139.1. Executing ABC.

3.116.140. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$183710$auto$opt_dff.cc:219:make_patterns_logic$6162
Extracted 79 gates and 128 wires to a netlist network with 49 inputs and 36 outputs.

3.116.140.1. Executing ABC.

3.116.141. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$201820$auto$opt_dff.cc:219:make_patterns_logic$7016
Extracted 91 gates and 153 wires to a netlist network with 62 inputs and 36 outputs.

3.116.141.1. Executing ABC.

3.116.142. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$170399$auto$opt_dff.cc:219:make_patterns_logic$7196
Extracted 97 gates and 165 wires to a netlist network with 68 inputs and 35 outputs.

3.116.142.1. Executing ABC.

3.116.143. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$183813$auto$opt_dff.cc:219:make_patterns_logic$5998
Extracted 38 gates and 47 wires to a netlist network with 9 inputs and 12 outputs.

3.116.143.1. Executing ABC.

3.116.144. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$161035$auto$opt_dff.cc:219:make_patterns_logic$7825
Extracted 78 gates and 127 wires to a netlist network with 49 inputs and 34 outputs.

3.116.144.1. Executing ABC.

3.116.145. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$160930$auto$opt_dff.cc:219:make_patterns_logic$7795
Extracted 70 gates and 110 wires to a netlist network with 40 inputs and 34 outputs.

3.116.145.1. Executing ABC.

3.116.146. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$188207$auto$opt_dff.cc:219:make_patterns_logic$6511
Extracted 8527 gates and 9762 wires to a netlist network with 1235 inputs and 1905 outputs.

3.116.146.1. Executing ABC.

3.116.147. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$172498$auto$opt_dff.cc:219:make_patterns_logic$7810
Extracted 115 gates and 190 wires to a netlist network with 75 inputs and 58 outputs.

3.116.147.1. Executing ABC.

3.116.148. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$160822$auto$opt_dff.cc:219:make_patterns_logic$7765
Extracted 76 gates and 120 wires to a netlist network with 44 inputs and 39 outputs.

3.116.148.1. Executing ABC.

3.116.149. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$160717$auto$opt_dff.cc:219:make_patterns_logic$7735
Extracted 71 gates and 111 wires to a netlist network with 40 inputs and 37 outputs.

3.116.149.1. Executing ABC.

3.116.150. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$161695$auto$opt_dff.cc:219:make_patterns_logic$7975
Extracted 90 gates and 151 wires to a netlist network with 61 inputs and 36 outputs.

3.116.150.1. Executing ABC.

3.116.151. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$160611$auto$opt_dff.cc:219:make_patterns_logic$7705
Extracted 100 gates and 171 wires to a netlist network with 71 inputs and 36 outputs.

3.116.151.1. Executing ABC.

3.116.152. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$193267$auto$opt_dff.cc:219:make_patterns_logic$8380
Extracted 38 gates and 47 wires to a netlist network with 9 inputs and 12 outputs.

3.116.152.1. Executing ABC.

3.116.153. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$185750$auto$opt_dff.cc:219:make_patterns_logic$6530
Extracted 2199 gates and 3394 wires to a netlist network with 1195 inputs and 712 outputs.

3.116.153.1. Executing ABC.

3.116.154. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$197492$auto$opt_dff.cc:219:make_patterns_logic$8893
Extracted 8304 gates and 9403 wires to a netlist network with 1099 inputs and 2017 outputs.

3.116.154.1. Executing ABC.

3.116.155. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$177372$auto$opt_dff.cc:219:make_patterns_logic$7305
Extracted 8507 gates and 9810 wires to a netlist network with 1303 inputs and 1806 outputs.

3.116.155.1. Executing ABC.

3.116.156. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$231801$auto$opt_dff.cc:194:make_patterns_logic$6001
Extracted 1384 gates and 2612 wires to a netlist network with 1228 inputs and 396 outputs.

3.116.156.1. Executing ABC.

yosys> abc -dff

3.117. Executing ABC pass (technology mapping using ABC).

3.117.1. Summary of detected clock domains:
  132 cells in clk=\clk_i, en=$abc$236129$abc$185649$auto$opt_dff.cc:219:make_patterns_logic$6479, arst={ }, srst={ }
  98 cells in clk=\clk_i, en=$abc$236261$abc$184789$auto$opt_dff.cc:219:make_patterns_logic$6267, arst={ }, srst={ }
  103 cells in clk=\clk_i, en=$abc$236365$abc$160507$auto$opt_dff.cc:219:make_patterns_logic$7675, arst={ }, srst={ }
  169 cells in clk=\clk_i, en=$abc$236468$abc$160339$auto$opt_dff.cc:219:make_patterns_logic$7645, arst={ }, srst={ }
  134 cells in clk=\clk_i, en=$abc$236636$abc$160206$auto$opt_dff.cc:219:make_patterns_logic$8876, arst={ }, srst={ }
  96 cells in clk=\clk_i, en=$abc$236771$abc$184484$auto$opt_dff.cc:219:make_patterns_logic$6177, arst={ }, srst={ }
  315 cells in clk=\clk_i, en=$abc$236872$abc$159968$auto$opt_dff.cc:219:make_patterns_logic$7614, arst={ }, srst={ }
  808 cells in clk=\clk_i, en=$abc$237033$abc$160010$auto$opt_dff.cc:219:make_patterns_logic$7623, arst={ }, srst={ }
  95 cells in clk=\clk_i, en=$abc$237845$abc$184687$auto$opt_dff.cc:219:make_patterns_logic$6237, arst={ }, srst={ }
  97 cells in clk=\clk_i, en=$abc$237947$abc$184585$auto$opt_dff.cc:219:make_patterns_logic$6207, arst={ }, srst={ }
  97 cells in clk=\clk_i, en=$abc$238050$abc$185545$auto$opt_dff.cc:219:make_patterns_logic$6447, arst={ }, srst={ }
  98 cells in clk=\clk_i, en=$abc$238154$abc$185443$auto$opt_dff.cc:219:make_patterns_logic$6417, arst={ }, srst={ }
  96 cells in clk=\clk_i, en=$abc$238262$abc$185341$auto$opt_dff.cc:219:make_patterns_logic$6387, arst={ }, srst={ }
  95 cells in clk=\clk_i, en=$abc$238365$abc$185239$auto$opt_dff.cc:219:make_patterns_logic$6357, arst={ }, srst={ }
  159 cells in clk=\clk_i, en=$abc$238469$abc$185056$auto$opt_dff.cc:219:make_patterns_logic$6327, arst={ }, srst={ }
  9 cells in clk=\clk_i, en=$abc$238829$abc$193318$auto$opt_dff.cc:219:make_patterns_logic$8408, arst={ }, srst={ }
  20 cells in clk=\clk_i, en=$abc$239441$abc$203351$auto$opt_dff.cc:194:make_patterns_logic$7592, arst={ }, srst={ }
  104 cells in clk=\clk_i, en=$abc$239464$abc$194249$auto$opt_dff.cc:219:make_patterns_logic$8649, arst={ }, srst={ }
  105 cells in clk=\clk_i, en=$abc$239568$abc$194146$auto$opt_dff.cc:219:make_patterns_logic$8619, arst={ }, srst={ }
  104 cells in clk=\clk_i, en=$abc$239675$abc$194043$auto$opt_dff.cc:219:make_patterns_logic$8589, arst={ }, srst={ }
  103 cells in clk=\clk_i, en=$abc$239779$abc$193940$auto$opt_dff.cc:219:make_patterns_logic$8559, arst={ }, srst={ }
  102 cells in clk=\clk_i, en=$abc$239883$abc$193839$auto$opt_dff.cc:219:make_patterns_logic$8529, arst={ }, srst={ }
  105 cells in clk=\clk_i, en=$abc$239985$abc$193732$auto$opt_dff.cc:219:make_patterns_logic$8499, arst={ }, srst={ }
  90 cells in clk=\clk_i, en=$abc$240090$abc$192436$auto$opt_dff.cc:219:make_patterns_logic$6282, arst={ }, srst={ }
  91 cells in clk=\clk_i, en=$abc$240194$abc$192330$auto$opt_dff.cc:219:make_patterns_logic$6252, arst={ }, srst={ }
  105 cells in clk=\clk_i, en=$abc$240299$abc$192226$auto$opt_dff.cc:219:make_patterns_logic$7256, arst={ }, srst={ }
  93 cells in clk=\clk_i, en=$abc$240403$abc$192117$auto$opt_dff.cc:219:make_patterns_logic$6222, arst={ }, srst={ }
  34 cells in clk=\clk_i, en=$abc$241146$abc$203596$auto$opt_dff.cc:219:make_patterns_logic$7586, arst={ }, srst={ }
  89 cells in clk=\clk_i, en=$abc$241178$abc$203488$auto$opt_dff.cc:219:make_patterns_logic$6132, arst={ }, srst={ }
  102 cells in clk=\clk_i, en=$abc$241284$abc$201716$auto$opt_dff.cc:219:make_patterns_logic$6986, arst={ }, srst={ }
  103 cells in clk=\clk_i, en=$abc$241387$abc$201611$auto$opt_dff.cc:219:make_patterns_logic$6956, arst={ }, srst={ }
  653 cells in clk=\clk_i, en=$abc$241491$abc$201513$auto$opt_dff.cc:194:make_patterns_logic$5991, arst={ }, srst={ }
  102 cells in clk=\clk_i, en=$abc$241589$abc$201411$auto$opt_dff.cc:219:make_patterns_logic$7166, arst={ }, srst={ }
  104 cells in clk=\clk_i, en=$abc$241692$abc$201306$auto$opt_dff.cc:219:make_patterns_logic$6926, arst={ }, srst={ }
  104 cells in clk=\clk_i, en=$abc$241797$abc$161138$auto$opt_dff.cc:219:make_patterns_logic$7855, arst={ }, srst={ }
  803 cells in clk=\clk_i, en=$abc$241902$abc$203153$auto$opt_dff.cc:219:make_patterns_logic$7630, arst={ }, srst={ }
  101 cells in clk=\clk_i, en=$abc$242709$abc$181796$auto$opt_dff.cc:219:make_patterns_logic$8844, arst={ }, srst={ }
  104 cells in clk=\clk_i, en=$abc$242812$abc$173060$auto$opt_dff.cc:219:make_patterns_logic$6881, arst={ }, srst={ }
  166 cells in clk=\clk_i, en=$abc$242917$abc$172893$auto$opt_dff.cc:219:make_patterns_logic$6851, arst={ }, srst={ }
  79 cells in clk=\clk_i, en=$abc$243056$abc$181627$auto$opt_dff.cc:219:make_patterns_logic$6072, arst={ }, srst={ }
  133 cells in clk=\clk_i, en=$abc$243163$abc$181490$auto$opt_dff.cc:219:make_patterns_logic$6494, arst={ }, srst={ }
  767 cells in clk=\clk_i, en=$abc$243298$abc$172728$auto$opt_dff.cc:219:make_patterns_logic$6829, arst={ }, srst={ }
  10 cells in clk=\clk_i, en=$abc$244092$abc$172684$auto$opt_dff.cc:219:make_patterns_logic$6820, arst={ }, srst={ }
  3 cells in clk=\clk_i, en=$abc$244777$abc$201955$auto$opt_dff.cc:194:make_patterns_logic$6007, arst={ }, srst={ }
  104 cells in clk=\clk_i, en=$abc$244782$abc$181383$auto$opt_dff.cc:219:make_patterns_logic$7226, arst={ }, srst={ }
  34 cells in clk=\clk_i, en=$abc$244996$abc$172633$auto$opt_dff.cc:219:make_patterns_logic$6792, arst={ }, srst={ }
  104 cells in clk=\clk_i, en=$abc$245028$abc$172358$auto$opt_dff.cc:219:make_patterns_logic$7840, arst={ }, srst={ }
  799 cells in clk=\clk_i, en=$abc$245167$abc$181177$auto$opt_dff.cc:194:make_patterns_logic$7579, arst={ }, srst={ }
  103 cells in clk=\clk_i, en=$abc$245795$abc$172223$auto$opt_dff.cc:219:make_patterns_logic$7870, arst={ }, srst={ }
  173 cells in clk=\clk_i, en=$abc$245930$abc$172031$auto$opt_dff.cc:219:make_patterns_logic$7900, arst={ }, srst={ }
  103 cells in clk=\clk_i, en=$abc$246132$abc$193628$auto$opt_dff.cc:219:make_patterns_logic$8469, arst={ }, srst={ }
  105 cells in clk=\clk_i, en=$abc$246236$abc$193524$auto$opt_dff.cc:219:make_patterns_logic$8439, arst={ }, srst={ }
  22 cells in clk=\clk_i, en=$abc$238800$abc$201925$auto$opt_dff.cc:194:make_patterns_logic$6004, arst={ }, srst={ }
  764 cells in clk=\clk_i, en=$abc$246374$abc$193359$auto$opt_dff.cc:219:make_patterns_logic$8417, arst={ }, srst={ }
  93 cells in clk=\clk_i, en=$abc$247145$abc$193161$auto$opt_dff.cc:219:make_patterns_logic$6432, arst={ }, srst={ }
  88 cells in clk=\clk_i, en=$abc$247250$abc$193057$auto$opt_dff.cc:219:make_patterns_logic$6402, arst={ }, srst={ }
  93 cells in clk=\clk_i, en=$abc$247354$abc$192951$auto$opt_dff.cc:219:make_patterns_logic$6372, arst={ }, srst={ }
  150 cells in clk=\clk_i, en=$abc$247461$abc$192804$auto$opt_dff.cc:219:make_patterns_logic$6342, arst={ }, srst={ }
  89 cells in clk=\clk_i, en=$abc$247638$abc$192699$auto$opt_dff.cc:219:make_patterns_logic$6102, arst={ }, srst={ }
  134 cells in clk=\clk_i, en=$abc$247744$abc$192539$auto$opt_dff.cc:219:make_patterns_logic$6312, arst={ }, srst={ }
  162 cells in clk=\clk_i, en=$abc$247908$abc$171850$auto$opt_dff.cc:219:make_patterns_logic$7930, arst={ }, srst={ }
  105 cells in clk=\clk_i, en=$abc$248132$abc$171713$auto$opt_dff.cc:219:make_patterns_logic$7960, arst={ }, srst={ }
  103 cells in clk=\clk_i, en=$abc$248269$abc$171579$auto$opt_dff.cc:219:make_patterns_logic$7990, arst={ }, srst={ }
  110 cells in clk=\clk_i, en=$abc$248405$abc$171439$auto$opt_dff.cc:219:make_patterns_logic$8020, arst={ }, srst={ }
  73 cells in clk=\clk_i, en=$abc$248548$abc$162110$auto$opt_dff.cc:219:make_patterns_logic$8067, arst={ }, srst={ }
  104 cells in clk=\clk_i, en=$abc$248653$abc$171303$auto$opt_dff.cc:219:make_patterns_logic$8050, arst={ }, srst={ }
  71 cells in clk=\clk_i, en=$abc$248789$abc$171204$auto$opt_dff.cc:219:make_patterns_logic$8082, arst={ }, srst={ }
  161 cells in clk=\clk_i, en=$abc$248889$abc$203014$auto$opt_dff.cc:219:make_patterns_logic$7660, arst={ }, srst={ }
  101 cells in clk=\clk_i, en=$abc$249058$abc$202879$auto$opt_dff.cc:219:make_patterns_logic$7690, arst={ }, srst={ }
  106 cells in clk=\clk_i, en=$abc$249167$abc$202740$auto$opt_dff.cc:219:make_patterns_logic$7720, arst={ }, srst={ }
  102 cells in clk=\clk_i, en=$abc$249282$abc$202605$auto$opt_dff.cc:219:make_patterns_logic$7750, arst={ }, srst={ }
  106 cells in clk=\clk_i, en=$abc$249391$abc$202471$auto$opt_dff.cc:219:make_patterns_logic$7780, arst={ }, srst={ }
  164 cells in clk=\clk_i, en=$abc$249503$abc$202325$auto$opt_dff.cc:219:make_patterns_logic$7136, arst={ }, srst={ }
  163 cells in clk=\clk_i, en=$abc$249693$abc$202166$auto$opt_dff.cc:219:make_patterns_logic$7106, arst={ }, srst={ }
  102 cells in clk=\clk_i, en=$abc$249867$abc$202062$auto$opt_dff.cc:219:make_patterns_logic$7076, arst={ }, srst={ }
  71 cells in clk=\clk_i, en=$abc$249972$abc$201960$auto$opt_dff.cc:219:make_patterns_logic$7046, arst={ }, srst={ }
  101 cells in clk=\clk_i, en=$abc$250075$abc$162007$auto$opt_dff.cc:219:make_patterns_logic$8035, arst={ }, srst={ }
  104 cells in clk=\clk_i, en=$abc$250177$abc$161904$auto$opt_dff.cc:219:make_patterns_logic$8005, arst={ }, srst={ }
  71 cells in clk=\clk_i, en=$abc$250279$abc$171101$auto$opt_dff.cc:219:make_patterns_logic$6896, arst={ }, srst={ }
  163 cells in clk=\clk_i, en=$abc$250383$abc$170933$auto$opt_dff.cc:219:make_patterns_logic$6866, arst={ }, srst={ }
  1187 cells in clk=\clk_i, en=$abc$240509$abc$192019$auto$opt_dff.cc:194:make_patterns_logic$6785, arst={ }, srst={ }
  130 cells in clk=\clk_i, en=$abc$250550$abc$195062$auto$opt_dff.cc:219:make_patterns_logic$8861, arst={ }, srst={ }
  104 cells in clk=\clk_i, en=$abc$253001$abc$194958$auto$opt_dff.cc:219:make_patterns_logic$8829, arst={ }, srst={ }
  103 cells in clk=\clk_i, en=$abc$253105$abc$194854$auto$opt_dff.cc:219:make_patterns_logic$8799, arst={ }, srst={ }
  103 cells in clk=\clk_i, en=$abc$253209$abc$194751$auto$opt_dff.cc:219:make_patterns_logic$8769, arst={ }, srst={ }
  103 cells in clk=\clk_i, en=$abc$253311$abc$194647$auto$opt_dff.cc:219:make_patterns_logic$8739, arst={ }, srst={ }
  171 cells in clk=\clk_i, en=$abc$253415$abc$194506$auto$opt_dff.cc:219:make_patterns_logic$8709, arst={ }, srst={ }
  169 cells in clk=\clk_i, en=$abc$253603$abc$194351$auto$opt_dff.cc:219:make_patterns_logic$8679, arst={ }, srst={ }
  77 cells in clk=\clk_i, en=$abc$253770$abc$161798$auto$opt_dff.cc:219:make_patterns_logic$6192, arst={ }, srst={ }
  102 cells in clk=\clk_i, en=$abc$253878$abc$161592$auto$opt_dff.cc:219:make_patterns_logic$7945, arst={ }, srst={ }
  73 cells in clk=\clk_i, en=$abc$253981$abc$184378$auto$opt_dff.cc:219:make_patterns_logic$6147, arst={ }, srst={ }
  68 cells in clk=\clk_i, en=$abc$254087$abc$184276$auto$opt_dff.cc:219:make_patterns_logic$6117, arst={ }, srst={ }
  73 cells in clk=\clk_i, en=$abc$254188$abc$184175$auto$opt_dff.cc:219:make_patterns_logic$6087, arst={ }, srst={ }
  69 cells in clk=\clk_i, en=$abc$254291$abc$184071$auto$opt_dff.cc:219:make_patterns_logic$6057, arst={ }, srst={ }
  687 cells in clk=\clk_i, en=$abc$254393$abc$183906$auto$opt_dff.cc:219:make_patterns_logic$6035, arst={ }, srst={ }
  8 cells in clk=\clk_i, en=$abc$255110$abc$183864$auto$opt_dff.cc:219:make_patterns_logic$6026, arst={ }, srst={ }
  25 cells in clk=\clk_i, en=$abc$262356$abc$183676$auto$opt_dff.cc:194:make_patterns_logic$8386, arst={ }, srst={ }
  676 cells in clk=\clk_i, en=$abc$262383$abc$183478$auto$opt_dff.cc:219:make_patterns_logic$8424, arst={ }, srst={ }
  104 cells in clk=\clk_i, en=$abc$263065$abc$183309$auto$opt_dff.cc:219:make_patterns_logic$8454, arst={ }, srst={ }
  102 cells in clk=\clk_i, en=$abc$263205$abc$183206$auto$opt_dff.cc:219:make_patterns_logic$8484, arst={ }, srst={ }
  105 cells in clk=\clk_i, en=$abc$263307$abc$183101$auto$opt_dff.cc:219:make_patterns_logic$8514, arst={ }, srst={ }
  100 cells in clk=\clk_i, en=$abc$263415$abc$182995$auto$opt_dff.cc:219:make_patterns_logic$8544, arst={ }, srst={ }
  101 cells in clk=\clk_i, en=$abc$263518$abc$182889$auto$opt_dff.cc:219:make_patterns_logic$8574, arst={ }, srst={ }
  103 cells in clk=\clk_i, en=$abc$263620$abc$182786$auto$opt_dff.cc:219:make_patterns_logic$8604, arst={ }, srst={ }
  101 cells in clk=\clk_i, en=$abc$263724$abc$182681$auto$opt_dff.cc:219:make_patterns_logic$8634, arst={ }, srst={ }
  101 cells in clk=\clk_i, en=$abc$263826$abc$182577$auto$opt_dff.cc:219:make_patterns_logic$8664, arst={ }, srst={ }
  653 cells in clk=\clk_i, en=$abc$263927$abc$170734$auto$opt_dff.cc:219:make_patterns_logic$6836, arst={ }, srst={ }
  23 cells in clk=\clk_i, en=$abc$265309$abc$170502$auto$opt_dff.cc:194:make_patterns_logic$6798, arst={ }, srst={ }
  167 cells in clk=\clk_i, en=$abc$265334$abc$161408$auto$opt_dff.cc:219:make_patterns_logic$7915, arst={ }, srst={ }
  154 cells in clk=\clk_i, en=$abc$265502$abc$161241$auto$opt_dff.cc:219:make_patterns_logic$7885, arst={ }, srst={ }
  159 cells in clk=\clk_i, en=$abc$265671$abc$182403$auto$opt_dff.cc:219:make_patterns_logic$8694, arst={ }, srst={ }
  162 cells in clk=\clk_i, en=$abc$265838$abc$182214$auto$opt_dff.cc:219:make_patterns_logic$8724, arst={ }, srst={ }
  105 cells in clk=\clk_i, en=$abc$266009$abc$182106$auto$opt_dff.cc:219:make_patterns_logic$8754, arst={ }, srst={ }
  102 cells in clk=\clk_i, en=$abc$266115$abc$182004$auto$opt_dff.cc:219:make_patterns_logic$8784, arst={ }, srst={ }
  101 cells in clk=\clk_i, en=$abc$266217$abc$181898$auto$opt_dff.cc:219:make_patterns_logic$8814, arst={ }, srst={ }
  67 cells in clk=\clk_i, en=$abc$268695$abc$174551$auto$opt_dff.cc:219:make_patterns_logic$7273, arst={ }, srst={ }
  69 cells in clk=\clk_i, en=$abc$268795$abc$174449$auto$opt_dff.cc:219:make_patterns_logic$7241, arst={ }, srst={ }
  73 cells in clk=\clk_i, en=$abc$268897$abc$174347$auto$opt_dff.cc:219:make_patterns_logic$7211, arst={ }, srst={ }
  74 cells in clk=\clk_i, en=$abc$269003$abc$174241$auto$opt_dff.cc:219:make_patterns_logic$7181, arst={ }, srst={ }
  71 cells in clk=\clk_i, en=$abc$269110$abc$174136$auto$opt_dff.cc:219:make_patterns_logic$7151, arst={ }, srst={ }
  129 cells in clk=\clk_i, en=$abc$269214$abc$173949$auto$opt_dff.cc:219:make_patterns_logic$7121, arst={ }, srst={ }
  129 cells in clk=\clk_i, en=$abc$269356$abc$173783$auto$opt_dff.cc:219:make_patterns_logic$7091, arst={ }, srst={ }
  71 cells in clk=\clk_i, en=$abc$269511$abc$173679$auto$opt_dff.cc:219:make_patterns_logic$7061, arst={ }, srst={ }
  72 cells in clk=\clk_i, en=$abc$269618$abc$173573$auto$opt_dff.cc:219:make_patterns_logic$7031, arst={ }, srst={ }
  73 cells in clk=\clk_i, en=$abc$269722$abc$173472$auto$opt_dff.cc:219:make_patterns_logic$7001, arst={ }, srst={ }
  69 cells in clk=\clk_i, en=$abc$269827$abc$173369$auto$opt_dff.cc:219:make_patterns_logic$6971, arst={ }, srst={ }
  85 cells in clk=\clk_i, en=$abc$269929$abc$173268$auto$opt_dff.cc:219:make_patterns_logic$6941, arst={ }, srst={ }
  85 cells in clk=\clk_i, en=$abc$244888$abc$181275$auto$opt_dff.cc:219:make_patterns_logic$6462, arst={ }, srst={ }
  69 cells in clk=\clk_i, en=$abc$270033$abc$173166$auto$opt_dff.cc:219:make_patterns_logic$6911, arst={ }, srst={ }
  844 cells in clk=\clk_i, en=$abc$270137$abc$169725$auto$opt_dff.cc:194:make_patterns_logic$8373, arst={ }, srst={ }
  8155 cells in clk=\clk_i, en=$abc$270436$abc$163921$auto$opt_dff.cc:219:make_patterns_logic$8099, arst={ }, srst={ }
  72 cells in clk=\clk_i, en=$abc$244644$abc$203384$auto$opt_dff.cc:219:make_patterns_logic$7288, arst={ }, srst={ }
  81 cells in clk=\clk_i, en=$abc$281037$abc$183710$auto$opt_dff.cc:219:make_patterns_logic$6162, arst={ }, srst={ }
  100 cells in clk=\clk_i, en=$abc$281141$abc$201820$auto$opt_dff.cc:219:make_patterns_logic$7016, arst={ }, srst={ }
  83 cells in clk=\clk_i, en=$abc$281246$abc$170399$auto$opt_dff.cc:219:make_patterns_logic$7196, arst={ }, srst={ }
  36 cells in clk=\clk_i, en=$abc$281349$abc$183813$auto$opt_dff.cc:219:make_patterns_logic$5998, arst={ }, srst={ }
  70 cells in clk=\clk_i, en=$abc$281383$abc$161035$auto$opt_dff.cc:219:make_patterns_logic$7825, arst={ }, srst={ }
  83 cells in clk=\clk_i, en=$abc$281486$abc$160930$auto$opt_dff.cc:219:make_patterns_logic$7795, arst={ }, srst={ }
  8638 cells in clk=\clk_i, en=$abc$281589$abc$188207$auto$opt_dff.cc:219:make_patterns_logic$6511, arst={ }, srst={ }
  97 cells in clk=\clk_i, en=$abc$289988$abc$172498$auto$opt_dff.cc:219:make_patterns_logic$7810, arst={ }, srst={ }
  76 cells in clk=\clk_i, en=$abc$290117$abc$160822$auto$opt_dff.cc:219:make_patterns_logic$7765, arst={ }, srst={ }
  91 cells in clk=\clk_i, en=$abc$290226$abc$160717$auto$opt_dff.cc:219:make_patterns_logic$7735, arst={ }, srst={ }
  98 cells in clk=\clk_i, en=$abc$290330$abc$161695$auto$opt_dff.cc:219:make_patterns_logic$7975, arst={ }, srst={ }
  105 cells in clk=\clk_i, en=$abc$290434$abc$160611$auto$opt_dff.cc:219:make_patterns_logic$7705, arst={ }, srst={ }
  36 cells in clk=\clk_i, en=$abc$290539$abc$193267$auto$opt_dff.cc:219:make_patterns_logic$8380, arst={ }, srst={ }
  2221 cells in clk=\clk_i, en=$abc$290573$abc$185750$auto$opt_dff.cc:219:make_patterns_logic$6530, arst={ }, srst={ }
  8847 cells in clk=\clk_i, en=$abc$292995$abc$197492$auto$opt_dff.cc:219:make_patterns_logic$8893, arst={ }, srst={ }
  6695 cells in clk=\clk_i, en={ }, arst={ }, srst={ }
  143 cells in clk=\clk_i, en=$abc$238634$abc$184891$auto$opt_dff.cc:219:make_patterns_logic$6297, arst={ }, srst={ }
  2006 cells in clk=\clk_i, en=$abc$250681$abc$195162$auto$opt_dff.cc:219:make_patterns_logic$8912, arst={ }, srst={ }
  7712 cells in clk=\clk_i, en=$abc$301523$abc$177372$auto$opt_dff.cc:219:make_patterns_logic$7305, arst={ }, srst={ }
  666 cells in clk=\clk_i, en=$abc$264613$abc$170535$auto$opt_dff.cc:219:make_patterns_logic$6042, arst={ }, srst={ }
  1820 cells in clk=\clk_i, en=$abc$278582$abc$162244$auto$opt_dff.cc:219:make_patterns_logic$8118, arst={ }, srst={ }
  2541 cells in clk=\clk_i, en=$abc$266319$abc$174651$auto$opt_dff.cc:219:make_patterns_logic$7324, arst={ }, srst={ }
  1251 cells in clk=\clk_i, en=$abc$309236$abc$231801$auto$opt_dff.cc:194:make_patterns_logic$6001, arst={ }, srst={ }

3.117.2. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$236129$abc$185649$auto$opt_dff.cc:219:make_patterns_logic$6479
Extracted 132 gates and 203 wires to a netlist network with 71 inputs and 65 outputs.

3.117.2.1. Executing ABC.

3.117.3. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$236261$abc$184789$auto$opt_dff.cc:219:make_patterns_logic$6267
Extracted 98 gates and 166 wires to a netlist network with 68 inputs and 36 outputs.

3.117.3.1. Executing ABC.

3.117.4. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$236365$abc$160507$auto$opt_dff.cc:219:make_patterns_logic$7675
Extracted 103 gates and 176 wires to a netlist network with 73 inputs and 37 outputs.

3.117.4.1. Executing ABC.

3.117.5. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$236468$abc$160339$auto$opt_dff.cc:219:make_patterns_logic$7645
Extracted 169 gates and 276 wires to a netlist network with 107 inputs and 100 outputs.

3.117.5.1. Executing ABC.

3.117.6. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$236636$abc$160206$auto$opt_dff.cc:219:make_patterns_logic$8876
Extracted 134 gates and 206 wires to a netlist network with 72 inputs and 69 outputs.

3.117.6.1. Executing ABC.

3.117.7. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$236771$abc$184484$auto$opt_dff.cc:219:make_patterns_logic$6177
Extracted 96 gates and 162 wires to a netlist network with 66 inputs and 35 outputs.

3.117.7.1. Executing ABC.

3.117.8. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$236872$abc$159968$auto$opt_dff.cc:219:make_patterns_logic$7614
Extracted 315 gates and 483 wires to a netlist network with 168 inputs and 21 outputs.

3.117.8.1. Executing ABC.

3.117.9. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$237033$abc$160010$auto$opt_dff.cc:219:make_patterns_logic$7623
Extracted 808 gates and 1052 wires to a netlist network with 244 inputs and 131 outputs.

3.117.9.1. Executing ABC.

3.117.10. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$237845$abc$184687$auto$opt_dff.cc:219:make_patterns_logic$6237
Extracted 95 gates and 161 wires to a netlist network with 66 inputs and 33 outputs.

3.117.10.1. Executing ABC.

3.117.11. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$237947$abc$184585$auto$opt_dff.cc:219:make_patterns_logic$6207
Extracted 97 gates and 164 wires to a netlist network with 67 inputs and 35 outputs.

3.117.11.1. Executing ABC.

3.117.12. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$238050$abc$185545$auto$opt_dff.cc:219:make_patterns_logic$6447
Extracted 97 gates and 164 wires to a netlist network with 67 inputs and 36 outputs.

3.117.12.1. Executing ABC.

3.117.13. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$238154$abc$185443$auto$opt_dff.cc:219:make_patterns_logic$6417
Extracted 98 gates and 167 wires to a netlist network with 69 inputs and 36 outputs.

3.117.13.1. Executing ABC.

3.117.14. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$238262$abc$185341$auto$opt_dff.cc:219:make_patterns_logic$6387
Extracted 96 gates and 163 wires to a netlist network with 67 inputs and 35 outputs.

3.117.14.1. Executing ABC.

3.117.15. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$238365$abc$185239$auto$opt_dff.cc:219:make_patterns_logic$6357
Extracted 95 gates and 161 wires to a netlist network with 66 inputs and 34 outputs.

3.117.15.1. Executing ABC.

3.117.16. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$238469$abc$185056$auto$opt_dff.cc:219:make_patterns_logic$6327
Extracted 159 gates and 244 wires to a netlist network with 85 inputs and 87 outputs.

3.117.16.1. Executing ABC.

3.117.17. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$238829$abc$193318$auto$opt_dff.cc:219:make_patterns_logic$8408
Extracted 9 gates and 17 wires to a netlist network with 8 inputs and 4 outputs.

3.117.17.1. Executing ABC.

3.117.18. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$239441$abc$203351$auto$opt_dff.cc:194:make_patterns_logic$7592
Extracted 20 gates and 38 wires to a netlist network with 18 inputs and 16 outputs.

3.117.18.1. Executing ABC.

3.117.19. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$239464$abc$194249$auto$opt_dff.cc:219:make_patterns_logic$8649
Extracted 104 gates and 178 wires to a netlist network with 74 inputs and 36 outputs.

3.117.19.1. Executing ABC.

3.117.20. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$239568$abc$194146$auto$opt_dff.cc:219:make_patterns_logic$8619
Extracted 105 gates and 180 wires to a netlist network with 75 inputs and 36 outputs.

3.117.20.1. Executing ABC.

3.117.21. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$239675$abc$194043$auto$opt_dff.cc:219:make_patterns_logic$8589
Extracted 104 gates and 178 wires to a netlist network with 74 inputs and 36 outputs.

3.117.21.1. Executing ABC.

3.117.22. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$239779$abc$193940$auto$opt_dff.cc:219:make_patterns_logic$8559
Extracted 103 gates and 177 wires to a netlist network with 74 inputs and 35 outputs.

3.117.22.1. Executing ABC.

3.117.23. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$239883$abc$193839$auto$opt_dff.cc:219:make_patterns_logic$8529
Extracted 102 gates and 175 wires to a netlist network with 73 inputs and 36 outputs.

3.117.23.1. Executing ABC.

3.117.24. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$239985$abc$193732$auto$opt_dff.cc:219:make_patterns_logic$8499
Extracted 105 gates and 180 wires to a netlist network with 75 inputs and 37 outputs.

3.117.24.1. Executing ABC.

3.117.25. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$240090$abc$192436$auto$opt_dff.cc:219:make_patterns_logic$6282
Extracted 90 gates and 150 wires to a netlist network with 60 inputs and 37 outputs.

3.117.25.1. Executing ABC.

3.117.26. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$240194$abc$192330$auto$opt_dff.cc:219:make_patterns_logic$6252
Extracted 91 gates and 153 wires to a netlist network with 62 inputs and 35 outputs.

3.117.26.1. Executing ABC.

3.117.27. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$240299$abc$192226$auto$opt_dff.cc:219:make_patterns_logic$7256
Extracted 105 gates and 179 wires to a netlist network with 74 inputs and 37 outputs.

3.117.27.1. Executing ABC.

3.117.28. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$240403$abc$192117$auto$opt_dff.cc:219:make_patterns_logic$6222
Extracted 93 gates and 155 wires to a netlist network with 62 inputs and 37 outputs.

3.117.28.1. Executing ABC.

3.117.29. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$241146$abc$203596$auto$opt_dff.cc:219:make_patterns_logic$7586
Extracted 34 gates and 41 wires to a netlist network with 7 inputs and 12 outputs.

3.117.29.1. Executing ABC.

3.117.30. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$241178$abc$203488$auto$opt_dff.cc:219:make_patterns_logic$6132
Extracted 89 gates and 148 wires to a netlist network with 59 inputs and 37 outputs.

3.117.30.1. Executing ABC.

3.117.31. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$241284$abc$201716$auto$opt_dff.cc:219:make_patterns_logic$6986
Extracted 102 gates and 175 wires to a netlist network with 73 inputs and 34 outputs.

3.117.31.1. Executing ABC.

3.117.32. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$241387$abc$201611$auto$opt_dff.cc:219:make_patterns_logic$6956
Extracted 103 gates and 177 wires to a netlist network with 74 inputs and 34 outputs.

3.117.32.1. Executing ABC.

3.117.33. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$241491$abc$201513$auto$opt_dff.cc:194:make_patterns_logic$5991
Extracted 653 gates and 1081 wires to a netlist network with 428 inputs and 34 outputs.

3.117.33.1. Executing ABC.

3.117.34. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$241589$abc$201411$auto$opt_dff.cc:219:make_patterns_logic$7166
Extracted 102 gates and 175 wires to a netlist network with 73 inputs and 34 outputs.

3.117.34.1. Executing ABC.

3.117.35. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$241692$abc$201306$auto$opt_dff.cc:219:make_patterns_logic$6926
Extracted 104 gates and 179 wires to a netlist network with 75 inputs and 35 outputs.

3.117.35.1. Executing ABC.

3.117.36. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$241797$abc$161138$auto$opt_dff.cc:219:make_patterns_logic$7855
Extracted 104 gates and 178 wires to a netlist network with 74 inputs and 36 outputs.

3.117.36.1. Executing ABC.

3.117.37. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$241902$abc$203153$auto$opt_dff.cc:219:make_patterns_logic$7630
Extracted 803 gates and 1037 wires to a netlist network with 234 inputs and 137 outputs.

3.117.37.1. Executing ABC.

3.117.38. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$242709$abc$181796$auto$opt_dff.cc:219:make_patterns_logic$8844
Extracted 101 gates and 173 wires to a netlist network with 72 inputs and 35 outputs.

3.117.38.1. Executing ABC.

3.117.39. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$242812$abc$173060$auto$opt_dff.cc:219:make_patterns_logic$6881
Extracted 104 gates and 178 wires to a netlist network with 74 inputs and 36 outputs.

3.117.39.1. Executing ABC.

3.117.40. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$242917$abc$172893$auto$opt_dff.cc:219:make_patterns_logic$6851
Extracted 166 gates and 271 wires to a netlist network with 105 inputs and 98 outputs.

3.117.40.1. Executing ABC.

3.117.41. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$243056$abc$181627$auto$opt_dff.cc:219:make_patterns_logic$6072
Extracted 79 gates and 129 wires to a netlist network with 50 inputs and 42 outputs.

3.117.41.1. Executing ABC.

3.117.42. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$243163$abc$181490$auto$opt_dff.cc:219:make_patterns_logic$6494
Extracted 133 gates and 204 wires to a netlist network with 71 inputs and 68 outputs.

3.117.42.1. Executing ABC.

3.117.43. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$243298$abc$172728$auto$opt_dff.cc:219:make_patterns_logic$6829
Extracted 767 gates and 1019 wires to a netlist network with 252 inputs and 103 outputs.

3.117.43.1. Executing ABC.

3.117.44. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$244092$abc$172684$auto$opt_dff.cc:219:make_patterns_logic$6820
Extracted 10 gates and 18 wires to a netlist network with 8 inputs and 4 outputs.

3.117.44.1. Executing ABC.

3.117.45. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$244777$abc$201955$auto$opt_dff.cc:194:make_patterns_logic$6007
Extracted 3 gates and 6 wires to a netlist network with 3 inputs and 2 outputs.

3.117.45.1. Executing ABC.

3.117.46. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$244782$abc$181383$auto$opt_dff.cc:219:make_patterns_logic$7226
Extracted 104 gates and 179 wires to a netlist network with 75 inputs and 35 outputs.

3.117.46.1. Executing ABC.

3.117.47. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$244996$abc$172633$auto$opt_dff.cc:219:make_patterns_logic$6792
Extracted 34 gates and 41 wires to a netlist network with 7 inputs and 12 outputs.

3.117.47.1. Executing ABC.

3.117.48. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$245028$abc$172358$auto$opt_dff.cc:219:make_patterns_logic$7840
Extracted 104 gates and 178 wires to a netlist network with 74 inputs and 67 outputs.

3.117.48.1. Executing ABC.

3.117.49. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$245167$abc$181177$auto$opt_dff.cc:194:make_patterns_logic$7579
Extracted 799 gates and 1427 wires to a netlist network with 628 inputs and 603 outputs.

3.117.49.1. Executing ABC.

3.117.50. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$245795$abc$172223$auto$opt_dff.cc:219:make_patterns_logic$7870
Extracted 103 gates and 177 wires to a netlist network with 74 inputs and 67 outputs.

3.117.50.1. Executing ABC.

3.117.51. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$245930$abc$172031$auto$opt_dff.cc:219:make_patterns_logic$7900
Extracted 173 gates and 259 wires to a netlist network with 86 inputs and 107 outputs.

3.117.51.1. Executing ABC.

3.117.52. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$246132$abc$193628$auto$opt_dff.cc:219:make_patterns_logic$8469
Extracted 103 gates and 177 wires to a netlist network with 74 inputs and 35 outputs.

3.117.52.1. Executing ABC.

3.117.53. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$246236$abc$193524$auto$opt_dff.cc:219:make_patterns_logic$8439
Extracted 105 gates and 181 wires to a netlist network with 76 inputs and 69 outputs.

3.117.53.1. Executing ABC.

3.117.54. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$238800$abc$201925$auto$opt_dff.cc:194:make_patterns_logic$6004
Extracted 22 gates and 41 wires to a netlist network with 19 inputs and 20 outputs.

3.117.54.1. Executing ABC.

3.117.55. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$246374$abc$193359$auto$opt_dff.cc:219:make_patterns_logic$8417
Extracted 764 gates and 988 wires to a netlist network with 224 inputs and 102 outputs.

3.117.55.1. Executing ABC.

3.117.56. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$247145$abc$193161$auto$opt_dff.cc:219:make_patterns_logic$6432
Extracted 93 gates and 156 wires to a netlist network with 63 inputs and 36 outputs.

3.117.56.1. Executing ABC.

3.117.57. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$247250$abc$193057$auto$opt_dff.cc:219:make_patterns_logic$6402
Extracted 88 gates and 147 wires to a netlist network with 59 inputs and 35 outputs.

3.117.57.1. Executing ABC.

3.117.58. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$247354$abc$192951$auto$opt_dff.cc:219:make_patterns_logic$6372
Extracted 93 gates and 157 wires to a netlist network with 64 inputs and 36 outputs.

3.117.58.1. Executing ABC.

3.117.59. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$247461$abc$192804$auto$opt_dff.cc:219:make_patterns_logic$6342
Extracted 150 gates and 250 wires to a netlist network with 100 inputs and 94 outputs.

3.117.59.1. Executing ABC.

3.117.60. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$247638$abc$192699$auto$opt_dff.cc:219:make_patterns_logic$6102
Extracted 89 gates and 149 wires to a netlist network with 60 inputs and 37 outputs.

3.117.60.1. Executing ABC.

3.117.61. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$247744$abc$192539$auto$opt_dff.cc:219:make_patterns_logic$6312
Extracted 134 gates and 184 wires to a netlist network with 50 inputs and 67 outputs.

3.117.61.1. Executing ABC.

3.117.62. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$247908$abc$171850$auto$opt_dff.cc:219:make_patterns_logic$7930
Extracted 162 gates and 253 wires to a netlist network with 91 inputs and 115 outputs.

3.117.62.1. Executing ABC.

3.117.63. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$248132$abc$171713$auto$opt_dff.cc:219:make_patterns_logic$7960
Extracted 105 gates and 180 wires to a netlist network with 75 inputs and 68 outputs.

3.117.63.1. Executing ABC.

3.117.64. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$248269$abc$171579$auto$opt_dff.cc:219:make_patterns_logic$7990
Extracted 103 gates and 176 wires to a netlist network with 73 inputs and 68 outputs.

3.117.64.1. Executing ABC.

3.117.65. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$248405$abc$171439$auto$opt_dff.cc:219:make_patterns_logic$8020
Extracted 110 gates and 190 wires to a netlist network with 80 inputs and 72 outputs.

3.117.65.1. Executing ABC.

3.117.66. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$248548$abc$162110$auto$opt_dff.cc:219:make_patterns_logic$8067
Extracted 73 gates and 113 wires to a netlist network with 40 inputs and 37 outputs.

3.117.66.1. Executing ABC.

3.117.67. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$248653$abc$171303$auto$opt_dff.cc:219:make_patterns_logic$8050
Extracted 104 gates and 178 wires to a netlist network with 74 inputs and 67 outputs.

3.117.67.1. Executing ABC.

3.117.68. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$248789$abc$171204$auto$opt_dff.cc:219:make_patterns_logic$8082
Extracted 71 gates and 112 wires to a netlist network with 41 inputs and 38 outputs.

3.117.68.1. Executing ABC.

3.117.69. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$248889$abc$203014$auto$opt_dff.cc:219:make_patterns_logic$7660
Extracted 161 gates and 265 wires to a netlist network with 104 inputs and 98 outputs.

3.117.69.1. Executing ABC.

3.117.70. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$249058$abc$202879$auto$opt_dff.cc:219:make_patterns_logic$7690
Extracted 101 gates and 174 wires to a netlist network with 73 inputs and 40 outputs.

3.117.70.1. Executing ABC.

3.117.71. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$249167$abc$202740$auto$opt_dff.cc:219:make_patterns_logic$7720
Extracted 106 gates and 184 wires to a netlist network with 78 inputs and 43 outputs.

3.117.71.1. Executing ABC.

3.117.72. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$249282$abc$202605$auto$opt_dff.cc:219:make_patterns_logic$7750
Extracted 102 gates and 175 wires to a netlist network with 73 inputs and 41 outputs.

3.117.72.1. Executing ABC.

3.117.73. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$249391$abc$202471$auto$opt_dff.cc:219:make_patterns_logic$7780
Extracted 106 gates and 181 wires to a netlist network with 75 inputs and 43 outputs.

3.117.73.1. Executing ABC.

3.117.74. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$249503$abc$202325$auto$opt_dff.cc:219:make_patterns_logic$7136
Extracted 164 gates and 257 wires to a netlist network with 93 inputs and 88 outputs.

3.117.74.1. Executing ABC.

3.117.75. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$249693$abc$202166$auto$opt_dff.cc:219:make_patterns_logic$7106
Extracted 163 gates and 240 wires to a netlist network with 77 inputs and 75 outputs.

3.117.75.1. Executing ABC.

3.117.76. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$249867$abc$202062$auto$opt_dff.cc:219:make_patterns_logic$7076
Extracted 102 gates and 175 wires to a netlist network with 73 inputs and 36 outputs.

3.117.76.1. Executing ABC.

3.117.77. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$249972$abc$201960$auto$opt_dff.cc:219:make_patterns_logic$7046
Extracted 71 gates and 111 wires to a netlist network with 40 inputs and 35 outputs.

3.117.77.1. Executing ABC.

3.117.78. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$250075$abc$162007$auto$opt_dff.cc:219:make_patterns_logic$8035
Extracted 101 gates and 173 wires to a netlist network with 72 inputs and 33 outputs.

3.117.78.1. Executing ABC.

3.117.79. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$250177$abc$161904$auto$opt_dff.cc:219:make_patterns_logic$8005
Extracted 104 gates and 179 wires to a netlist network with 75 inputs and 36 outputs.

3.117.79.1. Executing ABC.

3.117.80. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$250279$abc$171101$auto$opt_dff.cc:219:make_patterns_logic$6896
Extracted 71 gates and 112 wires to a netlist network with 41 inputs and 36 outputs.

3.117.80.1. Executing ABC.

3.117.81. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$250383$abc$170933$auto$opt_dff.cc:219:make_patterns_logic$6866
Extracted 163 gates and 266 wires to a netlist network with 103 inputs and 97 outputs.

3.117.81.1. Executing ABC.

3.117.82. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$240509$abc$192019$auto$opt_dff.cc:194:make_patterns_logic$6785
Extracted 1187 gates and 2050 wires to a netlist network with 863 inputs and 604 outputs.

3.117.82.1. Executing ABC.

3.117.83. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$250550$abc$195062$auto$opt_dff.cc:219:make_patterns_logic$8861
Extracted 130 gates and 199 wires to a netlist network with 69 inputs and 65 outputs.

3.117.83.1. Executing ABC.

3.117.84. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$253001$abc$194958$auto$opt_dff.cc:219:make_patterns_logic$8829
Extracted 104 gates and 178 wires to a netlist network with 74 inputs and 36 outputs.

3.117.84.1. Executing ABC.

3.117.85. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$253105$abc$194854$auto$opt_dff.cc:219:make_patterns_logic$8799
Extracted 103 gates and 177 wires to a netlist network with 74 inputs and 35 outputs.

3.117.85.1. Executing ABC.

3.117.86. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$253209$abc$194751$auto$opt_dff.cc:219:make_patterns_logic$8769
Extracted 103 gates and 177 wires to a netlist network with 74 inputs and 36 outputs.

3.117.86.1. Executing ABC.

3.117.87. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$253311$abc$194647$auto$opt_dff.cc:219:make_patterns_logic$8739
Extracted 103 gates and 177 wires to a netlist network with 74 inputs and 35 outputs.

3.117.87.1. Executing ABC.

3.117.88. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$253415$abc$194506$auto$opt_dff.cc:219:make_patterns_logic$8709
Extracted 171 gates and 276 wires to a netlist network with 105 inputs and 92 outputs.

3.117.88.1. Executing ABC.

3.117.89. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$253603$abc$194351$auto$opt_dff.cc:219:make_patterns_logic$8679
Extracted 169 gates and 257 wires to a netlist network with 88 inputs and 78 outputs.

3.117.89.1. Executing ABC.

3.117.90. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$253770$abc$161798$auto$opt_dff.cc:219:make_patterns_logic$6192
Extracted 77 gates and 122 wires to a netlist network with 45 inputs and 39 outputs.

3.117.90.1. Executing ABC.

3.117.91. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$253878$abc$161592$auto$opt_dff.cc:219:make_patterns_logic$7945
Extracted 102 gates and 175 wires to a netlist network with 73 inputs and 34 outputs.

3.117.91.1. Executing ABC.

3.117.92. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$253981$abc$184378$auto$opt_dff.cc:219:make_patterns_logic$6147
Extracted 73 gates and 116 wires to a netlist network with 43 inputs and 37 outputs.

3.117.92.1. Executing ABC.

3.117.93. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$254087$abc$184276$auto$opt_dff.cc:219:make_patterns_logic$6117
Extracted 68 gates and 106 wires to a netlist network with 38 inputs and 33 outputs.

3.117.93.1. Executing ABC.

3.117.94. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$254188$abc$184175$auto$opt_dff.cc:219:make_patterns_logic$6087
Extracted 73 gates and 113 wires to a netlist network with 40 inputs and 37 outputs.

3.117.94.1. Executing ABC.

3.117.95. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$254291$abc$184071$auto$opt_dff.cc:219:make_patterns_logic$6057
Extracted 69 gates and 108 wires to a netlist network with 39 inputs and 33 outputs.

3.117.95.1. Executing ABC.

3.117.96. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$254393$abc$183906$auto$opt_dff.cc:219:make_patterns_logic$6035
Extracted 687 gates and 916 wires to a netlist network with 229 inputs and 101 outputs.

3.117.96.1. Executing ABC.

3.117.97. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$255110$abc$183864$auto$opt_dff.cc:219:make_patterns_logic$6026
Extracted 8 gates and 15 wires to a netlist network with 7 inputs and 4 outputs.

3.117.97.1. Executing ABC.

3.117.98. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$262356$abc$183676$auto$opt_dff.cc:194:make_patterns_logic$8386
Extracted 25 gates and 45 wires to a netlist network with 20 inputs and 19 outputs.

3.117.98.1. Executing ABC.

3.117.99. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$262383$abc$183478$auto$opt_dff.cc:219:make_patterns_logic$8424
Extracted 676 gates and 886 wires to a netlist network with 210 inputs and 119 outputs.

3.117.99.1. Executing ABC.

3.117.100. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$263065$abc$183309$auto$opt_dff.cc:219:make_patterns_logic$8454
Extracted 104 gates and 179 wires to a netlist network with 75 inputs and 67 outputs.

3.117.100.1. Executing ABC.

3.117.101. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$263205$abc$183206$auto$opt_dff.cc:219:make_patterns_logic$8484
Extracted 102 gates and 174 wires to a netlist network with 72 inputs and 35 outputs.

3.117.101.1. Executing ABC.

3.117.102. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$263307$abc$183101$auto$opt_dff.cc:219:make_patterns_logic$8514
Extracted 105 gates and 181 wires to a netlist network with 76 inputs and 36 outputs.

3.117.102.1. Executing ABC.

3.117.103. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$263415$abc$182995$auto$opt_dff.cc:219:make_patterns_logic$8544
Extracted 100 gates and 171 wires to a netlist network with 71 inputs and 34 outputs.

3.117.103.1. Executing ABC.

3.117.104. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$263518$abc$182889$auto$opt_dff.cc:219:make_patterns_logic$8574
Extracted 101 gates and 173 wires to a netlist network with 72 inputs and 33 outputs.

3.117.104.1. Executing ABC.

3.117.105. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$263620$abc$182786$auto$opt_dff.cc:219:make_patterns_logic$8604
Extracted 103 gates and 175 wires to a netlist network with 72 inputs and 37 outputs.

3.117.105.1. Executing ABC.

3.117.106. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$263724$abc$182681$auto$opt_dff.cc:219:make_patterns_logic$8634
Extracted 101 gates and 173 wires to a netlist network with 72 inputs and 33 outputs.

3.117.106.1. Executing ABC.

3.117.107. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$263826$abc$182577$auto$opt_dff.cc:219:make_patterns_logic$8664
Extracted 101 gates and 172 wires to a netlist network with 71 inputs and 35 outputs.

3.117.107.1. Executing ABC.

3.117.108. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$263927$abc$170734$auto$opt_dff.cc:219:make_patterns_logic$6836
Extracted 653 gates and 858 wires to a netlist network with 205 inputs and 105 outputs.

3.117.108.1. Executing ABC.

3.117.109. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$265309$abc$170502$auto$opt_dff.cc:194:make_patterns_logic$6798
Extracted 23 gates and 43 wires to a netlist network with 20 inputs and 18 outputs.

3.117.109.1. Executing ABC.

3.117.110. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$265334$abc$161408$auto$opt_dff.cc:219:make_patterns_logic$7915
Extracted 167 gates and 269 wires to a netlist network with 102 inputs and 89 outputs.

3.117.110.1. Executing ABC.

3.117.111. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$265502$abc$161241$auto$opt_dff.cc:219:make_patterns_logic$7885
Extracted 154 gates and 229 wires to a netlist network with 75 inputs and 75 outputs.

3.117.111.1. Executing ABC.

3.117.112. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$265671$abc$182403$auto$opt_dff.cc:219:make_patterns_logic$8694
Extracted 159 gates and 232 wires to a netlist network with 73 inputs and 74 outputs.

3.117.112.1. Executing ABC.

3.117.113. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$265838$abc$182214$auto$opt_dff.cc:219:make_patterns_logic$8724
Extracted 162 gates and 251 wires to a netlist network with 89 inputs and 90 outputs.

3.117.113.1. Executing ABC.

3.117.114. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$266009$abc$182106$auto$opt_dff.cc:219:make_patterns_logic$8754
Extracted 105 gates and 180 wires to a netlist network with 75 inputs and 36 outputs.

3.117.114.1. Executing ABC.

3.117.115. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$266115$abc$182004$auto$opt_dff.cc:219:make_patterns_logic$8784
Extracted 102 gates and 174 wires to a netlist network with 72 inputs and 35 outputs.

3.117.115.1. Executing ABC.

3.117.116. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$266217$abc$181898$auto$opt_dff.cc:219:make_patterns_logic$8814
Extracted 101 gates and 173 wires to a netlist network with 72 inputs and 33 outputs.

3.117.116.1. Executing ABC.

3.117.117. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$268695$abc$174551$auto$opt_dff.cc:219:make_patterns_logic$7273
Extracted 67 gates and 104 wires to a netlist network with 37 inputs and 34 outputs.

3.117.117.1. Executing ABC.

3.117.118. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$268795$abc$174449$auto$opt_dff.cc:219:make_patterns_logic$7241
Extracted 69 gates and 108 wires to a netlist network with 39 inputs and 34 outputs.

3.117.118.1. Executing ABC.

3.117.119. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$268897$abc$174347$auto$opt_dff.cc:219:make_patterns_logic$7211
Extracted 73 gates and 115 wires to a netlist network with 42 inputs and 37 outputs.

3.117.119.1. Executing ABC.

3.117.120. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$269003$abc$174241$auto$opt_dff.cc:219:make_patterns_logic$7181
Extracted 74 gates and 118 wires to a netlist network with 44 inputs and 38 outputs.

3.117.120.1. Executing ABC.

3.117.121. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$269110$abc$174136$auto$opt_dff.cc:219:make_patterns_logic$7151
Extracted 71 gates and 111 wires to a netlist network with 40 inputs and 36 outputs.

3.117.121.1. Executing ABC.

3.117.122. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$269214$abc$173949$auto$opt_dff.cc:219:make_patterns_logic$7121
Extracted 129 gates and 192 wires to a netlist network with 63 inputs and 83 outputs.

3.117.122.1. Executing ABC.

3.117.123. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$269356$abc$173783$auto$opt_dff.cc:219:make_patterns_logic$7091
Extracted 129 gates and 175 wires to a netlist network with 46 inputs and 71 outputs.

3.117.123.1. Executing ABC.

3.117.124. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$269511$abc$173679$auto$opt_dff.cc:219:make_patterns_logic$7061
Extracted 71 gates and 112 wires to a netlist network with 41 inputs and 35 outputs.

3.117.124.1. Executing ABC.

3.117.125. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$269618$abc$173573$auto$opt_dff.cc:219:make_patterns_logic$7031
Extracted 72 gates and 113 wires to a netlist network with 41 inputs and 35 outputs.

3.117.125.1. Executing ABC.

3.117.126. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$269722$abc$173472$auto$opt_dff.cc:219:make_patterns_logic$7001
Extracted 73 gates and 113 wires to a netlist network with 40 inputs and 36 outputs.

3.117.126.1. Executing ABC.

3.117.127. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$269827$abc$173369$auto$opt_dff.cc:219:make_patterns_logic$6971
Extracted 69 gates and 108 wires to a netlist network with 39 inputs and 33 outputs.

3.117.127.1. Executing ABC.

3.117.128. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$269929$abc$173268$auto$opt_dff.cc:219:make_patterns_logic$6941
Extracted 85 gates and 141 wires to a netlist network with 56 inputs and 36 outputs.

3.117.128.1. Executing ABC.

3.117.129. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$244888$abc$181275$auto$opt_dff.cc:219:make_patterns_logic$6462
Extracted 85 gates and 139 wires to a netlist network with 54 inputs and 38 outputs.

3.117.129.1. Executing ABC.

3.117.130. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$270033$abc$173166$auto$opt_dff.cc:219:make_patterns_logic$6911
Extracted 69 gates and 108 wires to a netlist network with 39 inputs and 34 outputs.

3.117.130.1. Executing ABC.

3.117.131. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$270137$abc$169725$auto$opt_dff.cc:194:make_patterns_logic$8373
Extracted 844 gates and 1454 wires to a netlist network with 610 inputs and 209 outputs.

3.117.131.1. Executing ABC.

3.117.132. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$270436$abc$163921$auto$opt_dff.cc:219:make_patterns_logic$8099
Extracted 7712 gates and 9076 wires to a netlist network with 1364 inputs and 2000 outputs.

3.117.132.1. Executing ABC.

3.117.133. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$244644$abc$203384$auto$opt_dff.cc:219:make_patterns_logic$7288
Extracted 72 gates and 114 wires to a netlist network with 42 inputs and 39 outputs.

3.117.133.1. Executing ABC.

3.117.134. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$281037$abc$183710$auto$opt_dff.cc:219:make_patterns_logic$6162
Extracted 81 gates and 132 wires to a netlist network with 51 inputs and 36 outputs.

3.117.134.1. Executing ABC.

3.117.135. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$281141$abc$201820$auto$opt_dff.cc:219:make_patterns_logic$7016
Extracted 100 gates and 170 wires to a netlist network with 70 inputs and 37 outputs.

3.117.135.1. Executing ABC.

3.117.136. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$281246$abc$170399$auto$opt_dff.cc:219:make_patterns_logic$7196
Extracted 83 gates and 137 wires to a netlist network with 54 inputs and 35 outputs.

3.117.136.1. Executing ABC.

3.117.137. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$281349$abc$183813$auto$opt_dff.cc:219:make_patterns_logic$5998
Extracted 36 gates and 43 wires to a netlist network with 7 inputs and 12 outputs.

3.117.137.1. Executing ABC.

3.117.138. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$281383$abc$161035$auto$opt_dff.cc:219:make_patterns_logic$7825
Extracted 70 gates and 110 wires to a netlist network with 40 inputs and 34 outputs.

3.117.138.1. Executing ABC.

3.117.139. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$281486$abc$160930$auto$opt_dff.cc:219:make_patterns_logic$7795
Extracted 83 gates and 137 wires to a netlist network with 54 inputs and 34 outputs.

3.117.139.1. Executing ABC.

3.117.140. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$281589$abc$188207$auto$opt_dff.cc:219:make_patterns_logic$6511
Extracted 8252 gates and 9710 wires to a netlist network with 1458 inputs and 2096 outputs.

3.117.140.1. Executing ABC.

3.117.141. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$289988$abc$172498$auto$opt_dff.cc:219:make_patterns_logic$7810
Extracted 97 gates and 162 wires to a netlist network with 65 inputs and 59 outputs.

3.117.141.1. Executing ABC.

3.117.142. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$290117$abc$160822$auto$opt_dff.cc:219:make_patterns_logic$7765
Extracted 76 gates and 121 wires to a netlist network with 45 inputs and 38 outputs.

3.117.142.1. Executing ABC.

3.117.143. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$290226$abc$160717$auto$opt_dff.cc:219:make_patterns_logic$7735
Extracted 91 gates and 152 wires to a netlist network with 61 inputs and 38 outputs.

3.117.143.1. Executing ABC.

3.117.144. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$290330$abc$161695$auto$opt_dff.cc:219:make_patterns_logic$7975
Extracted 98 gates and 167 wires to a netlist network with 69 inputs and 35 outputs.

3.117.144.1. Executing ABC.

3.117.145. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$290434$abc$160611$auto$opt_dff.cc:219:make_patterns_logic$7705
Extracted 105 gates and 180 wires to a netlist network with 75 inputs and 38 outputs.

3.117.145.1. Executing ABC.

3.117.146. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$290539$abc$193267$auto$opt_dff.cc:219:make_patterns_logic$8380
Extracted 36 gates and 43 wires to a netlist network with 7 inputs and 12 outputs.

3.117.146.1. Executing ABC.

3.117.147. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$290573$abc$185750$auto$opt_dff.cc:219:make_patterns_logic$6530
Extracted 2031 gates and 3017 wires to a netlist network with 986 inputs and 706 outputs.

3.117.147.1. Executing ABC.

3.117.148. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$292995$abc$197492$auto$opt_dff.cc:219:make_patterns_logic$8893
Extracted 8272 gates and 9566 wires to a netlist network with 1294 inputs and 2193 outputs.

3.117.148.1. Executing ABC.

3.117.149. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i
Extracted 6689 gates and 8089 wires to a netlist network with 1400 inputs and 1918 outputs.

3.117.149.1. Executing ABC.

3.117.150. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$238634$abc$184891$auto$opt_dff.cc:219:make_patterns_logic$6297
Extracted 143 gates and 207 wires to a netlist network with 64 inputs and 70 outputs.

3.117.150.1. Executing ABC.

3.117.151. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$250681$abc$195162$auto$opt_dff.cc:219:make_patterns_logic$8912
Extracted 2005 gates and 2963 wires to a netlist network with 958 inputs and 583 outputs.

3.117.151.1. Executing ABC.

3.117.152. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$301523$abc$177372$auto$opt_dff.cc:219:make_patterns_logic$7305
Extracted 7578 gates and 8793 wires to a netlist network with 1215 inputs and 1813 outputs.

3.117.152.1. Executing ABC.

3.117.153. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$264613$abc$170535$auto$opt_dff.cc:219:make_patterns_logic$6042
Extracted 666 gates and 876 wires to a netlist network with 210 inputs and 109 outputs.

3.117.153.1. Executing ABC.

3.117.154. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$278582$abc$162244$auto$opt_dff.cc:219:make_patterns_logic$8118
Extracted 1693 gates and 2828 wires to a netlist network with 1135 inputs and 704 outputs.

3.117.154.1. Executing ABC.

3.117.155. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$266319$abc$174651$auto$opt_dff.cc:219:make_patterns_logic$7324
Extracted 2099 gates and 3176 wires to a netlist network with 1077 inputs and 751 outputs.

3.117.155.1. Executing ABC.

3.117.156. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$309236$abc$231801$auto$opt_dff.cc:194:make_patterns_logic$6001
Extracted 1251 gates and 2374 wires to a netlist network with 1123 inputs and 440 outputs.

3.117.156.1. Executing ABC.

yosys> abc -dff

3.118. Executing ABC pass (technology mapping using ABC).

3.118.1. Summary of detected clock domains:
  135 cells in clk=\clk_i, en=$abc$310748$abc$236129$abc$185649$auto$opt_dff.cc:219:make_patterns_logic$6479, arst={ }, srst={ }
  103 cells in clk=\clk_i, en=$abc$310881$abc$236261$abc$184789$auto$opt_dff.cc:219:make_patterns_logic$6267, arst={ }, srst={ }
  103 cells in clk=\clk_i, en=$abc$310986$abc$236365$abc$160507$auto$opt_dff.cc:219:make_patterns_logic$7675, arst={ }, srst={ }
  168 cells in clk=\clk_i, en=$abc$311090$abc$236468$abc$160339$auto$opt_dff.cc:219:make_patterns_logic$7645, arst={ }, srst={ }
  111 cells in clk=\clk_i, en=$abc$311259$abc$236636$abc$160206$auto$opt_dff.cc:219:make_patterns_logic$8876, arst={ }, srst={ }
  9 cells in clk=\clk_i, en=$abc$311497$abc$236872$abc$159968$auto$opt_dff.cc:219:make_patterns_logic$7614, arst={ }, srst={ }
  833 cells in clk=\clk_i, en=$abc$311813$abc$237033$abc$160010$auto$opt_dff.cc:219:make_patterns_logic$7623, arst={ }, srst={ }
  102 cells in clk=\clk_i, en=$abc$312646$abc$237845$abc$184687$auto$opt_dff.cc:219:make_patterns_logic$6237, arst={ }, srst={ }
  102 cells in clk=\clk_i, en=$abc$312748$abc$237947$abc$184585$auto$opt_dff.cc:219:make_patterns_logic$6207, arst={ }, srst={ }
  102 cells in clk=\clk_i, en=$abc$312852$abc$238050$abc$185545$auto$opt_dff.cc:219:make_patterns_logic$6447, arst={ }, srst={ }
  104 cells in clk=\clk_i, en=$abc$312957$abc$238154$abc$185443$auto$opt_dff.cc:219:make_patterns_logic$6417, arst={ }, srst={ }
  102 cells in clk=\clk_i, en=$abc$313062$abc$238262$abc$185341$auto$opt_dff.cc:219:make_patterns_logic$6387, arst={ }, srst={ }
  101 cells in clk=\clk_i, en=$abc$313165$abc$238365$abc$185239$auto$opt_dff.cc:219:make_patterns_logic$6357, arst={ }, srst={ }
  9 cells in clk=\clk_i, en=$abc$313434$abc$238829$abc$193318$auto$opt_dff.cc:219:make_patterns_logic$8408, arst={ }, srst={ }
  19 cells in clk=\clk_i, en=$abc$313444$abc$239441$abc$203351$auto$opt_dff.cc:194:make_patterns_logic$7592, arst={ }, srst={ }
  103 cells in clk=\clk_i, en=$abc$313466$abc$239464$abc$194249$auto$opt_dff.cc:219:make_patterns_logic$8649, arst={ }, srst={ }
  103 cells in clk=\clk_i, en=$abc$313571$abc$239568$abc$194146$auto$opt_dff.cc:219:make_patterns_logic$8619, arst={ }, srst={ }
  103 cells in clk=\clk_i, en=$abc$313676$abc$239675$abc$194043$auto$opt_dff.cc:219:make_patterns_logic$8589, arst={ }, srst={ }
  104 cells in clk=\clk_i, en=$abc$313781$abc$239779$abc$193940$auto$opt_dff.cc:219:make_patterns_logic$8559, arst={ }, srst={ }
  103 cells in clk=\clk_i, en=$abc$313885$abc$239883$abc$193839$auto$opt_dff.cc:219:make_patterns_logic$8529, arst={ }, srst={ }
  106 cells in clk=\clk_i, en=$abc$313988$abc$239985$abc$193732$auto$opt_dff.cc:219:make_patterns_logic$8499, arst={ }, srst={ }
  102 cells in clk=\clk_i, en=$abc$314094$abc$240090$abc$192436$auto$opt_dff.cc:219:make_patterns_logic$6282, arst={ }, srst={ }
  104 cells in clk=\clk_i, en=$abc$314199$abc$240194$abc$192330$auto$opt_dff.cc:219:make_patterns_logic$6252, arst={ }, srst={ }
  103 cells in clk=\clk_i, en=$abc$314303$abc$240299$abc$192226$auto$opt_dff.cc:219:make_patterns_logic$7256, arst={ }, srst={ }
  103 cells in clk=\clk_i, en=$abc$314408$abc$240403$abc$192117$auto$opt_dff.cc:219:make_patterns_logic$6222, arst={ }, srst={ }
  34 cells in clk=\clk_i, en=$abc$314514$abc$241146$abc$203596$auto$opt_dff.cc:219:make_patterns_logic$7586, arst={ }, srst={ }
  106 cells in clk=\clk_i, en=$abc$314549$abc$241178$abc$203488$auto$opt_dff.cc:219:make_patterns_logic$6132, arst={ }, srst={ }
  102 cells in clk=\clk_i, en=$abc$314656$abc$241284$abc$201716$auto$opt_dff.cc:219:make_patterns_logic$6986, arst={ }, srst={ }
  104 cells in clk=\clk_i, en=$abc$314759$abc$241387$abc$201611$auto$opt_dff.cc:219:make_patterns_logic$6956, arst={ }, srst={ }
  633 cells in clk=\clk_i, en=$abc$314863$abc$241491$abc$201513$auto$opt_dff.cc:194:make_patterns_logic$5991, arst={ }, srst={ }
  103 cells in clk=\clk_i, en=$abc$315520$abc$241589$abc$201411$auto$opt_dff.cc:219:make_patterns_logic$7166, arst={ }, srst={ }
  104 cells in clk=\clk_i, en=$abc$315623$abc$241692$abc$201306$auto$opt_dff.cc:219:make_patterns_logic$6926, arst={ }, srst={ }
  104 cells in clk=\clk_i, en=$abc$315728$abc$241797$abc$161138$auto$opt_dff.cc:219:make_patterns_logic$7855, arst={ }, srst={ }
  805 cells in clk=\clk_i, en=$abc$315833$abc$241902$abc$203153$auto$opt_dff.cc:219:make_patterns_logic$7630, arst={ }, srst={ }
  102 cells in clk=\clk_i, en=$abc$316640$abc$242709$abc$181796$auto$opt_dff.cc:219:make_patterns_logic$8844, arst={ }, srst={ }
  106 cells in clk=\clk_i, en=$abc$316742$abc$242812$abc$173060$auto$opt_dff.cc:219:make_patterns_logic$6881, arst={ }, srst={ }
  127 cells in clk=\clk_i, en=$abc$316847$abc$242917$abc$172893$auto$opt_dff.cc:219:make_patterns_logic$6851, arst={ }, srst={ }
  105 cells in clk=\clk_i, en=$abc$317014$abc$243056$abc$181627$auto$opt_dff.cc:219:make_patterns_logic$6072, arst={ }, srst={ }
  135 cells in clk=\clk_i, en=$abc$317126$abc$243163$abc$181490$auto$opt_dff.cc:219:make_patterns_logic$6494, arst={ }, srst={ }
  10 cells in clk=\clk_i, en=$abc$318025$abc$244092$abc$172684$auto$opt_dff.cc:219:make_patterns_logic$6820, arst={ }, srst={ }
  3 cells in clk=\clk_i, en=$abc$318036$abc$244777$abc$201955$auto$opt_dff.cc:194:make_patterns_logic$6007, arst={ }, srst={ }
  33 cells in clk=\clk_i, en=$abc$318146$abc$244996$abc$172633$auto$opt_dff.cc:219:make_patterns_logic$6792, arst={ }, srst={ }
  136 cells in clk=\clk_i, en=$abc$318180$abc$245028$abc$172358$auto$opt_dff.cc:219:make_patterns_logic$7840, arst={ }, srst={ }
  1043 cells in clk=\clk_i, en=$abc$318317$abc$245167$abc$181177$auto$opt_dff.cc:194:make_patterns_logic$7579, arst={ }, srst={ }
  135 cells in clk=\clk_i, en=$abc$319107$abc$245795$abc$172223$auto$opt_dff.cc:219:make_patterns_logic$7870, arst={ }, srst={ }
  198 cells in clk=\clk_i, en=$abc$319243$abc$245930$abc$172031$auto$opt_dff.cc:219:make_patterns_logic$7900, arst={ }, srst={ }
  104 cells in clk=\clk_i, en=$abc$319449$abc$246132$abc$193628$auto$opt_dff.cc:219:make_patterns_logic$8469, arst={ }, srst={ }
  24 cells in clk=\clk_i, en=$abc$319691$abc$238800$abc$201925$auto$opt_dff.cc:194:make_patterns_logic$6004, arst={ }, srst={ }
  765 cells in clk=\clk_i, en=$abc$319716$abc$246374$abc$193359$auto$opt_dff.cc:219:make_patterns_logic$8417, arst={ }, srst={ }
  105 cells in clk=\clk_i, en=$abc$320484$abc$247145$abc$193161$auto$opt_dff.cc:219:make_patterns_logic$6432, arst={ }, srst={ }
  102 cells in clk=\clk_i, en=$abc$320590$abc$247250$abc$193057$auto$opt_dff.cc:219:make_patterns_logic$6402, arst={ }, srst={ }
  107 cells in clk=\clk_i, en=$abc$320693$abc$247354$abc$192951$auto$opt_dff.cc:219:make_patterns_logic$6372, arst={ }, srst={ }
  179 cells in clk=\clk_i, en=$abc$320799$abc$247461$abc$192804$auto$opt_dff.cc:219:make_patterns_logic$6342, arst={ }, srst={ }
  106 cells in clk=\clk_i, en=$abc$320973$abc$247638$abc$192699$auto$opt_dff.cc:219:make_patterns_logic$6102, arst={ }, srst={ }
  170 cells in clk=\clk_i, en=$abc$321079$abc$247744$abc$192539$auto$opt_dff.cc:219:make_patterns_logic$6312, arst={ }, srst={ }
  201 cells in clk=\clk_i, en=$abc$321244$abc$247908$abc$171850$auto$opt_dff.cc:219:make_patterns_logic$7930, arst={ }, srst={ }
  136 cells in clk=\clk_i, en=$abc$321439$abc$248132$abc$171713$auto$opt_dff.cc:219:make_patterns_logic$7960, arst={ }, srst={ }
  136 cells in clk=\clk_i, en=$abc$321577$abc$248269$abc$171579$auto$opt_dff.cc:219:make_patterns_logic$7990, arst={ }, srst={ }
  137 cells in clk=\clk_i, en=$abc$321713$abc$248405$abc$171439$auto$opt_dff.cc:219:make_patterns_logic$8020, arst={ }, srst={ }
  73 cells in clk=\clk_i, en=$abc$321856$abc$248548$abc$162110$auto$opt_dff.cc:219:make_patterns_logic$8067, arst={ }, srst={ }
  135 cells in clk=\clk_i, en=$abc$321959$abc$248653$abc$171303$auto$opt_dff.cc:219:make_patterns_logic$8050, arst={ }, srst={ }
  71 cells in clk=\clk_i, en=$abc$322095$abc$248789$abc$171204$auto$opt_dff.cc:219:make_patterns_logic$8082, arst={ }, srst={ }
  167 cells in clk=\clk_i, en=$abc$322199$abc$248889$abc$203014$auto$opt_dff.cc:219:make_patterns_logic$7660, arst={ }, srst={ }
  109 cells in clk=\clk_i, en=$abc$322367$abc$249058$abc$202879$auto$opt_dff.cc:219:make_patterns_logic$7690, arst={ }, srst={ }
  110 cells in clk=\clk_i, en=$abc$322475$abc$249167$abc$202740$auto$opt_dff.cc:219:make_patterns_logic$7720, arst={ }, srst={ }
  107 cells in clk=\clk_i, en=$abc$322588$abc$249282$abc$202605$auto$opt_dff.cc:219:make_patterns_logic$7750, arst={ }, srst={ }
  110 cells in clk=\clk_i, en=$abc$322696$abc$249391$abc$202471$auto$opt_dff.cc:219:make_patterns_logic$7780, arst={ }, srst={ }
  166 cells in clk=\clk_i, en=$abc$322808$abc$249503$abc$202325$auto$opt_dff.cc:219:make_patterns_logic$7136, arst={ }, srst={ }
  163 cells in clk=\clk_i, en=$abc$322976$abc$249693$abc$202166$auto$opt_dff.cc:219:make_patterns_logic$7106, arst={ }, srst={ }
  74 cells in clk=\clk_i, en=$abc$323143$abc$249867$abc$202062$auto$opt_dff.cc:219:make_patterns_logic$7076, arst={ }, srst={ }
  71 cells in clk=\clk_i, en=$abc$323249$abc$249972$abc$201960$auto$opt_dff.cc:219:make_patterns_logic$7046, arst={ }, srst={ }
  101 cells in clk=\clk_i, en=$abc$323353$abc$250075$abc$162007$auto$opt_dff.cc:219:make_patterns_logic$8035, arst={ }, srst={ }
  106 cells in clk=\clk_i, en=$abc$323455$abc$250177$abc$161904$auto$opt_dff.cc:219:make_patterns_logic$8005, arst={ }, srst={ }
  100 cells in clk=\clk_i, en=$abc$323560$abc$250279$abc$171101$auto$opt_dff.cc:219:make_patterns_logic$6896, arst={ }, srst={ }
  162 cells in clk=\clk_i, en=$abc$323664$abc$250383$abc$170933$auto$opt_dff.cc:219:make_patterns_logic$6866, arst={ }, srst={ }
  851 cells in clk=\clk_i, en=$abc$323831$abc$240509$abc$192019$auto$opt_dff.cc:194:make_patterns_logic$6785, arst={ }, srst={ }
  131 cells in clk=\clk_i, en=$abc$324974$abc$250550$abc$195062$auto$opt_dff.cc:219:make_patterns_logic$8861, arst={ }, srst={ }
  103 cells in clk=\clk_i, en=$abc$325105$abc$253001$abc$194958$auto$opt_dff.cc:219:make_patterns_logic$8829, arst={ }, srst={ }
  103 cells in clk=\clk_i, en=$abc$325210$abc$253105$abc$194854$auto$opt_dff.cc:219:make_patterns_logic$8799, arst={ }, srst={ }
  103 cells in clk=\clk_i, en=$abc$325314$abc$253209$abc$194751$auto$opt_dff.cc:219:make_patterns_logic$8769, arst={ }, srst={ }
  103 cells in clk=\clk_i, en=$abc$325418$abc$253311$abc$194647$auto$opt_dff.cc:219:make_patterns_logic$8739, arst={ }, srst={ }
  170 cells in clk=\clk_i, en=$abc$325522$abc$253415$abc$194506$auto$opt_dff.cc:219:make_patterns_logic$8709, arst={ }, srst={ }
  166 cells in clk=\clk_i, en=$abc$325694$abc$253603$abc$194351$auto$opt_dff.cc:219:make_patterns_logic$8679, arst={ }, srst={ }
  82 cells in clk=\clk_i, en=$abc$325863$abc$253770$abc$161798$auto$opt_dff.cc:219:make_patterns_logic$6192, arst={ }, srst={ }
  103 cells in clk=\clk_i, en=$abc$325972$abc$253878$abc$161592$auto$opt_dff.cc:219:make_patterns_logic$7945, arst={ }, srst={ }
  74 cells in clk=\clk_i, en=$abc$326075$abc$253981$abc$184378$auto$opt_dff.cc:219:make_patterns_logic$6147, arst={ }, srst={ }
  68 cells in clk=\clk_i, en=$abc$326181$abc$254087$abc$184276$auto$opt_dff.cc:219:make_patterns_logic$6117, arst={ }, srst={ }
  69 cells in clk=\clk_i, en=$abc$326282$abc$254188$abc$184175$auto$opt_dff.cc:219:make_patterns_logic$6087, arst={ }, srst={ }
  74 cells in clk=\clk_i, en=$abc$326387$abc$254291$abc$184071$auto$opt_dff.cc:219:make_patterns_logic$6057, arst={ }, srst={ }
  8 cells in clk=\clk_i, en=$abc$327208$abc$255110$abc$183864$auto$opt_dff.cc:219:make_patterns_logic$6026, arst={ }, srst={ }
  23 cells in clk=\clk_i, en=$abc$327218$abc$262356$abc$183676$auto$opt_dff.cc:194:make_patterns_logic$8386, arst={ }, srst={ }
  741 cells in clk=\clk_i, en=$abc$327245$abc$262383$abc$183478$auto$opt_dff.cc:219:make_patterns_logic$8424, arst={ }, srst={ }
  103 cells in clk=\clk_i, en=$abc$327990$abc$263065$abc$183309$auto$opt_dff.cc:219:make_patterns_logic$8454, arst={ }, srst={ }
  101 cells in clk=\clk_i, en=$abc$328127$abc$263205$abc$183206$auto$opt_dff.cc:219:make_patterns_logic$8484, arst={ }, srst={ }
  103 cells in clk=\clk_i, en=$abc$328229$abc$263307$abc$183101$auto$opt_dff.cc:219:make_patterns_logic$8514, arst={ }, srst={ }
  101 cells in clk=\clk_i, en=$abc$328335$abc$263415$abc$182995$auto$opt_dff.cc:219:make_patterns_logic$8544, arst={ }, srst={ }
  102 cells in clk=\clk_i, en=$abc$328436$abc$263518$abc$182889$auto$opt_dff.cc:219:make_patterns_logic$8574, arst={ }, srst={ }
  103 cells in clk=\clk_i, en=$abc$328538$abc$263620$abc$182786$auto$opt_dff.cc:219:make_patterns_logic$8604, arst={ }, srst={ }
  104 cells in clk=\clk_i, en=$abc$328642$abc$263724$abc$182681$auto$opt_dff.cc:219:make_patterns_logic$8634, arst={ }, srst={ }
  101 cells in clk=\clk_i, en=$abc$328744$abc$263826$abc$182577$auto$opt_dff.cc:219:make_patterns_logic$8664, arst={ }, srst={ }
  102 cells in clk=\clk_i, en=$abc$318041$abc$244782$abc$181383$auto$opt_dff.cc:219:make_patterns_logic$7226, arst={ }, srst={ }
  23 cells in clk=\clk_i, en=$abc$329528$abc$265309$abc$170502$auto$opt_dff.cc:194:make_patterns_logic$6798, arst={ }, srst={ }
  163 cells in clk=\clk_i, en=$abc$329553$abc$265334$abc$161408$auto$opt_dff.cc:219:make_patterns_logic$7915, arst={ }, srst={ }
  161 cells in clk=\clk_i, en=$abc$329721$abc$265502$abc$161241$auto$opt_dff.cc:219:make_patterns_logic$7885, arst={ }, srst={ }
  159 cells in clk=\clk_i, en=$abc$329888$abc$265671$abc$182403$auto$opt_dff.cc:219:make_patterns_logic$8694, arst={ }, srst={ }
  163 cells in clk=\clk_i, en=$abc$330054$abc$265838$abc$182214$auto$opt_dff.cc:219:make_patterns_logic$8724, arst={ }, srst={ }
  104 cells in clk=\clk_i, en=$abc$330223$abc$266009$abc$182106$auto$opt_dff.cc:219:make_patterns_logic$8754, arst={ }, srst={ }
  101 cells in clk=\clk_i, en=$abc$330329$abc$266115$abc$182004$auto$opt_dff.cc:219:make_patterns_logic$8784, arst={ }, srst={ }
  102 cells in clk=\clk_i, en=$abc$330431$abc$266217$abc$181898$auto$opt_dff.cc:219:make_patterns_logic$8814, arst={ }, srst={ }
  67 cells in clk=\clk_i, en=$abc$330533$abc$268695$abc$174551$auto$opt_dff.cc:219:make_patterns_logic$7273, arst={ }, srst={ }
  69 cells in clk=\clk_i, en=$abc$330633$abc$268795$abc$174449$auto$opt_dff.cc:219:make_patterns_logic$7241, arst={ }, srst={ }
  73 cells in clk=\clk_i, en=$abc$330735$abc$268897$abc$174347$auto$opt_dff.cc:219:make_patterns_logic$7211, arst={ }, srst={ }
  74 cells in clk=\clk_i, en=$abc$330841$abc$269003$abc$174241$auto$opt_dff.cc:219:make_patterns_logic$7181, arst={ }, srst={ }
  71 cells in clk=\clk_i, en=$abc$330948$abc$269110$abc$174136$auto$opt_dff.cc:219:make_patterns_logic$7151, arst={ }, srst={ }
  127 cells in clk=\clk_i, en=$abc$331052$abc$269214$abc$173949$auto$opt_dff.cc:219:make_patterns_logic$7121, arst={ }, srst={ }
  128 cells in clk=\clk_i, en=$abc$331214$abc$269356$abc$173783$auto$opt_dff.cc:219:make_patterns_logic$7091, arst={ }, srst={ }
  70 cells in clk=\clk_i, en=$abc$331376$abc$269511$abc$173679$auto$opt_dff.cc:219:make_patterns_logic$7061, arst={ }, srst={ }
  71 cells in clk=\clk_i, en=$abc$331480$abc$269618$abc$173573$auto$opt_dff.cc:219:make_patterns_logic$7031, arst={ }, srst={ }
  72 cells in clk=\clk_i, en=$abc$331584$abc$269722$abc$173472$auto$opt_dff.cc:219:make_patterns_logic$7001, arst={ }, srst={ }
  85 cells in clk=\clk_i, en=$abc$331689$abc$269827$abc$173369$auto$opt_dff.cc:219:make_patterns_logic$6971, arst={ }, srst={ }
  95 cells in clk=\clk_i, en=$abc$331791$abc$269929$abc$173268$auto$opt_dff.cc:219:make_patterns_logic$6941, arst={ }, srst={ }
  73 cells in clk=\clk_i, en=$abc$331895$abc$244888$abc$181275$auto$opt_dff.cc:219:make_patterns_logic$6462, arst={ }, srst={ }
  68 cells in clk=\clk_i, en=$abc$332002$abc$270033$abc$173166$auto$opt_dff.cc:219:make_patterns_logic$6911, arst={ }, srst={ }
  864 cells in clk=\clk_i, en=$abc$332104$abc$270137$abc$169725$auto$opt_dff.cc:194:make_patterns_logic$8373, arst={ }, srst={ }
  111 cells in clk=\clk_i, en=$abc$341674$abc$244644$abc$203384$auto$opt_dff.cc:219:make_patterns_logic$7288, arst={ }, srst={ }
  98 cells in clk=\clk_i, en=$abc$341779$abc$281037$abc$183710$auto$opt_dff.cc:219:make_patterns_logic$6162, arst={ }, srst={ }
  85 cells in clk=\clk_i, en=$abc$341883$abc$281141$abc$201820$auto$opt_dff.cc:219:make_patterns_logic$7016, arst={ }, srst={ }
  77 cells in clk=\clk_i, en=$abc$341989$abc$281246$abc$170399$auto$opt_dff.cc:219:make_patterns_logic$7196, arst={ }, srst={ }
  34 cells in clk=\clk_i, en=$abc$342092$abc$281349$abc$183813$auto$opt_dff.cc:219:make_patterns_logic$5998, arst={ }, srst={ }
  83 cells in clk=\clk_i, en=$abc$342127$abc$281383$abc$161035$auto$opt_dff.cc:219:make_patterns_logic$7825, arst={ }, srst={ }
  70 cells in clk=\clk_i, en=$abc$342230$abc$281486$abc$160930$auto$opt_dff.cc:219:make_patterns_logic$7795, arst={ }, srst={ }
  95 cells in clk=\clk_i, en=$abc$350956$abc$289988$abc$172498$auto$opt_dff.cc:219:make_patterns_logic$7810, arst={ }, srst={ }
  93 cells in clk=\clk_i, en=$abc$351085$abc$290117$abc$160822$auto$opt_dff.cc:219:make_patterns_logic$7765, arst={ }, srst={ }
  100 cells in clk=\clk_i, en=$abc$351193$abc$290226$abc$160717$auto$opt_dff.cc:219:make_patterns_logic$7735, arst={ }, srst={ }
  102 cells in clk=\clk_i, en=$abc$351298$abc$290330$abc$161695$auto$opt_dff.cc:219:make_patterns_logic$7975, arst={ }, srst={ }
  101 cells in clk=\clk_i, en=$abc$351401$abc$290434$abc$160611$auto$opt_dff.cc:219:make_patterns_logic$7705, arst={ }, srst={ }
  34 cells in clk=\clk_i, en=$abc$351508$abc$290539$abc$193267$auto$opt_dff.cc:219:make_patterns_logic$8380, arst={ }, srst={ }
  2400 cells in clk=\clk_i, en=$abc$351543$abc$290573$abc$185750$auto$opt_dff.cc:219:make_patterns_logic$6530, arst={ }, srst={ }
  8453 cells in clk=\clk_i, en=$abc$342333$abc$281589$abc$188207$auto$opt_dff.cc:219:make_patterns_logic$6511, arst={ }, srst={ }
  129 cells in clk=\clk_i, en=$abc$319553$abc$246236$abc$193524$auto$opt_dff.cc:219:make_patterns_logic$8439, arst={ }, srst={ }
  725 cells in clk=\clk_i, en=$abc$326489$abc$254393$abc$183906$auto$opt_dff.cc:219:make_patterns_logic$6035, arst={ }, srst={ }
  668 cells in clk=\clk_i, en=$abc$328846$abc$263927$abc$170734$auto$opt_dff.cc:219:make_patterns_logic$6836, arst={ }, srst={ }
  8786 cells in clk=\clk_i, en=$abc$353995$abc$292995$abc$197492$auto$opt_dff.cc:219:make_patterns_logic$8893, arst={ }, srst={ }
  149 cells in clk=\clk_i, en=$abc$313268$abc$238469$abc$185056$auto$opt_dff.cc:219:make_patterns_logic$6327, arst={ }, srst={ }
  124 cells in clk=\clk_i, en=$abc$369446$abc$238634$abc$184891$auto$opt_dff.cc:219:make_patterns_logic$6297, arst={ }, srst={ }
  5874 cells in clk=\clk_i, en={ }, arst={ }, srst={ }
  2149 cells in clk=\clk_i, en=$abc$369608$abc$250681$abc$195162$auto$opt_dff.cc:219:make_patterns_logic$8912, arst={ }, srst={ }
  7771 cells in clk=\clk_i, en=$abc$371946$abc$301523$abc$177372$auto$opt_dff.cc:219:make_patterns_logic$7305, arst={ }, srst={ }
  678 cells in clk=\clk_i, en=$abc$379696$abc$264613$abc$170535$auto$opt_dff.cc:219:make_patterns_logic$6042, arst={ }, srst={ }
  2132 cells in clk=\clk_i, en=$abc$380388$abc$278582$abc$162244$auto$opt_dff.cc:219:make_patterns_logic$8118, arst={ }, srst={ }
  759 cells in clk=\clk_i, en=$abc$317260$abc$243298$abc$172728$auto$opt_dff.cc:219:make_patterns_logic$6829, arst={ }, srst={ }
  95 cells in clk=\clk_i, en=$abc$311394$abc$236771$abc$184484$auto$opt_dff.cc:219:make_patterns_logic$6177, arst={ }, srst={ }
  8794 cells in clk=\clk_i, en=$abc$332999$abc$270436$abc$163921$auto$opt_dff.cc:219:make_patterns_logic$8099, arst={ }, srst={ }
  2493 cells in clk=\clk_i, en=$abc$382237$abc$266319$abc$174651$auto$opt_dff.cc:219:make_patterns_logic$7324, arst={ }, srst={ }
  1282 cells in clk=\clk_i, en=$abc$384715$abc$309236$abc$231801$auto$opt_dff.cc:194:make_patterns_logic$6001, arst={ }, srst={ }

3.118.2. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$310748$abc$236129$abc$185649$auto$opt_dff.cc:219:make_patterns_logic$6479
Extracted 135 gates and 208 wires to a netlist network with 73 inputs and 68 outputs.

3.118.2.1. Executing ABC.

3.118.3. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$310881$abc$236261$abc$184789$auto$opt_dff.cc:219:make_patterns_logic$6267
Extracted 103 gates and 178 wires to a netlist network with 75 inputs and 35 outputs.

3.118.3.1. Executing ABC.

3.118.4. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$310986$abc$236365$abc$160507$auto$opt_dff.cc:219:make_patterns_logic$7675
Extracted 103 gates and 175 wires to a netlist network with 72 inputs and 37 outputs.

3.118.4.1. Executing ABC.

3.118.5. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$311090$abc$236468$abc$160339$auto$opt_dff.cc:219:make_patterns_logic$7645
Extracted 168 gates and 275 wires to a netlist network with 107 inputs and 100 outputs.

3.118.5.1. Executing ABC.

3.118.6. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$311259$abc$236636$abc$160206$auto$opt_dff.cc:219:make_patterns_logic$8876
Extracted 111 gates and 171 wires to a netlist network with 60 inputs and 58 outputs.

3.118.6.1. Executing ABC.

3.118.7. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$311497$abc$236872$abc$159968$auto$opt_dff.cc:219:make_patterns_logic$7614
Extracted 9 gates and 17 wires to a netlist network with 8 inputs and 4 outputs.

3.118.7.1. Executing ABC.

3.118.8. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$311813$abc$237033$abc$160010$auto$opt_dff.cc:219:make_patterns_logic$7623
Extracted 833 gates and 1078 wires to a netlist network with 245 inputs and 132 outputs.

3.118.8.1. Executing ABC.

3.118.9. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$312646$abc$237845$abc$184687$auto$opt_dff.cc:219:make_patterns_logic$6237
Extracted 102 gates and 176 wires to a netlist network with 74 inputs and 34 outputs.

3.118.9.1. Executing ABC.

3.118.10. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$312748$abc$237947$abc$184585$auto$opt_dff.cc:219:make_patterns_logic$6207
Extracted 102 gates and 176 wires to a netlist network with 74 inputs and 34 outputs.

3.118.10.1. Executing ABC.

3.118.11. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$312852$abc$238050$abc$185545$auto$opt_dff.cc:219:make_patterns_logic$6447
Extracted 102 gates and 176 wires to a netlist network with 74 inputs and 34 outputs.

3.118.11.1. Executing ABC.

3.118.12. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$312957$abc$238154$abc$185443$auto$opt_dff.cc:219:make_patterns_logic$6417
Extracted 104 gates and 180 wires to a netlist network with 76 inputs and 36 outputs.

3.118.12.1. Executing ABC.

3.118.13. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$313062$abc$238262$abc$185341$auto$opt_dff.cc:219:make_patterns_logic$6387
Extracted 102 gates and 176 wires to a netlist network with 74 inputs and 35 outputs.

3.118.13.1. Executing ABC.

3.118.14. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$313165$abc$238365$abc$185239$auto$opt_dff.cc:219:make_patterns_logic$6357
Extracted 101 gates and 174 wires to a netlist network with 73 inputs and 33 outputs.

3.118.14.1. Executing ABC.

3.118.15. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$313434$abc$238829$abc$193318$auto$opt_dff.cc:219:make_patterns_logic$8408
Extracted 9 gates and 17 wires to a netlist network with 8 inputs and 4 outputs.

3.118.15.1. Executing ABC.

3.118.16. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$313444$abc$239441$abc$203351$auto$opt_dff.cc:194:make_patterns_logic$7592
Extracted 19 gates and 36 wires to a netlist network with 17 inputs and 15 outputs.

3.118.16.1. Executing ABC.

3.118.17. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$313466$abc$239464$abc$194249$auto$opt_dff.cc:219:make_patterns_logic$8649
Extracted 103 gates and 177 wires to a netlist network with 74 inputs and 35 outputs.

3.118.17.1. Executing ABC.

3.118.18. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$313571$abc$239568$abc$194146$auto$opt_dff.cc:219:make_patterns_logic$8619
Extracted 103 gates and 177 wires to a netlist network with 74 inputs and 35 outputs.

3.118.18.1. Executing ABC.

3.118.19. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$313676$abc$239675$abc$194043$auto$opt_dff.cc:219:make_patterns_logic$8589
Extracted 103 gates and 177 wires to a netlist network with 74 inputs and 35 outputs.

3.118.19.1. Executing ABC.

3.118.20. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$313781$abc$239779$abc$193940$auto$opt_dff.cc:219:make_patterns_logic$8559
Extracted 104 gates and 179 wires to a netlist network with 75 inputs and 36 outputs.

3.118.20.1. Executing ABC.

3.118.21. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$313885$abc$239883$abc$193839$auto$opt_dff.cc:219:make_patterns_logic$8529
Extracted 103 gates and 176 wires to a netlist network with 73 inputs and 37 outputs.

3.118.21.1. Executing ABC.

3.118.22. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$313988$abc$239985$abc$193732$auto$opt_dff.cc:219:make_patterns_logic$8499
Extracted 106 gates and 181 wires to a netlist network with 75 inputs and 37 outputs.

3.118.22.1. Executing ABC.

3.118.23. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$314094$abc$240090$abc$192436$auto$opt_dff.cc:219:make_patterns_logic$6282
Extracted 102 gates and 176 wires to a netlist network with 74 inputs and 35 outputs.

3.118.23.1. Executing ABC.

3.118.24. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$314199$abc$240194$abc$192330$auto$opt_dff.cc:219:make_patterns_logic$6252
Extracted 104 gates and 179 wires to a netlist network with 75 inputs and 35 outputs.

3.118.24.1. Executing ABC.

3.118.25. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$314303$abc$240299$abc$192226$auto$opt_dff.cc:219:make_patterns_logic$7256
Extracted 103 gates and 177 wires to a netlist network with 74 inputs and 36 outputs.

3.118.25.1. Executing ABC.

3.118.26. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$314408$abc$240403$abc$192117$auto$opt_dff.cc:219:make_patterns_logic$6222
Extracted 103 gates and 178 wires to a netlist network with 75 inputs and 35 outputs.

3.118.26.1. Executing ABC.

3.118.27. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$314514$abc$241146$abc$203596$auto$opt_dff.cc:219:make_patterns_logic$7586
Extracted 34 gates and 41 wires to a netlist network with 7 inputs and 12 outputs.

3.118.27.1. Executing ABC.

3.118.28. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$314549$abc$241178$abc$203488$auto$opt_dff.cc:219:make_patterns_logic$6132
Extracted 106 gates and 183 wires to a netlist network with 77 inputs and 37 outputs.

3.118.28.1. Executing ABC.

3.118.29. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$314656$abc$241284$abc$201716$auto$opt_dff.cc:219:make_patterns_logic$6986
Extracted 102 gates and 175 wires to a netlist network with 73 inputs and 34 outputs.

3.118.29.1. Executing ABC.

3.118.30. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$314759$abc$241387$abc$201611$auto$opt_dff.cc:219:make_patterns_logic$6956
Extracted 104 gates and 178 wires to a netlist network with 74 inputs and 34 outputs.

3.118.30.1. Executing ABC.

3.118.31. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$314863$abc$241491$abc$201513$auto$opt_dff.cc:194:make_patterns_logic$5991
Extracted 633 gates and 1061 wires to a netlist network with 428 inputs and 34 outputs.

3.118.31.1. Executing ABC.

3.118.32. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$315520$abc$241589$abc$201411$auto$opt_dff.cc:219:make_patterns_logic$7166
Extracted 103 gates and 177 wires to a netlist network with 74 inputs and 35 outputs.

3.118.32.1. Executing ABC.

3.118.33. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$315623$abc$241692$abc$201306$auto$opt_dff.cc:219:make_patterns_logic$6926
Extracted 104 gates and 179 wires to a netlist network with 75 inputs and 35 outputs.

3.118.33.1. Executing ABC.

3.118.34. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$315728$abc$241797$abc$161138$auto$opt_dff.cc:219:make_patterns_logic$7855
Extracted 104 gates and 179 wires to a netlist network with 75 inputs and 36 outputs.

3.118.34.1. Executing ABC.

3.118.35. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$315833$abc$241902$abc$203153$auto$opt_dff.cc:219:make_patterns_logic$7630
Extracted 805 gates and 1038 wires to a netlist network with 233 inputs and 136 outputs.

3.118.35.1. Executing ABC.

3.118.36. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$316640$abc$242709$abc$181796$auto$opt_dff.cc:219:make_patterns_logic$8844
Extracted 102 gates and 174 wires to a netlist network with 72 inputs and 36 outputs.

3.118.36.1. Executing ABC.

3.118.37. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$316742$abc$242812$abc$173060$auto$opt_dff.cc:219:make_patterns_logic$6881
Extracted 106 gates and 181 wires to a netlist network with 75 inputs and 37 outputs.

3.118.37.1. Executing ABC.

3.118.38. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$316847$abc$242917$abc$172893$auto$opt_dff.cc:219:make_patterns_logic$6851
Extracted 127 gates and 212 wires to a netlist network with 85 inputs and 78 outputs.

3.118.38.1. Executing ABC.

3.118.39. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$317014$abc$243056$abc$181627$auto$opt_dff.cc:219:make_patterns_logic$6072
Extracted 105 gates and 180 wires to a netlist network with 75 inputs and 68 outputs.

3.118.39.1. Executing ABC.

3.118.40. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$317126$abc$243163$abc$181490$auto$opt_dff.cc:219:make_patterns_logic$6494
Extracted 135 gates and 207 wires to a netlist network with 72 inputs and 70 outputs.

3.118.40.1. Executing ABC.

3.118.41. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$318025$abc$244092$abc$172684$auto$opt_dff.cc:219:make_patterns_logic$6820
Extracted 10 gates and 18 wires to a netlist network with 8 inputs and 4 outputs.

3.118.41.1. Executing ABC.

3.118.42. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$318036$abc$244777$abc$201955$auto$opt_dff.cc:194:make_patterns_logic$6007
Extracted 3 gates and 6 wires to a netlist network with 3 inputs and 2 outputs.

3.118.42.1. Executing ABC.

3.118.43. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$318146$abc$244996$abc$172633$auto$opt_dff.cc:219:make_patterns_logic$6792
Extracted 33 gates and 40 wires to a netlist network with 7 inputs and 12 outputs.

3.118.43.1. Executing ABC.

3.118.44. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$318180$abc$245028$abc$172358$auto$opt_dff.cc:219:make_patterns_logic$7840
Extracted 136 gates and 211 wires to a netlist network with 75 inputs and 35 outputs.

3.118.44.1. Executing ABC.

3.118.45. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$318317$abc$245167$abc$181177$auto$opt_dff.cc:194:make_patterns_logic$7579
Extracted 1043 gates and 1801 wires to a netlist network with 758 inputs and 584 outputs.

3.118.45.1. Executing ABC.

3.118.46. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$319107$abc$245795$abc$172223$auto$opt_dff.cc:219:make_patterns_logic$7870
Extracted 135 gates and 210 wires to a netlist network with 75 inputs and 35 outputs.

3.118.46.1. Executing ABC.

3.118.47. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$319243$abc$245930$abc$172031$auto$opt_dff.cc:219:make_patterns_logic$7900
Extracted 198 gates and 279 wires to a netlist network with 81 inputs and 74 outputs.

3.118.47.1. Executing ABC.

3.118.48. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$319449$abc$246132$abc$193628$auto$opt_dff.cc:219:make_patterns_logic$8469
Extracted 104 gates and 178 wires to a netlist network with 74 inputs and 35 outputs.

3.118.48.1. Executing ABC.

3.118.49. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$319691$abc$238800$abc$201925$auto$opt_dff.cc:194:make_patterns_logic$6004
Extracted 24 gates and 44 wires to a netlist network with 20 inputs and 21 outputs.

3.118.49.1. Executing ABC.

3.118.50. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$319716$abc$246374$abc$193359$auto$opt_dff.cc:219:make_patterns_logic$8417
Extracted 765 gates and 988 wires to a netlist network with 223 inputs and 99 outputs.

3.118.50.1. Executing ABC.

3.118.51. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$320484$abc$247145$abc$193161$auto$opt_dff.cc:219:make_patterns_logic$6432
Extracted 105 gates and 182 wires to a netlist network with 77 inputs and 36 outputs.

3.118.51.1. Executing ABC.

3.118.52. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$320590$abc$247250$abc$193057$auto$opt_dff.cc:219:make_patterns_logic$6402
Extracted 102 gates and 176 wires to a netlist network with 74 inputs and 35 outputs.

3.118.52.1. Executing ABC.

3.118.53. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$320693$abc$247354$abc$192951$auto$opt_dff.cc:219:make_patterns_logic$6372
Extracted 107 gates and 185 wires to a netlist network with 78 inputs and 38 outputs.

3.118.53.1. Executing ABC.

3.118.54. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$320799$abc$247461$abc$192804$auto$opt_dff.cc:219:make_patterns_logic$6342
Extracted 179 gates and 296 wires to a netlist network with 117 inputs and 97 outputs.

3.118.54.1. Executing ABC.

3.118.55. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$320973$abc$247638$abc$192699$auto$opt_dff.cc:219:make_patterns_logic$6102
Extracted 106 gates and 183 wires to a netlist network with 77 inputs and 37 outputs.

3.118.55.1. Executing ABC.

3.118.56. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$321079$abc$247744$abc$192539$auto$opt_dff.cc:219:make_patterns_logic$6312
Extracted 170 gates and 254 wires to a netlist network with 84 inputs and 76 outputs.

3.118.56.1. Executing ABC.

3.118.57. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$321244$abc$247908$abc$171850$auto$opt_dff.cc:219:make_patterns_logic$7930
Extracted 201 gates and 299 wires to a netlist network with 98 inputs and 90 outputs.

3.118.57.1. Executing ABC.

3.118.58. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$321439$abc$248132$abc$171713$auto$opt_dff.cc:219:make_patterns_logic$7960
Extracted 136 gates and 211 wires to a netlist network with 75 inputs and 35 outputs.

3.118.58.1. Executing ABC.

3.118.59. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$321577$abc$248269$abc$171579$auto$opt_dff.cc:219:make_patterns_logic$7990
Extracted 136 gates and 211 wires to a netlist network with 75 inputs and 37 outputs.

3.118.59.1. Executing ABC.

3.118.60. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$321713$abc$248405$abc$171439$auto$opt_dff.cc:219:make_patterns_logic$8020
Extracted 137 gates and 214 wires to a netlist network with 77 inputs and 37 outputs.

3.118.60.1. Executing ABC.

3.118.61. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$321856$abc$248548$abc$162110$auto$opt_dff.cc:219:make_patterns_logic$8067
Extracted 73 gates and 113 wires to a netlist network with 40 inputs and 37 outputs.

3.118.61.1. Executing ABC.

3.118.62. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$321959$abc$248653$abc$171303$auto$opt_dff.cc:219:make_patterns_logic$8050
Extracted 135 gates and 210 wires to a netlist network with 75 inputs and 35 outputs.

3.118.62.1. Executing ABC.

3.118.63. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$322095$abc$248789$abc$171204$auto$opt_dff.cc:219:make_patterns_logic$8082
Extracted 71 gates and 112 wires to a netlist network with 41 inputs and 38 outputs.

3.118.63.1. Executing ABC.

3.118.64. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$322199$abc$248889$abc$203014$auto$opt_dff.cc:219:make_patterns_logic$7660
Extracted 167 gates and 272 wires to a netlist network with 105 inputs and 95 outputs.

3.118.64.1. Executing ABC.

3.118.65. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$322367$abc$249058$abc$202879$auto$opt_dff.cc:219:make_patterns_logic$7690
Extracted 109 gates and 185 wires to a netlist network with 76 inputs and 36 outputs.

3.118.65.1. Executing ABC.

3.118.66. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$322475$abc$249167$abc$202740$auto$opt_dff.cc:219:make_patterns_logic$7720
Extracted 110 gates and 187 wires to a netlist network with 77 inputs and 35 outputs.

3.118.66.1. Executing ABC.

3.118.67. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$322588$abc$249282$abc$202605$auto$opt_dff.cc:219:make_patterns_logic$7750
Extracted 107 gates and 180 wires to a netlist network with 73 inputs and 35 outputs.

3.118.67.1. Executing ABC.

3.118.68. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$322696$abc$249391$abc$202471$auto$opt_dff.cc:219:make_patterns_logic$7780
Extracted 110 gates and 187 wires to a netlist network with 77 inputs and 36 outputs.

3.118.68.1. Executing ABC.

3.118.69. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$322808$abc$249503$abc$202325$auto$opt_dff.cc:219:make_patterns_logic$7136
Extracted 166 gates and 261 wires to a netlist network with 95 inputs and 90 outputs.

3.118.69.1. Executing ABC.

3.118.70. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$322976$abc$249693$abc$202166$auto$opt_dff.cc:219:make_patterns_logic$7106
Extracted 163 gates and 240 wires to a netlist network with 77 inputs and 75 outputs.

3.118.70.1. Executing ABC.

3.118.71. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$323143$abc$249867$abc$202062$auto$opt_dff.cc:219:make_patterns_logic$7076
Extracted 74 gates and 117 wires to a netlist network with 43 inputs and 37 outputs.

3.118.71.1. Executing ABC.

3.118.72. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$323249$abc$249972$abc$201960$auto$opt_dff.cc:219:make_patterns_logic$7046
Extracted 71 gates and 111 wires to a netlist network with 40 inputs and 35 outputs.

3.118.72.1. Executing ABC.

3.118.73. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$323353$abc$250075$abc$162007$auto$opt_dff.cc:219:make_patterns_logic$8035
Extracted 101 gates and 173 wires to a netlist network with 72 inputs and 33 outputs.

3.118.73.1. Executing ABC.

3.118.74. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$323455$abc$250177$abc$161904$auto$opt_dff.cc:219:make_patterns_logic$8005
Extracted 106 gates and 183 wires to a netlist network with 77 inputs and 37 outputs.

3.118.74.1. Executing ABC.

3.118.75. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$323560$abc$250279$abc$171101$auto$opt_dff.cc:219:make_patterns_logic$6896
Extracted 100 gates and 171 wires to a netlist network with 71 inputs and 36 outputs.

3.118.75.1. Executing ABC.

3.118.76. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$323664$abc$250383$abc$170933$auto$opt_dff.cc:219:make_patterns_logic$6866
Extracted 162 gates and 264 wires to a netlist network with 102 inputs and 97 outputs.

3.118.76.1. Executing ABC.

3.118.77. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$323831$abc$240509$abc$192019$auto$opt_dff.cc:194:make_patterns_logic$6785
Extracted 851 gates and 1455 wires to a netlist network with 604 inputs and 338 outputs.

3.118.77.1. Executing ABC.

3.118.78. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$324974$abc$250550$abc$195062$auto$opt_dff.cc:219:make_patterns_logic$8861
Extracted 131 gates and 201 wires to a netlist network with 70 inputs and 66 outputs.

3.118.78.1. Executing ABC.

3.118.79. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$325105$abc$253001$abc$194958$auto$opt_dff.cc:219:make_patterns_logic$8829
Extracted 103 gates and 177 wires to a netlist network with 74 inputs and 35 outputs.

3.118.79.1. Executing ABC.

3.118.80. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$325210$abc$253105$abc$194854$auto$opt_dff.cc:219:make_patterns_logic$8799
Extracted 103 gates and 177 wires to a netlist network with 74 inputs and 35 outputs.

3.118.80.1. Executing ABC.

3.118.81. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$325314$abc$253209$abc$194751$auto$opt_dff.cc:219:make_patterns_logic$8769
Extracted 103 gates and 177 wires to a netlist network with 74 inputs and 36 outputs.

3.118.81.1. Executing ABC.

3.118.82. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$325418$abc$253311$abc$194647$auto$opt_dff.cc:219:make_patterns_logic$8739
Extracted 103 gates and 177 wires to a netlist network with 74 inputs and 35 outputs.

3.118.82.1. Executing ABC.

3.118.83. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$325522$abc$253415$abc$194506$auto$opt_dff.cc:219:make_patterns_logic$8709
Extracted 170 gates and 275 wires to a netlist network with 105 inputs and 91 outputs.

3.118.83.1. Executing ABC.

3.118.84. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$325694$abc$253603$abc$194351$auto$opt_dff.cc:219:make_patterns_logic$8679
Extracted 166 gates and 253 wires to a netlist network with 87 inputs and 76 outputs.

3.118.84.1. Executing ABC.

3.118.85. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$325863$abc$253770$abc$161798$auto$opt_dff.cc:219:make_patterns_logic$6192
Extracted 82 gates and 135 wires to a netlist network with 53 inputs and 35 outputs.

3.118.85.1. Executing ABC.

3.118.86. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$325972$abc$253878$abc$161592$auto$opt_dff.cc:219:make_patterns_logic$7945
Extracted 103 gates and 177 wires to a netlist network with 74 inputs and 35 outputs.

3.118.86.1. Executing ABC.

3.118.87. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$326075$abc$253981$abc$184378$auto$opt_dff.cc:219:make_patterns_logic$6147
Extracted 74 gates and 117 wires to a netlist network with 43 inputs and 37 outputs.

3.118.87.1. Executing ABC.

3.118.88. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$326181$abc$254087$abc$184276$auto$opt_dff.cc:219:make_patterns_logic$6117
Extracted 68 gates and 106 wires to a netlist network with 38 inputs and 33 outputs.

3.118.88.1. Executing ABC.

3.118.89. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$326282$abc$254188$abc$184175$auto$opt_dff.cc:219:make_patterns_logic$6087
Extracted 69 gates and 108 wires to a netlist network with 39 inputs and 34 outputs.

3.118.89.1. Executing ABC.

3.118.90. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$326387$abc$254291$abc$184071$auto$opt_dff.cc:219:make_patterns_logic$6057
Extracted 74 gates and 119 wires to a netlist network with 45 inputs and 38 outputs.

3.118.90.1. Executing ABC.

3.118.91. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$327208$abc$255110$abc$183864$auto$opt_dff.cc:219:make_patterns_logic$6026
Extracted 8 gates and 15 wires to a netlist network with 7 inputs and 4 outputs.

3.118.91.1. Executing ABC.

3.118.92. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$327218$abc$262356$abc$183676$auto$opt_dff.cc:194:make_patterns_logic$8386
Extracted 23 gates and 42 wires to a netlist network with 19 inputs and 18 outputs.

3.118.92.1. Executing ABC.

3.118.93. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$327245$abc$262383$abc$183478$auto$opt_dff.cc:219:make_patterns_logic$8424
Extracted 741 gates and 945 wires to a netlist network with 204 inputs and 109 outputs.

3.118.93.1. Executing ABC.

3.118.94. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$327990$abc$263065$abc$183309$auto$opt_dff.cc:219:make_patterns_logic$8454
Extracted 103 gates and 177 wires to a netlist network with 74 inputs and 66 outputs.

3.118.94.1. Executing ABC.

3.118.95. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$328127$abc$263205$abc$183206$auto$opt_dff.cc:219:make_patterns_logic$8484
Extracted 101 gates and 173 wires to a netlist network with 72 inputs and 35 outputs.

3.118.95.1. Executing ABC.

3.118.96. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$328229$abc$263307$abc$183101$auto$opt_dff.cc:219:make_patterns_logic$8514
Extracted 103 gates and 177 wires to a netlist network with 74 inputs and 34 outputs.

3.118.96.1. Executing ABC.

3.118.97. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$328335$abc$263415$abc$182995$auto$opt_dff.cc:219:make_patterns_logic$8544
Extracted 101 gates and 172 wires to a netlist network with 71 inputs and 35 outputs.

3.118.97.1. Executing ABC.

3.118.98. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$328436$abc$263518$abc$182889$auto$opt_dff.cc:219:make_patterns_logic$8574
Extracted 102 gates and 175 wires to a netlist network with 73 inputs and 34 outputs.

3.118.98.1. Executing ABC.

3.118.99. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$328538$abc$263620$abc$182786$auto$opt_dff.cc:219:make_patterns_logic$8604
Extracted 103 gates and 175 wires to a netlist network with 72 inputs and 37 outputs.

3.118.99.1. Executing ABC.

3.118.100. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$328642$abc$263724$abc$182681$auto$opt_dff.cc:219:make_patterns_logic$8634
Extracted 104 gates and 179 wires to a netlist network with 75 inputs and 36 outputs.

3.118.100.1. Executing ABC.

3.118.101. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$328744$abc$263826$abc$182577$auto$opt_dff.cc:219:make_patterns_logic$8664
Extracted 101 gates and 173 wires to a netlist network with 72 inputs and 35 outputs.

3.118.101.1. Executing ABC.

3.118.102. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$318041$abc$244782$abc$181383$auto$opt_dff.cc:219:make_patterns_logic$7226
Extracted 102 gates and 175 wires to a netlist network with 73 inputs and 35 outputs.

3.118.102.1. Executing ABC.

3.118.103. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$329528$abc$265309$abc$170502$auto$opt_dff.cc:194:make_patterns_logic$6798
Extracted 23 gates and 42 wires to a netlist network with 19 inputs and 17 outputs.

3.118.103.1. Executing ABC.

3.118.104. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$329553$abc$265334$abc$161408$auto$opt_dff.cc:219:make_patterns_logic$7915
Extracted 163 gates and 261 wires to a netlist network with 98 inputs and 90 outputs.

3.118.104.1. Executing ABC.

3.118.105. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$329721$abc$265502$abc$161241$auto$opt_dff.cc:219:make_patterns_logic$7885
Extracted 161 gates and 242 wires to a netlist network with 81 inputs and 76 outputs.

3.118.105.1. Executing ABC.

3.118.106. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$329888$abc$265671$abc$182403$auto$opt_dff.cc:219:make_patterns_logic$8694
Extracted 159 gates and 232 wires to a netlist network with 73 inputs and 74 outputs.

3.118.106.1. Executing ABC.

3.118.107. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$330054$abc$265838$abc$182214$auto$opt_dff.cc:219:make_patterns_logic$8724
Extracted 163 gates and 254 wires to a netlist network with 91 inputs and 91 outputs.

3.118.107.1. Executing ABC.

3.118.108. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$330223$abc$266009$abc$182106$auto$opt_dff.cc:219:make_patterns_logic$8754
Extracted 104 gates and 178 wires to a netlist network with 74 inputs and 35 outputs.

3.118.108.1. Executing ABC.

3.118.109. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$330329$abc$266115$abc$182004$auto$opt_dff.cc:219:make_patterns_logic$8784
Extracted 101 gates and 172 wires to a netlist network with 71 inputs and 35 outputs.

3.118.109.1. Executing ABC.

3.118.110. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$330431$abc$266217$abc$181898$auto$opt_dff.cc:219:make_patterns_logic$8814
Extracted 102 gates and 175 wires to a netlist network with 73 inputs and 34 outputs.

3.118.110.1. Executing ABC.

3.118.111. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$330533$abc$268695$abc$174551$auto$opt_dff.cc:219:make_patterns_logic$7273
Extracted 67 gates and 104 wires to a netlist network with 37 inputs and 34 outputs.

3.118.111.1. Executing ABC.

3.118.112. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$330633$abc$268795$abc$174449$auto$opt_dff.cc:219:make_patterns_logic$7241
Extracted 69 gates and 108 wires to a netlist network with 39 inputs and 34 outputs.

3.118.112.1. Executing ABC.

3.118.113. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$330735$abc$268897$abc$174347$auto$opt_dff.cc:219:make_patterns_logic$7211
Extracted 73 gates and 115 wires to a netlist network with 42 inputs and 37 outputs.

3.118.113.1. Executing ABC.

3.118.114. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$330841$abc$269003$abc$174241$auto$opt_dff.cc:219:make_patterns_logic$7181
Extracted 74 gates and 118 wires to a netlist network with 44 inputs and 38 outputs.

3.118.114.1. Executing ABC.

3.118.115. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$330948$abc$269110$abc$174136$auto$opt_dff.cc:219:make_patterns_logic$7151
Extracted 71 gates and 111 wires to a netlist network with 40 inputs and 36 outputs.

3.118.115.1. Executing ABC.

3.118.116. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$331052$abc$269214$abc$173949$auto$opt_dff.cc:219:make_patterns_logic$7121
Extracted 127 gates and 188 wires to a netlist network with 61 inputs and 81 outputs.

3.118.116.1. Executing ABC.

3.118.117. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$331214$abc$269356$abc$173783$auto$opt_dff.cc:219:make_patterns_logic$7091
Extracted 128 gates and 174 wires to a netlist network with 46 inputs and 70 outputs.

3.118.117.1. Executing ABC.

3.118.118. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$331376$abc$269511$abc$173679$auto$opt_dff.cc:219:make_patterns_logic$7061
Extracted 70 gates and 110 wires to a netlist network with 40 inputs and 34 outputs.

3.118.118.1. Executing ABC.

3.118.119. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$331480$abc$269618$abc$173573$auto$opt_dff.cc:219:make_patterns_logic$7031
Extracted 71 gates and 112 wires to a netlist network with 41 inputs and 35 outputs.

3.118.119.1. Executing ABC.

3.118.120. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$331584$abc$269722$abc$173472$auto$opt_dff.cc:219:make_patterns_logic$7001
Extracted 72 gates and 112 wires to a netlist network with 40 inputs and 36 outputs.

3.118.120.1. Executing ABC.

3.118.121. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$331689$abc$269827$abc$173369$auto$opt_dff.cc:219:make_patterns_logic$6971
Extracted 85 gates and 141 wires to a netlist network with 56 inputs and 35 outputs.

3.118.121.1. Executing ABC.

3.118.122. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$331791$abc$269929$abc$173268$auto$opt_dff.cc:219:make_patterns_logic$6941
Extracted 95 gates and 161 wires to a netlist network with 66 inputs and 35 outputs.

3.118.122.1. Executing ABC.

3.118.123. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$331895$abc$244888$abc$181275$auto$opt_dff.cc:219:make_patterns_logic$6462
Extracted 73 gates and 115 wires to a netlist network with 42 inputs and 37 outputs.

3.118.123.1. Executing ABC.

3.118.124. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$332002$abc$270033$abc$173166$auto$opt_dff.cc:219:make_patterns_logic$6911
Extracted 68 gates and 106 wires to a netlist network with 38 inputs and 33 outputs.

3.118.124.1. Executing ABC.

3.118.125. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$332104$abc$270137$abc$169725$auto$opt_dff.cc:194:make_patterns_logic$8373
Extracted 864 gates and 1471 wires to a netlist network with 607 inputs and 204 outputs.

3.118.125.1. Executing ABC.

3.118.126. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$341674$abc$244644$abc$203384$auto$opt_dff.cc:219:make_patterns_logic$7288
Extracted 111 gates and 172 wires to a netlist network with 61 inputs and 59 outputs.

3.118.126.1. Executing ABC.

3.118.127. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$341779$abc$281037$abc$183710$auto$opt_dff.cc:219:make_patterns_logic$6162
Extracted 98 gates and 166 wires to a netlist network with 68 inputs and 36 outputs.

3.118.127.1. Executing ABC.

3.118.128. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$341883$abc$281141$abc$201820$auto$opt_dff.cc:219:make_patterns_logic$7016
Extracted 85 gates and 141 wires to a netlist network with 56 inputs and 36 outputs.

3.118.128.1. Executing ABC.

3.118.129. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$341989$abc$281246$abc$170399$auto$opt_dff.cc:219:make_patterns_logic$7196
Extracted 77 gates and 125 wires to a netlist network with 48 inputs and 34 outputs.

3.118.129.1. Executing ABC.

3.118.130. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$342092$abc$281349$abc$183813$auto$opt_dff.cc:219:make_patterns_logic$5998
Extracted 34 gates and 41 wires to a netlist network with 7 inputs and 12 outputs.

3.118.130.1. Executing ABC.

3.118.131. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$342127$abc$281383$abc$161035$auto$opt_dff.cc:219:make_patterns_logic$7825
Extracted 83 gates and 137 wires to a netlist network with 54 inputs and 34 outputs.

3.118.131.1. Executing ABC.

3.118.132. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$342230$abc$281486$abc$160930$auto$opt_dff.cc:219:make_patterns_logic$7795
Extracted 70 gates and 110 wires to a netlist network with 40 inputs and 34 outputs.

3.118.132.1. Executing ABC.

3.118.133. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$350956$abc$289988$abc$172498$auto$opt_dff.cc:219:make_patterns_logic$7810
Extracted 95 gates and 160 wires to a netlist network with 65 inputs and 58 outputs.

3.118.133.1. Executing ABC.

3.118.134. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$351085$abc$290117$abc$160822$auto$opt_dff.cc:219:make_patterns_logic$7765
Extracted 93 gates and 156 wires to a netlist network with 63 inputs and 36 outputs.

3.118.134.1. Executing ABC.

3.118.135. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$351193$abc$290226$abc$160717$auto$opt_dff.cc:219:make_patterns_logic$7735
Extracted 100 gates and 170 wires to a netlist network with 70 inputs and 38 outputs.

3.118.135.1. Executing ABC.

3.118.136. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$351298$abc$290330$abc$161695$auto$opt_dff.cc:219:make_patterns_logic$7975
Extracted 102 gates and 175 wires to a netlist network with 73 inputs and 36 outputs.

3.118.136.1. Executing ABC.

3.118.137. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$351401$abc$290434$abc$160611$auto$opt_dff.cc:219:make_patterns_logic$7705
Extracted 101 gates and 172 wires to a netlist network with 71 inputs and 38 outputs.

3.118.137.1. Executing ABC.

3.118.138. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$351508$abc$290539$abc$193267$auto$opt_dff.cc:219:make_patterns_logic$8380
Extracted 34 gates and 41 wires to a netlist network with 7 inputs and 12 outputs.

3.118.138.1. Executing ABC.

3.118.139. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$351543$abc$290573$abc$185750$auto$opt_dff.cc:219:make_patterns_logic$6530
Extracted 2211 gates and 3395 wires to a netlist network with 1184 inputs and 714 outputs.

3.118.139.1. Executing ABC.

3.118.140. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$342333$abc$281589$abc$188207$auto$opt_dff.cc:219:make_patterns_logic$6511
Extracted 8067 gates and 9355 wires to a netlist network with 1288 inputs and 1915 outputs.

3.118.140.1. Executing ABC.

3.118.141. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$319553$abc$246236$abc$193524$auto$opt_dff.cc:219:make_patterns_logic$8439
Extracted 129 gates and 216 wires to a netlist network with 87 inputs and 81 outputs.

3.118.141.1. Executing ABC.

3.118.142. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$326489$abc$254393$abc$183906$auto$opt_dff.cc:219:make_patterns_logic$6035
Extracted 725 gates and 957 wires to a netlist network with 232 inputs and 99 outputs.

3.118.142.1. Executing ABC.

3.118.143. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$328846$abc$263927$abc$170734$auto$opt_dff.cc:219:make_patterns_logic$6836
Extracted 668 gates and 876 wires to a netlist network with 208 inputs and 106 outputs.

3.118.143.1. Executing ABC.

3.118.144. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$353995$abc$292995$abc$197492$auto$opt_dff.cc:219:make_patterns_logic$8893
Extracted 8211 gates and 9390 wires to a netlist network with 1179 inputs and 2056 outputs.

3.118.144.1. Executing ABC.

3.118.145. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$313268$abc$238469$abc$185056$auto$opt_dff.cc:219:make_patterns_logic$6327
Extracted 149 gates and 231 wires to a netlist network with 82 inputs and 87 outputs.

3.118.145.1. Executing ABC.

3.118.146. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$369446$abc$238634$abc$184891$auto$opt_dff.cc:219:make_patterns_logic$6297
Extracted 124 gates and 168 wires to a netlist network with 44 inputs and 65 outputs.

3.118.146.1. Executing ABC.

3.118.147. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i
Extracted 5873 gates and 6245 wires to a netlist network with 372 inputs and 1333 outputs.

3.118.147.1. Executing ABC.

3.118.148. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$369608$abc$250681$abc$195162$auto$opt_dff.cc:219:make_patterns_logic$8912
Extracted 2148 gates and 3247 wires to a netlist network with 1099 inputs and 586 outputs.

3.118.148.1. Executing ABC.

3.118.149. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$371946$abc$301523$abc$177372$auto$opt_dff.cc:219:make_patterns_logic$7305
Extracted 7637 gates and 8905 wires to a netlist network with 1268 inputs and 1807 outputs.

3.118.149.1. Executing ABC.

3.118.150. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$379696$abc$264613$abc$170535$auto$opt_dff.cc:219:make_patterns_logic$6042
Extracted 678 gates and 891 wires to a netlist network with 213 inputs and 109 outputs.

3.118.150.1. Executing ABC.

3.118.151. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$380388$abc$278582$abc$162244$auto$opt_dff.cc:219:make_patterns_logic$8118
Extracted 2005 gates and 2948 wires to a netlist network with 943 inputs and 708 outputs.

3.118.151.1. Executing ABC.

3.118.152. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$317260$abc$243298$abc$172728$auto$opt_dff.cc:219:make_patterns_logic$6829
Extracted 759 gates and 1010 wires to a netlist network with 251 inputs and 100 outputs.

3.118.152.1. Executing ABC.

3.118.153. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$311394$abc$236771$abc$184484$auto$opt_dff.cc:219:make_patterns_logic$6177
Extracted 95 gates and 162 wires to a netlist network with 67 inputs and 36 outputs.

3.118.153.1. Executing ABC.

3.118.154. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$332999$abc$270436$abc$163921$auto$opt_dff.cc:219:make_patterns_logic$8099
Extracted 8345 gates and 9975 wires to a netlist network with 1630 inputs and 2380 outputs.

3.118.154.1. Executing ABC.

3.118.155. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$382237$abc$266319$abc$174651$auto$opt_dff.cc:219:make_patterns_logic$7324
Extracted 2051 gates and 3096 wires to a netlist network with 1045 inputs and 720 outputs.

3.118.155.1. Executing ABC.

3.118.156. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$384715$abc$309236$abc$231801$auto$opt_dff.cc:194:make_patterns_logic$6001
Extracted 1282 gates and 2401 wires to a netlist network with 1119 inputs and 431 outputs.

3.118.156.1. Executing ABC.

yosys> opt_ffinv

3.119. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt_expr

3.120. Executing OPT_EXPR pass (perform const folding).
Optimizing module sha_top.
<suppressed ~1861 debug messages>

yosys> opt_merge -nomux

3.121. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sha_top'.
<suppressed ~510 debug messages>
Removed a total of 170 cells.

yosys> opt_muxtree

3.122. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sha_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.123. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sha_top.
Performed a total of 0 changes.

yosys> opt_merge

3.124. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sha_top'.
Removed a total of 0 cells.

yosys> opt_share

3.125. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.126. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.127. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sha_top..
Removed 0 unused cells and 347230 unused wires.
<suppressed ~99 debug messages>

yosys> opt_expr

3.128. Executing OPT_EXPR pass (perform const folding).
Optimizing module sha_top.
MAX OPT ITERATION = 1

yosys> bmuxmap

3.129. Executing BMUXMAP pass.

yosys> demuxmap

3.130. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> abc -script /tmp/yosys_bRbPhc/abc_tmp_1.scr

3.131. Executing ABC pass (technology mapping using ABC).

3.131.1. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Extracted 61186 gates and 71977 wires to a netlist network with 10791 inputs and 11132 outputs.

3.131.1.1. Executing ABC.
DE:   #PIs = 10791  #Luts = 22357  Max Lvl =  75  Avg Lvl =   7.11  [   1.87 sec. at Pass 0]
DE:   #PIs = 10791  #Luts = 20947  Max Lvl =  57  Avg Lvl =   5.52  [  54.74 sec. at Pass 1]
DE:   #PIs = 10791  #Luts = 20892  Max Lvl =  55  Avg Lvl =   5.74  [  27.93 sec. at Pass 2]
DE:   #PIs = 10791  #Luts = 20696  Max Lvl =  57  Avg Lvl =   5.75  [  49.60 sec. at Pass 3]
DE:   #PIs = 10791  #Luts = 20659  Max Lvl =  56  Avg Lvl =   5.74  [  10.29 sec. at Pass 4]

yosys> opt_expr

3.132. Executing OPT_EXPR pass (perform const folding).
Optimizing module sha_top.

yosys> opt_merge -nomux

3.133. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sha_top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

yosys> opt_muxtree

3.134. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sha_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.135. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sha_top.
Performed a total of 0 changes.

yosys> opt_merge

3.136. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sha_top'.
Removed a total of 0 cells.

yosys> opt_share

3.137. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.138. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.139. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sha_top..
Removed 0 unused cells and 69367 unused wires.
<suppressed ~29 debug messages>

yosys> opt_expr

3.140. Executing OPT_EXPR pass (perform const folding).
Optimizing module sha_top.
MAX OPT ITERATION = 1

yosys> opt_ffinv

3.141. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 4 inverters.

yosys> stat

3.142. Printing statistics.

=== sha_top ===

   Number of wires:              24355
   Number of wire bits:          39419
   Number of public wires:         127
   Number of public wire bits:    8603
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              31477
     $_DFFE_PP_                   8361
     $_DFF_P_                      155
     $lut                        20657
     adder_carry                  2304


yosys> shregmap -minlen 8 -maxlen 20

3.143. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.144. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.145. Printing statistics.

=== sha_top ===

   Number of wires:              24358
   Number of wire bits:          39422
   Number of public wires:         127
   Number of public wire bits:    8603
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              31477
     $_DFFE_PP0P_                 8361
     $_DFF_P_                      155
     $lut                        20657
     adder_carry                  2304


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.146. Executing TECHMAP pass (map to technology primitives).

3.146.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.146.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.146.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~37670 debug messages>

yosys> opt_expr -mux_undef

3.147. Executing OPT_EXPR pass (perform const folding).
Optimizing module sha_top.
<suppressed ~379240 debug messages>

yosys> simplemap

3.148. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.149. Executing OPT_EXPR pass (perform const folding).
Optimizing module sha_top.

yosys> opt_merge

3.150. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sha_top'.
<suppressed ~223389 debug messages>
Removed a total of 74463 cells.

yosys> opt_dff -nodffe -nosdff

3.151. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.152. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sha_top..
Removed 0 unused cells and 94767 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.153. Executing OPT_EXPR pass (perform const folding).
Optimizing module sha_top.
<suppressed ~10578 debug messages>

yosys> opt_merge -nomux

3.154. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sha_top'.
<suppressed ~1542 debug messages>
Removed a total of 514 cells.

yosys> opt_muxtree

3.155. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sha_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.156. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sha_top.
Performed a total of 0 changes.

yosys> opt_merge

3.157. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sha_top'.
Removed a total of 0 cells.

yosys> opt_share

3.158. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.159. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.160. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sha_top..
Removed 0 unused cells and 2807 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.161. Executing OPT_EXPR pass (perform const folding).
Optimizing module sha_top.
MAX OPT ITERATION = 1

yosys> abc -script /tmp/yosys_bRbPhc/abc_tmp_2.scr

3.162. Executing ABC pass (technology mapping using ABC).

3.162.1. Extracting gate netlist of module `\sha_top' to `<abc-temp-dir>/input.blif'..
Extracted 81013 gates and 91804 wires to a netlist network with 10789 inputs and 11126 outputs.

3.162.1.1. Executing ABC.
DE:   #PIs = 10789  #Luts = 20648  Max Lvl =  54  Avg Lvl =   5.73  [   4.11 sec. at Pass 0]
DE:   #PIs = 10789  #Luts = 20340  Max Lvl =  53  Avg Lvl =   5.67  [  62.09 sec. at Pass 1]
DE:   #PIs = 10789  #Luts = 20297  Max Lvl =  53  Avg Lvl =   5.76  [  19.78 sec. at Pass 2]
DE:   #PIs = 10789  #Luts = 20279  Max Lvl =  50  Avg Lvl =   5.68  [  29.09 sec. at Pass 3]
DE:   #PIs = 10789  #Luts = 20245  Max Lvl =  49  Avg Lvl =   5.68  [   5.47 sec. at Pass 4]

yosys> opt_expr

3.163. Executing OPT_EXPR pass (perform const folding).
Optimizing module sha_top.

yosys> opt_merge -nomux

3.164. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sha_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.165. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sha_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.166. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sha_top.
Performed a total of 0 changes.

yosys> opt_merge

3.167. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sha_top'.
Removed a total of 0 cells.

yosys> opt_share

3.168. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.169. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.170. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sha_top..
Removed 0 unused cells and 70990 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.171. Executing OPT_EXPR pass (perform const folding).
Optimizing module sha_top.
MAX OPT ITERATION = 1

yosys> hierarchy -check

3.172. Executing HIERARCHY pass (managing design hierarchy).

3.172.1. Analyzing design hierarchy..
Top module:  \sha_top

3.172.2. Analyzing design hierarchy..
Top module:  \sha_top
Removed 0 unused modules.

yosys> stat

3.173. Printing statistics.

=== sha_top ===

   Number of wires:              23943
   Number of wire bits:          39007
   Number of public wires:         127
   Number of public wire bits:    8603
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              31065
     $lut                        20245
     adder_carry                  2304
     dffsre                       8516


yosys> opt_clean -purge

3.174. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sha_top..
Removed 0 unused cells and 44 unused wires.
<suppressed ~44 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.175. Executing Verilog backend.
Dumping module `\sha_top'.

Warnings: 6 unique messages, 6 total
End of script. Logfile hash: 65d9bebe9b, CPU: user 757.54s system 26.66s, MEM: 1370.51 MB peak
Yosys 0.18+10 (git sha1 c98b0e94e, gcc 9.4.0 -fPIC -Os)
Time spent: 68% 6x abc (1038 sec), 9% 25x opt_clean (143 sec), ...
real 1182.86
user 1407.03
sys 108.78
