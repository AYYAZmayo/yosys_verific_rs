
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.37
 Yosys 0.17+76 (git sha1 2073f9d19, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Apr22_SW_Release, released at Thu Apr 28 20:08:21 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k demux.v mux.v wrapper_io_reg_max.v

yosys> verific -vlog2k demux.v mux.v wrapper_io_reg_max.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Apr22_SW_Release, released at Thu Apr 28 20:08:21 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'demux.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'mux.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'wrapper_io_reg_max.v'
VERIFIC-INFO [VERI-2561] wrapper_io_reg_max.v:15: undeclared symbol 'mux_out', assumed default net type 'wire'

yosys> synth_rs -top wrapper_io_reg_max -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.53

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\RS_DSP2_MULT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_sim'.
Generating RTLIL representation for module `\dsp_t1_20x18x64'.
Generating RTLIL representation for module `\dsp_t1_10x9x32'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top wrapper_io_reg_max

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] wrapper_io_reg_max.v:1: compiling module 'wrapper_io_reg_max'
VERIFIC-INFO [VERI-1018] mux.v:2: compiling module 'mux_128_2'
VERIFIC-WARNING [VERI-2580] mux.v:29: latch inferred for net 'in_internal1[127]'
VERIFIC-INFO [VERI-1018] mux.v:47: compiling module 'mux_128x1'
VERIFIC-INFO [VERI-1018] mux.v:61: compiling module 'mux_64x1'
VERIFIC-INFO [VERI-1018] mux.v:75: compiling module 'mux_32x1'
VERIFIC-INFO [VERI-1018] mux.v:89: compiling module 'mux_16x1'
VERIFIC-INFO [VERI-1018] mux.v:103: compiling module 'mux_8x1'
VERIFIC-INFO [VERI-1018] mux.v:117: compiling module 'mux_4x1'
VERIFIC-INFO [VERI-1018] mux.v:131: compiling module 'mux_2x1_reg'
VERIFIC-INFO [VERI-1018] mux.v:149: compiling module 'mux_2x1'
VERIFIC-WARNING [VERI-1330] mux.v:34: actual bit length 8 differs from formal bit length 7 for port 'sel'
VERIFIC-WARNING [VERI-1330] mux.v:40: actual bit length 8 differs from formal bit length 7 for port 'sel'
VERIFIC-WARNING [VERI-1330] wrapper_io_reg_max.v:15: actual bit length 7 differs from formal bit length 8 for port 'sel'
VERIFIC-INFO [VERI-1018] demux.v:2: compiling module 'demux_128_2'
VERIFIC-WARNING [VERI-2580] demux.v:29: latch inferred for net 'in_internal1'
VERIFIC-INFO [VERI-1018] demux.v:47: compiling module 'demux_1x128'
VERIFIC-INFO [VERI-1018] demux.v:133: compiling module 'demux_1x2'
VERIFIC-INFO [VERI-1018] demux.v:61: compiling module 'demux_1x64'
VERIFIC-INFO [VERI-1018] demux.v:75: compiling module 'demux_1x32'
VERIFIC-INFO [VERI-1018] demux.v:90: compiling module 'demux_1x16'
VERIFIC-INFO [VERI-1018] demux.v:104: compiling module 'demux_1x8'
VERIFIC-INFO [VERI-1018] demux.v:118: compiling module 'demux_1x4'
VERIFIC-INFO [VERI-1018] demux.v:142: compiling module 'demux_1x2_reg'
VERIFIC-WARNING [VERI-1330] demux.v:34: actual bit length 8 differs from formal bit length 7 for port 'sel'
VERIFIC-WARNING [VERI-1330] demux.v:40: actual bit length 8 differs from formal bit length 7 for port 'sel'
VERIFIC-WARNING [VERI-1330] wrapper_io_reg_max.v:16: actual bit length 7 differs from formal bit length 8 for port 'sel'
Importing module wrapper_io_reg_max.
Importing module demux_128_2.
Importing module demux_1x128.
Importing module demux_1x2.
Importing module demux_1x64.
Importing module demux_1x32.
Importing module demux_1x16.
Importing module demux_1x8.
Importing module demux_1x4.
Importing module demux_1x2_reg.
Importing module mux_128_2.
Importing module mux_128x1.
Importing module mux_2x1.
Importing module mux_64x1.
Importing module mux_32x1.
Importing module mux_16x1.
Importing module mux_8x1.
Importing module mux_4x1.
Importing module mux_2x1_reg.

3.3.1. Analyzing design hierarchy..
Top module:  \wrapper_io_reg_max
Used module:     \demux_128_2
Used module:         \demux_1x128
Used module:             \demux_1x64
Used module:                 \demux_1x32
Used module:                     \demux_1x16
Used module:                         \demux_1x8
Used module:                             \demux_1x4
Used module:                                 \demux_1x2_reg
Used module:                                 \demux_1x2
Used module:     \mux_128_2
Used module:         \mux_128x1
Used module:             \mux_2x1
Used module:             \mux_64x1
Used module:                 \mux_32x1
Used module:                     \mux_16x1
Used module:                         \mux_8x1
Used module:                             \mux_4x1
Used module:                                 \mux_2x1_reg

3.3.2. Analyzing design hierarchy..
Top module:  \wrapper_io_reg_max
Used module:     \demux_128_2
Used module:         \demux_1x128
Used module:             \demux_1x64
Used module:                 \demux_1x32
Used module:                     \demux_1x16
Used module:                         \demux_1x8
Used module:                             \demux_1x4
Used module:                                 \demux_1x2_reg
Used module:                                 \demux_1x2
Used module:     \mux_128_2
Used module:         \mux_128x1
Used module:             \mux_2x1
Used module:             \mux_64x1
Used module:                 \mux_32x1
Used module:                     \mux_16x1
Used module:                         \mux_8x1
Used module:                             \mux_4x1
Used module:                                 \mux_2x1_reg
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.4.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.4.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module mux_2x1_reg.
Optimizing module mux_4x1.
Optimizing module mux_8x1.
Optimizing module mux_16x1.
Optimizing module mux_32x1.
Optimizing module mux_64x1.
Optimizing module mux_2x1.
Optimizing module mux_128x1.
Optimizing module mux_128_2.
<suppressed ~12 debug messages>
Optimizing module demux_1x2_reg.
Optimizing module demux_1x4.
Optimizing module demux_1x8.
Optimizing module demux_1x16.
Optimizing module demux_1x32.
Optimizing module demux_1x64.
Optimizing module demux_1x2.
Optimizing module demux_1x128.
Optimizing module demux_128_2.
<suppressed ~7 debug messages>
Optimizing module wrapper_io_reg_max.

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).
Deleting now unused module mux_2x1_reg.
Deleting now unused module mux_4x1.
Deleting now unused module mux_8x1.
Deleting now unused module mux_16x1.
Deleting now unused module mux_32x1.
Deleting now unused module mux_64x1.
Deleting now unused module mux_2x1.
Deleting now unused module mux_128x1.
Deleting now unused module mux_128_2.
Deleting now unused module demux_1x2_reg.
Deleting now unused module demux_1x4.
Deleting now unused module demux_1x8.
Deleting now unused module demux_1x16.
Deleting now unused module demux_1x32.
Deleting now unused module demux_1x64.
Deleting now unused module demux_1x2.
Deleting now unused module demux_1x128.
Deleting now unused module demux_128_2.
<suppressed ~42 debug messages>

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_max.

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_reg_max..
Removed 1 unused cells and 8439 unused wires.
<suppressed ~905 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module wrapper_io_reg_max...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_max.

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_max'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wrapper_io_reg_max..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~283 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wrapper_io_reg_max.
  Optimizing cells in module \wrapper_io_reg_max.
Performed a total of 5 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_max'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Removing never-active CLR on $flatten\mux0.$verific$sel_internal1_reg$mux.v:29$986 ($dlatchsr) from module wrapper_io_reg_max.
Removing never-active ARST on $flatten\mux0.$verific$sel_internal1_reg$mux.v:29$986 ($dlatchsr) from module wrapper_io_reg_max.
Removing never-active CLR on $flatten\mux0.$verific$sel_internal0_reg$mux.v:29$971 ($dlatchsr) from module wrapper_io_reg_max.
Removing never-active ARST on $flatten\mux0.$verific$sel_internal0_reg$mux.v:29$971 ($dlatchsr) from module wrapper_io_reg_max.
Removing never-active CLR on $flatten\mux0.$verific$in_internal1_reg$mux.v:29$979 ($dlatchsr) from module wrapper_io_reg_max.
Removing never-active ARST on $flatten\mux0.$verific$in_internal1_reg$mux.v:29$979 ($dlatchsr) from module wrapper_io_reg_max.
Removing never-active CLR on $flatten\mux0.$verific$in_internal0_reg$mux.v:29$993 ($dlatchsr) from module wrapper_io_reg_max.
Removing never-active ARST on $flatten\mux0.$verific$in_internal0_reg$mux.v:29$993 ($dlatchsr) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active CLR on $flatten\demux0.$verific$sel_internal1_reg$demux.v:29$306 ($dlatchsr) from module wrapper_io_reg_max.
Removing never-active ARST on $flatten\demux0.$verific$sel_internal1_reg$demux.v:29$306 ($dlatchsr) from module wrapper_io_reg_max.
Removing never-active CLR on $flatten\demux0.$verific$sel_internal0_reg$demux.v:29$313 ($dlatchsr) from module wrapper_io_reg_max.
Removing never-active ARST on $flatten\demux0.$verific$sel_internal0_reg$demux.v:29$313 ($dlatchsr) from module wrapper_io_reg_max.
Setting constant 0-bit at position 7 on $flatten\demux0.$verific$sel_internal0_reg$demux.v:29$313 ($dlatch) from module wrapper_io_reg_max.
Setting constant 0-bit at position 7 on $flatten\demux0.$verific$sel_internal1_reg$demux.v:29$306 ($dlatch) from module wrapper_io_reg_max.
Setting constant 0-bit at position 7 on $flatten\mux0.$verific$sel_internal0_reg$mux.v:29$971 ($dlatch) from module wrapper_io_reg_max.
Setting constant 0-bit at position 7 on $flatten\mux0.$verific$sel_internal1_reg$mux.v:29$986 ($dlatch) from module wrapper_io_reg_max.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_reg_max..

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_max.
<suppressed ~3 debug messages>

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wrapper_io_reg_max..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $flatten\demux0.$verific$Mux_44$demux.v:28$305.
    dead port 2/2 on $mux $flatten\demux0.$verific$Mux_44$demux.v:28$305.
    dead port 1/2 on $mux $flatten\mux0.$verific$Mux_423$mux.v:28$978.
    dead port 2/2 on $mux $flatten\mux0.$verific$Mux_423$mux.v:28$978.
Removed 4 multiplexer ports.
<suppressed ~286 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wrapper_io_reg_max.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_max'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_reg_max..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_max.

3.11.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wrapper_io_reg_max..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~286 debug messages>

yosys> opt_reduce

3.11.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wrapper_io_reg_max.
Performed a total of 0 changes.

yosys> opt_merge

3.11.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_max'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_reg_max..

yosys> opt_expr

3.11.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_max.

3.11.23. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_reg_max..

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_max.

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_max'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wrapper_io_reg_max..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~286 debug messages>

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wrapper_io_reg_max.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_max'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_2.d64_2.d32_2.d16_2.d8_2.d4_0.out [1], Q = \demux0.inst1.d128_2.d64_2.d32_2.d16_2.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_2.d64_2.d32_2.d16_2.d8_2.d4_0.out [1], Q = \demux0.inst1.d128_2.d64_2.d32_2.d16_2.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_2.d64_2.d32_2.d16_2.d8_2.d4_0.out [0], Q = \demux0.inst1.d128_2.d64_2.d32_2.d16_2.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_2.d64_2.d32_2.d16_2.d8_2.d4_0.out [0], Q = \demux0.inst1.d128_2.d64_2.d32_2.d16_2.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_2.d64_2.d32_2.d16_2.d8_1.d4_0.out [1], Q = \demux0.inst1.d128_2.d64_2.d32_2.d16_2.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_2.d64_2.d32_2.d16_2.d8_1.d4_0.out [1], Q = \demux0.inst1.d128_2.d64_2.d32_2.d16_2.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_2.d64_2.d32_2.d16_2.d8_1.d4_0.out [0], Q = \demux0.inst1.d128_2.d64_2.d32_2.d16_2.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_2.d64_2.d32_2.d16_2.d8_1.d4_0.out [0], Q = \demux0.inst1.d128_2.d64_2.d32_2.d16_2.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_2.d64_2.d32_2.d16_1.d8_2.d4_0.out [1], Q = \demux0.inst1.d128_2.d64_2.d32_2.d16_1.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_2.d64_2.d32_2.d16_1.d8_2.d4_0.out [1], Q = \demux0.inst1.d128_2.d64_2.d32_2.d16_1.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_2.d64_2.d32_2.d16_1.d8_2.d4_0.out [0], Q = \demux0.inst1.d128_2.d64_2.d32_2.d16_1.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_2.d64_2.d32_2.d16_1.d8_2.d4_0.out [0], Q = \demux0.inst1.d128_2.d64_2.d32_2.d16_1.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_2.d64_2.d32_2.d16_1.d8_1.d4_0.out [1], Q = \demux0.inst1.d128_2.d64_2.d32_2.d16_1.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_2.d64_2.d32_2.d16_1.d8_1.d4_0.out [1], Q = \demux0.inst1.d128_2.d64_2.d32_2.d16_1.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_2.d64_2.d32_2.d16_1.d8_1.d4_0.out [0], Q = \demux0.inst1.d128_2.d64_2.d32_2.d16_1.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_2.d64_2.d32_2.d16_1.d8_1.d4_0.out [0], Q = \demux0.inst1.d128_2.d64_2.d32_2.d16_1.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_2.d64_2.d32_1.d16_2.d8_2.d4_0.out [1], Q = \demux0.inst1.d128_2.d64_2.d32_1.d16_2.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_2.d64_2.d32_1.d16_2.d8_2.d4_0.out [1], Q = \demux0.inst1.d128_2.d64_2.d32_1.d16_2.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_2.d64_2.d32_1.d16_2.d8_2.d4_0.out [0], Q = \demux0.inst1.d128_2.d64_2.d32_1.d16_2.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_2.d64_2.d32_1.d16_2.d8_2.d4_0.out [0], Q = \demux0.inst1.d128_2.d64_2.d32_1.d16_2.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_2.d64_2.d32_1.d16_2.d8_1.d4_0.out [1], Q = \demux0.inst1.d128_2.d64_2.d32_1.d16_2.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_2.d64_2.d32_1.d16_2.d8_1.d4_0.out [1], Q = \demux0.inst1.d128_2.d64_2.d32_1.d16_2.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_2.d64_2.d32_1.d16_2.d8_1.d4_0.out [0], Q = \demux0.inst1.d128_2.d64_2.d32_1.d16_2.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_2.d64_2.d32_1.d16_2.d8_1.d4_0.out [0], Q = \demux0.inst1.d128_2.d64_2.d32_1.d16_2.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_2.d64_2.d32_1.d16_1.d8_2.d4_0.out [1], Q = \demux0.inst1.d128_2.d64_2.d32_1.d16_1.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_2.d64_2.d32_1.d16_1.d8_2.d4_0.out [1], Q = \demux0.inst1.d128_2.d64_2.d32_1.d16_1.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_2.d64_2.d32_1.d16_1.d8_2.d4_0.out [0], Q = \demux0.inst1.d128_2.d64_2.d32_1.d16_1.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_2.d64_2.d32_1.d16_1.d8_2.d4_0.out [0], Q = \demux0.inst1.d128_2.d64_2.d32_1.d16_1.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_2.d64_2.d32_1.d16_1.d8_1.d4_0.out [1], Q = \demux0.inst1.d128_2.d64_2.d32_1.d16_1.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_2.d64_2.d32_1.d16_1.d8_1.d4_0.out [1], Q = \demux0.inst1.d128_2.d64_2.d32_1.d16_1.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_2.d64_2.d32_1.d16_1.d8_1.d4_0.out [0], Q = \demux0.inst1.d128_2.d64_2.d32_1.d16_1.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_2.d64_2.d32_1.d16_1.d8_1.d4_0.out [0], Q = \demux0.inst1.d128_2.d64_2.d32_1.d16_1.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_2.d64_1.d32_2.d16_2.d8_2.d4_0.out [1], Q = \demux0.inst1.d128_2.d64_1.d32_2.d16_2.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_2.d64_1.d32_2.d16_2.d8_2.d4_0.out [1], Q = \demux0.inst1.d128_2.d64_1.d32_2.d16_2.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_2.d64_1.d32_2.d16_2.d8_2.d4_0.out [0], Q = \demux0.inst1.d128_2.d64_1.d32_2.d16_2.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_2.d64_1.d32_2.d16_2.d8_2.d4_0.out [0], Q = \demux0.inst1.d128_2.d64_1.d32_2.d16_2.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_2.d64_1.d32_2.d16_2.d8_1.d4_0.out [1], Q = \demux0.inst1.d128_2.d64_1.d32_2.d16_2.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_2.d64_1.d32_2.d16_2.d8_1.d4_0.out [1], Q = \demux0.inst1.d128_2.d64_1.d32_2.d16_2.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_2.d64_1.d32_2.d16_2.d8_1.d4_0.out [0], Q = \demux0.inst1.d128_2.d64_1.d32_2.d16_2.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_2.d64_1.d32_2.d16_2.d8_1.d4_0.out [0], Q = \demux0.inst1.d128_2.d64_1.d32_2.d16_2.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_2.d64_1.d32_2.d16_1.d8_2.d4_0.out [1], Q = \demux0.inst1.d128_2.d64_1.d32_2.d16_1.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_2.d64_1.d32_2.d16_1.d8_2.d4_0.out [1], Q = \demux0.inst1.d128_2.d64_1.d32_2.d16_1.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_2.d64_1.d32_2.d16_1.d8_2.d4_0.out [0], Q = \demux0.inst1.d128_2.d64_1.d32_2.d16_1.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_2.d64_1.d32_2.d16_1.d8_2.d4_0.out [0], Q = \demux0.inst1.d128_2.d64_1.d32_2.d16_1.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_2.d64_1.d32_2.d16_1.d8_1.d4_0.out [1], Q = \demux0.inst1.d128_2.d64_1.d32_2.d16_1.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_2.d64_1.d32_2.d16_1.d8_1.d4_0.out [1], Q = \demux0.inst1.d128_2.d64_1.d32_2.d16_1.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_2.d64_1.d32_2.d16_1.d8_1.d4_0.out [0], Q = \demux0.inst1.d128_2.d64_1.d32_2.d16_1.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_2.d64_1.d32_2.d16_1.d8_1.d4_0.out [0], Q = \demux0.inst1.d128_2.d64_1.d32_2.d16_1.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_2.d64_1.d32_1.d16_2.d8_2.d4_0.out [1], Q = \demux0.inst1.d128_2.d64_1.d32_1.d16_2.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_2.d64_1.d32_1.d16_2.d8_2.d4_0.out [1], Q = \demux0.inst1.d128_2.d64_1.d32_1.d16_2.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_2.d64_1.d32_1.d16_2.d8_2.d4_0.out [0], Q = \demux0.inst1.d128_2.d64_1.d32_1.d16_2.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_2.d64_1.d32_1.d16_2.d8_2.d4_0.out [0], Q = \demux0.inst1.d128_2.d64_1.d32_1.d16_2.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_2.d64_1.d32_1.d16_2.d8_1.d4_0.out [1], Q = \demux0.inst1.d128_2.d64_1.d32_1.d16_2.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_2.d64_1.d32_1.d16_2.d8_1.d4_0.out [1], Q = \demux0.inst1.d128_2.d64_1.d32_1.d16_2.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_2.d64_1.d32_1.d16_2.d8_1.d4_0.out [0], Q = \demux0.inst1.d128_2.d64_1.d32_1.d16_2.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_2.d64_1.d32_1.d16_2.d8_1.d4_0.out [0], Q = \demux0.inst1.d128_2.d64_1.d32_1.d16_2.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_2.d64_1.d32_1.d16_1.d8_2.d4_0.out [1], Q = \demux0.inst1.d128_2.d64_1.d32_1.d16_1.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_2.d64_1.d32_1.d16_1.d8_2.d4_0.out [1], Q = \demux0.inst1.d128_2.d64_1.d32_1.d16_1.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_2.d64_1.d32_1.d16_1.d8_2.d4_0.out [0], Q = \demux0.inst1.d128_2.d64_1.d32_1.d16_1.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_2.d64_1.d32_1.d16_1.d8_2.d4_0.out [0], Q = \demux0.inst1.d128_2.d64_1.d32_1.d16_1.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_2.d64_1.d32_1.d16_1.d8_1.d4_0.out [1], Q = \demux0.inst1.d128_2.d64_1.d32_1.d16_1.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_2.d64_1.d32_1.d16_1.d8_1.d4_0.out [1], Q = \demux0.inst1.d128_2.d64_1.d32_1.d16_1.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_2.d64_1.d32_1.d16_1.d8_1.d4_0.out [0], Q = \demux0.inst1.d128_2.d64_1.d32_1.d16_1.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_2.d64_1.d32_1.d16_1.d8_1.d4_0.out [0], Q = \demux0.inst1.d128_2.d64_1.d32_1.d16_1.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_1.d64_2.d32_2.d16_2.d8_2.d4_0.out [1], Q = \demux0.inst1.d128_1.d64_2.d32_2.d16_2.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_1.d64_2.d32_2.d16_2.d8_2.d4_0.out [1], Q = \demux0.inst1.d128_1.d64_2.d32_2.d16_2.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_1.d64_2.d32_2.d16_2.d8_2.d4_0.out [0], Q = \demux0.inst1.d128_1.d64_2.d32_2.d16_2.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_1.d64_2.d32_2.d16_2.d8_2.d4_0.out [0], Q = \demux0.inst1.d128_1.d64_2.d32_2.d16_2.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_1.d64_2.d32_2.d16_2.d8_1.d4_0.out [1], Q = \demux0.inst1.d128_1.d64_2.d32_2.d16_2.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_1.d64_2.d32_2.d16_2.d8_1.d4_0.out [1], Q = \demux0.inst1.d128_1.d64_2.d32_2.d16_2.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_1.d64_2.d32_2.d16_2.d8_1.d4_0.out [0], Q = \demux0.inst1.d128_1.d64_2.d32_2.d16_2.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_1.d64_2.d32_2.d16_2.d8_1.d4_0.out [0], Q = \demux0.inst1.d128_1.d64_2.d32_2.d16_2.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_1.d64_2.d32_2.d16_1.d8_2.d4_0.out [1], Q = \demux0.inst1.d128_1.d64_2.d32_2.d16_1.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_1.d64_2.d32_2.d16_1.d8_2.d4_0.out [1], Q = \demux0.inst1.d128_1.d64_2.d32_2.d16_1.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_1.d64_2.d32_2.d16_1.d8_2.d4_0.out [0], Q = \demux0.inst1.d128_1.d64_2.d32_2.d16_1.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_1.d64_2.d32_2.d16_1.d8_2.d4_0.out [0], Q = \demux0.inst1.d128_1.d64_2.d32_2.d16_1.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_1.d64_2.d32_2.d16_1.d8_1.d4_0.out [1], Q = \demux0.inst1.d128_1.d64_2.d32_2.d16_1.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_1.d64_2.d32_2.d16_1.d8_1.d4_0.out [1], Q = \demux0.inst1.d128_1.d64_2.d32_2.d16_1.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_1.d64_2.d32_2.d16_1.d8_1.d4_0.out [0], Q = \demux0.inst1.d128_1.d64_2.d32_2.d16_1.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_1.d64_2.d32_2.d16_1.d8_1.d4_0.out [0], Q = \demux0.inst1.d128_1.d64_2.d32_2.d16_1.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_1.d64_2.d32_1.d16_2.d8_2.d4_0.out [1], Q = \demux0.inst1.d128_1.d64_2.d32_1.d16_2.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_1.d64_2.d32_1.d16_2.d8_2.d4_0.out [1], Q = \demux0.inst1.d128_1.d64_2.d32_1.d16_2.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_1.d64_2.d32_1.d16_2.d8_2.d4_0.out [0], Q = \demux0.inst1.d128_1.d64_2.d32_1.d16_2.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_1.d64_2.d32_1.d16_2.d8_2.d4_0.out [0], Q = \demux0.inst1.d128_1.d64_2.d32_1.d16_2.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_1.d64_2.d32_1.d16_2.d8_1.d4_0.out [1], Q = \demux0.inst1.d128_1.d64_2.d32_1.d16_2.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_1.d64_2.d32_1.d16_2.d8_1.d4_0.out [1], Q = \demux0.inst1.d128_1.d64_2.d32_1.d16_2.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_1.d64_2.d32_1.d16_2.d8_1.d4_0.out [0], Q = \demux0.inst1.d128_1.d64_2.d32_1.d16_2.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_1.d64_2.d32_1.d16_2.d8_1.d4_0.out [0], Q = \demux0.inst1.d128_1.d64_2.d32_1.d16_2.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_1.d64_2.d32_1.d16_1.d8_2.d4_0.out [1], Q = \demux0.inst1.d128_1.d64_2.d32_1.d16_1.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_1.d64_2.d32_1.d16_1.d8_2.d4_0.out [1], Q = \demux0.inst1.d128_1.d64_2.d32_1.d16_1.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_1.d64_2.d32_1.d16_1.d8_2.d4_0.out [0], Q = \demux0.inst1.d128_1.d64_2.d32_1.d16_1.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_1.d64_2.d32_1.d16_1.d8_2.d4_0.out [0], Q = \demux0.inst1.d128_1.d64_2.d32_1.d16_1.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_1.d64_2.d32_1.d16_1.d8_1.d4_0.out [1], Q = \demux0.inst1.d128_1.d64_2.d32_1.d16_1.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_1.d64_2.d32_1.d16_1.d8_1.d4_0.out [1], Q = \demux0.inst1.d128_1.d64_2.d32_1.d16_1.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_1.d64_2.d32_1.d16_1.d8_1.d4_0.out [0], Q = \demux0.inst1.d128_1.d64_2.d32_1.d16_1.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_1.d64_2.d32_1.d16_1.d8_1.d4_0.out [0], Q = \demux0.inst1.d128_1.d64_2.d32_1.d16_1.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_1.d64_1.d32_2.d16_2.d8_2.d4_0.out [1], Q = \demux0.inst1.d128_1.d64_1.d32_2.d16_2.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_1.d64_1.d32_2.d16_2.d8_2.d4_0.out [1], Q = \demux0.inst1.d128_1.d64_1.d32_2.d16_2.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_1.d64_1.d32_2.d16_2.d8_2.d4_0.out [0], Q = \demux0.inst1.d128_1.d64_1.d32_2.d16_2.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_1.d64_1.d32_2.d16_2.d8_2.d4_0.out [0], Q = \demux0.inst1.d128_1.d64_1.d32_2.d16_2.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_1.d64_1.d32_2.d16_2.d8_1.d4_0.out [1], Q = \demux0.inst1.d128_1.d64_1.d32_2.d16_2.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_1.d64_1.d32_2.d16_2.d8_1.d4_0.out [1], Q = \demux0.inst1.d128_1.d64_1.d32_2.d16_2.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_1.d64_1.d32_2.d16_2.d8_1.d4_0.out [0], Q = \demux0.inst1.d128_1.d64_1.d32_2.d16_2.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_1.d64_1.d32_2.d16_2.d8_1.d4_0.out [0], Q = \demux0.inst1.d128_1.d64_1.d32_2.d16_2.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_1.d64_1.d32_2.d16_1.d8_2.d4_0.out [1], Q = \demux0.inst1.d128_1.d64_1.d32_2.d16_1.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_1.d64_1.d32_2.d16_1.d8_2.d4_0.out [1], Q = \demux0.inst1.d128_1.d64_1.d32_2.d16_1.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_1.d64_1.d32_2.d16_1.d8_2.d4_0.out [0], Q = \demux0.inst1.d128_1.d64_1.d32_2.d16_1.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_1.d64_1.d32_2.d16_1.d8_2.d4_0.out [0], Q = \demux0.inst1.d128_1.d64_1.d32_2.d16_1.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_1.d64_1.d32_2.d16_1.d8_1.d4_0.out [1], Q = \demux0.inst1.d128_1.d64_1.d32_2.d16_1.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_1.d64_1.d32_2.d16_1.d8_1.d4_0.out [1], Q = \demux0.inst1.d128_1.d64_1.d32_2.d16_1.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_1.d64_1.d32_2.d16_1.d8_1.d4_0.out [0], Q = \demux0.inst1.d128_1.d64_1.d32_2.d16_1.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_1.d64_1.d32_2.d16_1.d8_1.d4_0.out [0], Q = \demux0.inst1.d128_1.d64_1.d32_2.d16_1.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_1.d64_1.d32_1.d16_2.d8_2.d4_0.out [1], Q = \demux0.inst1.d128_1.d64_1.d32_1.d16_2.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_1.d64_1.d32_1.d16_2.d8_2.d4_0.out [1], Q = \demux0.inst1.d128_1.d64_1.d32_1.d16_2.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_1.d64_1.d32_1.d16_2.d8_2.d4_0.out [0], Q = \demux0.inst1.d128_1.d64_1.d32_1.d16_2.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_1.d64_1.d32_1.d16_2.d8_2.d4_0.out [0], Q = \demux0.inst1.d128_1.d64_1.d32_1.d16_2.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_1.d64_1.d32_1.d16_2.d8_1.d4_0.out [1], Q = \demux0.inst1.d128_1.d64_1.d32_1.d16_2.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_1.d64_1.d32_1.d16_2.d8_1.d4_0.out [1], Q = \demux0.inst1.d128_1.d64_1.d32_1.d16_2.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_1.d64_1.d32_1.d16_2.d8_1.d4_0.out [0], Q = \demux0.inst1.d128_1.d64_1.d32_1.d16_2.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_1.d64_1.d32_1.d16_2.d8_1.d4_0.out [0], Q = \demux0.inst1.d128_1.d64_1.d32_1.d16_2.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_1.d64_1.d32_1.d16_1.d8_2.d4_0.out [1], Q = \demux0.inst1.d128_1.d64_1.d32_1.d16_1.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_1.d64_1.d32_1.d16_1.d8_2.d4_0.out [1], Q = \demux0.inst1.d128_1.d64_1.d32_1.d16_1.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_1.d64_1.d32_1.d16_1.d8_2.d4_0.out [0], Q = \demux0.inst1.d128_1.d64_1.d32_1.d16_1.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_1.d64_1.d32_1.d16_1.d8_2.d4_0.out [0], Q = \demux0.inst1.d128_1.d64_1.d32_1.d16_1.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_1.d64_1.d32_1.d16_1.d8_1.d4_0.out [1], Q = \demux0.inst1.d128_1.d64_1.d32_1.d16_1.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_1.d64_1.d32_1.d16_1.d8_1.d4_0.out [1], Q = \demux0.inst1.d128_1.d64_1.d32_1.d16_1.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_1.d64_1.d32_1.d16_1.d8_1.d4_0.out [0], Q = \demux0.inst1.d128_1.d64_1.d32_1.d16_1.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst1.d128_1.d64_1.d32_1.d16_1.d8_1.d4_0.out [0], Q = \demux0.inst1.d128_1.d64_1.d32_1.d16_1.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_2.d64_2.d32_2.d16_2.d8_2.d4_0.out [1], Q = \demux0.inst0.d128_2.d64_2.d32_2.d16_2.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_2.d64_2.d32_2.d16_2.d8_2.d4_0.out [1], Q = \demux0.inst0.d128_2.d64_2.d32_2.d16_2.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_2.d64_2.d32_2.d16_2.d8_2.d4_0.out [0], Q = \demux0.inst0.d128_2.d64_2.d32_2.d16_2.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_2.d64_2.d32_2.d16_2.d8_2.d4_0.out [0], Q = \demux0.inst0.d128_2.d64_2.d32_2.d16_2.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_2.d64_2.d32_2.d16_2.d8_1.d4_0.out [1], Q = \demux0.inst0.d128_2.d64_2.d32_2.d16_2.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_2.d64_2.d32_2.d16_2.d8_1.d4_0.out [1], Q = \demux0.inst0.d128_2.d64_2.d32_2.d16_2.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_2.d64_2.d32_2.d16_2.d8_1.d4_0.out [0], Q = \demux0.inst0.d128_2.d64_2.d32_2.d16_2.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_2.d64_2.d32_2.d16_2.d8_1.d4_0.out [0], Q = \demux0.inst0.d128_2.d64_2.d32_2.d16_2.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_2.d64_2.d32_2.d16_1.d8_2.d4_0.out [1], Q = \demux0.inst0.d128_2.d64_2.d32_2.d16_1.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_2.d64_2.d32_2.d16_1.d8_2.d4_0.out [1], Q = \demux0.inst0.d128_2.d64_2.d32_2.d16_1.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_2.d64_2.d32_2.d16_1.d8_2.d4_0.out [0], Q = \demux0.inst0.d128_2.d64_2.d32_2.d16_1.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_2.d64_2.d32_2.d16_1.d8_2.d4_0.out [0], Q = \demux0.inst0.d128_2.d64_2.d32_2.d16_1.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_2.d64_2.d32_2.d16_1.d8_1.d4_0.out [1], Q = \demux0.inst0.d128_2.d64_2.d32_2.d16_1.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_2.d64_2.d32_2.d16_1.d8_1.d4_0.out [1], Q = \demux0.inst0.d128_2.d64_2.d32_2.d16_1.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_2.d64_2.d32_2.d16_1.d8_1.d4_0.out [0], Q = \demux0.inst0.d128_2.d64_2.d32_2.d16_1.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_2.d64_2.d32_2.d16_1.d8_1.d4_0.out [0], Q = \demux0.inst0.d128_2.d64_2.d32_2.d16_1.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_2.d64_2.d32_1.d16_2.d8_2.d4_0.out [1], Q = \demux0.inst0.d128_2.d64_2.d32_1.d16_2.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_2.d64_2.d32_1.d16_2.d8_2.d4_0.out [1], Q = \demux0.inst0.d128_2.d64_2.d32_1.d16_2.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_2.d64_2.d32_1.d16_2.d8_2.d4_0.out [0], Q = \demux0.inst0.d128_2.d64_2.d32_1.d16_2.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_2.d64_2.d32_1.d16_2.d8_2.d4_0.out [0], Q = \demux0.inst0.d128_2.d64_2.d32_1.d16_2.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_2.d64_2.d32_1.d16_2.d8_1.d4_0.out [1], Q = \demux0.inst0.d128_2.d64_2.d32_1.d16_2.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_2.d64_2.d32_1.d16_2.d8_1.d4_0.out [1], Q = \demux0.inst0.d128_2.d64_2.d32_1.d16_2.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_2.d64_2.d32_1.d16_2.d8_1.d4_0.out [0], Q = \demux0.inst0.d128_2.d64_2.d32_1.d16_2.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_2.d64_2.d32_1.d16_2.d8_1.d4_0.out [0], Q = \demux0.inst0.d128_2.d64_2.d32_1.d16_2.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_2.d64_2.d32_1.d16_1.d8_2.d4_0.out [1], Q = \demux0.inst0.d128_2.d64_2.d32_1.d16_1.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_2.d64_2.d32_1.d16_1.d8_2.d4_0.out [1], Q = \demux0.inst0.d128_2.d64_2.d32_1.d16_1.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_2.d64_2.d32_1.d16_1.d8_2.d4_0.out [0], Q = \demux0.inst0.d128_2.d64_2.d32_1.d16_1.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_2.d64_2.d32_1.d16_1.d8_2.d4_0.out [0], Q = \demux0.inst0.d128_2.d64_2.d32_1.d16_1.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_2.d64_2.d32_1.d16_1.d8_1.d4_0.out [1], Q = \demux0.inst0.d128_2.d64_2.d32_1.d16_1.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_2.d64_2.d32_1.d16_1.d8_1.d4_0.out [1], Q = \demux0.inst0.d128_2.d64_2.d32_1.d16_1.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_2.d64_2.d32_1.d16_1.d8_1.d4_0.out [0], Q = \demux0.inst0.d128_2.d64_2.d32_1.d16_1.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_2.d64_2.d32_1.d16_1.d8_1.d4_0.out [0], Q = \demux0.inst0.d128_2.d64_2.d32_1.d16_1.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_2.d64_1.d32_2.d16_2.d8_2.d4_0.out [1], Q = \demux0.inst0.d128_2.d64_1.d32_2.d16_2.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_2.d64_1.d32_2.d16_2.d8_2.d4_0.out [1], Q = \demux0.inst0.d128_2.d64_1.d32_2.d16_2.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_2.d64_1.d32_2.d16_2.d8_2.d4_0.out [0], Q = \demux0.inst0.d128_2.d64_1.d32_2.d16_2.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_2.d64_1.d32_2.d16_2.d8_2.d4_0.out [0], Q = \demux0.inst0.d128_2.d64_1.d32_2.d16_2.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_2.d64_1.d32_2.d16_2.d8_1.d4_0.out [1], Q = \demux0.inst0.d128_2.d64_1.d32_2.d16_2.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_2.d64_1.d32_2.d16_2.d8_1.d4_0.out [1], Q = \demux0.inst0.d128_2.d64_1.d32_2.d16_2.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_2.d64_1.d32_2.d16_2.d8_1.d4_0.out [0], Q = \demux0.inst0.d128_2.d64_1.d32_2.d16_2.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_2.d64_1.d32_2.d16_2.d8_1.d4_0.out [0], Q = \demux0.inst0.d128_2.d64_1.d32_2.d16_2.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_2.d64_1.d32_2.d16_1.d8_2.d4_0.out [1], Q = \demux0.inst0.d128_2.d64_1.d32_2.d16_1.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_2.d64_1.d32_2.d16_1.d8_2.d4_0.out [1], Q = \demux0.inst0.d128_2.d64_1.d32_2.d16_1.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_2.d64_1.d32_2.d16_1.d8_2.d4_0.out [0], Q = \demux0.inst0.d128_2.d64_1.d32_2.d16_1.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_2.d64_1.d32_2.d16_1.d8_2.d4_0.out [0], Q = \demux0.inst0.d128_2.d64_1.d32_2.d16_1.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_2.d64_1.d32_2.d16_1.d8_1.d4_0.out [1], Q = \demux0.inst0.d128_2.d64_1.d32_2.d16_1.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_2.d64_1.d32_2.d16_1.d8_1.d4_0.out [1], Q = \demux0.inst0.d128_2.d64_1.d32_2.d16_1.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_2.d64_1.d32_2.d16_1.d8_1.d4_0.out [0], Q = \demux0.inst0.d128_2.d64_1.d32_2.d16_1.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_2.d64_1.d32_2.d16_1.d8_1.d4_0.out [0], Q = \demux0.inst0.d128_2.d64_1.d32_2.d16_1.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_2.d64_1.d32_1.d16_2.d8_2.d4_0.out [1], Q = \demux0.inst0.d128_2.d64_1.d32_1.d16_2.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_2.d64_1.d32_1.d16_2.d8_2.d4_0.out [1], Q = \demux0.inst0.d128_2.d64_1.d32_1.d16_2.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_2.d64_1.d32_1.d16_2.d8_2.d4_0.out [0], Q = \demux0.inst0.d128_2.d64_1.d32_1.d16_2.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_2.d64_1.d32_1.d16_2.d8_2.d4_0.out [0], Q = \demux0.inst0.d128_2.d64_1.d32_1.d16_2.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_2.d64_1.d32_1.d16_2.d8_1.d4_0.out [1], Q = \demux0.inst0.d128_2.d64_1.d32_1.d16_2.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_2.d64_1.d32_1.d16_2.d8_1.d4_0.out [1], Q = \demux0.inst0.d128_2.d64_1.d32_1.d16_2.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_2.d64_1.d32_1.d16_2.d8_1.d4_0.out [0], Q = \demux0.inst0.d128_2.d64_1.d32_1.d16_2.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_2.d64_1.d32_1.d16_2.d8_1.d4_0.out [0], Q = \demux0.inst0.d128_2.d64_1.d32_1.d16_2.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_2.d64_1.d32_1.d16_1.d8_2.d4_0.out [1], Q = \demux0.inst0.d128_2.d64_1.d32_1.d16_1.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_2.d64_1.d32_1.d16_1.d8_2.d4_0.out [1], Q = \demux0.inst0.d128_2.d64_1.d32_1.d16_1.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_2.d64_1.d32_1.d16_1.d8_2.d4_0.out [0], Q = \demux0.inst0.d128_2.d64_1.d32_1.d16_1.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_2.d64_1.d32_1.d16_1.d8_2.d4_0.out [0], Q = \demux0.inst0.d128_2.d64_1.d32_1.d16_1.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_2.d64_1.d32_1.d16_1.d8_1.d4_0.out [1], Q = \demux0.inst0.d128_2.d64_1.d32_1.d16_1.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_2.d64_1.d32_1.d16_1.d8_1.d4_0.out [1], Q = \demux0.inst0.d128_2.d64_1.d32_1.d16_1.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_2.d64_1.d32_1.d16_1.d8_1.d4_0.out [0], Q = \demux0.inst0.d128_2.d64_1.d32_1.d16_1.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_2.d64_1.d32_1.d16_1.d8_1.d4_0.out [0], Q = \demux0.inst0.d128_2.d64_1.d32_1.d16_1.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_1.d64_2.d32_2.d16_2.d8_2.d4_0.out [1], Q = \demux0.inst0.d128_1.d64_2.d32_2.d16_2.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_1.d64_2.d32_2.d16_2.d8_2.d4_0.out [1], Q = \demux0.inst0.d128_1.d64_2.d32_2.d16_2.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_1.d64_2.d32_2.d16_2.d8_2.d4_0.out [0], Q = \demux0.inst0.d128_1.d64_2.d32_2.d16_2.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_1.d64_2.d32_2.d16_2.d8_2.d4_0.out [0], Q = \demux0.inst0.d128_1.d64_2.d32_2.d16_2.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_1.d64_2.d32_2.d16_2.d8_1.d4_0.out [1], Q = \demux0.inst0.d128_1.d64_2.d32_2.d16_2.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_1.d64_2.d32_2.d16_2.d8_1.d4_0.out [1], Q = \demux0.inst0.d128_1.d64_2.d32_2.d16_2.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_1.d64_2.d32_2.d16_2.d8_1.d4_0.out [0], Q = \demux0.inst0.d128_1.d64_2.d32_2.d16_2.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_1.d64_2.d32_2.d16_2.d8_1.d4_0.out [0], Q = \demux0.inst0.d128_1.d64_2.d32_2.d16_2.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_1.d64_2.d32_2.d16_1.d8_2.d4_0.out [1], Q = \demux0.inst0.d128_1.d64_2.d32_2.d16_1.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_1.d64_2.d32_2.d16_1.d8_2.d4_0.out [1], Q = \demux0.inst0.d128_1.d64_2.d32_2.d16_1.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_1.d64_2.d32_2.d16_1.d8_2.d4_0.out [0], Q = \demux0.inst0.d128_1.d64_2.d32_2.d16_1.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_1.d64_2.d32_2.d16_1.d8_2.d4_0.out [0], Q = \demux0.inst0.d128_1.d64_2.d32_2.d16_1.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_1.d64_2.d32_2.d16_1.d8_1.d4_0.out [1], Q = \demux0.inst0.d128_1.d64_2.d32_2.d16_1.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_1.d64_2.d32_2.d16_1.d8_1.d4_0.out [1], Q = \demux0.inst0.d128_1.d64_2.d32_2.d16_1.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_1.d64_2.d32_2.d16_1.d8_1.d4_0.out [0], Q = \demux0.inst0.d128_1.d64_2.d32_2.d16_1.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_1.d64_2.d32_2.d16_1.d8_1.d4_0.out [0], Q = \demux0.inst0.d128_1.d64_2.d32_2.d16_1.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_1.d64_2.d32_1.d16_2.d8_2.d4_0.out [1], Q = \demux0.inst0.d128_1.d64_2.d32_1.d16_2.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_1.d64_2.d32_1.d16_2.d8_2.d4_0.out [1], Q = \demux0.inst0.d128_1.d64_2.d32_1.d16_2.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_1.d64_2.d32_1.d16_2.d8_2.d4_0.out [0], Q = \demux0.inst0.d128_1.d64_2.d32_1.d16_2.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_1.d64_2.d32_1.d16_2.d8_2.d4_0.out [0], Q = \demux0.inst0.d128_1.d64_2.d32_1.d16_2.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_1.d64_2.d32_1.d16_2.d8_1.d4_0.out [1], Q = \demux0.inst0.d128_1.d64_2.d32_1.d16_2.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_1.d64_2.d32_1.d16_2.d8_1.d4_0.out [1], Q = \demux0.inst0.d128_1.d64_2.d32_1.d16_2.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_1.d64_2.d32_1.d16_2.d8_1.d4_0.out [0], Q = \demux0.inst0.d128_1.d64_2.d32_1.d16_2.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_1.d64_2.d32_1.d16_2.d8_1.d4_0.out [0], Q = \demux0.inst0.d128_1.d64_2.d32_1.d16_2.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_1.d64_2.d32_1.d16_1.d8_2.d4_0.out [1], Q = \demux0.inst0.d128_1.d64_2.d32_1.d16_1.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_1.d64_2.d32_1.d16_1.d8_2.d4_0.out [1], Q = \demux0.inst0.d128_1.d64_2.d32_1.d16_1.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_1.d64_2.d32_1.d16_1.d8_2.d4_0.out [0], Q = \demux0.inst0.d128_1.d64_2.d32_1.d16_1.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_1.d64_2.d32_1.d16_1.d8_2.d4_0.out [0], Q = \demux0.inst0.d128_1.d64_2.d32_1.d16_1.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_1.d64_2.d32_1.d16_1.d8_1.d4_0.out [1], Q = \demux0.inst0.d128_1.d64_2.d32_1.d16_1.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_1.d64_2.d32_1.d16_1.d8_1.d4_0.out [1], Q = \demux0.inst0.d128_1.d64_2.d32_1.d16_1.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_1.d64_2.d32_1.d16_1.d8_1.d4_0.out [0], Q = \demux0.inst0.d128_1.d64_2.d32_1.d16_1.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_1.d64_2.d32_1.d16_1.d8_1.d4_0.out [0], Q = \demux0.inst0.d128_1.d64_2.d32_1.d16_1.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_1.d64_1.d32_2.d16_2.d8_2.d4_0.out [1], Q = \demux0.inst0.d128_1.d64_1.d32_2.d16_2.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_1.d64_1.d32_2.d16_2.d8_2.d4_0.out [1], Q = \demux0.inst0.d128_1.d64_1.d32_2.d16_2.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_1.d64_1.d32_2.d16_2.d8_2.d4_0.out [0], Q = \demux0.inst0.d128_1.d64_1.d32_2.d16_2.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_1.d64_1.d32_2.d16_2.d8_2.d4_0.out [0], Q = \demux0.inst0.d128_1.d64_1.d32_2.d16_2.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_1.d64_1.d32_2.d16_2.d8_1.d4_0.out [1], Q = \demux0.inst0.d128_1.d64_1.d32_2.d16_2.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_1.d64_1.d32_2.d16_2.d8_1.d4_0.out [1], Q = \demux0.inst0.d128_1.d64_1.d32_2.d16_2.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_1.d64_1.d32_2.d16_2.d8_1.d4_0.out [0], Q = \demux0.inst0.d128_1.d64_1.d32_2.d16_2.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_1.d64_1.d32_2.d16_2.d8_1.d4_0.out [0], Q = \demux0.inst0.d128_1.d64_1.d32_2.d16_2.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_1.d64_1.d32_2.d16_1.d8_2.d4_0.out [1], Q = \demux0.inst0.d128_1.d64_1.d32_2.d16_1.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_1.d64_1.d32_2.d16_1.d8_2.d4_0.out [1], Q = \demux0.inst0.d128_1.d64_1.d32_2.d16_1.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_1.d64_1.d32_2.d16_1.d8_2.d4_0.out [0], Q = \demux0.inst0.d128_1.d64_1.d32_2.d16_1.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_1.d64_1.d32_2.d16_1.d8_2.d4_0.out [0], Q = \demux0.inst0.d128_1.d64_1.d32_2.d16_1.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_1.d64_1.d32_2.d16_1.d8_1.d4_0.out [1], Q = \demux0.inst0.d128_1.d64_1.d32_2.d16_1.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_1.d64_1.d32_2.d16_1.d8_1.d4_0.out [1], Q = \demux0.inst0.d128_1.d64_1.d32_2.d16_1.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_1.d64_1.d32_2.d16_1.d8_1.d4_0.out [0], Q = \demux0.inst0.d128_1.d64_1.d32_2.d16_1.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_1.d64_1.d32_2.d16_1.d8_1.d4_0.out [0], Q = \demux0.inst0.d128_1.d64_1.d32_2.d16_1.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_1.d64_1.d32_1.d16_2.d8_2.d4_0.out [1], Q = \demux0.inst0.d128_1.d64_1.d32_1.d16_2.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_1.d64_1.d32_1.d16_2.d8_2.d4_0.out [1], Q = \demux0.inst0.d128_1.d64_1.d32_1.d16_2.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_1.d64_1.d32_1.d16_2.d8_2.d4_0.out [0], Q = \demux0.inst0.d128_1.d64_1.d32_1.d16_2.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_1.d64_1.d32_1.d16_2.d8_2.d4_0.out [0], Q = \demux0.inst0.d128_1.d64_1.d32_1.d16_2.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_1.d64_1.d32_1.d16_2.d8_1.d4_0.out [1], Q = \demux0.inst0.d128_1.d64_1.d32_1.d16_2.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_1.d64_1.d32_1.d16_2.d8_1.d4_0.out [1], Q = \demux0.inst0.d128_1.d64_1.d32_1.d16_2.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_1.d64_1.d32_1.d16_2.d8_1.d4_0.out [0], Q = \demux0.inst0.d128_1.d64_1.d32_1.d16_2.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_1.d64_1.d32_1.d16_2.d8_1.d4_0.out [0], Q = \demux0.inst0.d128_1.d64_1.d32_1.d16_2.d8_1.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_1.d64_1.d32_1.d16_1.d8_2.d4_0.out [1], Q = \demux0.inst0.d128_1.d64_1.d32_1.d16_1.d8_2.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_1.d64_1.d32_1.d16_1.d8_2.d4_0.out [1], Q = \demux0.inst0.d128_1.d64_1.d32_1.d16_1.d8_2.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_1.d64_1.d32_1.d16_1.d8_2.d4_0.out [0], Q = \demux0.inst0.d128_1.d64_1.d32_1.d16_1.d8_2.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_1.d64_1.d32_1.d16_1.d8_2.d4_0.out [0], Q = \demux0.inst0.d128_1.d64_1.d32_1.d16_1.d8_2.d4_1.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_1.d64_1.d32_1.d16_1.d8_1.d4_0.out [1], Q = \demux0.inst0.d128_1.d64_1.d32_1.d16_1.d8_1.d4_2.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_1.d64_1.d32_1.d16_1.d8_1.d4_0.out [1], Q = \demux0.inst0.d128_1.d64_1.d32_1.d16_1.d8_1.d4_2.out [0], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_1.d64_1.d32_1.d16_1.d8_1.d4_0.out [0], Q = \demux0.inst0.d128_1.d64_1.d32_1.d16_1.d8_1.d4_1.out [1], rval = 1'0).
Adding SRST signal on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($dff) from module wrapper_io_reg_max (D = \demux0.inst0.d128_1.d64_1.d32_1.d16_1.d8_1.d4_0.out [0], Q = \demux0.inst0.d128_1.d64_1.d32_1.d16_1.d8_1.d4_1.out [0], rval = 1'0).

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_reg_max..
Removed 128 unused cells and 128 unused wires.
<suppressed ~256 debug messages>

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_max.

3.13.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wrapper_io_reg_max..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~142 debug messages>

yosys> opt_reduce

3.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wrapper_io_reg_max.
Performed a total of 0 changes.

yosys> opt_merge

3.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_max'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_reg_max..

yosys> opt_expr

3.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_max.

3.13.16. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 4 bits (of 7) from port B of cell wrapper_io_reg_max.$verific$xor_3$wrapper_io_reg_max.v:13$4 ($xor).

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_reg_max..

yosys> alumacc

3.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module wrapper_io_reg_max:
  created 0 $alu and 0 $macc cells.

yosys> opt

3.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_max.

yosys> opt_merge -nomux

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_max'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wrapper_io_reg_max..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~142 debug messages>

yosys> opt_reduce

3.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wrapper_io_reg_max.
Performed a total of 0 changes.

yosys> opt_merge

3.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_max'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_reg_max..

yosys> opt_expr

3.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_max.

3.19.9. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.20. Printing statistics.

=== wrapper_io_reg_max ===

   Number of wires:               3713
   Number of wire bits:           8725
   Number of public wires:        3711
   Number of public wire bits:    8723
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                905
     $dff                          256
     $dlatch                         8
     $mux                          384
     $sdff                         256
     $xor                            1


yosys> memory -nomap

3.21. Executing MEMORY pass.

yosys> opt_mem

3.21.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.21.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.21.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.21.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.21.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.21.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_reg_max..

yosys> memory_share

3.21.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.21.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.21.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_reg_max..

yosys> memory_collect

3.21.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.22. Printing statistics.

=== wrapper_io_reg_max ===

   Number of wires:               3713
   Number of wire bits:           8725
   Number of public wires:        3711
   Number of public wire bits:    8723
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                905
     $dff                          256
     $dlatch                         8
     $mux                          384
     $sdff                         256
     $xor                            1


yosys> opt_clean

3.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_reg_max..

yosys> stat

3.24. Printing statistics.

=== wrapper_io_reg_max ===

   Number of wires:               3713
   Number of wire bits:           8725
   Number of public wires:        3711
   Number of public wire bits:    8723
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                905
     $dff                          256
     $dlatch                         8
     $mux                          384
     $sdff                         256
     $xor                            1


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.25. Executing TECHMAP pass (map to technology primitives).

3.25.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.25.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.25.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $sdff.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $dlatch.
No more expansions possible.
<suppressed ~976 debug messages>

yosys> stat

3.26. Printing statistics.

=== wrapper_io_reg_max ===

   Number of wires:               3713
   Number of wire bits:           8725
   Number of public wires:        3711
   Number of public wire bits:    8723
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1442
     $_DFF_P_                      256
     $_DLATCH_N_                   143
     $_DLATCH_P_                   143
     $_MUX_                        637
     $_SDFF_PN0_                   128
     $_SDFF_PP0_                   128
     $_XOR_                          7


yosys> opt

3.27. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_max.
<suppressed ~6 debug messages>

yosys> opt_merge -nomux

3.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_max'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.27.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wrapper_io_reg_max..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wrapper_io_reg_max.
Performed a total of 0 changes.

yosys> opt_merge

3.27.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_max'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_reg_max..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.27.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_max.

3.27.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.27.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wrapper_io_reg_max..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wrapper_io_reg_max.
Performed a total of 0 changes.

yosys> opt_merge

3.27.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_max'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_reg_max..

yosys> opt_expr

3.27.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_max.

3.27.16. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_max.
<suppressed ~126 debug messages>

yosys> opt_merge

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_max'.
Removed a total of 0 cells.

yosys> opt_dff

3.28.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_reg_max..

3.28.5. Finished fast OPT passes.

yosys> memory_map

3.29. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.30. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_max.

yosys> opt_merge -nomux

3.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_max'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wrapper_io_reg_max..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wrapper_io_reg_max.
Performed a total of 0 changes.

yosys> opt_merge

3.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_max'.
Removed a total of 0 cells.

yosys> opt_share

3.30.6. Executing OPT_SHARE pass.

yosys> opt_dff

3.30.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_reg_max..

yosys> opt_expr -full

3.30.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_max.

3.30.10. Finished OPT passes. (There is nothing left to do.)

yosys> techmap -map +/techmap.v

3.31. Executing TECHMAP pass (map to technology primitives).

3.31.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.31.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> opt -sat

3.32. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_max.

yosys> opt_merge -nomux

3.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_max'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.32.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wrapper_io_reg_max..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.32.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wrapper_io_reg_max.
Performed a total of 0 changes.

yosys> opt_merge

3.32.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_max'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.32.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.32.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_reg_max..

yosys> opt_expr

3.32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_max.

3.32.9. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

3.33. Executing ABC pass (technology mapping using ABC).

3.33.1. Summary of detected clock domains:
  340 cells in clk=\clk, en={ }, arst={ }, srst=!\demux0.sel_internal0 [0]
  259 cells in clk=\clk, en={ }, arst={ }, srst=!\demux0.sel_internal1 [0]
  67 cells in clk=\clk, en={ }, arst={ }, srst=\demux0.sel_internal0 [0]
  643 cells in clk=\clk, en={ }, arst={ }, srst={ }
  127 cells in clk=\clk, en={ }, arst={ }, srst=\demux0.sel_internal1 [0]

3.33.2. Extracting gate netlist of module `\wrapper_io_reg_max' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by !\demux0.sel_internal0 [0]
Extracted 320 gates and 475 wires to a netlist network with 154 inputs and 131 outputs.

3.33.2.1. Executing ABC.

3.33.3. Extracting gate netlist of module `\wrapper_io_reg_max' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by !\demux0.sel_internal1 [0]
Extracted 252 gates and 325 wires to a netlist network with 72 inputs and 128 outputs.

3.33.3.1. Executing ABC.

3.33.4. Extracting gate netlist of module `\wrapper_io_reg_max' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by \demux0.sel_internal0 [0]
Extracted 67 gates and 135 wires to a netlist network with 68 inputs and 64 outputs.

3.33.4.1. Executing ABC.

3.33.5. Extracting gate netlist of module `\wrapper_io_reg_max' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 385 gates and 645 wires to a netlist network with 260 inputs and 129 outputs.

3.33.5.1. Executing ABC.

3.33.6. Extracting gate netlist of module `\wrapper_io_reg_max' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by \demux0.sel_internal1 [0]
Extracted 126 gates and 253 wires to a netlist network with 127 inputs and 65 outputs.

3.33.6.1. Executing ABC.

yosys> abc -dff

3.34. Executing ABC pass (technology mapping using ABC).

3.34.1. Summary of detected clock domains:
  260 cells in clk=\clk, en={ }, arst={ }, srst=\demux0.sel_internal0 [0]
  194 cells in clk=\clk, en={ }, arst={ }, srst=!\demux0.sel_internal0 [0]
  129 cells in clk=\clk, en={ }, arst={ }, srst=!\demux0.sel_internal1 [0]
  643 cells in clk=\clk, en={ }, arst={ }, srst={ }
  480 cells in clk=\clk, en={ }, arst={ }, srst=\demux0.sel_internal1 [0]

3.34.2. Extracting gate netlist of module `\wrapper_io_reg_max' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by \demux0.sel_internal0 [0]
Extracted 253 gates and 326 wires to a netlist network with 73 inputs and 96 outputs.

3.34.2.1. Executing ABC.

3.34.3. Extracting gate netlist of module `\wrapper_io_reg_max' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by !\demux0.sel_internal0 [0]
Extracted 193 gates and 292 wires to a netlist network with 99 inputs and 65 outputs.

3.34.3.1. Executing ABC.

3.34.4. Extracting gate netlist of module `\wrapper_io_reg_max' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by !\demux0.sel_internal1 [0]
Extracted 128 gates and 161 wires to a netlist network with 33 inputs and 64 outputs.

3.34.4.1. Executing ABC.

3.34.5. Extracting gate netlist of module `\wrapper_io_reg_max' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 385 gates and 645 wires to a netlist network with 260 inputs and 129 outputs.

3.34.5.1. Executing ABC.

3.34.6. Extracting gate netlist of module `\wrapper_io_reg_max' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by \demux0.sel_internal1 [0]
Extracted 461 gates and 613 wires to a netlist network with 152 inputs and 99 outputs.

3.34.6.1. Executing ABC.

yosys> abc -dff

3.35. Executing ABC pass (technology mapping using ABC).

3.35.1. Summary of detected clock domains:
  131 cells in clk=\clk, en={ }, arst={ }, srst=!\demux0.sel_internal1 [0]
  131 cells in clk=\clk, en={ }, arst={ }, srst=\demux0.sel_internal0 [0]
  542 cells in clk=\clk, en={ }, arst={ }, srst=!\demux0.sel_internal0 [0]
  643 cells in clk=\clk, en={ }, arst={ }, srst={ }
  165 cells in clk=\clk, en={ }, arst={ }, srst=\demux0.sel_internal1 [0]

3.35.2. Extracting gate netlist of module `\wrapper_io_reg_max' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by !\demux0.sel_internal1 [0]
Extracted 129 gates and 147 wires to a netlist network with 18 inputs and 64 outputs.

3.35.2.1. Executing ABC.

3.35.3. Extracting gate netlist of module `\wrapper_io_reg_max' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by \demux0.sel_internal0 [0]
Extracted 129 gates and 147 wires to a netlist network with 18 inputs and 64 outputs.

3.35.3.1. Executing ABC.

3.35.4. Extracting gate netlist of module `\wrapper_io_reg_max' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by !\demux0.sel_internal0 [0]
Extracted 524 gates and 869 wires to a netlist network with 345 inputs and 147 outputs.

3.35.4.1. Executing ABC.

3.35.5. Extracting gate netlist of module `\wrapper_io_reg_max' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 385 gates and 645 wires to a netlist network with 260 inputs and 129 outputs.

3.35.5.1. Executing ABC.

3.35.6. Extracting gate netlist of module `\wrapper_io_reg_max' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by \demux0.sel_internal1 [0]
Extracted 159 gates and 166 wires to a netlist network with 7 inputs and 80 outputs.

3.35.6.1. Executing ABC.

yosys> abc -dff

3.36. Executing ABC pass (technology mapping using ABC).

3.36.1. Summary of detected clock domains:
  199 cells in clk=\clk, en={ }, arst={ }, srst=!\demux0.sel_internal0 [0]
  133 cells in clk=\clk, en={ }, arst={ }, srst=!\demux0.sel_internal1 [0]
  149 cells in clk=\clk, en={ }, arst={ }, srst=\demux0.sel_internal0 [0]
  643 cells in clk=\clk, en={ }, arst={ }, srst={ }
  500 cells in clk=\clk, en={ }, arst={ }, srst=\demux0.sel_internal1 [0]

3.36.2. Extracting gate netlist of module `\wrapper_io_reg_max' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by !\demux0.sel_internal0 [0]
Extracted 196 gates and 272 wires to a netlist network with 76 inputs and 64 outputs.

3.36.2.1. Executing ABC.

3.36.3. Extracting gate netlist of module `\wrapper_io_reg_max' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by !\demux0.sel_internal1 [0]
Extracted 130 gates and 141 wires to a netlist network with 11 inputs and 64 outputs.

3.36.3.1. Executing ABC.

3.36.4. Extracting gate netlist of module `\wrapper_io_reg_max' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by \demux0.sel_internal0 [0]
Extracted 144 gates and 151 wires to a netlist network with 7 inputs and 72 outputs.

3.36.4.1. Executing ABC.

3.36.5. Extracting gate netlist of module `\wrapper_io_reg_max' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 385 gates and 645 wires to a netlist network with 260 inputs and 129 outputs.

3.36.5.1. Executing ABC.

3.36.6. Extracting gate netlist of module `\wrapper_io_reg_max' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by \demux0.sel_internal1 [0]
Extracted 483 gates and 764 wires to a netlist network with 281 inputs and 139 outputs.

3.36.6.1. Executing ABC.

yosys> opt_ffinv

3.37. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt -sat

3.38. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.38.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_max.

yosys> opt_merge -nomux

3.38.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_max'.
<suppressed ~48 debug messages>
Removed a total of 16 cells.

yosys> opt_muxtree

3.38.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wrapper_io_reg_max..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.38.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wrapper_io_reg_max.
Performed a total of 0 changes.

yosys> opt_merge

3.38.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_max'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.38.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.38.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_reg_max..
Removed 0 unused cells and 9992 unused wires.
<suppressed ~1635 debug messages>

yosys> opt_expr

3.38.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_max.

3.38.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.38.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wrapper_io_reg_max..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.38.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wrapper_io_reg_max.
Performed a total of 0 changes.

yosys> opt_merge

3.38.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_max'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.38.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.38.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_reg_max..

yosys> opt_expr

3.38.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_max.

3.38.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /home/users/temp_dir/yosys_fINWbc/abc_tmp_1.scr

3.39. Executing ABC pass (technology mapping using ABC).

3.39.1. Extracting gate netlist of module `\wrapper_io_reg_max' to `<abc-temp-dir>/input.blif'..
Extracted 1056 gates and 1386 wires to a netlist network with 330 inputs and 148 outputs.

3.39.1.1. Executing ABC.
DE:   #PIs = 330  #Luts =   377  Max Lvl =   6  Avg Lvl =   1.90  [   0.11 sec. at Pass 0]
DE:   #PIs = 330  #Luts =   275  Max Lvl =   5  Avg Lvl =   2.73  [   1.52 sec. at Pass 1]
DE:   #PIs = 330  #Luts =   275  Max Lvl =   5  Avg Lvl =   2.73  [   0.58 sec. at Pass 2]
DE:   #PIs = 330  #Luts =   267  Max Lvl =   5  Avg Lvl =   1.89  [   1.30 sec. at Pass 3]
DE:   #PIs = 330  #Luts =   267  Max Lvl =   5  Avg Lvl =   1.89  [   0.84 sec. at Pass 4]
DE:   #PIs = 330  #Luts =   267  Max Lvl =   5  Avg Lvl =   1.89  [   1.17 sec. at Pass 5]
DE:   #PIs = 330  #Luts =   267  Max Lvl =   5  Avg Lvl =   1.89  [   0.61 sec. at Pass 6]
DE:   #PIs = 330  #Luts =   267  Max Lvl =   5  Avg Lvl =   1.89  [   2.30 sec. at Pass 7]
DE:   #PIs = 330  #Luts =   267  Max Lvl =   5  Avg Lvl =   1.89  [   0.33 sec. at Pass 8]

yosys> opt

3.40. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.40.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_max.

yosys> opt_merge -nomux

3.40.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_max'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.40.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wrapper_io_reg_max..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.40.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wrapper_io_reg_max.
Performed a total of 0 changes.

yosys> opt_merge

3.40.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_max'.
Removed a total of 0 cells.

yosys> opt_dff

3.40.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.40.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_reg_max..
Removed 0 unused cells and 1649 unused wires.
<suppressed ~393 debug messages>

yosys> opt_expr

3.40.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_max.

3.40.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.40.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wrapper_io_reg_max..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.40.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wrapper_io_reg_max.
Performed a total of 0 changes.

yosys> opt_merge

3.40.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_max'.
Removed a total of 0 cells.

yosys> opt_dff

3.40.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.40.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_reg_max..

yosys> opt_expr

3.40.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_max.

3.40.16. Finished OPT passes. (There is nothing left to do.)

yosys> opt_ffinv

3.41. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> stat

3.42. Printing statistics.

=== wrapper_io_reg_max ===

   Number of wires:               2120
   Number of wire bits:           5088
   Number of public wires:        1685
   Number of public wire bits:    4653
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                853
     $_DFF_P_                      256
     $_DLATCH_N_                   143
     $_DLATCH_P_                   143
     $_SDFF_PN0_                    22
     $_SDFF_PP0_                    22
     $lut                          267


yosys> shregmap -minlen 8 -maxlen 20

3.43. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.44. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.45. Printing statistics.

=== wrapper_io_reg_max ===

   Number of wires:               2307
   Number of wire bits:           5275
   Number of public wires:        1685
   Number of public wire bits:    4653
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1040
     $_DFF_P_                      300
     $_DLATCHSR_PPP_               286
     $_MUX_                         44
     $_NOT_                        143
     $lut                          267


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.46. Executing TECHMAP pass (map to technology primitives).

3.46.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.46.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.46.3. Continuing TECHMAP pass.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_DLATCHSR_PPP_ for cells of type $_DLATCHSR_PPP_.
Using extmapper simplemap for cells of type $lut.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~1561 debug messages>

yosys> opt_expr -mux_undef

3.47. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_max.
<suppressed ~6155 debug messages>

yosys> simplemap

3.48. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.49. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_max.

yosys> opt_merge

3.50. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_max'.
<suppressed ~3501 debug messages>
Removed a total of 1167 cells.

yosys> opt_dff -nodffe -nosdff

3.51. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.52. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_reg_max..
Removed 0 unused cells and 3621 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.53. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.53.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_max.
<suppressed ~410 debug messages>

yosys> opt_merge -nomux

3.53.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_max'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.53.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wrapper_io_reg_max..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.53.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wrapper_io_reg_max.
Performed a total of 0 changes.

yosys> opt_merge

3.53.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_max'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.53.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.53.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_reg_max..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.53.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_max.

3.53.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.53.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wrapper_io_reg_max..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.53.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wrapper_io_reg_max.
Performed a total of 0 changes.

yosys> opt_merge

3.53.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_max'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.53.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.53.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_reg_max..

yosys> opt_expr

3.53.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_max.

3.53.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /home/users/temp_dir/yosys_fINWbc/abc_tmp_2.scr

3.54. Executing ABC pass (technology mapping using ABC).

3.54.1. Extracting gate netlist of module `\wrapper_io_reg_max' to `<abc-temp-dir>/input.blif'..
Extracted 1044 gates and 1384 wires to a netlist network with 338 inputs and 178 outputs.

3.54.1.1. Executing ABC.
DE:   #PIs = 338  #Luts =   297  Max Lvl =   5  Avg Lvl =   1.73  [   0.15 sec. at Pass 0]
DE:   #PIs = 338  #Luts =   297  Max Lvl =   5  Avg Lvl =   1.73  [   1.75 sec. at Pass 1]
DE:   #PIs = 338  #Luts =   297  Max Lvl =   5  Avg Lvl =   1.73  [   0.48 sec. at Pass 2]
DE:   #PIs = 338  #Luts =   297  Max Lvl =   5  Avg Lvl =   1.73  [   0.79 sec. at Pass 3]
DE:   #PIs = 338  #Luts =   297  Max Lvl =   5  Avg Lvl =   1.73  [   0.71 sec. at Pass 4]
DE:   #PIs = 338  #Luts =   297  Max Lvl =   5  Avg Lvl =   1.73  [   1.44 sec. at Pass 5]
DE:   #PIs = 338  #Luts =   297  Max Lvl =   5  Avg Lvl =   1.73  [   3.41 sec. at Pass 6]
DE:   #PIs = 338  #Luts =   297  Max Lvl =   5  Avg Lvl =   1.73  [   0.30 sec. at Pass 7]

yosys> opt

3.55. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.55.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_max.

yosys> opt_merge -nomux

3.55.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_max'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.55.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wrapper_io_reg_max..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.55.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wrapper_io_reg_max.
Performed a total of 0 changes.

yosys> opt_merge

3.55.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_max'.
Removed a total of 0 cells.

yosys> opt_dff

3.55.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.55.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_reg_max..
Removed 0 unused cells and 1300 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.55.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_max.

3.55.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.55.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wrapper_io_reg_max..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.55.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wrapper_io_reg_max.
Performed a total of 0 changes.

yosys> opt_merge

3.55.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_max'.
Removed a total of 0 cells.

yosys> opt_dff

3.55.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.55.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_reg_max..

yosys> opt_expr

3.55.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_max.

3.55.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.56. Executing HIERARCHY pass (managing design hierarchy).

3.56.1. Analyzing design hierarchy..
Top module:  \wrapper_io_reg_max

3.56.2. Analyzing design hierarchy..
Top module:  \wrapper_io_reg_max
Removed 0 unused modules.

yosys> stat

3.57. Printing statistics.

=== wrapper_io_reg_max ===

   Number of wires:               2150
   Number of wire bits:           5118
   Number of public wires:        1685
   Number of public wire bits:    4653
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                883
     $lut                          297
     dffsre                        300
     latchsre                      286


yosys> opt_clean -purge

3.58. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_reg_max..
Removed 0 unused cells and 1389 unused wires.
<suppressed ~1389 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.59. Executing Verilog backend.

yosys> bmuxmap

3.59.1. Executing BMUXMAP pass.

yosys> demuxmap

3.59.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\wrapper_io_reg_max'.

Warnings: 8 unique messages, 8 total
End of script. Logfile hash: a51ec9ebca, CPU: user 9.34s system 0.37s, MEM: 50.23 MB peak
Yosys 0.17+76 (git sha1 2073f9d19, gcc 9.1.0 -fPIC -Os)
Time spent: 92% 6x abc (111 sec), 2% 27x opt_clean (2 sec), ...
real 36.95
user 108.60
sys 11.30
