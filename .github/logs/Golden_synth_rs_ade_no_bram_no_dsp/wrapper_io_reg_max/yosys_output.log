
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.53
 Yosys 0.18+10 (git sha1 a3cbfccc4, gcc 9.4.0-1ubuntu1~20.04.1 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 00:39:28 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k wrapper_io_reg_max.v mux.v demux.v

yosys> verific -vlog2k wrapper_io_reg_max.v mux.v demux.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 00:39:28 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'wrapper_io_reg_max.v'
VERIFIC-INFO [VERI-2561] wrapper_io_reg_max.v:15: undeclared symbol 'mux_out', assumed default net type 'wire'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'mux.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'demux.v'

yosys> synth_rs -top wrapper_io_reg_max -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.61

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\RS_DSP2_MULT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_sim'.
Generating RTLIL representation for module `\dsp_t1_20x18x64'.
Generating RTLIL representation for module `\dsp_t1_10x9x32'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top wrapper_io_reg_max

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] wrapper_io_reg_max.v:1: compiling module 'wrapper_io_reg_max'
VERIFIC-INFO [VERI-1018] mux.v:2: compiling module 'mux_128_2'
VERIFIC-WARNING [VERI-2580] mux.v:29: latch inferred for net 'in_internal1[127]'
VERIFIC-INFO [VERI-1018] mux.v:47: compiling module 'mux_128x1'
VERIFIC-INFO [VERI-1018] mux.v:61: compiling module 'mux_64x1'
VERIFIC-INFO [VERI-1018] mux.v:75: compiling module 'mux_32x1'
VERIFIC-INFO [VERI-1018] mux.v:89: compiling module 'mux_16x1'
VERIFIC-INFO [VERI-1018] mux.v:103: compiling module 'mux_8x1'
VERIFIC-INFO [VERI-1018] mux.v:117: compiling module 'mux_4x1'
VERIFIC-INFO [VERI-1018] mux.v:131: compiling module 'mux_2x1_reg'
VERIFIC-INFO [VERI-1018] mux.v:149: compiling module 'mux_2x1'
VERIFIC-WARNING [VERI-1330] mux.v:34: actual bit length 8 differs from formal bit length 7 for port 'sel'
VERIFIC-WARNING [VERI-1330] mux.v:40: actual bit length 8 differs from formal bit length 7 for port 'sel'
VERIFIC-WARNING [VERI-1330] wrapper_io_reg_max.v:15: actual bit length 7 differs from formal bit length 8 for port 'sel'
VERIFIC-INFO [VERI-1018] demux.v:2: compiling module 'demux_128_2'
VERIFIC-WARNING [VERI-2580] demux.v:29: latch inferred for net 'in_internal1'
VERIFIC-INFO [VERI-1018] demux.v:47: compiling module 'demux_1x128'
VERIFIC-INFO [VERI-1018] demux.v:133: compiling module 'demux_1x2'
VERIFIC-INFO [VERI-1018] demux.v:61: compiling module 'demux_1x64'
VERIFIC-INFO [VERI-1018] demux.v:75: compiling module 'demux_1x32'
VERIFIC-INFO [VERI-1018] demux.v:90: compiling module 'demux_1x16'
VERIFIC-INFO [VERI-1018] demux.v:104: compiling module 'demux_1x8'
VERIFIC-INFO [VERI-1018] demux.v:118: compiling module 'demux_1x4'
VERIFIC-INFO [VERI-1018] demux.v:142: compiling module 'demux_1x2_reg'
VERIFIC-WARNING [VERI-1330] demux.v:34: actual bit length 8 differs from formal bit length 7 for port 'sel'
VERIFIC-WARNING [VERI-1330] demux.v:40: actual bit length 8 differs from formal bit length 7 for port 'sel'
VERIFIC-WARNING [VERI-1330] wrapper_io_reg_max.v:16: actual bit length 7 differs from formal bit length 8 for port 'sel'
Importing module wrapper_io_reg_max.
Importing module demux_128_2.
Importing module demux_1x128.
Importing module demux_1x2.
Importing module demux_1x64.
Importing module demux_1x32.
Importing module demux_1x16.
Importing module demux_1x8.
Importing module demux_1x4.
Importing module demux_1x2_reg.
Importing module mux_128_2.
Importing module mux_128x1.
Importing module mux_2x1.
Importing module mux_64x1.
Importing module mux_32x1.
Importing module mux_16x1.
Importing module mux_8x1.
Importing module mux_4x1.
Importing module mux_2x1_reg.

3.3.1. Analyzing design hierarchy..
Top module:  \wrapper_io_reg_max
Used module:     \demux_128_2
Used module:         \demux_1x128
Used module:             \demux_1x64
Used module:                 \demux_1x32
Used module:                     \demux_1x16
Used module:                         \demux_1x8
Used module:                             \demux_1x4
Used module:                                 \demux_1x2_reg
Used module:                                 \demux_1x2
Used module:     \mux_128_2
Used module:         \mux_128x1
Used module:             \mux_2x1
Used module:             \mux_64x1
Used module:                 \mux_32x1
Used module:                     \mux_16x1
Used module:                         \mux_8x1
Used module:                             \mux_4x1
Used module:                                 \mux_2x1_reg

3.3.2. Analyzing design hierarchy..
Top module:  \wrapper_io_reg_max
Used module:     \demux_128_2
Used module:         \demux_1x128
Used module:             \demux_1x64
Used module:                 \demux_1x32
Used module:                     \demux_1x16
Used module:                         \demux_1x8
Used module:                             \demux_1x4
Used module:                                 \demux_1x2_reg
Used module:                                 \demux_1x2
Used module:     \mux_128_2
Used module:         \mux_128x1
Used module:             \mux_2x1
Used module:             \mux_64x1
Used module:                 \mux_32x1
Used module:                     \mux_16x1
Used module:                         \mux_8x1
Used module:                             \mux_4x1
Used module:                                 \mux_2x1_reg
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.4.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.4.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module mux_2x1_reg.
Optimizing module mux_4x1.
Optimizing module mux_8x1.
Optimizing module mux_16x1.
Optimizing module mux_32x1.
Optimizing module mux_64x1.
Optimizing module mux_2x1.
Optimizing module mux_128x1.
Optimizing module mux_128_2.
<suppressed ~12 debug messages>
Optimizing module demux_1x2_reg.
Optimizing module demux_1x4.
Optimizing module demux_1x8.
Optimizing module demux_1x16.
Optimizing module demux_1x32.
Optimizing module demux_1x64.
Optimizing module demux_1x2.
Optimizing module demux_1x128.
Optimizing module demux_128_2.
<suppressed ~7 debug messages>
Optimizing module wrapper_io_reg_max.

yosys> bmuxmap

3.5. Executing BMUXMAP pass.

yosys> demuxmap

3.6. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> flatten

3.7. Executing FLATTEN pass (flatten design).
Deleting now unused module demux_128_2.
Deleting now unused module demux_1x128.
Deleting now unused module demux_1x16.
Deleting now unused module demux_1x2.
Deleting now unused module demux_1x2_reg.
Deleting now unused module demux_1x32.
Deleting now unused module demux_1x4.
Deleting now unused module demux_1x64.
Deleting now unused module demux_1x8.
Deleting now unused module mux_128_2.
Deleting now unused module mux_128x1.
Deleting now unused module mux_16x1.
Deleting now unused module mux_2x1.
Deleting now unused module mux_2x1_reg.
Deleting now unused module mux_32x1.
Deleting now unused module mux_4x1.
Deleting now unused module mux_64x1.
Deleting now unused module mux_8x1.
<suppressed ~42 debug messages>

yosys> bmuxmap

3.8. Executing BMUXMAP pass.

yosys> demuxmap

3.9. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> tribuf -logic

3.10. Executing TRIBUF pass.

yosys> deminout

3.11. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_max.
<suppressed ~3 debug messages>

yosys> opt_clean

3.13. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_reg_max..
Removed 3 unused cells and 8446 unused wires.
<suppressed ~907 debug messages>

yosys> check

3.14. Executing CHECK pass (checking for obvious problems).
Checking module wrapper_io_reg_max...
Found and reported 0 problems.

yosys> opt_expr

3.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_max.

yosys> opt_merge -nomux

3.16. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_max'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wrapper_io_reg_max..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~286 debug messages>

yosys> opt_reduce

3.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wrapper_io_reg_max.
Performed a total of 0 changes.

yosys> opt_merge

3.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_max'.
Removed a total of 0 cells.

yosys> opt_share

3.20. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.21. Executing OPT_DFF pass (perform DFF optimizations).
Removing never-active CLR on $flatten\mux0.$verific$sel_internal1_reg$mux.v:29$986 ($dlatchsr) from module wrapper_io_reg_max.
Removing never-active ARST on $flatten\mux0.$verific$sel_internal1_reg$mux.v:29$986 ($dlatchsr) from module wrapper_io_reg_max.
Removing never-active CLR on $flatten\mux0.$verific$sel_internal0_reg$mux.v:29$971 ($dlatchsr) from module wrapper_io_reg_max.
Removing never-active ARST on $flatten\mux0.$verific$sel_internal0_reg$mux.v:29$971 ($dlatchsr) from module wrapper_io_reg_max.
Removing never-active CLR on $flatten\mux0.$verific$in_internal1_reg$mux.v:29$979 ($dlatchsr) from module wrapper_io_reg_max.
Removing never-active ARST on $flatten\mux0.$verific$in_internal1_reg$mux.v:29$979 ($dlatchsr) from module wrapper_io_reg_max.
Removing never-active CLR on $flatten\mux0.$verific$in_internal0_reg$mux.v:29$993 ($dlatchsr) from module wrapper_io_reg_max.
Removing never-active ARST on $flatten\mux0.$verific$in_internal0_reg$mux.v:29$993 ($dlatchsr) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$951 ($aldff) from module wrapper_io_reg_max.
Removing never-active CLR on $flatten\demux0.$verific$sel_internal1_reg$demux.v:29$306 ($dlatchsr) from module wrapper_io_reg_max.
Removing never-active ARST on $flatten\demux0.$verific$sel_internal1_reg$demux.v:29$306 ($dlatchsr) from module wrapper_io_reg_max.
Removing never-active CLR on $flatten\demux0.$verific$sel_internal0_reg$demux.v:29$313 ($dlatchsr) from module wrapper_io_reg_max.
Removing never-active ARST on $flatten\demux0.$verific$sel_internal0_reg$demux.v:29$313 ($dlatchsr) from module wrapper_io_reg_max.
Setting constant 0-bit at position 7 on $flatten\demux0.$verific$sel_internal0_reg$demux.v:29$313 ($dlatch) from module wrapper_io_reg_max.
Setting constant 0-bit at position 7 on $flatten\demux0.$verific$sel_internal1_reg$demux.v:29$306 ($dlatch) from module wrapper_io_reg_max.
Setting constant 0-bit at position 7 on $flatten\mux0.$verific$sel_internal0_reg$mux.v:29$971 ($dlatch) from module wrapper_io_reg_max.
Setting constant 0-bit at position 7 on $flatten\mux0.$verific$sel_internal1_reg$mux.v:29$986 ($dlatch) from module wrapper_io_reg_max.

yosys> opt_clean

3.22. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_reg_max..

yosys> opt_expr

3.23. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_max.
MAX OPT ITERATION = 1

yosys> fsm -encoding binary

3.24. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.24.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.24.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.24.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.24.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_reg_max..

yosys> fsm_opt

3.24.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.24.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.24.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.24.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt_expr

3.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_max.

yosys> opt_merge -nomux

3.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_max'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.27. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wrapper_io_reg_max..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~286 debug messages>

yosys> opt_reduce

3.28. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wrapper_io_reg_max.
Performed a total of 0 changes.

yosys> opt_merge

3.29. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_max'.
Removed a total of 0 cells.

yosys> opt_share

3.30. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.31. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.32. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_reg_max..

yosys> opt_expr

3.33. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_max.
MAX OPT ITERATION = 1

yosys> wreduce -keepdc

3.34. Executing WREDUCE pass (reducing word size of cells).
Removed top 4 bits (of 7) from port B of cell wrapper_io_reg_max.$verific$xor_3$wrapper_io_reg_max.v:13$4 ($xor).

yosys> peepopt

3.35. Executing PEEPOPT pass (run peephole optimizers).

yosys> opt_clean

3.36. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_reg_max..

yosys> bmuxmap

3.37. Executing BMUXMAP pass.

yosys> demuxmap

3.38. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> alumacc

3.39. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module wrapper_io_reg_max:
  created 0 $alu and 0 $macc cells.

yosys> opt_expr

3.40. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_max.

yosys> opt_merge -nomux

3.41. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_max'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.42. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wrapper_io_reg_max..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~286 debug messages>

yosys> opt_reduce

3.43. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wrapper_io_reg_max.
Performed a total of 0 changes.

yosys> opt_merge

3.44. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_max'.
Removed a total of 0 cells.

yosys> opt_share

3.45. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.46. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.47. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_reg_max..

yosys> opt_expr

3.48. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_max.
MAX OPT ITERATION = 1

yosys> stat

3.49. Printing statistics.

=== wrapper_io_reg_max ===

   Number of wires:               3841
   Number of wire bits:           8981
   Number of public wires:        3839
   Number of public wire bits:    8979
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                905
     $dff                          384
     $dlatch                         8
     $mux                          512
     $xor                            1


yosys> memory -nomap

3.50. Executing MEMORY pass.

yosys> opt_mem

3.50.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.50.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.50.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.50.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.50.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.50.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_reg_max..

yosys> memory_share

3.50.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.50.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.50.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_reg_max..

yosys> memory_collect

3.50.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.51. Printing statistics.

=== wrapper_io_reg_max ===

   Number of wires:               3841
   Number of wire bits:           8981
   Number of public wires:        3839
   Number of public wire bits:    8979
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                905
     $dff                          384
     $dlatch                         8
     $mux                          512
     $xor                            1


yosys> muxpack

3.52. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~511 debug messages>

yosys> opt_clean

3.53. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_reg_max..

yosys> pmuxtree

3.54. Executing PMUXTREE pass.

yosys> muxpack

3.55. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~511 debug messages>

yosys> memory_map

3.56. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> stat

3.57. Printing statistics.

=== wrapper_io_reg_max ===

   Number of wires:               3841
   Number of wire bits:           8981
   Number of public wires:        3839
   Number of public wire bits:    8979
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                905
     $dff                          384
     $dlatch                         8
     $mux                          512
     $xor                            1


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.58. Executing TECHMAP pass (map to technology primitives).

3.58.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.58.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.58.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $dlatch.
No more expansions possible.
<suppressed ~976 debug messages>

yosys> stat

3.59. Printing statistics.

=== wrapper_io_reg_max ===

   Number of wires:               3841
   Number of wire bits:           8981
   Number of public wires:        3839
   Number of public wire bits:    8979
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1698
     $_DFF_P_                      512
     $_DLATCH_N_                   143
     $_DLATCH_P_                   143
     $_MUX_                        893
     $_XOR_                          7


yosys> opt_expr

3.60. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_max.
<suppressed ~6 debug messages>

yosys> opt_merge -nomux

3.61. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_max'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.62. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wrapper_io_reg_max..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.63. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wrapper_io_reg_max.
Performed a total of 0 changes.

yosys> opt_merge

3.64. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_max'.
Removed a total of 0 cells.

yosys> opt_share

3.65. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.66. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.67. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_reg_max..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.68. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_max.
MAX OPT ITERATION = 1

yosys> opt_expr -full

3.69. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_max.
<suppressed ~254 debug messages>

yosys> techmap -map +/techmap.v

3.70. Executing TECHMAP pass (map to technology primitives).

3.70.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.70.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> opt_expr

3.71. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_max.

yosys> opt_merge -nomux

3.72. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_max'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.73. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wrapper_io_reg_max..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.74. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wrapper_io_reg_max.
Performed a total of 0 changes.

yosys> opt_merge

3.75. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_max'.
Removed a total of 0 cells.

yosys> opt_dff -nosdff -nodffe -sat

3.76. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.77. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_reg_max..

yosys> opt_expr

3.78. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_max.
MAX OPT ITERATION = 1

yosys> abc -dff

3.79. Executing ABC pass (technology mapping using ABC).

3.79.1. Summary of detected clock domains:
  1692 cells in clk=\clk, en={ }, arst={ }, srst={ }

3.79.2. Extracting gate netlist of module `\wrapper_io_reg_max' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 1406 gates and 1701 wires to a netlist network with 294 inputs and 132 outputs.

3.79.2.1. Executing ABC.

yosys> abc -dff

3.80. Executing ABC pass (technology mapping using ABC).

3.80.1. Summary of detected clock domains:
  1692 cells in clk=\clk, en={ }, arst={ }, srst={ }

3.80.2. Extracting gate netlist of module `\wrapper_io_reg_max' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 1406 gates and 1700 wires to a netlist network with 294 inputs and 132 outputs.

3.80.2.1. Executing ABC.

yosys> abc -dff

3.81. Executing ABC pass (technology mapping using ABC).

3.81.1. Summary of detected clock domains:
  1594 cells in clk=\clk, en={ }, arst={ }, srst={ }

3.81.2. Extracting gate netlist of module `\wrapper_io_reg_max' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 1308 gates and 1602 wires to a netlist network with 294 inputs and 132 outputs.

3.81.2.1. Executing ABC.

yosys> abc -dff

3.82. Executing ABC pass (technology mapping using ABC).

3.82.1. Summary of detected clock domains:
  1648 cells in clk=\clk, en={ }, arst={ }, srst={ }

3.82.2. Extracting gate netlist of module `\wrapper_io_reg_max' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 1362 gates and 1656 wires to a netlist network with 294 inputs and 132 outputs.

3.82.2.1. Executing ABC.

yosys> opt_ffinv

3.83. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt_expr

3.84. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_max.

yosys> opt_merge -nomux

3.85. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_max'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.86. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wrapper_io_reg_max..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.87. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wrapper_io_reg_max.
Performed a total of 0 changes.

yosys> opt_merge

3.88. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_max'.
Removed a total of 0 cells.

yosys> opt_share

3.89. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.90. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.91. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_reg_max..
Removed 0 unused cells and 8610 unused wires.
<suppressed ~2155 debug messages>

yosys> opt_expr

3.92. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_max.
MAX OPT ITERATION = 1

yosys> bmuxmap

3.93. Executing BMUXMAP pass.

yosys> demuxmap

3.94. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> abc -script /tmp/yosys_12EsN1/abc_tmp_1.scr

3.95. Executing ABC pass (technology mapping using ABC).

3.95.1. Extracting gate netlist of module `\wrapper_io_reg_max' to `<abc-temp-dir>/input.blif'..
Extracted 1064 gates and 1362 wires to a netlist network with 298 inputs and 136 outputs.

3.95.1.1. Executing ABC.
DE:   #PIs = 298  #Luts =   372  Max Lvl =   7  Avg Lvl =   1.99  [   0.05 sec. at Pass 0]
DE:   #PIs = 298  #Luts =   326  Max Lvl =   6  Avg Lvl =   2.68  [   1.63 sec. at Pass 1]
DE:   #PIs = 298  #Luts =   326  Max Lvl =   6  Avg Lvl =   2.68  [   0.31 sec. at Pass 2]
DE:   #PIs = 298  #Luts =   309  Max Lvl =   6  Avg Lvl =   2.89  [   0.82 sec. at Pass 3]
DE:   #PIs = 298  #Luts =   300  Max Lvl =   5  Avg Lvl =   2.91  [   0.67 sec. at Pass 4]
DE:   #PIs = 298  #Luts =   291  Max Lvl =   6  Avg Lvl =   2.59  [   1.25 sec. at Pass 5]
DE:   #PIs = 298  #Luts =   279  Max Lvl =   6  Avg Lvl =   2.76  [   1.06 sec. at Pass 6]
DE:   #PIs = 298  #Luts =   278  Max Lvl =   6  Avg Lvl =   2.86  [   0.95 sec. at Pass 7]
DE:   #PIs = 298  #Luts =   277  Max Lvl =   6  Avg Lvl =   2.86  [   1.43 sec. at Pass 8]
DE:   #PIs = 298  #Luts =   273  Max Lvl =   6  Avg Lvl =   2.37  [   2.05 sec. at Pass 9]
DE:   #PIs = 298  #Luts =   270  Max Lvl =   5  Avg Lvl =   1.99  [   1.11 sec. at Pass 10]
DE:   #PIs = 298  #Luts =   266  Max Lvl =   6  Avg Lvl =   1.99  [   1.26 sec. at Pass 11]
DE:   #PIs = 298  #Luts =   266  Max Lvl =   6  Avg Lvl =   1.99  [   0.65 sec. at Pass 12]
DE:   #PIs = 298  #Luts =   266  Max Lvl =   6  Avg Lvl =   1.99  [   0.98 sec. at Pass 13]
DE:   #PIs = 298  #Luts =   266  Max Lvl =   6  Avg Lvl =   1.99  [   0.48 sec. at Pass 14]
DE:   #PIs = 298  #Luts =   266  Max Lvl =   6  Avg Lvl =   1.99  [   1.98 sec. at Pass 15]
DE:   #PIs = 298  #Luts =   266  Max Lvl =   6  Avg Lvl =   1.99  [   0.26 sec. at Pass 16]

yosys> opt_expr

3.96. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_max.

yosys> opt_merge -nomux

3.97. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_max'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.98. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wrapper_io_reg_max..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.99. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wrapper_io_reg_max.
Performed a total of 0 changes.

yosys> opt_merge

3.100. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_max'.
Removed a total of 0 cells.

yosys> opt_share

3.101. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.102. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.103. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_reg_max..
Removed 0 unused cells and 1362 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.104. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_max.
MAX OPT ITERATION = 1

yosys> opt_ffinv

3.105. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> stat

3.106. Printing statistics.

=== wrapper_io_reg_max ===

   Number of wires:               2091
   Number of wire bits:           5059
   Number of public wires:        1685
   Number of public wire bits:    4653
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                824
     $_DFF_P_                      272
     $_DLATCH_N_                   143
     $_DLATCH_P_                   143
     $lut                          266


yosys> shregmap -minlen 8 -maxlen 20

3.107. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.108. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.109. Printing statistics.

=== wrapper_io_reg_max ===

   Number of wires:               2234
   Number of wire bits:           5202
   Number of public wires:        1685
   Number of public wire bits:    4653
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                967
     $_DFF_P_                      272
     $_DLATCHSR_PPP_               286
     $_NOT_                        143
     $lut                          266


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.110. Executing TECHMAP pass (map to technology primitives).

3.110.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.110.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.110.3. Continuing TECHMAP pass.
Using template \$_DLATCHSR_PPP_ for cells of type $_DLATCHSR_PPP_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using extmapper simplemap for cells of type $lut.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~1532 debug messages>

yosys> opt_expr -mux_undef

3.111. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_max.
<suppressed ~11827 debug messages>

yosys> simplemap

3.112. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.113. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_max.

yosys> opt_merge

3.114. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_max'.
<suppressed ~5247 debug messages>
Removed a total of 1749 cells.

yosys> opt_dff -nodffe -nosdff

3.115. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.116. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_reg_max..
Removed 0 unused cells and 3732 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.117. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_max.
<suppressed ~287 debug messages>

yosys> opt_merge -nomux

3.118. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_max'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.119. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wrapper_io_reg_max..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.120. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wrapper_io_reg_max.
Performed a total of 0 changes.

yosys> opt_merge

3.121. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_max'.
Removed a total of 0 cells.

yosys> opt_share

3.122. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.123. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.124. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_reg_max..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.125. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_max.
MAX OPT ITERATION = 1

yosys> abc -script /tmp/yosys_12EsN1/abc_tmp_2.scr

3.126. Executing ABC pass (technology mapping using ABC).

3.126.1. Extracting gate netlist of module `\wrapper_io_reg_max' to `<abc-temp-dir>/input.blif'..
Extracted 1050 gates and 1350 wires to a netlist network with 298 inputs and 138 outputs.

3.126.1.1. Executing ABC.
DE:   #PIs = 298  #Luts =   268  Max Lvl =   6  Avg Lvl =   1.95  [   0.37 sec. at Pass 0]
DE:   #PIs = 298  #Luts =   268  Max Lvl =   6  Avg Lvl =   1.95  [   3.35 sec. at Pass 1]
DE:   #PIs = 298  #Luts =   267  Max Lvl =   6  Avg Lvl =   1.95  [   0.47 sec. at Pass 2]
DE:   #PIs = 298  #Luts =   262  Max Lvl =   6  Avg Lvl =   1.95  [   0.44 sec. at Pass 3]
DE:   #PIs = 298  #Luts =   262  Max Lvl =   6  Avg Lvl =   1.95  [   0.28 sec. at Pass 4]
DE:   #PIs = 298  #Luts =   262  Max Lvl =   6  Avg Lvl =   1.95  [   0.73 sec. at Pass 5]
DE:   #PIs = 298  #Luts =   262  Max Lvl =   6  Avg Lvl =   1.95  [   0.38 sec. at Pass 6]
DE:   #PIs = 298  #Luts =   262  Max Lvl =   6  Avg Lvl =   1.95  [   3.57 sec. at Pass 7]
DE:   #PIs = 298  #Luts =   262  Max Lvl =   6  Avg Lvl =   1.95  [   0.15 sec. at Pass 8]

yosys> opt_expr

3.127. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_max.

yosys> opt_merge -nomux

3.128. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_max'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.129. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wrapper_io_reg_max..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.130. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wrapper_io_reg_max.
Performed a total of 0 changes.

yosys> opt_merge

3.131. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_max'.
Removed a total of 0 cells.

yosys> opt_share

3.132. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.133. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.134. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_reg_max..
Removed 0 unused cells and 1265 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.135. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_max.
MAX OPT ITERATION = 1

yosys> hierarchy -check

3.136. Executing HIERARCHY pass (managing design hierarchy).

3.136.1. Analyzing design hierarchy..
Top module:  \wrapper_io_reg_max

3.136.2. Analyzing design hierarchy..
Top module:  \wrapper_io_reg_max
Removed 0 unused modules.

yosys> stat

3.137. Printing statistics.

=== wrapper_io_reg_max ===

   Number of wires:               2087
   Number of wire bits:           5055
   Number of public wires:        1685
   Number of public wire bits:    4653
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                820
     $lut                          262
     dffsre                        272
     latchsre                      286


yosys> opt_clean -purge

3.138. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_reg_max..
Removed 0 unused cells and 1389 unused wires.
<suppressed ~1389 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.139. Executing Verilog backend.
Dumping module `\wrapper_io_reg_max'.

Warnings: 8 unique messages, 8 total
End of script. Logfile hash: a8fffe6dc2, CPU: user 6.14s system 0.06s, MEM: 69.31 MB peak
Yosys 0.18+10 (git sha1 a3cbfccc4, gcc 9.4.0-1ubuntu1~20.04.1 -fPIC -Os)
Time spent: 96% 6x abc (138 sec), 1% 23x opt_expr (1 sec), ...
real 47.98
user 132.95
sys 11.20
