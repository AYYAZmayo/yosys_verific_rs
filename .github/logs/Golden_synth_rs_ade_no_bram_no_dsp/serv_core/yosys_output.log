
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.49
 Yosys 0.18+10 (git sha1 7a7a25778, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 05:39:28 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k serv_alu.v serv_bufreg.v serv_bufreg2.v serv_csr.v serv_ctrl.v serv_decode.v serv_immdec.v serv_mem_if.v serv_rf_if.v serv_rf_ram.v serv_rf_ram_if.v serv_rf_top.v serv_state.v serv_synth_wrapper.v serv_top.v

yosys> verific -vlog2k serv_alu.v serv_bufreg.v serv_bufreg2.v serv_csr.v serv_ctrl.v serv_decode.v serv_immdec.v serv_mem_if.v serv_rf_if.v serv_rf_ram.v serv_rf_ram_if.v serv_rf_top.v serv_state.v serv_synth_wrapper.v serv_top.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 05:39:28 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'serv_alu.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'serv_bufreg.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'serv_bufreg2.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'serv_csr.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'serv_ctrl.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'serv_decode.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'serv_immdec.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'serv_mem_if.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'serv_rf_if.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'serv_rf_ram.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'serv_rf_ram_if.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'serv_rf_top.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'serv_state.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'serv_synth_wrapper.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'serv_top.v'

yosys> synth_rs -top serv_synth_wrapper -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.58

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\RS_DSP2_MULT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_sim'.
Generating RTLIL representation for module `\dsp_t1_20x18x64'.
Generating RTLIL representation for module `\dsp_t1_10x9x32'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top serv_synth_wrapper

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] serv_synth_wrapper.v:3: compiling module 'serv_synth_wrapper'
VERIFIC-INFO [VERI-1018] serv_rf_ram_if.v:2: compiling module 'serv_rf_ram_if(width=2)'
VERIFIC-WARNING [VERI-1209] serv_rf_ram_if.v:80: expression size 32 truncated to fit in target size 5
VERIFIC-INFO [VERI-1018] serv_top.v:3: compiling module 'serv_top'
VERIFIC-INFO [VERI-1018] serv_state.v:1: compiling module 'serv_state(WITH_CSR=1'b1,MDU=1'b0)'
VERIFIC-INFO [VERI-1018] serv_decode.v:2: compiling module 'serv_decode(PRE_REGISTER=1'b1,MDU=1'b0)'
VERIFIC-INFO [VERI-1018] serv_immdec.v:2: compiling module 'serv_immdec'
VERIFIC-INFO [VERI-1018] serv_bufreg.v:1: compiling module 'serv_bufreg(MDU=1'b0)'
VERIFIC-INFO [VERI-1018] serv_bufreg2.v:1: compiling module 'serv_bufreg2'
VERIFIC-WARNING [VERI-1209] serv_bufreg2.v:43: expression size 32 truncated to fit in target size 6
VERIFIC-INFO [VERI-1018] serv_ctrl.v:2: compiling module 'serv_ctrl'
VERIFIC-INFO [VERI-1018] serv_alu.v:2: compiling module 'serv_alu'
VERIFIC-INFO [VERI-1018] serv_rf_if.v:2: compiling module 'serv_rf_if'
VERIFIC-INFO [VERI-1018] serv_mem_if.v:2: compiling module 'serv_mem_if(WITH_CSR=1'b1)'
VERIFIC-INFO [VERI-1018] serv_csr.v:2: compiling module 'serv_csr'
Importing module serv_synth_wrapper.
Importing module serv_rf_ram_if(width=2).
Importing module serv_top.
Importing module serv_alu.
Importing module serv_bufreg(MDU=1'b0).
Importing module serv_bufreg2.
Importing module serv_csr.
Importing module serv_ctrl.
Importing module serv_decode(PRE_REGISTER=1'b1,MDU=1'b0).
Importing module serv_immdec.
Importing module serv_mem_if(WITH_CSR=1'b1).
Importing module serv_rf_if.
Importing module serv_state(WITH_CSR=1'b1,MDU=1'b0).

3.3.1. Analyzing design hierarchy..
Top module:  \serv_synth_wrapper
Used module:     \serv_top
Used module:         \serv_csr
Used module:         \serv_mem_if(WITH_CSR=1'b1)
Used module:         \serv_rf_if
Used module:         \serv_alu
Used module:         \serv_ctrl
Used module:         \serv_bufreg2
Used module:         \serv_bufreg(MDU=1'b0)
Used module:         \serv_immdec
Used module:         \serv_decode(PRE_REGISTER=1'b1,MDU=1'b0)
Used module:         \serv_state(WITH_CSR=1'b1,MDU=1'b0)
Used module:     \serv_rf_ram_if(width=2)

3.3.2. Analyzing design hierarchy..
Top module:  \serv_synth_wrapper
Used module:     \serv_top
Used module:         \serv_csr
Used module:         \serv_mem_if(WITH_CSR=1'b1)
Used module:         \serv_rf_if
Used module:         \serv_alu
Used module:         \serv_ctrl
Used module:         \serv_bufreg2
Used module:         \serv_bufreg(MDU=1'b0)
Used module:         \serv_immdec
Used module:         \serv_decode(PRE_REGISTER=1'b1,MDU=1'b0)
Used module:         \serv_state(WITH_CSR=1'b1,MDU=1'b0)
Used module:     \serv_rf_ram_if(width=2)
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.4.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.4.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_state(WITH_CSR=1'b1,MDU=1'b0).
<suppressed ~1 debug messages>
Optimizing module serv_rf_if.
Optimizing module serv_mem_if(WITH_CSR=1'b1).
<suppressed ~2 debug messages>
Optimizing module serv_immdec.
Optimizing module serv_decode(PRE_REGISTER=1'b1,MDU=1'b0).
<suppressed ~6 debug messages>
Optimizing module serv_ctrl.
Optimizing module serv_csr.
<suppressed ~1 debug messages>
Optimizing module serv_bufreg2.
<suppressed ~1 debug messages>
Optimizing module serv_bufreg(MDU=1'b0).
Optimizing module serv_alu.
Optimizing module serv_top.
Optimizing module serv_rf_ram_if(width=2).
<suppressed ~1 debug messages>
Optimizing module serv_synth_wrapper.

yosys> bmuxmap

3.5. Executing BMUXMAP pass.

yosys> demuxmap

3.6. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> flatten

3.7. Executing FLATTEN pass (flatten design).
Deleting now unused module serv_alu.
Deleting now unused module serv_bufreg(MDU=1'b0).
Deleting now unused module serv_bufreg2.
Deleting now unused module serv_csr.
Deleting now unused module serv_ctrl.
Deleting now unused module serv_decode(PRE_REGISTER=1'b1,MDU=1'b0).
Deleting now unused module serv_immdec.
Deleting now unused module serv_mem_if(WITH_CSR=1'b1).
Deleting now unused module serv_rf_if.
Deleting now unused module serv_rf_ram_if(width=2).
Deleting now unused module serv_state(WITH_CSR=1'b1,MDU=1'b0).
Deleting now unused module serv_top.
<suppressed ~12 debug messages>

yosys> bmuxmap

3.8. Executing BMUXMAP pass.

yosys> demuxmap

3.9. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> tribuf -logic

3.10. Executing TRIBUF pass.

yosys> deminout

3.11. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.

yosys> opt_clean

3.13. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..
Removed 2 unused cells and 1026 unused wires.
<suppressed ~252 debug messages>

yosys> check

3.14. Executing CHECK pass (checking for obvious problems).
Checking module serv_synth_wrapper...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.15. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.15.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.
<suppressed ~9 debug messages>

yosys> opt_merge -nomux

3.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
<suppressed ~39 debug messages>
Removed a total of 13 cells.

yosys> opt_muxtree

3.15.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \serv_synth_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~57 debug messages>

yosys> opt_reduce

3.15.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \serv_synth_wrapper.
Performed a total of 0 changes.

yosys> opt_merge

3.15.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.15.6. Executing OPT_DFF pass (perform DFF optimizations).
Removing never-active async load on $flatten\rf_ram_if.$verific$wdata1_r_reg$serv_rf_ram_if.v:88$362 ($aldff) from module serv_synth_wrapper.
Removing never-active async load on $flatten\rf_ram_if.$verific$rdata0_reg$serv_rf_ram_if.v:146$389 ($aldff) from module serv_synth_wrapper.
Removing never-active async load on $flatten\rf_ram_if.$verific$rcnt_reg$serv_rf_ram_if.v:146$386 ($aldff) from module serv_synth_wrapper.
Removing never-active async load on $flatten\cpu.\state.$verific$o_cnt_reg$serv_state.v:179$2087 ($aldff) from module serv_synth_wrapper.
Removing never-active async load on $flatten\cpu.\state.$verific$o_cnt_r_reg$serv_state.v:179$2088 ($aldff) from module serv_synth_wrapper.
Removing never-active async load on $flatten\cpu.\immdec.$verific$imm30_25_reg$serv_immdec.v:59$1729 ($aldff) from module serv_synth_wrapper.
Removing never-active async load on $flatten\cpu.\immdec.$verific$imm24_20_reg$serv_immdec.v:59$1730 ($aldff) from module serv_synth_wrapper.
Removing never-active async load on $flatten\cpu.\immdec.$verific$imm19_12_20_reg$serv_immdec.v:59$1727 ($aldff) from module serv_synth_wrapper.
Removing never-active async load on $flatten\cpu.\immdec.$verific$imm11_7_reg$serv_immdec.v:59$1731 ($aldff) from module serv_synth_wrapper.
Removing never-active async load on $flatten\cpu.\genblk1.csr.$verific$mcause3_0_reg$serv_csr.v:140$1255 ($aldff) from module serv_synth_wrapper.
Removing never-active async load on $flatten\cpu.\decode.$verific$opcode_reg$serv_decode.v:248$1602 ($aldff) from module serv_synth_wrapper.
Removing never-active async load on $flatten\cpu.\decode.$verific$funct3_reg$serv_decode.v:248$1599 ($aldff) from module serv_synth_wrapper.
Removing never-active async load on $flatten\cpu.\ctrl.$verific$o_ibus_adr_reg$serv_ctrl.v:78$1322 ($aldff) from module serv_synth_wrapper.
Removing never-active async load on $flatten\cpu.\bufreg2.$verific$dat_reg$serv_bufreg2.v:63$1113 ($aldff) from module serv_synth_wrapper.
Removing never-active async load on $flatten\cpu.\bufreg.$verific$lsb_reg$serv_bufreg.v:44$1043 ($aldff) from module serv_synth_wrapper.
Removing never-active async load on $flatten\cpu.\bufreg.$verific$data_reg$serv_bufreg.v:44$1042 ($aldff) from module serv_synth_wrapper.

yosys> opt_clean

3.15.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..
Removed 0 unused cells and 22 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.15.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.

3.15.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.15.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \serv_synth_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~57 debug messages>

yosys> opt_reduce

3.15.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \serv_synth_wrapper.
Performed a total of 0 changes.

yosys> opt_merge

3.15.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.15.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.15.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..

yosys> opt_expr

3.15.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.

3.15.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

3.16. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.16.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.16.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.16.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.16.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..

yosys> fsm_opt

3.16.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.16.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.16.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.16.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat

3.17. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.17.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.

yosys> opt_merge -nomux

3.17.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.17.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \serv_synth_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~57 debug messages>

yosys> opt_reduce

3.17.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \serv_synth_wrapper.
Performed a total of 0 changes.

yosys> opt_merge

3.17.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.17.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $flatten\rf_ram_if.$verific$rreq_r_reg$serv_rf_ram_if.v:146$387 ($dff) from module serv_synth_wrapper (D = \rf_ram_if.i_rreq, Q = \rf_ram_if.rreq_r, rval = 1'0).
Adding SRST signal on $flatten\rf_ram_if.$verific$rgnt_reg$serv_rf_ram_if.v:146$388 ($dff) from module serv_synth_wrapper (D = \rf_ram_if.rreq_r, Q = \rf_ram_if.rgnt, rval = 1'0).
Adding EN signal on $flatten\rf_ram_if.$verific$rdata1_reg[0]$serv_rf_ram_if.v:122$372 ($dff) from module serv_synth_wrapper (D = \i_rdata [1], Q = \rf_ram_if.rdata1).
Adding SRST signal on $flatten\rf_ram_if.$verific$rdata0_reg$serv_rf_ram_if.v:146$389 ($dff) from module serv_synth_wrapper (D = \i_rdata [1], Q = \rf_ram_if.rdata0 [1], rval = 1'0).
Adding SRST signal on $flatten\rf_ram_if.$verific$rcnt_reg$serv_rf_ram_if.v:146$386 ($dff) from module serv_synth_wrapper (D = { $flatten\rf_ram_if.$verific$n108$326 [4:2] $flatten\rf_ram_if.$verific$n108$326 [0] }, Q = { \rf_ram_if.rcnt [4:2] \rf_ram_if.rcnt [0] }, rval = 4'0000).
Adding SRST signal on $flatten\rf_ram_if.$verific$rcnt_reg$serv_rf_ram_if.v:146$386 ($dff) from module serv_synth_wrapper (D = $flatten\rf_ram_if.$verific$n126$329 [1], Q = \rf_ram_if.rcnt [1], rval = 1'1).
Adding SRST signal on $flatten\cpu.\state.$verific$stage_two_req_reg$serv_state.v:179$2086 ($dff) from module serv_synth_wrapper (D = $flatten\cpu.\state.$verific$n96$1956, Q = \cpu.state.stage_two_req, rval = 1'0).
Adding SRST signal on $flatten\cpu.\state.$verific$o_ctrl_jump_reg$serv_state.v:179$2084 ($dff) from module serv_synth_wrapper (D = $flatten\cpu.\state.$verific$n92$1952, Q = \cpu.state.o_ctrl_jump, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$2113 ($sdff) from module serv_synth_wrapper (D = $flatten\cpu.\state.$verific$n89$1949, Q = \cpu.state.o_ctrl_jump).
Adding SRST signal on $flatten\cpu.\state.$verific$o_cnt_reg$serv_state.v:179$2087 ($dff) from module serv_synth_wrapper (D = $flatten\cpu.\state.$verific$n103$1977, Q = \cpu.state.o_cnt, rval = 3'000).
Adding SRST signal on $flatten\cpu.\state.$verific$o_cnt_r_reg$serv_state.v:179$2088 ($dff) from module serv_synth_wrapper (D = { \cpu.state.o_cnt_r [2:0] $flatten\cpu.\state.$verific$n111$1961 }, Q = \cpu.state.o_cnt_r, rval = 4'0000).
Adding SRST signal on $flatten\cpu.\state.$verific$o_cnt_done_reg$serv_state.v:179$2085 ($dff) from module serv_synth_wrapper (D = $flatten\cpu.\state.$verific$n94$1954, Q = \cpu.state.o_cnt_done, rval = 1'0).
Adding SRST signal on $flatten\cpu.\state.$verific$init_done_reg$serv_state.v:179$2083 ($dff) from module serv_synth_wrapper (D = $flatten\cpu.\state.$verific$n91$1951, Q = \cpu.state.init_done, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$2118 ($sdff) from module serv_synth_wrapper (D = $flatten\cpu.\state.$verific$n87$1947, Q = \cpu.state.init_done).
Adding EN signal on $flatten\cpu.\state.$verific$ibus_cyc_reg$serv_state.v:179$2082 ($dff) from module serv_synth_wrapper (D = $flatten\cpu.\ctrl.$verific$n49$1277, Q = \cpu.state.ibus_cyc).
Adding SRST signal on $flatten\cpu.\state.$verific$genblk1.misalign_trap_sync_r_reg$serv_state.v:198$2100 ($dff) from module serv_synth_wrapper (D = $flatten\cpu.\state.$verific$n167$1974, Q = \cpu.state.genblk1.misalign_trap_sync_r, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$2121 ($sdff) from module serv_synth_wrapper (D = $flatten\cpu.\state.$verific$n165$1972, Q = \cpu.state.genblk1.misalign_trap_sync_r).
Adding EN signal on $flatten\cpu.\mem_if.$verific$signbit_reg$serv_mem_if.v:56$1808 ($dff) from module serv_synth_wrapper (D = \cpu.mem_if.i_bufreg2_q, Q = \cpu.mem_if.signbit).
Adding EN signal on $flatten\cpu.\immdec.$verific$imm7_reg$serv_immdec.v:59$1728 ($dff) from module serv_synth_wrapper (D = $flatten\cpu.\immdec.$verific$n63$1663, Q = \cpu.immdec.imm7).
Adding EN signal on $flatten\cpu.\immdec.$verific$imm31_reg$serv_immdec.v:59$1726 ($dff) from module serv_synth_wrapper (D = \i_ibus_rdt [31], Q = \cpu.immdec.imm31).
Adding EN signal on $flatten\cpu.\immdec.$verific$imm30_25_reg$serv_immdec.v:59$1729 ($dff) from module serv_synth_wrapper (D = $flatten\cpu.\immdec.$verific$n70$1679, Q = \cpu.immdec.imm30_25).
Adding EN signal on $flatten\cpu.\immdec.$verific$imm24_20_reg$serv_immdec.v:59$1730 ($dff) from module serv_synth_wrapper (D = $flatten\cpu.\immdec.$verific$n93$1682, Q = \cpu.immdec.imm24_20).
Adding EN signal on $flatten\cpu.\immdec.$verific$imm19_12_20_reg$serv_immdec.v:59$1727 ($dff) from module serv_synth_wrapper (D = $flatten\cpu.\immdec.$verific$n32$1676, Q = \cpu.immdec.imm19_12_20).
Adding EN signal on $flatten\cpu.\immdec.$verific$imm11_7_reg$serv_immdec.v:59$1731 ($dff) from module serv_synth_wrapper (D = $flatten\cpu.\immdec.$verific$n113$1685, Q = \cpu.immdec.imm11_7).
Adding EN signal on $flatten\cpu.\genblk1.csr.$verific$timer_irq_r_reg$serv_csr.v:140$1250 ($dff) from module serv_synth_wrapper (D = \cpu.genblk1.csr.timer_irq, Q = \cpu.genblk1.csr.timer_irq_r).
Adding SRST signal on $flatten\cpu.\genblk1.csr.$verific$o_new_irq_reg$serv_csr.v:140$1251 ($dff) from module serv_synth_wrapper (D = $flatten\cpu.\genblk1.csr.$verific$n41$1146, Q = \cpu.genblk1.csr.o_new_irq, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$2131 ($sdff) from module serv_synth_wrapper (D = $flatten\cpu.\genblk1.csr.$verific$n38$1143, Q = \cpu.genblk1.csr.o_new_irq).
Adding EN signal on $flatten\cpu.\genblk1.csr.$verific$mstatus_mpie_reg$serv_csr.v:140$1254 ($dff) from module serv_synth_wrapper (D = \cpu.genblk1.csr.mstatus_mie, Q = \cpu.genblk1.csr.mstatus_mpie).
Adding EN signal on $flatten\cpu.\genblk1.csr.$verific$mstatus_mie_reg$serv_csr.v:140$1253 ($dff) from module serv_synth_wrapper (D = $flatten\cpu.\genblk1.csr.$verific$n51$1156, Q = \cpu.genblk1.csr.mstatus_mie).
Adding SRST signal on $flatten\cpu.\genblk1.csr.$verific$mie_mtie_reg$serv_csr.v:140$1252 ($dff) from module serv_synth_wrapper (D = $flatten\cpu.\genblk1.csr.$verific$n44$1149, Q = \cpu.genblk1.csr.mie_mtie, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$2135 ($sdff) from module serv_synth_wrapper (D = \cpu.genblk1.csr.csr_in, Q = \cpu.genblk1.csr.mie_mtie).
Adding EN signal on $flatten\cpu.\genblk1.csr.$verific$mcause3_0_reg$serv_csr.v:140$1255 ($dff) from module serv_synth_wrapper (D = $flatten\cpu.\genblk1.csr.$verific$n109$1175, Q = \cpu.genblk1.csr.mcause3_0).
Adding EN signal on $flatten\cpu.\genblk1.csr.$verific$mcause31_reg$serv_csr.v:140$1256 ($dff) from module serv_synth_wrapper (D = $flatten\cpu.\genblk1.csr.$verific$n91$1168, Q = \cpu.genblk1.csr.mcause31).
Adding EN signal on $flatten\cpu.\decode.$verific$opcode_reg$serv_decode.v:248$1602 ($dff) from module serv_synth_wrapper (D = \i_ibus_rdt [6:2], Q = \cpu.decode.opcode).
Adding EN signal on $flatten\cpu.\decode.$verific$op26_reg$serv_decode.v:248$1606 ($dff) from module serv_synth_wrapper (D = \i_ibus_rdt [26], Q = \cpu.decode.op26).
Adding EN signal on $flatten\cpu.\decode.$verific$op22_reg$serv_decode.v:248$1605 ($dff) from module serv_synth_wrapper (D = \i_ibus_rdt [22], Q = \cpu.decode.op22).
Adding EN signal on $flatten\cpu.\decode.$verific$op21_reg$serv_decode.v:248$1604 ($dff) from module serv_synth_wrapper (D = \i_ibus_rdt [21], Q = \cpu.decode.op21).
Adding EN signal on $flatten\cpu.\decode.$verific$op20_reg$serv_decode.v:248$1603 ($dff) from module serv_synth_wrapper (D = \i_ibus_rdt [20], Q = \cpu.decode.op20).
Adding EN signal on $flatten\cpu.\decode.$verific$imm30_reg$serv_decode.v:248$1600 ($dff) from module serv_synth_wrapper (D = \i_ibus_rdt [30], Q = \cpu.decode.imm30).
Adding EN signal on $flatten\cpu.\decode.$verific$funct3_reg$serv_decode.v:248$1599 ($dff) from module serv_synth_wrapper (D = \i_ibus_rdt [14:12], Q = \cpu.decode.funct3).
Adding EN signal on $flatten\cpu.\ctrl.$verific$o_ibus_adr_reg$serv_ctrl.v:78$1322 ($dff) from module serv_synth_wrapper (D = $flatten\cpu.\ctrl.$verific$n50$1282, Q = \cpu.ctrl.o_ibus_adr).
Adding SRST signal on $auto$ff.cc:262:slice$2146 ($dffe) from module serv_synth_wrapper (D = { \cpu.ctrl.new_pc \cpu.ctrl.o_ibus_adr [31:1] }, Q = \cpu.ctrl.o_ibus_adr, rval = 0).
Adding EN signal on $flatten\cpu.\bufreg2.$verific$dat_reg$serv_bufreg2.v:63$1113 ($dff) from module serv_synth_wrapper (D = $flatten\cpu.\bufreg2.$verific$n111$1074, Q = \cpu.bufreg2.dat).
Adding EN signal on $flatten\cpu.\bufreg.$verific$lsb_reg$serv_bufreg.v:44$1043 ($dff) from module serv_synth_wrapper (D = { $flatten\cpu.\bufreg.$verific$n89$1011 \cpu.bufreg.lsb [1] }, Q = \cpu.bufreg.lsb).
Adding EN signal on $flatten\cpu.\bufreg.$verific$data_reg$serv_bufreg.v:44$1042 ($dff) from module serv_synth_wrapper (D = { $flatten\cpu.\bufreg.$verific$n24$1008 \cpu.bufreg.data [29:1] }, Q = \cpu.bufreg.data).
Adding EN signal on $flatten\cpu.\alu.$verific$cmp_r_reg$serv_alu.v:66$996 ($dff) from module serv_synth_wrapper (D = \cpu.state.i_alu_cmp, Q = \cpu.alu.cmp_r).

yosys> opt_clean

3.17.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..
Removed 44 unused cells and 44 unused wires.
<suppressed ~45 debug messages>

yosys> opt_expr

3.17.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.

3.17.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.17.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \serv_synth_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~30 debug messages>

yosys> opt_reduce

3.17.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \serv_synth_wrapper.
Performed a total of 0 changes.

yosys> opt_merge

3.17.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.17.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.17.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..

yosys> opt_expr

3.17.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.

3.17.16. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.18. Executing WREDUCE pass (reducing word size of cells).
Removed top 4 bits (of 5) from port B of cell serv_synth_wrapper.$flatten\rf_ram_if.$verific$add_43$serv_rf_ram_if.v:127$374 ($add).
Removed top 3 bits (of 5) from mux cell serv_synth_wrapper.$flatten\rf_ram_if.$verific$mux_46$serv_rf_ram_if.v:129$376 ($mux).
Removed top 1 bits (of 2) from mux cell serv_synth_wrapper.$flatten\rf_ram_if.$verific$mux_53$serv_rf_ram_if.v:138$381 ($mux).
Removed top 1 bits (of 6) from port A of cell serv_synth_wrapper.$flatten\rf_ram_if.$verific$sub_20$serv_rf_ram_if.v:80$354 ($sub).
Removed top 4 bits (of 6) from port B of cell serv_synth_wrapper.$flatten\rf_ram_if.$verific$sub_20$serv_rf_ram_if.v:80$354 ($sub).
Removed top 1 bits (of 6) from port Y of cell serv_synth_wrapper.$flatten\rf_ram_if.$verific$sub_20$serv_rf_ram_if.v:80$354 ($sub).
Removed top 1 bits (of 2) from port B of cell serv_synth_wrapper.$flatten\cpu.\alu.$verific$add_10$serv_alu.v:34$964 ($add).
Removed top 1 bits (of 2) from port B of cell serv_synth_wrapper.$flatten\cpu.\bufreg.$verific$add_10$serv_bufreg.v:33$1028 ($add).
Removed top 26 bits (of 32) from mux cell serv_synth_wrapper.$flatten\cpu.\bufreg2.$verific$mux_14$serv_bufreg2.v:47$1091 ($mux).
Removed top 1 bits (of 2) from port B of cell serv_synth_wrapper.$flatten\cpu.\bufreg2.$verific$equal_23$serv_bufreg2.v:55$1101 ($eq).
Removed top 1 bits (of 2) from port B of cell serv_synth_wrapper.$flatten\cpu.\ctrl.$verific$add_7$serv_ctrl.v:49$1291 ($add).
Removed top 1 bits (of 2) from port B of cell serv_synth_wrapper.$flatten\cpu.\ctrl.$verific$add_24$serv_ctrl.v:61$1308 ($add).
Removed top 1 bits (of 2) from port B of cell serv_synth_wrapper.$flatten\cpu.\decode.$verific$equal_192$serv_decode.v:227$1581 ($eq).
Removed top 1 bits (of 2) from port B of cell serv_synth_wrapper.$flatten\cpu.\decode.$verific$equal_183$serv_decode.v:222$1577 ($eq).
Removed top 1 bits (of 2) from port B of cell serv_synth_wrapper.$flatten\cpu.\genblk1.csr.$verific$equal_5$serv_csr.v:56$1184 ($eq).
Removed top 1 bits (of 2) from port A of cell serv_synth_wrapper.$flatten\cpu.\rf_if.$verific$or_36$serv_rf_if.v:115$1880 ($or).
Removed top 2 bits (of 3) from port B of cell serv_synth_wrapper.$flatten\cpu.\state.$verific$equal_26$serv_state.v:78$2005 ($eq).
Removed top 2 bits (of 3) from port B of cell serv_synth_wrapper.$flatten\cpu.\state.$verific$add_95$serv_state.v:167$2069 ($add).
Removed top 1 bits (of 7) from port A of cell serv_synth_wrapper.$flatten\cpu.\bufreg2.$verific$sub_10$serv_bufreg2.v:45$1087 ($sub).
Removed top 6 bits (of 7) from port B of cell serv_synth_wrapper.$flatten\cpu.\bufreg2.$verific$sub_10$serv_bufreg2.v:45$1087 ($sub).
Removed top 1 bits (of 7) from port Y of cell serv_synth_wrapper.$flatten\cpu.\bufreg2.$verific$sub_10$serv_bufreg2.v:45$1087 ($sub).
Removed top 1 bits (of 7) from wire serv_synth_wrapper.$flatten\cpu.\bufreg2.$verific$n11$1072.
Removed top 10 bits (of 32) from wire serv_synth_wrapper.$flatten\cpu.\bufreg2.$verific$n111$1074.
Removed top 3 bits (of 5) from wire serv_synth_wrapper.$flatten\rf_ram_if.$verific$n126$329.
Removed top 1 bits (of 2) from wire serv_synth_wrapper.$flatten\rf_ram_if.$verific$n152$334.
Removed top 4 bits (of 6) from wire serv_synth_wrapper.wreg1.

yosys> peepopt

3.19. Executing PEEPOPT pass (run peephole optimizers).

yosys> opt_clean

3.20. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..
Removed 0 unused cells and 7 unused wires.
<suppressed ~1 debug messages>

yosys> bmuxmap

3.21. Executing BMUXMAP pass.

yosys> demuxmap

3.22. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> alumacc

3.23. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module serv_synth_wrapper:
  creating $macc model for $flatten\cpu.\alu.$verific$add_10$serv_alu.v:34$964 ($add).
  creating $macc model for $flatten\cpu.\alu.$verific$add_13$serv_alu.v:36$967 ($add).
  creating $macc model for $flatten\cpu.\alu.$verific$add_14$serv_alu.v:36$968 ($add).
  creating $macc model for $flatten\cpu.\alu.$verific$add_9$serv_alu.v:34$963 ($add).
  creating $macc model for $flatten\cpu.\bufreg.$verific$add_10$serv_bufreg.v:33$1028 ($add).
  creating $macc model for $flatten\cpu.\bufreg.$verific$add_9$serv_bufreg.v:33$1027 ($add).
  creating $macc model for $flatten\cpu.\bufreg2.$verific$sub_10$serv_bufreg2.v:45$1087 ($sub).
  creating $macc model for $flatten\cpu.\ctrl.$verific$add_23$serv_ctrl.v:61$1307 ($add).
  creating $macc model for $flatten\cpu.\ctrl.$verific$add_24$serv_ctrl.v:61$1308 ($add).
  creating $macc model for $flatten\cpu.\ctrl.$verific$add_6$serv_ctrl.v:49$1290 ($add).
  creating $macc model for $flatten\cpu.\ctrl.$verific$add_7$serv_ctrl.v:49$1291 ($add).
  creating $macc model for $flatten\cpu.\state.$verific$add_95$serv_state.v:167$2069 ($add).
  creating $macc model for $flatten\rf_ram_if.$verific$add_43$serv_rf_ram_if.v:127$374 ($add).
  creating $macc model for $flatten\rf_ram_if.$verific$sub_20$serv_rf_ram_if.v:80$354 ($sub).
  merging $macc model for $flatten\cpu.\ctrl.$verific$add_6$serv_ctrl.v:49$1290 into $flatten\cpu.\ctrl.$verific$add_7$serv_ctrl.v:49$1291.
  merging $macc model for $flatten\cpu.\ctrl.$verific$add_23$serv_ctrl.v:61$1307 into $flatten\cpu.\ctrl.$verific$add_24$serv_ctrl.v:61$1308.
  merging $macc model for $flatten\cpu.\bufreg.$verific$add_9$serv_bufreg.v:33$1027 into $flatten\cpu.\bufreg.$verific$add_10$serv_bufreg.v:33$1028.
  merging $macc model for $flatten\cpu.\alu.$verific$add_13$serv_alu.v:36$967 into $flatten\cpu.\alu.$verific$add_14$serv_alu.v:36$968.
  merging $macc model for $flatten\cpu.\alu.$verific$add_9$serv_alu.v:34$963 into $flatten\cpu.\alu.$verific$add_10$serv_alu.v:34$964.
  creating $alu model for $macc $flatten\cpu.\ctrl.$verific$add_24$serv_ctrl.v:61$1308.
  creating $alu model for $macc $flatten\cpu.\ctrl.$verific$add_7$serv_ctrl.v:49$1291.
  creating $alu model for $macc $flatten\cpu.\bufreg2.$verific$sub_10$serv_bufreg2.v:45$1087.
  creating $alu model for $macc $flatten\cpu.\state.$verific$add_95$serv_state.v:167$2069.
  creating $alu model for $macc $flatten\cpu.\bufreg.$verific$add_10$serv_bufreg.v:33$1028.
  creating $alu model for $macc $flatten\rf_ram_if.$verific$sub_20$serv_rf_ram_if.v:80$354.
  creating $alu model for $macc $flatten\cpu.\alu.$verific$add_14$serv_alu.v:36$968.
  creating $alu model for $macc $flatten\rf_ram_if.$verific$add_43$serv_rf_ram_if.v:127$374.
  creating $alu model for $macc $flatten\cpu.\alu.$verific$add_10$serv_alu.v:34$964.
  creating $alu cell for $flatten\cpu.\alu.$verific$add_10$serv_alu.v:34$964: $auto$alumacc.cc:485:replace_alu$2157
  creating $alu cell for $flatten\rf_ram_if.$verific$add_43$serv_rf_ram_if.v:127$374: $auto$alumacc.cc:485:replace_alu$2160
  creating $alu cell for $flatten\cpu.\alu.$verific$add_14$serv_alu.v:36$968: $auto$alumacc.cc:485:replace_alu$2163
  creating $alu cell for $flatten\rf_ram_if.$verific$sub_20$serv_rf_ram_if.v:80$354: $auto$alumacc.cc:485:replace_alu$2166
  creating $alu cell for $flatten\cpu.\bufreg.$verific$add_10$serv_bufreg.v:33$1028: $auto$alumacc.cc:485:replace_alu$2169
  creating $alu cell for $flatten\cpu.\state.$verific$add_95$serv_state.v:167$2069: $auto$alumacc.cc:485:replace_alu$2172
  creating $alu cell for $flatten\cpu.\bufreg2.$verific$sub_10$serv_bufreg2.v:45$1087: $auto$alumacc.cc:485:replace_alu$2175
  creating $alu cell for $flatten\cpu.\ctrl.$verific$add_7$serv_ctrl.v:49$1291: $auto$alumacc.cc:485:replace_alu$2178
  creating $alu cell for $flatten\cpu.\ctrl.$verific$add_24$serv_ctrl.v:61$1308: $auto$alumacc.cc:485:replace_alu$2181
  created 9 $alu and 0 $macc cells.

yosys> opt_expr

3.24. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.

yosys> opt_merge -nomux

3.25. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.26. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \serv_synth_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~30 debug messages>

yosys> opt_reduce

3.27. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \serv_synth_wrapper.
Performed a total of 0 changes.

yosys> opt_merge

3.28. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
Removed a total of 0 cells.

yosys> opt_share

3.29. Executing OPT_SHARE pass.

yosys> opt_dff

3.30. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.31. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..
Removed 5 unused cells and 9 unused wires.
<suppressed ~6 debug messages>

yosys> opt_expr

3.32. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.

yosys> opt_muxtree

3.33. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \serv_synth_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~30 debug messages>

yosys> opt_reduce

3.34. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \serv_synth_wrapper.
Performed a total of 0 changes.

yosys> opt_merge

3.35. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
Removed a total of 0 cells.

yosys> opt_share

3.36. Executing OPT_SHARE pass.

yosys> opt_dff

3.37. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.38. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..

yosys> opt_expr

3.39. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.
MAX OPT ITERATION = 2

yosys> stat

3.40. Printing statistics.

=== serv_synth_wrapper ===

   Number of wires:                808
   Number of wire bits:           1912
   Number of public wires:         546
   Number of public wire bits:    1527
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                409
     $alu                            9
     $and                          155
     $dff                           10
     $dffe                          25
     $eq                            13
     $logic_not                     10
     $mux                           42
     $not                           39
     $or                            84
     $reduce_or                      4
     $sdff                           9
     $sdffce                         1
     $sdffe                          5
     $xor                            3


yosys> memory -nomap

3.41. Executing MEMORY pass.

yosys> opt_mem

3.41.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.41.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.41.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.41.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.41.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.41.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..

yosys> memory_share

3.41.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.41.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.41.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..

yosys> memory_collect

3.41.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.42. Printing statistics.

=== serv_synth_wrapper ===

   Number of wires:                808
   Number of wire bits:           1912
   Number of public wires:         546
   Number of public wire bits:    1527
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                409
     $alu                            9
     $and                          155
     $dff                           10
     $dffe                          25
     $eq                            13
     $logic_not                     10
     $mux                           42
     $not                           39
     $or                            84
     $reduce_or                      4
     $sdff                           9
     $sdffce                         1
     $sdffe                          5
     $xor                            3


yosys> muxpack

3.43. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converting serv_synth_wrapper.$flatten\cpu.\genblk1.csr.$verific$i13$serv_csr.v:60$1191 ... serv_synth_wrapper.$flatten\cpu.\genblk1.csr.$verific$i15$serv_csr.v:60$1193 to a pmux with 3 cases.
Converted 3 (p)mux cells into 1 pmux cells.
<suppressed ~41 debug messages>

yosys> opt_clean

3.44. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

yosys> pmuxtree

3.45. Executing PMUXTREE pass.

yosys> muxpack

3.46. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converting serv_synth_wrapper.$auto$pmuxtree.cc:65:recursive_mux_generator$2184 ... serv_synth_wrapper.$auto$pmuxtree.cc:65:recursive_mux_generator$2186 to a pmux with 2 cases.
Converted 2 (p)mux cells into 1 pmux cells.
<suppressed ~40 debug messages>

yosys> memory_map

3.47. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> stat

3.48. Printing statistics.

=== serv_synth_wrapper ===

   Number of wires:                808
   Number of wire bits:           1912
   Number of public wires:         546
   Number of public wire bits:    1527
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                407
     $alu                            9
     $and                          155
     $dff                           10
     $dffe                          25
     $eq                            13
     $logic_not                     10
     $mux                           39
     $not                           39
     $or                            84
     $pmux                           1
     $reduce_or                      4
     $sdff                           9
     $sdffce                         1
     $sdffe                          5
     $xor                            3


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.49. Executing TECHMAP pass (map to technology primitives).

3.49.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.49.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.49.3. Continuing TECHMAP pass.
Using template $paramod$1d1e68f77481583066c6d429218f48ea9d5739b3\_90_alu for cells of type $alu.
/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:80: Warning: Range [-1:-1] select out of bounds on signal `\C': Setting 1 LSB bits to undef.
/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88: Warning: Range [-1:-1] select out of bounds on signal `\Y': Setting 1 LSB bits to undef.
/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88: Warning: Range [-1:-1] select out of bounds on signal `\S': Setting 1 LSB bits to undef.
/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88: Warning: Ignoring assignment to constant bits:
    old assignment: 1'x = $xor$/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88$2287_Y
    new assignment: { } = { }.
/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:89: Warning: Range [-1:-1] select out of bounds on signal `\S': Setting 1 LSB bits to undef.
/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:89: Warning: Range [-1:-1] select out of bounds on signal `\AA': Setting 1 LSB bits to undef.
Using template $paramod$fc972a7a46956c1788f3cb5257b53c8f1df2d0cc\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $sdff.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $reduce_or.
Using template $paramod$c5c783b17ab1d780abfad8cfe6563a0a7b47a3b0\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$eae5c6d909a05153739c7821f34da2cbc0422532\_90_alu for cells of type $alu.
Using template $paramod$672a140277c71df8314410f22acc08d55222c3c7\_90_alu for cells of type $alu.
Using template $paramod$3ef7d3dd227da7627a99c5e5a6a4deb817573e39\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $sdffce.
Using extmapper simplemap for cells of type $sdffe.
Using template $paramod$a04dd9d4d8b430140c4ff94b50470fb380fda2a0\_90_alu for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000110 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000101 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000011 for cells of type $lcu.
No more expansions possible.
<suppressed ~1750 debug messages>

yosys> stat

3.50. Printing statistics.

=== serv_synth_wrapper ===

   Number of wires:               1149
   Number of wire bits:          12359
   Number of public wires:         546
   Number of public wire bits:    1527
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                914
     $_AND_                        229
     $_DFFE_PP_                    116
     $_DFF_P_                       11
     $_MUX_                        143
     $_NOT_                         90
     $_OR_                         173
     $_SDFFCE_PP0P_                 32
     $_SDFFE_PP0P_                   5
     $_SDFF_PN0_                     1
     $_SDFF_PP0_                    15
     $_SDFF_PP1_                     1
     $_XOR_                         98


yosys> opt_expr

3.51. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.
<suppressed ~175 debug messages>

yosys> opt_merge -nomux

3.52. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
<suppressed ~114 debug messages>
Removed a total of 38 cells.

yosys> opt_muxtree

3.53. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \serv_synth_wrapper..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.54. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \serv_synth_wrapper.
Performed a total of 0 changes.

yosys> opt_merge

3.55. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
Removed a total of 0 cells.

yosys> opt_share

3.56. Executing OPT_SHARE pass.

yosys> opt_dff

3.57. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.58. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..
Removed 24 unused cells and 340 unused wires.
<suppressed ~29 debug messages>

yosys> opt_expr

3.59. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.

yosys> opt_muxtree

3.60. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \serv_synth_wrapper..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.61. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \serv_synth_wrapper.
Performed a total of 0 changes.

yosys> opt_merge

3.62. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
Removed a total of 0 cells.

yosys> opt_share

3.63. Executing OPT_SHARE pass.

yosys> opt_dff

3.64. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.65. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..

yosys> opt_expr

3.66. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.
MAX OPT ITERATION = 2

yosys> opt -fast -full

3.67. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.67.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.
<suppressed ~9 debug messages>

yosys> opt_merge

3.67.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
Removed a total of 0 cells.

yosys> opt_dff

3.67.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.67.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..

3.67.5. Finished fast OPT passes.

yosys> techmap -map +/techmap.v

3.68. Executing TECHMAP pass (map to technology primitives).

3.68.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.68.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> opt -sat

3.69. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.69.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.

yosys> opt_merge -nomux

3.69.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.69.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \serv_synth_wrapper..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.69.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \serv_synth_wrapper.
Performed a total of 0 changes.

yosys> opt_merge

3.69.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.69.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.69.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..

yosys> opt_expr

3.69.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.

3.69.9. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

3.70. Executing ABC pass (technology mapping using ABC).

3.70.1. Summary of detected clock domains:
  4 cells in clk=\clk, en=$flatten\cpu.\immdec.$verific$n62$1662, arst={ }, srst={ }
  3 cells in clk=\clk, en=$flatten\cpu.\genblk1.csr.$verific$n45$1150, arst={ }, srst={ }
  6 cells in clk=\clk, en=\cpu.mem_if.dat_valid, arst={ }, srst={ }
  5 cells in clk=\clk, en=$flatten\cpu.\state.$verific$n82$1943, arst={ }, srst={ }
  26 cells in clk=\clk, en=\cpu.state.o_cnt_done, arst={ }, srst=\i_rst
  3 cells in clk=\clk, en=$flatten\cpu.\genblk1.csr.$verific$n35$1140, arst={ }, srst={ }
  27 cells in clk=\clk, en=$flatten\cpu.\immdec.$verific$n112$1673, arst={ }, srst={ }
  39 cells in clk=\clk, en=$flatten\cpu.\immdec.$verific$n30$1660, arst={ }, srst={ }
  19 cells in clk=\clk, en=$flatten\cpu.\immdec.$verific$n92$1671, arst={ }, srst={ }
  15 cells in clk=\clk, en=$flatten\cpu.\immdec.$verific$n67$1667, arst={ }, srst={ }
  3 cells in clk=\clk, en=$flatten\cpu.\genblk1.csr.$verific$n90$1167, arst={ }, srst={ }
  20 cells in clk=\clk, en=$flatten\cpu.\genblk1.csr.$verific$n42$1147, arst={ }, srst=\i_rst
  18 cells in clk=\clk, en=$flatten\cpu.\genblk1.csr.$verific$n60$1162, arst={ }, srst={ }
  11 cells in clk=\clk, en=$flatten\cpu.\genblk1.csr.$verific$n48$1153, arst={ }, srst={ }
  7 cells in clk=\clk, en=$flatten\cpu.\genblk1.csr.$verific$n35$1140, arst={ }, srst=\i_rst
  113 cells in clk=\clk, en=$flatten\cpu.\bufreg2.$verific$n110$1071, arst={ }, srst={ }
  112 cells in clk=\clk, en=\i_ibus_ack, arst={ }, srst={ }
  43 cells in clk=\clk, en=$flatten\cpu.\ctrl.$verific$n49$1277, arst={ }, srst=\i_rst
  13 cells in clk=\clk, en=$flatten\cpu.\bufreg.$verific$n88$1010, arst={ }, srst={ }
  13 cells in clk=\clk, en=\cpu.alu.i_en, arst={ }, srst={ }
  46 cells in clk=\clk, en=\cpu.bufreg.i_en, arst={ }, srst={ }
  11 cells in clk=\clk, en={ }, arst={ }, srst=\rf_ram_if.i_wreq
  70 cells in clk=\clk, en={ }, arst={ }, srst={ }
  1 cells in clk=\clk, en=\rf_ram_if.rtrig1, arst={ }, srst={ }
  1 cells in clk=\clk, en={ }, arst={ }, srst=!\rf_ram_if.rcnt [0]
  35 cells in clk=\clk, en={ }, arst={ }, srst=$auto$opt_dff.cc:253:combine_resets$2109
  55 cells in clk=\clk, en={ }, arst={ }, srst=\i_rst

3.70.2. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $flatten\cpu.\immdec.$verific$n62$1662
Extracted 4 gates and 10 wires to a netlist network with 6 inputs and 2 outputs.

3.70.2.1. Executing ABC.

3.70.3. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $flatten\cpu.\genblk1.csr.$verific$n45$1150
Extracted 3 gates and 8 wires to a netlist network with 5 inputs and 2 outputs.

3.70.3.1. Executing ABC.

3.70.4. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by \cpu.mem_if.dat_valid
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 3 outputs.

3.70.4.1. Executing ABC.

3.70.5. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $flatten\cpu.\state.$verific$n82$1943
Extracted 5 gates and 8 wires to a netlist network with 3 inputs and 3 outputs.

3.70.5.1. Executing ABC.

3.70.6. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by \cpu.state.o_cnt_done, synchronously reset by \i_rst
Extracted 26 gates and 42 wires to a netlist network with 16 inputs and 9 outputs.

3.70.6.1. Executing ABC.

3.70.7. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $flatten\cpu.\genblk1.csr.$verific$n35$1140
Extracted 3 gates and 5 wires to a netlist network with 2 inputs and 2 outputs.

3.70.7.1. Executing ABC.

3.70.8. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $flatten\cpu.\immdec.$verific$n112$1673
Extracted 27 gates and 44 wires to a netlist network with 16 inputs and 9 outputs.

3.70.8.1. Executing ABC.

3.70.9. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $flatten\cpu.\immdec.$verific$n30$1660
Extracted 39 gates and 70 wires to a netlist network with 31 inputs and 9 outputs.

3.70.9.1. Executing ABC.

3.70.10. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $flatten\cpu.\immdec.$verific$n92$1671
Extracted 19 gates and 31 wires to a netlist network with 12 inputs and 8 outputs.

3.70.10.1. Executing ABC.

3.70.11. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $flatten\cpu.\immdec.$verific$n67$1667
Extracted 15 gates and 26 wires to a netlist network with 11 inputs and 2 outputs.

3.70.11.1. Executing ABC.

3.70.12. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $flatten\cpu.\genblk1.csr.$verific$n90$1167
Extracted 3 gates and 7 wires to a netlist network with 4 inputs and 2 outputs.

3.70.12.1. Executing ABC.

3.70.13. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $flatten\cpu.\genblk1.csr.$verific$n42$1147, synchronously reset by \i_rst
Extracted 20 gates and 34 wires to a netlist network with 14 inputs and 4 outputs.

3.70.13.1. Executing ABC.

3.70.14. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $flatten\cpu.\genblk1.csr.$verific$n60$1162
Extracted 18 gates and 31 wires to a netlist network with 13 inputs and 3 outputs.

3.70.14.1. Executing ABC.

3.70.15. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $flatten\cpu.\genblk1.csr.$verific$n48$1153
Extracted 11 gates and 20 wires to a netlist network with 9 inputs and 7 outputs.

3.70.15.1. Executing ABC.

3.70.16. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $flatten\cpu.\genblk1.csr.$verific$n35$1140, synchronously reset by \i_rst
Extracted 7 gates and 13 wires to a netlist network with 6 inputs and 5 outputs.

3.70.16.1. Executing ABC.

3.70.17. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $flatten\cpu.\bufreg2.$verific$n110$1071
Extracted 113 gates and 160 wires to a netlist network with 47 inputs and 40 outputs.

3.70.17.1. Executing ABC.

3.70.18. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by \i_ibus_ack
Extracted 112 gates and 146 wires to a netlist network with 34 inputs and 74 outputs.

3.70.18.1. Executing ABC.

3.70.19. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$3582$flatten\cpu.\ctrl.$verific$n49$1277, synchronously reset by \i_rst
Extracted 43 gates and 53 wires to a netlist network with 10 inputs and 37 outputs.

3.70.19.1. Executing ABC.

3.70.20. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $flatten\cpu.\bufreg.$verific$n88$1010
Extracted 13 gates and 21 wires to a netlist network with 8 inputs and 10 outputs.

3.70.20.1. Executing ABC.

3.70.21. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by \cpu.alu.i_en
Extracted 13 gates and 24 wires to a netlist network with 11 inputs and 4 outputs.

3.70.21.1. Executing ABC.

3.70.22. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by \cpu.bufreg.i_en
Extracted 46 gates and 61 wires to a netlist network with 15 inputs and 34 outputs.

3.70.22.1. Executing ABC.

3.70.23. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by \rf_ram_if.i_wreq
Extracted 11 gates and 21 wires to a netlist network with 9 inputs and 4 outputs.

3.70.23.1. Executing ABC.

3.70.24. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 70 gates and 115 wires to a netlist network with 45 inputs and 18 outputs.

3.70.24.1. Executing ABC.

3.70.25. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4283$lo00
Extracted 1 gates and 2 wires to a netlist network with 1 inputs and 1 outputs.

3.70.25.1. Executing ABC.

3.70.26. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by !\rf_ram_if.rcnt [0]
Extracted 1 gates and 2 wires to a netlist network with 1 inputs and 1 outputs.

3.70.26.1. Executing ABC.

3.70.27. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by $auto$opt_dff.cc:253:combine_resets$2109
Extracted 35 gates and 50 wires to a netlist network with 13 inputs and 17 outputs.

3.70.27.1. Executing ABC.

3.70.28. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by \i_rst
Extracted 55 gates and 66 wires to a netlist network with 11 inputs and 25 outputs.

3.70.28.1. Executing ABC.

yosys> abc -dff

3.71. Executing ABC pass (technology mapping using ABC).

3.71.1. Summary of detected clock domains:
  10 cells in clk=\clk, en=$abc$4408$flatten\cpu.\genblk1.csr.$verific$n35$1140, arst={ }, srst=\i_rst
  15 cells in clk=\clk, en=$abc$4153$cpu.alu.i_en, arst={ }, srst={ }
  14 cells in clk=\clk, en={ }, arst={ }, srst=$abc$4270$rf_ram_if.i_wreq
  8 cells in clk=\clk, en=$abc$3762$flatten\cpu.\genblk1.csr.$verific$n48$1153, arst={ }, srst={ }
  2 cells in clk=\clk, en={ }, arst={ }, srst=!$abc$4374$lo0
  1 cells in clk=\clk, en=$abc$4283$lo00, arst={ }, srst={ }
  20 cells in clk=\clk, en=$abc$3743$flatten\cpu.\genblk1.csr.$verific$n60$1162, arst={ }, srst={ }
  84 cells in clk=\clk, en=\i_ibus_ack, arst={ }, srst={ }
  39 cells in clk=\clk, en=$abc$4167$cpu.bufreg.i_en, arst={ }, srst={ }
  21 cells in clk=\clk, en=$abc$3724$flatten\cpu.\genblk1.csr.$verific$n42$1147, arst={ }, srst=\i_rst
  17 cells in clk=\clk, en=$abc$3702$flatten\cpu.\immdec.$verific$n67$1667, arst={ }, srst={ }
  14 cells in clk=\clk, en=$abc$4137$flatten\cpu.\bufreg.$verific$n88$1010, arst={ }, srst={ }
  3 cells in clk=\clk, en=$abc$3719$flatten\cpu.\genblk1.csr.$verific$n90$1167, arst={ }, srst={ }
  87 cells in clk=\clk, en={ }, arst={ }, srst={ }
  40 cells in clk=\clk, en=$abc$3582$flatten\cpu.\ctrl.$verific$n49$1277, arst={ }, srst=\i_rst
  4 cells in clk=\clk, en=$abc$3564$flatten\cpu.\immdec.$verific$n62$1662, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$3569$flatten\cpu.\genblk1.csr.$verific$n45$1150, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$3574$cpu.mem_if.dat_valid, arst={ }, srst={ }
  29 cells in clk=\clk, en={ }, arst={ }, srst=$abc$4374$auto$opt_dff.cc:253:combine_resets$2109
  5 cells in clk=\clk, en=$abc$3582$flatten\cpu.\state.$verific$n82$1943, arst={ }, srst={ }
  22 cells in clk=\clk, en=$abc$4408$lo07, arst={ }, srst=\i_rst
  2 cells in clk=\clk, en=$abc$4408$flatten\cpu.\genblk1.csr.$verific$n35$1140, arst={ }, srst={ }
  25 cells in clk=\clk, en=$abc$3617$flatten\cpu.\immdec.$verific$n112$1673, arst={ }, srst={ }
  32 cells in clk=\clk, en=$abc$3644$flatten\cpu.\immdec.$verific$n30$1660, arst={ }, srst={ }
  18 cells in clk=\clk, en=$abc$3682$flatten\cpu.\immdec.$verific$n92$1671, arst={ }, srst={ }
  100 cells in clk=\clk, en=$abc$3784$flatten\cpu.\bufreg2.$verific$n110$1071, arst={ }, srst={ }
  50 cells in clk=\clk, en={ }, arst={ }, srst=\i_rst

3.71.2. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4408$flatten\cpu.\genblk1.csr.$verific$n35$1140, synchronously reset by \i_rst
Extracted 10 gates and 20 wires to a netlist network with 10 inputs and 7 outputs.

3.71.2.1. Executing ABC.

3.71.3. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4153$cpu.alu.i_en
Extracted 15 gates and 27 wires to a netlist network with 12 inputs and 6 outputs.

3.71.3.1. Executing ABC.

3.71.4. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by $abc$4270$rf_ram_if.i_wreq
Extracted 14 gates and 25 wires to a netlist network with 11 inputs and 5 outputs.

3.71.4.1. Executing ABC.

3.71.5. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$3762$flatten\cpu.\genblk1.csr.$verific$n48$1153
Extracted 8 gates and 16 wires to a netlist network with 8 inputs and 4 outputs.

3.71.5.1. Executing ABC.

3.71.6. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by !$abc$4374$lo0
Extracted 2 gates and 5 wires to a netlist network with 3 inputs and 1 outputs.

3.71.6.1. Executing ABC.

3.71.7. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4283$lo00
Extracted 1 gates and 2 wires to a netlist network with 1 inputs and 1 outputs.

3.71.7.1. Executing ABC.

3.71.8. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$3743$flatten\cpu.\genblk1.csr.$verific$n60$1162
Extracted 20 gates and 32 wires to a netlist network with 12 inputs and 3 outputs.

3.71.8.1. Executing ABC.

3.71.9. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by \i_ibus_ack
Extracted 84 gates and 116 wires to a netlist network with 32 inputs and 63 outputs.

3.71.9.1. Executing ABC.

3.71.10. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4167$cpu.bufreg.i_en
Extracted 39 gates and 49 wires to a netlist network with 10 inputs and 32 outputs.

3.71.10.1. Executing ABC.

3.71.11. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$3724$flatten\cpu.\genblk1.csr.$verific$n42$1147, synchronously reset by \i_rst
Extracted 21 gates and 38 wires to a netlist network with 17 inputs and 7 outputs.

3.71.11.1. Executing ABC.

3.71.12. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$3702$flatten\cpu.\immdec.$verific$n67$1667
Extracted 17 gates and 30 wires to a netlist network with 13 inputs and 3 outputs.

3.71.12.1. Executing ABC.

3.71.13. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4137$flatten\cpu.\bufreg.$verific$n88$1010
Extracted 14 gates and 22 wires to a netlist network with 8 inputs and 12 outputs.

3.71.13.1. Executing ABC.

3.71.14. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$3719$flatten\cpu.\genblk1.csr.$verific$n90$1167
Extracted 3 gates and 7 wires to a netlist network with 4 inputs and 2 outputs.

3.71.14.1. Executing ABC.

3.71.15. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 87 gates and 137 wires to a netlist network with 50 inputs and 21 outputs.

3.71.15.1. Executing ABC.

3.71.16. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$3582$flatten\cpu.\ctrl.$verific$n49$1277, synchronously reset by \i_rst
Extracted 40 gates and 50 wires to a netlist network with 10 inputs and 36 outputs.

3.71.16.1. Executing ABC.

3.71.17. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$3564$flatten\cpu.\immdec.$verific$n62$1662
Extracted 4 gates and 10 wires to a netlist network with 6 inputs and 2 outputs.

3.71.17.1. Executing ABC.

3.71.18. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$3569$flatten\cpu.\genblk1.csr.$verific$n45$1150
Extracted 5 gates and 12 wires to a netlist network with 7 inputs and 4 outputs.

3.71.18.1. Executing ABC.

3.71.19. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$3574$cpu.mem_if.dat_valid
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 4 outputs.

3.71.19.1. Executing ABC.

3.71.20. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by $abc$4374$auto$opt_dff.cc:253:combine_resets$2109
Extracted 29 gates and 43 wires to a netlist network with 14 inputs and 17 outputs.

3.71.20.1. Executing ABC.

3.71.21. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$3582$flatten\cpu.\state.$verific$n82$1943
Extracted 5 gates and 9 wires to a netlist network with 4 inputs and 3 outputs.

3.71.21.1. Executing ABC.

3.71.22. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4408$lo07, synchronously reset by \i_rst
Extracted 22 gates and 38 wires to a netlist network with 16 inputs and 9 outputs.

3.71.22.1. Executing ABC.

3.71.23. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4464$abc$4408$flatten\cpu.\genblk1.csr.$verific$n35$1140
Extracted 2 gates and 3 wires to a netlist network with 1 inputs and 1 outputs.

3.71.23.1. Executing ABC.

3.71.24. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$3617$flatten\cpu.\immdec.$verific$n112$1673
Extracted 25 gates and 42 wires to a netlist network with 17 inputs and 10 outputs.

3.71.24.1. Executing ABC.

3.71.25. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$3644$flatten\cpu.\immdec.$verific$n30$1660
Extracted 32 gates and 59 wires to a netlist network with 27 inputs and 8 outputs.

3.71.25.1. Executing ABC.

3.71.26. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$3682$flatten\cpu.\immdec.$verific$n92$1671
Extracted 18 gates and 29 wires to a netlist network with 11 inputs and 8 outputs.

3.71.26.1. Executing ABC.

3.71.27. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$3784$flatten\cpu.\bufreg2.$verific$n110$1071
Extracted 100 gates and 147 wires to a netlist network with 47 inputs and 41 outputs.

3.71.27.1. Executing ABC.

3.71.28. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by \i_rst
Extracted 50 gates and 67 wires to a netlist network with 17 inputs and 21 outputs.

3.71.28.1. Executing ABC.

yosys> abc -dff

3.72. Executing ABC pass (technology mapping using ABC).

3.72.1. Summary of detected clock domains:
  10 cells in clk=\clk, en=$abc$4464$abc$4408$flatten\cpu.\genblk1.csr.$verific$n35$1140, arst={ }, srst=\i_rst
  14 cells in clk=\clk, en=$abc$4475$abc$4153$cpu.alu.i_en, arst={ }, srst={ }
  14 cells in clk=\clk, en={ }, arst={ }, srst=$abc$4491$abc$4270$rf_ram_if.i_wreq
  8 cells in clk=\clk, en=$abc$4506$abc$3762$flatten\cpu.\genblk1.csr.$verific$n48$1153, arst={ }, srst={ }
  2 cells in clk=\clk, en={ }, arst={ }, srst=!$abc$5021$lo1
  2 cells in clk=\clk, en=$abc$4804$lo06, arst={ }, srst={ }
  35 cells in clk=\clk, en=$abc$5116$abc$3644$flatten\cpu.\immdec.$verific$n30$1660, arst={ }, srst={ }
  18 cells in clk=\clk, en=$abc$4524$abc$3743$flatten\cpu.\genblk1.csr.$verific$n60$1162, arst={ }, srst={ }
  83 cells in clk=\clk, en=\i_ibus_ack, arst={ }, srst={ }
  15 cells in clk=\clk, en=$abc$4742$abc$3724$flatten\cpu.\genblk1.csr.$verific$n42$1147, arst={ }, srst=\i_rst
  17 cells in clk=\clk, en=$abc$4763$abc$3702$flatten\cpu.\immdec.$verific$n67$1667, arst={ }, srst={ }
  12 cells in clk=\clk, en=$abc$4781$abc$4137$flatten\cpu.\bufreg.$verific$n88$1010, arst={ }, srst={ }
  3 cells in clk=\clk, en=$abc$4799$abc$3719$flatten\cpu.\genblk1.csr.$verific$n90$1167, arst={ }, srst={ }
  94 cells in clk=\clk, en={ }, arst={ }, srst={ }
  98 cells in clk=\clk, en=$abc$5172$abc$3784$flatten\cpu.\bufreg2.$verific$n110$1071, arst={ }, srst={ }
  18 cells in clk=\clk, en=$abc$5150$abc$3682$flatten\cpu.\immdec.$verific$n92$1671, arst={ }, srst={ }
  4 cells in clk=\clk, en=$abc$5002$abc$3564$flatten\cpu.\immdec.$verific$n62$1662, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$5007$abc$3569$flatten\cpu.\genblk1.csr.$verific$n45$1150, arst={ }, srst={ }
  39 cells in clk=\clk, en=$abc$4898$abc$3582$flatten\cpu.\ctrl.$verific$n49$1277, arst={ }, srst=\i_rst
  6 cells in clk=\clk, en=$abc$5014$abc$3574$cpu.mem_if.dat_valid, arst={ }, srst={ }
  28 cells in clk=\clk, en={ }, arst={ }, srst=$abc$5021$abc$4374$auto$opt_dff.cc:253:combine_resets$2109
  6 cells in clk=\clk, en=$abc$5056$abc$3582$flatten\cpu.\state.$verific$n82$1943, arst={ }, srst={ }
  39 cells in clk=\clk, en=$abc$4643$abc$4167$cpu.bufreg.i_en, arst={ }, srst={ }
  23 cells in clk=\clk, en=$abc$5303$lo07, arst={ }, srst=\i_rst
  2 cells in clk=\clk, en=$abc$4464$abc$4408$flatten\cpu.\genblk1.csr.$verific$n35$1140, arst={ }, srst={ }
  24 cells in clk=\clk, en=$abc$5089$abc$3617$flatten\cpu.\immdec.$verific$n112$1673, arst={ }, srst={ }
  49 cells in clk=\clk, en={ }, arst={ }, srst=\i_rst

3.72.2. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4464$abc$4408$flatten\cpu.\genblk1.csr.$verific$n35$1140, synchronously reset by \i_rst
Extracted 10 gates and 20 wires to a netlist network with 10 inputs and 7 outputs.

3.72.2.1. Executing ABC.

3.72.3. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4475$abc$4153$cpu.alu.i_en
Extracted 14 gates and 26 wires to a netlist network with 12 inputs and 6 outputs.

3.72.3.1. Executing ABC.

3.72.4. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by $abc$4491$abc$4270$rf_ram_if.i_wreq
Extracted 14 gates and 25 wires to a netlist network with 11 inputs and 5 outputs.

3.72.4.1. Executing ABC.

3.72.5. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4506$abc$3762$flatten\cpu.\genblk1.csr.$verific$n48$1153
Extracted 8 gates and 16 wires to a netlist network with 8 inputs and 4 outputs.

3.72.5.1. Executing ABC.

3.72.6. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by !$abc$5021$lo1
Extracted 2 gates and 5 wires to a netlist network with 3 inputs and 1 outputs.

3.72.6.1. Executing ABC.

3.72.7. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4804$lo06
Extracted 2 gates and 5 wires to a netlist network with 3 inputs and 1 outputs.

3.72.7.1. Executing ABC.

3.72.8. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5116$abc$3644$flatten\cpu.\immdec.$verific$n30$1660
Extracted 35 gates and 64 wires to a netlist network with 29 inputs and 9 outputs.

3.72.8.1. Executing ABC.

3.72.9. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4524$abc$3743$flatten\cpu.\genblk1.csr.$verific$n60$1162
Extracted 18 gates and 30 wires to a netlist network with 12 inputs and 3 outputs.

3.72.9.1. Executing ABC.

3.72.10. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by \i_ibus_ack
Extracted 83 gates and 115 wires to a netlist network with 32 inputs and 63 outputs.

3.72.10.1. Executing ABC.

3.72.11. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4742$abc$3724$flatten\cpu.\genblk1.csr.$verific$n42$1147, synchronously reset by \i_rst
Extracted 15 gates and 27 wires to a netlist network with 12 inputs and 6 outputs.

3.72.11.1. Executing ABC.

3.72.12. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4763$abc$3702$flatten\cpu.\immdec.$verific$n67$1667
Extracted 17 gates and 30 wires to a netlist network with 13 inputs and 3 outputs.

3.72.12.1. Executing ABC.

3.72.13. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4781$abc$4137$flatten\cpu.\bufreg.$verific$n88$1010
Extracted 12 gates and 19 wires to a netlist network with 7 inputs and 10 outputs.

3.72.13.1. Executing ABC.

3.72.14. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4799$abc$3719$flatten\cpu.\genblk1.csr.$verific$n90$1167
Extracted 3 gates and 7 wires to a netlist network with 4 inputs and 2 outputs.

3.72.14.1. Executing ABC.

3.72.15. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 94 gates and 146 wires to a netlist network with 52 inputs and 22 outputs.

3.72.15.1. Executing ABC.

3.72.16. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5172$abc$3784$flatten\cpu.\bufreg2.$verific$n110$1071
Extracted 98 gates and 145 wires to a netlist network with 47 inputs and 40 outputs.

3.72.16.1. Executing ABC.

3.72.17. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5150$abc$3682$flatten\cpu.\immdec.$verific$n92$1671
Extracted 18 gates and 29 wires to a netlist network with 11 inputs and 8 outputs.

3.72.17.1. Executing ABC.

3.72.18. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5002$abc$3564$flatten\cpu.\immdec.$verific$n62$1662
Extracted 4 gates and 10 wires to a netlist network with 6 inputs and 2 outputs.

3.72.18.1. Executing ABC.

3.72.19. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5007$abc$3569$flatten\cpu.\genblk1.csr.$verific$n45$1150
Extracted 5 gates and 12 wires to a netlist network with 7 inputs and 4 outputs.

3.72.19.1. Executing ABC.

3.72.20. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4898$abc$3582$flatten\cpu.\ctrl.$verific$n49$1277, synchronously reset by \i_rst
Extracted 39 gates and 49 wires to a netlist network with 10 inputs and 35 outputs.

3.72.20.1. Executing ABC.

3.72.21. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5014$abc$3574$cpu.mem_if.dat_valid
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 4 outputs.

3.72.21.1. Executing ABC.

3.72.22. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by $abc$5021$abc$4374$auto$opt_dff.cc:253:combine_resets$2109
Extracted 28 gates and 41 wires to a netlist network with 13 inputs and 18 outputs.

3.72.22.1. Executing ABC.

3.72.23. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5056$abc$3582$flatten\cpu.\state.$verific$n82$1943
Extracted 6 gates and 10 wires to a netlist network with 4 inputs and 3 outputs.

3.72.23.1. Executing ABC.

3.72.24. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4643$abc$4167$cpu.bufreg.i_en
Extracted 39 gates and 49 wires to a netlist network with 10 inputs and 32 outputs.

3.72.24.1. Executing ABC.

3.72.25. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5303$lo07, synchronously reset by \i_rst
Extracted 23 gates and 39 wires to a netlist network with 16 inputs and 9 outputs.

3.72.25.1. Executing ABC.

3.72.26. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5359$abc$4464$abc$4408$flatten\cpu.\genblk1.csr.$verific$n35$1140
Extracted 2 gates and 3 wires to a netlist network with 1 inputs and 1 outputs.

3.72.26.1. Executing ABC.

3.72.27. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5089$abc$3617$flatten\cpu.\immdec.$verific$n112$1673
Extracted 24 gates and 39 wires to a netlist network with 15 inputs and 10 outputs.

3.72.27.1. Executing ABC.

3.72.28. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by \i_rst
Extracted 49 gates and 66 wires to a netlist network with 17 inputs and 21 outputs.

3.72.28.1. Executing ABC.

yosys> abc -dff

3.73. Executing ABC pass (technology mapping using ABC).

3.73.1. Summary of detected clock domains:
  9 cells in clk=\clk, en=$abc$5359$abc$4464$abc$4408$flatten\cpu.\genblk1.csr.$verific$n35$1140, arst={ }, srst=\i_rst
  14 cells in clk=\clk, en=$abc$5370$abc$4475$abc$4153$cpu.alu.i_en, arst={ }, srst={ }
  25 cells in clk=\clk, en=$abc$6166$abc$5089$abc$3617$flatten\cpu.\immdec.$verific$n112$1673, arst={ }, srst={ }
  13 cells in clk=\clk, en={ }, arst={ }, srst=$abc$5386$abc$4491$abc$4270$rf_ram_if.i_wreq
  8 cells in clk=\clk, en=$abc$5401$abc$4506$abc$3762$flatten\cpu.\genblk1.csr.$verific$n48$1153, arst={ }, srst={ }
  2 cells in clk=\clk, en={ }, arst={ }, srst=!$abc$6002$lo1
  2 cells in clk=\clk, en=$abc$5630$lo06, arst={ }, srst={ }
  25 cells in clk=\clk, en=$abc$5419$abc$5116$abc$3644$flatten\cpu.\immdec.$verific$n30$1660, arst={ }, srst={ }
  18 cells in clk=\clk, en=$abc$5456$abc$4524$abc$3743$flatten\cpu.\genblk1.csr.$verific$n60$1162, arst={ }, srst={ }
  3 cells in clk=\clk, en=$abc$5359$abc$4464$abc$4408$flatten\cpu.\genblk1.csr.$verific$n35$1140, arst={ }, srst={ }
  82 cells in clk=\clk, en=\i_ibus_ack, arst={ }, srst={ }
  14 cells in clk=\clk, en=$abc$5575$abc$4742$abc$3724$flatten\cpu.\genblk1.csr.$verific$n42$1147, arst={ }, srst=\i_rst
  15 cells in clk=\clk, en=$abc$5591$abc$4763$abc$3702$flatten\cpu.\immdec.$verific$n67$1667, arst={ }, srst={ }
  12 cells in clk=\clk, en=$abc$5609$abc$4781$abc$4137$flatten\cpu.\bufreg.$verific$n88$1010, arst={ }, srst={ }
  3 cells in clk=\clk, en=$abc$5625$abc$4799$abc$3719$flatten\cpu.\genblk1.csr.$verific$n90$1167, arst={ }, srst={ }
  90 cells in clk=\clk, en={ }, arst={ }, srst={ }
  97 cells in clk=\clk, en=$abc$5729$abc$5172$abc$3784$flatten\cpu.\bufreg2.$verific$n110$1071, arst={ }, srst={ }
  20 cells in clk=\clk, en=$abc$5859$abc$5150$abc$3682$flatten\cpu.\immdec.$verific$n92$1671, arst={ }, srst={ }
  4 cells in clk=\clk, en=$abc$5880$abc$5002$abc$3564$flatten\cpu.\immdec.$verific$n62$1662, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$5885$abc$5007$abc$3569$flatten\cpu.\genblk1.csr.$verific$n45$1150, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$5995$abc$5014$abc$3574$cpu.mem_if.dat_valid, arst={ }, srst={ }
  42 cells in clk=\clk, en={ }, arst={ }, srst=$abc$6002$abc$5021$abc$4374$auto$opt_dff.cc:253:combine_resets$2109
  5 cells in clk=\clk, en=$abc$6034$abc$5056$abc$3582$flatten\cpu.\state.$verific$n82$1943, arst={ }, srst={ }
  40 cells in clk=\clk, en=$abc$5892$abc$4898$abc$3582$flatten\cpu.\ctrl.$verific$n49$1277, arst={ }, srst=\i_rst
  39 cells in clk=\clk, en=$abc$6040$abc$4643$abc$4167$cpu.bufreg.i_en, arst={ }, srst={ }
  22 cells in clk=\clk, en=$abc$6192$lo07, arst={ }, srst=\i_rst
  49 cells in clk=\clk, en={ }, arst={ }, srst=\i_rst

3.73.2. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5359$abc$4464$abc$4408$flatten\cpu.\genblk1.csr.$verific$n35$1140, synchronously reset by \i_rst
Extracted 9 gates and 19 wires to a netlist network with 10 inputs and 6 outputs.

3.73.2.1. Executing ABC.

3.73.3. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5370$abc$4475$abc$4153$cpu.alu.i_en
Extracted 14 gates and 26 wires to a netlist network with 12 inputs and 6 outputs.

3.73.3.1. Executing ABC.

3.73.4. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$6166$abc$5089$abc$3617$flatten\cpu.\immdec.$verific$n112$1673
Extracted 25 gates and 41 wires to a netlist network with 16 inputs and 10 outputs.

3.73.4.1. Executing ABC.

3.73.5. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by $abc$5386$abc$4491$abc$4270$rf_ram_if.i_wreq
Extracted 13 gates and 23 wires to a netlist network with 10 inputs and 4 outputs.

3.73.5.1. Executing ABC.

3.73.6. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5401$abc$4506$abc$3762$flatten\cpu.\genblk1.csr.$verific$n48$1153
Extracted 8 gates and 16 wires to a netlist network with 8 inputs and 4 outputs.

3.73.6.1. Executing ABC.

3.73.7. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by !$abc$6002$lo1
Extracted 2 gates and 5 wires to a netlist network with 3 inputs and 1 outputs.

3.73.7.1. Executing ABC.

3.73.8. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5630$lo06
Extracted 2 gates and 5 wires to a netlist network with 3 inputs and 1 outputs.

3.73.8.1. Executing ABC.

3.73.9. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5419$abc$5116$abc$3644$flatten\cpu.\immdec.$verific$n30$1660
Extracted 25 gates and 45 wires to a netlist network with 20 inputs and 7 outputs.

3.73.9.1. Executing ABC.

3.73.10. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5456$abc$4524$abc$3743$flatten\cpu.\genblk1.csr.$verific$n60$1162
Extracted 18 gates and 30 wires to a netlist network with 12 inputs and 3 outputs.

3.73.10.1. Executing ABC.

3.73.11. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$6248$abc$5359$abc$4464$abc$4408$flatten\cpu.\genblk1.csr.$verific$n35$1140
Extracted 3 gates and 5 wires to a netlist network with 2 inputs and 1 outputs.

3.73.11.1. Executing ABC.

3.73.12. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by \i_ibus_ack
Extracted 82 gates and 113 wires to a netlist network with 31 inputs and 63 outputs.

3.73.12.1. Executing ABC.

3.73.13. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5575$abc$4742$abc$3724$flatten\cpu.\genblk1.csr.$verific$n42$1147, synchronously reset by \i_rst
Extracted 14 gates and 26 wires to a netlist network with 12 inputs and 6 outputs.

3.73.13.1. Executing ABC.

3.73.14. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5591$abc$4763$abc$3702$flatten\cpu.\immdec.$verific$n67$1667
Extracted 15 gates and 26 wires to a netlist network with 11 inputs and 2 outputs.

3.73.14.1. Executing ABC.

3.73.15. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5609$abc$4781$abc$4137$flatten\cpu.\bufreg.$verific$n88$1010
Extracted 12 gates and 19 wires to a netlist network with 7 inputs and 10 outputs.

3.73.15.1. Executing ABC.

3.73.16. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5625$abc$4799$abc$3719$flatten\cpu.\genblk1.csr.$verific$n90$1167
Extracted 3 gates and 7 wires to a netlist network with 4 inputs and 2 outputs.

3.73.16.1. Executing ABC.

3.73.17. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 90 gates and 143 wires to a netlist network with 53 inputs and 24 outputs.

3.73.17.1. Executing ABC.

3.73.18. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5729$abc$5172$abc$3784$flatten\cpu.\bufreg2.$verific$n110$1071
Extracted 97 gates and 144 wires to a netlist network with 47 inputs and 40 outputs.

3.73.18.1. Executing ABC.

3.73.19. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5859$abc$5150$abc$3682$flatten\cpu.\immdec.$verific$n92$1671
Extracted 20 gates and 34 wires to a netlist network with 14 inputs and 9 outputs.

3.73.19.1. Executing ABC.

3.73.20. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5880$abc$5002$abc$3564$flatten\cpu.\immdec.$verific$n62$1662
Extracted 4 gates and 10 wires to a netlist network with 6 inputs and 2 outputs.

3.73.20.1. Executing ABC.

3.73.21. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5885$abc$5007$abc$3569$flatten\cpu.\genblk1.csr.$verific$n45$1150
Extracted 5 gates and 12 wires to a netlist network with 7 inputs and 4 outputs.

3.73.21.1. Executing ABC.

3.73.22. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5995$abc$5014$abc$3574$cpu.mem_if.dat_valid
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 4 outputs.

3.73.22.1. Executing ABC.

3.73.23. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by $abc$6002$abc$5021$abc$4374$auto$opt_dff.cc:253:combine_resets$2109
Extracted 42 gates and 71 wires to a netlist network with 29 inputs and 24 outputs.

3.73.23.1. Executing ABC.

3.73.24. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$6034$abc$5056$abc$3582$flatten\cpu.\state.$verific$n82$1943
Extracted 5 gates and 9 wires to a netlist network with 4 inputs and 3 outputs.

3.73.24.1. Executing ABC.

3.73.25. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5892$abc$4898$abc$3582$flatten\cpu.\ctrl.$verific$n49$1277, synchronously reset by \i_rst
Extracted 40 gates and 51 wires to a netlist network with 11 inputs and 36 outputs.

3.73.25.1. Executing ABC.

3.73.26. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$6040$abc$4643$abc$4167$cpu.bufreg.i_en
Extracted 39 gates and 49 wires to a netlist network with 10 inputs and 32 outputs.

3.73.26.1. Executing ABC.

3.73.27. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$6192$lo07, synchronously reset by \i_rst
Extracted 22 gates and 38 wires to a netlist network with 16 inputs and 9 outputs.

3.73.27.1. Executing ABC.

3.73.28. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by \i_rst
Extracted 49 gates and 66 wires to a netlist network with 17 inputs and 21 outputs.

3.73.28.1. Executing ABC.

yosys> opt_ffinv

3.74. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt -sat

3.75. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.75.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.

yosys> opt_merge -nomux

3.75.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
<suppressed ~21 debug messages>
Removed a total of 7 cells.

yosys> opt_muxtree

3.75.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \serv_synth_wrapper..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.75.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \serv_synth_wrapper.
Performed a total of 0 changes.

yosys> opt_merge

3.75.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.75.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.75.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..
Removed 0 unused cells and 4997 unused wires.
<suppressed ~201 debug messages>

yosys> opt_expr

3.75.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.

3.75.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.75.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \serv_synth_wrapper..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.75.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \serv_synth_wrapper.
Performed a total of 0 changes.

yosys> opt_merge

3.75.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.75.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.75.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..

yosys> opt_expr

3.75.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.

3.75.16. Finished OPT passes. (There is nothing left to do.)

yosys> bmuxmap

3.76. Executing BMUXMAP pass.

yosys> demuxmap

3.77. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> abc -script /home/users/temp_dir/yosys_TH72LV/abc_tmp_1.scr

3.78. Executing ABC pass (technology mapping using ABC).

3.78.1. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Extracted 477 gates and 659 wires to a netlist network with 182 inputs and 142 outputs.

3.78.1.1. Executing ABC.
DE:   #PIs = 182  #Luts =   204  Max Lvl =  11  Avg Lvl =   2.76  [   0.28 sec. at Pass 0]
DE:   #PIs = 182  #Luts =   200  Max Lvl =   9  Avg Lvl =   2.64  [   1.61 sec. at Pass 1]
DE:   #PIs = 182  #Luts =   198  Max Lvl =   8  Avg Lvl =   2.58  [   0.54 sec. at Pass 2]
DE:   #PIs = 182  #Luts =   198  Max Lvl =   8  Avg Lvl =   2.58  [   1.04 sec. at Pass 3]
DE:   #PIs = 182  #Luts =   197  Max Lvl =   9  Avg Lvl =   2.51  [   0.81 sec. at Pass 4]
DE:   #PIs = 182  #Luts =   196  Max Lvl =   8  Avg Lvl =   2.30  [   1.01 sec. at Pass 5]
DE:   #PIs = 182  #Luts =   196  Max Lvl =   8  Avg Lvl =   2.30  [   0.83 sec. at Pass 6]
DE:   #PIs = 182  #Luts =   194  Max Lvl =   8  Avg Lvl =   2.25  [   1.05 sec. at Pass 7]
DE:   #PIs = 182  #Luts =   194  Max Lvl =   8  Avg Lvl =   2.25  [   0.81 sec. at Pass 8]
DE:   #PIs = 182  #Luts =   194  Max Lvl =   8  Avg Lvl =   2.25  [   1.30 sec. at Pass 9]
DE:   #PIs = 182  #Luts =   194  Max Lvl =   8  Avg Lvl =   2.25  [   0.84 sec. at Pass 10]
DE:   #PIs = 182  #Luts =   193  Max Lvl =   8  Avg Lvl =   2.44  [   1.84 sec. at Pass 11]
DE:   #PIs = 182  #Luts =   193  Max Lvl =   8  Avg Lvl =   2.44  [   1.22 sec. at Pass 12]
DE:   #PIs = 182  #Luts =   193  Max Lvl =   8  Avg Lvl =   2.44  [   0.73 sec. at Pass 13]
DE:   #PIs = 182  #Luts =   193  Max Lvl =   8  Avg Lvl =   2.44  [   1.03 sec. at Pass 14]
DE:   #PIs = 182  #Luts =   192  Max Lvl =   7  Avg Lvl =   2.25  [   2.20 sec. at Pass 15]
DE:   #PIs = 182  #Luts =   192  Max Lvl =   7  Avg Lvl =   2.25  [   0.72 sec. at Pass 16]
DE:   #PIs = 182  #Luts =   192  Max Lvl =   7  Avg Lvl =   2.25  [   1.14 sec. at Pass 17]
DE:   #PIs = 182  #Luts =   192  Max Lvl =   7  Avg Lvl =   2.25  [   0.78 sec. at Pass 18]
DE:   #PIs = 182  #Luts =   192  Max Lvl =   7  Avg Lvl =   2.25  [   2.67 sec. at Pass 19]
DE:   #PIs = 182  #Luts =   192  Max Lvl =   7  Avg Lvl =   2.25  [   0.42 sec. at Pass 20]

yosys> opt_expr

3.79. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.

yosys> opt_merge -nomux

3.80. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.81. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \serv_synth_wrapper..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.82. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \serv_synth_wrapper.
Performed a total of 0 changes.

yosys> opt_merge

3.83. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
Removed a total of 0 cells.

yosys> opt_share

3.84. Executing OPT_SHARE pass.

yosys> opt_dff

3.85. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.86. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..
Removed 0 unused cells and 762 unused wires.
<suppressed ~158 debug messages>

yosys> opt_expr

3.87. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.
MAX OPT ITERATION = 1

yosys> opt_ffinv

3.88. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> stat

3.89. Printing statistics.

=== serv_synth_wrapper ===

   Number of wires:                417
   Number of wire bits:           1276
   Number of public wires:         185
   Number of public wire bits:    1044
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                373
     $_DFFE_PP_                    116
     $_DFF_P_                       11
     $_SDFFE_PP0P_                  37
     $_SDFF_PN0_                     1
     $_SDFF_PP0_                    16
     $lut                          192


yosys> shregmap -minlen 8 -maxlen 20

3.90. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.91. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.92. Printing statistics.

=== serv_synth_wrapper ===

   Number of wires:                508
   Number of wire bits:           1367
   Number of public wires:         185
   Number of public wire bits:    1044
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                464
     $_DFFE_PP0P_                  116
     $_DFF_P_                       65
     $_MUX_                         91
     $lut                          192


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.93. Executing TECHMAP pass (map to technology primitives).

3.93.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.93.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.93.3. Continuing TECHMAP pass.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using extmapper simplemap for cells of type $lut.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~625 debug messages>

yosys> opt_expr -mux_undef

3.94. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.
<suppressed ~3630 debug messages>

yosys> simplemap

3.95. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.96. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.

yosys> opt_merge

3.97. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
<suppressed ~837 debug messages>
Removed a total of 279 cells.

yosys> opt_dff -nodffe -nosdff

3.98. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.99. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..
Removed 0 unused cells and 1315 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.100. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.100.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.
<suppressed ~60 debug messages>

yosys> opt_merge -nomux

3.100.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.100.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \serv_synth_wrapper..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.100.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \serv_synth_wrapper.
Performed a total of 0 changes.

yosys> opt_merge

3.100.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.100.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.100.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..
Removed 0 unused cells and 16 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.100.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.

3.100.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.100.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \serv_synth_wrapper..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.100.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \serv_synth_wrapper.
Performed a total of 0 changes.

yosys> opt_merge

3.100.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.100.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.100.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..

yosys> opt_expr

3.100.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.

3.100.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /home/users/temp_dir/yosys_TH72LV/abc_tmp_2.scr

3.101. Executing ABC pass (technology mapping using ABC).

3.101.1. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Extracted 688 gates and 905 wires to a netlist network with 215 inputs and 175 outputs.

3.101.1.1. Executing ABC.
DE:   #PIs = 215  #Luts =   232  Max Lvl =   7  Avg Lvl =   2.71  [   0.39 sec. at Pass 0]
DE:   #PIs = 215  #Luts =   232  Max Lvl =   7  Avg Lvl =   2.71  [   2.01 sec. at Pass 1]
DE:   #PIs = 215  #Luts =   232  Max Lvl =   7  Avg Lvl =   2.71  [   0.70 sec. at Pass 2]
DE:   #PIs = 215  #Luts =   232  Max Lvl =   7  Avg Lvl =   2.71  [   1.33 sec. at Pass 3]
DE:   #PIs = 215  #Luts =   232  Max Lvl =   7  Avg Lvl =   2.71  [   0.74 sec. at Pass 4]
DE:   #PIs = 215  #Luts =   232  Max Lvl =   7  Avg Lvl =   2.71  [   1.18 sec. at Pass 5]
DE:   #PIs = 215  #Luts =   232  Max Lvl =   7  Avg Lvl =   2.71  [   2.26 sec. at Pass 6]
DE:   #PIs = 215  #Luts =   232  Max Lvl =   7  Avg Lvl =   2.71  [   0.46 sec. at Pass 7]

yosys> opt_expr

3.102. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.

yosys> opt_merge -nomux

3.103. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.104. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \serv_synth_wrapper..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.105. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \serv_synth_wrapper.
Performed a total of 0 changes.

yosys> opt_merge

3.106. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
Removed a total of 0 cells.

yosys> opt_share

3.107. Executing OPT_SHARE pass.

yosys> opt_dff

3.108. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.109. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..
Removed 0 unused cells and 822 unused wires.
<suppressed ~13 debug messages>

yosys> opt_expr

3.110. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.
MAX OPT ITERATION = 1

yosys> hierarchy -check

3.111. Executing HIERARCHY pass (managing design hierarchy).

3.111.1. Analyzing design hierarchy..
Top module:  \serv_synth_wrapper

3.111.2. Analyzing design hierarchy..
Top module:  \serv_synth_wrapper
Removed 0 unused modules.

yosys> stat

3.112. Printing statistics.

=== serv_synth_wrapper ===

   Number of wires:                449
   Number of wire bits:           1308
   Number of public wires:         173
   Number of public wire bits:    1032
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                413
     $lut                          232
     dffsre                        181


yosys> opt_clean -purge

3.113. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..
Removed 0 unused cells and 139 unused wires.
<suppressed ~139 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.114. Executing Verilog backend.
Dumping module `\serv_synth_wrapper'.

Warnings: 7 unique messages, 8 total
End of script. Logfile hash: e0c57c3556, CPU: user 5.37s system 0.34s, MEM: 32.46 MB peak
Yosys 0.18+10 (git sha1 7a7a25778, gcc 9.1.0 -fPIC -Os)
Time spent: 96% 6x abc (139 sec), 0% 39x opt_expr (1 sec), ...
real 85.19
user 123.46
sys 20.15
