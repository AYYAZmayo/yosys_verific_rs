
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.40
 Yosys 0.17+76 (git sha1 035496b50, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Apr22_SW_Release, released at Thu Apr 28 08:08:21 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k Log2highacc.v

yosys> verific -vlog2k Log2highacc.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Apr22_SW_Release, released at Thu Apr 28 08:08:21 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'Log2highacc.v'

yosys> synth_rs -top Log2highacc -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.55

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\RS_DSP2_MULT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_sim'.
Generating RTLIL representation for module `\dsp_t1_20x18x64'.
Generating RTLIL representation for module `\dsp_t1_10x9x32'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top Log2highacc

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] Log2highacc.v:1: compiling module 'Log2highacc'
Importing module Log2highacc.

3.3.1. Analyzing design hierarchy..
Top module:  \Log2highacc

3.3.2. Analyzing design hierarchy..
Top module:  \Log2highacc
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.4.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.4.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module Log2highacc.
<suppressed ~2 debug messages>

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module Log2highacc.

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Log2highacc..
Removed 0 unused cells and 88 unused wires.
<suppressed ~8 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module Log2highacc...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module Log2highacc.

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Log2highacc'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Log2highacc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Log2highacc.
    New ctrl vector for $pmux cell $verific$select_65$Log2highacc.v:80$197: { \DIN [23] $verific$n246$5 $verific$n248$7 $verific$n250$9 $verific$n252$11 $verific$n254$13 $verific$n256$15 $verific$n258$17 $verific$n260$19 $verific$n262$21 $verific$n264$23 $verific$n266$25 $verific$n268$27 $verific$n270$29 $verific$n272$31 }
  Optimizing cells in module \Log2highacc.
Performed a total of 1 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Log2highacc'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Removing never-active async load on $verific$priencout3_reg$Log2highacc.v:47$129 ($aldff) from module Log2highacc.
Removing never-active async load on $verific$priencout2_reg$Log2highacc.v:47$128 ($aldff) from module Log2highacc.
Removing never-active async load on $verific$priencout1_reg$Log2highacc.v:80$198 ($aldff) from module Log2highacc.
Removing never-active async load on $verific$barrelout_reg$Log2highacc.v:54$135 ($aldff) from module Log2highacc.
Removing never-active async load on $verific$barrelin_reg$Log2highacc.v:47$130 ($aldff) from module Log2highacc.
Removing never-active async load on $verific$LUTout_reg$Log2highacc.v:176$200 ($aldff) from module Log2highacc.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Log2highacc..
Removed 2 unused cells and 2 unused wires.
<suppressed ~3 debug messages>

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module Log2highacc.

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Log2highacc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Log2highacc.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Log2highacc'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Log2highacc..

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module Log2highacc.

3.11.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking Log2highacc.priencout1 as FSM state register:
    Users of register don't seem to benefit from recoding.

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Log2highacc..

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module Log2highacc.

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Log2highacc'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Log2highacc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Log2highacc.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Log2highacc'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Log2highacc..

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module Log2highacc.

3.13.9. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Log2highacc..
Removed 2 unused cells and 3 unused wires.
<suppressed ~3 debug messages>

yosys> alumacc

3.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module Log2highacc:
  created 0 $alu and 0 $macc cells.

yosys> opt

3.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module Log2highacc.
<suppressed ~7 debug messages>

yosys> opt_merge -nomux

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Log2highacc'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Log2highacc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

yosys> opt_reduce

3.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Log2highacc.
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$246: { $auto$rtlil.cc:2398:Or$211 $auto$rtlil.cc:2398:Or$219 $verific$n268$27 $verific$n266$25 $verific$n260$19 $verific$n258$17 }
  Optimizing cells in module \Log2highacc.
Performed a total of 1 changes.

yosys> opt_merge

3.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Log2highacc'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Log2highacc..

yosys> opt_expr

3.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module Log2highacc.

3.19.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Log2highacc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

yosys> opt_reduce

3.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Log2highacc.
Performed a total of 0 changes.

yosys> opt_merge

3.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Log2highacc'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Log2highacc..

yosys> opt_expr

3.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module Log2highacc.

3.19.16. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.20. Printing statistics.

=== Log2highacc ===

   Number of wires:                 77
   Number of wire bits:            242
   Number of public wires:          11
   Number of public wire bits:     121
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 73
     $bmux                           1
     $dff                            6
     $mux                           15
     $not                           29
     $or                             4
     $reduce_or                     17
     $shl                            1


yosys> memory -nomap

3.21. Executing MEMORY pass.

yosys> opt_mem

3.21.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.21.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.21.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.21.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.21.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `$auto$memory_bmux2rom.cc:63:execute$250'[0] in module `\Log2highacc': merging output FF to cell.

yosys> opt_clean

3.21.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Log2highacc..
Removed 1 unused cells and 9 unused wires.
<suppressed ~2 debug messages>

yosys> memory_share

3.21.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.21.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.21.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Log2highacc..

yosys> memory_collect

3.21.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.22. Printing statistics.

=== Log2highacc ===

   Number of wires:                 76
   Number of wire bits:            234
   Number of public wires:          11
   Number of public wire bits:     121
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 72
     $dff                            5
     $mem_v2                         1
     $mux                           15
     $not                           29
     $or                             4
     $reduce_or                     17
     $shl                            1


yosys> opt_clean

3.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Log2highacc..

yosys> stat

3.24. Printing statistics.

=== Log2highacc ===

   Number of wires:                 76
   Number of wire bits:            234
   Number of public wires:          11
   Number of public wire bits:     121
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 72
     $dff                            5
     $mem_v2                         1
     $mux                           15
     $not                           29
     $or                             4
     $reduce_or                     17
     $shl                            1


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.25. Executing TECHMAP pass (map to technology primitives).

3.25.1. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.25.2. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.25.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $not.
Using template $paramod$constmap:e97a204a8e3da804c8af3c57f868e12b7ac821c7$paramod$287778180084c1e324ab73ea54767ffc41fb54a3\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
No more expansions possible.
<suppressed ~407 debug messages>

yosys> stat

3.26. Printing statistics.

=== Log2highacc ===

   Number of wires:                136
   Number of wire bits:           2505
   Number of public wires:          11
   Number of public wire bits:     121
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                334
     $_DFF_P_                       39
     $_MUX_                        144
     $_NOT_                         32
     $_OR_                         118
     $mem_v2                         1


yosys> opt

3.27. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module Log2highacc.
<suppressed ~107 debug messages>

yosys> opt_merge -nomux

3.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Log2highacc'.
<suppressed ~177 debug messages>
Removed a total of 59 cells.

yosys> opt_muxtree

3.27.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Log2highacc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Log2highacc.
Performed a total of 0 changes.

yosys> opt_merge

3.27.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Log2highacc'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Log2highacc..
Removed 32 unused cells and 32 unused wires.
<suppressed ~33 debug messages>

yosys> opt_expr

3.27.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module Log2highacc.

3.27.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.27.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Log2highacc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Log2highacc.
Performed a total of 0 changes.

yosys> opt_merge

3.27.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Log2highacc'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Log2highacc..

yosys> opt_expr

3.27.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module Log2highacc.

3.27.16. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module Log2highacc.
<suppressed ~17 debug messages>

yosys> opt_merge

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Log2highacc'.
Removed a total of 0 cells.

yosys> opt_dff

3.28.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Log2highacc..

3.28.5. Finished fast OPT passes.

yosys> memory_map

3.29. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory $auto$memory_bmux2rom.cc:63:execute$250 in module \Log2highacc:
  created 64 $dff cells and 0 static cells of width 8.
Extracted data FF from read port 0 of Log2highacc.$auto$memory_bmux2rom.cc:63:execute$250: $$auto$memory_bmux2rom.cc:63:execute$250$rdreg[0]
  read interface: 1 $dff and 63 $mux cells.
  write interface: 0 write mux blocks.

yosys> opt -full

3.30. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module Log2highacc.

yosys> opt_merge -nomux

3.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Log2highacc'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Log2highacc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

yosys> opt_reduce -full

3.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Log2highacc.
Performed a total of 0 changes.

yosys> opt_merge

3.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Log2highacc'.
Removed a total of 0 cells.

yosys> opt_share

3.30.6. Executing OPT_SHARE pass.

yosys> opt_dff

3.30.7. Executing OPT_DFF pass (perform DFF optimizations).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$250[0]$842 ($dff) from module Log2highacc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$250[1]$844 ($dff) from module Log2highacc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$250[2]$846 ($dff) from module Log2highacc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$250[3]$848 ($dff) from module Log2highacc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$250[4]$850 ($dff) from module Log2highacc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$250[5]$852 ($dff) from module Log2highacc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$250[6]$854 ($dff) from module Log2highacc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$250[7]$856 ($dff) from module Log2highacc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$250[8]$858 ($dff) from module Log2highacc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$250[9]$860 ($dff) from module Log2highacc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$250[10]$862 ($dff) from module Log2highacc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$250[11]$864 ($dff) from module Log2highacc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$250[12]$866 ($dff) from module Log2highacc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$250[13]$868 ($dff) from module Log2highacc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$250[14]$870 ($dff) from module Log2highacc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$250[15]$872 ($dff) from module Log2highacc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$250[16]$874 ($dff) from module Log2highacc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$250[17]$876 ($dff) from module Log2highacc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$250[18]$878 ($dff) from module Log2highacc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$250[19]$880 ($dff) from module Log2highacc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$250[20]$882 ($dff) from module Log2highacc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$250[21]$884 ($dff) from module Log2highacc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$250[22]$886 ($dff) from module Log2highacc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$250[23]$888 ($dff) from module Log2highacc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$250[24]$890 ($dff) from module Log2highacc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$250[25]$892 ($dff) from module Log2highacc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$250[26]$894 ($dff) from module Log2highacc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$250[27]$896 ($dff) from module Log2highacc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$250[28]$898 ($dff) from module Log2highacc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$250[29]$900 ($dff) from module Log2highacc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$250[30]$902 ($dff) from module Log2highacc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$250[31]$904 ($dff) from module Log2highacc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$250[32]$906 ($dff) from module Log2highacc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$250[33]$908 ($dff) from module Log2highacc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$250[34]$910 ($dff) from module Log2highacc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$250[35]$912 ($dff) from module Log2highacc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$250[36]$914 ($dff) from module Log2highacc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$250[37]$916 ($dff) from module Log2highacc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$250[38]$918 ($dff) from module Log2highacc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$250[39]$920 ($dff) from module Log2highacc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$250[40]$922 ($dff) from module Log2highacc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$250[41]$924 ($dff) from module Log2highacc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$250[42]$926 ($dff) from module Log2highacc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$250[43]$928 ($dff) from module Log2highacc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$250[44]$930 ($dff) from module Log2highacc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$250[45]$932 ($dff) from module Log2highacc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$250[46]$934 ($dff) from module Log2highacc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$250[47]$936 ($dff) from module Log2highacc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$250[48]$938 ($dff) from module Log2highacc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$250[49]$940 ($dff) from module Log2highacc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$250[50]$942 ($dff) from module Log2highacc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$250[51]$944 ($dff) from module Log2highacc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$250[52]$946 ($dff) from module Log2highacc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$250[53]$948 ($dff) from module Log2highacc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$250[54]$950 ($dff) from module Log2highacc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$250[55]$952 ($dff) from module Log2highacc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$250[56]$954 ($dff) from module Log2highacc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$250[57]$956 ($dff) from module Log2highacc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$250[58]$958 ($dff) from module Log2highacc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$250[59]$960 ($dff) from module Log2highacc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$250[60]$962 ($dff) from module Log2highacc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$250[61]$964 ($dff) from module Log2highacc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$250[62]$966 ($dff) from module Log2highacc (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$250[63]$968 ($dff) from module Log2highacc (removing D path).

yosys> opt_clean

3.30.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Log2highacc..
Removed 0 unused cells and 192 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.30.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module Log2highacc.

3.30.10. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.30.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Log2highacc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

yosys> opt_reduce -full

3.30.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Log2highacc.
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][5][0]$1063:
      Old ports: A=8'00000000, B=8'00000110, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$a$1016
      New ports: A=1'0, B=1'1, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$a$1016 [1]
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$a$1016 [7:2] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$a$1016 [0] } = { 5'00000 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$a$1016 [1] 1'0 }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][5][10]$1093:
      Old ports: A=8'01100100, B=8'01101001, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][5]$a$1031
      New ports: A=2'10, B=2'01, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][5]$a$1031 [2] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][5]$a$1031 [0] }
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][5]$a$1031 [7:3] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][5]$a$1031 [1] } = { 4'0110 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][5]$a$1031 [0] 1'0 }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][5][11]$1096:
      Old ports: A=8'01101101, B=8'01110001, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][5]$b$1032
      New ports: A=2'01, B=2'10, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][5]$b$1032 [4] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][5]$b$1032 [2] }
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][5]$b$1032 [7:5] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][5]$b$1032 [3] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][5]$b$1032 [1:0] } = { 3'011 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][5]$b$1032 [2] 2'01 }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][5][12]$1099:
      Old ports: A=8'01110110, B=8'01111010, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][6]$a$1034
      New ports: A=2'01, B=2'10, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][6]$a$1034 [3:2]
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][6]$a$1034 [7:4] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][6]$a$1034 [1:0] } = 6'011110
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][5][13]$1102:
      Old ports: A=8'01111110, B=8'10000010, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][6]$b$1035
      New ports: A=2'01, B=2'10, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][6]$b$1035 [7] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][6]$b$1035 [2] }
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][6]$b$1035 [6:3] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][6]$b$1035 [1:0] } = { $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][6]$b$1035 [2] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][6]$b$1035 [2] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][6]$b$1035 [2] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][6]$b$1035 [2] 2'10 }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][5][14]$1105:
      Old ports: A=8'10000110, B=8'10001010, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][7]$a$1037
      New ports: A=2'01, B=2'10, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][7]$a$1037 [3:2]
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][7]$a$1037 [7:4] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][7]$a$1037 [1:0] } = 6'100010
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][5][15]$1108:
      Old ports: A=8'10001110, B=8'10010010, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][7]$b$1038
      New ports: A=2'01, B=2'10, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][7]$b$1038 [4] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][7]$b$1038 [2] }
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][7]$b$1038 [7:5] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][7]$b$1038 [3] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][7]$b$1038 [1:0] } = { 3'100 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][7]$b$1038 [2] 2'10 }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][5][16]$1111:
      Old ports: A=8'10010110, B=8'10011010, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][8]$a$1040
      New ports: A=2'01, B=2'10, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][8]$a$1040 [3:2]
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][8]$a$1040 [7:4] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][8]$a$1040 [1:0] } = 6'100110
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][5][17]$1114:
      Old ports: A=8'10011101, B=8'10100001, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][8]$b$1041
      New ports: A=2'01, B=2'10, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][8]$b$1041 [5] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][8]$b$1041 [2] }
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][8]$b$1041 [7:6] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][8]$b$1041 [4:3] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][8]$b$1041 [1:0] } = { 2'10 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][8]$b$1041 [2] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][8]$b$1041 [2] 2'01 }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][5][18]$1117:
      Old ports: A=8'10100101, B=8'10101001, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][9]$a$1043
      New ports: A=2'01, B=2'10, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][9]$a$1043 [3:2]
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][9]$a$1043 [7:4] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][9]$a$1043 [1:0] } = 6'101001
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][5][19]$1120:
      Old ports: A=8'10101100, B=8'10110000, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][9]$b$1044
      New ports: A=2'01, B=2'10, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][9]$b$1044 [4] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][9]$b$1044 [2] }
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][9]$b$1044 [7:5] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][9]$b$1044 [3] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][9]$b$1044 [1:0] } = { 3'101 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][9]$b$1044 [2] 2'00 }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][5][1]$1066:
      Old ports: A=8'00001011, B=8'00010001, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$b$1017
      New ports: A=2'01, B=2'10, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$b$1017 [4] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$b$1017 [1] }
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$b$1017 [7:5] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$b$1017 [3:2] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$b$1017 [0] } = { 3'000 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$b$1017 [1] 2'01 }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][5][20]$1123:
      Old ports: A=8'10110011, B=8'10110111, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][10]$a$1046
      New ports: A=1'0, B=1'1, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][10]$a$1046 [2]
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][10]$a$1046 [7:3] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][10]$a$1046 [1:0] } = 7'1011011
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][5][21]$1126:
      Old ports: A=8'10111010, B=8'10111110, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][10]$b$1047
      New ports: A=1'0, B=1'1, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][10]$b$1047 [2]
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][10]$b$1047 [7:3] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][10]$b$1047 [1:0] } = 7'1011110
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][5][22]$1129:
      Old ports: A=8'11000001, B=8'11000101, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][11]$a$1049
      New ports: A=1'0, B=1'1, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][11]$a$1049 [2]
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][11]$a$1049 [7:3] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][11]$a$1049 [1:0] } = 7'1100001
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][5][23]$1132:
      Old ports: A=8'11001000, B=8'11001011, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][11]$b$1050
      New ports: A=1'0, B=1'1, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][11]$b$1050 [0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][11]$b$1050 [7:1] = { 6'110010 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][11]$b$1050 [0] }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][5][24]$1135:
      Old ports: A=8'11001111, B=8'11010010, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][12]$a$1052
      New ports: A=2'01, B=2'10, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][12]$a$1052 [4] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][12]$a$1052 [0] }
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][12]$a$1052 [7:5] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][12]$a$1052 [3:1] } = { 3'110 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][12]$a$1052 [0] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][12]$a$1052 [0] 1'1 }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][5][25]$1138:
      Old ports: A=8'11010101, B=8'11011000, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][12]$b$1053
      New ports: A=2'01, B=2'10, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][12]$b$1053 [3] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][12]$b$1053 [0] }
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][12]$b$1053 [7:4] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][12]$b$1053 [2:1] } = { 4'1101 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][12]$b$1053 [0] 1'0 }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][5][26]$1141:
      Old ports: A=8'11011100, B=8'11011111, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][13]$a$1055
      New ports: A=1'0, B=1'1, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][13]$a$1055 [0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][13]$a$1055 [7:1] = { 6'110111 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][13]$a$1055 [0] }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][5][27]$1144:
      Old ports: A=8'11100010, B=8'11100101, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][13]$b$1056
      New ports: A=2'10, B=2'01, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][13]$b$1056 [1:0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][13]$b$1056 [7:2] = { 5'11100 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][13]$b$1056 [0] }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][5][28]$1147:
      Old ports: A=8'11101000, B=8'11101011, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][14]$a$1058
      New ports: A=1'0, B=1'1, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][14]$a$1058 [0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][14]$a$1058 [7:1] = { 6'111010 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][14]$a$1058 [0] }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][5][29]$1150:
      Old ports: A=8'11101110, B=8'11110001, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][14]$b$1059
      New ports: A=2'10, B=2'01, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][14]$b$1059 [1:0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][14]$b$1059 [7:2] = { 3'111 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][14]$b$1059 [0] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][14]$b$1059 [1] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][14]$b$1059 [1] }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][5][2]$1069:
      Old ports: A=8'00010110, B=8'00011100, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][1]$a$1019
      New ports: A=2'01, B=2'10, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][1]$a$1019 [3] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][1]$a$1019 [1] }
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][1]$a$1019 [7:4] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][1]$a$1019 [2] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][1]$a$1019 [0] } = 6'000110
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][5][30]$1153:
      Old ports: A=8'11110100, B=8'11110111, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][15]$a$1061
      New ports: A=1'0, B=1'1, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][15]$a$1061 [0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][15]$a$1061 [7:1] = { 6'111101 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][15]$a$1061 [0] }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][5][31]$1156:
      Old ports: A=8'11111010, B=8'11111101, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][15]$b$1062
      New ports: A=2'10, B=2'01, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][15]$b$1062 [1:0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][15]$b$1062 [7:2] = { 5'11111 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][15]$b$1062 [0] }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][5][3]$1072:
      Old ports: A=8'00100001, B=8'00100110, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][1]$b$1020
      New ports: A=2'01, B=2'10, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][1]$b$1020 [1:0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][1]$b$1020 [7:2] = { 5'00100 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][1]$b$1020 [1] }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][5][4]$1075:
      Old ports: A=8'00101100, B=8'00110001, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][2]$a$1022
      New ports: A=2'10, B=2'01, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][2]$a$1022 [2] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][2]$a$1022 [0] }
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][2]$a$1022 [7:3] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][2]$a$1022 [1] } = { 3'001 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][2]$a$1022 [0] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][2]$a$1022 [2] 1'0 }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][5][5]$1078:
      Old ports: A=8'00110110, B=8'00111011, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][2]$b$1023
      New ports: A=2'10, B=2'01, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][2]$b$1023 [2] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][2]$b$1023 [0] }
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][2]$b$1023 [7:3] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][2]$b$1023 [1] } = { 4'0011 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][2]$b$1023 [0] 1'1 }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][5][6]$1081:
      Old ports: A=8'00111111, B=8'01000100, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][3]$a$1025
      New ports: A=2'01, B=2'10, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][3]$a$1025 [6] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][3]$a$1025 [0] }
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][3]$a$1025 [7] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][3]$a$1025 [5:1] } = { 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][3]$a$1025 [0] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][3]$a$1025 [0] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][3]$a$1025 [0] 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][3]$a$1025 [0] }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][5][7]$1084:
      Old ports: A=8'01001001, B=8'01001110, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][3]$b$1026
      New ports: A=2'01, B=2'10, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][3]$b$1026 [1:0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][3]$b$1026 [7:2] = { 5'01001 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][3]$b$1026 [1] }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][5][8]$1087:
      Old ports: A=8'01010010, B=8'01010111, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][4]$a$1028
      New ports: A=1'0, B=1'1, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][4]$a$1028 [0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][4]$a$1028 [7:1] = { 5'01010 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][4]$a$1028 [0] 1'1 }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][5][9]$1090:
      Old ports: A=8'01011100, B=8'01100000, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][4]$b$1029
      New ports: A=2'01, B=2'10, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][4]$b$1029 [5] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][4]$b$1029 [2] }
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][4]$b$1029 [7:6] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][4]$b$1029 [4:3] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][4]$b$1029 [1:0] } = { 2'01 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][4]$b$1029 [2] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][4]$b$1029 [2] 2'00 }
  Optimizing cells in module \Log2highacc.
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$1015:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$a$1016, B=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$b$1017, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][0]$a$992
      New ports: A={ 2'00 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$a$1016 [1] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$a$1016 [1] 1'0 }, B={ $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$b$1017 [4] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$b$1017 [1] 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$b$1017 [1] 1'1 }, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][0]$a$992 [4:0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][0]$a$992 [7:5] = 3'000
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][10]$1045:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][10]$a$1046, B=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][10]$b$1047, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][5]$a$1007
      New ports: A={ 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][10]$a$1046 [2] 1'1 }, B={ 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][10]$b$1047 [2] 1'0 }, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][5]$a$1007 [3:2] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][5]$a$1007 [0] }
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][5]$a$1007 [7:4] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][5]$a$1007 [1] } = 5'10111
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][11]$1048:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][11]$a$1049, B=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][11]$b$1050, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][5]$b$1008
      New ports: A={ 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][11]$a$1049 [2] 2'01 }, B={ 2'10 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][11]$b$1050 [0] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][11]$b$1050 [0] }, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][5]$b$1008 [3:0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][5]$b$1008 [7:4] = 4'1100
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][12]$1051:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][12]$a$1052, B=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][12]$b$1053, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][6]$a$1010
      New ports: A={ $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][12]$a$1052 [4] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][12]$a$1052 [0] 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][12]$a$1052 [0] }, B={ 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][12]$b$1053 [3] 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][12]$b$1053 [0] }, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][6]$a$1010 [4:3] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][6]$a$1010 [1:0] }
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][6]$a$1010 [7:5] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][6]$a$1010 [2] } = { 3'110 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][6]$a$1010 [0] }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][13]$1054:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][13]$a$1055, B=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][13]$b$1056, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][6]$b$1011
      New ports: A={ 3'011 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][13]$a$1055 [0] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][13]$a$1055 [0] }, B={ 2'10 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][13]$b$1056 [0] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][13]$b$1056 [1:0] }, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][6]$b$1011 [5] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][6]$b$1011 [3:0] }
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][6]$b$1011 [7:6] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][6]$b$1011 [4] } = { 2'11 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][6]$b$1011 [3] }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][14]$1057:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][14]$a$1058, B=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][14]$b$1059, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][7]$a$1013
      New ports: A={ 3'010 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][14]$a$1058 [0] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][14]$a$1058 [0] }, B={ $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][14]$b$1059 [0] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][14]$b$1059 [1] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][14]$b$1059 [1] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][14]$b$1059 [1:0] }, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][7]$a$1013 [4:0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][7]$a$1013 [7:5] = 3'111
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][15]$1060:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][15]$a$1061, B=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][15]$b$1062, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][7]$b$1014
      New ports: A={ 2'01 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][15]$a$1061 [0] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][15]$a$1061 [0] }, B={ 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][15]$b$1062 [0] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][15]$b$1062 [1:0] }, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][7]$b$1014 [3:0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][7]$b$1014 [7:4] = 4'1111
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][1]$1018:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][1]$a$1019, B=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][1]$b$1020, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][0]$b$993
      New ports: A={ 2'01 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][1]$a$1019 [3] 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][1]$a$1019 [1] 1'0 }, B={ 3'100 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][1]$b$1020 [1] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][1]$b$1020 [1:0] }, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][0]$b$993 [5:0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][0]$b$993 [7:6] = 2'00
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][2]$1021:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][2]$a$1022, B=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][2]$b$1023, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][1]$a$995
      New ports: A={ $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][2]$a$1022 [0] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][2]$a$1022 [2] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][2]$a$1022 [2] 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][2]$a$1022 [0] }, B={ 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][2]$b$1023 [0] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][2]$b$1023 [2] 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][2]$b$1023 [0] }, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][1]$a$995 [4:0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][1]$a$995 [7:5] = 3'001
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][3]$1024:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][3]$a$1025, B=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][3]$b$1026, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][1]$b$996
      New ports: A={ $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][3]$a$1025 [6] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][3]$a$1025 [0] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][3]$a$1025 [0] 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][3]$a$1025 [0] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][3]$a$1025 [0] }, B={ 3'101 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][3]$b$1026 [1] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][3]$b$1026 [1:0] }, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][1]$b$996 [6] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][1]$b$996 [4:0] }
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][1]$b$996 [7] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][1]$b$996 [5] } = { 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][1]$b$996 [4] }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][4]$1027:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][4]$a$1028, B=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][4]$b$1029, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][2]$a$998
      New ports: A={ 3'010 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][4]$a$1028 [0] 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][4]$a$1028 [0] }, B={ $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][4]$b$1029 [5] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][4]$b$1029 [2] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][4]$b$1029 [2] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][4]$b$1029 [2] 2'00 }, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][2]$a$998 [5:0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][2]$a$998 [7:6] = 2'01
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][5]$1030:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][5]$a$1031, B=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][5]$b$1032, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][2]$b$999
      New ports: A={ 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][5]$a$1031 [0] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][5]$a$1031 [2] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][5]$a$1031 [0] }, B={ $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][5]$b$1032 [4] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][5]$b$1032 [2] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][5]$b$1032 [2] 1'1 }, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][2]$b$999 [4:2] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][2]$b$999 [0] }
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][2]$b$999 [7:5] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][2]$b$999 [1] } = 4'0110
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][6]$1033:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][6]$a$1034, B=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][6]$b$1035, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][3]$a$1001
      New ports: A={ 2'01 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][6]$a$1034 [3:2] }, B={ $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][6]$b$1035 [7] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][6]$b$1035 [2] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][6]$b$1035 [2] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][6]$b$1035 [2] }, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][3]$a$1001 [7] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][3]$a$1001 [4:2] }
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][3]$a$1001 [6:5] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][3]$a$1001 [1:0] } = { $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][3]$a$1001 [4] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][3]$a$1001 [4] 2'10 }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][7]$1036:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][7]$a$1037, B=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][7]$b$1038, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][3]$b$1002
      New ports: A={ 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][7]$a$1037 [3:2] }, B={ $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][7]$b$1038 [4] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][7]$b$1038 [2] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][7]$b$1038 [2] }, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][3]$b$1002 [4:2]
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][3]$b$1002 [7:5] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][3]$b$1002 [1:0] } = 5'10010
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][8]$1039:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][8]$a$1040, B=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][8]$b$1041, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][4]$a$1004
      New ports: A={ 2'01 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][8]$a$1040 [3:2] 2'10 }, B={ $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][8]$b$1041 [5] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][8]$b$1041 [2] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][8]$b$1041 [2] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][8]$b$1041 [2] 2'01 }, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][4]$a$1004 [5:0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][4]$a$1004 [7:6] = 2'10
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][9]$1042:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][9]$a$1043, B=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][9]$b$1044, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][4]$b$1005
      New ports: A={ 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][9]$a$1043 [3:2] 1'1 }, B={ $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][9]$b$1044 [4] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][9]$b$1044 [2] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][9]$b$1044 [2] 1'0 }, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][4]$b$1005 [4:2] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][4]$b$1005 [0] }
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][4]$b$1005 [7:5] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][4]$b$1005 [1] } = 4'1010
  Optimizing cells in module \Log2highacc.
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][0]$991:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][0]$a$992, B=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][0]$b$993, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][2][0]$a$980
      New ports: A={ 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][0]$a$992 [4:0] }, B=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][0]$b$993 [5:0], Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][2][0]$a$980 [5:0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][2][0]$a$980 [7:6] = 2'00
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][1]$994:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][1]$a$995, B=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][1]$b$996, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][2][0]$b$981
      New ports: A={ 2'01 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][1]$a$995 [4:0] }, B={ $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][1]$b$996 [6] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][1]$b$996 [4] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][1]$b$996 [4:0] }, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][2][0]$b$981 [6:0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][2][0]$b$981 [7] = 1'0
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][2]$997:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][2]$a$998, B=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][2]$b$999, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][2][1]$a$983
      New ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][2]$a$998 [5:0], B={ 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][2]$b$999 [4:2] 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][2]$b$999 [0] }, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][2][1]$a$983 [5:0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][2][1]$a$983 [7:6] = 2'01
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][3]$1000:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][3]$a$1001, B=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][3]$b$1002, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][2][1]$b$984
      New ports: A={ $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][3]$a$1001 [7] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][3]$a$1001 [4] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][3]$a$1001 [4:2] }, B={ 2'10 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][3]$b$1002 [4:2] }, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][2][1]$b$984 [7] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][2][1]$b$984 [5:2] }
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][2][1]$b$984 [6] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][2][1]$b$984 [1:0] } = { $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][2][1]$b$984 [5] 2'10 }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][4]$1003:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][4]$a$1004, B=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][4]$b$1005, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][2][2]$a$986
      New ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][4]$a$1004 [5:0], B={ 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][4]$b$1005 [4:2] 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][4]$b$1005 [0] }, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][2][2]$a$986 [5:0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][2][2]$a$986 [7:6] = 2'10
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][5]$1006:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][5]$a$1007, B=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][5]$b$1008, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][2][2]$b$987
      New ports: A={ 2'01 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][5]$a$1007 [3:2] 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][5]$a$1007 [0] }, B={ 2'10 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][5]$b$1008 [3:0] }, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][2][2]$b$987 [6] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][2][2]$b$987 [4:0] }
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][2][2]$b$987 [7] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][2][2]$b$987 [5] } = { 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][2][2]$b$987 [4] }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][6]$1009:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][6]$a$1010, B=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][6]$b$1011, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][2][3]$a$989
      New ports: A={ 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][6]$a$1010 [4:3] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][6]$a$1010 [0] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][6]$a$1010 [1:0] }, B={ $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][6]$b$1011 [5] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][6]$b$1011 [3] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][6]$b$1011 [3:0] }, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][2][3]$a$989 [5:0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][2][3]$a$989 [7:6] = 2'11
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][7]$1012:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][7]$a$1013, B=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][7]$b$1014, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][2][3]$b$990
      New ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][7]$a$1013 [4:0], B={ 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][7]$b$1014 [3:0] }, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][2][3]$b$990 [4:0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][2][3]$b$990 [7:5] = 3'111
  Optimizing cells in module \Log2highacc.
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][2][0]$979:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][2][0]$a$980, B=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][2][0]$b$981, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][1][0]$a$974
      New ports: A={ 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][2][0]$a$980 [5:0] }, B=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][2][0]$b$981 [6:0], Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][1][0]$a$974 [6:0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][1][0]$a$974 [7] = 1'0
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][2][2]$985:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][2][2]$a$986, B=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][2][2]$b$987, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][1][1]$a$977
      New ports: A={ 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][2][2]$a$986 [5:0] }, B={ $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][2][2]$b$987 [6] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][2][2]$b$987 [4] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][2][2]$b$987 [4:0] }, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][1][1]$a$977 [6:0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][1][1]$a$977 [7] = 1'1
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][2][3]$988:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][2][3]$a$989, B=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][2][3]$b$990, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][1][1]$b$978
      New ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][2][3]$a$989 [5:0], B={ 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][2][3]$b$990 [4:0] }, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][1][1]$b$978 [5:0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][1][1]$b$978 [7:6] = 2'11
  Optimizing cells in module \Log2highacc.
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][1][1]$976:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][1][1]$a$977, B=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][1][1]$b$978, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][0][0]$b$972
      New ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][1][1]$a$977 [6:0], B={ 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][1][1]$b$978 [5:0] }, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][0][0]$b$972 [6:0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][0][0]$b$972 [7] = 1'1
  Optimizing cells in module \Log2highacc.
Performed a total of 60 changes.

yosys> opt_merge

3.30.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Log2highacc'.
<suppressed ~87 debug messages>
Removed a total of 29 cells.

yosys> opt_share

3.30.14. Executing OPT_SHARE pass.

yosys> opt_dff

3.30.15. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Log2highacc..
Removed 0 unused cells and 29 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.30.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module Log2highacc.
<suppressed ~1 debug messages>

3.30.18. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.30.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Log2highacc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~3 debug messages>

yosys> opt_reduce -full

3.30.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Log2highacc.
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][10]$1045:
      Old ports: A={ 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$a$1016 [2] 1'1 }, B={ 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$a$1016 [2] 1'0 }, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][5]$a$1007 [3:2] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][5]$a$1007 [0] }
      New ports: A=2'01, B=2'10, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][5]$a$1007 [3] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][5]$a$1007 [0] }
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][5]$a$1007 [2] = \barrelout [0]
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][12]$1051:
      Old ports: A={ $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$b$1017 [4:3] 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$b$1017 [3] }, B={ 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$b$1017 [4] 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$b$1017 [3] }, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][6]$a$1010 [4:3] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][6]$a$1010 [1] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][6]$a$1010 [2] }
      New ports: A={ $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$b$1017 [4:3] 1'1 }, B={ 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$b$1017 [4] 1'0 }, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][6]$a$1010 [4:3] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][6]$a$1010 [1] }
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][6]$a$1010 [2] = $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$b$1017 [3]
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][2]$1021:
      Old ports: A={ $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][13]$b$1056 [2:1] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][13]$b$1056 [1] 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][13]$b$1056 [2] }, B={ 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][13]$b$1056 [2:1] 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][13]$b$1056 [2] }, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][1]$a$995 [4:0]
      New ports: A={ $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][13]$b$1056 [2:1] 1'0 }, B={ 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][13]$b$1056 [2] 1'1 }, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][1]$a$995 [4:3] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][1]$a$995 [1] }
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][1]$a$995 [2] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][1]$a$995 [0] } = { $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][13]$b$1056 [1] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][13]$b$1056 [2] }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][3]$1024:
      Old ports: A={ $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$b$1017 [4:3] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$b$1017 [3] 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$b$1017 [3] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$b$1017 [3] }, B={ 3'101 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$b$1017 [4] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$b$1017 [4:3] }, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][1]$b$996 [6:5] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][1]$b$996 [3:0] }
      New ports: A={ $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$b$1017 [4:3] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$b$1017 [3] 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$b$1017 [3] }, B={ 3'101 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$b$1017 [4] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$b$1017 [4] }, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][1]$b$996 [6:5] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][1]$b$996 [3:1] }
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][1]$b$996 [0] = $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$b$1017 [3]
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][6]$1033:
      Old ports: A={ 2'01 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$b$1017 [4:3] }, B={ $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$b$1017 [4:3] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$b$1017 [3] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$b$1017 [3] }, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][3]$a$1001 [7:6] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][3]$a$1001 [3:2] }
      New ports: A={ 2'01 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$b$1017 [4] }, B={ $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$b$1017 [4:3] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$b$1017 [3] }, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][3]$a$1001 [7:6] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][3]$a$1001 [3] }
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][3]$a$1001 [2] = $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$b$1017 [3]
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][7]$1036:
      Old ports: A={ 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$b$1017 [4:3] }, B={ $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$b$1017 [4:3] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$b$1017 [3] }, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][3]$b$1002 [4:2]
      New ports: A={ 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$b$1017 [4] }, B=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$b$1017 [4:3], Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][3]$b$1002 [4:3]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][3]$b$1002 [2] = $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$b$1017 [3]
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][8]$1039:
      Old ports: A={ 2'01 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$b$1017 [4:3] 2'10 }, B={ $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$b$1017 [4:3] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$b$1017 [3] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$b$1017 [3] 2'01 }, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][4]$a$1004 [5:0]
      New ports: A={ 2'01 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$b$1017 [4] 2'10 }, B={ $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$b$1017 [4:3] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$b$1017 [3] 2'01 }, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][4]$a$1004 [5:3] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][4]$a$1004 [1:0] }
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][4]$a$1004 [2] = $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$b$1017 [3]
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][9]$1042:
      Old ports: A={ 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$b$1017 [4:3] 1'1 }, B={ $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$b$1017 [4:3] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$b$1017 [3] 1'0 }, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][4]$b$1005 [4:2] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][4]$b$1005 [0] }
      New ports: A={ 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$b$1017 [4] 1'1 }, B={ $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$b$1017 [4:3] 1'0 }, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][4]$b$1005 [4:3] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][4]$b$1005 [0] }
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][4]$b$1005 [2] = $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$b$1017 [3]
  Optimizing cells in module \Log2highacc.
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][3]$1000:
      Old ports: A={ $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][3]$a$1001 [7:6] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][3]$a$1001 [6] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][3]$a$1001 [3:2] }, B={ 2'10 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][3]$b$1002 [4:2] }, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][2][1]$b$984 [7:6] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][2][1]$b$984 [4:2] }
      New ports: A={ $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][3]$a$1001 [7:6] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][3]$a$1001 [6] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][3]$a$1001 [3] }, B={ 2'10 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][3]$b$1002 [4:3] }, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][2][1]$b$984 [7:6] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][2][1]$b$984 [4:3] }
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][2][1]$b$984 [2] = $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$b$1017 [3]
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][4]$1003:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][4]$a$1004 [5:0], B={ 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][4]$b$1005 [4:2] 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][4]$b$1005 [0] }, Y=$memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][2][2]$a$986 [5:0]
      New ports: A={ $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][4]$a$1004 [5:3] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][4]$a$1004 [1:0] }, B={ 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][4]$b$1005 [4:3] 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][3][4]$b$1005 [0] }, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][2][2]$a$986 [5:3] $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][2][2]$a$986 [1:0] }
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][2][2]$a$986 [2] = $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][4][0]$b$1017 [3]
  Optimizing cells in module \Log2highacc.
Performed a total of 10 changes.

yosys> opt_merge

3.30.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Log2highacc'.
Removed a total of 0 cells.

yosys> opt_share

3.30.22. Executing OPT_SHARE pass.

yosys> opt_dff

3.30.23. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $$auto$memory_bmux2rom.cc:63:execute$250$rdreg[0] ($dff) from module Log2highacc (D = $memory$auto$memory_bmux2rom.cc:63:execute$250$rdmux[0][0][0]$a$971 [7], Q = \LUTout [7], rval = 1'1).

yosys> opt_clean

3.30.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Log2highacc..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.30.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module Log2highacc.

3.30.26. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.30.27. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Log2highacc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

yosys> opt_reduce -full

3.30.28. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Log2highacc.
Performed a total of 0 changes.

yosys> opt_merge

3.30.29. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Log2highacc'.
Removed a total of 0 cells.

yosys> opt_share

3.30.30. Executing OPT_SHARE pass.

yosys> opt_dff

3.30.31. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.32. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Log2highacc..

yosys> opt_expr -full

3.30.33. Executing OPT_EXPR pass (perform const folding).
Optimizing module Log2highacc.

3.30.34. Finished OPT passes. (There is nothing left to do.)

yosys> techmap -map +/techmap.v

3.31. Executing TECHMAP pass (map to technology primitives).

3.31.1. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.31.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $sdff.
Using extmapper simplemap for cells of type $dff.
No more expansions possible.
<suppressed ~106 debug messages>

yosys> opt -sat

3.32. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module Log2highacc.
<suppressed ~16 debug messages>

yosys> opt_merge -nomux

3.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Log2highacc'.
<suppressed ~159 debug messages>
Removed a total of 53 cells.

yosys> opt_muxtree

3.32.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Log2highacc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.32.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Log2highacc.
Performed a total of 0 changes.

yosys> opt_merge

3.32.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Log2highacc'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.32.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.32.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Log2highacc..
Removed 1 unused cells and 11 unused wires.
<suppressed ~2 debug messages>

yosys> opt_expr

3.32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module Log2highacc.
<suppressed ~3 debug messages>

3.32.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.32.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Log2highacc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.32.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Log2highacc.
Performed a total of 0 changes.

yosys> opt_merge

3.32.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Log2highacc'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.32.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.32.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Log2highacc..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.32.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module Log2highacc.

3.32.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.32.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Log2highacc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.32.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Log2highacc.
Performed a total of 0 changes.

yosys> opt_merge

3.32.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Log2highacc'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.32.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.32.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Log2highacc..

yosys> opt_expr

3.32.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module Log2highacc.

3.32.23. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

3.33. Executing ABC pass (technology mapping using ABC).

3.33.1. Summary of detected clock domains:
  318 cells in clk=\clk, en={ }, arst={ }, srst={ }
  1 cells in clk=\clk, en={ }, arst={ }, srst=\barrelout [5]

3.33.2. Extracting gate netlist of module `\Log2highacc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 318 gates and 342 wires to a netlist network with 22 inputs and 13 outputs.

3.33.2.1. Executing ABC.

3.33.3. Extracting gate netlist of module `\Log2highacc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by $abc$1411$lo24
Extracted 1 gates and 2 wires to a netlist network with 1 inputs and 1 outputs.

3.33.3.1. Executing ABC.

yosys> abc -dff

3.34. Executing ABC pass (technology mapping using ABC).

3.34.1. Summary of detected clock domains:
  263 cells in clk=\clk, en={ }, arst={ }, srst={ }
  3 cells in clk=\clk, en={ }, arst={ }, srst=$abc$1411$lo24

3.34.2. Extracting gate netlist of module `\Log2highacc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 263 gates and 285 wires to a netlist network with 22 inputs and 13 outputs.

3.34.2.1. Executing ABC.

3.34.3. Extracting gate netlist of module `\Log2highacc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by $abc$1705$lo29
Extracted 3 gates and 4 wires to a netlist network with 1 inputs and 1 outputs.

3.34.3.1. Executing ABC.

yosys> abc -dff

3.35. Executing ABC pass (technology mapping using ABC).

3.35.1. Summary of detected clock domains:
  291 cells in clk=\clk, en={ }, arst={ }, srst={ }
  3 cells in clk=\clk, en={ }, arst={ }, srst=$abc$1705$lo29

3.35.2. Extracting gate netlist of module `\Log2highacc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 291 gates and 313 wires to a netlist network with 22 inputs and 13 outputs.

3.35.2.1. Executing ABC.

3.35.3. Extracting gate netlist of module `\Log2highacc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by $abc$2027$lo26
Extracted 3 gates and 4 wires to a netlist network with 1 inputs and 1 outputs.

3.35.3.1. Executing ABC.

yosys> abc -dff

3.36. Executing ABC pass (technology mapping using ABC).

3.36.1. Summary of detected clock domains:
  293 cells in clk=\clk, en={ }, arst={ }, srst={ }
  3 cells in clk=\clk, en={ }, arst={ }, srst=$abc$2027$lo26

3.36.2. Extracting gate netlist of module `\Log2highacc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 293 gates and 315 wires to a netlist network with 22 inputs and 13 outputs.

3.36.2.1. Executing ABC.

3.36.3. Extracting gate netlist of module `\Log2highacc' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by $abc$2351$lo23
Extracted 3 gates and 4 wires to a netlist network with 1 inputs and 1 outputs.

3.36.3.1. Executing ABC.

yosys> opt_ffinv

3.37. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 1 inverters.

yosys> opt -sat

3.38. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.38.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module Log2highacc.
<suppressed ~2 debug messages>

yosys> opt_merge -nomux

3.38.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Log2highacc'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.38.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Log2highacc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.38.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Log2highacc.
Performed a total of 0 changes.

yosys> opt_merge

3.38.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Log2highacc'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.38.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.38.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Log2highacc..
Removed 1 unused cells and 1183 unused wires.
<suppressed ~5 debug messages>

yosys> opt_expr

3.38.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module Log2highacc.

3.38.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.38.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Log2highacc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.38.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Log2highacc.
Performed a total of 0 changes.

yosys> opt_merge

3.38.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Log2highacc'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.38.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.38.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Log2highacc..

yosys> opt_expr

3.38.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module Log2highacc.

3.38.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /home/users/temp_dir/yosys_WZCYEd/abc_tmp_1.scr

3.39. Executing ABC pass (technology mapping using ABC).

3.39.1. Extracting gate netlist of module `\Log2highacc' to `<abc-temp-dir>/input.blif'..
Extracted 265 gates and 293 wires to a netlist network with 28 inputs and 18 outputs.

3.39.1.1. Executing ABC.
DE:   #PIs =  28  #Luts =    52  Max Lvl =   7  Avg Lvl =   3.44  [   0.04 sec. at Pass 0]
DE:   #PIs =  28  #Luts =    46  Max Lvl =   7  Avg Lvl =   3.28  [   0.44 sec. at Pass 1]
DE:   #PIs =  28  #Luts =    46  Max Lvl =   7  Avg Lvl =   3.28  [   0.11 sec. at Pass 2]
DE:   #PIs =  28  #Luts =    45  Max Lvl =   7  Avg Lvl =   3.28  [   0.33 sec. at Pass 3]
DE:   #PIs =  28  #Luts =    44  Max Lvl =   7  Avg Lvl =   3.22  [   0.96 sec. at Pass 4]
DE:   #PIs =  28  #Luts =    43  Max Lvl =   7  Avg Lvl =   3.17  [   1.28 sec. at Pass 5]
DE:   #PIs =  28  #Luts =    43  Max Lvl =   7  Avg Lvl =   3.17  [   0.63 sec. at Pass 6]
DE:   #PIs =  28  #Luts =    43  Max Lvl =   7  Avg Lvl =   3.17  [   1.97 sec. at Pass 7]
DE:   #PIs =  28  #Luts =    43  Max Lvl =   7  Avg Lvl =   3.17  [   0.91 sec. at Pass 8]
DE:   #PIs =  28  #Luts =    43  Max Lvl =   7  Avg Lvl =   3.17  [   3.81 sec. at Pass 9]
DE:   #PIs =  28  #Luts =    43  Max Lvl =   7  Avg Lvl =   3.17  [   2.97 sec. at Pass 10]

yosys> opt

3.40. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.40.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module Log2highacc.

yosys> opt_merge -nomux

3.40.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Log2highacc'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.40.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Log2highacc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.40.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Log2highacc.
Performed a total of 0 changes.

yosys> opt_merge

3.40.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Log2highacc'.
Removed a total of 0 cells.

yosys> opt_dff

3.40.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.40.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Log2highacc..
Removed 0 unused cells and 293 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.40.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module Log2highacc.

3.40.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.40.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Log2highacc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.40.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Log2highacc.
Performed a total of 0 changes.

yosys> opt_merge

3.40.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Log2highacc'.
Removed a total of 0 cells.

yosys> opt_dff

3.40.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.40.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Log2highacc..

yosys> opt_expr

3.40.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module Log2highacc.

3.40.16. Finished OPT passes. (There is nothing left to do.)

yosys> opt_ffinv

3.41. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> stat

3.42. Printing statistics.

=== Log2highacc ===

   Number of wires:                 70
   Number of wire bits:            154
   Number of public wires:           8
   Number of public wire bits:      92
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 75
     $_DFF_P_                       31
     $_SDFF_PP1_                     1
     $lut                           43


yosys> shregmap -minlen 8 -maxlen 20

3.43. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.44. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.45. Printing statistics.

=== Log2highacc ===

   Number of wires:                 71
   Number of wire bits:            155
   Number of public wires:           8
   Number of public wire bits:      92
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 76
     $_DFF_P_                       32
     $_MUX_                          1
     $lut                           43


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.46. Executing TECHMAP pass (map to technology primitives).

3.46.1. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.46.2. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.46.3. Continuing TECHMAP pass.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using extmapper simplemap for cells of type $lut.
No more expansions possible.
<suppressed ~211 debug messages>

yosys> opt_expr -mux_undef

3.47. Executing OPT_EXPR pass (perform const folding).
Optimizing module Log2highacc.
<suppressed ~1722 debug messages>

yosys> simplemap

3.48. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.49. Executing OPT_EXPR pass (perform const folding).
Optimizing module Log2highacc.

yosys> opt_merge

3.50. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Log2highacc'.
<suppressed ~534 debug messages>
Removed a total of 178 cells.

yosys> opt_dff -nodffe -nosdff

3.51. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.52. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Log2highacc..
Removed 0 unused cells and 177 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.53. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.53.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module Log2highacc.
<suppressed ~43 debug messages>

yosys> opt_merge -nomux

3.53.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Log2highacc'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_muxtree

3.53.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Log2highacc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.53.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Log2highacc.
Performed a total of 0 changes.

yosys> opt_merge

3.53.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Log2highacc'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.53.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.53.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Log2highacc..
Removed 0 unused cells and 6 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.53.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module Log2highacc.

3.53.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.53.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Log2highacc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.53.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Log2highacc.
Performed a total of 0 changes.

yosys> opt_merge

3.53.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Log2highacc'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.53.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.53.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Log2highacc..

yosys> opt_expr

3.53.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module Log2highacc.

3.53.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /home/users/temp_dir/yosys_WZCYEd/abc_tmp_2.scr

3.54. Executing ABC pass (technology mapping using ABC).

3.54.1. Extracting gate netlist of module `\Log2highacc' to `<abc-temp-dir>/input.blif'..
Extracted 298 gates and 328 wires to a netlist network with 28 inputs and 18 outputs.

3.54.1.1. Executing ABC.
DE:   #PIs =  28  #Luts =    43  Max Lvl =   7  Avg Lvl =   3.17  [   0.04 sec. at Pass 0]
DE:   #PIs =  28  #Luts =    43  Max Lvl =   6  Avg Lvl =   2.94  [   0.44 sec. at Pass 1]
DE:   #PIs =  28  #Luts =    43  Max Lvl =   6  Avg Lvl =   2.94  [   0.11 sec. at Pass 2]
DE:   #PIs =  28  #Luts =    43  Max Lvl =   6  Avg Lvl =   2.94  [   0.45 sec. at Pass 3]
DE:   #PIs =  28  #Luts =    43  Max Lvl =   6  Avg Lvl =   2.94  [   0.13 sec. at Pass 4]
DE:   #PIs =  28  #Luts =    43  Max Lvl =   6  Avg Lvl =   2.94  [   0.51 sec. at Pass 5]
DE:   #PIs =  28  #Luts =    42  Max Lvl =   7  Avg Lvl =   3.00  [   3.81 sec. at Pass 6]
DE:   #PIs =  28  #Luts =    42  Max Lvl =   7  Avg Lvl =   3.00  [   1.03 sec. at Pass 7]
DE:   #PIs =  28  #Luts =    42  Max Lvl =   7  Avg Lvl =   3.00  [   2.21 sec. at Pass 8]
DE:   #PIs =  28  #Luts =    42  Max Lvl =   7  Avg Lvl =   3.00  [   0.65 sec. at Pass 9]
DE:   #PIs =  28  #Luts =    42  Max Lvl =   7  Avg Lvl =   3.00  [   4.33 sec. at Pass 10]
DE:   #PIs =  28  #Luts =    42  Max Lvl =   7  Avg Lvl =   3.00  [   1.20 sec. at Pass 11]

yosys> opt

3.55. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.55.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module Log2highacc.

yosys> opt_merge -nomux

3.55.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Log2highacc'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.55.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Log2highacc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.55.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Log2highacc.
Performed a total of 0 changes.

yosys> opt_merge

3.55.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Log2highacc'.
Removed a total of 0 cells.

yosys> opt_dff

3.55.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.55.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Log2highacc..
Removed 0 unused cells and 222 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.55.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module Log2highacc.

3.55.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.55.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Log2highacc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.55.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Log2highacc.
Performed a total of 0 changes.

yosys> opt_merge

3.55.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Log2highacc'.
Removed a total of 0 cells.

yosys> opt_dff

3.55.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.55.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Log2highacc..

yosys> opt_expr

3.55.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module Log2highacc.

3.55.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.56. Executing HIERARCHY pass (managing design hierarchy).

3.56.1. Analyzing design hierarchy..
Top module:  \Log2highacc

3.56.2. Analyzing design hierarchy..
Top module:  \Log2highacc
Removed 0 unused modules.

yosys> stat

3.57. Printing statistics.

=== Log2highacc ===

   Number of wires:                 69
   Number of wire bits:            153
   Number of public wires:           8
   Number of public wire bits:      92
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 74
     $lut                           42
     dffsre                         32


yosys> opt_clean -purge

3.58. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Log2highacc..
Removed 0 unused cells and 4 unused wires.
<suppressed ~4 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.59. Executing Verilog backend.

yosys> bmuxmap

3.59.1. Executing BMUXMAP pass.

yosys> demuxmap

3.59.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\Log2highacc'.

End of script. Logfile hash: 9dcf533e74, CPU: user 0.86s system 0.06s, MEM: 24.64 MB peak
Yosys 0.17+76 (git sha1 035496b50, gcc 9.1.0 -fPIC -Os)
Time spent: 99% 6x abc (548 sec), 0% 39x opt_expr (0 sec), ...
real 41.43
user 495.79
sys 53.96
