
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.70
 Yosys 0.18+10 (git sha1 c98b0e94e, gcc 9.4.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 05:39:28 2022.

yosys> verilog_defaults -add -I.

yosys> read -vhdl b22.vhd

yosys> verific -vhdl b22.vhd

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 05:39:28 2022.
VERIFIC-INFO [VHDL-1504] default VHDL library search path is now "/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008"
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'b22.vhd'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_1164' from file '/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_1164.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.standard' from file '/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/standard.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.textio' from file '/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/textio.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_arith' from file '/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_arith.vdb'
VERIFIC-INFO [VHDL-1012] b22.vhd:5: analyzing entity 'b14'
VERIFIC-INFO [VHDL-1010] b22.vhd:15: analyzing architecture 'behav'
VERIFIC-INFO [VHDL-1012] b22.vhd:515: analyzing entity 'b14rev'
VERIFIC-INFO [VHDL-1010] b22.vhd:525: analyzing architecture 'behav'
VERIFIC-INFO [VHDL-1012] b22.vhd:1025: analyzing entity 'b14_1'
VERIFIC-INFO [VHDL-1010] b22.vhd:1035: analyzing architecture 'behav'
VERIFIC-INFO [VHDL-1012] b22.vhd:1536: analyzing entity 'b22'
VERIFIC-INFO [VHDL-1010] b22.vhd:1544: analyzing architecture 'behav'

yosys> synth_rs -top b22 -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.69

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v +/rapidsilicon/genesis/dsp_sim.v

3.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Successfully finished Verilog frontend.

3.3. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_sim.v' to AST representation.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\RS_DSP2_MULT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_ports'.
Generating RTLIL representation for module `\RS_DSP3'.
Generating RTLIL representation for module `\RS_DSP3_MULT'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_params'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top b22

3.4. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VHDL-1067] b22.vhd:1536: processing 'b22(BEHAV)'
VERIFIC-INFO [VHDL-1067] b22.vhd:5: processing 'b14(BEHAV)'
VERIFIC-INFO [VHDL-1172] b22.vhd:482: 'others' clause is never selected
VERIFIC-INFO [VHDL-1067] b22.vhd:1025: processing 'b14_1(BEHAV)'
VERIFIC-INFO [VHDL-1172] b22.vhd:1502: 'others' clause is never selected
VERIFIC-INFO [VHDL-1067] b22.vhd:515: processing 'b14rev(BEHAV)'
VERIFIC-INFO [VHDL-1172] b22.vhd:992: 'others' clause is never selected
Importing module b22.
Importing module b14(BEHAV).
Importing module b14_1(BEHAV).
Importing module b14rev(BEHAV).

3.4.1. Analyzing design hierarchy..
Top module:  \b22
Used module:     \b14rev(BEHAV)
Used module:     \b14_1(BEHAV)
Used module:     \b14(BEHAV)

3.4.2. Analyzing design hierarchy..
Top module:  \b22
Used module:     \b14rev(BEHAV)
Used module:     \b14_1(BEHAV)
Used module:     \b14(BEHAV)
Removed 0 unused modules.

yosys> proc

3.5. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.5.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.5.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.5.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.5.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.5.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.5.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.5.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.5.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.5.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.5.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.5.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.5.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14rev(BEHAV).
<suppressed ~26 debug messages>
Optimizing module b14_1(BEHAV).
<suppressed ~26 debug messages>
Optimizing module b14(BEHAV).
<suppressed ~26 debug messages>
Optimizing module b22.

yosys> bmuxmap

3.6. Executing BMUXMAP pass.

yosys> demuxmap

3.7. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> flatten

3.8. Executing FLATTEN pass (flatten design).
Deleting now unused module b14(BEHAV).
Deleting now unused module b14_1(BEHAV).
Deleting now unused module b14rev(BEHAV).
<suppressed ~3 debug messages>

yosys> bmuxmap

3.9. Executing BMUXMAP pass.

yosys> demuxmap

3.10. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> tribuf -logic -formal

3.11. Executing TRIBUF pass.

yosys> deminout

3.12. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.13. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~182 debug messages>

yosys> opt_clean

3.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 44 unused cells and 673 unused wires.
<suppressed ~197 debug messages>

yosys> check

3.15. Executing CHECK pass (checking for obvious problems).
Checking module b22...
Found and reported 0 problems.

yosys> opt_expr

3.16. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~5 debug messages>

yosys> opt_merge -nomux

3.17. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.18. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\P1.$verific$i684$b22.vhd:505$554.
    dead port 2/2 on $mux $flatten\P1.$verific$mux_672$b22.vhd:505$545.
    dead port 2/2 on $mux $flatten\P1.$verific$mux_685$b22.vhd:505$556.
    dead port 2/2 on $mux $flatten\P2.$verific$i683$b22.vhd:1525$1060.
    dead port 2/2 on $mux $flatten\P2.$verific$mux_671$b22.vhd:1525$1051.
    dead port 2/2 on $mux $flatten\P2.$verific$mux_684$b22.vhd:1525$1062.
    dead port 2/2 on $mux $flatten\P3.$verific$i653$b22.vhd:1015$1580.
    dead port 2/2 on $mux $flatten\P3.$verific$mux_641$b22.vhd:1015$1571.
Removed 8 multiplexer ports.
<suppressed ~73 debug messages>

yosys> opt_reduce

3.19. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
    New ctrl vector for $pmux cell $flatten\P1.$verific$select_746$b22.vhd:490$507: { $flatten\P1.$verific$n2255$138 $auto$opt_reduce.cc:134:opt_pmux$2262 }
    New ctrl vector for $pmux cell $flatten\P1.$verific$select_750$b22.vhd:490$448: { $flatten\P1.$verific$n2256$139 $auto$opt_reduce.cc:134:opt_pmux$2264 }
    New ctrl vector for $pmux cell $flatten\P1.$verific$select_751$b22.vhd:490$525: { $flatten\P1.$verific$n2257$140 $auto$opt_reduce.cc:134:opt_pmux$2266 }
    New ctrl vector for $pmux cell $flatten\P1.$verific$select_752$b22.vhd:490$526: { $flatten\P1.$verific$n2258$141 $auto$opt_reduce.cc:134:opt_pmux$2268 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_746$b22.vhd:1510$1011: { $flatten\P2.$verific$n2255$641 $auto$opt_reduce.cc:134:opt_pmux$2270 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_750$b22.vhd:1510$952: { $flatten\P2.$verific$n2256$642 $auto$opt_reduce.cc:134:opt_pmux$2272 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_751$b22.vhd:1510$1029: { $flatten\P2.$verific$n2257$643 $auto$opt_reduce.cc:134:opt_pmux$2274 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_752$b22.vhd:1510$1030: { $flatten\P2.$verific$n2258$644 $auto$opt_reduce.cc:134:opt_pmux$2276 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_494$b22.vhd:957$1527: { $flatten\P3.$verific$n2118$1146 $auto$opt_reduce.cc:134:opt_pmux$2278 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_495$b22.vhd:957$1528: { $flatten\P3.$verific$n2120$1148 $auto$opt_reduce.cc:134:opt_pmux$2280 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_496$b22.vhd:957$1529: { $flatten\P3.$verific$n2119$1147 $auto$opt_reduce.cc:134:opt_pmux$2282 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_497$b22.vhd:957$1530: { $flatten\P3.$verific$n2121$1149 $auto$opt_reduce.cc:134:opt_pmux$2284 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_534$b22.vhd:977$1533: { $flatten\P3.$verific$n2121$1149 $auto$opt_reduce.cc:134:opt_pmux$2286 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_535$b22.vhd:977$1534: { $flatten\P3.$verific$n2119$1147 $auto$opt_reduce.cc:134:opt_pmux$2288 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_536$b22.vhd:977$1535: { $flatten\P3.$verific$n2120$1148 $auto$opt_reduce.cc:134:opt_pmux$2290 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_537$b22.vhd:977$1536: { $flatten\P3.$verific$n2118$1146 $auto$opt_reduce.cc:134:opt_pmux$2292 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_617$b22.vhd:1000$1547: { $flatten\P3.$verific$n2121$1149 $auto$opt_reduce.cc:134:opt_pmux$2294 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_618$b22.vhd:1000$1548: { $flatten\P3.$verific$n2120$1148 $auto$opt_reduce.cc:134:opt_pmux$2296 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_619$b22.vhd:1000$1549: { $flatten\P3.$verific$n2119$1147 $auto$opt_reduce.cc:134:opt_pmux$2298 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_620$b22.vhd:1000$1550: { $flatten\P3.$verific$n2118$1146 $auto$opt_reduce.cc:134:opt_pmux$2300 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_717$b22.vhd:877$1518: { $flatten\P3.$verific$n2118$1146 $auto$opt_reduce.cc:134:opt_pmux$2302 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_718$b22.vhd:877$1524: { $flatten\P3.$verific$n2119$1147 $auto$opt_reduce.cc:134:opt_pmux$2304 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_719$b22.vhd:877$1525: { $flatten\P3.$verific$n2120$1148 $auto$opt_reduce.cc:134:opt_pmux$2306 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_720$b22.vhd:877$1526: { $flatten\P3.$verific$n2121$1149 $auto$opt_reduce.cc:134:opt_pmux$2308 }
  Optimizing cells in module \b22.
Performed a total of 24 changes.

yosys> opt_merge

3.20. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
<suppressed ~66 debug messages>
Removed a total of 22 cells.

yosys> opt_share

3.21. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $mux $flatten\P1.$auto$bmuxmap.cc:60:execute$2222 in front of them:
        $flatten\P1.$verific$i102$b22.vhd:173$473
        $flatten\P1.$verific$i98$b22.vhd:168$472

    Found cells that share an operand and can be merged by moving the $mux $flatten\P1.$auto$bmuxmap.cc:60:execute$2223 in front of them:
        $flatten\P1.$verific$i109$b22.vhd:183$475
        $flatten\P1.$verific$i105$b22.vhd:178$474

    Found cells that share an operand and can be merged by moving the $mux $flatten\P1.$auto$bmuxmap.cc:60:execute$2224 in front of them:
        $flatten\P1.$verific$i116$b22.vhd:193$477
        $flatten\P1.$verific$i113$b22.vhd:188$476

    Found cells that share an operand and can be merged by moving the $mux $flatten\P1.$auto$bmuxmap.cc:60:execute$2225 in front of them:
        $flatten\P1.$verific$i131$b22.vhd:209$479
        $flatten\P1.$verific$i123$b22.vhd:201$478

    Found cells that share an operand and can be merged by moving the $mux $flatten\P2.$auto$bmuxmap.cc:60:execute$1841 in front of them:
        $flatten\P2.$verific$add_664$b22.vhd:1518$1043
        $flatten\P2.$verific$add_662$b22.vhd:1517$1040

    Found cells that share an operand and can be merged by moving the $mux $flatten\P2.$auto$bmuxmap.cc:60:execute$2016 in front of them:
        $flatten\P2.$verific$i102$b22.vhd:1193$977
        $flatten\P2.$verific$i98$b22.vhd:1188$976

    Found cells that share an operand and can be merged by moving the $mux $flatten\P2.$auto$bmuxmap.cc:60:execute$2017 in front of them:
        $flatten\P2.$verific$i109$b22.vhd:1203$979
        $flatten\P2.$verific$i105$b22.vhd:1198$978

    Found cells that share an operand and can be merged by moving the $mux $flatten\P2.$auto$bmuxmap.cc:60:execute$2018 in front of them:
        $flatten\P2.$verific$i116$b22.vhd:1213$981
        $flatten\P2.$verific$i113$b22.vhd:1208$980

    Found cells that share an operand and can be merged by moving the $mux $flatten\P2.$auto$bmuxmap.cc:60:execute$2019 in front of them:
        $flatten\P2.$verific$i131$b22.vhd:1229$983
        $flatten\P2.$verific$i123$b22.vhd:1221$982

    Found cells that share an operand and can be merged by moving the $mux $flatten\P3.$auto$bmuxmap.cc:60:execute$1624 in front of them:
        $flatten\P3.$verific$sub_634$b22.vhd:1008$1563
        $flatten\P3.$verific$sub_632$b22.vhd:1007$1560

    Found cells that share an operand and can be merged by moving the $mux $flatten\P1.$auto$bmuxmap.cc:60:execute$2052 in front of them:
        $flatten\P1.$verific$add_664$b22.vhd:498$537
        $flatten\P1.$verific$add_662$b22.vhd:497$535

    Found cells that share an operand and can be merged by moving the $mux $flatten\P3.$auto$bmuxmap.cc:60:execute$1805 in front of them:
        $flatten\P3.$verific$i100$b22.vhd:683$1482
        $flatten\P3.$verific$i96$b22.vhd:678$1481

    Found cells that share an operand and can be merged by moving the $mux $flatten\P3.$auto$bmuxmap.cc:60:execute$1806 in front of them:
        $flatten\P3.$verific$i107$b22.vhd:693$1484
        $flatten\P3.$verific$i103$b22.vhd:688$1483

    Found cells that share an operand and can be merged by moving the $mux $flatten\P3.$auto$bmuxmap.cc:60:execute$1807 in front of them:
        $flatten\P3.$verific$i114$b22.vhd:703$1486
        $flatten\P3.$verific$i111$b22.vhd:698$1485

    Found cells that share an operand and can be merged by moving the $mux $flatten\P3.$auto$bmuxmap.cc:60:execute$1808 in front of them:
        $flatten\P3.$verific$i129$b22.vhd:719$1488
        $flatten\P3.$verific$i121$b22.vhd:711$1487


yosys> opt_dff -nosdff -nodffe

3.22. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $flatten\P3.$verific$wr_reg$b22.vhd:1019$1617 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P3.$verific$state_reg$b22.vhd:1019$1619 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P3.$verific$reg3_reg$b22.vhd:1019$1614 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P3.$verific$reg2_reg$b22.vhd:1019$1613 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P3.$verific$reg1_reg$b22.vhd:1019$1612 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P3.$verific$reg0_reg$b22.vhd:1019$1611 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P3.$verific$rd_reg$b22.vhd:1019$1616 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P3.$verific$addr_reg$b22.vhd:1019$1615 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P3.$verific$IR_reg$b22.vhd:1019$1608 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P3.$verific$B_reg$b22.vhd:1019$1610 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P2.$verific$wr_reg$b22.vhd:1529$1097 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P2.$verific$state_reg$b22.vhd:1529$1099 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P2.$verific$reg3_reg$b22.vhd:1529$1094 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P2.$verific$reg2_reg$b22.vhd:1529$1093 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P2.$verific$reg1_reg$b22.vhd:1529$1092 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P2.$verific$reg0_reg$b22.vhd:1529$1091 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P2.$verific$rd_reg$b22.vhd:1529$1096 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P2.$verific$datao_reg$b22.vhd:1529$1098 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P2.$verific$addr_reg$b22.vhd:1529$1095 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P2.$verific$IR_reg$b22.vhd:1529$1088 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P2.$verific$B_reg$b22.vhd:1529$1090 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P1.$verific$wr_reg$b22.vhd:509$591 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P1.$verific$state_reg$b22.vhd:509$593 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P1.$verific$reg3_reg$b22.vhd:509$588 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P1.$verific$reg2_reg$b22.vhd:509$587 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P1.$verific$reg1_reg$b22.vhd:509$586 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P1.$verific$reg0_reg$b22.vhd:509$585 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P1.$verific$rd_reg$b22.vhd:509$590 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P1.$verific$datao_reg$b22.vhd:509$592 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P1.$verific$addr_reg$b22.vhd:509$589 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P1.$verific$IR_reg$b22.vhd:509$582 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P1.$verific$B_reg$b22.vhd:509$584 ($aldff) from module b22.

yosys> opt_clean

3.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 60 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.24. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~23 debug messages>

yosys> opt_muxtree

3.25. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~87 debug messages>

yosys> opt_reduce

3.26. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.27. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
<suppressed ~36 debug messages>
Removed a total of 12 cells.

yosys> opt_share

3.28. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $mux $flatten\P1.$auto$bmuxmap.cc:60:execute$2229 in front of them:
        $flatten\P1.$verific$i109$b22.vhd:183$475
        $flatten\P1.$verific$i102$b22.vhd:173$473

    Found cells that share an operand and can be merged by moving the $mux $flatten\P1.$auto$bmuxmap.cc:60:execute$2230 in front of them:
        $flatten\P1.$verific$i131$b22.vhd:209$479
        $flatten\P1.$verific$i116$b22.vhd:193$477

    Found cells that share an operand and can be merged by moving the $mux $flatten\P2.$auto$bmuxmap.cc:60:execute$2023 in front of them:
        $flatten\P2.$verific$i109$b22.vhd:1203$979
        $flatten\P2.$verific$i102$b22.vhd:1193$977

    Found cells that share an operand and can be merged by moving the $mux $flatten\P2.$auto$bmuxmap.cc:60:execute$2024 in front of them:
        $flatten\P2.$verific$i131$b22.vhd:1229$983
        $flatten\P2.$verific$i116$b22.vhd:1213$981

    Found cells that share an operand and can be merged by moving the $mux $flatten\P3.$auto$bmuxmap.cc:60:execute$1812 in front of them:
        $flatten\P3.$verific$i107$b22.vhd:693$1484
        $flatten\P3.$verific$i100$b22.vhd:683$1482

    Found cells that share an operand and can be merged by moving the $mux $flatten\P3.$auto$bmuxmap.cc:60:execute$1813 in front of them:
        $flatten\P3.$verific$i129$b22.vhd:719$1488
        $flatten\P3.$verific$i114$b22.vhd:703$1486


yosys> opt_dff -nosdff -nodffe

3.29. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 15 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.31. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~6 debug messages>

yosys> opt_muxtree

3.32. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~93 debug messages>

yosys> opt_reduce

3.33. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.34. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
<suppressed ~18 debug messages>
Removed a total of 6 cells.

yosys> opt_share

3.35. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $mux $flatten\P1.$auto$bmuxmap.cc:60:execute$2233 in front of them:
        $flatten\P1.$verific$i131$b22.vhd:209$479
        $flatten\P1.$verific$i109$b22.vhd:183$475

    Found cells that share an operand and can be merged by moving the $mux $flatten\P2.$auto$bmuxmap.cc:60:execute$2027 in front of them:
        $flatten\P2.$verific$i131$b22.vhd:1229$983
        $flatten\P2.$verific$i109$b22.vhd:1203$979

    Found cells that share an operand and can be merged by moving the $mux $flatten\P3.$auto$bmuxmap.cc:60:execute$1816 in front of them:
        $flatten\P3.$verific$i129$b22.vhd:719$1488
        $flatten\P3.$verific$i107$b22.vhd:693$1484


yosys> opt_dff -nosdff -nodffe

3.36. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.37. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 9 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.38. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~3 debug messages>

yosys> opt_muxtree

3.39. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~84 debug messages>

yosys> opt_reduce

3.40. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.41. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

yosys> opt_share

3.42. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.43. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.44. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.45. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
MAX OPT ITERATION = 4

yosys> fsm -encoding binary

3.46. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.46.1. Executing FSM_DETECT pass (finding FSMs in design).
Found FSM state register b22.P1.d.
Found FSM state register b22.P2.d.
Found FSM state register b22.P3.d.

yosys> fsm_extract

3.46.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\P1.d' from module `\b22'.
  found $adff cell for state register: $flatten\P1.$verific$d_reg$b22.vhd:509$583
  root of input selection tree: $flatten\P1.$verific$n11472$388
  found reset state: 0 (from async reset)
  found ctrl input: \P1.state
  found ctrl input: $flatten\P1.$verific$n341$234 [0]
  found ctrl input: $flatten\P1.$verific$n10346$205
  found ctrl input: $flatten\P1.$verific$n1405$132
  found ctrl input: $flatten\P1.$verific$n1440$133
  found ctrl input: $flatten\P1.$verific$n1474$134
  found ctrl input: $flatten\P1.$verific$n1475$135
  found ctrl input: $flatten\P1.$verific$n1476$136
  found ctrl input: $flatten\P1.$verific$n1477$137
  found state code: 1
  found state code: 2
  found state code: 3
  found ctrl input: \P1.B
  ctrl inputs: { \P1.state \P1.B $flatten\P1.$verific$n341$234 [0] $flatten\P1.$verific$n1477$137 $flatten\P1.$verific$n1476$136 $flatten\P1.$verific$n1475$135 $flatten\P1.$verific$n1474$134 $flatten\P1.$verific$n1440$133 $flatten\P1.$verific$n1405$132 $flatten\P1.$verific$n10346$205 }
  ctrl outputs: $flatten\P1.$verific$n11472$388
  transition:          0 10'0--------- ->          0 0
  transition:          0 10'1-00000000 ->          0 0
  transition:          0 10'1-01000000 ->          0 0
  transition:          0 10'1-0-100000 ->          1 1
  transition:          0 10'1-0--10000 ->          2 2
  transition:          0 10'1-0---1000 ->          3 3
  transition:          0 10'100----100 ->          0 0
  transition:          0 10'110----100 ->          3 3
  transition:          0 10'100-----10 ->          3 3
  transition:          0 10'110-----10 ->          0 0
  transition:          0 10'1-0------1 ->          0 0
  transition:          0 10'1-1------- ->          0 0
  transition:          2 10'0--------- ->          2 2
  transition:          2 10'1-00000000 ->          2 2
  transition:          2 10'1-01000000 ->          0 0
  transition:          2 10'1-0-100000 ->          1 1
  transition:          2 10'1-0--10000 ->          2 2
  transition:          2 10'1-0---1000 ->          3 3
  transition:          2 10'100----100 ->          2 2
  transition:          2 10'110----100 ->          3 3
  transition:          2 10'100-----10 ->          3 3
  transition:          2 10'110-----10 ->          2 2
  transition:          2 10'1-0------1 ->          2 2
  transition:          2 10'1-1------- ->          2 2
  transition:          1 10'0--------- ->          1 1
  transition:          1 10'1-00000000 ->          1 1
  transition:          1 10'1-01000000 ->          0 0
  transition:          1 10'1-0-100000 ->          1 1
  transition:          1 10'1-0--10000 ->          2 2
  transition:          1 10'1-0---1000 ->          3 3
  transition:          1 10'100----100 ->          1 1
  transition:          1 10'110----100 ->          3 3
  transition:          1 10'100-----10 ->          3 3
  transition:          1 10'110-----10 ->          1 1
  transition:          1 10'1-0------1 ->          1 1
  transition:          1 10'1-1------- ->          1 1
  transition:          3 10'0--------- ->          3 3
  transition:          3 10'1-00000000 ->          3 3
  transition:          3 10'1-01000000 ->          0 0
  transition:          3 10'1-0-100000 ->          1 1
  transition:          3 10'1-0--10000 ->          2 2
  transition:          3 10'1-0---1000 ->          3 3
  transition:          3 10'100----100 ->          3 3
  transition:          3 10'110----100 ->          3 3
  transition:          3 10'100-----10 ->          3 3
  transition:          3 10'110-----10 ->          3 3
  transition:          3 10'1-0------1 ->          3 3
  transition:          3 10'1-1------- ->          3 3
Extracting FSM `\P2.d' from module `\b22'.
  found $adff cell for state register: $flatten\P2.$verific$d_reg$b22.vhd:1529$1089
  root of input selection tree: $flatten\P2.$verific$n11479$892
  found reset state: 0 (from async reset)
  found ctrl input: \P2.state
  found ctrl input: $flatten\P2.$verific$n341$737 [0]
  found ctrl input: $flatten\P2.$verific$n10346$708
  found ctrl input: $flatten\P2.$verific$n1405$635
  found ctrl input: $flatten\P2.$verific$n1440$636
  found ctrl input: $flatten\P2.$verific$n1474$637
  found ctrl input: $flatten\P2.$verific$n1475$638
  found ctrl input: $flatten\P2.$verific$n1476$639
  found ctrl input: $flatten\P2.$verific$n1477$640
  found state code: 1
  found state code: 2
  found state code: 3
  found ctrl input: \P2.B
  ctrl inputs: { \P2.state \P2.B $flatten\P2.$verific$n341$737 [0] $flatten\P2.$verific$n1477$640 $flatten\P2.$verific$n1476$639 $flatten\P2.$verific$n1475$638 $flatten\P2.$verific$n1474$637 $flatten\P2.$verific$n1440$636 $flatten\P2.$verific$n1405$635 $flatten\P2.$verific$n10346$708 }
  ctrl outputs: $flatten\P2.$verific$n11479$892
  transition:          0 10'0--------- ->          0 0
  transition:          0 10'1-00000000 ->          0 0
  transition:          0 10'1-01000000 ->          0 0
  transition:          0 10'1-0-100000 ->          1 1
  transition:          0 10'1-0--10000 ->          2 2
  transition:          0 10'1-0---1000 ->          3 3
  transition:          0 10'100----100 ->          0 0
  transition:          0 10'110----100 ->          3 3
  transition:          0 10'100-----10 ->          3 3
  transition:          0 10'110-----10 ->          0 0
  transition:          0 10'1-0------1 ->          0 0
  transition:          0 10'1-1------- ->          0 0
  transition:          2 10'0--------- ->          2 2
  transition:          2 10'1-00000000 ->          2 2
  transition:          2 10'1-01000000 ->          0 0
  transition:          2 10'1-0-100000 ->          1 1
  transition:          2 10'1-0--10000 ->          2 2
  transition:          2 10'1-0---1000 ->          3 3
  transition:          2 10'100----100 ->          2 2
  transition:          2 10'110----100 ->          3 3
  transition:          2 10'100-----10 ->          3 3
  transition:          2 10'110-----10 ->          2 2
  transition:          2 10'1-0------1 ->          2 2
  transition:          2 10'1-1------- ->          2 2
  transition:          1 10'0--------- ->          1 1
  transition:          1 10'1-00000000 ->          1 1
  transition:          1 10'1-01000000 ->          0 0
  transition:          1 10'1-0-100000 ->          1 1
  transition:          1 10'1-0--10000 ->          2 2
  transition:          1 10'1-0---1000 ->          3 3
  transition:          1 10'100----100 ->          1 1
  transition:          1 10'110----100 ->          3 3
  transition:          1 10'100-----10 ->          3 3
  transition:          1 10'110-----10 ->          1 1
  transition:          1 10'1-0------1 ->          1 1
  transition:          1 10'1-1------- ->          1 1
  transition:          3 10'0--------- ->          3 3
  transition:          3 10'1-00000000 ->          3 3
  transition:          3 10'1-01000000 ->          0 0
  transition:          3 10'1-0-100000 ->          1 1
  transition:          3 10'1-0--10000 ->          2 2
  transition:          3 10'1-0---1000 ->          3 3
  transition:          3 10'100----100 ->          3 3
  transition:          3 10'110----100 ->          3 3
  transition:          3 10'100-----10 ->          3 3
  transition:          3 10'110-----10 ->          3 3
  transition:          3 10'1-0------1 ->          3 3
  transition:          3 10'1-1------- ->          3 3
Extracting FSM `\P3.d' from module `\b22'.
  found $adff cell for state register: $flatten\P3.$verific$d_reg$b22.vhd:1019$1609
  root of input selection tree: $flatten\P3.$verific$n11328$1397
  found reset state: 0 (from async reset)
  found ctrl input: \P3.state
  found ctrl input: $flatten\P3.$verific$n341$1240 [0]
  found ctrl input: $flatten\P3.$verific$n10195$1213
  found ctrl input: $flatten\P3.$verific$n1406$1140
  found ctrl input: $flatten\P3.$verific$n1441$1141
  found ctrl input: $flatten\P3.$verific$n1475$1142
  found ctrl input: $flatten\P3.$verific$n1476$1143
  found ctrl input: $flatten\P3.$verific$n1477$1144
  found ctrl input: $flatten\P3.$verific$n1478$1145
  found state code: 1
  found state code: 2
  found state code: 3
  found ctrl input: \P3.B
  ctrl inputs: { \P3.state \P3.B $flatten\P3.$verific$n341$1240 [0] $flatten\P3.$verific$n1478$1145 $flatten\P3.$verific$n1477$1144 $flatten\P3.$verific$n1476$1143 $flatten\P3.$verific$n1475$1142 $flatten\P3.$verific$n1441$1141 $flatten\P3.$verific$n1406$1140 $flatten\P3.$verific$n10195$1213 }
  ctrl outputs: $flatten\P3.$verific$n11328$1397
  transition:          0 10'0--------- ->          0 0
  transition:          0 10'1-00000000 ->          0 0
  transition:          0 10'1-01000000 ->          0 0
  transition:          0 10'1-0-100000 ->          1 1
  transition:          0 10'1-0--10000 ->          2 2
  transition:          0 10'1-0---1000 ->          3 3
  transition:          0 10'100----100 ->          0 0
  transition:          0 10'110----100 ->          3 3
  transition:          0 10'100-----10 ->          3 3
  transition:          0 10'110-----10 ->          0 0
  transition:          0 10'1-0------1 ->          0 0
  transition:          0 10'1-1------- ->          0 0
  transition:          2 10'0--------- ->          2 2
  transition:          2 10'1-00000000 ->          2 2
  transition:          2 10'1-01000000 ->          0 0
  transition:          2 10'1-0-100000 ->          1 1
  transition:          2 10'1-0--10000 ->          2 2
  transition:          2 10'1-0---1000 ->          3 3
  transition:          2 10'100----100 ->          2 2
  transition:          2 10'110----100 ->          3 3
  transition:          2 10'100-----10 ->          3 3
  transition:          2 10'110-----10 ->          2 2
  transition:          2 10'1-0------1 ->          2 2
  transition:          2 10'1-1------- ->          2 2
  transition:          1 10'0--------- ->          1 1
  transition:          1 10'1-00000000 ->          1 1
  transition:          1 10'1-01000000 ->          0 0
  transition:          1 10'1-0-100000 ->          1 1
  transition:          1 10'1-0--10000 ->          2 2
  transition:          1 10'1-0---1000 ->          3 3
  transition:          1 10'100----100 ->          1 1
  transition:          1 10'110----100 ->          3 3
  transition:          1 10'100-----10 ->          3 3
  transition:          1 10'110-----10 ->          1 1
  transition:          1 10'1-0------1 ->          1 1
  transition:          1 10'1-1------- ->          1 1
  transition:          3 10'0--------- ->          3 3
  transition:          3 10'1-00000000 ->          3 3
  transition:          3 10'1-01000000 ->          0 0
  transition:          3 10'1-0-100000 ->          1 1
  transition:          3 10'1-0--10000 ->          2 2
  transition:          3 10'1-0---1000 ->          3 3
  transition:          3 10'100----100 ->          3 3
  transition:          3 10'110----100 ->          3 3
  transition:          3 10'100-----10 ->          3 3
  transition:          3 10'110-----10 ->          3 3
  transition:          3 10'1-0------1 ->          3 3
  transition:          3 10'1-1------- ->          3 3

yosys> fsm_opt

3.46.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\P3.d$2385' from module `\b22'.
  Merging pattern 10'1-00000000 and 10'1-01000000 from group (0 0 0).
  Merging pattern 10'1-01000000 and 10'1-00000000 from group (0 0 0).
  Merging pattern 10'100----100 and 10'110----100 from group (3 3 3).
  Merging pattern 10'110----100 and 10'100----100 from group (3 3 3).
  Merging pattern 10'100-----10 and 10'110-----10 from group (3 3 3).
  Merging pattern 10'110-----10 and 10'100-----10 from group (3 3 3).
Optimizing FSM `$fsm$\P2.d$2383' from module `\b22'.
  Merging pattern 10'1-00000000 and 10'1-01000000 from group (0 0 0).
  Merging pattern 10'1-01000000 and 10'1-00000000 from group (0 0 0).
  Merging pattern 10'100----100 and 10'110----100 from group (3 3 3).
  Merging pattern 10'110----100 and 10'100----100 from group (3 3 3).
  Merging pattern 10'100-----10 and 10'110-----10 from group (3 3 3).
  Merging pattern 10'110-----10 and 10'100-----10 from group (3 3 3).
Optimizing FSM `$fsm$\P1.d$2381' from module `\b22'.
  Merging pattern 10'1-00000000 and 10'1-01000000 from group (0 0 0).
  Merging pattern 10'1-01000000 and 10'1-00000000 from group (0 0 0).
  Merging pattern 10'100----100 and 10'110----100 from group (3 3 3).
  Merging pattern 10'110----100 and 10'100----100 from group (3 3 3).
  Merging pattern 10'100-----10 and 10'110-----10 from group (3 3 3).
  Merging pattern 10'110-----10 and 10'100-----10 from group (3 3 3).

yosys> opt_clean

3.46.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 9 unused cells and 9 unused wires.
<suppressed ~10 debug messages>

yosys> fsm_opt

3.46.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\P1.d$2381' from module `\b22'.
Optimizing FSM `$fsm$\P2.d$2383' from module `\b22'.
Optimizing FSM `$fsm$\P3.d$2385' from module `\b22'.

yosys> fsm_recode -encoding binary

3.46.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\P1.d$2381' from module `\b22' using `auto' encoding:
  mapping auto encoding to `binary` for this FSM.
  00000000000000000000000000000000 -> 00
  00000000000000000000000000000010 -> 01
  00000000000000000000000000000001 -> 10
  00000000000000000000000000000011 -> 11
Recoding FSM `$fsm$\P2.d$2383' from module `\b22' using `auto' encoding:
  mapping auto encoding to `binary` for this FSM.
  00000000000000000000000000000000 -> 00
  00000000000000000000000000000010 -> 01
  00000000000000000000000000000001 -> 10
  00000000000000000000000000000011 -> 11
Recoding FSM `$fsm$\P3.d$2385' from module `\b22' using `auto' encoding:
  mapping auto encoding to `binary` for this FSM.
  00000000000000000000000000000000 -> 00
  00000000000000000000000000000010 -> 01
  00000000000000000000000000000001 -> 10
  00000000000000000000000000000011 -> 11

yosys> fsm_info

3.46.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\P1.d$2381' from module `b22':
-------------------------------------

  Information on FSM $fsm$\P1.d$2381 (\P1.d):

  Number of input signals:   10
  Number of output signals:  32
  Number of state bits:       2

  Input signals:
    0: $flatten\P1.$verific$n10346$205
    1: $flatten\P1.$verific$n1405$132
    2: $flatten\P1.$verific$n1440$133
    3: $flatten\P1.$verific$n1474$134
    4: $flatten\P1.$verific$n1475$135
    5: $flatten\P1.$verific$n1476$136
    6: $flatten\P1.$verific$n1477$137
    7: $flatten\P1.$verific$n341$234 [0]
    8: \P1.B
    9: \P1.state

  Output signals:
    0: $flatten\P1.$verific$n11472$388 [0]
    1: $flatten\P1.$verific$n11472$388 [1]
    2: $flatten\P1.$verific$n11472$388 [2]
    3: $flatten\P1.$verific$n11472$388 [3]
    4: $flatten\P1.$verific$n11472$388 [4]
    5: $flatten\P1.$verific$n11472$388 [5]
    6: $flatten\P1.$verific$n11472$388 [6]
    7: $flatten\P1.$verific$n11472$388 [7]
    8: $flatten\P1.$verific$n11472$388 [8]
    9: $flatten\P1.$verific$n11472$388 [9]
   10: $flatten\P1.$verific$n11472$388 [10]
   11: $flatten\P1.$verific$n11472$388 [11]
   12: $flatten\P1.$verific$n11472$388 [12]
   13: $flatten\P1.$verific$n11472$388 [13]
   14: $flatten\P1.$verific$n11472$388 [14]
   15: $flatten\P1.$verific$n11472$388 [15]
   16: $flatten\P1.$verific$n11472$388 [16]
   17: $flatten\P1.$verific$n11472$388 [17]
   18: $flatten\P1.$verific$n11472$388 [18]
   19: $flatten\P1.$verific$n11472$388 [19]
   20: $flatten\P1.$verific$n11472$388 [20]
   21: $flatten\P1.$verific$n11472$388 [21]
   22: $flatten\P1.$verific$n11472$388 [22]
   23: $flatten\P1.$verific$n11472$388 [23]
   24: $flatten\P1.$verific$n11472$388 [24]
   25: $flatten\P1.$verific$n11472$388 [25]
   26: $flatten\P1.$verific$n11472$388 [26]
   27: $flatten\P1.$verific$n11472$388 [27]
   28: $flatten\P1.$verific$n11472$388 [28]
   29: $flatten\P1.$verific$n11472$388 [29]
   30: $flatten\P1.$verific$n11472$388 [30]
   31: $flatten\P1.$verific$n11472$388 [31]

  State encoding:
    0:       2'00  <RESET STATE>
    1:       2'01
    2:       2'10
    3:       2'11

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 10'1-0-000000   ->     0 0
      1:     0 10'100----100   ->     0 0
      2:     0 10'110-----10   ->     0 0
      3:     0 10'1-0------1   ->     0 0
      4:     0 10'1-1-------   ->     0 0
      5:     0 10'0---------   ->     0 0
      6:     0 10'1-0--10000   ->     1 2
      7:     0 10'1-0-100000   ->     2 1
      8:     0 10'1-0---1000   ->     3 3
      9:     0 10'110----100   ->     3 3
     10:     0 10'100-----10   ->     3 3
     11:     1 10'1-01000000   ->     0 0
     12:     1 10'1-00000000   ->     1 2
     13:     1 10'1-0--10000   ->     1 2
     14:     1 10'100----100   ->     1 2
     15:     1 10'110-----10   ->     1 2
     16:     1 10'1-0------1   ->     1 2
     17:     1 10'1-1-------   ->     1 2
     18:     1 10'0---------   ->     1 2
     19:     1 10'1-0-100000   ->     2 1
     20:     1 10'1-0---1000   ->     3 3
     21:     1 10'110----100   ->     3 3
     22:     1 10'100-----10   ->     3 3
     23:     2 10'1-01000000   ->     0 0
     24:     2 10'1-0--10000   ->     1 2
     25:     2 10'1-00000000   ->     2 1
     26:     2 10'1-0-100000   ->     2 1
     27:     2 10'100----100   ->     2 1
     28:     2 10'110-----10   ->     2 1
     29:     2 10'1-0------1   ->     2 1
     30:     2 10'1-1-------   ->     2 1
     31:     2 10'0---------   ->     2 1
     32:     2 10'1-0---1000   ->     3 3
     33:     2 10'110----100   ->     3 3
     34:     2 10'100-----10   ->     3 3
     35:     3 10'1-01000000   ->     0 0
     36:     3 10'1-0--10000   ->     1 2
     37:     3 10'1-0-100000   ->     2 1
     38:     3 10'1-00000000   ->     3 3
     39:     3 10'1-0---1000   ->     3 3
     40:     3 10'1-0----100   ->     3 3
     41:     3 10'1-0-----10   ->     3 3
     42:     3 10'1-0------1   ->     3 3
     43:     3 10'1-1-------   ->     3 3
     44:     3 10'0---------   ->     3 3

-------------------------------------

FSM `$fsm$\P2.d$2383' from module `b22':
-------------------------------------

  Information on FSM $fsm$\P2.d$2383 (\P2.d):

  Number of input signals:   10
  Number of output signals:  32
  Number of state bits:       2

  Input signals:
    0: $flatten\P2.$verific$n10346$708
    1: $flatten\P2.$verific$n1405$635
    2: $flatten\P2.$verific$n1440$636
    3: $flatten\P2.$verific$n1474$637
    4: $flatten\P2.$verific$n1475$638
    5: $flatten\P2.$verific$n1476$639
    6: $flatten\P2.$verific$n1477$640
    7: $flatten\P2.$verific$n341$737 [0]
    8: \P2.B
    9: \P2.state

  Output signals:
    0: $flatten\P2.$verific$n11479$892 [0]
    1: $flatten\P2.$verific$n11479$892 [1]
    2: $flatten\P2.$verific$n11479$892 [2]
    3: $flatten\P2.$verific$n11479$892 [3]
    4: $flatten\P2.$verific$n11479$892 [4]
    5: $flatten\P2.$verific$n11479$892 [5]
    6: $flatten\P2.$verific$n11479$892 [6]
    7: $flatten\P2.$verific$n11479$892 [7]
    8: $flatten\P2.$verific$n11479$892 [8]
    9: $flatten\P2.$verific$n11479$892 [9]
   10: $flatten\P2.$verific$n11479$892 [10]
   11: $flatten\P2.$verific$n11479$892 [11]
   12: $flatten\P2.$verific$n11479$892 [12]
   13: $flatten\P2.$verific$n11479$892 [13]
   14: $flatten\P2.$verific$n11479$892 [14]
   15: $flatten\P2.$verific$n11479$892 [15]
   16: $flatten\P2.$verific$n11479$892 [16]
   17: $flatten\P2.$verific$n11479$892 [17]
   18: $flatten\P2.$verific$n11479$892 [18]
   19: $flatten\P2.$verific$n11479$892 [19]
   20: $flatten\P2.$verific$n11479$892 [20]
   21: $flatten\P2.$verific$n11479$892 [21]
   22: $flatten\P2.$verific$n11479$892 [22]
   23: $flatten\P2.$verific$n11479$892 [23]
   24: $flatten\P2.$verific$n11479$892 [24]
   25: $flatten\P2.$verific$n11479$892 [25]
   26: $flatten\P2.$verific$n11479$892 [26]
   27: $flatten\P2.$verific$n11479$892 [27]
   28: $flatten\P2.$verific$n11479$892 [28]
   29: $flatten\P2.$verific$n11479$892 [29]
   30: $flatten\P2.$verific$n11479$892 [30]
   31: $flatten\P2.$verific$n11479$892 [31]

  State encoding:
    0:       2'00  <RESET STATE>
    1:       2'01
    2:       2'10
    3:       2'11

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 10'1-0-000000   ->     0 0
      1:     0 10'100----100   ->     0 0
      2:     0 10'110-----10   ->     0 0
      3:     0 10'1-0------1   ->     0 0
      4:     0 10'1-1-------   ->     0 0
      5:     0 10'0---------   ->     0 0
      6:     0 10'1-0--10000   ->     1 2
      7:     0 10'1-0-100000   ->     2 1
      8:     0 10'1-0---1000   ->     3 3
      9:     0 10'110----100   ->     3 3
     10:     0 10'100-----10   ->     3 3
     11:     1 10'1-01000000   ->     0 0
     12:     1 10'1-00000000   ->     1 2
     13:     1 10'1-0--10000   ->     1 2
     14:     1 10'100----100   ->     1 2
     15:     1 10'110-----10   ->     1 2
     16:     1 10'1-0------1   ->     1 2
     17:     1 10'1-1-------   ->     1 2
     18:     1 10'0---------   ->     1 2
     19:     1 10'1-0-100000   ->     2 1
     20:     1 10'1-0---1000   ->     3 3
     21:     1 10'110----100   ->     3 3
     22:     1 10'100-----10   ->     3 3
     23:     2 10'1-01000000   ->     0 0
     24:     2 10'1-0--10000   ->     1 2
     25:     2 10'1-00000000   ->     2 1
     26:     2 10'1-0-100000   ->     2 1
     27:     2 10'100----100   ->     2 1
     28:     2 10'110-----10   ->     2 1
     29:     2 10'1-0------1   ->     2 1
     30:     2 10'1-1-------   ->     2 1
     31:     2 10'0---------   ->     2 1
     32:     2 10'1-0---1000   ->     3 3
     33:     2 10'110----100   ->     3 3
     34:     2 10'100-----10   ->     3 3
     35:     3 10'1-01000000   ->     0 0
     36:     3 10'1-0--10000   ->     1 2
     37:     3 10'1-0-100000   ->     2 1
     38:     3 10'1-00000000   ->     3 3
     39:     3 10'1-0---1000   ->     3 3
     40:     3 10'1-0----100   ->     3 3
     41:     3 10'1-0-----10   ->     3 3
     42:     3 10'1-0------1   ->     3 3
     43:     3 10'1-1-------   ->     3 3
     44:     3 10'0---------   ->     3 3

-------------------------------------

FSM `$fsm$\P3.d$2385' from module `b22':
-------------------------------------

  Information on FSM $fsm$\P3.d$2385 (\P3.d):

  Number of input signals:   10
  Number of output signals:  32
  Number of state bits:       2

  Input signals:
    0: $flatten\P3.$verific$n10195$1213
    1: $flatten\P3.$verific$n1406$1140
    2: $flatten\P3.$verific$n1441$1141
    3: $flatten\P3.$verific$n1475$1142
    4: $flatten\P3.$verific$n1476$1143
    5: $flatten\P3.$verific$n1477$1144
    6: $flatten\P3.$verific$n1478$1145
    7: $flatten\P3.$verific$n341$1240 [0]
    8: \P3.B
    9: \P3.state

  Output signals:
    0: $flatten\P3.$verific$n11328$1397 [0]
    1: $flatten\P3.$verific$n11328$1397 [1]
    2: $flatten\P3.$verific$n11328$1397 [2]
    3: $flatten\P3.$verific$n11328$1397 [3]
    4: $flatten\P3.$verific$n11328$1397 [4]
    5: $flatten\P3.$verific$n11328$1397 [5]
    6: $flatten\P3.$verific$n11328$1397 [6]
    7: $flatten\P3.$verific$n11328$1397 [7]
    8: $flatten\P3.$verific$n11328$1397 [8]
    9: $flatten\P3.$verific$n11328$1397 [9]
   10: $flatten\P3.$verific$n11328$1397 [10]
   11: $flatten\P3.$verific$n11328$1397 [11]
   12: $flatten\P3.$verific$n11328$1397 [12]
   13: $flatten\P3.$verific$n11328$1397 [13]
   14: $flatten\P3.$verific$n11328$1397 [14]
   15: $flatten\P3.$verific$n11328$1397 [15]
   16: $flatten\P3.$verific$n11328$1397 [16]
   17: $flatten\P3.$verific$n11328$1397 [17]
   18: $flatten\P3.$verific$n11328$1397 [18]
   19: $flatten\P3.$verific$n11328$1397 [19]
   20: $flatten\P3.$verific$n11328$1397 [20]
   21: $flatten\P3.$verific$n11328$1397 [21]
   22: $flatten\P3.$verific$n11328$1397 [22]
   23: $flatten\P3.$verific$n11328$1397 [23]
   24: $flatten\P3.$verific$n11328$1397 [24]
   25: $flatten\P3.$verific$n11328$1397 [25]
   26: $flatten\P3.$verific$n11328$1397 [26]
   27: $flatten\P3.$verific$n11328$1397 [27]
   28: $flatten\P3.$verific$n11328$1397 [28]
   29: $flatten\P3.$verific$n11328$1397 [29]
   30: $flatten\P3.$verific$n11328$1397 [30]
   31: $flatten\P3.$verific$n11328$1397 [31]

  State encoding:
    0:       2'00  <RESET STATE>
    1:       2'01
    2:       2'10
    3:       2'11

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 10'1-0-000000   ->     0 0
      1:     0 10'100----100   ->     0 0
      2:     0 10'110-----10   ->     0 0
      3:     0 10'1-0------1   ->     0 0
      4:     0 10'1-1-------   ->     0 0
      5:     0 10'0---------   ->     0 0
      6:     0 10'1-0--10000   ->     1 2
      7:     0 10'1-0-100000   ->     2 1
      8:     0 10'1-0---1000   ->     3 3
      9:     0 10'110----100   ->     3 3
     10:     0 10'100-----10   ->     3 3
     11:     1 10'1-01000000   ->     0 0
     12:     1 10'1-00000000   ->     1 2
     13:     1 10'1-0--10000   ->     1 2
     14:     1 10'100----100   ->     1 2
     15:     1 10'110-----10   ->     1 2
     16:     1 10'1-0------1   ->     1 2
     17:     1 10'1-1-------   ->     1 2
     18:     1 10'0---------   ->     1 2
     19:     1 10'1-0-100000   ->     2 1
     20:     1 10'1-0---1000   ->     3 3
     21:     1 10'110----100   ->     3 3
     22:     1 10'100-----10   ->     3 3
     23:     2 10'1-01000000   ->     0 0
     24:     2 10'1-0--10000   ->     1 2
     25:     2 10'1-00000000   ->     2 1
     26:     2 10'1-0-100000   ->     2 1
     27:     2 10'100----100   ->     2 1
     28:     2 10'110-----10   ->     2 1
     29:     2 10'1-0------1   ->     2 1
     30:     2 10'1-1-------   ->     2 1
     31:     2 10'0---------   ->     2 1
     32:     2 10'1-0---1000   ->     3 3
     33:     2 10'110----100   ->     3 3
     34:     2 10'100-----10   ->     3 3
     35:     3 10'1-01000000   ->     0 0
     36:     3 10'1-0--10000   ->     1 2
     37:     3 10'1-0-100000   ->     2 1
     38:     3 10'1-00000000   ->     3 3
     39:     3 10'1-0---1000   ->     3 3
     40:     3 10'1-0----100   ->     3 3
     41:     3 10'1-0-----10   ->     3 3
     42:     3 10'1-0------1   ->     3 3
     43:     3 10'1-1-------   ->     3 3
     44:     3 10'0---------   ->     3 3

-------------------------------------

yosys> fsm_map

3.46.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\P1.d$2381' from module `\b22'.
Mapping FSM `$fsm$\P2.d$2383' from module `\b22'.
Mapping FSM `$fsm$\P3.d$2385' from module `\b22'.

yosys> opt_expr

3.47. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~21 debug messages>

yosys> opt_merge -nomux

3.48. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
<suppressed ~486 debug messages>
Removed a total of 162 cells.

yosys> opt_muxtree

3.49. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~78 debug messages>

yosys> opt_reduce

3.50. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.51. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_share

3.52. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.53. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\P3.$verific$reg3_reg$b22.vhd:1019$1614 ($adff) from module b22 (D = $flatten\P3.$verific$n11034$1392, Q = \P3.reg3).
Adding EN signal on $flatten\P3.$verific$reg2_reg$b22.vhd:1019$1613 ($adff) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1688, Q = \P3.reg2).
Adding EN signal on $flatten\P3.$verific$reg1_reg$b22.vhd:1019$1612 ($adff) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1707, Q = \P3.reg1).
Adding EN signal on $flatten\P3.$verific$reg0_reg$b22.vhd:1019$1611 ($adff) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1726, Q = \P3.reg0).
Adding EN signal on $flatten\P3.$verific$addr_reg$b22.vhd:1019$1615 ($adff) from module b22 (D = $flatten\P3.$verific$n11102$1394, Q = \P3.addr).
Adding EN signal on $flatten\P3.$verific$B_reg$b22.vhd:1019$1610 ($adff) from module b22 (D = $flatten\P3.$verific$n10835$1219, Q = \P3.B).
Adding EN signal on $flatten\P2.$verific$reg3_reg$b22.vhd:1529$1094 ($adff) from module b22 (D = $flatten\P2.$verific$n11185$887 [31:3], Q = \P2.reg3 [31:3]).
Adding EN signal on $flatten\P2.$verific$reg3_reg$b22.vhd:1529$1094 ($adff) from module b22 (D = $flatten\P2.$auto$bmuxmap.cc:58:execute$1885 [2:0], Q = \P2.reg3 [2:0]).
Adding EN signal on $flatten\P2.$verific$reg2_reg$b22.vhd:1529$1093 ($adff) from module b22 (D = $flatten\P2.$auto$bmuxmap.cc:58:execute$1904, Q = \P2.reg2).
Adding EN signal on $flatten\P2.$verific$reg1_reg$b22.vhd:1529$1092 ($adff) from module b22 (D = $flatten\P2.$auto$bmuxmap.cc:58:execute$1923, Q = \P2.reg1).
Adding EN signal on $flatten\P2.$verific$reg0_reg$b22.vhd:1529$1091 ($adff) from module b22 (D = $flatten\P2.$auto$bmuxmap.cc:58:execute$1942, Q = \P2.reg0).
Adding EN signal on $flatten\P2.$verific$datao_reg$b22.vhd:1529$1098 ($adff) from module b22 (D = { $flatten\P2.$auto$bmuxmap.cc:58:execute$2048 [31:29] $flatten\P2.$auto$bmuxmap.cc:58:execute$2001 [124:96] }, Q = \P2.datao).
Adding EN signal on $flatten\P2.$verific$addr_reg$b22.vhd:1529$1095 ($adff) from module b22 (D = $flatten\P2.$verific$n11253$889, Q = \P2.addr).
Adding EN signal on $flatten\P2.$verific$B_reg$b22.vhd:1529$1090 ($adff) from module b22 (D = $flatten\P2.$verific$n10986$716, Q = \P2.B).
Adding EN signal on $flatten\P1.$verific$reg3_reg$b22.vhd:509$588 ($adff) from module b22 (D = $flatten\P1.$verific$n11178$383 [31:3], Q = \P1.reg3 [31:3]).
Adding EN signal on $flatten\P1.$verific$reg3_reg$b22.vhd:509$588 ($adff) from module b22 (D = $flatten\P1.$auto$bmuxmap.cc:58:execute$2091 [2:0], Q = \P1.reg3 [2:0]).
Adding EN signal on $flatten\P1.$verific$reg2_reg$b22.vhd:509$587 ($adff) from module b22 (D = $flatten\P1.$auto$bmuxmap.cc:58:execute$2110, Q = \P1.reg2).
Adding EN signal on $flatten\P1.$verific$reg1_reg$b22.vhd:509$586 ($adff) from module b22 (D = $flatten\P1.$auto$bmuxmap.cc:58:execute$2129, Q = \P1.reg1).
Adding EN signal on $flatten\P1.$verific$reg0_reg$b22.vhd:509$585 ($adff) from module b22 (D = $flatten\P1.$auto$bmuxmap.cc:58:execute$2148, Q = \P1.reg0).
Adding EN signal on $flatten\P1.$verific$datao_reg$b22.vhd:509$592 ($adff) from module b22 (D = { $flatten\P1.$auto$bmuxmap.cc:58:execute$2254 [31:29] $flatten\P1.$auto$bmuxmap.cc:58:execute$2207 [124:96] }, Q = \P1.datao).
Adding EN signal on $flatten\P1.$verific$addr_reg$b22.vhd:509$589 ($adff) from module b22 (D = $flatten\P1.$verific$n11246$385, Q = \P1.addr).
Adding EN signal on $flatten\P1.$verific$B_reg$b22.vhd:509$584 ($adff) from module b22 (D = $flatten\P1.$verific$n10979$213, Q = \P1.B).

yosys> opt_clean

3.54. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 69 unused cells and 225 unused wires.
<suppressed ~70 debug messages>

yosys> opt_expr

3.55. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~3 debug messages>

yosys> opt_muxtree

3.56. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~78 debug messages>

yosys> opt_reduce

3.57. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.58. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
<suppressed ~111 debug messages>
Removed a total of 37 cells.

yosys> opt_share

3.59. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.60. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 2 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 3 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 4 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 5 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 6 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 7 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 8 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 9 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 10 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 11 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 12 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 13 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 14 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 15 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 16 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 17 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 18 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 19 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 20 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 21 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 22 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 23 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 24 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 25 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 26 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 27 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 28 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 29 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 30 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 31 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 2 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 3 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 4 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 5 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 6 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 7 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 8 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 9 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 10 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 11 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 12 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 13 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 14 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 15 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 16 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 17 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 18 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 19 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 20 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 21 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 22 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 23 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 24 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 25 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 26 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 27 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 28 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 29 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 30 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 31 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 2 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 3 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 4 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 5 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 6 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 7 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 8 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 9 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 10 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 11 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 12 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 13 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 14 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 15 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 16 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 17 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 18 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 19 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 20 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 21 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 22 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 23 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 24 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 25 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 26 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 27 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 28 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 29 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 30 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 31 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.

yosys> opt_clean

3.61. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 37 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.62. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

yosys> opt_muxtree

3.63. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~78 debug messages>

yosys> opt_reduce

3.64. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.65. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_share

3.66. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.67. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.68. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..

yosys> opt_expr

3.69. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
MAX OPT ITERATION = 3

yosys> wreduce -keepdc

3.70. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 8) from port B of cell b22.$auto$opt_dff.cc:195:make_patterns_logic$3259 ($ne).
Removed top 1 bits (of 7) from port B of cell b22.$auto$opt_dff.cc:195:make_patterns_logic$3261 ($ne).
Removed top 1 bits (of 6) from port B of cell b22.$auto$opt_dff.cc:195:make_patterns_logic$3263 ($ne).
Removed top 1 bits (of 5) from port B of cell b22.$auto$opt_dff.cc:195:make_patterns_logic$3265 ($ne).
Removed top 1 bits (of 4) from port B of cell b22.$auto$opt_dff.cc:195:make_patterns_logic$3267 ($ne).
Removed top 1 bits (of 2) from port B of cell b22.$auto$opt_dff.cc:195:make_patterns_logic$3271 ($ne).
Removed top 1 bits (of 22) from port A of cell b22.$verific$sub_4$b22.vhd:1596$59 ($sub).
Removed top 2 bits (of 22) from port B of cell b22.$verific$sub_4$b22.vhd:1596$59 ($sub).
Removed top 2 bits (of 22) from port Y of cell b22.$verific$sub_4$b22.vhd:1596$59 ($sub).
Removed top 1 bits (of 21) from port A of cell b22.$verific$sub_4$b22.vhd:1596$59 ($sub).
Removed top 1 bits (of 20) from port A of cell b22.$verific$LessThan_16$b22.vhd:1601$72 ($lt).
Removed top 1 bits (of 20) from port A of cell b22.$verific$LessThan_21$b22.vhd:1602$77 ($lt).
Removed top 1 bits (of 20) from port A of cell b22.$verific$LessThan_22$b22.vhd:1602$78 ($lt).
Removed top 1 bits (of 33) from port Y of cell b22.$verific$sub_34$b22.vhd:1605$85 ($sub).
Removed top 1 bits (of 33) from port A of cell b22.$verific$sub_34$b22.vhd:1605$85 ($sub).
Removed top 1 bits (of 33) from port B of cell b22.$verific$sub_34$b22.vhd:1605$85 ($sub).
Removed top 4 bits (of 5) from port B of cell b22.$auto$opt_dff.cc:195:make_patterns_logic$3185 ($ne).
Removed top 1 bits (of 2) from port B of cell b22.$auto$fsm_map.cc:215:map_fsm$2391 ($eq).
Removed top 2 bits (of 4) from port B of cell b22.$auto$opt_dff.cc:195:make_patterns_logic$3189 ($ne).
Removed top 3 bits (of 4) from port B of cell b22.$auto$opt_dff.cc:195:make_patterns_logic$3191 ($ne).
Removed top 2 bits (of 4) from port B of cell b22.$auto$opt_dff.cc:195:make_patterns_logic$3315 ($ne).
Removed top 3 bits (of 4) from port B of cell b22.$auto$opt_dff.cc:195:make_patterns_logic$3317 ($ne).
Removed top 1 bits (of 21) from mux cell b22.$flatten\P3.$auto$bmuxmap.cc:60:execute$1627 ($mux).
Removed top 3 bits (of 29) from FF cell b22.$auto$ff.cc:262:slice$3148 ($adffe).
Removed top 1 bits (of 32) from port A of cell b22.$flatten\P3.$verific$LessThan_14$b22.vhd:597$1414 ($lt).
Removed top 1 bits (of 32) from port B of cell b22.$flatten\P3.$verific$LessThan_81$b22.vhd:662$1474 ($lt).
Removed top 3 bits (of 5) from port Y of cell b22.$flatten\P3.$verific$add_21$b22.vhd:600$1421 ($add).
Removed top 3 bits (of 5) from port A of cell b22.$flatten\P3.$verific$add_21$b22.vhd:600$1421 ($add).
Removed top 5 bits (of 8) from port Y of cell b22.$flatten\P3.$verific$add_26$b22.vhd:602$1428 ($add).
Removed top 5 bits (of 8) from port A of cell b22.$flatten\P3.$verific$add_26$b22.vhd:602$1428 ($add).
Removed top 9 bits (of 13) from port Y of cell b22.$flatten\P3.$verific$add_31$b22.vhd:604$1435 ($add).
Removed top 9 bits (of 13) from port A of cell b22.$flatten\P3.$verific$add_31$b22.vhd:604$1435 ($add).
Removed top 2 bits (of 32) from port Y of cell b22.$flatten\P3.$verific$add_331$b22.vhd:872$1521 ($add).
Removed top 2 bits (of 32) from port A of cell b22.$flatten\P3.$verific$add_331$b22.vhd:872$1521 ($add).
Removed top 2 bits (of 32) from port B of cell b22.$flatten\P3.$verific$add_331$b22.vhd:872$1521 ($add).
Removed top 8 bits (of 9) from port Y of cell b22.$flatten\P3.$verific$add_36$b22.vhd:606$1442 ($add).
Removed top 8 bits (of 9) from port A of cell b22.$flatten\P3.$verific$add_36$b22.vhd:606$1442 ($add).
Removed top 1 bits (of 3) from port Y of cell b22.$flatten\P3.$verific$add_44$b22.vhd:610$1452 ($add).
Removed top 1 bits (of 3) from port A of cell b22.$flatten\P3.$verific$add_44$b22.vhd:610$1452 ($add).
Removed top 1 bits (of 2) from port B of cell b22.$auto$opt_dff.cc:195:make_patterns_logic$3397 ($ne).
Removed top 1 bits (of 4) from port B of cell b22.$auto$opt_dff.cc:195:make_patterns_logic$3393 ($ne).
Removed top 1 bits (of 5) from port B of cell b22.$auto$opt_dff.cc:195:make_patterns_logic$3391 ($ne).
Removed top 1 bits (of 6) from port B of cell b22.$auto$opt_dff.cc:195:make_patterns_logic$3389 ($ne).
Removed top 1 bits (of 7) from port B of cell b22.$auto$opt_dff.cc:195:make_patterns_logic$3387 ($ne).
Removed top 1 bits (of 8) from port B of cell b22.$auto$opt_dff.cc:195:make_patterns_logic$3385 ($ne).
Removed top 1 bits (of 3) from port A of cell b22.$flatten\P3.$verific$equal_139$b22.vhd:735$1496 ($eq).
Removed top 1 bits (of 3) from port A of cell b22.$flatten\P3.$verific$equal_140$b22.vhd:737$1497 ($eq).
Removed top 2 bits (of 3) from port A of cell b22.$flatten\P3.$verific$equal_141$b22.vhd:738$1498 ($eq).
Removed top 31 bits (of 32) from port A of cell b22.$flatten\P3.$verific$equal_169$b22.vhd:758$1509 ($eq).
Removed top 30 bits (of 32) from port A of cell b22.$flatten\P3.$verific$equal_170$b22.vhd:759$1510 ($eq).
Removed top 30 bits (of 32) from port A of cell b22.$flatten\P3.$verific$equal_171$b22.vhd:760$1511 ($eq).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P3.$verific$mux_136$b22.vhd:730$1493 ($mux).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P3.$verific$mux_138$b22.vhd:734$1495 ($mux).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P3.$verific$mux_143$b22.vhd:740$1500 ($mux).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P3.$verific$mux_144$b22.vhd:740$1501 ($mux).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P3.$verific$mux_145$b22.vhd:740$1502 ($mux).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P3.$verific$mux_146$b22.vhd:740$1503 ($mux).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P3.$verific$mux_147$b22.vhd:740$1504 ($mux).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P3.$verific$mux_148$b22.vhd:740$1505 ($mux).
Removed top 3 bits (of 33) from port Y of cell b22.$flatten\P3.$verific$sub_297$b22.vhd:852$1519 ($sub).
Removed top 3 bits (of 33) from port A of cell b22.$flatten\P3.$verific$sub_297$b22.vhd:852$1519 ($sub).
Removed top 3 bits (of 33) from port B of cell b22.$flatten\P3.$verific$sub_297$b22.vhd:852$1519 ($sub).
Removed top 1 bits (of 30) from port A of cell b22.$flatten\P3.$verific$sub_39$b22.vhd:609$1448 ($sub).
Removed top 26 bits (of 30) from port B of cell b22.$flatten\P3.$verific$sub_39$b22.vhd:609$1448 ($sub).
Removed top 13 bits (of 33) from port A of cell b22.$flatten\P3.$verific$sub_55$b22.vhd:624$1460 ($sub).
Removed top 13 bits (of 33) from port Y of cell b22.$flatten\P3.$verific$sub_55$b22.vhd:624$1460 ($sub).
Removed top 13 bits (of 33) from port B of cell b22.$flatten\P3.$verific$sub_55$b22.vhd:624$1460 ($sub).
Removed top 13 bits (of 33) from port A of cell b22.$flatten\P3.$verific$sub_59$b22.vhd:627$1462 ($sub).
Removed top 13 bits (of 33) from port Y of cell b22.$flatten\P3.$verific$sub_59$b22.vhd:627$1462 ($sub).
Removed top 13 bits (of 33) from port B of cell b22.$flatten\P3.$verific$sub_59$b22.vhd:627$1462 ($sub).
Removed top 1 bits (of 21) from port B of cell b22.$flatten\P3.$verific$sub_634$b22.vhd:1008$1563 ($sub).
Removed top 1 bits (of 21) from port Y of cell b22.$flatten\P3.$verific$sub_634$b22.vhd:1008$1563 ($sub).
Removed top 1 bits (of 21) from port A of cell b22.$flatten\P3.$verific$sub_634$b22.vhd:1008$1563 ($sub).
Removed top 2 bits (of 33) from port B of cell b22.$flatten\P3.$verific$sub_82$b22.vhd:663$1475 ($sub).
Removed top 1 bits (of 33) from port Y of cell b22.$flatten\P3.$verific$sub_82$b22.vhd:663$1475 ($sub).
Removed top 1 bits (of 33) from port A of cell b22.$flatten\P3.$verific$sub_82$b22.vhd:663$1475 ($sub).
Removed top 1 bits (of 33) from port Y of cell b22.$flatten\P3.$verific$unary_minus_15$b22.vhd:598$1415 ($neg).
Removed top 1 bits (of 33) from port A of cell b22.$flatten\P3.$verific$unary_minus_15$b22.vhd:598$1415 ($neg).
Removed top 1 bits (of 6) from port B of cell b22.$auto$opt_dff.cc:195:make_patterns_logic$3137 ($ne).
Removed top 1 bits (of 5) from port B of cell b22.$auto$opt_dff.cc:195:make_patterns_logic$3139 ($ne).
Removed top 1 bits (of 4) from port B of cell b22.$auto$opt_dff.cc:195:make_patterns_logic$3141 ($ne).
Removed top 3 bits (of 4) from port B of cell b22.$auto$opt_dff.cc:195:make_patterns_logic$3068 ($ne).
Removed top 1 bits (of 2) from port B of cell b22.$auto$opt_dff.cc:195:make_patterns_logic$3145 ($ne).
Removed top 3 bits (of 32) from FF cell b22.$auto$ff.cc:262:slice$3044 ($adffe).
Removed top 1 bits (of 2) from port B of cell b22.$auto$fsm_map.cc:215:map_fsm$2829 ($eq).
Removed top 4 bits (of 5) from port B of cell b22.$auto$opt_dff.cc:195:make_patterns_logic$3168 ($ne).
Removed top 2 bits (of 4) from port B of cell b22.$auto$opt_dff.cc:195:make_patterns_logic$3172 ($ne).
Removed top 4 bits (of 5) from port B of cell b22.$auto$opt_dff.cc:195:make_patterns_logic$3311 ($ne).
Removed top 1 bits (of 21) from mux cell b22.$flatten\P2.$auto$bmuxmap.cc:60:execute$1843 ($mux).
Removed top 2 bits (of 32) from mux cell b22.$flatten\P2.$auto$bmuxmap.cc:60:execute$1873 ($mux).
Removed top 2 bits (of 32) from mux cell b22.$flatten\P2.$auto$bmuxmap.cc:60:execute$1879 ($mux).
Removed top 3 bits (of 29) from FF cell b22.$auto$ff.cc:262:slice$3274 ($adffe).
Removed top 1 bits (of 32) from port A of cell b22.$flatten\P2.$verific$LessThan_14$b22.vhd:1107$909 ($lt).
Removed top 1 bits (of 32) from port B of cell b22.$flatten\P2.$verific$LessThan_83$b22.vhd:1172$969 ($lt).
Removed top 3 bits (of 5) from port Y of cell b22.$flatten\P2.$verific$add_21$b22.vhd:1110$916 ($add).
Removed top 3 bits (of 5) from port A of cell b22.$flatten\P2.$verific$add_21$b22.vhd:1110$916 ($add).
Removed top 5 bits (of 8) from port Y of cell b22.$flatten\P2.$verific$add_26$b22.vhd:1112$923 ($add).
Removed top 5 bits (of 8) from port A of cell b22.$flatten\P2.$verific$add_26$b22.vhd:1112$923 ($add).
Removed top 2 bits (of 32) from port Y of cell b22.$flatten\P2.$verific$add_283$b22.vhd:1342$1012 ($add).
Removed top 2 bits (of 32) from port A of cell b22.$flatten\P2.$verific$add_283$b22.vhd:1342$1012 ($add).
Removed top 2 bits (of 32) from port B of cell b22.$flatten\P2.$verific$add_283$b22.vhd:1342$1012 ($add).
Removed top 9 bits (of 13) from port Y of cell b22.$flatten\P2.$verific$add_31$b22.vhd:1114$930 ($add).
Removed top 9 bits (of 13) from port A of cell b22.$flatten\P2.$verific$add_31$b22.vhd:1114$930 ($add).
Removed top 8 bits (of 9) from port Y of cell b22.$flatten\P2.$verific$add_36$b22.vhd:1116$937 ($add).
Removed top 8 bits (of 9) from port A of cell b22.$flatten\P2.$verific$add_36$b22.vhd:1116$937 ($add).
Removed top 25 bits (of 26) from port B of cell b22.$flatten\P2.$verific$add_39$b22.vhd:1119$943 ($add).
Removed top 1 bits (of 3) from port Y of cell b22.$flatten\P2.$verific$add_44$b22.vhd:1120$947 ($add).
Removed top 1 bits (of 3) from port A of cell b22.$flatten\P2.$verific$add_44$b22.vhd:1120$947 ($add).
Removed top 12 bits (of 32) from port A of cell b22.$flatten\P2.$verific$add_56$b22.vhd:1134$955 ($add).
Removed top 12 bits (of 32) from port Y of cell b22.$flatten\P2.$verific$add_56$b22.vhd:1134$955 ($add).
Removed top 12 bits (of 32) from port B of cell b22.$flatten\P2.$verific$add_56$b22.vhd:1134$955 ($add).
Removed top 12 bits (of 32) from port A of cell b22.$flatten\P2.$verific$add_61$b22.vhd:1137$957 ($add).
Removed top 12 bits (of 32) from port Y of cell b22.$flatten\P2.$verific$add_61$b22.vhd:1137$957 ($add).
Removed top 12 bits (of 32) from port B of cell b22.$flatten\P2.$verific$add_61$b22.vhd:1137$957 ($add).
Removed top 1 bits (of 21) from port Y of cell b22.$flatten\P2.$verific$add_664$b22.vhd:1518$1043 ($add).
Removed top 1 bits (of 3) from port A of cell b22.$flatten\P2.$verific$equal_141$b22.vhd:1245$991 ($eq).
Removed top 1 bits (of 3) from port A of cell b22.$flatten\P2.$verific$equal_142$b22.vhd:1247$992 ($eq).
Removed top 2 bits (of 3) from port A of cell b22.$flatten\P2.$verific$equal_143$b22.vhd:1248$993 ($eq).
Removed top 31 bits (of 32) from port A of cell b22.$flatten\P2.$verific$equal_177$b22.vhd:1268$1004 ($eq).
Removed top 30 bits (of 32) from port A of cell b22.$flatten\P2.$verific$equal_178$b22.vhd:1269$1005 ($eq).
Removed top 30 bits (of 32) from port A of cell b22.$flatten\P2.$verific$equal_179$b22.vhd:1270$1006 ($eq).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P2.$verific$mux_138$b22.vhd:1240$988 ($mux).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P2.$verific$mux_140$b22.vhd:1244$990 ($mux).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P2.$verific$mux_145$b22.vhd:1250$995 ($mux).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P2.$verific$mux_146$b22.vhd:1250$996 ($mux).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P2.$verific$mux_147$b22.vhd:1250$997 ($mux).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P2.$verific$mux_148$b22.vhd:1250$998 ($mux).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P2.$verific$mux_149$b22.vhd:1250$999 ($mux).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P2.$verific$mux_150$b22.vhd:1250$1000 ($mux).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P2.$verific$mux_697$b22.vhd:1526$1072 ($mux).
Removed top 32 bits (of 33) from port A of cell b22.$flatten\P2.$verific$sub_168$b22.vhd:1267$1001 ($sub).
Removed top 1 bits (of 33) from port Y of cell b22.$flatten\P2.$verific$sub_168$b22.vhd:1267$1001 ($sub).
Removed top 1 bits (of 33) from port B of cell b22.$flatten\P2.$verific$sub_168$b22.vhd:1267$1001 ($sub).
Removed top 3 bits (of 33) from port Y of cell b22.$flatten\P2.$verific$sub_365$b22.vhd:1382$1014 ($sub).
Removed top 3 bits (of 33) from port A of cell b22.$flatten\P2.$verific$sub_365$b22.vhd:1382$1014 ($sub).
Removed top 3 bits (of 33) from port B of cell b22.$flatten\P2.$verific$sub_365$b22.vhd:1382$1014 ($sub).
Removed top 2 bits (of 33) from port B of cell b22.$flatten\P2.$verific$sub_84$b22.vhd:1173$970 ($sub).
Removed top 1 bits (of 33) from port Y of cell b22.$flatten\P2.$verific$sub_84$b22.vhd:1173$970 ($sub).
Removed top 1 bits (of 33) from port A of cell b22.$flatten\P2.$verific$sub_84$b22.vhd:1173$970 ($sub).
Removed top 1 bits (of 33) from port Y of cell b22.$flatten\P2.$verific$unary_minus_15$b22.vhd:1108$910 ($neg).
Removed top 1 bits (of 33) from port A of cell b22.$flatten\P2.$verific$unary_minus_15$b22.vhd:1108$910 ($neg).
Removed top 1 bits (of 21) from mux cell b22.$auto$opt_share.cc:241:merge_operators$2337 ($mux).
Removed top 1 bits (of 2) from port B of cell b22.$auto$fsm_map.cc:215:map_fsm$2610 ($eq).
Removed top 1 bits (of 8) from port B of cell b22.$auto$opt_dff.cc:195:make_patterns_logic$3133 ($ne).
Removed top 1 bits (of 7) from port B of cell b22.$auto$opt_dff.cc:195:make_patterns_logic$3135 ($ne).
Removed top 20 bits (of 21) from mux cell b22.$flatten\P1.$auto$bmuxmap.cc:60:execute$2054 ($mux).
Removed top 2 bits (of 32) from mux cell b22.$flatten\P1.$auto$bmuxmap.cc:60:execute$2079 ($mux).
Removed top 2 bits (of 32) from mux cell b22.$flatten\P1.$auto$bmuxmap.cc:60:execute$2085 ($mux).
Removed top 1 bits (of 32) from port A of cell b22.$flatten\P1.$verific$LessThan_14$b22.vhd:87$405 ($lt).
Removed top 1 bits (of 32) from port B of cell b22.$flatten\P1.$verific$LessThan_83$b22.vhd:152$465 ($lt).
Removed top 3 bits (of 5) from port Y of cell b22.$flatten\P1.$verific$add_21$b22.vhd:90$412 ($add).
Removed top 3 bits (of 5) from port A of cell b22.$flatten\P1.$verific$add_21$b22.vhd:90$412 ($add).
Removed top 5 bits (of 8) from port Y of cell b22.$flatten\P1.$verific$add_26$b22.vhd:92$419 ($add).
Removed top 5 bits (of 8) from port A of cell b22.$flatten\P1.$verific$add_26$b22.vhd:92$419 ($add).
Removed top 2 bits (of 32) from port Y of cell b22.$flatten\P1.$verific$add_283$b22.vhd:322$508 ($add).
Removed top 2 bits (of 32) from port A of cell b22.$flatten\P1.$verific$add_283$b22.vhd:322$508 ($add).
Removed top 2 bits (of 32) from port B of cell b22.$flatten\P1.$verific$add_283$b22.vhd:322$508 ($add).
Removed top 9 bits (of 13) from port Y of cell b22.$flatten\P1.$verific$add_31$b22.vhd:94$426 ($add).
Removed top 9 bits (of 13) from port A of cell b22.$flatten\P1.$verific$add_31$b22.vhd:94$426 ($add).
Removed top 8 bits (of 9) from port Y of cell b22.$flatten\P1.$verific$add_36$b22.vhd:96$433 ($add).
Removed top 8 bits (of 9) from port A of cell b22.$flatten\P1.$verific$add_36$b22.vhd:96$433 ($add).
Removed top 25 bits (of 26) from port B of cell b22.$flatten\P1.$verific$add_39$b22.vhd:99$439 ($add).
Removed top 1 bits (of 3) from port Y of cell b22.$flatten\P1.$verific$add_44$b22.vhd:100$443 ($add).
Removed top 1 bits (of 3) from port A of cell b22.$flatten\P1.$verific$add_44$b22.vhd:100$443 ($add).
Removed top 12 bits (of 32) from port A of cell b22.$flatten\P1.$verific$add_56$b22.vhd:114$451 ($add).
Removed top 12 bits (of 32) from port Y of cell b22.$flatten\P1.$verific$add_56$b22.vhd:114$451 ($add).
Removed top 12 bits (of 32) from port B of cell b22.$flatten\P1.$verific$add_56$b22.vhd:114$451 ($add).
Removed top 12 bits (of 32) from port A of cell b22.$flatten\P1.$verific$add_61$b22.vhd:117$453 ($add).
Removed top 12 bits (of 32) from port Y of cell b22.$flatten\P1.$verific$add_61$b22.vhd:117$453 ($add).
Removed top 12 bits (of 32) from port B of cell b22.$flatten\P1.$verific$add_61$b22.vhd:117$453 ($add).
Removed top 20 bits (of 21) from port Y of cell b22.$flatten\P1.$verific$add_664$b22.vhd:498$537 ($add).
Removed top 19 bits (of 20) from port A of cell b22.$flatten\P1.$verific$add_664$b22.vhd:498$537 ($add).
Removed top 19 bits (of 20) from port B of cell b22.$flatten\P1.$verific$add_664$b22.vhd:498$537 ($add).
Removed top 1 bits (of 3) from port A of cell b22.$flatten\P1.$verific$equal_141$b22.vhd:225$487 ($eq).
Removed top 1 bits (of 3) from port A of cell b22.$flatten\P1.$verific$equal_142$b22.vhd:227$488 ($eq).
Removed top 2 bits (of 3) from port A of cell b22.$flatten\P1.$verific$equal_143$b22.vhd:228$489 ($eq).
Removed top 31 bits (of 32) from port A of cell b22.$flatten\P1.$verific$equal_177$b22.vhd:248$500 ($eq).
Removed top 30 bits (of 32) from port A of cell b22.$flatten\P1.$verific$equal_178$b22.vhd:249$501 ($eq).
Removed top 30 bits (of 32) from port A of cell b22.$flatten\P1.$verific$equal_179$b22.vhd:250$502 ($eq).
Removed top 2 bits (of 4) from port B of cell b22.$auto$opt_dff.cc:195:make_patterns_logic$3334 ($ne).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P1.$verific$mux_138$b22.vhd:220$484 ($mux).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P1.$verific$mux_140$b22.vhd:224$486 ($mux).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P1.$verific$mux_145$b22.vhd:230$491 ($mux).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P1.$verific$mux_146$b22.vhd:230$492 ($mux).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P1.$verific$mux_147$b22.vhd:230$493 ($mux).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P1.$verific$mux_148$b22.vhd:230$494 ($mux).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P1.$verific$mux_149$b22.vhd:230$495 ($mux).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P1.$verific$mux_150$b22.vhd:230$496 ($mux).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P1.$verific$mux_698$b22.vhd:506$566 ($mux).
Removed top 4 bits (of 5) from port B of cell b22.$auto$opt_dff.cc:195:make_patterns_logic$3330 ($ne).
Removed top 32 bits (of 33) from port A of cell b22.$flatten\P1.$verific$sub_168$b22.vhd:247$497 ($sub).
Removed top 1 bits (of 33) from port Y of cell b22.$flatten\P1.$verific$sub_168$b22.vhd:247$497 ($sub).
Removed top 1 bits (of 33) from port B of cell b22.$flatten\P1.$verific$sub_168$b22.vhd:247$497 ($sub).
Removed top 3 bits (of 33) from port Y of cell b22.$flatten\P1.$verific$sub_365$b22.vhd:362$510 ($sub).
Removed top 3 bits (of 33) from port A of cell b22.$flatten\P1.$verific$sub_365$b22.vhd:362$510 ($sub).
Removed top 3 bits (of 33) from port B of cell b22.$flatten\P1.$verific$sub_365$b22.vhd:362$510 ($sub).
Removed top 2 bits (of 33) from port B of cell b22.$flatten\P1.$verific$sub_84$b22.vhd:153$466 ($sub).
Removed top 1 bits (of 33) from port Y of cell b22.$flatten\P1.$verific$sub_84$b22.vhd:153$466 ($sub).
Removed top 1 bits (of 33) from port A of cell b22.$flatten\P1.$verific$sub_84$b22.vhd:153$466 ($sub).
Removed top 1 bits (of 33) from port Y of cell b22.$flatten\P1.$verific$unary_minus_15$b22.vhd:88$406 ($neg).
Removed top 1 bits (of 33) from port A of cell b22.$flatten\P1.$verific$unary_minus_15$b22.vhd:88$406 ($neg).
Removed top 1 bits (of 21) from port Y of cell b22.$verific$add_3$b22.vhd:1596$58 ($add).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P3.$verific$mux_667$b22.vhd:1016$1592 ($mux).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P2.$verific$mux_678$b22.vhd:1525$1058 ($mux).
Removed top 19 bits (of 20) from mux cell b22.$auto$opt_share.cc:241:merge_operators$2340 ($mux).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P1.$verific$mux_679$b22.vhd:505$552 ($mux).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P3.$verific$mux_648$b22.vhd:1015$1578 ($mux).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P2.$auto$bmuxmap.cc:60:execute$1886 ($mux).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P1.$auto$bmuxmap.cc:60:execute$2092 ($mux).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P3.$auto$bmuxmap.cc:60:execute$1670 ($mux).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P2.$auto$bmuxmap.cc:60:execute$1883 ($mux).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P2.$auto$bmuxmap.cc:60:execute$1884 ($mux).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P1.$auto$bmuxmap.cc:60:execute$2089 ($mux).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P1.$auto$bmuxmap.cc:60:execute$2090 ($mux).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P3.$auto$bmuxmap.cc:60:execute$1667 ($mux).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P3.$auto$bmuxmap.cc:60:execute$1668 ($mux).
Removed top 1 bits (of 30) from mux cell b22.$flatten\P2.$auto$bmuxmap.cc:60:execute$1873 ($mux).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P2.$auto$bmuxmap.cc:60:execute$1878 ($mux).
Removed top 1 bits (of 30) from mux cell b22.$flatten\P2.$auto$bmuxmap.cc:60:execute$1879 ($mux).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P2.$auto$bmuxmap.cc:60:execute$1881 ($mux).
Removed top 1 bits (of 30) from mux cell b22.$flatten\P1.$auto$bmuxmap.cc:60:execute$2079 ($mux).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P1.$auto$bmuxmap.cc:60:execute$2084 ($mux).
Removed top 1 bits (of 30) from mux cell b22.$flatten\P1.$auto$bmuxmap.cc:60:execute$2085 ($mux).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P1.$auto$bmuxmap.cc:60:execute$2087 ($mux).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P3.$auto$bmuxmap.cc:60:execute$1662 ($mux).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P3.$auto$bmuxmap.cc:60:execute$1663 ($mux).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P3.$auto$bmuxmap.cc:60:execute$1664 ($mux).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P3.$auto$bmuxmap.cc:60:execute$1665 ($mux).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P2.$auto$bmuxmap.cc:60:execute$1869 ($mux).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P2.$auto$bmuxmap.cc:60:execute$1875 ($mux).
Removed top 2 bits (of 155) from mux cell b22.$flatten\P2.$verific$select_752$b22.vhd:1510$1030 ($pmux).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P1.$auto$bmuxmap.cc:60:execute$2075 ($mux).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P1.$auto$bmuxmap.cc:60:execute$2081 ($mux).
Removed top 2 bits (of 155) from mux cell b22.$flatten\P1.$verific$select_752$b22.vhd:490$526 ($pmux).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P3.$auto$bmuxmap.cc:60:execute$1653 ($mux).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P3.$auto$bmuxmap.cc:60:execute$1657 ($mux).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P3.$auto$bmuxmap.cc:60:execute$1658 ($mux).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P3.$auto$bmuxmap.cc:60:execute$1659 ($mux).
Removed top 2 bits (of 31) from mux cell b22.$flatten\P3.$verific$select_497$b22.vhd:957$1530 ($pmux).
Removed top 2 bits (of 31) from mux cell b22.$flatten\P3.$verific$select_537$b22.vhd:977$1536 ($pmux).
Removed top 2 bits (of 31) from mux cell b22.$flatten\P3.$verific$select_620$b22.vhd:1000$1550 ($pmux).
Removed top 2 bits (of 94) from mux cell b22.$flatten\P3.$verific$select_720$b22.vhd:877$1526 ($pmux).
Removed top 1 bits (of 21) from wire b22.$auto$opt_share.cc:219:merge_operators$2321.
Removed top 1 bits (of 21) from wire b22.$auto$opt_share.cc:219:merge_operators$2336.
Removed top 20 bits (of 21) from wire b22.$auto$opt_share.cc:219:merge_operators$2339.
Removed top 1 bits (of 21) from wire b22.$auto$rtlil.cc:2466:Mux$2338.
Removed top 19 bits (of 20) from wire b22.$auto$rtlil.cc:2466:Mux$2341.
Removed top 22 bits (of 42) from wire b22.$flatten\P1.$auto$bmuxmap.cc:58:execute$2050.
Removed top 20 bits (of 21) from wire b22.$flatten\P1.$auto$bmuxmap.cc:58:execute$2053.
Removed top 2 bits (of 256) from wire b22.$flatten\P1.$auto$bmuxmap.cc:58:execute$2074.
Removed top 3 bits (of 128) from wire b22.$flatten\P1.$auto$bmuxmap.cc:58:execute$2083.
Removed top 3 bits (of 64) from wire b22.$flatten\P1.$auto$bmuxmap.cc:58:execute$2088.
Removed top 3 bits (of 32) from wire b22.$flatten\P1.$auto$bmuxmap.cc:58:execute$2091.
Removed top 2 bits (of 8) from wire b22.$flatten\P1.$auto$bmuxmap.cc:58:execute$2169.
Removed top 1 bits (of 126) from wire b22.$flatten\P1.$auto$bmuxmap.cc:58:execute$2207.
Removed top 1 bits (of 2) from wire b22.$flatten\P1.$auto$bmuxmap.cc:58:execute$2236.
Removed top 2 bits (of 31) from wire b22.$flatten\P1.$verific$n10126$352.
Removed top 3 bits (of 32) from wire b22.$flatten\P1.$verific$n10755$374.
Removed top 3 bits (of 32) from wire b22.$flatten\P1.$verific$n11178$383.
Removed top 30 bits (of 32) from wire b22.$flatten\P1.$verific$n11472$388.
Removed top 30 bits (of 32) from wire b22.$flatten\P1.$verific$n1407$256.
Removed top 30 bits (of 32) from wire b22.$flatten\P1.$verific$n1441$257.
Removed top 30 bits (of 32) from wire b22.$flatten\P1.$verific$n1478$258.
Removed top 30 bits (of 32) from wire b22.$flatten\P1.$verific$n1511$259.
Removed top 30 bits (of 32) from wire b22.$flatten\P1.$verific$n1544$260.
Removed top 30 bits (of 32) from wire b22.$flatten\P1.$verific$n1577$261.
Removed top 30 bits (of 32) from wire b22.$flatten\P1.$verific$n1610$262.
Removed top 30 bits (of 32) from wire b22.$flatten\P1.$verific$n1643$263.
Removed top 1 bits (of 33) from wire b22.$flatten\P1.$verific$n184$225.
Removed top 1 bits (of 33) from wire b22.$flatten\P1.$verific$n1987$269.
Removed top 3 bits (of 5) from wire b22.$flatten\P1.$verific$n288$228.
Removed top 5 bits (of 8) from wire b22.$flatten\P1.$verific$n301$230.
Removed top 9 bits (of 13) from wire b22.$flatten\P1.$verific$n318$232.
Removed top 8 bits (of 9) from wire b22.$flatten\P1.$verific$n341$234.
Removed top 2 bits (of 32) from wire b22.$flatten\P1.$verific$n4241$302.
Removed top 1 bits (of 3) from wire b22.$flatten\P1.$verific$n436$238.
Removed top 3 bits (of 33) from wire b22.$flatten\P1.$verific$n5666$316.
Removed top 1 bits (of 33) from wire b22.$flatten\P1.$verific$n933$253.
Removed top 22 bits (of 42) from wire b22.$flatten\P2.$auto$bmuxmap.cc:58:execute$1839.
Removed top 1 bits (of 21) from wire b22.$flatten\P2.$auto$bmuxmap.cc:58:execute$1842.
Removed top 2 bits (of 256) from wire b22.$flatten\P2.$auto$bmuxmap.cc:58:execute$1868.
Removed top 3 bits (of 128) from wire b22.$flatten\P2.$auto$bmuxmap.cc:58:execute$1877.
Removed top 2 bits (of 8) from wire b22.$flatten\P2.$auto$bmuxmap.cc:58:execute$1963.
Removed top 1 bits (of 126) from wire b22.$flatten\P2.$auto$bmuxmap.cc:58:execute$2001.
Removed top 1 bits (of 2) from wire b22.$flatten\P2.$auto$bmuxmap.cc:58:execute$2030.
Removed top 2 bits (of 31) from wire b22.$flatten\P2.$verific$n10126$855.
Removed top 3 bits (of 32) from wire b22.$flatten\P2.$verific$n10762$878.
Removed top 3 bits (of 32) from wire b22.$flatten\P2.$verific$n11185$887.
Removed top 30 bits (of 32) from wire b22.$flatten\P2.$verific$n11479$892.
Removed top 30 bits (of 32) from wire b22.$flatten\P2.$verific$n1407$759.
Removed top 30 bits (of 32) from wire b22.$flatten\P2.$verific$n1441$760.
Removed top 30 bits (of 32) from wire b22.$flatten\P2.$verific$n1478$761.
Removed top 30 bits (of 32) from wire b22.$flatten\P2.$verific$n1511$762.
Removed top 30 bits (of 32) from wire b22.$flatten\P2.$verific$n1544$763.
Removed top 1 bits (of 33) from wire b22.$flatten\P2.$verific$n184$728.
Removed top 1 bits (of 33) from wire b22.$flatten\P2.$verific$n1987$772.
Removed top 3 bits (of 5) from wire b22.$flatten\P2.$verific$n288$731.
Removed top 5 bits (of 8) from wire b22.$flatten\P2.$verific$n301$733.
Removed top 9 bits (of 13) from wire b22.$flatten\P2.$verific$n318$735.
Removed top 8 bits (of 9) from wire b22.$flatten\P2.$verific$n341$737.
Removed top 2 bits (of 32) from wire b22.$flatten\P2.$verific$n4241$805.
Removed top 1 bits (of 3) from wire b22.$flatten\P2.$verific$n436$741.
Removed top 3 bits (of 33) from wire b22.$flatten\P2.$verific$n5666$819.
Removed top 1 bits (of 33) from wire b22.$flatten\P2.$verific$n933$756.
Removed top 1 bits (of 42) from wire b22.$flatten\P3.$auto$bmuxmap.cc:58:execute$1623.
Removed top 1 bits (of 21) from wire b22.$flatten\P3.$auto$bmuxmap.cc:58:execute$1626.
Removed top 3 bits (of 128) from wire b22.$flatten\P3.$auto$bmuxmap.cc:58:execute$1661.
Removed top 3 bits (of 64) from wire b22.$flatten\P3.$auto$bmuxmap.cc:58:execute$1666.
Removed top 2 bits (of 8) from wire b22.$flatten\P3.$auto$bmuxmap.cc:58:execute$1747.
Removed top 1 bits (of 2) from wire b22.$flatten\P3.$auto$bmuxmap.cc:58:execute$1819.
Removed top 3 bits (of 32) from wire b22.$flatten\P3.$verific$n10611$1383.
Removed top 3 bits (of 32) from wire b22.$flatten\P3.$verific$n11034$1392.
Removed top 30 bits (of 32) from wire b22.$flatten\P3.$verific$n11328$1397.
Removed top 30 bits (of 32) from wire b22.$flatten\P3.$verific$n1408$1262.
Removed top 30 bits (of 32) from wire b22.$flatten\P3.$verific$n1442$1263.
Removed top 30 bits (of 32) from wire b22.$flatten\P3.$verific$n1479$1264.
Removed top 30 bits (of 32) from wire b22.$flatten\P3.$verific$n1512$1265.
Removed top 30 bits (of 32) from wire b22.$flatten\P3.$verific$n1545$1266.
Removed top 30 bits (of 32) from wire b22.$flatten\P3.$verific$n1578$1267.
Removed top 1 bits (of 33) from wire b22.$flatten\P3.$verific$n184$1231.
Removed top 3 bits (of 5) from wire b22.$flatten\P3.$verific$n288$1234.
Removed top 5 bits (of 8) from wire b22.$flatten\P3.$verific$n301$1236.
Removed top 9 bits (of 13) from wire b22.$flatten\P3.$verific$n318$1238.
Removed top 8 bits (of 9) from wire b22.$flatten\P3.$verific$n341$1240.
Removed top 1 bits (of 3) from wire b22.$flatten\P3.$verific$n439$1244.
Removed top 3 bits (of 33) from wire b22.$flatten\P3.$verific$n4798$1306.
Removed top 2 bits (of 32) from wire b22.$flatten\P3.$verific$n5506$1316.
Removed top 2 bits (of 31) from wire b22.$flatten\P3.$verific$n8711$1341.
Removed top 1 bits (of 33) from wire b22.$flatten\P3.$verific$n934$1259.
Removed top 2 bits (of 31) from wire b22.$flatten\P3.$verific$n9424$1349.
Removed top 2 bits (of 31) from wire b22.$flatten\P3.$verific$n9975$1360.
Removed top 1 bits (of 33) from wire b22.$verific$n459$29.

yosys> peepopt

3.71. Executing PEEPOPT pass (run peephole optimizers).

yosys> opt_clean

3.72. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 128 unused wires.
<suppressed ~1 debug messages>

yosys> bmuxmap

3.73. Executing BMUXMAP pass.

yosys> demuxmap

3.74. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> alumacc

3.75. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module b22:
  creating $macc model for $flatten\P1.$verific$add_21$b22.vhd:90$412 ($add).
  creating $macc model for $flatten\P1.$verific$add_26$b22.vhd:92$419 ($add).
  creating $macc model for $flatten\P1.$verific$add_283$b22.vhd:322$508 ($add).
  creating $macc model for $flatten\P1.$verific$add_31$b22.vhd:94$426 ($add).
  creating $macc model for $flatten\P1.$verific$add_36$b22.vhd:96$433 ($add).
  creating $macc model for $flatten\P1.$verific$add_39$b22.vhd:99$439 ($add).
  creating $macc model for $flatten\P1.$verific$add_44$b22.vhd:100$443 ($add).
  creating $macc model for $flatten\P1.$verific$add_56$b22.vhd:114$451 ($add).
  creating $macc model for $flatten\P1.$verific$add_570$b22.vhd:470$515 ($add).
  creating $macc model for $flatten\P1.$verific$add_61$b22.vhd:117$453 ($add).
  creating $macc model for $flatten\P1.$verific$add_664$b22.vhd:498$537 ($add).
  creating $macc model for $flatten\P1.$verific$mult_667$b22.vhd:501$541 ($mul).
  creating $macc model for $flatten\P1.$verific$sub_168$b22.vhd:247$497 ($sub).
  creating $macc model for $flatten\P1.$verific$sub_365$b22.vhd:362$510 ($sub).
  creating $macc model for $flatten\P1.$verific$sub_84$b22.vhd:153$466 ($sub).
  creating $macc model for $flatten\P1.$verific$unary_minus_15$b22.vhd:88$406 ($neg).
  creating $macc model for $flatten\P2.$verific$add_21$b22.vhd:1110$916 ($add).
  creating $macc model for $flatten\P2.$verific$add_26$b22.vhd:1112$923 ($add).
  creating $macc model for $flatten\P2.$verific$add_283$b22.vhd:1342$1012 ($add).
  creating $macc model for $flatten\P2.$verific$add_31$b22.vhd:1114$930 ($add).
  creating $macc model for $flatten\P2.$verific$add_36$b22.vhd:1116$937 ($add).
  creating $macc model for $flatten\P2.$verific$add_39$b22.vhd:1119$943 ($add).
  creating $macc model for $flatten\P2.$verific$add_44$b22.vhd:1120$947 ($add).
  creating $macc model for $flatten\P2.$verific$add_56$b22.vhd:1134$955 ($add).
  creating $macc model for $flatten\P2.$verific$add_570$b22.vhd:1490$1019 ($add).
  creating $macc model for $flatten\P2.$verific$add_61$b22.vhd:1137$957 ($add).
  creating $macc model for $flatten\P2.$verific$add_664$b22.vhd:1518$1043 ($add).
  creating $macc model for $flatten\P2.$verific$sub_168$b22.vhd:1267$1001 ($sub).
  creating $macc model for $flatten\P2.$verific$sub_365$b22.vhd:1382$1014 ($sub).
  creating $macc model for $flatten\P2.$verific$sub_84$b22.vhd:1173$970 ($sub).
  creating $macc model for $flatten\P2.$verific$unary_minus_15$b22.vhd:1108$910 ($neg).
  creating $macc model for $flatten\P3.$verific$add_21$b22.vhd:600$1421 ($add).
  creating $macc model for $flatten\P3.$verific$add_26$b22.vhd:602$1428 ($add).
  creating $macc model for $flatten\P3.$verific$add_31$b22.vhd:604$1435 ($add).
  creating $macc model for $flatten\P3.$verific$add_331$b22.vhd:872$1521 ($add).
  creating $macc model for $flatten\P3.$verific$add_36$b22.vhd:606$1442 ($add).
  creating $macc model for $flatten\P3.$verific$add_44$b22.vhd:610$1452 ($add).
  creating $macc model for $flatten\P3.$verific$add_540$b22.vhd:980$1538 ($add).
  creating $macc model for $flatten\P3.$verific$sub_297$b22.vhd:852$1519 ($sub).
  creating $macc model for $flatten\P3.$verific$sub_39$b22.vhd:609$1448 ($sub).
  creating $macc model for $flatten\P3.$verific$sub_55$b22.vhd:624$1460 ($sub).
  creating $macc model for $flatten\P3.$verific$sub_59$b22.vhd:627$1462 ($sub).
  creating $macc model for $flatten\P3.$verific$sub_634$b22.vhd:1008$1563 ($sub).
  creating $macc model for $flatten\P3.$verific$sub_82$b22.vhd:663$1475 ($sub).
  creating $macc model for $flatten\P3.$verific$unary_minus_15$b22.vhd:598$1415 ($neg).
  creating $macc model for $verific$add_3$b22.vhd:1596$58 ($add).
  creating $macc model for $verific$add_31$b22.vhd:1603$84 ($add).
  creating $macc model for $verific$add_39$b22.vhd:1608$88 ($add).
  creating $macc model for $verific$sub_34$b22.vhd:1605$85 ($sub).
  creating $macc model for $verific$sub_4$b22.vhd:1596$59 ($sub).
  merging $macc model for $verific$add_3$b22.vhd:1596$58 into $verific$sub_4$b22.vhd:1596$59.
  creating $alu model for $macc $verific$sub_34$b22.vhd:1605$85.
  creating $alu model for $macc $verific$add_39$b22.vhd:1608$88.
  creating $alu model for $macc $verific$add_31$b22.vhd:1603$84.
  creating $alu model for $macc $flatten\P3.$verific$unary_minus_15$b22.vhd:598$1415.
  creating $alu model for $macc $flatten\P3.$verific$sub_82$b22.vhd:663$1475.
  creating $alu model for $macc $flatten\P3.$verific$sub_634$b22.vhd:1008$1563.
  creating $alu model for $macc $flatten\P3.$verific$sub_59$b22.vhd:627$1462.
  creating $alu model for $macc $flatten\P3.$verific$sub_55$b22.vhd:624$1460.
  creating $alu model for $macc $flatten\P3.$verific$sub_39$b22.vhd:609$1448.
  creating $alu model for $macc $flatten\P3.$verific$sub_297$b22.vhd:852$1519.
  creating $alu model for $macc $flatten\P3.$verific$add_540$b22.vhd:980$1538.
  creating $alu model for $macc $flatten\P3.$verific$add_44$b22.vhd:610$1452.
  creating $alu model for $macc $flatten\P3.$verific$add_36$b22.vhd:606$1442.
  creating $alu model for $macc $flatten\P3.$verific$add_331$b22.vhd:872$1521.
  creating $alu model for $macc $flatten\P3.$verific$add_31$b22.vhd:604$1435.
  creating $alu model for $macc $flatten\P3.$verific$add_26$b22.vhd:602$1428.
  creating $alu model for $macc $flatten\P3.$verific$add_21$b22.vhd:600$1421.
  creating $alu model for $macc $flatten\P2.$verific$unary_minus_15$b22.vhd:1108$910.
  creating $alu model for $macc $flatten\P2.$verific$sub_84$b22.vhd:1173$970.
  creating $alu model for $macc $flatten\P2.$verific$sub_365$b22.vhd:1382$1014.
  creating $alu model for $macc $flatten\P2.$verific$sub_168$b22.vhd:1267$1001.
  creating $alu model for $macc $flatten\P2.$verific$add_664$b22.vhd:1518$1043.
  creating $alu model for $macc $flatten\P2.$verific$add_61$b22.vhd:1137$957.
  creating $alu model for $macc $flatten\P2.$verific$add_570$b22.vhd:1490$1019.
  creating $alu model for $macc $flatten\P2.$verific$add_56$b22.vhd:1134$955.
  creating $alu model for $macc $flatten\P2.$verific$add_44$b22.vhd:1120$947.
  creating $alu model for $macc $flatten\P2.$verific$add_39$b22.vhd:1119$943.
  creating $alu model for $macc $flatten\P2.$verific$add_36$b22.vhd:1116$937.
  creating $alu model for $macc $flatten\P2.$verific$add_31$b22.vhd:1114$930.
  creating $alu model for $macc $flatten\P2.$verific$add_283$b22.vhd:1342$1012.
  creating $alu model for $macc $flatten\P2.$verific$add_26$b22.vhd:1112$923.
  creating $alu model for $macc $flatten\P2.$verific$add_21$b22.vhd:1110$916.
  creating $alu model for $macc $flatten\P1.$verific$unary_minus_15$b22.vhd:88$406.
  creating $alu model for $macc $flatten\P1.$verific$sub_84$b22.vhd:153$466.
  creating $alu model for $macc $flatten\P1.$verific$sub_365$b22.vhd:362$510.
  creating $alu model for $macc $flatten\P1.$verific$sub_168$b22.vhd:247$497.
  creating $alu model for $macc $flatten\P1.$verific$add_664$b22.vhd:498$537.
  creating $alu model for $macc $flatten\P1.$verific$add_61$b22.vhd:117$453.
  creating $alu model for $macc $flatten\P1.$verific$add_570$b22.vhd:470$515.
  creating $alu model for $macc $flatten\P1.$verific$add_56$b22.vhd:114$451.
  creating $alu model for $macc $flatten\P1.$verific$add_44$b22.vhd:100$443.
  creating $alu model for $macc $flatten\P1.$verific$add_39$b22.vhd:99$439.
  creating $alu model for $macc $flatten\P1.$verific$add_36$b22.vhd:96$433.
  creating $alu model for $macc $flatten\P1.$verific$add_31$b22.vhd:94$426.
  creating $alu model for $macc $flatten\P1.$verific$add_283$b22.vhd:322$508.
  creating $alu model for $macc $flatten\P1.$verific$add_26$b22.vhd:92$419.
  creating $alu model for $macc $flatten\P1.$verific$add_21$b22.vhd:90$412.
  creating $macc cell for $verific$sub_4$b22.vhd:1596$59: $auto$alumacc.cc:365:replace_macc$3493
  creating $macc cell for $flatten\P1.$verific$mult_667$b22.vhd:501$541: $auto$alumacc.cc:365:replace_macc$3494
  creating $alu model for $flatten\P1.$verific$LessThan_14$b22.vhd:87$405 ($lt): new $alu
  creating $alu model for $flatten\P1.$verific$LessThan_68$b22.vhd:122$459 ($lt): new $alu
  creating $alu model for $flatten\P1.$verific$LessThan_78$b22.vhd:142$463 ($lt): merged with $flatten\P1.$verific$LessThan_68$b22.vhd:122$459.
  creating $alu model for $flatten\P1.$verific$LessThan_83$b22.vhd:152$465 ($lt): new $alu
  creating $alu model for $flatten\P1.$verific$LessThan_87$b22.vhd:155$470 ($lt): new $alu
  creating $alu model for $flatten\P2.$verific$LessThan_14$b22.vhd:1107$909 ($lt): new $alu
  creating $alu model for $flatten\P2.$verific$LessThan_68$b22.vhd:1142$963 ($lt): new $alu
  creating $alu model for $flatten\P2.$verific$LessThan_78$b22.vhd:1162$967 ($lt): merged with $flatten\P2.$verific$LessThan_68$b22.vhd:1142$963.
  creating $alu model for $flatten\P2.$verific$LessThan_83$b22.vhd:1172$969 ($lt): new $alu
  creating $alu model for $flatten\P2.$verific$LessThan_87$b22.vhd:1175$974 ($lt): new $alu
  creating $alu model for $flatten\P3.$verific$LessThan_14$b22.vhd:597$1414 ($lt): new $alu
  creating $alu model for $flatten\P3.$verific$LessThan_66$b22.vhd:632$1468 ($lt): new $alu
  creating $alu model for $flatten\P3.$verific$LessThan_76$b22.vhd:652$1472 ($lt): merged with $flatten\P3.$verific$LessThan_66$b22.vhd:632$1468.
  creating $alu model for $flatten\P3.$verific$LessThan_81$b22.vhd:662$1474 ($lt): new $alu
  creating $alu model for $flatten\P3.$verific$LessThan_85$b22.vhd:665$1479 ($lt): new $alu
  creating $alu model for $verific$LessThan_14$b22.vhd:1601$70 ($lt): new $alu
  creating $alu model for $verific$LessThan_15$b22.vhd:1601$71 ($lt): new $alu
  creating $alu model for $verific$LessThan_16$b22.vhd:1601$72 ($lt): new $alu
  creating $alu model for $verific$LessThan_21$b22.vhd:1602$77 ($lt): new $alu
  creating $alu model for $verific$LessThan_22$b22.vhd:1602$78 ($lt): new $alu
  creating $alu model for $verific$LessThan_23$b22.vhd:1602$79 ($lt): new $alu
  creating $alu cell for $verific$LessThan_23$b22.vhd:1602$79: $auto$alumacc.cc:485:replace_alu$3513
  creating $alu cell for $verific$LessThan_22$b22.vhd:1602$78: $auto$alumacc.cc:485:replace_alu$3518
  creating $alu cell for $verific$LessThan_21$b22.vhd:1602$77: $auto$alumacc.cc:485:replace_alu$3523
  creating $alu cell for $verific$LessThan_16$b22.vhd:1601$72: $auto$alumacc.cc:485:replace_alu$3528
  creating $alu cell for $verific$LessThan_15$b22.vhd:1601$71: $auto$alumacc.cc:485:replace_alu$3533
  creating $alu cell for $verific$LessThan_14$b22.vhd:1601$70: $auto$alumacc.cc:485:replace_alu$3538
  creating $alu cell for $flatten\P3.$verific$LessThan_85$b22.vhd:665$1479: $auto$alumacc.cc:485:replace_alu$3543
  creating $alu cell for $flatten\P3.$verific$LessThan_81$b22.vhd:662$1474: $auto$alumacc.cc:485:replace_alu$3548
  creating $alu cell for $flatten\P3.$verific$LessThan_66$b22.vhd:632$1468, $flatten\P3.$verific$LessThan_76$b22.vhd:652$1472: $auto$alumacc.cc:485:replace_alu$3559
  creating $alu cell for $flatten\P3.$verific$LessThan_14$b22.vhd:597$1414: $auto$alumacc.cc:485:replace_alu$3570
  creating $alu cell for $flatten\P2.$verific$LessThan_87$b22.vhd:1175$974: $auto$alumacc.cc:485:replace_alu$3575
  creating $alu cell for $flatten\P2.$verific$LessThan_83$b22.vhd:1172$969: $auto$alumacc.cc:485:replace_alu$3586
  creating $alu cell for $flatten\P2.$verific$LessThan_68$b22.vhd:1142$963, $flatten\P2.$verific$LessThan_78$b22.vhd:1162$967: $auto$alumacc.cc:485:replace_alu$3597
  creating $alu cell for $flatten\P2.$verific$LessThan_14$b22.vhd:1107$909: $auto$alumacc.cc:485:replace_alu$3608
  creating $alu cell for $flatten\P1.$verific$LessThan_87$b22.vhd:155$470: $auto$alumacc.cc:485:replace_alu$3613
  creating $alu cell for $flatten\P1.$verific$LessThan_83$b22.vhd:152$465: $auto$alumacc.cc:485:replace_alu$3624
  creating $alu cell for $flatten\P1.$verific$LessThan_68$b22.vhd:122$459, $flatten\P1.$verific$LessThan_78$b22.vhd:142$463: $auto$alumacc.cc:485:replace_alu$3635
  creating $alu cell for $flatten\P1.$verific$LessThan_14$b22.vhd:87$405: $auto$alumacc.cc:485:replace_alu$3646
  creating $alu cell for $flatten\P1.$verific$add_21$b22.vhd:90$412: $auto$alumacc.cc:485:replace_alu$3651
  creating $alu cell for $flatten\P1.$verific$add_26$b22.vhd:92$419: $auto$alumacc.cc:485:replace_alu$3654
  creating $alu cell for $flatten\P1.$verific$add_283$b22.vhd:322$508: $auto$alumacc.cc:485:replace_alu$3657
  creating $alu cell for $flatten\P1.$verific$add_31$b22.vhd:94$426: $auto$alumacc.cc:485:replace_alu$3660
  creating $alu cell for $flatten\P1.$verific$add_36$b22.vhd:96$433: $auto$alumacc.cc:485:replace_alu$3663
  creating $alu cell for $flatten\P1.$verific$add_39$b22.vhd:99$439: $auto$alumacc.cc:485:replace_alu$3666
  creating $alu cell for $flatten\P1.$verific$add_44$b22.vhd:100$443: $auto$alumacc.cc:485:replace_alu$3669
  creating $alu cell for $flatten\P1.$verific$add_56$b22.vhd:114$451: $auto$alumacc.cc:485:replace_alu$3672
  creating $alu cell for $flatten\P1.$verific$add_570$b22.vhd:470$515: $auto$alumacc.cc:485:replace_alu$3675
  creating $alu cell for $flatten\P1.$verific$add_61$b22.vhd:117$453: $auto$alumacc.cc:485:replace_alu$3678
  creating $alu cell for $flatten\P1.$verific$add_664$b22.vhd:498$537: $auto$alumacc.cc:485:replace_alu$3681
  creating $alu cell for $flatten\P1.$verific$sub_168$b22.vhd:247$497: $auto$alumacc.cc:485:replace_alu$3684
  creating $alu cell for $flatten\P1.$verific$sub_365$b22.vhd:362$510: $auto$alumacc.cc:485:replace_alu$3687
  creating $alu cell for $flatten\P1.$verific$sub_84$b22.vhd:153$466: $auto$alumacc.cc:485:replace_alu$3690
  creating $alu cell for $flatten\P1.$verific$unary_minus_15$b22.vhd:88$406: $auto$alumacc.cc:485:replace_alu$3693
  creating $alu cell for $flatten\P2.$verific$add_21$b22.vhd:1110$916: $auto$alumacc.cc:485:replace_alu$3696
  creating $alu cell for $flatten\P2.$verific$add_26$b22.vhd:1112$923: $auto$alumacc.cc:485:replace_alu$3699
  creating $alu cell for $flatten\P2.$verific$add_283$b22.vhd:1342$1012: $auto$alumacc.cc:485:replace_alu$3702
  creating $alu cell for $flatten\P2.$verific$add_31$b22.vhd:1114$930: $auto$alumacc.cc:485:replace_alu$3705
  creating $alu cell for $flatten\P2.$verific$add_36$b22.vhd:1116$937: $auto$alumacc.cc:485:replace_alu$3708
  creating $alu cell for $flatten\P2.$verific$add_39$b22.vhd:1119$943: $auto$alumacc.cc:485:replace_alu$3711
  creating $alu cell for $flatten\P2.$verific$add_44$b22.vhd:1120$947: $auto$alumacc.cc:485:replace_alu$3714
  creating $alu cell for $flatten\P2.$verific$add_56$b22.vhd:1134$955: $auto$alumacc.cc:485:replace_alu$3717
  creating $alu cell for $flatten\P2.$verific$add_570$b22.vhd:1490$1019: $auto$alumacc.cc:485:replace_alu$3720
  creating $alu cell for $flatten\P2.$verific$add_61$b22.vhd:1137$957: $auto$alumacc.cc:485:replace_alu$3723
  creating $alu cell for $flatten\P2.$verific$add_664$b22.vhd:1518$1043: $auto$alumacc.cc:485:replace_alu$3726
  creating $alu cell for $flatten\P2.$verific$sub_168$b22.vhd:1267$1001: $auto$alumacc.cc:485:replace_alu$3729
  creating $alu cell for $flatten\P2.$verific$sub_365$b22.vhd:1382$1014: $auto$alumacc.cc:485:replace_alu$3732
  creating $alu cell for $flatten\P2.$verific$sub_84$b22.vhd:1173$970: $auto$alumacc.cc:485:replace_alu$3735
  creating $alu cell for $flatten\P2.$verific$unary_minus_15$b22.vhd:1108$910: $auto$alumacc.cc:485:replace_alu$3738
  creating $alu cell for $flatten\P3.$verific$add_21$b22.vhd:600$1421: $auto$alumacc.cc:485:replace_alu$3741
  creating $alu cell for $flatten\P3.$verific$add_26$b22.vhd:602$1428: $auto$alumacc.cc:485:replace_alu$3744
  creating $alu cell for $flatten\P3.$verific$add_31$b22.vhd:604$1435: $auto$alumacc.cc:485:replace_alu$3747
  creating $alu cell for $flatten\P3.$verific$add_36$b22.vhd:606$1442: $auto$alumacc.cc:485:replace_alu$3750
  creating $alu cell for $flatten\P3.$verific$add_44$b22.vhd:610$1452: $auto$alumacc.cc:485:replace_alu$3753
  creating $alu cell for $flatten\P3.$verific$add_540$b22.vhd:980$1538: $auto$alumacc.cc:485:replace_alu$3756
  creating $alu cell for $flatten\P3.$verific$add_331$b22.vhd:872$1521: $auto$alumacc.cc:485:replace_alu$3759
  creating $alu cell for $flatten\P3.$verific$sub_297$b22.vhd:852$1519: $auto$alumacc.cc:485:replace_alu$3762
  creating $alu cell for $flatten\P3.$verific$sub_39$b22.vhd:609$1448: $auto$alumacc.cc:485:replace_alu$3765
  creating $alu cell for $flatten\P3.$verific$sub_55$b22.vhd:624$1460: $auto$alumacc.cc:485:replace_alu$3768
  creating $alu cell for $flatten\P3.$verific$sub_59$b22.vhd:627$1462: $auto$alumacc.cc:485:replace_alu$3771
  creating $alu cell for $flatten\P3.$verific$sub_634$b22.vhd:1008$1563: $auto$alumacc.cc:485:replace_alu$3774
  creating $alu cell for $flatten\P3.$verific$sub_82$b22.vhd:663$1475: $auto$alumacc.cc:485:replace_alu$3777
  creating $alu cell for $flatten\P3.$verific$unary_minus_15$b22.vhd:598$1415: $auto$alumacc.cc:485:replace_alu$3780
  creating $alu cell for $verific$add_31$b22.vhd:1603$84: $auto$alumacc.cc:485:replace_alu$3783
  creating $alu cell for $verific$add_39$b22.vhd:1608$88: $auto$alumacc.cc:485:replace_alu$3786
  creating $alu cell for $verific$sub_34$b22.vhd:1605$85: $auto$alumacc.cc:485:replace_alu$3789
  created 65 $alu and 2 $macc cells.

yosys> opt_expr

3.76. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~15 debug messages>

yosys> opt_merge -nomux

3.77. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.78. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~78 debug messages>

yosys> opt_reduce

3.79. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.80. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_share

3.81. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.82. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.83. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 7 unused cells and 37 unused wires.
<suppressed ~8 debug messages>

yosys> opt_expr

3.84. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

yosys> opt_muxtree

3.85. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~78 debug messages>

yosys> opt_reduce

3.86. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.87. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_share

3.88. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.89. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.90. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..

yosys> opt_expr

3.91. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
MAX OPT ITERATION = 2

yosys> stat

3.92. Printing statistics.

=== b22 ===

   Number of wires:                928
   Number of wire bits:          18688
   Number of public wires:          64
   Number of public wire bits:    1006
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                884
     $adff                          18
     $adffe                         22
     $alu                           65
     $and                          102
     $eq                            75
     $logic_not                      6
     $macc                           2
     $mux                          330
     $ne                           102
     $not                           38
     $or                            14
     $pmux                          27
     $reduce_and                    27
     $reduce_bool                    3
     $reduce_or                     51
     $xor                            2


yosys> memory -nomap

3.93. Executing MEMORY pass.

yosys> opt_mem

3.93.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.93.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.93.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.93.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.93.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.93.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..

yosys> memory_share

3.93.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.93.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.93.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..

yosys> memory_collect

3.93.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.94. Printing statistics.

=== b22 ===

   Number of wires:                928
   Number of wire bits:          18688
   Number of public wires:          64
   Number of public wire bits:    1006
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                884
     $adff                          18
     $adffe                         22
     $alu                           65
     $and                          102
     $eq                            75
     $logic_not                      6
     $macc                           2
     $mux                          330
     $ne                           102
     $not                           38
     $or                            14
     $pmux                          27
     $reduce_and                    27
     $reduce_bool                    3
     $reduce_or                     51
     $xor                            2


yosys> muxpack

3.95. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~309 debug messages>

yosys> opt_clean

3.96. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..

yosys> pmuxtree

3.97. Executing PMUXTREE pass.

yosys> muxpack

3.98. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~343 debug messages>

yosys> memory_map

3.99. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> stat

3.100. Printing statistics.

=== b22 ===

   Number of wires:               1042
   Number of wire bits:          22805
   Number of public wires:          64
   Number of public wire bits:    1006
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                971
     $adff                          18
     $adffe                         22
     $alu                           65
     $and                          102
     $eq                            75
     $logic_not                      6
     $macc                           2
     $mux                          387
     $ne                           102
     $not                           65
     $or                            17
     $reduce_and                    27
     $reduce_bool                    3
     $reduce_or                     78
     $xor                            2


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.101. Executing TECHMAP pass (map to technology primitives).

3.101.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.101.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.101.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $or.
Using extmapper maccmap for cells of type $macc.
  add \P1.addr (20 bits, unsigned)
  sub \P3.addr (20 bits, unsigned)
  add \P2.addr (20 bits, unsigned)
  packed 1 (1) bits / 1 words into adder tree
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $adffe.
  add 3'101 * $auto$wreduce.cc:455:run$3409 [0] (3x1 bits, unsigned)
Using extmapper simplemap for cells of type $xor.
Using template $paramod$79fc87901d7fd8aaad689b5406671422f5fa25b9\_80_rs_alu for cells of type $alu.
Using template $paramod$6fc37af1c109ae54e8aed83fcd995c12d378ce93\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $and.
Using template $paramod$51c80ded93a30cabdd6a720b4f0ed1d8c51829dd\_90_alu for cells of type $alu.
Using template $paramod$be80489e44a49c29884f59fd81c31ed03229cfc1\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $adff.
Using template $paramod$e891e6b399cf52748460a311fafe476815d24bd7\_90_alu for cells of type $alu.
Using template $paramod$3ef7d3dd227da7627a99c5e5a6a4deb817573e39\_90_alu for cells of type $alu.
Using template $paramod$32a7b7b86c07519b7537abc18e96f0331f97914d\_90_alu for cells of type $alu.
/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:80: Warning: Range [-1:-1] select out of bounds on signal `\C': Setting 1 LSB bits to undef.
/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88: Warning: Range [-1:-1] select out of bounds on signal `\Y': Setting 1 LSB bits to undef.
/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88: Warning: Range [-1:-1] select out of bounds on signal `\S': Setting 1 LSB bits to undef.
/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88: Warning: Ignoring assignment to constant bits:
    old assignment: 1'x = $xor$/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88$9058_Y
    new assignment: { } = { }.
/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:89: Warning: Range [-1:-1] select out of bounds on signal `\S': Setting 1 LSB bits to undef.
/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:89: Warning: Range [-1:-1] select out of bounds on signal `\AA': Setting 1 LSB bits to undef.
Using template $paramod$fc972a7a46956c1788f3cb5257b53c8f1df2d0cc\_90_alu for cells of type $alu.
Using template $paramod$83fc07d9557d32477a9ece9e4e82efd3bbe82ab8\_80_rs_alu for cells of type $alu.
Using template $paramod$175e67c02b86e96b1288b9dc100122520d7240d8\_90_alu for cells of type $alu.
Using template $paramod$ee932b0f27f4b110ee21c85da6e79a9925243db9\_80_rs_alu for cells of type $alu.
Using template $paramod$9e7011427f22271c0942bd67000ef26931352ace\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$6dc2bc4e177433cbefea60fe94ff11f8a7c6abf8\_90_alu for cells of type $alu.
Using template $paramod$2fcdd83405601057593cb25247304b1283f3b87e\_80_rs_alu for cells of type $alu.
Using template $paramod$c32aaa9fd758c6ea2b382f4327253b21b576e597\_90_alu for cells of type $alu.
Using template $paramod$63a3f1ffa662be02d3403b533885c56d18ebe02a\_80_rs_alu for cells of type $alu.
Using template $paramod$83784888def4f70dbbded37c6d05d2ea1157c936\_90_alu for cells of type $alu.
Using template $paramod$43e6bdbb0e8a6b23dfd3962c0280737d54f8e2be\_80_rs_alu for cells of type $alu.
Using template $paramod$6a42b6fefed750f8a1c58eab59479d960557103c\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010100 for cells of type $lcu.
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000000010100 for cells of type $fa.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000011110 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000011011 for cells of type $lcu.
No more expansions possible.
<suppressed ~6510 debug messages>

yosys> stat

3.102. Printing statistics.

=== b22 ===

   Number of wires:               5569
   Number of wire bits:          90156
   Number of public wires:          64
   Number of public wire bits:    1006
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              25496
     $_AND_                       2593
     $_DFFE_PP0P_                  502
     $_DFF_PP0_                    117
     $_MUX_                      14099
     $_NOT_                       1596
     $_OR_                        2570
     $_XOR_                       3182
     adder_carry                   837


yosys> opt_expr

3.103. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~7576 debug messages>

yosys> opt_merge -nomux

3.104. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
<suppressed ~14277 debug messages>
Removed a total of 4759 cells.

yosys> opt_muxtree

3.105. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.106. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.107. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_share

3.108. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.109. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.110. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 1067 unused cells and 3899 unused wires.
<suppressed ~1068 debug messages>

yosys> opt_expr

3.111. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~216 debug messages>

yosys> opt_muxtree

3.112. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.113. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.114. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_share

3.115. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.116. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.117. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 6 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.118. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
MAX OPT ITERATION = 2

yosys> opt_expr -full

3.119. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~2004 debug messages>

yosys> techmap -map +/techmap.v

3.120. Executing TECHMAP pass (map to technology primitives).

3.120.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.120.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> opt_expr

3.121. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

yosys> opt_merge -nomux

3.122. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

yosys> opt_muxtree

3.123. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.124. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.125. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_dff -nosdff -nodffe -sat

3.126. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.127. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 39 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.128. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
MAX OPT ITERATION = 1

yosys> abc -dff

3.129. Executing ABC pass (technology mapping using ABC).

3.129.1. Summary of detected clock domains:
  467 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$3146, arst=\reset, srst={ }
  822 cells in clk=\clock, en=\P2.state, arst=\reset, srst={ }
  141 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$3290, arst=\reset, srst={ }
  752 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$3307, arst=\reset, srst={ }
  606 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$3326, arst=\reset, srst={ }
  539 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$3345, arst=\reset, srst={ }
  230 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$3350, arst=\reset, srst={ }
  204 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$3381, arst=\reset, srst={ }
  545 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$3398, arst=\reset, srst={ }
  782 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$3181, arst=\reset, srst={ }
  600 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$3200, arst=\reset, srst={ }
  510 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$3219, arst=\reset, srst={ }
  393 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$3224, arst=\reset, srst={ }
  184 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$3255, arst=\reset, srst={ }
  561 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$3272, arst=\reset, srst={ }
  654 cells in clk=\clock, en=\P1.state, arst=\reset, srst={ }
  1145 cells in clk=\clock, en=\P3.state, arst=\reset, srst={ }
  125 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$3164, arst=\reset, srst={ }
  1502 cells in clk=\clock, en={ }, arst=\reset, srst={ }
  889 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$3060, arst=\reset, srst={ }
  571 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$3079, arst=\reset, srst={ }
  620 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$3098, arst=\reset, srst={ }
  132 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$3129, arst=\reset, srst={ }

3.129.2. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3146, asynchronously reset by \reset
Extracted 400 gates and 550 wires to a netlist network with 148 inputs and 69 outputs.

3.129.2.1. Executing ABC.

3.129.3. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by \P2.state, asynchronously reset by \reset
Extracted 774 gates and 1004 wires to a netlist network with 229 inputs and 65 outputs.

3.129.3.1. Executing ABC.

3.129.4. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3290, asynchronously reset by \reset
Extracted 133 gates and 203 wires to a netlist network with 69 inputs and 41 outputs.

3.129.4.1. Executing ABC.

3.129.5. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3307, asynchronously reset by \reset
Extracted 680 gates and 937 wires to a netlist network with 256 inputs and 188 outputs.

3.129.5.1. Executing ABC.

3.129.6. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3326, asynchronously reset by \reset
Extracted 586 gates and 815 wires to a netlist network with 228 inputs and 109 outputs.

3.129.6.1. Executing ABC.

3.129.7. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3345, asynchronously reset by \reset
Extracted 510 gates and 730 wires to a netlist network with 218 inputs and 81 outputs.

3.129.7.1. Executing ABC.

3.129.8. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3350, asynchronously reset by \reset
Extracted 166 gates and 330 wires to a netlist network with 164 inputs and 157 outputs.

3.129.8.1. Executing ABC.

3.129.9. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3381, asynchronously reset by \reset
Extracted 186 gates and 262 wires to a netlist network with 76 inputs and 102 outputs.

3.129.9.1. Executing ABC.

3.129.10. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3398, asynchronously reset by \reset
Extracted 479 gates and 597 wires to a netlist network with 116 inputs and 71 outputs.

3.129.10.1. Executing ABC.

3.129.11. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3181, asynchronously reset by \reset
Extracted 722 gates and 1015 wires to a netlist network with 292 inputs and 207 outputs.

3.129.11.1. Executing ABC.

3.129.12. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3200, asynchronously reset by \reset
Extracted 600 gates and 830 wires to a netlist network with 229 inputs and 117 outputs.

3.129.12.1. Executing ABC.

3.129.13. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3219, asynchronously reset by \reset
Extracted 485 gates and 694 wires to a netlist network with 207 inputs and 70 outputs.

3.129.13.1. Executing ABC.

3.129.14. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3224, asynchronously reset by \reset
Extracted 361 gates and 628 wires to a netlist network with 267 inputs and 157 outputs.

3.129.14.1. Executing ABC.

3.129.15. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3255, asynchronously reset by \reset
Extracted 182 gates and 256 wires to a netlist network with 74 inputs and 85 outputs.

3.129.15.1. Executing ABC.

3.129.16. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3272, asynchronously reset by \reset
Extracted 495 gates and 625 wires to a netlist network with 129 inputs and 75 outputs.

3.129.16.1. Executing ABC.

3.129.17. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by \P1.state, asynchronously reset by \reset
Extracted 654 gates and 803 wires to a netlist network with 148 inputs and 53 outputs.

3.129.17.1. Executing ABC.

3.129.18. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by \P3.state, asynchronously reset by \reset
Extracted 1073 gates and 1422 wires to a netlist network with 348 inputs and 174 outputs.

3.129.18.1. Executing ABC.

3.129.19. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3164, asynchronously reset by \reset
Extracted 121 gates and 176 wires to a netlist network with 54 inputs and 47 outputs.

3.129.19.1. Executing ABC.

3.129.20. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 1394 gates and 1780 wires to a netlist network with 384 inputs and 329 outputs.

3.129.20.1. Executing ABC.

3.129.21. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3060, asynchronously reset by \reset
Extracted 837 gates and 1153 wires to a netlist network with 314 inputs and 262 outputs.

3.129.21.1. Executing ABC.

3.129.22. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3079, asynchronously reset by \reset
Extracted 571 gates and 817 wires to a netlist network with 244 inputs and 124 outputs.

3.129.22.1. Executing ABC.

3.129.23. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3098, asynchronously reset by \reset
Extracted 596 gates and 774 wires to a netlist network with 177 inputs and 122 outputs.

3.129.23.1. Executing ABC.

3.129.24. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3129, asynchronously reset by \reset
Extracted 132 gates and 170 wires to a netlist network with 38 inputs and 50 outputs.

3.129.24.1. Executing ABC.

yosys> abc -dff

3.130. Executing ABC pass (technology mapping using ABC).

3.130.1. Summary of detected clock domains:
  239 cells in clk=\clock, en=$abc$39751$auto$opt_dff.cc:219:make_patterns_logic$3272, arst=\reset, srst={ }
  145 cells in clk=\clock, en=$abc$41979$auto$opt_dff.cc:219:make_patterns_logic$3164, arst=\reset, srst={ }
  1112 cells in clk=\clock, en=$abc$43063$auto$opt_dff.cc:219:make_patterns_logic$3060, arst=\reset, srst={ }
  894 cells in clk=\clock, en=$abc$44244$auto$opt_dff.cc:219:make_patterns_logic$3079, arst=\reset, srst={ }
  1145 cells in clk=\clock, en={ }, arst=\reset, srst={ }
  940 cells in clk=\clock, en=$abc$45107$auto$opt_dff.cc:219:make_patterns_logic$3098, arst=\reset, srst={ }
  230 cells in clk=\clock, en=$abc$32684$auto$opt_dff.cc:219:make_patterns_logic$3146, arst=\reset, srst={ }
  2603 cells in clk=\clock, en=$abc$42127$lo000, arst=\reset, srst={ }
  144 cells in clk=\clock, en=$abc$33757$auto$opt_dff.cc:219:make_patterns_logic$3290, arst=\reset, srst={ }
  782 cells in clk=\clock, en=$abc$33906$auto$opt_dff.cc:219:make_patterns_logic$3307, arst=\reset, srst={ }
  1014 cells in clk=\clock, en=$abc$42127$auto$opt_dff.cc:219:make_patterns_logic$3326, arst=\reset, srst={ }
  657 cells in clk=\clock, en=$abc$35546$auto$opt_dff.cc:219:make_patterns_logic$3345, arst=\reset, srst={ }
  237 cells in clk=\clock, en=$abc$42127$auto$opt_dff.cc:219:make_patterns_logic$3350, arst=\reset, srst={ }
  300 cells in clk=\clock, en=$abc$36515$auto$opt_dff.cc:219:make_patterns_logic$3381, arst=\reset, srst={ }
  239 cells in clk=\clock, en=$abc$36681$auto$opt_dff.cc:219:make_patterns_logic$3398, arst=\reset, srst={ }
  892 cells in clk=\clock, en=$abc$36861$auto$opt_dff.cc:219:make_patterns_logic$3181, arst=\reset, srst={ }
  985 cells in clk=\clock, en=$abc$42127$auto$opt_dff.cc:219:make_patterns_logic$3200, arst=\reset, srst={ }
  529 cells in clk=\clock, en=$abc$42127$auto$opt_dff.cc:219:make_patterns_logic$3219, arst=\reset, srst={ }
  361 cells in clk=\clock, en=$abc$42127$auto$opt_dff.cc:219:make_patterns_logic$3224, arst=\reset, srst={ }
  241 cells in clk=\clock, en=$abc$39591$auto$opt_dff.cc:219:make_patterns_logic$3255, arst=\reset, srst={ }
  214 cells in clk=\clock, en=$abc$46014$auto$opt_dff.cc:219:make_patterns_logic$3129, arst=\reset, srst={ }

3.130.2. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$39751$auto$opt_dff.cc:219:make_patterns_logic$3272, asynchronously reset by \reset
Extracted 175 gates and 288 wires to a netlist network with 113 inputs and 64 outputs.

3.130.2.1. Executing ABC.

3.130.3. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$41979$auto$opt_dff.cc:219:make_patterns_logic$3164, asynchronously reset by \reset
Extracted 135 gates and 197 wires to a netlist network with 62 inputs and 48 outputs.

3.130.3.1. Executing ABC.

3.130.4. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$43063$auto$opt_dff.cc:219:make_patterns_logic$3060, asynchronously reset by \reset
Extracted 1063 gates and 1341 wires to a netlist network with 278 inputs and 184 outputs.

3.130.4.1. Executing ABC.

3.130.5. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$44244$auto$opt_dff.cc:219:make_patterns_logic$3079, asynchronously reset by \reset
Extracted 877 gates and 1130 wires to a netlist network with 253 inputs and 135 outputs.

3.130.5.1. Executing ABC.

3.130.6. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 999 gates and 1428 wires to a netlist network with 429 inputs and 425 outputs.

3.130.6.1. Executing ABC.

3.130.7. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$45107$auto$opt_dff.cc:219:make_patterns_logic$3098, asynchronously reset by \reset
Extracted 917 gates and 1128 wires to a netlist network with 211 inputs and 145 outputs.

3.130.7.1. Executing ABC.

3.130.8. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$32684$auto$opt_dff.cc:219:make_patterns_logic$3146, asynchronously reset by \reset
Extracted 166 gates and 303 wires to a netlist network with 137 inputs and 37 outputs.

3.130.8.1. Executing ABC.

3.130.9. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$48287$lo066, asynchronously reset by \reset
Extracted 2577 gates and 3120 wires to a netlist network with 543 inputs and 224 outputs.

3.130.9.1. Executing ABC.

3.130.10. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$33757$auto$opt_dff.cc:219:make_patterns_logic$3290, asynchronously reset by \reset
Extracted 133 gates and 198 wires to a netlist network with 65 inputs and 47 outputs.

3.130.10.1. Executing ABC.

3.130.11. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$33906$auto$opt_dff.cc:219:make_patterns_logic$3307, asynchronously reset by \reset
Extracted 736 gates and 1000 wires to a netlist network with 264 inputs and 113 outputs.

3.130.11.1. Executing ABC.

3.130.12. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$42127$auto$opt_dff.cc:219:make_patterns_logic$3326, asynchronously reset by \reset
Extracted 943 gates and 1194 wires to a netlist network with 251 inputs and 223 outputs.

3.130.12.1. Executing ABC.

3.130.13. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$35546$auto$opt_dff.cc:219:make_patterns_logic$3345, asynchronously reset by \reset
Extracted 656 gates and 833 wires to a netlist network with 177 inputs and 48 outputs.

3.130.13.1. Executing ABC.

3.130.14. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$42127$auto$opt_dff.cc:219:make_patterns_logic$3350, asynchronously reset by \reset
Extracted 174 gates and 339 wires to a netlist network with 165 inputs and 130 outputs.

3.130.14.1. Executing ABC.

3.130.15. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$36515$auto$opt_dff.cc:219:make_patterns_logic$3381, asynchronously reset by \reset
Extracted 280 gates and 428 wires to a netlist network with 148 inputs and 100 outputs.

3.130.15.1. Executing ABC.

3.130.16. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$36681$auto$opt_dff.cc:219:make_patterns_logic$3398, asynchronously reset by \reset
Extracted 175 gates and 289 wires to a netlist network with 114 inputs and 65 outputs.

3.130.16.1. Executing ABC.

3.130.17. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$36861$auto$opt_dff.cc:219:make_patterns_logic$3181, asynchronously reset by \reset
Extracted 863 gates and 1157 wires to a netlist network with 294 inputs and 134 outputs.

3.130.17.1. Executing ABC.

3.130.18. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$42127$auto$opt_dff.cc:219:make_patterns_logic$3200, asynchronously reset by \reset
Extracted 933 gates and 1163 wires to a netlist network with 230 inputs and 224 outputs.

3.130.18.1. Executing ABC.

3.130.19. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$42127$auto$opt_dff.cc:219:make_patterns_logic$3219, asynchronously reset by \reset
Extracted 529 gates and 708 wires to a netlist network with 179 inputs and 42 outputs.

3.130.19.1. Executing ABC.

3.130.20. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$42127$auto$opt_dff.cc:219:make_patterns_logic$3224, asynchronously reset by \reset
Extracted 329 gates and 597 wires to a netlist network with 268 inputs and 128 outputs.

3.130.20.1. Executing ABC.

3.130.21. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$39591$auto$opt_dff.cc:219:make_patterns_logic$3255, asynchronously reset by \reset
Extracted 212 gates and 338 wires to a netlist network with 126 inputs and 92 outputs.

3.130.21.1. Executing ABC.

3.130.22. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$46014$auto$opt_dff.cc:219:make_patterns_logic$3129, asynchronously reset by \reset
Extracted 194 gates and 313 wires to a netlist network with 119 inputs and 67 outputs.

3.130.22.1. Executing ABC.

yosys> abc -dff

3.131. Executing ABC pass (technology mapping using ABC).

3.131.1. Summary of detected clock domains:
  242 cells in clk=\clock, en=$abc$56098$abc$36681$auto$opt_dff.cc:219:make_patterns_logic$3398, arst=\reset, srst={ }
  139 cells in clk=\clock, en=$abc$53007$abc$33757$auto$opt_dff.cc:219:make_patterns_logic$3290, arst=\reset, srst={ }
  224 cells in clk=\clock, en=$abc$50274$abc$32684$auto$opt_dff.cc:219:make_patterns_logic$3146, arst=\reset, srst={ }
  232 cells in clk=\clock, en=$abc$46123$abc$39751$auto$opt_dff.cc:219:make_patterns_logic$3272, arst=\reset, srst={ }
  148 cells in clk=\clock, en=$abc$46294$abc$41979$auto$opt_dff.cc:219:make_patterns_logic$3164, arst=\reset, srst={ }
  261 cells in clk=\clock, en=$abc$59027$abc$39591$auto$opt_dff.cc:219:make_patterns_logic$3255, arst=\reset, srst={ }
  1179 cells in clk=\clock, en=$abc$46428$abc$43063$auto$opt_dff.cc:219:make_patterns_logic$3060, arst=\reset, srst={ }
  702 cells in clk=\clock, en=$abc$47504$abc$44244$auto$opt_dff.cc:219:make_patterns_logic$3079, arst=\reset, srst={ }
  991 cells in clk=\clock, en=$abc$56267$abc$36861$auto$opt_dff.cc:219:make_patterns_logic$3181, arst=\reset, srst={ }
  313 cells in clk=\clock, en=$abc$55799$abc$36515$auto$opt_dff.cc:219:make_patterns_logic$3381, arst=\reset, srst={ }
  236 cells in clk=\clock, en=$abc$55594$abc$42127$auto$opt_dff.cc:219:make_patterns_logic$3350, arst=\reset, srst={ }
  721 cells in clk=\clock, en=$abc$54882$abc$35546$auto$opt_dff.cc:219:make_patterns_logic$3345, arst=\reset, srst={ }
  2577 cells in clk=\clock, en=$abc$48287$lo066, arst=\reset, srst={ }
  781 cells in clk=\clock, en=$abc$53943$abc$42127$auto$opt_dff.cc:219:make_patterns_logic$3326, arst=\reset, srst={ }
  1076 cells in clk=\clock, en={ }, arst=\reset, srst={ }
  361 cells in clk=\clock, en=$abc$58667$abc$42127$auto$opt_dff.cc:219:make_patterns_logic$3224, arst=\reset, srst={ }
  573 cells in clk=\clock, en=$abc$58156$abc$42127$auto$opt_dff.cc:219:make_patterns_logic$3219, arst=\reset, srst={ }
  861 cells in clk=\clock, en=$abc$57193$abc$42127$auto$opt_dff.cc:219:make_patterns_logic$3200, arst=\reset, srst={ }
  1006 cells in clk=\clock, en=$abc$49275$abc$45107$auto$opt_dff.cc:219:make_patterns_logic$3098, arst=\reset, srst={ }
  1003 cells in clk=\clock, en=$abc$53146$abc$33906$auto$opt_dff.cc:219:make_patterns_logic$3307, arst=\reset, srst={ }
  235 cells in clk=\clock, en=$abc$59254$abc$46014$auto$opt_dff.cc:219:make_patterns_logic$3129, arst=\reset, srst={ }

3.131.2. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$56098$abc$36681$auto$opt_dff.cc:219:make_patterns_logic$3398, asynchronously reset by \reset
Extracted 178 gates and 300 wires to a netlist network with 122 inputs and 70 outputs.

3.131.2.1. Executing ABC.

3.131.3. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$53007$abc$33757$auto$opt_dff.cc:219:make_patterns_logic$3290, asynchronously reset by \reset
Extracted 130 gates and 189 wires to a netlist network with 59 inputs and 41 outputs.

3.131.3.1. Executing ABC.

3.131.4. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$50274$abc$32684$auto$opt_dff.cc:219:make_patterns_logic$3146, asynchronously reset by \reset
Extracted 160 gates and 310 wires to a netlist network with 150 inputs and 45 outputs.

3.131.4.1. Executing ABC.

3.131.5. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$46123$abc$39751$auto$opt_dff.cc:219:make_patterns_logic$3272, asynchronously reset by \reset
Extracted 168 gates and 279 wires to a netlist network with 111 inputs and 62 outputs.

3.131.5.1. Executing ABC.

3.131.6. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$46294$abc$41979$auto$opt_dff.cc:219:make_patterns_logic$3164, asynchronously reset by \reset
Extracted 140 gates and 211 wires to a netlist network with 71 inputs and 48 outputs.

3.131.6.1. Executing ABC.

3.131.7. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$59027$abc$39591$auto$opt_dff.cc:219:make_patterns_logic$3255, asynchronously reset by \reset
Extracted 228 gates and 362 wires to a netlist network with 134 inputs and 94 outputs.

3.131.7.1. Executing ABC.

3.131.8. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$46428$abc$43063$auto$opt_dff.cc:219:make_patterns_logic$3060, asynchronously reset by \reset
Extracted 1132 gates and 1437 wires to a netlist network with 305 inputs and 208 outputs.

3.131.8.1. Executing ABC.

3.131.9. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$47504$abc$44244$auto$opt_dff.cc:219:make_patterns_logic$3079, asynchronously reset by \reset
Extracted 697 gates and 901 wires to a netlist network with 204 inputs and 111 outputs.

3.131.9.1. Executing ABC.

3.131.10. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$56267$abc$36861$auto$opt_dff.cc:219:make_patterns_logic$3181, asynchronously reset by \reset
Extracted 958 gates and 1239 wires to a netlist network with 281 inputs and 154 outputs.

3.131.10.1. Executing ABC.

3.131.11. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$55799$abc$36515$auto$opt_dff.cc:219:make_patterns_logic$3381, asynchronously reset by \reset
Extracted 291 gates and 435 wires to a netlist network with 144 inputs and 93 outputs.

3.131.11.1. Executing ABC.

3.131.12. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$55594$abc$42127$auto$opt_dff.cc:219:make_patterns_logic$3350, asynchronously reset by \reset
Extracted 173 gates and 340 wires to a netlist network with 167 inputs and 129 outputs.

3.131.12.1. Executing ABC.

3.131.13. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$54882$abc$35546$auto$opt_dff.cc:219:make_patterns_logic$3345, asynchronously reset by \reset
Extracted 718 gates and 931 wires to a netlist network with 213 inputs and 63 outputs.

3.131.13.1. Executing ABC.

3.131.14. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$48287$lo066, asynchronously reset by \reset
Extracted 2545 gates and 3093 wires to a netlist network with 548 inputs and 219 outputs.

3.131.14.1. Executing ABC.

3.131.15. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$53943$abc$42127$auto$opt_dff.cc:219:make_patterns_logic$3326, asynchronously reset by \reset
Extracted 755 gates and 957 wires to a netlist network with 202 inputs and 109 outputs.

3.131.15.1. Executing ABC.

3.131.16. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 936 gates and 1323 wires to a netlist network with 387 inputs and 402 outputs.

3.131.16.1. Executing ABC.

3.131.17. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$58667$abc$42127$auto$opt_dff.cc:219:make_patterns_logic$3224, asynchronously reset by \reset
Extracted 329 gates and 597 wires to a netlist network with 268 inputs and 128 outputs.

3.131.17.1. Executing ABC.

3.131.18. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$58156$abc$42127$auto$opt_dff.cc:219:make_patterns_logic$3219, asynchronously reset by \reset
Extracted 549 gates and 775 wires to a netlist network with 226 inputs and 80 outputs.

3.131.18.1. Executing ABC.

3.131.19. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$57193$abc$42127$auto$opt_dff.cc:219:make_patterns_logic$3200, asynchronously reset by \reset
Extracted 835 gates and 1052 wires to a netlist network with 217 inputs and 146 outputs.

3.131.19.1. Executing ABC.

3.131.20. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$49275$abc$45107$auto$opt_dff.cc:219:make_patterns_logic$3098, asynchronously reset by \reset
Extracted 975 gates and 1197 wires to a netlist network with 222 inputs and 125 outputs.

3.131.20.1. Executing ABC.

3.131.21. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$53146$abc$33906$auto$opt_dff.cc:219:make_patterns_logic$3307, asynchronously reset by \reset
Extracted 912 gates and 1174 wires to a netlist network with 262 inputs and 209 outputs.

3.131.21.1. Executing ABC.

3.131.22. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$59254$abc$46014$auto$opt_dff.cc:219:make_patterns_logic$3129, asynchronously reset by \reset
Extracted 215 gates and 345 wires to a netlist network with 130 inputs and 67 outputs.

3.131.22.1. Executing ABC.

yosys> abc -dff

3.132. Executing ABC pass (technology mapping using ABC).

3.132.1. Summary of detected clock domains:
  236 cells in clk=\clock, en=$abc$59453$abc$56098$abc$36681$auto$opt_dff.cc:219:make_patterns_logic$3398, arst=\reset, srst={ }
  204 cells in clk=\clock, en=$abc$59772$abc$50274$abc$32684$auto$opt_dff.cc:219:make_patterns_logic$3146, arst=\reset, srst={ }
  236 cells in clk=\clock, en=$abc$59929$abc$46123$abc$39751$auto$opt_dff.cc:219:make_patterns_logic$3272, arst=\reset, srst={ }
  138 cells in clk=\clock, en=$abc$60097$abc$46294$abc$41979$auto$opt_dff.cc:219:make_patterns_logic$3164, arst=\reset, srst={ }
  232 cells in clk=\clock, en=$abc$60248$abc$59027$abc$39591$auto$opt_dff.cc:219:make_patterns_logic$3255, arst=\reset, srst={ }
  930 cells in clk=\clock, en=$abc$60476$abc$46428$abc$43063$auto$opt_dff.cc:219:make_patterns_logic$3060, arst=\reset, srst={ }
  974 cells in clk=\clock, en=$abc$61578$abc$47504$abc$44244$auto$opt_dff.cc:219:make_patterns_logic$3079, arst=\reset, srst={ }
  1029 cells in clk=\clock, en=$abc$71572$abc$53146$abc$33906$auto$opt_dff.cc:219:make_patterns_logic$3307, arst=\reset, srst={ }
  124 cells in clk=\clock, en=$abc$59633$abc$53007$abc$33757$auto$opt_dff.cc:219:make_patterns_logic$3290, arst=\reset, srst={ }
  957 cells in clk=\clock, en=$abc$62354$abc$56267$abc$36861$auto$opt_dff.cc:219:make_patterns_logic$3181, arst=\reset, srst={ }
  294 cells in clk=\clock, en=$abc$63311$abc$55799$abc$36515$auto$opt_dff.cc:219:make_patterns_logic$3381, arst=\reset, srst={ }
  237 cells in clk=\clock, en=$abc$63573$abc$55594$abc$42127$auto$opt_dff.cc:219:make_patterns_logic$3350, arst=\reset, srst={ }
  705 cells in clk=\clock, en=$abc$63777$abc$54882$abc$35546$auto$opt_dff.cc:219:make_patterns_logic$3345, arst=\reset, srst={ }
  2535 cells in clk=\clock, en=$abc$67790$lo041, arst=\reset, srst={ }
  768 cells in clk=\clock, en=$abc$66999$abc$53943$abc$42127$auto$opt_dff.cc:219:make_patterns_logic$3326, arst=\reset, srst={ }
  361 cells in clk=\clock, en=$abc$68736$abc$58667$abc$42127$auto$opt_dff.cc:219:make_patterns_logic$3224, arst=\reset, srst={ }
  610 cells in clk=\clock, en=$abc$69096$abc$58156$abc$42127$auto$opt_dff.cc:219:make_patterns_logic$3219, arst=\reset, srst={ }
  931 cells in clk=\clock, en=$abc$69712$abc$57193$abc$42127$auto$opt_dff.cc:219:make_patterns_logic$3200, arst=\reset, srst={ }
  982 cells in clk=\clock, en=$abc$70596$abc$49275$abc$45107$auto$opt_dff.cc:219:make_patterns_logic$3098, arst=\reset, srst={ }
  1076 cells in clk=\clock, en={ }, arst=\reset, srst={ }
  281 cells in clk=\clock, en=$abc$72497$abc$59254$abc$46014$auto$opt_dff.cc:219:make_patterns_logic$3129, arst=\reset, srst={ }

3.132.2. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$59453$abc$56098$abc$36681$auto$opt_dff.cc:219:make_patterns_logic$3398, asynchronously reset by \reset
Extracted 172 gates and 285 wires to a netlist network with 113 inputs and 67 outputs.

3.132.2.1. Executing ABC.

3.132.3. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$59772$abc$50274$abc$32684$auto$opt_dff.cc:219:make_patterns_logic$3146, asynchronously reset by \reset
Extracted 140 gates and 278 wires to a netlist network with 138 inputs and 38 outputs.

3.132.3.1. Executing ABC.

3.132.4. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$59929$abc$46123$abc$39751$auto$opt_dff.cc:219:make_patterns_logic$3272, asynchronously reset by \reset
Extracted 172 gates and 286 wires to a netlist network with 114 inputs and 68 outputs.

3.132.4.1. Executing ABC.

3.132.5. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$60097$abc$46294$abc$41979$auto$opt_dff.cc:219:make_patterns_logic$3164, asynchronously reset by \reset
Extracted 135 gates and 205 wires to a netlist network with 70 inputs and 36 outputs.

3.132.5.1. Executing ABC.

3.132.6. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$60248$abc$59027$abc$39591$auto$opt_dff.cc:219:make_patterns_logic$3255, asynchronously reset by \reset
Extracted 205 gates and 323 wires to a netlist network with 118 inputs and 91 outputs.

3.132.6.1. Executing ABC.

3.132.7. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$60476$abc$46428$abc$43063$auto$opt_dff.cc:219:make_patterns_logic$3060, asynchronously reset by \reset
Extracted 914 gates and 1181 wires to a netlist network with 267 inputs and 130 outputs.

3.132.7.1. Executing ABC.

3.132.8. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$61578$abc$47504$abc$44244$auto$opt_dff.cc:219:make_patterns_logic$3079, asynchronously reset by \reset
Extracted 936 gates and 1220 wires to a netlist network with 284 inputs and 186 outputs.

3.132.8.1. Executing ABC.

3.132.9. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$71572$abc$53146$abc$33906$auto$opt_dff.cc:219:make_patterns_logic$3307, asynchronously reset by \reset
Extracted 930 gates and 1193 wires to a netlist network with 263 inputs and 234 outputs.

3.132.9.1. Executing ABC.

3.132.10. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$59633$abc$53007$abc$33757$auto$opt_dff.cc:219:make_patterns_logic$3290, asynchronously reset by \reset
Extracted 122 gates and 178 wires to a netlist network with 56 inputs and 28 outputs.

3.132.10.1. Executing ABC.

3.132.11. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$62354$abc$56267$abc$36861$auto$opt_dff.cc:219:make_patterns_logic$3181, asynchronously reset by \reset
Extracted 937 gates and 1207 wires to a netlist network with 270 inputs and 146 outputs.

3.132.11.1. Executing ABC.

3.132.12. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$63311$abc$55799$abc$36515$auto$opt_dff.cc:219:make_patterns_logic$3381, asynchronously reset by \reset
Extracted 272 gates and 416 wires to a netlist network with 144 inputs and 90 outputs.

3.132.12.1. Executing ABC.

3.132.13. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$63573$abc$55594$abc$42127$auto$opt_dff.cc:219:make_patterns_logic$3350, asynchronously reset by \reset
Extracted 174 gates and 341 wires to a netlist network with 167 inputs and 129 outputs.

3.132.13.1. Executing ABC.

3.132.14. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$63777$abc$54882$abc$35546$auto$opt_dff.cc:219:make_patterns_logic$3345, asynchronously reset by \reset
Extracted 703 gates and 925 wires to a netlist network with 222 inputs and 52 outputs.

3.132.14.1. Executing ABC.

3.132.15. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$67790$lo041, asynchronously reset by \reset
Extracted 2495 gates and 3035 wires to a netlist network with 540 inputs and 219 outputs.

3.132.15.1. Executing ABC.

3.132.16. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$66999$abc$53943$abc$42127$auto$opt_dff.cc:219:make_patterns_logic$3326, asynchronously reset by \reset
Extracted 746 gates and 930 wires to a netlist network with 184 inputs and 97 outputs.

3.132.16.1. Executing ABC.

3.132.17. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$68736$abc$58667$abc$42127$auto$opt_dff.cc:219:make_patterns_logic$3224, asynchronously reset by \reset
Extracted 329 gates and 597 wires to a netlist network with 268 inputs and 128 outputs.

3.132.17.1. Executing ABC.

3.132.18. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$69096$abc$58156$abc$42127$auto$opt_dff.cc:219:make_patterns_logic$3219, asynchronously reset by \reset
Extracted 578 gates and 785 wires to a netlist network with 207 inputs and 74 outputs.

3.132.18.1. Executing ABC.

3.132.19. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$69712$abc$57193$abc$42127$auto$opt_dff.cc:219:make_patterns_logic$3200, asynchronously reset by \reset
Extracted 898 gates and 1146 wires to a netlist network with 248 inputs and 166 outputs.

3.132.19.1. Executing ABC.

3.132.20. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$70596$abc$49275$abc$45107$auto$opt_dff.cc:219:make_patterns_logic$3098, asynchronously reset by \reset
Extracted 953 gates and 1159 wires to a netlist network with 206 inputs and 119 outputs.

3.132.20.1. Executing ABC.

3.132.21. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 933 gates and 1343 wires to a netlist network with 410 inputs and 418 outputs.

3.132.21.1. Executing ABC.

3.132.22. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$72497$abc$59254$abc$46014$auto$opt_dff.cc:219:make_patterns_logic$3129, asynchronously reset by \reset
Extracted 259 gates and 396 wires to a netlist network with 137 inputs and 69 outputs.

3.132.22.1. Executing ABC.

yosys> opt_ffinv

3.133. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt_expr

3.134. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~493 debug messages>

yosys> opt_merge -nomux

3.135. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
<suppressed ~579 debug messages>
Removed a total of 193 cells.

yosys> opt_muxtree

3.136. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.137. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.138. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_share

3.139. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$77441$auto$blifparse.cc:381:parse_blif$77619 in front of them:
        $abc$84664$auto$blifparse.cc:381:parse_blif$85218
        $abc$84664$auto$blifparse.cc:381:parse_blif$85242

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$85618$auto$blifparse.cc:381:parse_blif$85725 in front of them:
        $abc$84664$auto$blifparse.cc:381:parse_blif$85217
        $abc$84664$auto$blifparse.cc:381:parse_blif$85171

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$85618$auto$blifparse.cc:381:parse_blif$85731 in front of them:
        $abc$84664$auto$blifparse.cc:381:parse_blif$85252
        $abc$84664$auto$blifparse.cc:381:parse_blif$85098

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$85618$auto$blifparse.cc:381:parse_blif$85748 in front of them:
        $abc$84664$auto$blifparse.cc:381:parse_blif$85120
        $abc$84664$auto$blifparse.cc:381:parse_blif$85115

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$85618$auto$blifparse.cc:381:parse_blif$85769 in front of them:
        $abc$84664$auto$blifparse.cc:381:parse_blif$85243
        $abc$84664$auto$blifparse.cc:381:parse_blif$85050

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$85618$auto$blifparse.cc:381:parse_blif$85786 in front of them:
        $abc$84664$auto$blifparse.cc:381:parse_blif$85250
        $abc$84664$auto$blifparse.cc:381:parse_blif$85255

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$85618$auto$blifparse.cc:381:parse_blif$85799 in front of them:
        $abc$84664$auto$blifparse.cc:381:parse_blif$85173
        $abc$84664$auto$blifparse.cc:381:parse_blif$85167

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$85618$auto$blifparse.cc:381:parse_blif$85805 in front of them:
        $abc$84664$auto$blifparse.cc:381:parse_blif$85162
        $abc$84664$auto$blifparse.cc:381:parse_blif$85052

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$85618$auto$blifparse.cc:381:parse_blif$85811 in front of them:
        $abc$84664$auto$blifparse.cc:381:parse_blif$85163
        $abc$84664$auto$blifparse.cc:381:parse_blif$85169

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$85618$auto$blifparse.cc:381:parse_blif$85824 in front of them:
        $abc$84664$auto$blifparse.cc:381:parse_blif$85240
        $abc$84664$auto$blifparse.cc:381:parse_blif$85187


yosys> opt_dff -nosdff -sat

3.140. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $abc$78620$auto$blifparse.cc:362:parse_blif$78647 ($_DFFE_PP0P_) from module b22 (D = $abc$78620$new_n2048_, Q = $abc$78620$lo26).

yosys> opt_clean

3.141. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 3 unused cells and 61818 unused wires.
<suppressed ~29 debug messages>

yosys> opt_expr

3.142. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~10 debug messages>

yosys> opt_muxtree

3.143. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~10 debug messages>

yosys> opt_reduce

3.144. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.145. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_share

3.146. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.147. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.148. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 10 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.149. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
MAX OPT ITERATION = 2

yosys> bmuxmap

3.150. Executing BMUXMAP pass.

yosys> demuxmap

3.151. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> abc -script /tmp/yosys_pOWTm8/abc_tmp_1.scr

3.152. Executing ABC pass (technology mapping using ABC).

3.152.1. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Extracted 12023 gates and 13289 wires to a netlist network with 1266 inputs and 1401 outputs.

3.152.1.1. Executing ABC.
DE:   #PIs = 1266  #Luts =  3895  Max Lvl =  40  Avg Lvl =   9.49  [   1.13 sec. at Pass 0]
DE:   #PIs = 1266  #Luts =  3099  Max Lvl =  39  Avg Lvl =   9.40  [  39.51 sec. at Pass 1]
DE:   #PIs = 1266  #Luts =  3008  Max Lvl =  34  Avg Lvl =   9.08  [   6.78 sec. at Pass 2]
DE:   #PIs = 1266  #Luts =  2954  Max Lvl =  32  Avg Lvl =   9.15  [  14.09 sec. at Pass 3]
DE:   #PIs = 1266  #Luts =  2925  Max Lvl =  30  Avg Lvl =   9.07  [   7.00 sec. at Pass 4]
DE:   #PIs = 1266  #Luts =  2875  Max Lvl =  35  Avg Lvl =   9.48  [  16.10 sec. at Pass 5]
DE:   #PIs = 1266  #Luts =  2863  Max Lvl =  31  Avg Lvl =   9.30  [  12.23 sec. at Pass 6]
DE:   #PIs = 1266  #Luts =  2845  Max Lvl =  33  Avg Lvl =   9.44  [  13.07 sec. at Pass 7]
DE:   #PIs = 1266  #Luts =  2826  Max Lvl =  32  Avg Lvl =   9.24  [   7.68 sec. at Pass 8]
DE:   #PIs = 1266  #Luts =  2799  Max Lvl =  35  Avg Lvl =   9.32  [   9.56 sec. at Pass 9]
DE:   #PIs = 1266  #Luts =  2796  Max Lvl =  33  Avg Lvl =   9.48  [   6.93 sec. at Pass 10]
DE:   #PIs = 1266  #Luts =  2768  Max Lvl =  37  Avg Lvl =   9.39  [   8.93 sec. at Pass 11]
DE:   #PIs = 1266  #Luts =  2766  Max Lvl =  31  Avg Lvl =   9.17  [   5.99 sec. at Pass 12]
DE:   #PIs = 1266  #Luts =  2743  Max Lvl =  34  Avg Lvl =   9.33  [   9.53 sec. at Pass 13]
DE:   #PIs = 1266  #Luts =  2740  Max Lvl =  31  Avg Lvl =   8.95  [   6.35 sec. at Pass 14]
DE:   #PIs = 1266  #Luts =  2733  Max Lvl =  33  Avg Lvl =   9.32  [   8.17 sec. at Pass 15]
DE:   #PIs = 1266  #Luts =  2731  Max Lvl =  33  Avg Lvl =   9.32  [   1.91 sec. at Pass 16]

yosys> opt_expr

3.153. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

yosys> opt_merge -nomux

3.154. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
<suppressed ~18 debug messages>
Removed a total of 6 cells.

yosys> opt_muxtree

3.155. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~10 debug messages>

yosys> opt_reduce

3.156. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.157. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_share

3.158. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.159. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.160. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 12833 unused wires.
<suppressed ~7 debug messages>

yosys> opt_expr

3.161. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
MAX OPT ITERATION = 1

yosys> opt_ffinv

3.162. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 1 inverters.

yosys> stat

3.163. Printing statistics.

=== b22 ===

   Number of wires:               2553
   Number of wire bits:           5730
   Number of public wires:          33
   Number of public wire bits:     586
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               4115
     $_DFFE_PP0P_                  502
     $_DFF_PP0_                    106
     $_DFF_PP1_                      1
     $lut                         2659
     $mux                           10
     adder_carry                   837


yosys> shregmap -minlen 8 -maxlen 20

3.164. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.165. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.166. Printing statistics.

=== b22 ===

   Number of wires:               2553
   Number of wire bits:           5730
   Number of public wires:          33
   Number of public wire bits:     586
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               4115
     $_DFFE_PP0P_                  502
     $_DFF_PP0_                    106
     $_DFF_PP1_                      1
     $lut                         2659
     $mux                           10
     adder_carry                   837


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.167. Executing TECHMAP pass (map to technology primitives).

3.167.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.167.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.167.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using extmapper simplemap for cells of type $mux.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using template \$_DFF_PP1_ for cells of type $_DFF_PP1_.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~4023 debug messages>

yosys> opt_expr -mux_undef

3.168. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~54910 debug messages>

yosys> simplemap

3.169. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.170. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

yosys> opt_merge

3.171. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
<suppressed ~25071 debug messages>
Removed a total of 8357 cells.

yosys> opt_dff -nodffe -nosdff

3.172. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.173. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 8930 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.174. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~2082 debug messages>

yosys> opt_merge -nomux

3.175. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
<suppressed ~84 debug messages>
Removed a total of 28 cells.

yosys> opt_muxtree

3.176. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.177. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.178. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_share

3.179. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.180. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.181. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 574 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.182. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
MAX OPT ITERATION = 1

yosys> abc -script /tmp/yosys_pOWTm8/abc_tmp_2.scr

3.183. Executing ABC pass (technology mapping using ABC).

3.183.1. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Extracted 9421 gates and 10673 wires to a netlist network with 1250 inputs and 1317 outputs.

3.183.1.1. Executing ABC.
DE:   #PIs = 1250  #Luts =  2666  Max Lvl =  32  Avg Lvl =   9.17  [   0.66 sec. at Pass 0]
DE:   #PIs = 1250  #Luts =  2641  Max Lvl =  38  Avg Lvl =   8.84  [  22.07 sec. at Pass 1]
DE:   #PIs = 1250  #Luts =  2619  Max Lvl =  31  Avg Lvl =   8.61  [   3.80 sec. at Pass 2]
DE:   #PIs = 1250  #Luts =  2619  Max Lvl =  31  Avg Lvl =   8.61  [   6.36 sec. at Pass 3]
DE:   #PIs = 1250  #Luts =  2597  Max Lvl =  32  Avg Lvl =   8.95  [   6.19 sec. at Pass 4]
DE:   #PIs = 1250  #Luts =  2597  Max Lvl =  32  Avg Lvl =   8.95  [  10.78 sec. at Pass 5]
DE:   #PIs = 1250  #Luts =  2580  Max Lvl =  32  Avg Lvl =   8.99  [   7.92 sec. at Pass 6]
DE:   #PIs = 1250  #Luts =  2575  Max Lvl =  37  Avg Lvl =   9.31  [   8.72 sec. at Pass 7]
DE:   #PIs = 1250  #Luts =  2568  Max Lvl =  31  Avg Lvl =   8.77  [   7.88 sec. at Pass 8]
DE:   #PIs = 1250  #Luts =  2568  Max Lvl =  31  Avg Lvl =   8.77  [  10.62 sec. at Pass 9]
DE:   #PIs = 1250  #Luts =  2560  Max Lvl =  34  Avg Lvl =   8.90  [   7.29 sec. at Pass 10]
DE:   #PIs = 1250  #Luts =  2560  Max Lvl =  34  Avg Lvl =   8.90  [  11.69 sec. at Pass 11]
DE:   #PIs = 1250  #Luts =  2549  Max Lvl =  31  Avg Lvl =   9.03  [   6.99 sec. at Pass 12]
DE:   #PIs = 1250  #Luts =  2549  Max Lvl =  31  Avg Lvl =   9.03  [   7.78 sec. at Pass 13]
DE:   #PIs = 1250  #Luts =  2545  Max Lvl =  34  Avg Lvl =   9.18  [   5.56 sec. at Pass 14]
DE:   #PIs = 1250  #Luts =  2545  Max Lvl =  34  Avg Lvl =   9.18  [   6.85 sec. at Pass 15]
DE:   #PIs = 1250  #Luts =  2545  Max Lvl =  34  Avg Lvl =   9.18  [   1.52 sec. at Pass 16]

yosys> opt_expr

3.184. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

yosys> opt_merge -nomux

3.185. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.186. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.187. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.188. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_share

3.189. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.190. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.191. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 8875 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.192. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
MAX OPT ITERATION = 1

yosys> hierarchy -check

3.193. Executing HIERARCHY pass (managing design hierarchy).

3.193.1. Analyzing design hierarchy..
Top module:  \b22

3.193.2. Analyzing design hierarchy..
Top module:  \b22
Removed 0 unused modules.

yosys> stat

3.194. Printing statistics.

=== b22 ===

   Number of wires:               2428
   Number of wire bits:           5586
   Number of public wires:          33
   Number of public wire bits:     586
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3991
     $lut                         2545
     adder_carry                   837
     dffsre                        609


yosys> opt_clean -purge

3.195. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 13 unused wires.
<suppressed ~13 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.196. Executing Verilog backend.
Dumping module `\b22'.

Warnings: 5 unique messages, 6 total
End of script. Logfile hash: cc2d7dc03f, CPU: user 92.76s system 1.62s, MEM: 181.81 MB peak
Yosys 0.18+10 (git sha1 c98b0e94e, gcc 9.4.0 -fPIC -Os)
Time spent: 96% 6x abc (1994 sec), 1% 26x opt_dff (33 sec), ...
real 497.49
user 1908.80
sys 167.61
