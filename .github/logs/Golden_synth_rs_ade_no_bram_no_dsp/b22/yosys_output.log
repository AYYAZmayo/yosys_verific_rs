
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.40
 Yosys 0.17+76 (git sha1 035496b50, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Apr22_SW_Release, released at Thu Apr 28 08:08:21 2022.

yosys> verilog_defaults -add -I.

yosys> read -vhdl b22.vhd

yosys> verific -vhdl b22.vhd

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Apr22_SW_Release, released at Thu Apr 28 08:08:21 2022.
VERIFIC-INFO [VHDL-1504] default VHDL library search path is now "/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008"
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'b22.vhd'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_1164' from file '/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_1164.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.standard' from file '/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/standard.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.textio' from file '/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/textio.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_arith' from file '/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_arith.vdb'
VERIFIC-INFO [VHDL-1012] b22.vhd:5: analyzing entity 'b14'
VERIFIC-INFO [VHDL-1010] b22.vhd:15: analyzing architecture 'behav'
VERIFIC-INFO [VHDL-1012] b22.vhd:515: analyzing entity 'b14rev'
VERIFIC-INFO [VHDL-1010] b22.vhd:525: analyzing architecture 'behav'
VERIFIC-INFO [VHDL-1012] b22.vhd:1025: analyzing entity 'b14_1'
VERIFIC-INFO [VHDL-1010] b22.vhd:1035: analyzing architecture 'behav'
VERIFIC-INFO [VHDL-1012] b22.vhd:1536: analyzing entity 'b22'
VERIFIC-INFO [VHDL-1010] b22.vhd:1544: analyzing architecture 'behav'

yosys> synth_rs -top b22 -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.55

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\RS_DSP2_MULT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_sim'.
Generating RTLIL representation for module `\dsp_t1_20x18x64'.
Generating RTLIL representation for module `\dsp_t1_10x9x32'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top b22

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VHDL-1067] b22.vhd:1536: processing 'b22(BEHAV)'
VERIFIC-INFO [VHDL-1067] b22.vhd:5: processing 'b14(BEHAV)'
VERIFIC-INFO [VHDL-1172] b22.vhd:482: 'others' clause is never selected
VERIFIC-INFO [VHDL-1067] b22.vhd:1025: processing 'b14_1(BEHAV)'
VERIFIC-INFO [VHDL-1172] b22.vhd:1502: 'others' clause is never selected
VERIFIC-INFO [VHDL-1067] b22.vhd:515: processing 'b14rev(BEHAV)'
VERIFIC-INFO [VHDL-1172] b22.vhd:992: 'others' clause is never selected
Importing module b22.
Importing module b14(BEHAV).
Importing module b14_1(BEHAV).
Importing module b14rev(BEHAV).

3.3.1. Analyzing design hierarchy..
Top module:  \b22
Used module:     \b14rev(BEHAV)
Used module:     \b14_1(BEHAV)
Used module:     \b14(BEHAV)

3.3.2. Analyzing design hierarchy..
Top module:  \b22
Used module:     \b14rev(BEHAV)
Used module:     \b14_1(BEHAV)
Used module:     \b14(BEHAV)
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.4.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.4.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14rev(BEHAV).
<suppressed ~26 debug messages>
Optimizing module b14_1(BEHAV).
<suppressed ~26 debug messages>
Optimizing module b14(BEHAV).
<suppressed ~26 debug messages>
Optimizing module b22.

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).
Deleting now unused module b14rev(BEHAV).
Deleting now unused module b14_1(BEHAV).
Deleting now unused module b14(BEHAV).
<suppressed ~3 debug messages>

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~19 debug messages>

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 26 unused cells and 522 unused wires.
<suppressed ~179 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module b22...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\P1.$verific$i684$b22.vhd:505$554.
    dead port 2/2 on $mux $flatten\P1.$verific$mux_672$b22.vhd:505$545.
    dead port 2/2 on $mux $flatten\P1.$verific$mux_685$b22.vhd:505$556.
    dead port 2/2 on $mux $flatten\P2.$verific$i683$b22.vhd:1525$1060.
    dead port 2/2 on $mux $flatten\P2.$verific$mux_671$b22.vhd:1525$1051.
    dead port 2/2 on $mux $flatten\P2.$verific$mux_684$b22.vhd:1525$1062.
    dead port 2/2 on $mux $flatten\P3.$verific$i653$b22.vhd:1015$1580.
    dead port 2/2 on $mux $flatten\P3.$verific$mux_641$b22.vhd:1015$1571.
Removed 8 multiplexer ports.
<suppressed ~71 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
    New ctrl vector for $pmux cell $flatten\P1.$verific$select_746$b22.vhd:490$507: { $flatten\P1.$verific$n2255$138 $auto$opt_reduce.cc:134:opt_pmux$1624 }
    New ctrl vector for $pmux cell $flatten\P1.$verific$select_750$b22.vhd:490$448: { $flatten\P1.$verific$n2256$139 $auto$opt_reduce.cc:134:opt_pmux$1626 }
    New ctrl vector for $pmux cell $flatten\P1.$verific$select_751$b22.vhd:490$525: { $flatten\P1.$verific$n2257$140 $auto$opt_reduce.cc:134:opt_pmux$1628 }
    New ctrl vector for $pmux cell $flatten\P1.$verific$select_752$b22.vhd:490$526: { $flatten\P1.$verific$n2258$141 $auto$opt_reduce.cc:134:opt_pmux$1630 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_746$b22.vhd:1510$1011: { $flatten\P2.$verific$n2255$641 $auto$opt_reduce.cc:134:opt_pmux$1632 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_750$b22.vhd:1510$952: { $flatten\P2.$verific$n2256$642 $auto$opt_reduce.cc:134:opt_pmux$1634 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_751$b22.vhd:1510$1029: { $flatten\P2.$verific$n2257$643 $auto$opt_reduce.cc:134:opt_pmux$1636 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_752$b22.vhd:1510$1030: { $flatten\P2.$verific$n2258$644 $auto$opt_reduce.cc:134:opt_pmux$1638 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_494$b22.vhd:957$1527: { $flatten\P3.$verific$n2118$1146 $auto$opt_reduce.cc:134:opt_pmux$1640 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_495$b22.vhd:957$1528: { $flatten\P3.$verific$n2120$1148 $auto$opt_reduce.cc:134:opt_pmux$1642 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_496$b22.vhd:957$1529: { $flatten\P3.$verific$n2119$1147 $auto$opt_reduce.cc:134:opt_pmux$1644 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_497$b22.vhd:957$1530: { $flatten\P3.$verific$n2121$1149 $auto$opt_reduce.cc:134:opt_pmux$1646 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_534$b22.vhd:977$1533: { $flatten\P3.$verific$n2121$1149 $auto$opt_reduce.cc:134:opt_pmux$1648 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_535$b22.vhd:977$1534: { $flatten\P3.$verific$n2119$1147 $auto$opt_reduce.cc:134:opt_pmux$1650 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_536$b22.vhd:977$1535: { $flatten\P3.$verific$n2120$1148 $auto$opt_reduce.cc:134:opt_pmux$1652 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_537$b22.vhd:977$1536: { $flatten\P3.$verific$n2118$1146 $auto$opt_reduce.cc:134:opt_pmux$1654 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_617$b22.vhd:1000$1547: { $flatten\P3.$verific$n2121$1149 $auto$opt_reduce.cc:134:opt_pmux$1656 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_618$b22.vhd:1000$1548: { $flatten\P3.$verific$n2120$1148 $auto$opt_reduce.cc:134:opt_pmux$1658 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_619$b22.vhd:1000$1549: { $flatten\P3.$verific$n2119$1147 $auto$opt_reduce.cc:134:opt_pmux$1660 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_620$b22.vhd:1000$1550: { $flatten\P3.$verific$n2118$1146 $auto$opt_reduce.cc:134:opt_pmux$1662 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_717$b22.vhd:877$1518: { $flatten\P3.$verific$n2118$1146 $auto$opt_reduce.cc:134:opt_pmux$1664 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_718$b22.vhd:877$1524: { $flatten\P3.$verific$n2119$1147 $auto$opt_reduce.cc:134:opt_pmux$1666 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_719$b22.vhd:877$1525: { $flatten\P3.$verific$n2120$1148 $auto$opt_reduce.cc:134:opt_pmux$1668 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_720$b22.vhd:877$1526: { $flatten\P3.$verific$n2121$1149 $auto$opt_reduce.cc:134:opt_pmux$1670 }
  Optimizing cells in module \b22.
Performed a total of 24 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
<suppressed ~36 debug messages>
Removed a total of 12 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $flatten\P3.$verific$wr_reg$b22.vhd:1019$1617 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P3.$verific$state_reg$b22.vhd:1019$1619 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P3.$verific$reg3_reg$b22.vhd:1019$1614 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P3.$verific$reg2_reg$b22.vhd:1019$1613 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P3.$verific$reg1_reg$b22.vhd:1019$1612 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P3.$verific$reg0_reg$b22.vhd:1019$1611 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P3.$verific$rd_reg$b22.vhd:1019$1616 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P1.$verific$B_reg$b22.vhd:509$584 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P3.$verific$addr_reg$b22.vhd:1019$1615 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P3.$verific$IR_reg$b22.vhd:1019$1608 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P3.$verific$B_reg$b22.vhd:1019$1610 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P2.$verific$wr_reg$b22.vhd:1529$1097 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P2.$verific$state_reg$b22.vhd:1529$1099 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P2.$verific$reg3_reg$b22.vhd:1529$1094 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P2.$verific$reg2_reg$b22.vhd:1529$1093 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P2.$verific$reg1_reg$b22.vhd:1529$1092 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P2.$verific$reg0_reg$b22.vhd:1529$1091 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P2.$verific$rd_reg$b22.vhd:1529$1096 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P2.$verific$datao_reg$b22.vhd:1529$1098 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P2.$verific$addr_reg$b22.vhd:1529$1095 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P2.$verific$IR_reg$b22.vhd:1529$1088 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P2.$verific$B_reg$b22.vhd:1529$1090 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P1.$verific$wr_reg$b22.vhd:509$591 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P1.$verific$state_reg$b22.vhd:509$593 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P1.$verific$reg3_reg$b22.vhd:509$588 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P1.$verific$reg2_reg$b22.vhd:509$587 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P1.$verific$reg1_reg$b22.vhd:509$586 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P1.$verific$reg0_reg$b22.vhd:509$585 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P1.$verific$rd_reg$b22.vhd:509$590 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P1.$verific$IR_reg$b22.vhd:509$582 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P1.$verific$datao_reg$b22.vhd:509$592 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P1.$verific$addr_reg$b22.vhd:509$589 ($aldff) from module b22.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 22 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~71 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

3.11.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).
Found FSM state register b22.P1.d.
Found FSM state register b22.P2.d.
Found FSM state register b22.P3.d.

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\P1.d' from module `\b22'.
  found $adff cell for state register: $flatten\P1.$verific$d_reg$b22.vhd:509$583
  root of input selection tree: $flatten\P1.$verific$n11472$388
  found reset state: 0 (from async reset)
  found ctrl input: \P1.state
  found ctrl input: $flatten\P1.$verific$n341$234 [0]
  found ctrl input: $flatten\P1.$verific$n10346$205
  found ctrl input: $flatten\P1.$verific$n1405$132
  found ctrl input: $flatten\P1.$verific$n1440$133
  found ctrl input: $flatten\P1.$verific$n1474$134
  found ctrl input: $flatten\P1.$verific$n1475$135
  found ctrl input: $flatten\P1.$verific$n1476$136
  found ctrl input: $flatten\P1.$verific$n1477$137
  found state code: 1
  found state code: 2
  found state code: 3
  found ctrl input: \P1.B
  ctrl inputs: { \P1.B \P1.state $flatten\P1.$verific$n1405$132 $flatten\P1.$verific$n1440$133 $flatten\P1.$verific$n1474$134 $flatten\P1.$verific$n1475$135 $flatten\P1.$verific$n1476$136 $flatten\P1.$verific$n1477$137 $flatten\P1.$verific$n10346$205 $flatten\P1.$verific$n341$234 [0] }
  ctrl outputs: $flatten\P1.$verific$n11472$388
  transition:          0 10'-0-------- ->          0 0
  transition:          0 10'-100000000 ->          0 0
  transition:          0 10'-100000100 ->          0 0
  transition:          0 10'-100001-00 ->          1 1
  transition:          0 10'-10001--00 ->          2 2
  transition:          0 10'-1001---00 ->          3 3
  transition:          0 10'0101----00 ->          0 0
  transition:          0 10'1101----00 ->          3 3
  transition:          0 10'011-----00 ->          3 3
  transition:          0 10'111-----00 ->          0 0
  transition:          0 10'-1------10 ->          0 0
  transition:          0 10'-1-------1 ->          0 0
  transition:          2 10'-0-------- ->          2 2
  transition:          2 10'-100000000 ->          2 2
  transition:          2 10'-100000100 ->          0 0
  transition:          2 10'-100001-00 ->          1 1
  transition:          2 10'-10001--00 ->          2 2
  transition:          2 10'-1001---00 ->          3 3
  transition:          2 10'0101----00 ->          2 2
  transition:          2 10'1101----00 ->          3 3
  transition:          2 10'011-----00 ->          3 3
  transition:          2 10'111-----00 ->          2 2
  transition:          2 10'-1------10 ->          2 2
  transition:          2 10'-1-------1 ->          2 2
  transition:          1 10'-0-------- ->          1 1
  transition:          1 10'-100000000 ->          1 1
  transition:          1 10'-100000100 ->          0 0
  transition:          1 10'-100001-00 ->          1 1
  transition:          1 10'-10001--00 ->          2 2
  transition:          1 10'-1001---00 ->          3 3
  transition:          1 10'0101----00 ->          1 1
  transition:          1 10'1101----00 ->          3 3
  transition:          1 10'011-----00 ->          3 3
  transition:          1 10'111-----00 ->          1 1
  transition:          1 10'-1------10 ->          1 1
  transition:          1 10'-1-------1 ->          1 1
  transition:          3 10'-0-------- ->          3 3
  transition:          3 10'-100000000 ->          3 3
  transition:          3 10'-100000100 ->          0 0
  transition:          3 10'-100001-00 ->          1 1
  transition:          3 10'-10001--00 ->          2 2
  transition:          3 10'-1001---00 ->          3 3
  transition:          3 10'0101----00 ->          3 3
  transition:          3 10'1101----00 ->          3 3
  transition:          3 10'011-----00 ->          3 3
  transition:          3 10'111-----00 ->          3 3
  transition:          3 10'-1------10 ->          3 3
  transition:          3 10'-1-------1 ->          3 3
Extracting FSM `\P2.d' from module `\b22'.
  found $adff cell for state register: $flatten\P2.$verific$d_reg$b22.vhd:1529$1089
  root of input selection tree: $flatten\P2.$verific$n11479$892
  found reset state: 0 (from async reset)
  found ctrl input: \P2.state
  found ctrl input: $flatten\P2.$verific$n341$737 [0]
  found ctrl input: $flatten\P2.$verific$n10346$708
  found ctrl input: $flatten\P2.$verific$n1405$635
  found ctrl input: $flatten\P2.$verific$n1440$636
  found ctrl input: $flatten\P2.$verific$n1474$637
  found ctrl input: $flatten\P2.$verific$n1475$638
  found ctrl input: $flatten\P2.$verific$n1476$639
  found ctrl input: $flatten\P2.$verific$n1477$640
  found state code: 1
  found state code: 2
  found state code: 3
  found ctrl input: \P2.B
  ctrl inputs: { \P2.B \P2.state $flatten\P2.$verific$n1405$635 $flatten\P2.$verific$n1440$636 $flatten\P2.$verific$n1474$637 $flatten\P2.$verific$n1475$638 $flatten\P2.$verific$n1476$639 $flatten\P2.$verific$n1477$640 $flatten\P2.$verific$n10346$708 $flatten\P2.$verific$n341$737 [0] }
  ctrl outputs: $flatten\P2.$verific$n11479$892
  transition:          0 10'-0-------- ->          0 0
  transition:          0 10'-100000000 ->          0 0
  transition:          0 10'-100000100 ->          0 0
  transition:          0 10'-100001-00 ->          1 1
  transition:          0 10'-10001--00 ->          2 2
  transition:          0 10'-1001---00 ->          3 3
  transition:          0 10'0101----00 ->          0 0
  transition:          0 10'1101----00 ->          3 3
  transition:          0 10'011-----00 ->          3 3
  transition:          0 10'111-----00 ->          0 0
  transition:          0 10'-1------10 ->          0 0
  transition:          0 10'-1-------1 ->          0 0
  transition:          2 10'-0-------- ->          2 2
  transition:          2 10'-100000000 ->          2 2
  transition:          2 10'-100000100 ->          0 0
  transition:          2 10'-100001-00 ->          1 1
  transition:          2 10'-10001--00 ->          2 2
  transition:          2 10'-1001---00 ->          3 3
  transition:          2 10'0101----00 ->          2 2
  transition:          2 10'1101----00 ->          3 3
  transition:          2 10'011-----00 ->          3 3
  transition:          2 10'111-----00 ->          2 2
  transition:          2 10'-1------10 ->          2 2
  transition:          2 10'-1-------1 ->          2 2
  transition:          1 10'-0-------- ->          1 1
  transition:          1 10'-100000000 ->          1 1
  transition:          1 10'-100000100 ->          0 0
  transition:          1 10'-100001-00 ->          1 1
  transition:          1 10'-10001--00 ->          2 2
  transition:          1 10'-1001---00 ->          3 3
  transition:          1 10'0101----00 ->          1 1
  transition:          1 10'1101----00 ->          3 3
  transition:          1 10'011-----00 ->          3 3
  transition:          1 10'111-----00 ->          1 1
  transition:          1 10'-1------10 ->          1 1
  transition:          1 10'-1-------1 ->          1 1
  transition:          3 10'-0-------- ->          3 3
  transition:          3 10'-100000000 ->          3 3
  transition:          3 10'-100000100 ->          0 0
  transition:          3 10'-100001-00 ->          1 1
  transition:          3 10'-10001--00 ->          2 2
  transition:          3 10'-1001---00 ->          3 3
  transition:          3 10'0101----00 ->          3 3
  transition:          3 10'1101----00 ->          3 3
  transition:          3 10'011-----00 ->          3 3
  transition:          3 10'111-----00 ->          3 3
  transition:          3 10'-1------10 ->          3 3
  transition:          3 10'-1-------1 ->          3 3
Extracting FSM `\P3.d' from module `\b22'.
  found $adff cell for state register: $flatten\P3.$verific$d_reg$b22.vhd:1019$1609
  root of input selection tree: $flatten\P3.$verific$n11328$1397
  found reset state: 0 (from async reset)
  found ctrl input: \P3.state
  found ctrl input: $flatten\P3.$verific$n341$1240 [0]
  found ctrl input: $flatten\P3.$verific$n10195$1213
  found ctrl input: $flatten\P3.$verific$n1406$1140
  found ctrl input: $flatten\P3.$verific$n1441$1141
  found ctrl input: $flatten\P3.$verific$n1475$1142
  found ctrl input: $flatten\P3.$verific$n1476$1143
  found ctrl input: $flatten\P3.$verific$n1477$1144
  found ctrl input: $flatten\P3.$verific$n1478$1145
  found state code: 1
  found state code: 2
  found state code: 3
  found ctrl input: \P3.B
  ctrl inputs: { \P3.B \P3.state $flatten\P3.$verific$n1406$1140 $flatten\P3.$verific$n1441$1141 $flatten\P3.$verific$n1475$1142 $flatten\P3.$verific$n1476$1143 $flatten\P3.$verific$n1477$1144 $flatten\P3.$verific$n1478$1145 $flatten\P3.$verific$n10195$1213 $flatten\P3.$verific$n341$1240 [0] }
  ctrl outputs: $flatten\P3.$verific$n11328$1397
  transition:          0 10'-0-------- ->          0 0
  transition:          0 10'-100000000 ->          0 0
  transition:          0 10'-100000100 ->          0 0
  transition:          0 10'-100001-00 ->          1 1
  transition:          0 10'-10001--00 ->          2 2
  transition:          0 10'-1001---00 ->          3 3
  transition:          0 10'0101----00 ->          0 0
  transition:          0 10'1101----00 ->          3 3
  transition:          0 10'011-----00 ->          3 3
  transition:          0 10'111-----00 ->          0 0
  transition:          0 10'-1------10 ->          0 0
  transition:          0 10'-1-------1 ->          0 0
  transition:          2 10'-0-------- ->          2 2
  transition:          2 10'-100000000 ->          2 2
  transition:          2 10'-100000100 ->          0 0
  transition:          2 10'-100001-00 ->          1 1
  transition:          2 10'-10001--00 ->          2 2
  transition:          2 10'-1001---00 ->          3 3
  transition:          2 10'0101----00 ->          2 2
  transition:          2 10'1101----00 ->          3 3
  transition:          2 10'011-----00 ->          3 3
  transition:          2 10'111-----00 ->          2 2
  transition:          2 10'-1------10 ->          2 2
  transition:          2 10'-1-------1 ->          2 2
  transition:          1 10'-0-------- ->          1 1
  transition:          1 10'-100000000 ->          1 1
  transition:          1 10'-100000100 ->          0 0
  transition:          1 10'-100001-00 ->          1 1
  transition:          1 10'-10001--00 ->          2 2
  transition:          1 10'-1001---00 ->          3 3
  transition:          1 10'0101----00 ->          1 1
  transition:          1 10'1101----00 ->          3 3
  transition:          1 10'011-----00 ->          3 3
  transition:          1 10'111-----00 ->          1 1
  transition:          1 10'-1------10 ->          1 1
  transition:          1 10'-1-------1 ->          1 1
  transition:          3 10'-0-------- ->          3 3
  transition:          3 10'-100000000 ->          3 3
  transition:          3 10'-100000100 ->          0 0
  transition:          3 10'-100001-00 ->          1 1
  transition:          3 10'-10001--00 ->          2 2
  transition:          3 10'-1001---00 ->          3 3
  transition:          3 10'0101----00 ->          3 3
  transition:          3 10'1101----00 ->          3 3
  transition:          3 10'011-----00 ->          3 3
  transition:          3 10'111-----00 ->          3 3
  transition:          3 10'-1------10 ->          3 3
  transition:          3 10'-1-------1 ->          3 3

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\P3.d$1675' from module `\b22'.
  Merging pattern 10'-100000000 and 10'-100000100 from group (0 0 0).
  Merging pattern 10'-100000100 and 10'-100000000 from group (0 0 0).
  Merging pattern 10'0101----00 and 10'1101----00 from group (3 3 3).
  Merging pattern 10'1101----00 and 10'0101----00 from group (3 3 3).
  Merging pattern 10'011-----00 and 10'111-----00 from group (3 3 3).
  Merging pattern 10'111-----00 and 10'011-----00 from group (3 3 3).
Optimizing FSM `$fsm$\P2.d$1673' from module `\b22'.
  Merging pattern 10'-100000000 and 10'-100000100 from group (0 0 0).
  Merging pattern 10'-100000100 and 10'-100000000 from group (0 0 0).
  Merging pattern 10'0101----00 and 10'1101----00 from group (3 3 3).
  Merging pattern 10'1101----00 and 10'0101----00 from group (3 3 3).
  Merging pattern 10'011-----00 and 10'111-----00 from group (3 3 3).
  Merging pattern 10'111-----00 and 10'011-----00 from group (3 3 3).
Optimizing FSM `$fsm$\P1.d$1671' from module `\b22'.
  Merging pattern 10'-100000000 and 10'-100000100 from group (0 0 0).
  Merging pattern 10'-100000100 and 10'-100000000 from group (0 0 0).
  Merging pattern 10'0101----00 and 10'1101----00 from group (3 3 3).
  Merging pattern 10'1101----00 and 10'0101----00 from group (3 3 3).
  Merging pattern 10'011-----00 and 10'111-----00 from group (3 3 3).
  Merging pattern 10'111-----00 and 10'011-----00 from group (3 3 3).

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 9 unused cells and 9 unused wires.
<suppressed ~10 debug messages>

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\P1.d$1671' from module `\b22'.
Optimizing FSM `$fsm$\P2.d$1673' from module `\b22'.
Optimizing FSM `$fsm$\P3.d$1675' from module `\b22'.

yosys> fsm_recode -encoding binary

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\P1.d$1671' from module `\b22' using `auto' encoding:
  mapping auto encoding to `binary` for this FSM.
  00000000000000000000000000000000 -> 00
  00000000000000000000000000000010 -> 01
  00000000000000000000000000000001 -> 10
  00000000000000000000000000000011 -> 11
Recoding FSM `$fsm$\P2.d$1673' from module `\b22' using `auto' encoding:
  mapping auto encoding to `binary` for this FSM.
  00000000000000000000000000000000 -> 00
  00000000000000000000000000000010 -> 01
  00000000000000000000000000000001 -> 10
  00000000000000000000000000000011 -> 11
Recoding FSM `$fsm$\P3.d$1675' from module `\b22' using `auto' encoding:
  mapping auto encoding to `binary` for this FSM.
  00000000000000000000000000000000 -> 00
  00000000000000000000000000000010 -> 01
  00000000000000000000000000000001 -> 10
  00000000000000000000000000000011 -> 11

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\P1.d$1671' from module `b22':
-------------------------------------

  Information on FSM $fsm$\P1.d$1671 (\P1.d):

  Number of input signals:   10
  Number of output signals:  32
  Number of state bits:       2

  Input signals:
    0: $flatten\P1.$verific$n341$234 [0]
    1: $flatten\P1.$verific$n10346$205
    2: $flatten\P1.$verific$n1477$137
    3: $flatten\P1.$verific$n1476$136
    4: $flatten\P1.$verific$n1475$135
    5: $flatten\P1.$verific$n1474$134
    6: $flatten\P1.$verific$n1440$133
    7: $flatten\P1.$verific$n1405$132
    8: \P1.state
    9: \P1.B

  Output signals:
    0: $flatten\P1.$verific$n11472$388 [0]
    1: $flatten\P1.$verific$n11472$388 [1]
    2: $flatten\P1.$verific$n11472$388 [2]
    3: $flatten\P1.$verific$n11472$388 [3]
    4: $flatten\P1.$verific$n11472$388 [4]
    5: $flatten\P1.$verific$n11472$388 [5]
    6: $flatten\P1.$verific$n11472$388 [6]
    7: $flatten\P1.$verific$n11472$388 [7]
    8: $flatten\P1.$verific$n11472$388 [8]
    9: $flatten\P1.$verific$n11472$388 [9]
   10: $flatten\P1.$verific$n11472$388 [10]
   11: $flatten\P1.$verific$n11472$388 [11]
   12: $flatten\P1.$verific$n11472$388 [12]
   13: $flatten\P1.$verific$n11472$388 [13]
   14: $flatten\P1.$verific$n11472$388 [14]
   15: $flatten\P1.$verific$n11472$388 [15]
   16: $flatten\P1.$verific$n11472$388 [16]
   17: $flatten\P1.$verific$n11472$388 [17]
   18: $flatten\P1.$verific$n11472$388 [18]
   19: $flatten\P1.$verific$n11472$388 [19]
   20: $flatten\P1.$verific$n11472$388 [20]
   21: $flatten\P1.$verific$n11472$388 [21]
   22: $flatten\P1.$verific$n11472$388 [22]
   23: $flatten\P1.$verific$n11472$388 [23]
   24: $flatten\P1.$verific$n11472$388 [24]
   25: $flatten\P1.$verific$n11472$388 [25]
   26: $flatten\P1.$verific$n11472$388 [26]
   27: $flatten\P1.$verific$n11472$388 [27]
   28: $flatten\P1.$verific$n11472$388 [28]
   29: $flatten\P1.$verific$n11472$388 [29]
   30: $flatten\P1.$verific$n11472$388 [30]
   31: $flatten\P1.$verific$n11472$388 [31]

  State encoding:
    0:       2'00  <RESET STATE>
    1:       2'01
    2:       2'10
    3:       2'11

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 10'-100000-00   ->     0 0
      1:     0 10'0101----00   ->     0 0
      2:     0 10'111-----00   ->     0 0
      3:     0 10'-1------10   ->     0 0
      4:     0 10'-1-------1   ->     0 0
      5:     0 10'-0--------   ->     0 0
      6:     0 10'-10001--00   ->     1 2
      7:     0 10'-100001-00   ->     2 1
      8:     0 10'-1001---00   ->     3 3
      9:     0 10'1101----00   ->     3 3
     10:     0 10'011-----00   ->     3 3
     11:     1 10'-100000100   ->     0 0
     12:     1 10'-100000000   ->     1 2
     13:     1 10'-10001--00   ->     1 2
     14:     1 10'0101----00   ->     1 2
     15:     1 10'111-----00   ->     1 2
     16:     1 10'-1------10   ->     1 2
     17:     1 10'-1-------1   ->     1 2
     18:     1 10'-0--------   ->     1 2
     19:     1 10'-100001-00   ->     2 1
     20:     1 10'-1001---00   ->     3 3
     21:     1 10'1101----00   ->     3 3
     22:     1 10'011-----00   ->     3 3
     23:     2 10'-100000100   ->     0 0
     24:     2 10'-10001--00   ->     1 2
     25:     2 10'-100000000   ->     2 1
     26:     2 10'-100001-00   ->     2 1
     27:     2 10'0101----00   ->     2 1
     28:     2 10'111-----00   ->     2 1
     29:     2 10'-1------10   ->     2 1
     30:     2 10'-1-------1   ->     2 1
     31:     2 10'-0--------   ->     2 1
     32:     2 10'-1001---00   ->     3 3
     33:     2 10'1101----00   ->     3 3
     34:     2 10'011-----00   ->     3 3
     35:     3 10'-100000100   ->     0 0
     36:     3 10'-10001--00   ->     1 2
     37:     3 10'-100001-00   ->     2 1
     38:     3 10'-100000000   ->     3 3
     39:     3 10'-1001---00   ->     3 3
     40:     3 10'-101----00   ->     3 3
     41:     3 10'-11-----00   ->     3 3
     42:     3 10'-1------10   ->     3 3
     43:     3 10'-1-------1   ->     3 3
     44:     3 10'-0--------   ->     3 3

-------------------------------------

FSM `$fsm$\P2.d$1673' from module `b22':
-------------------------------------

  Information on FSM $fsm$\P2.d$1673 (\P2.d):

  Number of input signals:   10
  Number of output signals:  32
  Number of state bits:       2

  Input signals:
    0: $flatten\P2.$verific$n341$737 [0]
    1: $flatten\P2.$verific$n10346$708
    2: $flatten\P2.$verific$n1477$640
    3: $flatten\P2.$verific$n1476$639
    4: $flatten\P2.$verific$n1475$638
    5: $flatten\P2.$verific$n1474$637
    6: $flatten\P2.$verific$n1440$636
    7: $flatten\P2.$verific$n1405$635
    8: \P2.state
    9: \P2.B

  Output signals:
    0: $flatten\P2.$verific$n11479$892 [0]
    1: $flatten\P2.$verific$n11479$892 [1]
    2: $flatten\P2.$verific$n11479$892 [2]
    3: $flatten\P2.$verific$n11479$892 [3]
    4: $flatten\P2.$verific$n11479$892 [4]
    5: $flatten\P2.$verific$n11479$892 [5]
    6: $flatten\P2.$verific$n11479$892 [6]
    7: $flatten\P2.$verific$n11479$892 [7]
    8: $flatten\P2.$verific$n11479$892 [8]
    9: $flatten\P2.$verific$n11479$892 [9]
   10: $flatten\P2.$verific$n11479$892 [10]
   11: $flatten\P2.$verific$n11479$892 [11]
   12: $flatten\P2.$verific$n11479$892 [12]
   13: $flatten\P2.$verific$n11479$892 [13]
   14: $flatten\P2.$verific$n11479$892 [14]
   15: $flatten\P2.$verific$n11479$892 [15]
   16: $flatten\P2.$verific$n11479$892 [16]
   17: $flatten\P2.$verific$n11479$892 [17]
   18: $flatten\P2.$verific$n11479$892 [18]
   19: $flatten\P2.$verific$n11479$892 [19]
   20: $flatten\P2.$verific$n11479$892 [20]
   21: $flatten\P2.$verific$n11479$892 [21]
   22: $flatten\P2.$verific$n11479$892 [22]
   23: $flatten\P2.$verific$n11479$892 [23]
   24: $flatten\P2.$verific$n11479$892 [24]
   25: $flatten\P2.$verific$n11479$892 [25]
   26: $flatten\P2.$verific$n11479$892 [26]
   27: $flatten\P2.$verific$n11479$892 [27]
   28: $flatten\P2.$verific$n11479$892 [28]
   29: $flatten\P2.$verific$n11479$892 [29]
   30: $flatten\P2.$verific$n11479$892 [30]
   31: $flatten\P2.$verific$n11479$892 [31]

  State encoding:
    0:       2'00  <RESET STATE>
    1:       2'01
    2:       2'10
    3:       2'11

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 10'-100000-00   ->     0 0
      1:     0 10'0101----00   ->     0 0
      2:     0 10'111-----00   ->     0 0
      3:     0 10'-1------10   ->     0 0
      4:     0 10'-1-------1   ->     0 0
      5:     0 10'-0--------   ->     0 0
      6:     0 10'-10001--00   ->     1 2
      7:     0 10'-100001-00   ->     2 1
      8:     0 10'-1001---00   ->     3 3
      9:     0 10'1101----00   ->     3 3
     10:     0 10'011-----00   ->     3 3
     11:     1 10'-100000100   ->     0 0
     12:     1 10'-100000000   ->     1 2
     13:     1 10'-10001--00   ->     1 2
     14:     1 10'0101----00   ->     1 2
     15:     1 10'111-----00   ->     1 2
     16:     1 10'-1------10   ->     1 2
     17:     1 10'-1-------1   ->     1 2
     18:     1 10'-0--------   ->     1 2
     19:     1 10'-100001-00   ->     2 1
     20:     1 10'-1001---00   ->     3 3
     21:     1 10'1101----00   ->     3 3
     22:     1 10'011-----00   ->     3 3
     23:     2 10'-100000100   ->     0 0
     24:     2 10'-10001--00   ->     1 2
     25:     2 10'-100000000   ->     2 1
     26:     2 10'-100001-00   ->     2 1
     27:     2 10'0101----00   ->     2 1
     28:     2 10'111-----00   ->     2 1
     29:     2 10'-1------10   ->     2 1
     30:     2 10'-1-------1   ->     2 1
     31:     2 10'-0--------   ->     2 1
     32:     2 10'-1001---00   ->     3 3
     33:     2 10'1101----00   ->     3 3
     34:     2 10'011-----00   ->     3 3
     35:     3 10'-100000100   ->     0 0
     36:     3 10'-10001--00   ->     1 2
     37:     3 10'-100001-00   ->     2 1
     38:     3 10'-100000000   ->     3 3
     39:     3 10'-1001---00   ->     3 3
     40:     3 10'-101----00   ->     3 3
     41:     3 10'-11-----00   ->     3 3
     42:     3 10'-1------10   ->     3 3
     43:     3 10'-1-------1   ->     3 3
     44:     3 10'-0--------   ->     3 3

-------------------------------------

FSM `$fsm$\P3.d$1675' from module `b22':
-------------------------------------

  Information on FSM $fsm$\P3.d$1675 (\P3.d):

  Number of input signals:   10
  Number of output signals:  32
  Number of state bits:       2

  Input signals:
    0: $flatten\P3.$verific$n341$1240 [0]
    1: $flatten\P3.$verific$n10195$1213
    2: $flatten\P3.$verific$n1478$1145
    3: $flatten\P3.$verific$n1477$1144
    4: $flatten\P3.$verific$n1476$1143
    5: $flatten\P3.$verific$n1475$1142
    6: $flatten\P3.$verific$n1441$1141
    7: $flatten\P3.$verific$n1406$1140
    8: \P3.state
    9: \P3.B

  Output signals:
    0: $flatten\P3.$verific$n11328$1397 [0]
    1: $flatten\P3.$verific$n11328$1397 [1]
    2: $flatten\P3.$verific$n11328$1397 [2]
    3: $flatten\P3.$verific$n11328$1397 [3]
    4: $flatten\P3.$verific$n11328$1397 [4]
    5: $flatten\P3.$verific$n11328$1397 [5]
    6: $flatten\P3.$verific$n11328$1397 [6]
    7: $flatten\P3.$verific$n11328$1397 [7]
    8: $flatten\P3.$verific$n11328$1397 [8]
    9: $flatten\P3.$verific$n11328$1397 [9]
   10: $flatten\P3.$verific$n11328$1397 [10]
   11: $flatten\P3.$verific$n11328$1397 [11]
   12: $flatten\P3.$verific$n11328$1397 [12]
   13: $flatten\P3.$verific$n11328$1397 [13]
   14: $flatten\P3.$verific$n11328$1397 [14]
   15: $flatten\P3.$verific$n11328$1397 [15]
   16: $flatten\P3.$verific$n11328$1397 [16]
   17: $flatten\P3.$verific$n11328$1397 [17]
   18: $flatten\P3.$verific$n11328$1397 [18]
   19: $flatten\P3.$verific$n11328$1397 [19]
   20: $flatten\P3.$verific$n11328$1397 [20]
   21: $flatten\P3.$verific$n11328$1397 [21]
   22: $flatten\P3.$verific$n11328$1397 [22]
   23: $flatten\P3.$verific$n11328$1397 [23]
   24: $flatten\P3.$verific$n11328$1397 [24]
   25: $flatten\P3.$verific$n11328$1397 [25]
   26: $flatten\P3.$verific$n11328$1397 [26]
   27: $flatten\P3.$verific$n11328$1397 [27]
   28: $flatten\P3.$verific$n11328$1397 [28]
   29: $flatten\P3.$verific$n11328$1397 [29]
   30: $flatten\P3.$verific$n11328$1397 [30]
   31: $flatten\P3.$verific$n11328$1397 [31]

  State encoding:
    0:       2'00  <RESET STATE>
    1:       2'01
    2:       2'10
    3:       2'11

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 10'-100000-00   ->     0 0
      1:     0 10'0101----00   ->     0 0
      2:     0 10'111-----00   ->     0 0
      3:     0 10'-1------10   ->     0 0
      4:     0 10'-1-------1   ->     0 0
      5:     0 10'-0--------   ->     0 0
      6:     0 10'-10001--00   ->     1 2
      7:     0 10'-100001-00   ->     2 1
      8:     0 10'-1001---00   ->     3 3
      9:     0 10'1101----00   ->     3 3
     10:     0 10'011-----00   ->     3 3
     11:     1 10'-100000100   ->     0 0
     12:     1 10'-100000000   ->     1 2
     13:     1 10'-10001--00   ->     1 2
     14:     1 10'0101----00   ->     1 2
     15:     1 10'111-----00   ->     1 2
     16:     1 10'-1------10   ->     1 2
     17:     1 10'-1-------1   ->     1 2
     18:     1 10'-0--------   ->     1 2
     19:     1 10'-100001-00   ->     2 1
     20:     1 10'-1001---00   ->     3 3
     21:     1 10'1101----00   ->     3 3
     22:     1 10'011-----00   ->     3 3
     23:     2 10'-100000100   ->     0 0
     24:     2 10'-10001--00   ->     1 2
     25:     2 10'-100000000   ->     2 1
     26:     2 10'-100001-00   ->     2 1
     27:     2 10'0101----00   ->     2 1
     28:     2 10'111-----00   ->     2 1
     29:     2 10'-1------10   ->     2 1
     30:     2 10'-1-------1   ->     2 1
     31:     2 10'-0--------   ->     2 1
     32:     2 10'-1001---00   ->     3 3
     33:     2 10'1101----00   ->     3 3
     34:     2 10'011-----00   ->     3 3
     35:     3 10'-100000100   ->     0 0
     36:     3 10'-10001--00   ->     1 2
     37:     3 10'-100001-00   ->     2 1
     38:     3 10'-100000000   ->     3 3
     39:     3 10'-1001---00   ->     3 3
     40:     3 10'-101----00   ->     3 3
     41:     3 10'-11-----00   ->     3 3
     42:     3 10'-1------10   ->     3 3
     43:     3 10'-1-------1   ->     3 3
     44:     3 10'-0--------   ->     3 3

-------------------------------------

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\P1.d$1671' from module `\b22'.
Mapping FSM `$fsm$\P2.d$1673' from module `\b22'.
Mapping FSM `$fsm$\P3.d$1675' from module `\b22'.

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~21 debug messages>

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
<suppressed ~486 debug messages>
Removed a total of 162 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~71 debug messages>

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\P3.$verific$reg3_reg$b22.vhd:1019$1614 ($adff) from module b22 (D = $flatten\P3.$verific$n11034$1392, Q = \P3.reg3).
Adding EN signal on $flatten\P3.$verific$reg2_reg$b22.vhd:1019$1613 ($adff) from module b22 (D = $flatten\P3.$verific$n10128$1365, Q = \P3.reg2).
Adding EN signal on $flatten\P3.$verific$reg1_reg$b22.vhd:1019$1612 ($adff) from module b22 (D = $flatten\P3.$verific$n10095$1364, Q = \P3.reg1).
Adding EN signal on $flatten\P3.$verific$reg0_reg$b22.vhd:1019$1611 ($adff) from module b22 (D = $flatten\P3.$verific$n10062$1363, Q = \P3.reg0).
Adding EN signal on $flatten\P3.$verific$B_reg$b22.vhd:1019$1610 ($adff) from module b22 (D = $flatten\P3.$verific$n10835$1219, Q = \P3.B).
Adding EN signal on $flatten\P2.$verific$reg3_reg$b22.vhd:1529$1094 ($adff) from module b22 (D = $flatten\P2.$verific$n10312$861 [2:0], Q = \P2.reg3 [2:0]).
Adding EN signal on $flatten\P2.$verific$reg3_reg$b22.vhd:1529$1094 ($adff) from module b22 (D = $flatten\P2.$verific$n11185$887 [31:3], Q = \P2.reg3 [31:3]).
Adding EN signal on $flatten\P2.$verific$reg2_reg$b22.vhd:1529$1093 ($adff) from module b22 (D = $flatten\P2.$verific$n10279$860, Q = \P2.reg2).
Adding EN signal on $flatten\P2.$verific$reg1_reg$b22.vhd:1529$1092 ($adff) from module b22 (D = $flatten\P2.$verific$n10246$859, Q = \P2.reg1).
Adding EN signal on $flatten\P2.$verific$reg0_reg$b22.vhd:1529$1091 ($adff) from module b22 (D = $flatten\P2.$verific$n10213$858, Q = \P2.reg0).
Adding EN signal on $flatten\P2.$verific$datao_reg$b22.vhd:1529$1098 ($adff) from module b22 (D = { $flatten\P2.$verific$add_570$b22.vhd:1490$1020 $flatten\P2.$verific$n10521$870 [0] }, Q = \P2.datao).
Adding EN signal on $flatten\P2.$verific$B_reg$b22.vhd:1529$1090 ($adff) from module b22 (D = $flatten\P2.$verific$n10986$716, Q = \P2.B).
Adding EN signal on $flatten\P1.$verific$reg3_reg$b22.vhd:509$588 ($adff) from module b22 (D = $flatten\P1.$verific$n10312$358 [2:0], Q = \P1.reg3 [2:0]).
Adding EN signal on $flatten\P1.$verific$reg3_reg$b22.vhd:509$588 ($adff) from module b22 (D = $flatten\P1.$verific$n11178$383 [31:3], Q = \P1.reg3 [31:3]).
Adding EN signal on $flatten\P1.$verific$reg2_reg$b22.vhd:509$587 ($adff) from module b22 (D = $flatten\P1.$verific$n10279$357, Q = \P1.reg2).
Adding EN signal on $flatten\P1.$verific$reg1_reg$b22.vhd:509$586 ($adff) from module b22 (D = $flatten\P1.$verific$n10246$356, Q = \P1.reg1).
Adding EN signal on $flatten\P1.$verific$reg0_reg$b22.vhd:509$585 ($adff) from module b22 (D = $flatten\P1.$verific$n10213$355, Q = \P1.reg0).
Adding EN signal on $flatten\P1.$verific$datao_reg$b22.vhd:509$592 ($adff) from module b22 (D = { $flatten\P1.$verific$add_570$b22.vhd:470$516 $flatten\P1.$verific$n10514$366 [0] }, Q = \P1.datao).
Adding EN signal on $flatten\P1.$verific$B_reg$b22.vhd:509$584 ($adff) from module b22 (D = $flatten\P1.$verific$n10979$213, Q = \P1.B).

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 69 unused cells and 225 unused wires.
<suppressed ~70 debug messages>

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

3.13.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~60 debug messages>

yosys> opt_reduce

3.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
<suppressed ~78 debug messages>
Removed a total of 26 cells.

yosys> opt_dff -sat

3.13.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 2 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 3 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 4 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 5 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 6 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 7 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 8 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 9 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 10 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 11 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 12 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 13 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 14 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 15 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 16 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 17 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 18 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 19 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 20 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 21 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 22 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 23 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 24 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 25 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 26 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 27 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 28 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 29 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 30 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 31 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 2 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 3 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 4 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 5 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 6 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 7 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 8 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 9 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 10 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 11 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 12 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 13 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 14 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 15 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 16 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 17 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 18 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 19 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 20 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 21 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 22 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 23 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 24 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 25 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 26 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 27 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 28 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 29 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 30 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 31 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 2 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 3 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 4 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 5 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 6 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 7 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 8 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 9 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 10 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 11 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 12 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 13 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 14 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 15 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 16 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 17 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 18 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 19 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 20 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 21 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 22 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 23 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 24 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 25 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 26 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 27 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 28 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 29 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 30 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 31 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.

yosys> opt_clean

3.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 26 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

3.13.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~60 debug messages>

yosys> opt_reduce

3.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..

yosys> opt_expr

3.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

3.13.23. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 22) from port A of cell b22.$verific$sub_4$b22.vhd:1596$59 ($sub).
Removed top 2 bits (of 22) from port B of cell b22.$verific$sub_4$b22.vhd:1596$59 ($sub).
Removed top 2 bits (of 22) from port Y of cell b22.$verific$sub_4$b22.vhd:1596$59 ($sub).
Removed top 1 bits (of 21) from port A of cell b22.$verific$sub_4$b22.vhd:1596$59 ($sub).
Removed top 1 bits (of 20) from port A of cell b22.$verific$LessThan_16$b22.vhd:1601$72 ($lt).
Removed top 1 bits (of 20) from port A of cell b22.$verific$LessThan_21$b22.vhd:1602$77 ($lt).
Removed top 1 bits (of 20) from port A of cell b22.$verific$LessThan_22$b22.vhd:1602$78 ($lt).
Removed top 1 bits (of 33) from port Y of cell b22.$verific$sub_34$b22.vhd:1605$85 ($sub).
Removed top 1 bits (of 33) from port A of cell b22.$verific$sub_34$b22.vhd:1605$85 ($sub).
Removed top 1 bits (of 33) from port B of cell b22.$verific$sub_34$b22.vhd:1605$85 ($sub).
Removed top 3 bits (of 29) from FF cell b22.$auto$ff.cc:262:slice$2368 ($adffe).
Removed top 1 bits (of 2) from port B of cell b22.$auto$fsm_map.cc:215:map_fsm$2119 ($eq).
Removed top 1 bits (of 5) from port B of cell b22.$auto$fsm_map.cc:77:implement_pattern_cache$2087 ($eq).
Removed top 3 bits (of 32) from FF cell b22.$auto$ff.cc:262:slice$2334 ($adffe).
Removed top 1 bits (of 6) from port B of cell b22.$auto$fsm_map.cc:77:implement_pattern_cache$2077 ($eq).
Removed top 3 bits (of 33) from port Y of cell b22.$flatten\P1.$verific$sub_365$b22.vhd:362$510 ($sub).
Removed top 3 bits (of 33) from port A of cell b22.$flatten\P1.$verific$sub_365$b22.vhd:362$510 ($sub).
Removed top 3 bits (of 33) from port B of cell b22.$flatten\P1.$verific$sub_365$b22.vhd:362$510 ($sub).
Removed top 2 bits (of 32) from port Y of cell b22.$flatten\P1.$verific$add_283$b22.vhd:322$508 ($add).
Removed top 2 bits (of 32) from port A of cell b22.$flatten\P1.$verific$add_283$b22.vhd:322$508 ($add).
Removed top 2 bits (of 32) from port B of cell b22.$flatten\P1.$verific$add_283$b22.vhd:322$508 ($add).
Removed top 30 bits (of 32) from port A of cell b22.$flatten\P1.$verific$equal_179$b22.vhd:250$502 ($eq).
Removed top 30 bits (of 32) from port A of cell b22.$flatten\P1.$verific$equal_178$b22.vhd:249$501 ($eq).
Removed top 31 bits (of 32) from port A of cell b22.$flatten\P1.$verific$equal_177$b22.vhd:248$500 ($eq).
Removed top 32 bits (of 33) from port A of cell b22.$flatten\P1.$verific$sub_168$b22.vhd:247$497 ($sub).
Removed top 1 bits (of 33) from port Y of cell b22.$flatten\P1.$verific$sub_168$b22.vhd:247$497 ($sub).
Removed top 1 bits (of 33) from port B of cell b22.$flatten\P1.$verific$sub_168$b22.vhd:247$497 ($sub).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P1.$verific$mux_145$b22.vhd:230$491 ($mux).
Removed top 2 bits (of 3) from port A of cell b22.$flatten\P1.$verific$equal_143$b22.vhd:228$489 ($eq).
Removed top 1 bits (of 3) from port A of cell b22.$flatten\P1.$verific$equal_142$b22.vhd:227$488 ($eq).
Removed top 1 bits (of 3) from port A of cell b22.$flatten\P1.$verific$equal_141$b22.vhd:225$487 ($eq).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P1.$verific$mux_140$b22.vhd:224$486 ($mux).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P1.$verific$mux_138$b22.vhd:220$484 ($mux).
Removed top 2 bits (of 33) from port B of cell b22.$flatten\P1.$verific$sub_84$b22.vhd:153$466 ($sub).
Removed top 1 bits (of 33) from port Y of cell b22.$flatten\P1.$verific$sub_84$b22.vhd:153$466 ($sub).
Removed top 1 bits (of 33) from port A of cell b22.$flatten\P1.$verific$sub_84$b22.vhd:153$466 ($sub).
Removed top 1 bits (of 32) from port B of cell b22.$flatten\P1.$verific$LessThan_83$b22.vhd:152$465 ($lt).
Removed top 12 bits (of 32) from port A of cell b22.$flatten\P1.$verific$add_61$b22.vhd:117$453 ($add).
Removed top 12 bits (of 32) from port Y of cell b22.$flatten\P1.$verific$add_61$b22.vhd:117$453 ($add).
Removed top 12 bits (of 32) from port B of cell b22.$flatten\P1.$verific$add_61$b22.vhd:117$453 ($add).
Removed top 12 bits (of 32) from port A of cell b22.$flatten\P1.$verific$add_56$b22.vhd:114$451 ($add).
Removed top 12 bits (of 32) from port Y of cell b22.$flatten\P1.$verific$add_56$b22.vhd:114$451 ($add).
Removed top 12 bits (of 32) from port B of cell b22.$flatten\P1.$verific$add_56$b22.vhd:114$451 ($add).
Removed top 1 bits (of 3) from port Y of cell b22.$flatten\P1.$verific$add_44$b22.vhd:100$443 ($add).
Removed top 1 bits (of 3) from port A of cell b22.$flatten\P1.$verific$add_44$b22.vhd:100$443 ($add).
Removed top 25 bits (of 26) from port B of cell b22.$flatten\P1.$verific$add_39$b22.vhd:99$439 ($add).
Removed top 8 bits (of 9) from port Y of cell b22.$flatten\P1.$verific$add_36$b22.vhd:96$433 ($add).
Removed top 8 bits (of 9) from port A of cell b22.$flatten\P1.$verific$add_36$b22.vhd:96$433 ($add).
Removed top 9 bits (of 13) from port Y of cell b22.$flatten\P1.$verific$add_31$b22.vhd:94$426 ($add).
Removed top 9 bits (of 13) from port A of cell b22.$flatten\P1.$verific$add_31$b22.vhd:94$426 ($add).
Removed top 5 bits (of 8) from port Y of cell b22.$flatten\P1.$verific$add_26$b22.vhd:92$419 ($add).
Removed top 5 bits (of 8) from port A of cell b22.$flatten\P1.$verific$add_26$b22.vhd:92$419 ($add).
Removed top 3 bits (of 5) from port Y of cell b22.$flatten\P1.$verific$add_21$b22.vhd:90$412 ($add).
Removed top 3 bits (of 5) from port A of cell b22.$flatten\P1.$verific$add_21$b22.vhd:90$412 ($add).
Removed top 1 bits (of 33) from port Y of cell b22.$flatten\P1.$verific$unary_minus_15$b22.vhd:88$406 ($neg).
Removed top 1 bits (of 33) from port A of cell b22.$flatten\P1.$verific$unary_minus_15$b22.vhd:88$406 ($neg).
Removed top 1 bits (of 32) from port A of cell b22.$flatten\P1.$verific$LessThan_14$b22.vhd:87$405 ($lt).
Removed top 1 bits (of 2) from port B of cell b22.$auto$fsm_map.cc:215:map_fsm$1900 ($eq).
Removed top 1 bits (of 5) from port B of cell b22.$auto$fsm_map.cc:77:implement_pattern_cache$1868 ($eq).
Removed top 1 bits (of 6) from port B of cell b22.$auto$fsm_map.cc:77:implement_pattern_cache$1858 ($eq).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P2.$verific$mux_697$b22.vhd:1526$1072 ($mux).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P2.$verific$mux_678$b22.vhd:1525$1058 ($mux).
Removed top 3 bits (of 33) from port Y of cell b22.$flatten\P2.$verific$sub_365$b22.vhd:1382$1014 ($sub).
Removed top 3 bits (of 33) from port A of cell b22.$flatten\P2.$verific$sub_365$b22.vhd:1382$1014 ($sub).
Removed top 3 bits (of 33) from port B of cell b22.$flatten\P2.$verific$sub_365$b22.vhd:1382$1014 ($sub).
Removed top 2 bits (of 32) from port Y of cell b22.$flatten\P2.$verific$add_283$b22.vhd:1342$1012 ($add).
Removed top 2 bits (of 32) from port A of cell b22.$flatten\P2.$verific$add_283$b22.vhd:1342$1012 ($add).
Removed top 2 bits (of 32) from port B of cell b22.$flatten\P2.$verific$add_283$b22.vhd:1342$1012 ($add).
Removed top 30 bits (of 32) from port A of cell b22.$flatten\P2.$verific$equal_179$b22.vhd:1270$1006 ($eq).
Removed top 30 bits (of 32) from port A of cell b22.$flatten\P2.$verific$equal_178$b22.vhd:1269$1005 ($eq).
Removed top 31 bits (of 32) from port A of cell b22.$flatten\P2.$verific$equal_177$b22.vhd:1268$1004 ($eq).
Removed top 32 bits (of 33) from port A of cell b22.$flatten\P2.$verific$sub_168$b22.vhd:1267$1001 ($sub).
Removed top 1 bits (of 33) from port Y of cell b22.$flatten\P2.$verific$sub_168$b22.vhd:1267$1001 ($sub).
Removed top 1 bits (of 33) from port B of cell b22.$flatten\P2.$verific$sub_168$b22.vhd:1267$1001 ($sub).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P2.$verific$mux_145$b22.vhd:1250$995 ($mux).
Removed top 2 bits (of 3) from port A of cell b22.$flatten\P2.$verific$equal_143$b22.vhd:1248$993 ($eq).
Removed top 1 bits (of 3) from port A of cell b22.$flatten\P2.$verific$equal_142$b22.vhd:1247$992 ($eq).
Removed top 1 bits (of 3) from port A of cell b22.$flatten\P2.$verific$equal_141$b22.vhd:1245$991 ($eq).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P2.$verific$mux_140$b22.vhd:1244$990 ($mux).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P2.$verific$mux_138$b22.vhd:1240$988 ($mux).
Removed top 2 bits (of 33) from port B of cell b22.$flatten\P2.$verific$sub_84$b22.vhd:1173$970 ($sub).
Removed top 1 bits (of 33) from port Y of cell b22.$flatten\P2.$verific$sub_84$b22.vhd:1173$970 ($sub).
Removed top 1 bits (of 33) from port A of cell b22.$flatten\P2.$verific$sub_84$b22.vhd:1173$970 ($sub).
Removed top 1 bits (of 32) from port B of cell b22.$flatten\P2.$verific$LessThan_83$b22.vhd:1172$969 ($lt).
Removed top 12 bits (of 32) from port A of cell b22.$flatten\P2.$verific$add_61$b22.vhd:1137$957 ($add).
Removed top 12 bits (of 32) from port Y of cell b22.$flatten\P2.$verific$add_61$b22.vhd:1137$957 ($add).
Removed top 12 bits (of 32) from port B of cell b22.$flatten\P2.$verific$add_61$b22.vhd:1137$957 ($add).
Removed top 12 bits (of 32) from port A of cell b22.$flatten\P2.$verific$add_56$b22.vhd:1134$955 ($add).
Removed top 12 bits (of 32) from port Y of cell b22.$flatten\P2.$verific$add_56$b22.vhd:1134$955 ($add).
Removed top 12 bits (of 32) from port B of cell b22.$flatten\P2.$verific$add_56$b22.vhd:1134$955 ($add).
Removed top 1 bits (of 3) from port Y of cell b22.$flatten\P2.$verific$add_44$b22.vhd:1120$947 ($add).
Removed top 1 bits (of 3) from port A of cell b22.$flatten\P2.$verific$add_44$b22.vhd:1120$947 ($add).
Removed top 25 bits (of 26) from port B of cell b22.$flatten\P2.$verific$add_39$b22.vhd:1119$943 ($add).
Removed top 8 bits (of 9) from port Y of cell b22.$flatten\P2.$verific$add_36$b22.vhd:1116$937 ($add).
Removed top 8 bits (of 9) from port A of cell b22.$flatten\P2.$verific$add_36$b22.vhd:1116$937 ($add).
Removed top 9 bits (of 13) from port Y of cell b22.$flatten\P2.$verific$add_31$b22.vhd:1114$930 ($add).
Removed top 9 bits (of 13) from port A of cell b22.$flatten\P2.$verific$add_31$b22.vhd:1114$930 ($add).
Removed top 1 bits (of 6) from port B of cell b22.$auto$fsm_map.cc:77:implement_pattern_cache$2296 ($eq).
Removed top 5 bits (of 8) from port Y of cell b22.$flatten\P2.$verific$add_26$b22.vhd:1112$923 ($add).
Removed top 5 bits (of 8) from port A of cell b22.$flatten\P2.$verific$add_26$b22.vhd:1112$923 ($add).
Removed top 3 bits (of 5) from port Y of cell b22.$flatten\P2.$verific$add_21$b22.vhd:1110$916 ($add).
Removed top 3 bits (of 5) from port A of cell b22.$flatten\P2.$verific$add_21$b22.vhd:1110$916 ($add).
Removed top 1 bits (of 33) from port Y of cell b22.$flatten\P2.$verific$unary_minus_15$b22.vhd:1108$910 ($neg).
Removed top 1 bits (of 33) from port A of cell b22.$flatten\P2.$verific$unary_minus_15$b22.vhd:1108$910 ($neg).
Removed top 1 bits (of 32) from port A of cell b22.$flatten\P2.$verific$LessThan_14$b22.vhd:1107$909 ($lt).
Removed top 1 bits (of 5) from port B of cell b22.$auto$fsm_map.cc:77:implement_pattern_cache$2306 ($eq).
Removed top 1 bits (of 2) from port B of cell b22.$auto$fsm_map.cc:215:map_fsm$1681 ($eq).
Removed top 3 bits (of 29) from FF cell b22.$auto$ff.cc:262:slice$2407 ($adffe).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P3.$verific$mux_667$b22.vhd:1016$1592 ($mux).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P3.$verific$mux_648$b22.vhd:1015$1578 ($mux).
Removed top 1 bits (of 21) from port A of cell b22.$flatten\P3.$verific$sub_634$b22.vhd:1008$1563 ($sub).
Removed top 1 bits (of 21) from port B of cell b22.$flatten\P3.$verific$sub_634$b22.vhd:1008$1563 ($sub).
Removed top 1 bits (of 21) from port A of cell b22.$flatten\P3.$verific$sub_632$b22.vhd:1007$1560 ($sub).
Removed top 1 bits (of 21) from port B of cell b22.$flatten\P3.$verific$sub_632$b22.vhd:1007$1560 ($sub).
Removed top 2 bits (of 32) from port Y of cell b22.$flatten\P3.$verific$add_331$b22.vhd:872$1521 ($add).
Removed top 2 bits (of 32) from port A of cell b22.$flatten\P3.$verific$add_331$b22.vhd:872$1521 ($add).
Removed top 2 bits (of 32) from port B of cell b22.$flatten\P3.$verific$add_331$b22.vhd:872$1521 ($add).
Removed top 3 bits (of 33) from port Y of cell b22.$flatten\P3.$verific$sub_297$b22.vhd:852$1519 ($sub).
Removed top 3 bits (of 33) from port A of cell b22.$flatten\P3.$verific$sub_297$b22.vhd:852$1519 ($sub).
Removed top 3 bits (of 33) from port B of cell b22.$flatten\P3.$verific$sub_297$b22.vhd:852$1519 ($sub).
Removed top 30 bits (of 32) from port A of cell b22.$flatten\P3.$verific$equal_171$b22.vhd:760$1511 ($eq).
Removed top 30 bits (of 32) from port A of cell b22.$flatten\P3.$verific$equal_170$b22.vhd:759$1510 ($eq).
Removed top 31 bits (of 32) from port A of cell b22.$flatten\P3.$verific$equal_169$b22.vhd:758$1509 ($eq).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P3.$verific$mux_143$b22.vhd:740$1500 ($mux).
Removed top 2 bits (of 3) from port A of cell b22.$flatten\P3.$verific$equal_141$b22.vhd:738$1498 ($eq).
Removed top 1 bits (of 3) from port A of cell b22.$flatten\P3.$verific$equal_140$b22.vhd:737$1497 ($eq).
Removed top 1 bits (of 3) from port A of cell b22.$flatten\P3.$verific$equal_139$b22.vhd:735$1496 ($eq).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P3.$verific$mux_138$b22.vhd:734$1495 ($mux).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P3.$verific$mux_136$b22.vhd:730$1493 ($mux).
Removed top 2 bits (of 33) from port B of cell b22.$flatten\P3.$verific$sub_82$b22.vhd:663$1475 ($sub).
Removed top 1 bits (of 33) from port Y of cell b22.$flatten\P3.$verific$sub_82$b22.vhd:663$1475 ($sub).
Removed top 1 bits (of 33) from port A of cell b22.$flatten\P3.$verific$sub_82$b22.vhd:663$1475 ($sub).
Removed top 1 bits (of 32) from port B of cell b22.$flatten\P3.$verific$LessThan_81$b22.vhd:662$1474 ($lt).
Removed top 13 bits (of 33) from port A of cell b22.$flatten\P3.$verific$sub_59$b22.vhd:627$1462 ($sub).
Removed top 13 bits (of 33) from port Y of cell b22.$flatten\P3.$verific$sub_59$b22.vhd:627$1462 ($sub).
Removed top 13 bits (of 33) from port B of cell b22.$flatten\P3.$verific$sub_59$b22.vhd:627$1462 ($sub).
Removed top 13 bits (of 33) from port A of cell b22.$flatten\P3.$verific$sub_55$b22.vhd:624$1460 ($sub).
Removed top 13 bits (of 33) from port Y of cell b22.$flatten\P3.$verific$sub_55$b22.vhd:624$1460 ($sub).
Removed top 13 bits (of 33) from port B of cell b22.$flatten\P3.$verific$sub_55$b22.vhd:624$1460 ($sub).
Removed top 1 bits (of 3) from port Y of cell b22.$flatten\P3.$verific$add_44$b22.vhd:610$1452 ($add).
Removed top 1 bits (of 3) from port A of cell b22.$flatten\P3.$verific$add_44$b22.vhd:610$1452 ($add).
Removed top 1 bits (of 30) from port A of cell b22.$flatten\P3.$verific$sub_39$b22.vhd:609$1448 ($sub).
Removed top 26 bits (of 30) from port B of cell b22.$flatten\P3.$verific$sub_39$b22.vhd:609$1448 ($sub).
Removed top 8 bits (of 9) from port Y of cell b22.$flatten\P3.$verific$add_36$b22.vhd:606$1442 ($add).
Removed top 8 bits (of 9) from port A of cell b22.$flatten\P3.$verific$add_36$b22.vhd:606$1442 ($add).
Removed top 9 bits (of 13) from port Y of cell b22.$flatten\P3.$verific$add_31$b22.vhd:604$1435 ($add).
Removed top 9 bits (of 13) from port A of cell b22.$flatten\P3.$verific$add_31$b22.vhd:604$1435 ($add).
Removed top 5 bits (of 8) from port Y of cell b22.$flatten\P3.$verific$add_26$b22.vhd:602$1428 ($add).
Removed top 5 bits (of 8) from port A of cell b22.$flatten\P3.$verific$add_26$b22.vhd:602$1428 ($add).
Removed top 3 bits (of 5) from port Y of cell b22.$flatten\P3.$verific$add_21$b22.vhd:600$1421 ($add).
Removed top 3 bits (of 5) from port A of cell b22.$flatten\P3.$verific$add_21$b22.vhd:600$1421 ($add).
Removed top 1 bits (of 33) from port Y of cell b22.$flatten\P3.$verific$unary_minus_15$b22.vhd:598$1415 ($neg).
Removed top 1 bits (of 33) from port A of cell b22.$flatten\P3.$verific$unary_minus_15$b22.vhd:598$1415 ($neg).
Removed top 1 bits (of 32) from port A of cell b22.$flatten\P3.$verific$LessThan_14$b22.vhd:597$1414 ($lt).
Removed top 1 bits (of 21) from port Y of cell b22.$verific$add_3$b22.vhd:1596$58 ($add).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P1.$verific$mux_698$b22.vhd:506$566 ($mux).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P1.$verific$mux_679$b22.vhd:505$552 ($mux).
Removed top 20 bits (of 21) from wire b22.$flatten\P1.$verific$n10477$363.
Removed top 3 bits (of 32) from wire b22.$flatten\P1.$verific$n10755$374.
Removed top 3 bits (of 32) from wire b22.$flatten\P1.$verific$n11178$383.
Removed top 30 bits (of 32) from wire b22.$flatten\P1.$verific$n11472$388.
Removed top 30 bits (of 32) from wire b22.$flatten\P1.$verific$n1407$256.
Removed top 30 bits (of 32) from wire b22.$flatten\P1.$verific$n1441$257.
Removed top 30 bits (of 32) from wire b22.$flatten\P1.$verific$n1478$258.
Removed top 1 bits (of 33) from wire b22.$flatten\P1.$verific$n184$225.
Removed top 1 bits (of 33) from wire b22.$flatten\P1.$verific$n1987$269.
Removed top 3 bits (of 5) from wire b22.$flatten\P1.$verific$n288$228.
Removed top 5 bits (of 8) from wire b22.$flatten\P1.$verific$n301$230.
Removed top 9 bits (of 13) from wire b22.$flatten\P1.$verific$n318$232.
Removed top 8 bits (of 9) from wire b22.$flatten\P1.$verific$n341$234.
Removed top 2 bits (of 32) from wire b22.$flatten\P1.$verific$n4241$302.
Removed top 1 bits (of 3) from wire b22.$flatten\P1.$verific$n436$238.
Removed top 3 bits (of 33) from wire b22.$flatten\P1.$verific$n5666$316.
Removed top 1 bits (of 32) from wire b22.$flatten\P1.$verific$n862$251.
Removed top 1 bits (of 33) from wire b22.$flatten\P1.$verific$n933$253.
Removed top 1 bits (of 21) from wire b22.$flatten\P2.$verific$n10477$868.
Removed top 3 bits (of 32) from wire b22.$flatten\P2.$verific$n10762$878.
Removed top 3 bits (of 32) from wire b22.$flatten\P2.$verific$n11185$887.
Removed top 30 bits (of 32) from wire b22.$flatten\P2.$verific$n11479$892.
Removed top 30 bits (of 32) from wire b22.$flatten\P2.$verific$n1407$759.
Removed top 30 bits (of 32) from wire b22.$flatten\P2.$verific$n1441$760.
Removed top 30 bits (of 32) from wire b22.$flatten\P2.$verific$n1478$761.
Removed top 1 bits (of 33) from wire b22.$flatten\P2.$verific$n184$728.
Removed top 1 bits (of 33) from wire b22.$flatten\P2.$verific$n1987$772.
Removed top 5 bits (of 8) from wire b22.$flatten\P2.$verific$n301$733.
Removed top 9 bits (of 13) from wire b22.$flatten\P2.$verific$n318$735.
Removed top 8 bits (of 9) from wire b22.$flatten\P2.$verific$n341$737.
Removed top 2 bits (of 32) from wire b22.$flatten\P2.$verific$n4241$805.
Removed top 1 bits (of 3) from wire b22.$flatten\P2.$verific$n436$741.
Removed top 3 bits (of 33) from wire b22.$flatten\P2.$verific$n5666$819.
Removed top 13 bits (of 32) from wire b22.$flatten\P2.$verific$n5931$821.
Removed top 13 bits (of 32) from wire b22.$flatten\P2.$verific$n5964$822.
Removed top 1 bits (of 32) from wire b22.$flatten\P2.$verific$n862$754.
Removed top 1 bits (of 33) from wire b22.$flatten\P2.$verific$n933$756.
Removed top 1 bits (of 21) from wire b22.$flatten\P3.$verific$n10326$1373.
Removed top 3 bits (of 32) from wire b22.$flatten\P3.$verific$n10611$1383.
Removed top 3 bits (of 20) from wire b22.$flatten\P3.$verific$n10813$1386.
Removed top 7 bits (of 32) from wire b22.$flatten\P3.$verific$n11034$1392.
Removed top 30 bits (of 32) from wire b22.$flatten\P3.$verific$n11328$1397.
Removed top 30 bits (of 32) from wire b22.$flatten\P3.$verific$n1408$1262.
Removed top 30 bits (of 32) from wire b22.$flatten\P3.$verific$n1442$1263.
Removed top 30 bits (of 32) from wire b22.$flatten\P3.$verific$n1479$1264.
Removed top 1 bits (of 33) from wire b22.$flatten\P3.$verific$n184$1231.
Removed top 3 bits (of 5) from wire b22.$flatten\P3.$verific$n288$1234.
Removed top 5 bits (of 8) from wire b22.$flatten\P3.$verific$n301$1236.
Removed top 9 bits (of 13) from wire b22.$flatten\P3.$verific$n318$1238.
Removed top 8 bits (of 9) from wire b22.$flatten\P3.$verific$n341$1240.
Removed top 1 bits (of 3) from wire b22.$flatten\P3.$verific$n439$1244.
Removed top 3 bits (of 33) from wire b22.$flatten\P3.$verific$n4798$1306.
Removed top 2 bits (of 32) from wire b22.$flatten\P3.$verific$n5506$1316.
Removed top 1 bits (of 33) from wire b22.$flatten\P3.$verific$n934$1259.
Removed top 1 bits (of 33) from wire b22.$verific$n459$29.

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 54 unused cells and 214 unused wires.
<suppressed ~55 debug messages>

yosys> alumacc

3.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module b22:
  creating $macc model for $flatten\P1.$verific$add_21$b22.vhd:90$412 ($add).
  creating $macc model for $flatten\P1.$verific$add_26$b22.vhd:92$419 ($add).
  creating $macc model for $flatten\P1.$verific$add_283$b22.vhd:322$508 ($add).
  creating $macc model for $flatten\P1.$verific$add_31$b22.vhd:94$426 ($add).
  creating $macc model for $flatten\P1.$verific$add_36$b22.vhd:96$433 ($add).
  creating $macc model for $flatten\P1.$verific$add_39$b22.vhd:99$439 ($add).
  creating $macc model for $flatten\P1.$verific$add_44$b22.vhd:100$443 ($add).
  creating $macc model for $flatten\P1.$verific$add_56$b22.vhd:114$451 ($add).
  creating $macc model for $flatten\P1.$verific$add_570$b22.vhd:470$515 ($add).
  creating $macc model for $flatten\P1.$verific$add_61$b22.vhd:117$453 ($add).
  creating $macc model for $flatten\P1.$verific$add_662$b22.vhd:497$535 ($add).
  creating $macc model for $flatten\P1.$verific$add_664$b22.vhd:498$537 ($add).
  creating $macc model for $flatten\P1.$verific$mult_667$b22.vhd:501$541 ($mul).
  creating $macc model for $flatten\P1.$verific$sub_168$b22.vhd:247$497 ($sub).
  creating $macc model for $flatten\P1.$verific$sub_365$b22.vhd:362$510 ($sub).
  creating $macc model for $flatten\P1.$verific$sub_84$b22.vhd:153$466 ($sub).
  creating $macc model for $flatten\P1.$verific$unary_minus_15$b22.vhd:88$406 ($neg).
  creating $macc model for $flatten\P2.$verific$add_21$b22.vhd:1110$916 ($add).
  creating $macc model for $flatten\P2.$verific$add_26$b22.vhd:1112$923 ($add).
  creating $macc model for $flatten\P2.$verific$add_283$b22.vhd:1342$1012 ($add).
  creating $macc model for $flatten\P2.$verific$add_31$b22.vhd:1114$930 ($add).
  creating $macc model for $flatten\P2.$verific$add_36$b22.vhd:1116$937 ($add).
  creating $macc model for $flatten\P2.$verific$add_39$b22.vhd:1119$943 ($add).
  creating $macc model for $flatten\P2.$verific$add_44$b22.vhd:1120$947 ($add).
  creating $macc model for $flatten\P2.$verific$add_56$b22.vhd:1134$955 ($add).
  creating $macc model for $flatten\P2.$verific$add_570$b22.vhd:1490$1019 ($add).
  creating $macc model for $flatten\P2.$verific$add_61$b22.vhd:1137$957 ($add).
  creating $macc model for $flatten\P2.$verific$add_662$b22.vhd:1517$1040 ($add).
  creating $macc model for $flatten\P2.$verific$add_664$b22.vhd:1518$1043 ($add).
  creating $macc model for $flatten\P2.$verific$sub_168$b22.vhd:1267$1001 ($sub).
  creating $macc model for $flatten\P2.$verific$sub_365$b22.vhd:1382$1014 ($sub).
  creating $macc model for $flatten\P2.$verific$sub_84$b22.vhd:1173$970 ($sub).
  creating $macc model for $flatten\P2.$verific$unary_minus_15$b22.vhd:1108$910 ($neg).
  creating $macc model for $flatten\P3.$verific$add_21$b22.vhd:600$1421 ($add).
  creating $macc model for $flatten\P3.$verific$add_26$b22.vhd:602$1428 ($add).
  creating $macc model for $flatten\P3.$verific$add_31$b22.vhd:604$1435 ($add).
  creating $macc model for $flatten\P3.$verific$add_331$b22.vhd:872$1521 ($add).
  creating $macc model for $flatten\P3.$verific$add_36$b22.vhd:606$1442 ($add).
  creating $macc model for $flatten\P3.$verific$add_44$b22.vhd:610$1452 ($add).
  creating $macc model for $flatten\P3.$verific$add_540$b22.vhd:980$1538 ($add).
  creating $macc model for $flatten\P3.$verific$sub_297$b22.vhd:852$1519 ($sub).
  creating $macc model for $flatten\P3.$verific$sub_39$b22.vhd:609$1448 ($sub).
  creating $macc model for $flatten\P3.$verific$sub_55$b22.vhd:624$1460 ($sub).
  creating $macc model for $flatten\P3.$verific$sub_59$b22.vhd:627$1462 ($sub).
  creating $macc model for $flatten\P3.$verific$sub_632$b22.vhd:1007$1560 ($sub).
  creating $macc model for $flatten\P3.$verific$sub_634$b22.vhd:1008$1563 ($sub).
  creating $macc model for $flatten\P3.$verific$sub_82$b22.vhd:663$1475 ($sub).
  creating $macc model for $flatten\P3.$verific$unary_minus_15$b22.vhd:598$1415 ($neg).
  creating $macc model for $verific$add_3$b22.vhd:1596$58 ($add).
  creating $macc model for $verific$add_31$b22.vhd:1603$84 ($add).
  creating $macc model for $verific$add_39$b22.vhd:1608$88 ($add).
  creating $macc model for $verific$sub_34$b22.vhd:1605$85 ($sub).
  creating $macc model for $verific$sub_4$b22.vhd:1596$59 ($sub).
  merging $macc model for $verific$add_3$b22.vhd:1596$58 into $verific$sub_4$b22.vhd:1596$59.
  creating $alu model for $macc $verific$sub_34$b22.vhd:1605$85.
  creating $alu model for $macc $verific$add_39$b22.vhd:1608$88.
  creating $alu model for $macc $verific$add_31$b22.vhd:1603$84.
  creating $alu model for $macc $flatten\P3.$verific$unary_minus_15$b22.vhd:598$1415.
  creating $alu model for $macc $flatten\P3.$verific$sub_82$b22.vhd:663$1475.
  creating $alu model for $macc $flatten\P3.$verific$sub_634$b22.vhd:1008$1563.
  creating $alu model for $macc $flatten\P3.$verific$sub_632$b22.vhd:1007$1560.
  creating $alu model for $macc $flatten\P3.$verific$sub_59$b22.vhd:627$1462.
  creating $alu model for $macc $flatten\P3.$verific$sub_55$b22.vhd:624$1460.
  creating $alu model for $macc $flatten\P3.$verific$sub_39$b22.vhd:609$1448.
  creating $alu model for $macc $flatten\P3.$verific$sub_297$b22.vhd:852$1519.
  creating $alu model for $macc $flatten\P3.$verific$add_540$b22.vhd:980$1538.
  creating $alu model for $macc $flatten\P3.$verific$add_44$b22.vhd:610$1452.
  creating $alu model for $macc $flatten\P3.$verific$add_36$b22.vhd:606$1442.
  creating $alu model for $macc $flatten\P3.$verific$add_331$b22.vhd:872$1521.
  creating $alu model for $macc $flatten\P3.$verific$add_31$b22.vhd:604$1435.
  creating $alu model for $macc $flatten\P3.$verific$add_26$b22.vhd:602$1428.
  creating $alu model for $macc $flatten\P3.$verific$add_21$b22.vhd:600$1421.
  creating $alu model for $macc $flatten\P2.$verific$unary_minus_15$b22.vhd:1108$910.
  creating $alu model for $macc $flatten\P2.$verific$sub_84$b22.vhd:1173$970.
  creating $alu model for $macc $flatten\P2.$verific$sub_365$b22.vhd:1382$1014.
  creating $alu model for $macc $flatten\P2.$verific$sub_168$b22.vhd:1267$1001.
  creating $alu model for $macc $flatten\P2.$verific$add_664$b22.vhd:1518$1043.
  creating $alu model for $macc $flatten\P2.$verific$add_662$b22.vhd:1517$1040.
  creating $alu model for $macc $flatten\P2.$verific$add_61$b22.vhd:1137$957.
  creating $alu model for $macc $flatten\P2.$verific$add_570$b22.vhd:1490$1019.
  creating $alu model for $macc $flatten\P2.$verific$add_56$b22.vhd:1134$955.
  creating $alu model for $macc $flatten\P2.$verific$add_44$b22.vhd:1120$947.
  creating $alu model for $macc $flatten\P2.$verific$add_39$b22.vhd:1119$943.
  creating $alu model for $macc $flatten\P2.$verific$add_36$b22.vhd:1116$937.
  creating $alu model for $macc $flatten\P2.$verific$add_31$b22.vhd:1114$930.
  creating $alu model for $macc $flatten\P2.$verific$add_283$b22.vhd:1342$1012.
  creating $alu model for $macc $flatten\P2.$verific$add_26$b22.vhd:1112$923.
  creating $alu model for $macc $flatten\P2.$verific$add_21$b22.vhd:1110$916.
  creating $alu model for $macc $flatten\P1.$verific$unary_minus_15$b22.vhd:88$406.
  creating $alu model for $macc $flatten\P1.$verific$sub_84$b22.vhd:153$466.
  creating $alu model for $macc $flatten\P1.$verific$sub_365$b22.vhd:362$510.
  creating $alu model for $macc $flatten\P1.$verific$sub_168$b22.vhd:247$497.
  creating $alu model for $macc $flatten\P1.$verific$add_664$b22.vhd:498$537.
  creating $alu model for $macc $flatten\P1.$verific$add_662$b22.vhd:497$535.
  creating $alu model for $macc $flatten\P1.$verific$add_61$b22.vhd:117$453.
  creating $alu model for $macc $flatten\P1.$verific$add_570$b22.vhd:470$515.
  creating $alu model for $macc $flatten\P1.$verific$add_56$b22.vhd:114$451.
  creating $alu model for $macc $flatten\P1.$verific$add_44$b22.vhd:100$443.
  creating $alu model for $macc $flatten\P1.$verific$add_39$b22.vhd:99$439.
  creating $alu model for $macc $flatten\P1.$verific$add_36$b22.vhd:96$433.
  creating $alu model for $macc $flatten\P1.$verific$add_31$b22.vhd:94$426.
  creating $alu model for $macc $flatten\P1.$verific$add_283$b22.vhd:322$508.
  creating $alu model for $macc $flatten\P1.$verific$add_26$b22.vhd:92$419.
  creating $alu model for $macc $flatten\P1.$verific$add_21$b22.vhd:90$412.
  creating $macc cell for $verific$sub_4$b22.vhd:1596$59: $auto$alumacc.cc:365:replace_macc$2725
  creating $macc cell for $flatten\P1.$verific$mult_667$b22.vhd:501$541: $auto$alumacc.cc:365:replace_macc$2726
  creating $alu model for $flatten\P1.$verific$LessThan_14$b22.vhd:87$405 ($lt): new $alu
  creating $alu model for $flatten\P1.$verific$LessThan_68$b22.vhd:122$459 ($lt): new $alu
  creating $alu model for $flatten\P1.$verific$LessThan_78$b22.vhd:142$463 ($lt): merged with $flatten\P1.$verific$LessThan_68$b22.vhd:122$459.
  creating $alu model for $flatten\P1.$verific$LessThan_83$b22.vhd:152$465 ($lt): new $alu
  creating $alu model for $flatten\P1.$verific$LessThan_87$b22.vhd:155$470 ($lt): new $alu
  creating $alu model for $flatten\P2.$verific$LessThan_14$b22.vhd:1107$909 ($lt): new $alu
  creating $alu model for $flatten\P2.$verific$LessThan_68$b22.vhd:1142$963 ($lt): new $alu
  creating $alu model for $flatten\P2.$verific$LessThan_78$b22.vhd:1162$967 ($lt): merged with $flatten\P2.$verific$LessThan_68$b22.vhd:1142$963.
  creating $alu model for $flatten\P2.$verific$LessThan_83$b22.vhd:1172$969 ($lt): new $alu
  creating $alu model for $flatten\P2.$verific$LessThan_87$b22.vhd:1175$974 ($lt): new $alu
  creating $alu model for $flatten\P3.$verific$LessThan_14$b22.vhd:597$1414 ($lt): new $alu
  creating $alu model for $flatten\P3.$verific$LessThan_66$b22.vhd:632$1468 ($lt): new $alu
  creating $alu model for $flatten\P3.$verific$LessThan_76$b22.vhd:652$1472 ($lt): merged with $flatten\P3.$verific$LessThan_66$b22.vhd:632$1468.
  creating $alu model for $flatten\P3.$verific$LessThan_81$b22.vhd:662$1474 ($lt): new $alu
  creating $alu model for $flatten\P3.$verific$LessThan_85$b22.vhd:665$1479 ($lt): new $alu
  creating $alu model for $verific$LessThan_14$b22.vhd:1601$70 ($lt): new $alu
  creating $alu model for $verific$LessThan_15$b22.vhd:1601$71 ($lt): new $alu
  creating $alu model for $verific$LessThan_16$b22.vhd:1601$72 ($lt): new $alu
  creating $alu model for $verific$LessThan_21$b22.vhd:1602$77 ($lt): new $alu
  creating $alu model for $verific$LessThan_22$b22.vhd:1602$78 ($lt): new $alu
  creating $alu model for $verific$LessThan_23$b22.vhd:1602$79 ($lt): new $alu
  creating $alu cell for $verific$LessThan_23$b22.vhd:1602$79: $auto$alumacc.cc:485:replace_alu$2745
  creating $alu cell for $verific$LessThan_22$b22.vhd:1602$78: $auto$alumacc.cc:485:replace_alu$2750
  creating $alu cell for $verific$LessThan_21$b22.vhd:1602$77: $auto$alumacc.cc:485:replace_alu$2755
  creating $alu cell for $verific$LessThan_16$b22.vhd:1601$72: $auto$alumacc.cc:485:replace_alu$2760
  creating $alu cell for $verific$LessThan_15$b22.vhd:1601$71: $auto$alumacc.cc:485:replace_alu$2765
  creating $alu cell for $verific$LessThan_14$b22.vhd:1601$70: $auto$alumacc.cc:485:replace_alu$2770
  creating $alu cell for $flatten\P3.$verific$LessThan_85$b22.vhd:665$1479: $auto$alumacc.cc:485:replace_alu$2775
  creating $alu cell for $flatten\P3.$verific$LessThan_81$b22.vhd:662$1474: $auto$alumacc.cc:485:replace_alu$2786
  creating $alu cell for $flatten\P3.$verific$LessThan_66$b22.vhd:632$1468, $flatten\P3.$verific$LessThan_76$b22.vhd:652$1472: $auto$alumacc.cc:485:replace_alu$2797
  creating $alu cell for $flatten\P3.$verific$LessThan_14$b22.vhd:597$1414: $auto$alumacc.cc:485:replace_alu$2808
  creating $alu cell for $flatten\P2.$verific$LessThan_87$b22.vhd:1175$974: $auto$alumacc.cc:485:replace_alu$2813
  creating $alu cell for $flatten\P2.$verific$LessThan_83$b22.vhd:1172$969: $auto$alumacc.cc:485:replace_alu$2824
  creating $alu cell for $flatten\P2.$verific$LessThan_68$b22.vhd:1142$963, $flatten\P2.$verific$LessThan_78$b22.vhd:1162$967: $auto$alumacc.cc:485:replace_alu$2835
  creating $alu cell for $flatten\P2.$verific$LessThan_14$b22.vhd:1107$909: $auto$alumacc.cc:485:replace_alu$2846
  creating $alu cell for $flatten\P1.$verific$LessThan_87$b22.vhd:155$470: $auto$alumacc.cc:485:replace_alu$2851
  creating $alu cell for $flatten\P1.$verific$LessThan_83$b22.vhd:152$465: $auto$alumacc.cc:485:replace_alu$2856
  creating $alu cell for $flatten\P1.$verific$LessThan_68$b22.vhd:122$459, $flatten\P1.$verific$LessThan_78$b22.vhd:142$463: $auto$alumacc.cc:485:replace_alu$2867
  creating $alu cell for $flatten\P1.$verific$LessThan_14$b22.vhd:87$405: $auto$alumacc.cc:485:replace_alu$2878
  creating $alu cell for $flatten\P1.$verific$add_21$b22.vhd:90$412: $auto$alumacc.cc:485:replace_alu$2883
  creating $alu cell for $flatten\P1.$verific$add_26$b22.vhd:92$419: $auto$alumacc.cc:485:replace_alu$2886
  creating $alu cell for $flatten\P1.$verific$add_283$b22.vhd:322$508: $auto$alumacc.cc:485:replace_alu$2889
  creating $alu cell for $flatten\P1.$verific$add_31$b22.vhd:94$426: $auto$alumacc.cc:485:replace_alu$2892
  creating $alu cell for $flatten\P1.$verific$add_36$b22.vhd:96$433: $auto$alumacc.cc:485:replace_alu$2895
  creating $alu cell for $flatten\P1.$verific$add_39$b22.vhd:99$439: $auto$alumacc.cc:485:replace_alu$2898
  creating $alu cell for $flatten\P1.$verific$add_44$b22.vhd:100$443: $auto$alumacc.cc:485:replace_alu$2901
  creating $alu cell for $flatten\P1.$verific$add_570$b22.vhd:470$515: $auto$alumacc.cc:485:replace_alu$2904
  creating $alu cell for $flatten\P1.$verific$add_56$b22.vhd:114$451: $auto$alumacc.cc:485:replace_alu$2907
  creating $alu cell for $flatten\P1.$verific$add_662$b22.vhd:497$535: $auto$alumacc.cc:485:replace_alu$2910
  creating $alu cell for $flatten\P1.$verific$add_61$b22.vhd:117$453: $auto$alumacc.cc:485:replace_alu$2913
  creating $alu cell for $flatten\P1.$verific$add_664$b22.vhd:498$537: $auto$alumacc.cc:485:replace_alu$2916
  creating $alu cell for $flatten\P1.$verific$sub_168$b22.vhd:247$497: $auto$alumacc.cc:485:replace_alu$2919
  creating $alu cell for $flatten\P1.$verific$sub_365$b22.vhd:362$510: $auto$alumacc.cc:485:replace_alu$2922
  creating $alu cell for $flatten\P1.$verific$sub_84$b22.vhd:153$466: $auto$alumacc.cc:485:replace_alu$2925
  creating $alu cell for $flatten\P1.$verific$unary_minus_15$b22.vhd:88$406: $auto$alumacc.cc:485:replace_alu$2928
  creating $alu cell for $flatten\P2.$verific$add_21$b22.vhd:1110$916: $auto$alumacc.cc:485:replace_alu$2931
  creating $alu cell for $flatten\P2.$verific$add_26$b22.vhd:1112$923: $auto$alumacc.cc:485:replace_alu$2934
  creating $alu cell for $flatten\P2.$verific$add_283$b22.vhd:1342$1012: $auto$alumacc.cc:485:replace_alu$2937
  creating $alu cell for $flatten\P2.$verific$add_31$b22.vhd:1114$930: $auto$alumacc.cc:485:replace_alu$2940
  creating $alu cell for $flatten\P2.$verific$add_36$b22.vhd:1116$937: $auto$alumacc.cc:485:replace_alu$2943
  creating $alu cell for $flatten\P2.$verific$add_39$b22.vhd:1119$943: $auto$alumacc.cc:485:replace_alu$2946
  creating $alu cell for $flatten\P2.$verific$add_44$b22.vhd:1120$947: $auto$alumacc.cc:485:replace_alu$2949
  creating $alu cell for $flatten\P2.$verific$add_570$b22.vhd:1490$1019: $auto$alumacc.cc:485:replace_alu$2952
  creating $alu cell for $flatten\P2.$verific$add_56$b22.vhd:1134$955: $auto$alumacc.cc:485:replace_alu$2955
  creating $alu cell for $flatten\P2.$verific$add_662$b22.vhd:1517$1040: $auto$alumacc.cc:485:replace_alu$2958
  creating $alu cell for $flatten\P2.$verific$add_61$b22.vhd:1137$957: $auto$alumacc.cc:485:replace_alu$2961
  creating $alu cell for $flatten\P2.$verific$add_664$b22.vhd:1518$1043: $auto$alumacc.cc:485:replace_alu$2964
  creating $alu cell for $flatten\P2.$verific$sub_168$b22.vhd:1267$1001: $auto$alumacc.cc:485:replace_alu$2967
  creating $alu cell for $flatten\P2.$verific$sub_365$b22.vhd:1382$1014: $auto$alumacc.cc:485:replace_alu$2970
  creating $alu cell for $flatten\P2.$verific$sub_84$b22.vhd:1173$970: $auto$alumacc.cc:485:replace_alu$2973
  creating $alu cell for $flatten\P2.$verific$unary_minus_15$b22.vhd:1108$910: $auto$alumacc.cc:485:replace_alu$2976
  creating $alu cell for $flatten\P3.$verific$add_21$b22.vhd:600$1421: $auto$alumacc.cc:485:replace_alu$2979
  creating $alu cell for $flatten\P3.$verific$add_26$b22.vhd:602$1428: $auto$alumacc.cc:485:replace_alu$2982
  creating $alu cell for $flatten\P3.$verific$add_31$b22.vhd:604$1435: $auto$alumacc.cc:485:replace_alu$2985
  creating $alu cell for $flatten\P3.$verific$add_331$b22.vhd:872$1521: $auto$alumacc.cc:485:replace_alu$2988
  creating $alu cell for $flatten\P3.$verific$add_36$b22.vhd:606$1442: $auto$alumacc.cc:485:replace_alu$2991
  creating $alu cell for $flatten\P3.$verific$add_44$b22.vhd:610$1452: $auto$alumacc.cc:485:replace_alu$2994
  creating $alu cell for $flatten\P3.$verific$add_540$b22.vhd:980$1538: $auto$alumacc.cc:485:replace_alu$2997
  creating $alu cell for $flatten\P3.$verific$sub_297$b22.vhd:852$1519: $auto$alumacc.cc:485:replace_alu$3000
  creating $alu cell for $flatten\P3.$verific$sub_39$b22.vhd:609$1448: $auto$alumacc.cc:485:replace_alu$3003
  creating $alu cell for $flatten\P3.$verific$sub_55$b22.vhd:624$1460: $auto$alumacc.cc:485:replace_alu$3006
  creating $alu cell for $flatten\P3.$verific$sub_59$b22.vhd:627$1462: $auto$alumacc.cc:485:replace_alu$3009
  creating $alu cell for $flatten\P3.$verific$sub_632$b22.vhd:1007$1560: $auto$alumacc.cc:485:replace_alu$3012
  creating $alu cell for $flatten\P3.$verific$sub_634$b22.vhd:1008$1563: $auto$alumacc.cc:485:replace_alu$3015
  creating $alu cell for $flatten\P3.$verific$sub_82$b22.vhd:663$1475: $auto$alumacc.cc:485:replace_alu$3018
  creating $alu cell for $flatten\P3.$verific$unary_minus_15$b22.vhd:598$1415: $auto$alumacc.cc:485:replace_alu$3021
  creating $alu cell for $verific$add_31$b22.vhd:1603$84: $auto$alumacc.cc:485:replace_alu$3024
  creating $alu cell for $verific$add_39$b22.vhd:1608$88: $auto$alumacc.cc:485:replace_alu$3027
  creating $alu cell for $verific$sub_34$b22.vhd:1605$85: $auto$alumacc.cc:485:replace_alu$3030
  created 68 $alu and 2 $macc cells.

yosys> opt

3.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~15 debug messages>

yosys> opt_merge -nomux

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~60 debug messages>

yosys> opt_reduce

3.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 7 unused cells and 37 unused wires.
<suppressed ~8 debug messages>

yosys> opt_expr

3.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

3.19.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~60 debug messages>

yosys> opt_reduce

3.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..

yosys> opt_expr

3.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

3.19.16. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.20. Printing statistics.

=== b22 ===

   Number of wires:                824
   Number of wire bits:          13667
   Number of public wires:          64
   Number of public wire bits:    1006
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                624
     $adff                          21
     $adffe                         19
     $alu                           68
     $and                          102
     $bmux                          48
     $eq                            75
     $logic_not                      6
     $macc                           2
     $mux                          135
     $ne                             3
     $not                           38
     $or                            38
     $reduce_and                    16
     $reduce_or                     51
     $xor                            2


yosys> memory -nomap

3.21. Executing MEMORY pass.

yosys> opt_mem

3.21.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.21.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.21.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.21.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.21.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.21.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..

yosys> memory_share

3.21.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.21.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.21.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..

yosys> memory_collect

3.21.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.22. Printing statistics.

=== b22 ===

   Number of wires:                824
   Number of wire bits:          13667
   Number of public wires:          64
   Number of public wire bits:    1006
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                624
     $adff                          21
     $adffe                         19
     $alu                           68
     $and                          102
     $bmux                          48
     $eq                            75
     $logic_not                      6
     $macc                           2
     $mux                          135
     $ne                             3
     $not                           38
     $or                            38
     $reduce_and                    16
     $reduce_or                     51
     $xor                            2


yosys> opt_clean

3.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..

yosys> stat

3.24. Printing statistics.

=== b22 ===

   Number of wires:                824
   Number of wire bits:          13667
   Number of public wires:          64
   Number of public wire bits:    1006
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                624
     $adff                          21
     $adffe                         19
     $alu                           68
     $and                          102
     $bmux                          48
     $eq                            75
     $logic_not                      6
     $macc                           2
     $mux                          135
     $ne                             3
     $not                           38
     $or                            38
     $reduce_and                    16
     $reduce_or                     51
     $xor                            2


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.25. Executing TECHMAP pass (map to technology primitives).

3.25.1. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.25.2. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.25.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $not.
Using extmapper maccmap for cells of type $macc.
  add 3'101 * $auto$wreduce.cc:454:run$2442 [0] (3x1 bits, unsigned)
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $or.
Using template $paramod$79fc87901d7fd8aaad689b5406671422f5fa25b9\_80_rs_alu for cells of type $alu.
Using template $paramod$6fc37af1c109ae54e8aed83fcd995c12d378ce93\_90_alu for cells of type $alu.
Using template $paramod$51c80ded93a30cabdd6a720b4f0ed1d8c51829dd\_90_alu for cells of type $alu.
Using template $paramod$be80489e44a49c29884f59fd81c31ed03229cfc1\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $bmux.
Using template $paramod$6a42b6fefed750f8a1c58eab59479d960557103c\_90_alu for cells of type $alu.
Using template $paramod$43e6bdbb0e8a6b23dfd3962c0280737d54f8e2be\_80_rs_alu for cells of type $alu.
Using template $paramod$c32aaa9fd758c6ea2b382f4327253b21b576e597\_90_alu for cells of type $alu.
Using template $paramod$32a7b7b86c07519b7537abc18e96f0331f97914d\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$83fc07d9557d32477a9ece9e4e82efd3bbe82ab8\_80_rs_alu for cells of type $alu.
Using template $paramod$e891e6b399cf52748460a311fafe476815d24bd7\_90_alu for cells of type $alu.
Using template $paramod$63a3f1ffa662be02d3403b533885c56d18ebe02a\_80_rs_alu for cells of type $alu.
Using template $paramod$8027eda61d95ddd4d4dd7b5cb21f3830552ebe4e\_80_rs_alu for cells of type $alu.
Using template $paramod$ee932b0f27f4b110ee21c85da6e79a9925243db9\_80_rs_alu for cells of type $alu.
Using template $paramod$175e67c02b86e96b1288b9dc100122520d7240d8\_90_alu for cells of type $alu.
Using template $paramod$83784888def4f70dbbded37c6d05d2ea1157c936\_90_alu for cells of type $alu.
/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:80: Warning: Range [-1:-1] select out of bounds on signal `\C': Setting 1 LSB bits to undef.
/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88: Warning: Range [-1:-1] select out of bounds on signal `\Y': Setting 1 LSB bits to undef.
/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88: Warning: Range [-1:-1] select out of bounds on signal `\S': Setting 1 LSB bits to undef.
/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88: Warning: Ignoring assignment to constant bits:
    old assignment: 1'x = $xor$/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88$10800_Y
    new assignment: { } = { }.
/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:89: Warning: Range [-1:-1] select out of bounds on signal `\S': Setting 1 LSB bits to undef.
/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:89: Warning: Range [-1:-1] select out of bounds on signal `\AA': Setting 1 LSB bits to undef.
Using template $paramod$fc972a7a46956c1788f3cb5257b53c8f1df2d0cc\_90_alu for cells of type $alu.
Using template $paramod$9e7011427f22271c0942bd67000ef26931352ace\_80_rs_alu for cells of type $alu.
Using template $paramod$3ef7d3dd227da7627a99c5e5a6a4deb817573e39\_90_alu for cells of type $alu.
  add \P1.addr (20 bits, unsigned)
  sub \P3.addr (20 bits, unsigned)
  add \P2.addr (20 bits, unsigned)
  packed 1 (1) bits / 1 words into adder tree
Using extmapper simplemap for cells of type $ne.
Using template $paramod$7bd3bdb0fef16fc2bd4fd60ec6e664d79bf31ac7\_80_rs_alu for cells of type $alu.
Using template $paramod$6dc2bc4e177433cbefea60fe94ff11f8a7c6abf8\_90_alu for cells of type $alu.
Using template $paramod$2fcdd83405601057593cb25247304b1283f3b87e\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000011011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000011 for cells of type $lcu.
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000000010100 for cells of type $fa.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000011110 for cells of type $lcu.
No more expansions possible.
<suppressed ~6251 debug messages>

yosys> stat

3.26. Printing statistics.

=== b22 ===

   Number of wires:               5098
   Number of wire bits:          90762
   Number of public wires:          64
   Number of public wire bits:    1006
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              28266
     $_AND_                       2457
     $_DFFE_PP0P_                  442
     $_DFF_PP0_                    177
     $_MUX_                      17409
     $_NOT_                       1654
     $_OR_                        2292
     $_XOR_                       2912
     adder_carry                   923


yosys> opt

3.27. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~10599 debug messages>

yosys> opt_merge -nomux

3.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
<suppressed ~14235 debug messages>
Removed a total of 4745 cells.

yosys> opt_muxtree

3.27.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.27.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$18354 ($_DFF_PP0_) from module b22 (D = $flatten\P3.$verific$n11102$1394 [19], Q = \P3.addr [19]).
Adding EN signal on $auto$ff.cc:262:slice$12770 ($_DFF_PP0_) from module b22 (D = $flatten\P2.$verific$n11253$889 [19], Q = \P2.addr [19]).
Adding EN signal on $auto$ff.cc:262:slice$6778 ($_DFF_PP0_) from module b22 (D = $flatten\P1.$verific$n11246$385 [19], Q = \P1.addr [19]).
Adding EN signal on $auto$ff.cc:262:slice$6756 ($_DFFE_PP0P_) from module b22 (D = $flatten\P1.$verific$n10979$213, Q = \P1.B).
Adding EN signal on $auto$ff.cc:262:slice$12748 ($_DFFE_PP0P_) from module b22 (D = $flatten\P2.$verific$n10986$716, Q = \P2.B).
Adding EN signal on $auto$ff.cc:262:slice$18451 ($_DFFE_PP0P_) from module b22 (D = $flatten\P3.$verific$n10835$1219, Q = \P3.B).
Adding EN signal on $auto$ff.cc:262:slice$5557 ($_DFFE_PP0P_) from module b22 (D = $auto$wreduce.cc:454:run$2482 [0], Q = \P3.reg3 [0]).
Adding EN signal on $auto$ff.cc:262:slice$5558 ($_DFFE_PP0P_) from module b22 (D = $auto$wreduce.cc:454:run$2482 [1], Q = \P3.reg3 [1]).
Adding EN signal on $auto$ff.cc:262:slice$5559 ($_DFFE_PP0P_) from module b22 (D = $auto$wreduce.cc:454:run$2482 [2], Q = \P3.reg3 [2]).
Adding EN signal on $auto$ff.cc:262:slice$6759 ($_DFF_PP0_) from module b22 (D = $flatten\P1.$verific$n11246$385 [0], Q = \P1.addr [0]).
Adding EN signal on $auto$ff.cc:262:slice$6760 ($_DFF_PP0_) from module b22 (D = $flatten\P1.$verific$n11246$385 [1], Q = \P1.addr [1]).
Adding EN signal on $auto$ff.cc:262:slice$6761 ($_DFF_PP0_) from module b22 (D = $flatten\P1.$verific$n11246$385 [2], Q = \P1.addr [2]).
Adding EN signal on $auto$ff.cc:262:slice$6762 ($_DFF_PP0_) from module b22 (D = $flatten\P1.$verific$n11246$385 [3], Q = \P1.addr [3]).
Adding EN signal on $auto$ff.cc:262:slice$6763 ($_DFF_PP0_) from module b22 (D = $flatten\P1.$verific$n11246$385 [4], Q = \P1.addr [4]).
Adding EN signal on $auto$ff.cc:262:slice$6764 ($_DFF_PP0_) from module b22 (D = $flatten\P1.$verific$n11246$385 [5], Q = \P1.addr [5]).
Adding EN signal on $auto$ff.cc:262:slice$6765 ($_DFF_PP0_) from module b22 (D = $flatten\P1.$verific$n11246$385 [6], Q = \P1.addr [6]).
Adding EN signal on $auto$ff.cc:262:slice$6766 ($_DFF_PP0_) from module b22 (D = $flatten\P1.$verific$n11246$385 [7], Q = \P1.addr [7]).
Adding EN signal on $auto$ff.cc:262:slice$6767 ($_DFF_PP0_) from module b22 (D = $flatten\P1.$verific$n11246$385 [8], Q = \P1.addr [8]).
Adding EN signal on $auto$ff.cc:262:slice$6768 ($_DFF_PP0_) from module b22 (D = $flatten\P1.$verific$n11246$385 [9], Q = \P1.addr [9]).
Adding EN signal on $auto$ff.cc:262:slice$6769 ($_DFF_PP0_) from module b22 (D = $flatten\P1.$verific$n11246$385 [10], Q = \P1.addr [10]).
Adding EN signal on $auto$ff.cc:262:slice$6770 ($_DFF_PP0_) from module b22 (D = $flatten\P1.$verific$n11246$385 [11], Q = \P1.addr [11]).
Adding EN signal on $auto$ff.cc:262:slice$6771 ($_DFF_PP0_) from module b22 (D = $flatten\P1.$verific$n11246$385 [12], Q = \P1.addr [12]).
Adding EN signal on $auto$ff.cc:262:slice$6772 ($_DFF_PP0_) from module b22 (D = $flatten\P1.$verific$n11246$385 [13], Q = \P1.addr [13]).
Adding EN signal on $auto$ff.cc:262:slice$6773 ($_DFF_PP0_) from module b22 (D = $flatten\P1.$verific$n11246$385 [14], Q = \P1.addr [14]).
Adding EN signal on $auto$ff.cc:262:slice$6774 ($_DFF_PP0_) from module b22 (D = $flatten\P1.$verific$n11246$385 [15], Q = \P1.addr [15]).
Adding EN signal on $auto$ff.cc:262:slice$6775 ($_DFF_PP0_) from module b22 (D = $flatten\P1.$verific$n11246$385 [16], Q = \P1.addr [16]).
Adding EN signal on $auto$ff.cc:262:slice$6776 ($_DFF_PP0_) from module b22 (D = $flatten\P1.$verific$n11246$385 [17], Q = \P1.addr [17]).
Adding EN signal on $auto$ff.cc:262:slice$6777 ($_DFF_PP0_) from module b22 (D = $flatten\P1.$verific$n11246$385 [18], Q = \P1.addr [18]).
Adding EN signal on $auto$ff.cc:262:slice$12751 ($_DFF_PP0_) from module b22 (D = $flatten\P2.$verific$n11253$889 [0], Q = \P2.addr [0]).
Adding EN signal on $auto$ff.cc:262:slice$12752 ($_DFF_PP0_) from module b22 (D = $flatten\P2.$verific$n11253$889 [1], Q = \P2.addr [1]).
Adding EN signal on $auto$ff.cc:262:slice$12753 ($_DFF_PP0_) from module b22 (D = $flatten\P2.$verific$n11253$889 [2], Q = \P2.addr [2]).
Adding EN signal on $auto$ff.cc:262:slice$12754 ($_DFF_PP0_) from module b22 (D = $flatten\P2.$verific$n11253$889 [3], Q = \P2.addr [3]).
Adding EN signal on $auto$ff.cc:262:slice$12755 ($_DFF_PP0_) from module b22 (D = $flatten\P2.$verific$n11253$889 [4], Q = \P2.addr [4]).
Adding EN signal on $auto$ff.cc:262:slice$12756 ($_DFF_PP0_) from module b22 (D = $flatten\P2.$verific$n11253$889 [5], Q = \P2.addr [5]).
Adding EN signal on $auto$ff.cc:262:slice$12757 ($_DFF_PP0_) from module b22 (D = $flatten\P2.$verific$n11253$889 [6], Q = \P2.addr [6]).
Adding EN signal on $auto$ff.cc:262:slice$12758 ($_DFF_PP0_) from module b22 (D = $flatten\P2.$verific$n11253$889 [7], Q = \P2.addr [7]).
Adding EN signal on $auto$ff.cc:262:slice$12759 ($_DFF_PP0_) from module b22 (D = $flatten\P2.$verific$n11253$889 [8], Q = \P2.addr [8]).
Adding EN signal on $auto$ff.cc:262:slice$12760 ($_DFF_PP0_) from module b22 (D = $flatten\P2.$verific$n11253$889 [9], Q = \P2.addr [9]).
Adding EN signal on $auto$ff.cc:262:slice$12761 ($_DFF_PP0_) from module b22 (D = $flatten\P2.$verific$n11253$889 [10], Q = \P2.addr [10]).
Adding EN signal on $auto$ff.cc:262:slice$12762 ($_DFF_PP0_) from module b22 (D = $flatten\P2.$verific$n11253$889 [11], Q = \P2.addr [11]).
Adding EN signal on $auto$ff.cc:262:slice$12763 ($_DFF_PP0_) from module b22 (D = $flatten\P2.$verific$n11253$889 [12], Q = \P2.addr [12]).
Adding EN signal on $auto$ff.cc:262:slice$12764 ($_DFF_PP0_) from module b22 (D = $flatten\P2.$verific$n11253$889 [13], Q = \P2.addr [13]).
Adding EN signal on $auto$ff.cc:262:slice$12765 ($_DFF_PP0_) from module b22 (D = $flatten\P2.$verific$n11253$889 [14], Q = \P2.addr [14]).
Adding EN signal on $auto$ff.cc:262:slice$12766 ($_DFF_PP0_) from module b22 (D = $flatten\P2.$verific$n11253$889 [15], Q = \P2.addr [15]).
Adding EN signal on $auto$ff.cc:262:slice$12767 ($_DFF_PP0_) from module b22 (D = $flatten\P2.$verific$n11253$889 [16], Q = \P2.addr [16]).
Adding EN signal on $auto$ff.cc:262:slice$12768 ($_DFF_PP0_) from module b22 (D = $flatten\P2.$verific$n11253$889 [17], Q = \P2.addr [17]).
Adding EN signal on $auto$ff.cc:262:slice$12769 ($_DFF_PP0_) from module b22 (D = $flatten\P2.$verific$n11253$889 [18], Q = \P2.addr [18]).
Adding EN signal on $auto$ff.cc:262:slice$18335 ($_DFF_PP0_) from module b22 (D = $flatten\P3.$verific$n11102$1394 [0], Q = \P3.addr [0]).
Adding EN signal on $auto$ff.cc:262:slice$18336 ($_DFF_PP0_) from module b22 (D = $flatten\P3.$verific$n11102$1394 [1], Q = \P3.addr [1]).
Adding EN signal on $auto$ff.cc:262:slice$18337 ($_DFF_PP0_) from module b22 (D = $flatten\P3.$verific$n11102$1394 [2], Q = \P3.addr [2]).
Adding EN signal on $auto$ff.cc:262:slice$18338 ($_DFF_PP0_) from module b22 (D = $flatten\P3.$verific$n11102$1394 [3], Q = \P3.addr [3]).
Adding EN signal on $auto$ff.cc:262:slice$18339 ($_DFF_PP0_) from module b22 (D = $flatten\P3.$verific$n11102$1394 [4], Q = \P3.addr [4]).
Adding EN signal on $auto$ff.cc:262:slice$18340 ($_DFF_PP0_) from module b22 (D = $flatten\P3.$verific$n11102$1394 [5], Q = \P3.addr [5]).
Adding EN signal on $auto$ff.cc:262:slice$18341 ($_DFF_PP0_) from module b22 (D = $flatten\P3.$verific$n11102$1394 [6], Q = \P3.addr [6]).
Adding EN signal on $auto$ff.cc:262:slice$18342 ($_DFF_PP0_) from module b22 (D = $flatten\P3.$verific$n11102$1394 [7], Q = \P3.addr [7]).
Adding EN signal on $auto$ff.cc:262:slice$18343 ($_DFF_PP0_) from module b22 (D = $flatten\P3.$verific$n11102$1394 [8], Q = \P3.addr [8]).
Adding EN signal on $auto$ff.cc:262:slice$18344 ($_DFF_PP0_) from module b22 (D = $flatten\P3.$verific$n11102$1394 [9], Q = \P3.addr [9]).
Adding EN signal on $auto$ff.cc:262:slice$18345 ($_DFF_PP0_) from module b22 (D = $flatten\P3.$verific$n11102$1394 [10], Q = \P3.addr [10]).
Adding EN signal on $auto$ff.cc:262:slice$18346 ($_DFF_PP0_) from module b22 (D = $flatten\P3.$verific$n11102$1394 [11], Q = \P3.addr [11]).
Adding EN signal on $auto$ff.cc:262:slice$18347 ($_DFF_PP0_) from module b22 (D = $flatten\P3.$verific$n11102$1394 [12], Q = \P3.addr [12]).
Adding EN signal on $auto$ff.cc:262:slice$18348 ($_DFF_PP0_) from module b22 (D = $flatten\P3.$verific$n11102$1394 [13], Q = \P3.addr [13]).
Adding EN signal on $auto$ff.cc:262:slice$18349 ($_DFF_PP0_) from module b22 (D = $flatten\P3.$verific$n11102$1394 [14], Q = \P3.addr [14]).
Adding EN signal on $auto$ff.cc:262:slice$18350 ($_DFF_PP0_) from module b22 (D = $flatten\P3.$verific$n11102$1394 [15], Q = \P3.addr [15]).
Adding EN signal on $auto$ff.cc:262:slice$18351 ($_DFF_PP0_) from module b22 (D = $flatten\P3.$verific$n11102$1394 [16], Q = \P3.addr [16]).
Adding EN signal on $auto$ff.cc:262:slice$18352 ($_DFF_PP0_) from module b22 (D = $flatten\P3.$verific$n11102$1394 [17], Q = \P3.addr [17]).
Adding EN signal on $auto$ff.cc:262:slice$18353 ($_DFF_PP0_) from module b22 (D = $flatten\P3.$verific$n11102$1394 [18], Q = \P3.addr [18]).

yosys> opt_clean

3.27.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 1165 unused cells and 3595 unused wires.
<suppressed ~1166 debug messages>

yosys> opt_expr

3.27.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~949 debug messages>

3.27.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.27.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.27.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
<suppressed ~1956 debug messages>
Removed a total of 652 cells.

yosys> opt_dff

3.27.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$12833 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$15427 [30], Q = \P2.reg1 [30]).
Adding EN signal on $auto$ff.cc:262:slice$12832 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$15427 [29], Q = \P2.reg1 [29]).
Adding EN signal on $auto$ff.cc:262:slice$12831 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$15427 [28], Q = \P2.reg1 [28]).
Adding EN signal on $auto$ff.cc:262:slice$12830 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$15427 [27], Q = \P2.reg1 [27]).
Adding EN signal on $auto$ff.cc:262:slice$12829 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$15427 [26], Q = \P2.reg1 [26]).
Adding EN signal on $auto$ff.cc:262:slice$12828 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$15427 [25], Q = \P2.reg1 [25]).
Adding EN signal on $auto$ff.cc:262:slice$12827 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$15427 [24], Q = \P2.reg1 [24]).
Adding EN signal on $auto$ff.cc:262:slice$12826 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$15427 [23], Q = \P2.reg1 [23]).
Adding EN signal on $auto$ff.cc:262:slice$12825 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$15427 [22], Q = \P2.reg1 [22]).
Adding EN signal on $auto$ff.cc:262:slice$12824 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$15427 [21], Q = \P2.reg1 [21]).
Adding EN signal on $auto$ff.cc:262:slice$12823 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$15427 [20], Q = \P2.reg1 [20]).
Adding EN signal on $auto$ff.cc:262:slice$12822 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$15427 [19], Q = \P2.reg1 [19]).
Adding EN signal on $auto$ff.cc:262:slice$12821 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$15427 [18], Q = \P2.reg1 [18]).
Adding EN signal on $auto$ff.cc:262:slice$12820 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$15427 [17], Q = \P2.reg1 [17]).
Adding EN signal on $auto$ff.cc:262:slice$12819 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$15427 [16], Q = \P2.reg1 [16]).
Adding EN signal on $auto$ff.cc:262:slice$12818 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$15427 [15], Q = \P2.reg1 [15]).
Adding EN signal on $auto$ff.cc:262:slice$12817 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$15427 [14], Q = \P2.reg1 [14]).
Adding EN signal on $auto$ff.cc:262:slice$12816 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$15427 [13], Q = \P2.reg1 [13]).
Adding EN signal on $auto$ff.cc:262:slice$12815 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$15427 [12], Q = \P2.reg1 [12]).
Adding EN signal on $auto$ff.cc:262:slice$12814 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$15427 [11], Q = \P2.reg1 [11]).
Adding EN signal on $auto$ff.cc:262:slice$12813 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$15427 [10], Q = \P2.reg1 [10]).
Adding EN signal on $auto$ff.cc:262:slice$12812 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$15427 [9], Q = \P2.reg1 [9]).
Adding EN signal on $auto$ff.cc:262:slice$12811 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$15427 [8], Q = \P2.reg1 [8]).
Adding EN signal on $auto$ff.cc:262:slice$12810 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$15427 [7], Q = \P2.reg1 [7]).
Adding EN signal on $auto$ff.cc:262:slice$12809 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$15427 [6], Q = \P2.reg1 [6]).
Adding EN signal on $auto$ff.cc:262:slice$12808 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$15427 [5], Q = \P2.reg1 [5]).
Adding EN signal on $auto$ff.cc:262:slice$12807 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$15427 [4], Q = \P2.reg1 [4]).
Adding EN signal on $auto$ff.cc:262:slice$12806 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$15427 [3], Q = \P2.reg1 [3]).
Adding EN signal on $auto$ff.cc:262:slice$12805 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$15427 [2], Q = \P2.reg1 [2]).
Adding EN signal on $auto$ff.cc:262:slice$12804 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$15427 [1], Q = \P2.reg1 [1]).
Adding EN signal on $auto$ff.cc:262:slice$12803 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$15427 [0], Q = \P2.reg1 [0]).
Adding EN signal on $auto$ff.cc:262:slice$12802 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14943 [31], Q = \P2.reg2 [31]).
Adding EN signal on $auto$ff.cc:262:slice$12801 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14943 [30], Q = \P2.reg2 [30]).
Adding EN signal on $auto$ff.cc:262:slice$12800 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14943 [29], Q = \P2.reg2 [29]).
Adding EN signal on $auto$ff.cc:262:slice$12799 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14943 [28], Q = \P2.reg2 [28]).
Adding EN signal on $auto$ff.cc:262:slice$12798 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14943 [27], Q = \P2.reg2 [27]).
Adding EN signal on $auto$ff.cc:262:slice$12797 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14943 [26], Q = \P2.reg2 [26]).
Adding EN signal on $auto$ff.cc:262:slice$12796 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14943 [25], Q = \P2.reg2 [25]).
Adding EN signal on $auto$ff.cc:262:slice$12795 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14943 [24], Q = \P2.reg2 [24]).
Adding EN signal on $auto$ff.cc:262:slice$12794 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14943 [23], Q = \P2.reg2 [23]).
Adding EN signal on $auto$ff.cc:262:slice$12793 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14943 [22], Q = \P2.reg2 [22]).
Adding EN signal on $auto$ff.cc:262:slice$12792 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14943 [21], Q = \P2.reg2 [21]).
Adding EN signal on $auto$ff.cc:262:slice$12791 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14943 [20], Q = \P2.reg2 [20]).
Adding EN signal on $auto$ff.cc:262:slice$12790 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14943 [19], Q = \P2.reg2 [19]).
Adding EN signal on $auto$ff.cc:262:slice$12789 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14943 [18], Q = \P2.reg2 [18]).
Adding EN signal on $auto$ff.cc:262:slice$12788 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14943 [17], Q = \P2.reg2 [17]).
Adding EN signal on $auto$ff.cc:262:slice$12787 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14943 [16], Q = \P2.reg2 [16]).
Adding EN signal on $auto$ff.cc:262:slice$12786 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14943 [15], Q = \P2.reg2 [15]).
Adding EN signal on $auto$ff.cc:262:slice$12785 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14943 [14], Q = \P2.reg2 [14]).
Adding EN signal on $auto$ff.cc:262:slice$12784 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14943 [13], Q = \P2.reg2 [13]).
Adding EN signal on $auto$ff.cc:262:slice$12783 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14943 [12], Q = \P2.reg2 [12]).
Adding EN signal on $auto$ff.cc:262:slice$12782 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14943 [11], Q = \P2.reg2 [11]).
Adding EN signal on $auto$ff.cc:262:slice$12781 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14943 [10], Q = \P2.reg2 [10]).
Adding EN signal on $auto$ff.cc:262:slice$12780 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14943 [9], Q = \P2.reg2 [9]).
Adding EN signal on $auto$ff.cc:262:slice$12779 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14943 [8], Q = \P2.reg2 [8]).
Adding EN signal on $auto$ff.cc:262:slice$12778 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14943 [7], Q = \P2.reg2 [7]).
Adding EN signal on $auto$ff.cc:262:slice$12777 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14943 [6], Q = \P2.reg2 [6]).
Adding EN signal on $auto$ff.cc:262:slice$12776 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14943 [5], Q = \P2.reg2 [5]).
Adding EN signal on $auto$ff.cc:262:slice$12775 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14943 [4], Q = \P2.reg2 [4]).
Adding EN signal on $auto$ff.cc:262:slice$12774 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14943 [3], Q = \P2.reg2 [3]).
Adding EN signal on $auto$ff.cc:262:slice$12773 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14943 [2], Q = \P2.reg2 [2]).
Adding EN signal on $auto$ff.cc:262:slice$12772 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14943 [1], Q = \P2.reg2 [1]).
Adding EN signal on $auto$ff.cc:262:slice$12771 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14943 [0], Q = \P2.reg2 [0]).
Adding EN signal on $auto$ff.cc:262:slice$18454 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14459 [2], Q = \P2.reg3 [2]).
Adding EN signal on $auto$ff.cc:262:slice$18453 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14459 [1], Q = \P2.reg3 [1]).
Adding EN signal on $auto$ff.cc:262:slice$18452 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$14459 [0], Q = \P2.reg3 [0]).
Adding EN signal on $auto$ff.cc:262:slice$18450 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21483 [31], Q = \P3.reg0 [31]).
Adding EN signal on $auto$ff.cc:262:slice$18449 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21483 [30], Q = \P3.reg0 [30]).
Adding EN signal on $auto$ff.cc:262:slice$18448 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21483 [29], Q = \P3.reg0 [29]).
Adding EN signal on $auto$ff.cc:262:slice$18447 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21483 [28], Q = \P3.reg0 [28]).
Adding EN signal on $auto$ff.cc:262:slice$18446 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21483 [27], Q = \P3.reg0 [27]).
Adding EN signal on $auto$ff.cc:262:slice$18445 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21483 [26], Q = \P3.reg0 [26]).
Adding EN signal on $auto$ff.cc:262:slice$18444 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21483 [25], Q = \P3.reg0 [25]).
Adding EN signal on $auto$ff.cc:262:slice$18443 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21483 [24], Q = \P3.reg0 [24]).
Adding EN signal on $auto$ff.cc:262:slice$18442 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21483 [23], Q = \P3.reg0 [23]).
Adding EN signal on $auto$ff.cc:262:slice$18441 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21483 [22], Q = \P3.reg0 [22]).
Adding EN signal on $auto$ff.cc:262:slice$18440 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21483 [21], Q = \P3.reg0 [21]).
Adding EN signal on $auto$ff.cc:262:slice$18439 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21483 [20], Q = \P3.reg0 [20]).
Adding EN signal on $auto$ff.cc:262:slice$18438 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21483 [19], Q = \P3.reg0 [19]).
Adding EN signal on $auto$ff.cc:262:slice$18437 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21483 [18], Q = \P3.reg0 [18]).
Adding EN signal on $auto$ff.cc:262:slice$18436 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21483 [17], Q = \P3.reg0 [17]).
Adding EN signal on $auto$ff.cc:262:slice$18435 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21483 [16], Q = \P3.reg0 [16]).
Adding EN signal on $auto$ff.cc:262:slice$18434 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21483 [15], Q = \P3.reg0 [15]).
Adding EN signal on $auto$ff.cc:262:slice$18433 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21483 [14], Q = \P3.reg0 [14]).
Adding EN signal on $auto$ff.cc:262:slice$18432 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21483 [13], Q = \P3.reg0 [13]).
Adding EN signal on $auto$ff.cc:262:slice$18431 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21483 [12], Q = \P3.reg0 [12]).
Adding EN signal on $auto$ff.cc:262:slice$18430 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21483 [11], Q = \P3.reg0 [11]).
Adding EN signal on $auto$ff.cc:262:slice$18429 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21483 [10], Q = \P3.reg0 [10]).
Adding EN signal on $auto$ff.cc:262:slice$18428 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21483 [9], Q = \P3.reg0 [9]).
Adding EN signal on $auto$ff.cc:262:slice$18427 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21483 [8], Q = \P3.reg0 [8]).
Adding EN signal on $auto$ff.cc:262:slice$18426 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21483 [7], Q = \P3.reg0 [7]).
Adding EN signal on $auto$ff.cc:262:slice$18425 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21483 [6], Q = \P3.reg0 [6]).
Adding EN signal on $auto$ff.cc:262:slice$18424 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21483 [5], Q = \P3.reg0 [5]).
Adding EN signal on $auto$ff.cc:262:slice$18423 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21483 [4], Q = \P3.reg0 [4]).
Adding EN signal on $auto$ff.cc:262:slice$18422 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21483 [3], Q = \P3.reg0 [3]).
Adding EN signal on $auto$ff.cc:262:slice$18421 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21483 [2], Q = \P3.reg0 [2]).
Adding EN signal on $auto$ff.cc:262:slice$18420 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21483 [1], Q = \P3.reg0 [1]).
Adding EN signal on $auto$ff.cc:262:slice$18419 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21483 [0], Q = \P3.reg0 [0]).
Adding EN signal on $auto$ff.cc:262:slice$18418 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20999 [31], Q = \P3.reg1 [31]).
Adding EN signal on $auto$ff.cc:262:slice$18417 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20999 [30], Q = \P3.reg1 [30]).
Adding EN signal on $auto$ff.cc:262:slice$18416 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20999 [29], Q = \P3.reg1 [29]).
Adding EN signal on $auto$ff.cc:262:slice$18415 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20999 [28], Q = \P3.reg1 [28]).
Adding EN signal on $auto$ff.cc:262:slice$18414 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20999 [27], Q = \P3.reg1 [27]).
Adding EN signal on $auto$ff.cc:262:slice$18413 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20999 [26], Q = \P3.reg1 [26]).
Adding EN signal on $auto$ff.cc:262:slice$18412 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20999 [25], Q = \P3.reg1 [25]).
Adding EN signal on $auto$ff.cc:262:slice$18411 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20999 [24], Q = \P3.reg1 [24]).
Adding EN signal on $auto$ff.cc:262:slice$18410 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20999 [23], Q = \P3.reg1 [23]).
Adding EN signal on $auto$ff.cc:262:slice$18409 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20999 [22], Q = \P3.reg1 [22]).
Adding EN signal on $auto$ff.cc:262:slice$18408 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20999 [21], Q = \P3.reg1 [21]).
Adding EN signal on $auto$ff.cc:262:slice$18407 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20999 [20], Q = \P3.reg1 [20]).
Adding EN signal on $auto$ff.cc:262:slice$18406 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20999 [19], Q = \P3.reg1 [19]).
Adding EN signal on $auto$ff.cc:262:slice$18405 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20999 [18], Q = \P3.reg1 [18]).
Adding EN signal on $auto$ff.cc:262:slice$18404 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20999 [17], Q = \P3.reg1 [17]).
Adding EN signal on $auto$ff.cc:262:slice$18403 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20999 [16], Q = \P3.reg1 [16]).
Adding EN signal on $auto$ff.cc:262:slice$18402 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20999 [15], Q = \P3.reg1 [15]).
Adding EN signal on $auto$ff.cc:262:slice$18401 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20999 [14], Q = \P3.reg1 [14]).
Adding EN signal on $auto$ff.cc:262:slice$18400 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20999 [13], Q = \P3.reg1 [13]).
Adding EN signal on $auto$ff.cc:262:slice$18399 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20999 [12], Q = \P3.reg1 [12]).
Adding EN signal on $auto$ff.cc:262:slice$18398 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20999 [11], Q = \P3.reg1 [11]).
Adding EN signal on $auto$ff.cc:262:slice$18397 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20999 [10], Q = \P3.reg1 [10]).
Adding EN signal on $auto$ff.cc:262:slice$18396 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20999 [9], Q = \P3.reg1 [9]).
Adding EN signal on $auto$ff.cc:262:slice$18395 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20999 [8], Q = \P3.reg1 [8]).
Adding EN signal on $auto$ff.cc:262:slice$18394 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20999 [7], Q = \P3.reg1 [7]).
Adding EN signal on $auto$ff.cc:262:slice$18393 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20999 [6], Q = \P3.reg1 [6]).
Adding EN signal on $auto$ff.cc:262:slice$18392 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20999 [5], Q = \P3.reg1 [5]).
Adding EN signal on $auto$ff.cc:262:slice$18391 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20999 [4], Q = \P3.reg1 [4]).
Adding EN signal on $auto$ff.cc:262:slice$18390 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20999 [3], Q = \P3.reg1 [3]).
Adding EN signal on $auto$ff.cc:262:slice$18389 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20999 [2], Q = \P3.reg1 [2]).
Adding EN signal on $auto$ff.cc:262:slice$18388 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20999 [1], Q = \P3.reg1 [1]).
Adding EN signal on $auto$ff.cc:262:slice$18387 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20999 [0], Q = \P3.reg1 [0]).
Adding EN signal on $auto$ff.cc:262:slice$18386 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20515 [31], Q = \P3.reg2 [31]).
Adding EN signal on $auto$ff.cc:262:slice$18385 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20515 [30], Q = \P3.reg2 [30]).
Adding EN signal on $auto$ff.cc:262:slice$18384 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20515 [29], Q = \P3.reg2 [29]).
Adding EN signal on $auto$ff.cc:262:slice$18383 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20515 [28], Q = \P3.reg2 [28]).
Adding EN signal on $auto$ff.cc:262:slice$18382 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20515 [27], Q = \P3.reg2 [27]).
Adding EN signal on $auto$ff.cc:262:slice$18381 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20515 [26], Q = \P3.reg2 [26]).
Adding EN signal on $auto$ff.cc:262:slice$18380 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20515 [25], Q = \P3.reg2 [25]).
Adding EN signal on $auto$ff.cc:262:slice$18379 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20515 [24], Q = \P3.reg2 [24]).
Adding EN signal on $auto$ff.cc:262:slice$18378 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20515 [23], Q = \P3.reg2 [23]).
Adding EN signal on $auto$ff.cc:262:slice$18377 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20515 [22], Q = \P3.reg2 [22]).
Adding EN signal on $auto$ff.cc:262:slice$18376 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20515 [21], Q = \P3.reg2 [21]).
Adding EN signal on $auto$ff.cc:262:slice$18375 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20515 [20], Q = \P3.reg2 [20]).
Adding EN signal on $auto$ff.cc:262:slice$18374 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20515 [19], Q = \P3.reg2 [19]).
Adding EN signal on $auto$ff.cc:262:slice$18373 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20515 [18], Q = \P3.reg2 [18]).
Adding EN signal on $auto$ff.cc:262:slice$18372 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20515 [17], Q = \P3.reg2 [17]).
Adding EN signal on $auto$ff.cc:262:slice$18371 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20515 [16], Q = \P3.reg2 [16]).
Adding EN signal on $auto$ff.cc:262:slice$18370 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20515 [15], Q = \P3.reg2 [15]).
Adding EN signal on $auto$ff.cc:262:slice$18369 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20515 [14], Q = \P3.reg2 [14]).
Adding EN signal on $auto$ff.cc:262:slice$18368 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20515 [13], Q = \P3.reg2 [13]).
Adding EN signal on $auto$ff.cc:262:slice$18367 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20515 [12], Q = \P3.reg2 [12]).
Adding EN signal on $auto$ff.cc:262:slice$18366 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20515 [11], Q = \P3.reg2 [11]).
Adding EN signal on $auto$ff.cc:262:slice$18365 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20515 [10], Q = \P3.reg2 [10]).
Adding EN signal on $auto$ff.cc:262:slice$18364 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20515 [9], Q = \P3.reg2 [9]).
Adding EN signal on $auto$ff.cc:262:slice$18363 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20515 [8], Q = \P3.reg2 [8]).
Adding EN signal on $auto$ff.cc:262:slice$18362 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20515 [7], Q = \P3.reg2 [7]).
Adding EN signal on $auto$ff.cc:262:slice$18361 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20515 [6], Q = \P3.reg2 [6]).
Adding EN signal on $auto$ff.cc:262:slice$18360 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20515 [5], Q = \P3.reg2 [5]).
Adding EN signal on $auto$ff.cc:262:slice$18359 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20515 [4], Q = \P3.reg2 [4]).
Adding EN signal on $auto$ff.cc:262:slice$18358 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20515 [3], Q = \P3.reg2 [3]).
Adding EN signal on $auto$ff.cc:262:slice$18357 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20515 [2], Q = \P3.reg2 [2]).
Adding EN signal on $auto$ff.cc:262:slice$18356 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20515 [1], Q = \P3.reg2 [1]).
Adding EN signal on $auto$ff.cc:262:slice$18355 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20515 [0], Q = \P3.reg2 [0]).
Adding EN signal on $auto$ff.cc:262:slice$12901 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7659 [2], Q = \P1.reg3 [2]).
Adding EN signal on $auto$ff.cc:262:slice$12900 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7659 [1], Q = \P1.reg3 [1]).
Adding EN signal on $auto$ff.cc:262:slice$12899 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$7659 [0], Q = \P1.reg3 [0]).
Adding EN signal on $auto$ff.cc:262:slice$12866 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$15911 [31], Q = \P2.reg0 [31]).
Adding EN signal on $auto$ff.cc:262:slice$12865 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$15911 [30], Q = \P2.reg0 [30]).
Adding EN signal on $auto$ff.cc:262:slice$12864 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$15911 [29], Q = \P2.reg0 [29]).
Adding EN signal on $auto$ff.cc:262:slice$12863 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$15911 [28], Q = \P2.reg0 [28]).
Adding EN signal on $auto$ff.cc:262:slice$12862 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$15911 [27], Q = \P2.reg0 [27]).
Adding EN signal on $auto$ff.cc:262:slice$12861 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$15911 [26], Q = \P2.reg0 [26]).
Adding EN signal on $auto$ff.cc:262:slice$12860 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$15911 [25], Q = \P2.reg0 [25]).
Adding EN signal on $auto$ff.cc:262:slice$12859 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$15911 [24], Q = \P2.reg0 [24]).
Adding EN signal on $auto$ff.cc:262:slice$12858 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$15911 [23], Q = \P2.reg0 [23]).
Adding EN signal on $auto$ff.cc:262:slice$12857 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$15911 [22], Q = \P2.reg0 [22]).
Adding EN signal on $auto$ff.cc:262:slice$12856 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$15911 [21], Q = \P2.reg0 [21]).
Adding EN signal on $auto$ff.cc:262:slice$12855 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$15911 [20], Q = \P2.reg0 [20]).
Adding EN signal on $auto$ff.cc:262:slice$12854 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$15911 [19], Q = \P2.reg0 [19]).
Adding EN signal on $auto$ff.cc:262:slice$12853 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$15911 [18], Q = \P2.reg0 [18]).
Adding EN signal on $auto$ff.cc:262:slice$12852 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$15911 [17], Q = \P2.reg0 [17]).
Adding EN signal on $auto$ff.cc:262:slice$12851 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$15911 [16], Q = \P2.reg0 [16]).
Adding EN signal on $auto$ff.cc:262:slice$12850 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$15911 [15], Q = \P2.reg0 [15]).
Adding EN signal on $auto$ff.cc:262:slice$12849 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$15911 [14], Q = \P2.reg0 [14]).
Adding EN signal on $auto$ff.cc:262:slice$12848 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$15911 [13], Q = \P2.reg0 [13]).
Adding EN signal on $auto$ff.cc:262:slice$12847 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$15911 [12], Q = \P2.reg0 [12]).
Adding EN signal on $auto$ff.cc:262:slice$12846 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$15911 [11], Q = \P2.reg0 [11]).
Adding EN signal on $auto$ff.cc:262:slice$12845 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$15911 [10], Q = \P2.reg0 [10]).
Adding EN signal on $auto$ff.cc:262:slice$12844 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$15911 [9], Q = \P2.reg0 [9]).
Adding EN signal on $auto$ff.cc:262:slice$12843 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$15911 [8], Q = \P2.reg0 [8]).
Adding EN signal on $auto$ff.cc:262:slice$12842 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$15911 [7], Q = \P2.reg0 [7]).
Adding EN signal on $auto$ff.cc:262:slice$12841 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$15911 [6], Q = \P2.reg0 [6]).
Adding EN signal on $auto$ff.cc:262:slice$12840 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$15911 [5], Q = \P2.reg0 [5]).
Adding EN signal on $auto$ff.cc:262:slice$12839 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$15911 [4], Q = \P2.reg0 [4]).
Adding EN signal on $auto$ff.cc:262:slice$12838 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$15911 [3], Q = \P2.reg0 [3]).
Adding EN signal on $auto$ff.cc:262:slice$12837 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$15911 [2], Q = \P2.reg0 [2]).
Adding EN signal on $auto$ff.cc:262:slice$12836 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$15911 [1], Q = \P2.reg0 [1]).
Adding EN signal on $auto$ff.cc:262:slice$12835 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$15911 [0], Q = \P2.reg0 [0]).
Adding EN signal on $auto$ff.cc:262:slice$12834 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$15427 [31], Q = \P2.reg1 [31]).
Adding EN signal on $auto$ff.cc:262:slice$6874 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$9111 [31], Q = \P1.reg0 [31]).
Adding EN signal on $auto$ff.cc:262:slice$6873 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$9111 [30], Q = \P1.reg0 [30]).
Adding EN signal on $auto$ff.cc:262:slice$6872 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$9111 [29], Q = \P1.reg0 [29]).
Adding EN signal on $auto$ff.cc:262:slice$6871 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$9111 [28], Q = \P1.reg0 [28]).
Adding EN signal on $auto$ff.cc:262:slice$6870 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$9111 [27], Q = \P1.reg0 [27]).
Adding EN signal on $auto$ff.cc:262:slice$6869 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$9111 [26], Q = \P1.reg0 [26]).
Adding EN signal on $auto$ff.cc:262:slice$6868 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$9111 [25], Q = \P1.reg0 [25]).
Adding EN signal on $auto$ff.cc:262:slice$6867 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$9111 [24], Q = \P1.reg0 [24]).
Adding EN signal on $auto$ff.cc:262:slice$6866 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$9111 [23], Q = \P1.reg0 [23]).
Adding EN signal on $auto$ff.cc:262:slice$6865 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$9111 [22], Q = \P1.reg0 [22]).
Adding EN signal on $auto$ff.cc:262:slice$6864 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$9111 [21], Q = \P1.reg0 [21]).
Adding EN signal on $auto$ff.cc:262:slice$6863 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$9111 [20], Q = \P1.reg0 [20]).
Adding EN signal on $auto$ff.cc:262:slice$6862 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$9111 [19], Q = \P1.reg0 [19]).
Adding EN signal on $auto$ff.cc:262:slice$6861 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$9111 [18], Q = \P1.reg0 [18]).
Adding EN signal on $auto$ff.cc:262:slice$6860 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$9111 [17], Q = \P1.reg0 [17]).
Adding EN signal on $auto$ff.cc:262:slice$6859 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$9111 [16], Q = \P1.reg0 [16]).
Adding EN signal on $auto$ff.cc:262:slice$6858 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$9111 [15], Q = \P1.reg0 [15]).
Adding EN signal on $auto$ff.cc:262:slice$6857 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$9111 [14], Q = \P1.reg0 [14]).
Adding EN signal on $auto$ff.cc:262:slice$6856 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$9111 [13], Q = \P1.reg0 [13]).
Adding EN signal on $auto$ff.cc:262:slice$6855 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$9111 [12], Q = \P1.reg0 [12]).
Adding EN signal on $auto$ff.cc:262:slice$6854 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$9111 [11], Q = \P1.reg0 [11]).
Adding EN signal on $auto$ff.cc:262:slice$6853 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$9111 [10], Q = \P1.reg0 [10]).
Adding EN signal on $auto$ff.cc:262:slice$6852 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$9111 [9], Q = \P1.reg0 [9]).
Adding EN signal on $auto$ff.cc:262:slice$6851 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$9111 [8], Q = \P1.reg0 [8]).
Adding EN signal on $auto$ff.cc:262:slice$6850 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$9111 [7], Q = \P1.reg0 [7]).
Adding EN signal on $auto$ff.cc:262:slice$6849 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$9111 [6], Q = \P1.reg0 [6]).
Adding EN signal on $auto$ff.cc:262:slice$6848 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$9111 [5], Q = \P1.reg0 [5]).
Adding EN signal on $auto$ff.cc:262:slice$6847 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$9111 [4], Q = \P1.reg0 [4]).
Adding EN signal on $auto$ff.cc:262:slice$6846 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$9111 [3], Q = \P1.reg0 [3]).
Adding EN signal on $auto$ff.cc:262:slice$6845 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$9111 [2], Q = \P1.reg0 [2]).
Adding EN signal on $auto$ff.cc:262:slice$6844 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$9111 [1], Q = \P1.reg0 [1]).
Adding EN signal on $auto$ff.cc:262:slice$6843 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$9111 [0], Q = \P1.reg0 [0]).
Adding EN signal on $auto$ff.cc:262:slice$6842 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$8627 [31], Q = \P1.reg1 [31]).
Adding EN signal on $auto$ff.cc:262:slice$6841 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$8627 [30], Q = \P1.reg1 [30]).
Adding EN signal on $auto$ff.cc:262:slice$6840 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$8627 [29], Q = \P1.reg1 [29]).
Adding EN signal on $auto$ff.cc:262:slice$6839 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$8627 [28], Q = \P1.reg1 [28]).
Adding EN signal on $auto$ff.cc:262:slice$6838 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$8627 [27], Q = \P1.reg1 [27]).
Adding EN signal on $auto$ff.cc:262:slice$6837 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$8627 [26], Q = \P1.reg1 [26]).
Adding EN signal on $auto$ff.cc:262:slice$6836 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$8627 [25], Q = \P1.reg1 [25]).
Adding EN signal on $auto$ff.cc:262:slice$6835 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$8627 [24], Q = \P1.reg1 [24]).
Adding EN signal on $auto$ff.cc:262:slice$6834 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$8627 [23], Q = \P1.reg1 [23]).
Adding EN signal on $auto$ff.cc:262:slice$6833 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$8627 [22], Q = \P1.reg1 [22]).
Adding EN signal on $auto$ff.cc:262:slice$6832 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$8627 [21], Q = \P1.reg1 [21]).
Adding EN signal on $auto$ff.cc:262:slice$6831 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$8627 [20], Q = \P1.reg1 [20]).
Adding EN signal on $auto$ff.cc:262:slice$6830 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$8627 [19], Q = \P1.reg1 [19]).
Adding EN signal on $auto$ff.cc:262:slice$6829 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$8627 [18], Q = \P1.reg1 [18]).
Adding EN signal on $auto$ff.cc:262:slice$6828 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$8627 [17], Q = \P1.reg1 [17]).
Adding EN signal on $auto$ff.cc:262:slice$6827 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$8627 [16], Q = \P1.reg1 [16]).
Adding EN signal on $auto$ff.cc:262:slice$6826 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$8627 [15], Q = \P1.reg1 [15]).
Adding EN signal on $auto$ff.cc:262:slice$6825 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$8627 [14], Q = \P1.reg1 [14]).
Adding EN signal on $auto$ff.cc:262:slice$6824 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$8627 [13], Q = \P1.reg1 [13]).
Adding EN signal on $auto$ff.cc:262:slice$6823 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$8627 [12], Q = \P1.reg1 [12]).
Adding EN signal on $auto$ff.cc:262:slice$6822 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$8627 [11], Q = \P1.reg1 [11]).
Adding EN signal on $auto$ff.cc:262:slice$6821 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$8627 [10], Q = \P1.reg1 [10]).
Adding EN signal on $auto$ff.cc:262:slice$6820 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$8627 [9], Q = \P1.reg1 [9]).
Adding EN signal on $auto$ff.cc:262:slice$6819 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$8627 [8], Q = \P1.reg1 [8]).
Adding EN signal on $auto$ff.cc:262:slice$6818 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$8627 [7], Q = \P1.reg1 [7]).
Adding EN signal on $auto$ff.cc:262:slice$6817 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$8627 [6], Q = \P1.reg1 [6]).
Adding EN signal on $auto$ff.cc:262:slice$6816 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$8627 [5], Q = \P1.reg1 [5]).
Adding EN signal on $auto$ff.cc:262:slice$6815 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$8627 [4], Q = \P1.reg1 [4]).
Adding EN signal on $auto$ff.cc:262:slice$6814 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$8627 [3], Q = \P1.reg1 [3]).
Adding EN signal on $auto$ff.cc:262:slice$6813 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$8627 [2], Q = \P1.reg1 [2]).
Adding EN signal on $auto$ff.cc:262:slice$6812 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$8627 [1], Q = \P1.reg1 [1]).
Adding EN signal on $auto$ff.cc:262:slice$6811 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$8627 [0], Q = \P1.reg1 [0]).
Adding EN signal on $auto$ff.cc:262:slice$6810 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$8143 [31], Q = \P1.reg2 [31]).
Adding EN signal on $auto$ff.cc:262:slice$6809 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$8143 [30], Q = \P1.reg2 [30]).
Adding EN signal on $auto$ff.cc:262:slice$6808 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$8143 [29], Q = \P1.reg2 [29]).
Adding EN signal on $auto$ff.cc:262:slice$6807 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$8143 [28], Q = \P1.reg2 [28]).
Adding EN signal on $auto$ff.cc:262:slice$6806 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$8143 [27], Q = \P1.reg2 [27]).
Adding EN signal on $auto$ff.cc:262:slice$6805 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$8143 [26], Q = \P1.reg2 [26]).
Adding EN signal on $auto$ff.cc:262:slice$6804 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$8143 [25], Q = \P1.reg2 [25]).
Adding EN signal on $auto$ff.cc:262:slice$6803 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$8143 [24], Q = \P1.reg2 [24]).
Adding EN signal on $auto$ff.cc:262:slice$6802 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$8143 [23], Q = \P1.reg2 [23]).
Adding EN signal on $auto$ff.cc:262:slice$6801 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$8143 [22], Q = \P1.reg2 [22]).
Adding EN signal on $auto$ff.cc:262:slice$6800 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$8143 [21], Q = \P1.reg2 [21]).
Adding EN signal on $auto$ff.cc:262:slice$6799 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$8143 [20], Q = \P1.reg2 [20]).
Adding EN signal on $auto$ff.cc:262:slice$6798 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$8143 [19], Q = \P1.reg2 [19]).
Adding EN signal on $auto$ff.cc:262:slice$6797 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$8143 [18], Q = \P1.reg2 [18]).
Adding EN signal on $auto$ff.cc:262:slice$6796 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$8143 [17], Q = \P1.reg2 [17]).
Adding EN signal on $auto$ff.cc:262:slice$6795 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$8143 [16], Q = \P1.reg2 [16]).
Adding EN signal on $auto$ff.cc:262:slice$6794 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$8143 [15], Q = \P1.reg2 [15]).
Adding EN signal on $auto$ff.cc:262:slice$6793 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$8143 [14], Q = \P1.reg2 [14]).
Adding EN signal on $auto$ff.cc:262:slice$6792 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$8143 [13], Q = \P1.reg2 [13]).
Adding EN signal on $auto$ff.cc:262:slice$6791 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$8143 [12], Q = \P1.reg2 [12]).
Adding EN signal on $auto$ff.cc:262:slice$6790 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$8143 [11], Q = \P1.reg2 [11]).
Adding EN signal on $auto$ff.cc:262:slice$6789 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$8143 [10], Q = \P1.reg2 [10]).
Adding EN signal on $auto$ff.cc:262:slice$6788 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$8143 [9], Q = \P1.reg2 [9]).
Adding EN signal on $auto$ff.cc:262:slice$6787 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$8143 [8], Q = \P1.reg2 [8]).
Adding EN signal on $auto$ff.cc:262:slice$6786 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$8143 [7], Q = \P1.reg2 [7]).
Adding EN signal on $auto$ff.cc:262:slice$6785 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$8143 [6], Q = \P1.reg2 [6]).
Adding EN signal on $auto$ff.cc:262:slice$6784 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$8143 [5], Q = \P1.reg2 [5]).
Adding EN signal on $auto$ff.cc:262:slice$6783 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$8143 [4], Q = \P1.reg2 [4]).
Adding EN signal on $auto$ff.cc:262:slice$6782 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$8143 [3], Q = \P1.reg2 [3]).
Adding EN signal on $auto$ff.cc:262:slice$6781 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$8143 [2], Q = \P1.reg2 [2]).
Adding EN signal on $auto$ff.cc:262:slice$6780 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$8143 [1], Q = \P1.reg2 [1]).
Adding EN signal on $auto$ff.cc:262:slice$6779 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$8143 [0], Q = \P1.reg2 [0]).

yosys> opt_clean

3.27.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 2488 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.27.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~6486 debug messages>

3.27.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.27.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.27.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
<suppressed ~30210 debug messages>
Removed a total of 10070 cells.

yosys> opt_dff

3.27.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 9684 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.27.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

3.27.23. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.27.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.27.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.27. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..

yosys> opt_expr

3.27.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

3.27.30. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~1860 debug messages>

yosys> opt_merge

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_dff

3.28.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$52736 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$15911 [0], Q = \P2.reg0 [0]).
Adding EN signal on $auto$ff.cc:262:slice$47090 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20999 [0], Q = \P3.reg1 [0]).
Adding EN signal on $auto$ff.cc:262:slice$47005 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20999 [1], Q = \P3.reg1 [1]).
Adding EN signal on $auto$ff.cc:262:slice$46920 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20999 [2], Q = \P3.reg1 [2]).
Adding EN signal on $auto$ff.cc:262:slice$46835 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20999 [3], Q = \P3.reg1 [3]).
Adding EN signal on $auto$ff.cc:262:slice$46750 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20999 [4], Q = \P3.reg1 [4]).
Adding EN signal on $auto$ff.cc:262:slice$46665 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20999 [5], Q = \P3.reg1 [5]).
Adding EN signal on $auto$ff.cc:262:slice$46580 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20999 [6], Q = \P3.reg1 [6]).
Adding EN signal on $auto$ff.cc:262:slice$46495 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20999 [7], Q = \P3.reg1 [7]).
Adding EN signal on $auto$ff.cc:262:slice$46410 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20999 [8], Q = \P3.reg1 [8]).
Adding EN signal on $auto$ff.cc:262:slice$46325 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20999 [9], Q = \P3.reg1 [9]).
Adding EN signal on $auto$ff.cc:262:slice$46240 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20999 [10], Q = \P3.reg1 [10]).
Adding EN signal on $auto$ff.cc:262:slice$46155 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20999 [11], Q = \P3.reg1 [11]).
Adding EN signal on $auto$ff.cc:262:slice$46070 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20999 [12], Q = \P3.reg1 [12]).
Adding EN signal on $auto$ff.cc:262:slice$45985 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20999 [13], Q = \P3.reg1 [13]).
Adding EN signal on $auto$ff.cc:262:slice$45900 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20999 [14], Q = \P3.reg1 [14]).
Adding EN signal on $auto$ff.cc:262:slice$45815 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20999 [15], Q = \P3.reg1 [15]).
Adding EN signal on $auto$ff.cc:262:slice$45730 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20999 [16], Q = \P3.reg1 [16]).
Adding EN signal on $auto$ff.cc:262:slice$45645 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20999 [17], Q = \P3.reg1 [17]).
Adding EN signal on $auto$ff.cc:262:slice$45560 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20999 [18], Q = \P3.reg1 [18]).
Adding EN signal on $auto$ff.cc:262:slice$45475 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20999 [19], Q = \P3.reg1 [19]).
Adding EN signal on $auto$ff.cc:262:slice$45390 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20999 [20], Q = \P3.reg1 [20]).
Adding EN signal on $auto$ff.cc:262:slice$45305 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20999 [21], Q = \P3.reg1 [21]).
Adding EN signal on $auto$ff.cc:262:slice$45220 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20999 [22], Q = \P3.reg1 [22]).
Adding EN signal on $auto$ff.cc:262:slice$45135 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20999 [23], Q = \P3.reg1 [23]).
Adding EN signal on $auto$ff.cc:262:slice$45050 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20999 [24], Q = \P3.reg1 [24]).
Adding EN signal on $auto$ff.cc:262:slice$44965 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20999 [25], Q = \P3.reg1 [25]).
Adding EN signal on $auto$ff.cc:262:slice$44880 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20999 [26], Q = \P3.reg1 [26]).
Adding EN signal on $auto$ff.cc:262:slice$44795 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20999 [27], Q = \P3.reg1 [27]).
Adding EN signal on $auto$ff.cc:262:slice$44710 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20999 [28], Q = \P3.reg1 [28]).
Adding EN signal on $auto$ff.cc:262:slice$44625 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20999 [29], Q = \P3.reg1 [29]).
Adding EN signal on $auto$ff.cc:262:slice$44540 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20999 [30], Q = \P3.reg1 [30]).
Adding EN signal on $auto$ff.cc:262:slice$44455 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$20999 [31], Q = \P3.reg1 [31]).
Adding EN signal on $auto$ff.cc:262:slice$44370 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21483 [0], Q = \P3.reg0 [0]).
Adding EN signal on $auto$ff.cc:262:slice$44285 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21483 [1], Q = \P3.reg0 [1]).
Adding EN signal on $auto$ff.cc:262:slice$44200 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21483 [2], Q = \P3.reg0 [2]).
Adding EN signal on $auto$ff.cc:262:slice$44115 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21483 [3], Q = \P3.reg0 [3]).
Adding EN signal on $auto$ff.cc:262:slice$44030 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21483 [4], Q = \P3.reg0 [4]).
Adding EN signal on $auto$ff.cc:262:slice$43945 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21483 [5], Q = \P3.reg0 [5]).
Adding EN signal on $auto$ff.cc:262:slice$43860 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21483 [6], Q = \P3.reg0 [6]).
Adding EN signal on $auto$ff.cc:262:slice$43775 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21483 [7], Q = \P3.reg0 [7]).
Adding EN signal on $auto$ff.cc:262:slice$43690 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21483 [8], Q = \P3.reg0 [8]).
Adding EN signal on $auto$ff.cc:262:slice$43605 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21483 [9], Q = \P3.reg0 [9]).
Adding EN signal on $auto$ff.cc:262:slice$43520 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21483 [10], Q = \P3.reg0 [10]).
Adding EN signal on $auto$ff.cc:262:slice$43435 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21483 [11], Q = \P3.reg0 [11]).
Adding EN signal on $auto$ff.cc:262:slice$43350 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21483 [12], Q = \P3.reg0 [12]).
Adding EN signal on $auto$ff.cc:262:slice$43265 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21483 [13], Q = \P3.reg0 [13]).
Adding EN signal on $auto$ff.cc:262:slice$43180 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21483 [14], Q = \P3.reg0 [14]).
Adding EN signal on $auto$ff.cc:262:slice$43095 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21483 [15], Q = \P3.reg0 [15]).
Adding EN signal on $auto$ff.cc:262:slice$43010 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21483 [16], Q = \P3.reg0 [16]).
Adding EN signal on $auto$ff.cc:262:slice$42925 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21483 [17], Q = \P3.reg0 [17]).
Adding EN signal on $auto$ff.cc:262:slice$42840 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21483 [18], Q = \P3.reg0 [18]).
Adding EN signal on $auto$ff.cc:262:slice$42755 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21483 [19], Q = \P3.reg0 [19]).
Adding EN signal on $auto$ff.cc:262:slice$42670 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21483 [20], Q = \P3.reg0 [20]).
Adding EN signal on $auto$ff.cc:262:slice$42585 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21483 [21], Q = \P3.reg0 [21]).
Adding EN signal on $auto$ff.cc:262:slice$42500 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21483 [22], Q = \P3.reg0 [22]).
Adding EN signal on $auto$ff.cc:262:slice$42415 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21483 [23], Q = \P3.reg0 [23]).
Adding EN signal on $auto$ff.cc:262:slice$42330 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21483 [24], Q = \P3.reg0 [24]).
Adding EN signal on $auto$ff.cc:262:slice$42245 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21483 [25], Q = \P3.reg0 [25]).
Adding EN signal on $auto$ff.cc:262:slice$42160 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21483 [26], Q = \P3.reg0 [26]).
Adding EN signal on $auto$ff.cc:262:slice$42075 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21483 [27], Q = \P3.reg0 [27]).
Adding EN signal on $auto$ff.cc:262:slice$41990 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21483 [28], Q = \P3.reg0 [28]).
Adding EN signal on $auto$ff.cc:262:slice$41905 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21483 [29], Q = \P3.reg0 [29]).
Adding EN signal on $auto$ff.cc:262:slice$41820 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21483 [30], Q = \P3.reg0 [30]).
Adding EN signal on $auto$ff.cc:262:slice$41735 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$21483 [31], Q = \P3.reg0 [31]).
Adding EN signal on $auto$ff.cc:262:slice$38761 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$15427 [0], Q = \P2.reg1 [0]).
Adding EN signal on $auto$ff.cc:262:slice$59170 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$8627 [0], Q = \P1.reg1 [0]).
Adding EN signal on $auto$ff.cc:262:slice$56003 ($_DFFE_PP0P_) from module b22 (D = $auto$simplemap.cc:309:simplemap_bmux$9111 [0], Q = \P1.reg0 [0]).

yosys> opt_clean

3.28.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 169 unused wires.
<suppressed ~1 debug messages>

3.28.5. Rerunning OPT passes. (Removed registers in this run.)

yosys> opt_expr -full

3.28.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~279 debug messages>

yosys> opt_merge

3.28.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
<suppressed ~762 debug messages>
Removed a total of 254 cells.

yosys> opt_dff

3.28.8. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 322 unused wires.
<suppressed ~1 debug messages>

3.28.10. Finished fast OPT passes.

yosys> memory_map

3.29. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.30. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

yosys> opt_merge -nomux

3.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_share

3.30.6. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$10274 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$10294
        $auto$simplemap.cc:86:simplemap_bitop$10295

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$10275 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$10292
        $auto$simplemap.cc:86:simplemap_bitop$10293

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$10276 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$10290
        $auto$simplemap.cc:86:simplemap_bitop$10291

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$10277 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$10288
        $auto$simplemap.cc:86:simplemap_bitop$10289

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$17035 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$17055
        $auto$simplemap.cc:86:simplemap_bitop$17056

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$17036 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$17053
        $auto$simplemap.cc:86:simplemap_bitop$17054

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$17037 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$17051
        $auto$simplemap.cc:86:simplemap_bitop$17052

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$17038 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$17049
        $auto$simplemap.cc:86:simplemap_bitop$17050

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$22632 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$22652
        $auto$simplemap.cc:86:simplemap_bitop$22653

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$22633 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$22650
        $auto$simplemap.cc:86:simplemap_bitop$22651

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$22634 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$22648
        $auto$simplemap.cc:86:simplemap_bitop$22649

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$22635 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$22646
        $auto$simplemap.cc:86:simplemap_bitop$22647


yosys> opt_dff

3.30.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 24 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.30.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~12 debug messages>

3.30.10. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.30.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~12 debug messages>

yosys> opt_reduce -full

3.30.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.30.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_share

3.30.14. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$10281 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$10292
        $auto$simplemap.cc:86:simplemap_bitop$10294

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$10282 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$10288
        $auto$simplemap.cc:86:simplemap_bitop$10290

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$17042 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$17053
        $auto$simplemap.cc:86:simplemap_bitop$17055

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$17043 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$17049
        $auto$simplemap.cc:86:simplemap_bitop$17051

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$22639 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$22650
        $auto$simplemap.cc:86:simplemap_bitop$22652

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$22640 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$22646
        $auto$simplemap.cc:86:simplemap_bitop$22648


yosys> opt_dff

3.30.15. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 12 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.30.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~6 debug messages>

3.30.18. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.30.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~6 debug messages>

yosys> opt_reduce -full

3.30.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.30.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_share

3.30.22. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$10285 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$10288
        $auto$simplemap.cc:86:simplemap_bitop$10292

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$17046 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$17049
        $auto$simplemap.cc:86:simplemap_bitop$17053

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$22643 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$22646
        $auto$simplemap.cc:86:simplemap_bitop$22650


yosys> opt_dff

3.30.23. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 6 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.30.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~3 debug messages>

3.30.26. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.30.27. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~3 debug messages>

yosys> opt_reduce -full

3.30.28. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.30.29. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_share

3.30.30. Executing OPT_SHARE pass.

yosys> opt_dff

3.30.31. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.32. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..

yosys> opt_expr -full

3.30.33. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

3.30.34. Finished OPT passes. (There is nothing left to do.)

yosys> techmap -map +/techmap.v

3.31. Executing TECHMAP pass (map to technology primitives).

3.31.1. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.31.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
No more expansions possible.
<suppressed ~92 debug messages>

yosys> opt -sat

3.32. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

yosys> opt_merge -nomux

3.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
<suppressed ~63 debug messages>
Removed a total of 21 cells.

yosys> opt_muxtree

3.32.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.32.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.32.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.32.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.32.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 9 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

3.32.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.32.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.32.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.32.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.32.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.32.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..

yosys> opt_expr

3.32.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

3.32.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

3.33. Executing ABC pass (technology mapping using ABC).

3.33.1. Summary of detected clock domains:
  29 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$70531, arst=\reset, srst={ }
  31 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$70514, arst=\reset, srst={ }
  34 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$70497, arst=\reset, srst={ }
  703 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$69953, arst=\reset, srst={ }
  525 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$69409, arst=\reset, srst={ }
  26 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$69392, arst=\reset, srst={ }
  232 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$2432, arst=\reset, srst={ }
  41 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$61916, arst=\reset, srst={ }
  743 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$59312, arst=\reset, srst={ }
  602 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$56159, arst=\reset, srst={ }
  911 cells in clk=\clock, en=\P3.state, arst=\reset, srst={ }
  497 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$52992, arst=\reset, srst={ }
  759 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$49725, arst=\reset, srst={ }
  29 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$49629, arst=\reset, srst={ }
  73 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$49490, arst=\reset, srst={ }
  882 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$47236, arst=\reset, srst={ }
  768 cells in clk=\clock, en=\P2.state, arst=\reset, srst={ }
  38 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$41728, arst=\reset, srst={ }
  88 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$41589, arst=\reset, srst={ }
  29 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$41507, arst=\reset, srst={ }
  566 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$38903, arst=\reset, srst={ }
  562 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$35850, arst=\reset, srst={ }
  107 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$33816, arst=\reset, srst={ }
  578 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$33711, arst=\reset, srst={ }
  571 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$33593, arst=\reset, srst={ }
  493 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$33475, arst=\reset, srst={ }
  127 cells in clk=\clock, en=$auto$opt_dff.cc:194:make_patterns_logic$33351, arst=\reset, srst={ }
  189 cells in clk=\clock, en=$auto$opt_dff.cc:194:make_patterns_logic$33333, arst=\reset, srst={ }
  148 cells in clk=\clock, en=$auto$opt_dff.cc:194:make_patterns_logic$33315, arst=\reset, srst={ }
  651 cells in clk=\clock, en=\P1.state, arst=\reset, srst={ }
  450 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$2393, arst=\reset, srst={ }
  1441 cells in clk=\clock, en={ }, arst=\reset, srst={ }

3.33.2. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$70531, asynchronously reset by \reset
Extracted 25 gates and 47 wires to a netlist network with 21 inputs and 8 outputs.

3.33.2.1. Executing ABC.

3.33.3. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$70514, asynchronously reset by \reset
Extracted 27 gates and 53 wires to a netlist network with 24 inputs and 7 outputs.

3.33.3.1. Executing ABC.

3.33.4. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$70497, asynchronously reset by \reset
Extracted 26 gates and 49 wires to a netlist network with 22 inputs and 10 outputs.

3.33.4.1. Executing ABC.

3.33.5. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$69953, asynchronously reset by \reset
Extracted 643 gates and 851 wires to a netlist network with 207 inputs and 157 outputs.

3.33.5.1. Executing ABC.

3.33.6. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$69409, asynchronously reset by \reset
Extracted 505 gates and 705 wires to a netlist network with 198 inputs and 109 outputs.

3.33.6.1. Executing ABC.

3.33.7. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$69392, asynchronously reset by \reset
Extracted 26 gates and 51 wires to a netlist network with 23 inputs and 6 outputs.

3.33.7.1. Executing ABC.

3.33.8. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2432, asynchronously reset by \reset
Extracted 168 gates and 334 wires to a netlist network with 166 inputs and 159 outputs.

3.33.8.1. Executing ABC.

3.33.9. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$61916, asynchronously reset by \reset
Extracted 37 gates and 70 wires to a netlist network with 31 inputs and 16 outputs.

3.33.9.1. Executing ABC.

3.33.10. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$59312, asynchronously reset by \reset
Extracted 669 gates and 916 wires to a netlist network with 246 inputs and 193 outputs.

3.33.10.1. Executing ABC.

3.33.11. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$56159, asynchronously reset by \reset
Extracted 584 gates and 814 wires to a netlist network with 229 inputs and 105 outputs.

3.33.11.1. Executing ABC.

3.33.12. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by \P3.state, asynchronously reset by \reset
Extracted 877 gates and 1186 wires to a netlist network with 308 inputs and 104 outputs.

3.33.12.1. Executing ABC.

3.33.13. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$52992, asynchronously reset by \reset
Extracted 472 gates and 670 wires to a netlist network with 197 inputs and 66 outputs.

3.33.13.1. Executing ABC.

3.33.14. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$49725, asynchronously reset by \reset
Extracted 703 gates and 925 wires to a netlist network with 221 inputs and 159 outputs.

3.33.14.1. Executing ABC.

3.33.15. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$49629, asynchronously reset by \reset
Extracted 27 gates and 48 wires to a netlist network with 20 inputs and 11 outputs.

3.33.15.1. Executing ABC.

3.33.16. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$49490, asynchronously reset by \reset
Extracted 71 gates and 107 wires to a netlist network with 35 inputs and 27 outputs.

3.33.16.1. Executing ABC.

3.33.17. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$47236, asynchronously reset by \reset
Extracted 839 gates and 1143 wires to a netlist network with 302 inputs and 245 outputs.

3.33.17.1. Executing ABC.

3.33.18. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by \P2.state, asynchronously reset by \reset
Extracted 766 gates and 1014 wires to a netlist network with 247 inputs and 45 outputs.

3.33.18.1. Executing ABC.

3.33.19. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$41728, asynchronously reset by \reset
Extracted 38 gates and 68 wires to a netlist network with 29 inputs and 13 outputs.

3.33.19.1. Executing ABC.

3.33.20. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$41589, asynchronously reset by \reset
Extracted 88 gates and 152 wires to a netlist network with 62 inputs and 27 outputs.

3.33.20.1. Executing ABC.

3.33.21. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$41507, asynchronously reset by \reset
Extracted 23 gates and 44 wires to a netlist network with 20 inputs and 9 outputs.

3.33.21.1. Executing ABC.

3.33.22. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$38903, asynchronously reset by \reset
Extracted 530 gates and 760 wires to a netlist network with 229 inputs and 77 outputs.

3.33.22.1. Executing ABC.

3.33.23. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$35850, asynchronously reset by \reset
Extracted 499 gates and 721 wires to a netlist network with 221 inputs and 92 outputs.

3.33.23.1. Executing ABC.

3.33.24. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$33816, asynchronously reset by \reset
Extracted 103 gates and 155 wires to a netlist network with 51 inputs and 31 outputs.

3.33.24.1. Executing ABC.

3.33.25. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$33711, asynchronously reset by \reset
Extracted 510 gates and 655 wires to a netlist network with 143 inputs and 91 outputs.

3.33.25.1. Executing ABC.

3.33.26. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$33593, asynchronously reset by \reset
Extracted 505 gates and 645 wires to a netlist network with 139 inputs and 84 outputs.

3.33.26.1. Executing ABC.

3.33.27. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$33475, asynchronously reset by \reset
Extracted 427 gates and 575 wires to a netlist network with 146 inputs and 99 outputs.

3.33.27.1. Executing ABC.

3.33.28. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:194:make_patterns_logic$33351, asynchronously reset by \reset
Extracted 127 gates and 186 wires to a netlist network with 59 inputs and 105 outputs.

3.33.28.1. Executing ABC.

3.33.29. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:194:make_patterns_logic$33333, asynchronously reset by \reset
Extracted 186 gates and 299 wires to a netlist network with 113 inputs and 113 outputs.

3.33.29.1. Executing ABC.

3.33.30. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:194:make_patterns_logic$33315, asynchronously reset by \reset
Extracted 140 gates and 217 wires to a netlist network with 77 inputs and 80 outputs.

3.33.30.1. Executing ABC.

3.33.31. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by \P1.state, asynchronously reset by \reset
Extracted 651 gates and 800 wires to a netlist network with 148 inputs and 49 outputs.

3.33.31.1. Executing ABC.

3.33.32. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2393, asynchronously reset by \reset
Extracted 401 gates and 691 wires to a netlist network with 290 inputs and 166 outputs.

3.33.32.1. Executing ABC.

3.33.33. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 1345 gates and 1709 wires to a netlist network with 362 inputs and 298 outputs.

3.33.33.1. Executing ABC.

yosys> abc -dff

3.34. Executing ABC pass (technology mapping using ABC).

3.34.1. Summary of detected clock domains:
  31 cells in clk=\clock, en=$abc$70832$auto$opt_dff.cc:219:make_patterns_logic$70531, arst=\reset, srst={ }
  33 cells in clk=\clock, en=$abc$70867$auto$opt_dff.cc:219:make_patterns_logic$70514, arst=\reset, srst={ }
  36 cells in clk=\clock, en=$abc$70907$auto$opt_dff.cc:219:make_patterns_logic$70497, arst=\reset, srst={ }
  856 cells in clk=\clock, en=$abc$70944$auto$opt_dff.cc:219:make_patterns_logic$69953, arst=\reset, srst={ }
  941 cells in clk=\clock, en=$abc$71841$auto$opt_dff.cc:219:make_patterns_logic$69409, arst=\reset, srst={ }
  44 cells in clk=\clock, en=$abc$72657$auto$opt_dff.cc:219:make_patterns_logic$69392, arst=\reset, srst={ }
  235 cells in clk=\clock, en=$abc$72696$auto$opt_dff.cc:219:make_patterns_logic$2432, arst=\reset, srst={ }
  48 cells in clk=\clock, en=$abc$72934$auto$opt_dff.cc:219:make_patterns_logic$61916, arst=\reset, srst={ }
  813 cells in clk=\clock, en=$abc$72993$auto$opt_dff.cc:219:make_patterns_logic$59312, arst=\reset, srst={ }
  1017 cells in clk=\clock, en=$abc$73878$auto$opt_dff.cc:219:make_patterns_logic$56159, arst=\reset, srst={ }
  570 cells in clk=\clock, en=$abc$75725$auto$opt_dff.cc:219:make_patterns_logic$52992, arst=\reset, srst={ }
  797 cells in clk=\clock, en=$abc$76352$auto$opt_dff.cc:219:make_patterns_logic$49725, arst=\reset, srst={ }
  42 cells in clk=\clock, en=$abc$77232$auto$opt_dff.cc:219:make_patterns_logic$49629, arst=\reset, srst={ }
  85 cells in clk=\clock, en=$abc$77272$auto$opt_dff.cc:219:make_patterns_logic$49490, arst=\reset, srst={ }
  1019 cells in clk=\clock, en=$abc$77366$auto$opt_dff.cc:219:make_patterns_logic$47236, arst=\reset, srst={ }
  41 cells in clk=\clock, en=$abc$79356$auto$opt_dff.cc:219:make_patterns_logic$41728, arst=\reset, srst={ }
  90 cells in clk=\clock, en=$abc$79410$auto$opt_dff.cc:219:make_patterns_logic$41589, arst=\reset, srst={ }
  36 cells in clk=\clock, en=$abc$79518$auto$opt_dff.cc:219:make_patterns_logic$41507, arst=\reset, srst={ }
  807 cells in clk=\clock, en=$abc$79547$auto$opt_dff.cc:219:make_patterns_logic$38903, arst=\reset, srst={ }
  841 cells in clk=\clock, en=$abc$80313$auto$opt_dff.cc:219:make_patterns_logic$35850, arst=\reset, srst={ }
  129 cells in clk=\clock, en=$abc$80959$auto$opt_dff.cc:219:make_patterns_logic$33816, arst=\reset, srst={ }
  238 cells in clk=\clock, en=$abc$81071$auto$opt_dff.cc:219:make_patterns_logic$33711, arst=\reset, srst={ }
  246 cells in clk=\clock, en=$abc$81279$auto$opt_dff.cc:219:make_patterns_logic$33593, arst=\reset, srst={ }
  258 cells in clk=\clock, en=$abc$81486$auto$opt_dff.cc:219:make_patterns_logic$33475, arst=\reset, srst={ }
  214 cells in clk=\clock, en=$abc$81696$auto$opt_dff.cc:194:make_patterns_logic$33351, arst=\reset, srst={ }
  201 cells in clk=\clock, en=$abc$81857$auto$opt_dff.cc:194:make_patterns_logic$33333, arst=\reset, srst={ }
  260 cells in clk=\clock, en=$abc$82058$auto$opt_dff.cc:194:make_patterns_logic$33315, arst=\reset, srst={ }
  2583 cells in clk=\clock, en=$abc$83434$lo004, arst=\reset, srst={ }
  427 cells in clk=\clock, en=$abc$83027$auto$opt_dff.cc:219:make_patterns_logic$2393, arst=\reset, srst={ }
  1062 cells in clk=\clock, en={ }, arst=\reset, srst={ }

3.34.2. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$70832$auto$opt_dff.cc:219:make_patterns_logic$70531, asynchronously reset by \reset
Extracted 31 gates and 52 wires to a netlist network with 21 inputs and 7 outputs.

3.34.2.1. Executing ABC.

3.34.3. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$70867$auto$opt_dff.cc:219:make_patterns_logic$70514, asynchronously reset by \reset
Extracted 29 gates and 45 wires to a netlist network with 16 inputs and 6 outputs.

3.34.3.1. Executing ABC.

3.34.4. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$70907$auto$opt_dff.cc:219:make_patterns_logic$70497, asynchronously reset by \reset
Extracted 32 gates and 54 wires to a netlist network with 22 inputs and 9 outputs.

3.34.4.1. Executing ABC.

3.34.5. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$70944$auto$opt_dff.cc:219:make_patterns_logic$69953, asynchronously reset by \reset
Extracted 828 gates and 1039 wires to a netlist network with 211 inputs and 140 outputs.

3.34.5.1. Executing ABC.

3.34.6. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$71841$auto$opt_dff.cc:219:make_patterns_logic$69409, asynchronously reset by \reset
Extracted 895 gates and 1177 wires to a netlist network with 282 inputs and 163 outputs.

3.34.6.1. Executing ABC.

3.34.7. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$72657$auto$opt_dff.cc:219:make_patterns_logic$69392, asynchronously reset by \reset
Extracted 44 gates and 71 wires to a netlist network with 27 inputs and 8 outputs.

3.34.7.1. Executing ABC.

3.34.8. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$72696$auto$opt_dff.cc:219:make_patterns_logic$2432, asynchronously reset by \reset
Extracted 172 gates and 337 wires to a netlist network with 165 inputs and 128 outputs.

3.34.8.1. Executing ABC.

3.34.9. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$72934$auto$opt_dff.cc:219:make_patterns_logic$61916, asynchronously reset by \reset
Extracted 44 gates and 60 wires to a netlist network with 16 inputs and 15 outputs.

3.34.9.1. Executing ABC.

3.34.10. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$72993$auto$opt_dff.cc:219:make_patterns_logic$59312, asynchronously reset by \reset
Extracted 772 gates and 1016 wires to a netlist network with 244 inputs and 100 outputs.

3.34.10.1. Executing ABC.

3.34.11. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$73878$auto$opt_dff.cc:219:make_patterns_logic$56159, asynchronously reset by \reset
Extracted 935 gates and 1180 wires to a netlist network with 245 inputs and 258 outputs.

3.34.11.1. Executing ABC.

3.34.12. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$75725$auto$opt_dff.cc:219:make_patterns_logic$52992, asynchronously reset by \reset
Extracted 570 gates and 735 wires to a netlist network with 165 inputs and 41 outputs.

3.34.12.1. Executing ABC.

3.34.13. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$76352$auto$opt_dff.cc:219:make_patterns_logic$49725, asynchronously reset by \reset
Extracted 778 gates and 969 wires to a netlist network with 191 inputs and 89 outputs.

3.34.13.1. Executing ABC.

3.34.14. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$77232$auto$opt_dff.cc:219:make_patterns_logic$49629, asynchronously reset by \reset
Extracted 40 gates and 64 wires to a netlist network with 24 inputs and 12 outputs.

3.34.14.1. Executing ABC.

3.34.15. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$77272$auto$opt_dff.cc:219:make_patterns_logic$49490, asynchronously reset by \reset
Extracted 85 gates and 124 wires to a netlist network with 39 inputs and 25 outputs.

3.34.15.1. Executing ABC.

3.34.16. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$77366$auto$opt_dff.cc:219:make_patterns_logic$47236, asynchronously reset by \reset
Extracted 968 gates and 1264 wires to a netlist network with 296 inputs and 192 outputs.

3.34.16.1. Executing ABC.

3.34.17. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$79356$auto$opt_dff.cc:219:make_patterns_logic$41728, asynchronously reset by \reset
Extracted 41 gates and 62 wires to a netlist network with 21 inputs and 13 outputs.

3.34.17.1. Executing ABC.

3.34.18. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$79410$auto$opt_dff.cc:219:make_patterns_logic$41589, asynchronously reset by \reset
Extracted 90 gates and 143 wires to a netlist network with 53 inputs and 23 outputs.

3.34.18.1. Executing ABC.

3.34.19. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$79518$auto$opt_dff.cc:219:make_patterns_logic$41507, asynchronously reset by \reset
Extracted 30 gates and 53 wires to a netlist network with 23 inputs and 15 outputs.

3.34.19.1. Executing ABC.

3.34.20. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$79547$auto$opt_dff.cc:219:make_patterns_logic$38903, asynchronously reset by \reset
Extracted 770 gates and 997 wires to a netlist network with 227 inputs and 94 outputs.

3.34.20.1. Executing ABC.

3.34.21. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$80313$auto$opt_dff.cc:219:make_patterns_logic$35850, asynchronously reset by \reset
Extracted 738 gates and 989 wires to a netlist network with 251 inputs and 207 outputs.

3.34.21.1. Executing ABC.

3.34.22. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$80959$auto$opt_dff.cc:219:make_patterns_logic$33816, asynchronously reset by \reset
Extracted 124 gates and 187 wires to a netlist network with 63 inputs and 47 outputs.

3.34.22.1. Executing ABC.

3.34.23. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$81071$auto$opt_dff.cc:219:make_patterns_logic$33711, asynchronously reset by \reset
Extracted 174 gates and 291 wires to a netlist network with 117 inputs and 69 outputs.

3.34.23.1. Executing ABC.

3.34.24. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$81279$auto$opt_dff.cc:219:make_patterns_logic$33593, asynchronously reset by \reset
Extracted 182 gates and 299 wires to a netlist network with 117 inputs and 67 outputs.

3.34.24.1. Executing ABC.

3.34.25. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$81486$auto$opt_dff.cc:219:make_patterns_logic$33475, asynchronously reset by \reset
Extracted 194 gates and 349 wires to a netlist network with 155 inputs and 73 outputs.

3.34.25.1. Executing ABC.

3.34.26. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$81696$auto$opt_dff.cc:194:make_patterns_logic$33351, asynchronously reset by \reset
Extracted 211 gates and 322 wires to a netlist network with 111 inputs and 80 outputs.

3.34.26.1. Executing ABC.

3.34.27. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$81857$auto$opt_dff.cc:194:make_patterns_logic$33333, asynchronously reset by \reset
Extracted 197 gates and 326 wires to a netlist network with 129 inputs and 114 outputs.

3.34.27.1. Executing ABC.

3.34.28. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$82058$auto$opt_dff.cc:194:make_patterns_logic$33315, asynchronously reset by \reset
Extracted 256 gates and 383 wires to a netlist network with 127 inputs and 83 outputs.

3.34.28.1. Executing ABC.

3.34.29. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$83434$lo004, asynchronously reset by \reset
Extracted 2578 gates and 3145 wires to a netlist network with 566 inputs and 188 outputs.

3.34.29.1. Executing ABC.

3.34.30. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$83027$auto$opt_dff.cc:219:make_patterns_logic$2393, asynchronously reset by \reset
Extracted 378 gates and 677 wires to a netlist network with 299 inputs and 138 outputs.

3.34.30.1. Executing ABC.

3.34.31. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 929 gates and 1288 wires to a netlist network with 359 inputs and 339 outputs.

3.34.31.1. Executing ABC.

yosys> abc -dff

3.35. Executing ABC pass (technology mapping using ABC).

3.35.1. Summary of detected clock domains:
  38 cells in clk=\clock, en=$abc$90693$abc$79518$auto$opt_dff.cc:219:make_patterns_logic$41507, arst=\reset, srst={ }
  55 cells in clk=\clock, en=$abc$86046$abc$72657$auto$opt_dff.cc:219:make_patterns_logic$69392, arst=\reset, srst={ }
  229 cells in clk=\clock, en=$abc$92482$abc$81071$auto$opt_dff.cc:219:make_patterns_logic$33711, arst=\reset, srst={ }
  241 cells in clk=\clock, en=$abc$92833$abc$81486$auto$opt_dff.cc:219:make_patterns_logic$33475, arst=\reset, srst={ }
  37 cells in clk=\clock, en=$abc$84312$abc$70832$auto$opt_dff.cc:219:make_patterns_logic$70531, arst=\reset, srst={ }
  87 cells in clk=\clock, en=$abc$90605$abc$79410$auto$opt_dff.cc:219:make_patterns_logic$41589, arst=\reset, srst={ }
  33 cells in clk=\clock, en=$abc$84380$abc$70907$auto$opt_dff.cc:219:make_patterns_logic$70497, arst=\reset, srst={ }
  40 cells in clk=\clock, en=$abc$84345$abc$70867$auto$opt_dff.cc:219:make_patterns_logic$70514, arst=\reset, srst={ }
  259 cells in clk=\clock, en=$abc$93479$abc$82058$auto$opt_dff.cc:194:make_patterns_logic$33315, arst=\reset, srst={ }
  44 cells in clk=\clock, en=$abc$86304$abc$72934$auto$opt_dff.cc:219:make_patterns_logic$61916, arst=\reset, srst={ }
  796 cells in clk=\clock, en=$abc$87134$abc$73878$auto$opt_dff.cc:219:make_patterns_logic$56159, arst=\reset, srst={ }
  38 cells in clk=\clock, en=$abc$89502$abc$77232$auto$opt_dff.cc:219:make_patterns_logic$49629, arst=\reset, srst={ }
  244 cells in clk=\clock, en=$abc$92655$abc$81279$auto$opt_dff.cc:219:make_patterns_logic$33593, arst=\reset, srst={ }
  94 cells in clk=\clock, en=$abc$89544$abc$77272$auto$opt_dff.cc:219:make_patterns_logic$49490, arst=\reset, srst={ }
  208 cells in clk=\clock, en=$abc$96235$abc$83027$auto$opt_dff.cc:219:make_patterns_logic$2393, arst=\reset, srst={ }
  796 cells in clk=\clock, en=$abc$88710$abc$76352$auto$opt_dff.cc:219:make_patterns_logic$49725, arst=\reset, srst={ }
  823 cells in clk=\clock, en=$abc$88095$abc$75725$auto$opt_dff.cc:219:make_patterns_logic$52992, arst=\reset, srst={ }
  841 cells in clk=\clock, en=$abc$90725$abc$79547$auto$opt_dff.cc:219:make_patterns_logic$38903, arst=\reset, srst={ }
  149 cells in clk=\clock, en=$abc$92354$abc$80959$auto$opt_dff.cc:219:make_patterns_logic$33816, arst=\reset, srst={ }
  245 cells in clk=\clock, en=$abc$93252$abc$81857$auto$opt_dff.cc:194:make_patterns_logic$33333, arst=\reset, srst={ }
  859 cells in clk=\clock, en=$abc$91544$abc$80313$auto$opt_dff.cc:219:make_patterns_logic$35850, arst=\reset, srst={ }
  756 cells in clk=\clock, en=$abc$84415$abc$70944$auto$opt_dff.cc:219:make_patterns_logic$69953, arst=\reset, srst={ }
  454 cells in clk=\clock, en=$abc$86101$abc$72696$auto$opt_dff.cc:219:make_patterns_logic$2432, arst=\reset, srst={ }
  49 cells in clk=\clock, en=$abc$90565$abc$79356$auto$opt_dff.cc:219:make_patterns_logic$41728, arst=\reset, srst={ }
  806 cells in clk=\clock, en=$abc$86348$abc$72993$auto$opt_dff.cc:219:make_patterns_logic$59312, arst=\reset, srst={ }
  256 cells in clk=\clock, en=$abc$93015$abc$81696$auto$opt_dff.cc:194:make_patterns_logic$33351, arst=\reset, srst={ }
  1002 cells in clk=\clock, en=$abc$89629$abc$77366$auto$opt_dff.cc:219:make_patterns_logic$47236, arst=\reset, srst={ }
  834 cells in clk=\clock, en=$abc$85224$abc$71841$auto$opt_dff.cc:219:make_patterns_logic$69409, arst=\reset, srst={ }
  2449 cells in clk=\clock, en=$abc$96614$lo004, arst=\reset, srst={ }
  1022 cells in clk=\clock, en={ }, arst=\reset, srst={ }

3.35.2. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$90693$abc$79518$auto$opt_dff.cc:219:make_patterns_logic$41507, asynchronously reset by \reset
Extracted 32 gates and 57 wires to a netlist network with 25 inputs and 17 outputs.

3.35.2.1. Executing ABC.

3.35.3. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$86046$abc$72657$auto$opt_dff.cc:219:make_patterns_logic$69392, asynchronously reset by \reset
Extracted 55 gates and 83 wires to a netlist network with 28 inputs and 8 outputs.

3.35.3.1. Executing ABC.

3.35.4. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$92482$abc$81071$auto$opt_dff.cc:219:make_patterns_logic$33711, asynchronously reset by \reset
Extracted 165 gates and 278 wires to a netlist network with 113 inputs and 65 outputs.

3.35.4.1. Executing ABC.

3.35.5. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$92833$abc$81486$auto$opt_dff.cc:219:make_patterns_logic$33475, asynchronously reset by \reset
Extracted 177 gates and 330 wires to a netlist network with 153 inputs and 69 outputs.

3.35.5.1. Executing ABC.

3.35.6. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$84312$abc$70832$auto$opt_dff.cc:219:make_patterns_logic$70531, asynchronously reset by \reset
Extracted 35 gates and 60 wires to a netlist network with 25 inputs and 9 outputs.

3.35.6.1. Executing ABC.

3.35.7. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$90605$abc$79410$auto$opt_dff.cc:219:make_patterns_logic$41589, asynchronously reset by \reset
Extracted 79 gates and 123 wires to a netlist network with 44 inputs and 27 outputs.

3.35.7.1. Executing ABC.

3.35.8. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$84380$abc$70907$auto$opt_dff.cc:219:make_patterns_logic$70497, asynchronously reset by \reset
Extracted 29 gates and 47 wires to a netlist network with 18 inputs and 5 outputs.

3.35.8.1. Executing ABC.

3.35.9. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$84345$abc$70867$auto$opt_dff.cc:219:make_patterns_logic$70514, asynchronously reset by \reset
Extracted 36 gates and 52 wires to a netlist network with 16 inputs and 7 outputs.

3.35.9.1. Executing ABC.

3.35.10. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$93479$abc$82058$auto$opt_dff.cc:194:make_patterns_logic$33315, asynchronously reset by \reset
Extracted 251 gates and 386 wires to a netlist network with 135 inputs and 83 outputs.

3.35.10.1. Executing ABC.

3.35.11. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$86304$abc$72934$auto$opt_dff.cc:219:make_patterns_logic$61916, asynchronously reset by \reset
Extracted 40 gates and 58 wires to a netlist network with 18 inputs and 15 outputs.

3.35.11.1. Executing ABC.

3.35.12. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$87134$abc$73878$auto$opt_dff.cc:219:make_patterns_logic$56159, asynchronously reset by \reset
Extracted 761 gates and 995 wires to a netlist network with 234 inputs and 111 outputs.

3.35.12.1. Executing ABC.

3.35.13. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$89502$abc$77232$auto$opt_dff.cc:219:make_patterns_logic$49629, asynchronously reset by \reset
Extracted 38 gates and 57 wires to a netlist network with 19 inputs and 9 outputs.

3.35.13.1. Executing ABC.

3.35.14. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$92655$abc$81279$auto$opt_dff.cc:219:make_patterns_logic$33593, asynchronously reset by \reset
Extracted 180 gates and 299 wires to a netlist network with 119 inputs and 68 outputs.

3.35.14.1. Executing ABC.

3.35.15. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$89544$abc$77272$auto$opt_dff.cc:219:make_patterns_logic$49490, asynchronously reset by \reset
Extracted 86 gates and 130 wires to a netlist network with 44 inputs and 33 outputs.

3.35.15.1. Executing ABC.

3.35.16. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$96235$abc$83027$auto$opt_dff.cc:219:make_patterns_logic$2393, asynchronously reset by \reset
Extracted 176 gates and 319 wires to a netlist network with 143 inputs and 100 outputs.

3.35.16.1. Executing ABC.

3.35.17. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$88710$abc$76352$auto$opt_dff.cc:219:make_patterns_logic$49725, asynchronously reset by \reset
Extracted 780 gates and 965 wires to a netlist network with 185 inputs and 84 outputs.

3.35.17.1. Executing ABC.

3.35.18. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$88095$abc$75725$auto$opt_dff.cc:219:make_patterns_logic$52992, asynchronously reset by \reset
Extracted 767 gates and 1013 wires to a netlist network with 246 inputs and 194 outputs.

3.35.18.1. Executing ABC.

3.35.19. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$90725$abc$79547$auto$opt_dff.cc:219:make_patterns_logic$38903, asynchronously reset by \reset
Extracted 799 gates and 1039 wires to a netlist network with 240 inputs and 92 outputs.

3.35.19.1. Executing ABC.

3.35.20. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$92354$abc$80959$auto$opt_dff.cc:219:make_patterns_logic$33816, asynchronously reset by \reset
Extracted 141 gates and 215 wires to a netlist network with 74 inputs and 47 outputs.

3.35.20.1. Executing ABC.

3.35.21. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$93252$abc$81857$auto$opt_dff.cc:194:make_patterns_logic$33333, asynchronously reset by \reset
Extracted 239 gates and 384 wires to a netlist network with 145 inputs and 96 outputs.

3.35.21.1. Executing ABC.

3.35.22. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$91544$abc$80313$auto$opt_dff.cc:219:make_patterns_logic$35850, asynchronously reset by \reset
Extracted 766 gates and 1004 wires to a netlist network with 238 inputs and 191 outputs.

3.35.22.1. Executing ABC.

3.35.23. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$84415$abc$70944$auto$opt_dff.cc:219:make_patterns_logic$69953, asynchronously reset by \reset
Extracted 744 gates and 942 wires to a netlist network with 198 inputs and 102 outputs.

3.35.23.1. Executing ABC.

3.35.24. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$86101$abc$72696$auto$opt_dff.cc:219:make_patterns_logic$2432, asynchronously reset by \reset
Extracted 375 gates and 697 wires to a netlist network with 322 inputs and 165 outputs.

3.35.24.1. Executing ABC.

3.35.25. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$90565$abc$79356$auto$opt_dff.cc:219:make_patterns_logic$41728, asynchronously reset by \reset
Extracted 49 gates and 79 wires to a netlist network with 30 inputs and 20 outputs.

3.35.25.1. Executing ABC.

3.35.26. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$86348$abc$72993$auto$opt_dff.cc:219:make_patterns_logic$59312, asynchronously reset by \reset
Extracted 782 gates and 1018 wires to a netlist network with 236 inputs and 88 outputs.

3.35.26.1. Executing ABC.

3.35.27. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$93015$abc$81696$auto$opt_dff.cc:194:make_patterns_logic$33351, asynchronously reset by \reset
Extracted 254 gates and 390 wires to a netlist network with 136 inputs and 90 outputs.

3.35.27.1. Executing ABC.

3.35.28. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$89629$abc$77366$auto$opt_dff.cc:219:make_patterns_logic$47236, asynchronously reset by \reset
Extracted 939 gates and 1233 wires to a netlist network with 294 inputs and 198 outputs.

3.35.28.1. Executing ABC.

3.35.29. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$85224$abc$71841$auto$opt_dff.cc:219:make_patterns_logic$69409, asynchronously reset by \reset
Extracted 786 gates and 1023 wires to a netlist network with 237 inputs and 175 outputs.

3.35.29.1. Executing ABC.

3.35.30. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$96614$lo004, asynchronously reset by \reset
Extracted 2449 gates and 2933 wires to a netlist network with 484 inputs and 172 outputs.

3.35.30.1. Executing ABC.

3.35.31. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 889 gates and 1240 wires to a netlist network with 351 inputs and 337 outputs.

3.35.31.1. Executing ABC.

yosys> abc -dff

3.36. Executing ABC pass (technology mapping using ABC).

3.36.1. Summary of detected clock domains:
  35 cells in clk=\clock, en=$abc$97522$abc$90693$abc$79518$auto$opt_dff.cc:219:make_patterns_logic$41507, arst=\reset, srst={ }
  35 cells in clk=\clock, en=$abc$97560$abc$86046$abc$72657$auto$opt_dff.cc:219:make_patterns_logic$69392, arst=\reset, srst={ }
  237 cells in clk=\clock, en=$abc$97614$abc$92482$abc$81071$auto$opt_dff.cc:219:make_patterns_logic$33711, arst=\reset, srst={ }
  245 cells in clk=\clock, en=$abc$97782$abc$92833$abc$81486$auto$opt_dff.cc:219:make_patterns_logic$33475, arst=\reset, srst={ }
  37 cells in clk=\clock, en=$abc$97963$abc$84312$abc$70832$auto$opt_dff.cc:219:make_patterns_logic$70531, arst=\reset, srst={ }
  95 cells in clk=\clock, en=$abc$97998$abc$90605$abc$79410$auto$opt_dff.cc:219:make_patterns_logic$41589, arst=\reset, srst={ }
  34 cells in clk=\clock, en=$abc$98085$abc$84380$abc$70907$auto$opt_dff.cc:219:make_patterns_logic$70497, arst=\reset, srst={ }
  39 cells in clk=\clock, en=$abc$98116$abc$84345$abc$70867$auto$opt_dff.cc:219:make_patterns_logic$70514, arst=\reset, srst={ }
  39 cells in clk=\clock, en=$abc$98414$abc$86304$abc$72934$auto$opt_dff.cc:219:make_patterns_logic$61916, arst=\reset, srst={ }
  39 cells in clk=\clock, en=$abc$99232$abc$89502$abc$77232$auto$opt_dff.cc:219:make_patterns_logic$49629, arst=\reset, srst={ }
  237 cells in clk=\clock, en=$abc$99272$abc$92655$abc$81279$auto$opt_dff.cc:219:make_patterns_logic$33593, arst=\reset, srst={ }
  846 cells in clk=\clock, en=$abc$98453$abc$87134$abc$73878$auto$opt_dff.cc:219:make_patterns_logic$56159, arst=\reset, srst={ }
  90 cells in clk=\clock, en=$abc$99448$abc$89544$abc$77272$auto$opt_dff.cc:219:make_patterns_logic$49490, arst=\reset, srst={ }
  196 cells in clk=\clock, en=$abc$99532$abc$96235$abc$83027$auto$opt_dff.cc:219:make_patterns_logic$2393, arst=\reset, srst={ }
  871 cells in clk=\clock, en=$abc$99707$abc$88710$abc$76352$auto$opt_dff.cc:219:make_patterns_logic$49725, arst=\reset, srst={ }
  658 cells in clk=\clock, en=$abc$100473$abc$88095$abc$75725$auto$opt_dff.cc:219:make_patterns_logic$52992, arst=\reset, srst={ }
  253 cells in clk=\clock, en=$abc$98154$abc$93479$abc$82058$auto$opt_dff.cc:194:make_patterns_logic$33315, arst=\reset, srst={ }
  130 cells in clk=\clock, en=$abc$102084$abc$92354$abc$80959$auto$opt_dff.cc:219:make_patterns_logic$33816, arst=\reset, srst={ }
  201 cells in clk=\clock, en=$abc$102223$abc$93252$abc$81857$auto$opt_dff.cc:194:make_patterns_logic$33333, arst=\reset, srst={ }
  878 cells in clk=\clock, en=$abc$101261$abc$90725$abc$79547$auto$opt_dff.cc:219:make_patterns_logic$38903, arst=\reset, srst={ }
  792 cells in clk=\clock, en=$abc$102522$abc$91544$abc$80313$auto$opt_dff.cc:219:make_patterns_logic$35850, arst=\reset, srst={ }
  862 cells in clk=\clock, en=$abc$103367$abc$84415$abc$70944$auto$opt_dff.cc:219:make_patterns_logic$69953, arst=\reset, srst={ }
  452 cells in clk=\clock, en=$abc$104174$abc$86101$abc$72696$auto$opt_dff.cc:219:make_patterns_logic$2432, arst=\reset, srst={ }
  74 cells in clk=\clock, en=$abc$104579$abc$90565$abc$79356$auto$opt_dff.cc:219:make_patterns_logic$41728, arst=\reset, srst={ }
  908 cells in clk=\clock, en=$abc$104636$abc$86348$abc$72993$auto$opt_dff.cc:219:make_patterns_logic$59312, arst=\reset, srst={ }
  312 cells in clk=\clock, en=$abc$105436$abc$93015$abc$81696$auto$opt_dff.cc:194:make_patterns_logic$33351, arst=\reset, srst={ }
  1106 cells in clk=\clock, en=$abc$105732$abc$89629$abc$77366$auto$opt_dff.cc:219:make_patterns_logic$47236, arst=\reset, srst={ }
  715 cells in clk=\clock, en=$abc$106786$abc$85224$abc$71841$auto$opt_dff.cc:219:make_patterns_logic$69409, arst=\reset, srst={ }
  2580 cells in clk=\clock, en=$abc$110123$lo004, arst=\reset, srst={ }
  1075 cells in clk=\clock, en={ }, arst=\reset, srst={ }

3.36.2. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$97522$abc$90693$abc$79518$auto$opt_dff.cc:219:make_patterns_logic$41507, asynchronously reset by \reset
Extracted 31 gates and 52 wires to a netlist network with 21 inputs and 12 outputs.

3.36.2.1. Executing ABC.

3.36.3. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$97560$abc$86046$abc$72657$auto$opt_dff.cc:219:make_patterns_logic$69392, asynchronously reset by \reset
Extracted 35 gates and 53 wires to a netlist network with 18 inputs and 5 outputs.

3.36.3.1. Executing ABC.

3.36.4. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$97614$abc$92482$abc$81071$auto$opt_dff.cc:219:make_patterns_logic$33711, asynchronously reset by \reset
Extracted 173 gates and 286 wires to a netlist network with 113 inputs and 71 outputs.

3.36.4.1. Executing ABC.

3.36.5. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$97782$abc$92833$abc$81486$auto$opt_dff.cc:219:make_patterns_logic$33475, asynchronously reset by \reset
Extracted 181 gates and 332 wires to a netlist network with 151 inputs and 70 outputs.

3.36.5.1. Executing ABC.

3.36.6. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$97963$abc$84312$abc$70832$auto$opt_dff.cc:219:make_patterns_logic$70531, asynchronously reset by \reset
Extracted 35 gates and 60 wires to a netlist network with 25 inputs and 9 outputs.

3.36.6.1. Executing ABC.

3.36.7. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$97998$abc$90605$abc$79410$auto$opt_dff.cc:219:make_patterns_logic$41589, asynchronously reset by \reset
Extracted 84 gates and 128 wires to a netlist network with 44 inputs and 25 outputs.

3.36.7.1. Executing ABC.

3.36.8. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$98085$abc$84380$abc$70907$auto$opt_dff.cc:219:make_patterns_logic$70497, asynchronously reset by \reset
Extracted 30 gates and 48 wires to a netlist network with 18 inputs and 6 outputs.

3.36.8.1. Executing ABC.

3.36.9. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$98116$abc$84345$abc$70867$auto$opt_dff.cc:219:make_patterns_logic$70514, asynchronously reset by \reset
Extracted 35 gates and 52 wires to a netlist network with 17 inputs and 6 outputs.

3.36.9.1. Executing ABC.

3.36.10. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$98414$abc$86304$abc$72934$auto$opt_dff.cc:219:make_patterns_logic$61916, asynchronously reset by \reset
Extracted 35 gates and 55 wires to a netlist network with 20 inputs and 13 outputs.

3.36.10.1. Executing ABC.

3.36.11. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$99232$abc$89502$abc$77232$auto$opt_dff.cc:219:make_patterns_logic$49629, asynchronously reset by \reset
Extracted 39 gates and 58 wires to a netlist network with 19 inputs and 10 outputs.

3.36.11.1. Executing ABC.

3.36.12. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$99272$abc$92655$abc$81279$auto$opt_dff.cc:219:make_patterns_logic$33593, asynchronously reset by \reset
Extracted 173 gates and 287 wires to a netlist network with 114 inputs and 67 outputs.

3.36.12.1. Executing ABC.

3.36.13. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$98453$abc$87134$abc$73878$auto$opt_dff.cc:219:make_patterns_logic$56159, asynchronously reset by \reset
Extracted 797 gates and 1017 wires to a netlist network with 220 inputs and 152 outputs.

3.36.13.1. Executing ABC.

3.36.14. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$99448$abc$89544$abc$77272$auto$opt_dff.cc:219:make_patterns_logic$49490, asynchronously reset by \reset
Extracted 82 gates and 125 wires to a netlist network with 43 inputs and 34 outputs.

3.36.14.1. Executing ABC.

3.36.15. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$99532$abc$96235$abc$83027$auto$opt_dff.cc:219:make_patterns_logic$2393, asynchronously reset by \reset
Extracted 164 gates and 296 wires to a netlist network with 132 inputs and 98 outputs.

3.36.15.1. Executing ABC.

3.36.16. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$99707$abc$88710$abc$76352$auto$opt_dff.cc:219:make_patterns_logic$49725, asynchronously reset by \reset
Extracted 825 gates and 1037 wires to a netlist network with 212 inputs and 146 outputs.

3.36.16.1. Executing ABC.

3.36.17. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$100473$abc$88095$abc$75725$auto$opt_dff.cc:219:make_patterns_logic$52992, asynchronously reset by \reset
Extracted 646 gates and 849 wires to a netlist network with 203 inputs and 87 outputs.

3.36.17.1. Executing ABC.

3.36.18. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$98154$abc$93479$abc$82058$auto$opt_dff.cc:194:make_patterns_logic$33315, asynchronously reset by \reset
Extracted 245 gates and 379 wires to a netlist network with 134 inputs and 75 outputs.

3.36.18.1. Executing ABC.

3.36.19. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$102084$abc$92354$abc$80959$auto$opt_dff.cc:219:make_patterns_logic$33816, asynchronously reset by \reset
Extracted 122 gates and 189 wires to a netlist network with 67 inputs and 48 outputs.

3.36.19.1. Executing ABC.

3.36.20. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$102223$abc$93252$abc$81857$auto$opt_dff.cc:194:make_patterns_logic$33333, asynchronously reset by \reset
Extracted 197 gates and 292 wires to a netlist network with 95 inputs and 87 outputs.

3.36.20.1. Executing ABC.

3.36.21. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$101261$abc$90725$abc$79547$auto$opt_dff.cc:219:make_patterns_logic$38903, asynchronously reset by \reset
Extracted 831 gates and 1072 wires to a netlist network with 241 inputs and 107 outputs.

3.36.21.1. Executing ABC.

3.36.22. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$102522$abc$91544$abc$80313$auto$opt_dff.cc:219:make_patterns_logic$35850, asynchronously reset by \reset
Extracted 738 gates and 954 wires to a netlist network with 216 inputs and 122 outputs.

3.36.22.1. Executing ABC.

3.36.23. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$103367$abc$84415$abc$70944$auto$opt_dff.cc:219:make_patterns_logic$69953, asynchronously reset by \reset
Extracted 837 gates and 1067 wires to a netlist network with 230 inputs and 129 outputs.

3.36.23.1. Executing ABC.

3.36.24. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$104174$abc$86101$abc$72696$auto$opt_dff.cc:219:make_patterns_logic$2432, asynchronously reset by \reset
Extracted 373 gates and 695 wires to a netlist network with 322 inputs and 165 outputs.

3.36.24.1. Executing ABC.

3.36.25. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$104579$abc$90565$abc$79356$auto$opt_dff.cc:219:make_patterns_logic$41728, asynchronously reset by \reset
Extracted 74 gates and 118 wires to a netlist network with 44 inputs and 24 outputs.

3.36.25.1. Executing ABC.

3.36.26. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$104636$abc$86348$abc$72993$auto$opt_dff.cc:219:make_patterns_logic$59312, asynchronously reset by \reset
Extracted 854 gates and 1107 wires to a netlist network with 253 inputs and 150 outputs.

3.36.26.1. Executing ABC.

3.36.27. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$105436$abc$93015$abc$81696$auto$opt_dff.cc:194:make_patterns_logic$33351, asynchronously reset by \reset
Extracted 310 gates and 464 wires to a netlist network with 154 inputs and 96 outputs.

3.36.27.1. Executing ABC.

3.36.28. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$105732$abc$89629$abc$77366$auto$opt_dff.cc:219:make_patterns_logic$47236, asynchronously reset by \reset
Extracted 1037 gates and 1319 wires to a netlist network with 282 inputs and 201 outputs.

3.36.28.1. Executing ABC.

3.36.29. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$106786$abc$85224$abc$71841$auto$opt_dff.cc:219:make_patterns_logic$69409, asynchronously reset by \reset
Extracted 687 gates and 907 wires to a netlist network with 220 inputs and 135 outputs.

3.36.29.1. Executing ABC.

3.36.30. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$110123$lo004, asynchronously reset by \reset
Extracted 2576 gates and 3094 wires to a netlist network with 518 inputs and 182 outputs.

3.36.30.1. Executing ABC.

3.36.31. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 940 gates and 1337 wires to a netlist network with 397 inputs and 356 outputs.

3.36.31.1. Executing ABC.

yosys> opt_ffinv

3.37. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt -sat

3.38. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.38.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~643 debug messages>

yosys> opt_merge -nomux

3.38.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
<suppressed ~549 debug messages>
Removed a total of 183 cells.

yosys> opt_muxtree

3.38.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.38.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.38.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.38.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.38.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 5 unused cells and 62474 unused wires.
<suppressed ~33 debug messages>

yosys> opt_expr

3.38.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

3.38.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.38.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.38.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.38.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.38.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $abc$114877$auto$blifparse.cc:362:parse_blif$114887 ($_DFFE_PP0P_) from module b22 (D = $abc$102223$abc$93707$abc$78419$flatten\P2.$verific$n11253$889[17], Q = $abc$102223$abc$93252$lo18).
Adding EN signal on $abc$114877$auto$blifparse.cc:362:parse_blif$114885 ($_DFFE_PP0P_) from module b22 (D = $abc$102223$abc$93707$abc$78419$flatten\P2.$verific$n11253$889[12], Q = $abc$102223$abc$93252$lo13).
Adding EN signal on $abc$114877$auto$blifparse.cc:362:parse_blif$114883 ($_DFFE_PP0P_) from module b22 (D = $abc$102223$abc$93707$abc$78419$flatten\P2.$verific$n11253$889[11], Q = $abc$102223$abc$93252$lo12).
Adding EN signal on $abc$114877$auto$blifparse.cc:362:parse_blif$114882 ($_DFFE_PP0P_) from module b22 (D = $abc$102223$abc$93707$abc$78419$flatten\P2.$verific$n11253$889[8], Q = $abc$102223$abc$93252$lo09).
Adding EN signal on $abc$114877$auto$blifparse.cc:362:parse_blif$114881 ($_DFFE_PP0P_) from module b22 (D = $abc$102223$abc$97998$abc$90605$abc$79410$flatten\P2.$verific$n11253$889[2], Q = $abc$114877$lo03).
Adding EN signal on $abc$114877$auto$blifparse.cc:362:parse_blif$114880 ($_DFFE_PP0P_) from module b22 (D = $abc$102223$abc$93707$abc$78419$flatten\P2.$verific$n11253$889[14], Q = $abc$102223$abc$93252$lo15).
Adding EN signal on $abc$114877$auto$blifparse.cc:362:parse_blif$114879 ($_DFFE_PP0P_) from module b22 (D = $abc$102223$abc$93707$abc$78419$flatten\P2.$verific$n11253$889[15], Q = $abc$102223$abc$93252$lo16).
Adding EN signal on $abc$114877$auto$blifparse.cc:362:parse_blif$114878 ($_DFFE_PP0P_) from module b22 (D = $abc$102223$abc$93707$abc$78419$flatten\P2.$verific$n11253$889[16], Q = $abc$102223$abc$93252$lo17).

yosys> opt_clean

3.38.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 16 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.38.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~32 debug messages>

3.38.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.38.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.38.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.38.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
<suppressed ~153 debug messages>
Removed a total of 51 cells.

yosys> opt_dff -sat

3.38.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.38.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 51 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.38.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

3.38.23. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.38.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.38.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.38.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.38.27. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.38.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..

yosys> opt_expr

3.38.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

3.38.30. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /home/users/temp_dir/yosys_YmEtw7/abc_tmp_1.scr

3.39. Executing ABC pass (technology mapping using ABC).

3.39.1. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Extracted 12393 gates and 13694 wires to a netlist network with 1300 inputs and 1427 outputs.

3.39.1.1. Executing ABC.
DE:   #PIs = 1300  #Luts =  4046  Max Lvl =  36  Avg Lvl =   9.12  [   0.38 sec. at Pass 0]
DE:   #PIs = 1300  #Luts =  3088  Max Lvl =  36  Avg Lvl =   9.77  [  15.68 sec. at Pass 1]
DE:   #PIs = 1300  #Luts =  3046  Max Lvl =  35  Avg Lvl =   9.53  [   2.70 sec. at Pass 2]
DE:   #PIs = 1300  #Luts =  2967  Max Lvl =  38  Avg Lvl =   9.80  [   4.15 sec. at Pass 3]
DE:   #PIs = 1300  #Luts =  2923  Max Lvl =  38  Avg Lvl =   9.76  [   3.01 sec. at Pass 4]
DE:   #PIs = 1300  #Luts =  2823  Max Lvl =  33  Avg Lvl =   9.28  [   5.18 sec. at Pass 5]
DE:   #PIs = 1300  #Luts =  2796  Max Lvl =  28  Avg Lvl =   8.88  [   3.53 sec. at Pass 6]
DE:   #PIs = 1300  #Luts =  2749  Max Lvl =  30  Avg Lvl =   9.09  [   5.85 sec. at Pass 7]
DE:   #PIs = 1300  #Luts =  2738  Max Lvl =  31  Avg Lvl =   9.27  [   2.99 sec. at Pass 8]
DE:   #PIs = 1300  #Luts =  2710  Max Lvl =  31  Avg Lvl =   9.07  [   5.13 sec. at Pass 9]
DE:   #PIs = 1300  #Luts =  2701  Max Lvl =  31  Avg Lvl =   9.27  [   2.99 sec. at Pass 10]
DE:   #PIs = 1300  #Luts =  2671  Max Lvl =  30  Avg Lvl =   8.99  [   3.91 sec. at Pass 11]
DE:   #PIs = 1300  #Luts =  2660  Max Lvl =  30  Avg Lvl =   9.00  [   2.56 sec. at Pass 12]
DE:   #PIs = 1300  #Luts =  2649  Max Lvl =  30  Avg Lvl =   8.77  [   3.73 sec. at Pass 13]
DE:   #PIs = 1300  #Luts =  2637  Max Lvl =  31  Avg Lvl =   8.83  [   2.38 sec. at Pass 14]
DE:   #PIs = 1300  #Luts =  2629  Max Lvl =  32  Avg Lvl =   8.72  [   3.43 sec. at Pass 15]
DE:   #PIs = 1300  #Luts =  2627  Max Lvl =  27  Avg Lvl =   8.58  [   0.57 sec. at Pass 16]

yosys> opt

3.40. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.40.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

yosys> opt_merge -nomux

3.40.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
<suppressed ~21 debug messages>
Removed a total of 7 cells.

yosys> opt_muxtree

3.40.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.40.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.40.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_dff

3.40.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.40.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 13247 unused wires.
<suppressed ~9 debug messages>

yosys> opt_expr

3.40.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

3.40.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.40.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.40.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.40.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_dff

3.40.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.40.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..

yosys> opt_expr

3.40.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

3.40.16. Finished OPT passes. (There is nothing left to do.)

yosys> opt_ffinv

3.41. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 1 inverters.

yosys> stat

3.42. Printing statistics.

=== b22 ===

   Number of wires:               2369
   Number of wire bits:           5689
   Number of public wires:          29
   Number of public wire bits:     489
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3976
     $_DFFE_PP0P_                  502
     $_DFF_PP0_                    106
     $_DFF_PP1_                      1
     $lut                         2482
     adder_carry                   885


yosys> shregmap -minlen 8 -maxlen 20

3.43. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.44. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.45. Printing statistics.

=== b22 ===

   Number of wires:               2369
   Number of wire bits:           5689
   Number of public wires:          29
   Number of public wire bits:     489
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3976
     $_DFFE_PP0P_                  502
     $_DFF_PP0_                    106
     $_DFF_PP1_                      1
     $lut                         2482
     adder_carry                   885


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.46. Executing TECHMAP pass (map to technology primitives).

3.46.1. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.46.2. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.46.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using template \$_DFF_PP1_ for cells of type $_DFF_PP1_.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~3836 debug messages>

yosys> opt_expr -mux_undef

3.47. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~51907 debug messages>

yosys> simplemap

3.48. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.49. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

yosys> opt_merge

3.50. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
<suppressed ~24120 debug messages>
Removed a total of 8040 cells.

yosys> opt_dff -nodffe -nosdff

3.51. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.52. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 8526 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.53. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.53.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~2039 debug messages>

yosys> opt_merge -nomux

3.53.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
<suppressed ~30 debug messages>
Removed a total of 10 cells.

yosys> opt_muxtree

3.53.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.53.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.53.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.53.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.53.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 628 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.53.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

3.53.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.53.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.53.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.53.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.53.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.53.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..

yosys> opt_expr

3.53.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

3.53.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /home/users/temp_dir/yosys_YmEtw7/abc_tmp_2.scr

3.54. Executing ABC pass (technology mapping using ABC).

3.54.1. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Extracted 8761 gates and 10057 wires to a netlist network with 1294 inputs and 1284 outputs.

3.54.1.1. Executing ABC.
DE:   #PIs = 1294  #Luts =  2496  Max Lvl =  28  Avg Lvl =   8.86  [   0.32 sec. at Pass 0]
DE:   #PIs = 1294  #Luts =  2484  Max Lvl =  28  Avg Lvl =   8.65  [  12.27 sec. at Pass 1]
DE:   #PIs = 1294  #Luts =  2473  Max Lvl =  30  Avg Lvl =   8.73  [   2.24 sec. at Pass 2]
DE:   #PIs = 1294  #Luts =  2449  Max Lvl =  29  Avg Lvl =   8.95  [   3.37 sec. at Pass 3]
DE:   #PIs = 1294  #Luts =  2444  Max Lvl =  30  Avg Lvl =   9.04  [   2.43 sec. at Pass 4]
DE:   #PIs = 1294  #Luts =  2439  Max Lvl =  29  Avg Lvl =   9.17  [   3.42 sec. at Pass 5]
DE:   #PIs = 1294  #Luts =  2433  Max Lvl =  29  Avg Lvl =   9.20  [   2.73 sec. at Pass 6]
DE:   #PIs = 1294  #Luts =  2433  Max Lvl =  29  Avg Lvl =   9.20  [   4.05 sec. at Pass 7]
DE:   #PIs = 1294  #Luts =  2424  Max Lvl =  27  Avg Lvl =   8.29  [   2.78 sec. at Pass 8]
DE:   #PIs = 1294  #Luts =  2415  Max Lvl =  31  Avg Lvl =   9.05  [   3.86 sec. at Pass 9]
DE:   #PIs = 1294  #Luts =  2408  Max Lvl =  27  Avg Lvl =   8.88  [   2.38 sec. at Pass 10]
DE:   #PIs = 1294  #Luts =  2406  Max Lvl =  30  Avg Lvl =   8.71  [   3.42 sec. at Pass 11]
DE:   #PIs = 1294  #Luts =  2404  Max Lvl =  29  Avg Lvl =   8.67  [   2.36 sec. at Pass 12]
DE:   #PIs = 1294  #Luts =  2400  Max Lvl =  27  Avg Lvl =   8.47  [   3.41 sec. at Pass 13]
DE:   #PIs = 1294  #Luts =  2388  Max Lvl =  28  Avg Lvl =   8.51  [   2.36 sec. at Pass 14]
DE:   #PIs = 1294  #Luts =  2388  Max Lvl =  28  Avg Lvl =   8.51  [   3.51 sec. at Pass 15]
DE:   #PIs = 1294  #Luts =  2388  Max Lvl =  28  Avg Lvl =   8.51  [   0.61 sec. at Pass 16]

yosys> opt

3.55. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.55.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

yosys> opt_merge -nomux

3.55.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.55.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.55.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.55.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_dff

3.55.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.55.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 8382 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.55.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

3.55.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.55.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.55.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.55.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_dff

3.55.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.55.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..

yosys> opt_expr

3.55.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

3.55.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.56. Executing HIERARCHY pass (managing design hierarchy).

3.56.1. Analyzing design hierarchy..
Top module:  \b22

3.56.2. Analyzing design hierarchy..
Top module:  \b22
Removed 0 unused modules.

yosys> stat

3.57. Printing statistics.

=== b22 ===

   Number of wires:               2274
   Number of wire bits:           5594
   Number of public wires:          29
   Number of public wire bits:     489
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3882
     $lut                         2388
     adder_carry                   885
     dffsre                        609


yosys> opt_clean -purge

3.58. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 11 unused wires.
<suppressed ~11 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.59. Executing Verilog backend.

yosys> bmuxmap

3.59.1. Executing BMUXMAP pass.

yosys> demuxmap

3.59.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\b22'.

Warnings: 5 unique messages, 6 total
End of script. Logfile hash: a38caa001f, CPU: user 73.73s system 1.35s, MEM: 174.86 MB peak
Yosys 0.17+76 (git sha1 035496b50, gcc 9.1.0 -fPIC -Os)
Time spent: 95% 6x abc (1323 sec), 2% 38x opt_dff (28 sec), ...
real 218.06
user 1278.27
sys 111.44
