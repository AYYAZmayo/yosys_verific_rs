
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.49
 Yosys 0.18+10 (git sha1 7a7a25778, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 05:39:28 2022.

yosys> verilog_defaults -add -I.

yosys> read -vhdl b22.vhd

yosys> verific -vhdl b22.vhd

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 05:39:28 2022.
VERIFIC-INFO [VHDL-1504] default VHDL library search path is now "/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008"
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'b22.vhd'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_1164' from file '/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_1164.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.standard' from file '/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/standard.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.textio' from file '/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/textio.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_arith' from file '/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_arith.vdb'
VERIFIC-INFO [VHDL-1012] b22.vhd:5: analyzing entity 'b14'
VERIFIC-INFO [VHDL-1010] b22.vhd:15: analyzing architecture 'behav'
VERIFIC-INFO [VHDL-1012] b22.vhd:515: analyzing entity 'b14rev'
VERIFIC-INFO [VHDL-1010] b22.vhd:525: analyzing architecture 'behav'
VERIFIC-INFO [VHDL-1012] b22.vhd:1025: analyzing entity 'b14_1'
VERIFIC-INFO [VHDL-1010] b22.vhd:1035: analyzing architecture 'behav'
VERIFIC-INFO [VHDL-1012] b22.vhd:1536: analyzing entity 'b22'
VERIFIC-INFO [VHDL-1010] b22.vhd:1544: analyzing architecture 'behav'

yosys> synth_rs -top b22 -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.58

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\RS_DSP2_MULT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_sim'.
Generating RTLIL representation for module `\dsp_t1_20x18x64'.
Generating RTLIL representation for module `\dsp_t1_10x9x32'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top b22

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VHDL-1067] b22.vhd:1536: processing 'b22(BEHAV)'
VERIFIC-INFO [VHDL-1067] b22.vhd:5: processing 'b14(BEHAV)'
VERIFIC-INFO [VHDL-1172] b22.vhd:482: 'others' clause is never selected
VERIFIC-INFO [VHDL-1067] b22.vhd:1025: processing 'b14_1(BEHAV)'
VERIFIC-INFO [VHDL-1172] b22.vhd:1502: 'others' clause is never selected
VERIFIC-INFO [VHDL-1067] b22.vhd:515: processing 'b14rev(BEHAV)'
VERIFIC-INFO [VHDL-1172] b22.vhd:992: 'others' clause is never selected
Importing module b22.
Importing module b14(BEHAV).
Importing module b14_1(BEHAV).
Importing module b14rev(BEHAV).

3.3.1. Analyzing design hierarchy..
Top module:  \b22
Used module:     \b14rev(BEHAV)
Used module:     \b14_1(BEHAV)
Used module:     \b14(BEHAV)

3.3.2. Analyzing design hierarchy..
Top module:  \b22
Used module:     \b14rev(BEHAV)
Used module:     \b14_1(BEHAV)
Used module:     \b14(BEHAV)
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.4.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.4.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14rev(BEHAV).
<suppressed ~26 debug messages>
Optimizing module b14_1(BEHAV).
<suppressed ~26 debug messages>
Optimizing module b14(BEHAV).
<suppressed ~26 debug messages>
Optimizing module b22.

yosys> bmuxmap

3.5. Executing BMUXMAP pass.

yosys> demuxmap

3.6. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> flatten

3.7. Executing FLATTEN pass (flatten design).
Deleting now unused module b14(BEHAV).
Deleting now unused module b14_1(BEHAV).
Deleting now unused module b14rev(BEHAV).
<suppressed ~3 debug messages>

yosys> bmuxmap

3.8. Executing BMUXMAP pass.

yosys> demuxmap

3.9. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> tribuf -logic

3.10. Executing TRIBUF pass.

yosys> deminout

3.11. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~182 debug messages>

yosys> opt_clean

3.13. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 44 unused cells and 673 unused wires.
<suppressed ~197 debug messages>

yosys> check

3.14. Executing CHECK pass (checking for obvious problems).
Checking module b22...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.15. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.15.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~5 debug messages>

yosys> opt_merge -nomux

3.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.15.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\P1.$verific$i684$b22.vhd:505$554.
    dead port 2/2 on $mux $flatten\P1.$verific$mux_672$b22.vhd:505$545.
    dead port 2/2 on $mux $flatten\P1.$verific$mux_685$b22.vhd:505$556.
    dead port 2/2 on $mux $flatten\P2.$verific$i683$b22.vhd:1525$1060.
    dead port 2/2 on $mux $flatten\P2.$verific$mux_671$b22.vhd:1525$1051.
    dead port 2/2 on $mux $flatten\P2.$verific$mux_684$b22.vhd:1525$1062.
    dead port 2/2 on $mux $flatten\P3.$verific$i653$b22.vhd:1015$1580.
    dead port 2/2 on $mux $flatten\P3.$verific$mux_641$b22.vhd:1015$1571.
Removed 8 multiplexer ports.
<suppressed ~73 debug messages>

yosys> opt_reduce

3.15.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
    New ctrl vector for $pmux cell $flatten\P1.$verific$select_746$b22.vhd:490$507: { $flatten\P1.$verific$n2255$138 $auto$opt_reduce.cc:134:opt_pmux$2262 }
    New ctrl vector for $pmux cell $flatten\P1.$verific$select_750$b22.vhd:490$448: { $flatten\P1.$verific$n2256$139 $auto$opt_reduce.cc:134:opt_pmux$2264 }
    New ctrl vector for $pmux cell $flatten\P1.$verific$select_751$b22.vhd:490$525: { $flatten\P1.$verific$n2257$140 $auto$opt_reduce.cc:134:opt_pmux$2266 }
    New ctrl vector for $pmux cell $flatten\P1.$verific$select_752$b22.vhd:490$526: { $flatten\P1.$verific$n2258$141 $auto$opt_reduce.cc:134:opt_pmux$2268 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_746$b22.vhd:1510$1011: { $flatten\P2.$verific$n2255$641 $auto$opt_reduce.cc:134:opt_pmux$2270 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_750$b22.vhd:1510$952: { $flatten\P2.$verific$n2256$642 $auto$opt_reduce.cc:134:opt_pmux$2272 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_751$b22.vhd:1510$1029: { $flatten\P2.$verific$n2257$643 $auto$opt_reduce.cc:134:opt_pmux$2274 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_752$b22.vhd:1510$1030: { $flatten\P2.$verific$n2258$644 $auto$opt_reduce.cc:134:opt_pmux$2276 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_494$b22.vhd:957$1527: { $flatten\P3.$verific$n2118$1146 $auto$opt_reduce.cc:134:opt_pmux$2278 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_495$b22.vhd:957$1528: { $flatten\P3.$verific$n2120$1148 $auto$opt_reduce.cc:134:opt_pmux$2280 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_496$b22.vhd:957$1529: { $flatten\P3.$verific$n2119$1147 $auto$opt_reduce.cc:134:opt_pmux$2282 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_497$b22.vhd:957$1530: { $flatten\P3.$verific$n2121$1149 $auto$opt_reduce.cc:134:opt_pmux$2284 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_534$b22.vhd:977$1533: { $flatten\P3.$verific$n2121$1149 $auto$opt_reduce.cc:134:opt_pmux$2286 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_535$b22.vhd:977$1534: { $flatten\P3.$verific$n2119$1147 $auto$opt_reduce.cc:134:opt_pmux$2288 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_536$b22.vhd:977$1535: { $flatten\P3.$verific$n2120$1148 $auto$opt_reduce.cc:134:opt_pmux$2290 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_537$b22.vhd:977$1536: { $flatten\P3.$verific$n2118$1146 $auto$opt_reduce.cc:134:opt_pmux$2292 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_617$b22.vhd:1000$1547: { $flatten\P3.$verific$n2121$1149 $auto$opt_reduce.cc:134:opt_pmux$2294 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_618$b22.vhd:1000$1548: { $flatten\P3.$verific$n2120$1148 $auto$opt_reduce.cc:134:opt_pmux$2296 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_619$b22.vhd:1000$1549: { $flatten\P3.$verific$n2119$1147 $auto$opt_reduce.cc:134:opt_pmux$2298 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_620$b22.vhd:1000$1550: { $flatten\P3.$verific$n2118$1146 $auto$opt_reduce.cc:134:opt_pmux$2300 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_717$b22.vhd:877$1518: { $flatten\P3.$verific$n2118$1146 $auto$opt_reduce.cc:134:opt_pmux$2302 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_718$b22.vhd:877$1524: { $flatten\P3.$verific$n2119$1147 $auto$opt_reduce.cc:134:opt_pmux$2304 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_719$b22.vhd:877$1525: { $flatten\P3.$verific$n2120$1148 $auto$opt_reduce.cc:134:opt_pmux$2306 }
    New ctrl vector for $pmux cell $flatten\P3.$verific$select_720$b22.vhd:877$1526: { $flatten\P3.$verific$n2121$1149 $auto$opt_reduce.cc:134:opt_pmux$2308 }
  Optimizing cells in module \b22.
Performed a total of 24 changes.

yosys> opt_merge

3.15.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
<suppressed ~66 debug messages>
Removed a total of 22 cells.

yosys> opt_dff -nodffe -nosdff

3.15.6. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $flatten\P3.$verific$wr_reg$b22.vhd:1019$1617 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P3.$verific$state_reg$b22.vhd:1019$1619 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P3.$verific$reg3_reg$b22.vhd:1019$1614 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P3.$verific$reg2_reg$b22.vhd:1019$1613 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P3.$verific$reg1_reg$b22.vhd:1019$1612 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P3.$verific$reg0_reg$b22.vhd:1019$1611 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P3.$verific$rd_reg$b22.vhd:1019$1616 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P3.$verific$addr_reg$b22.vhd:1019$1615 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P3.$verific$IR_reg$b22.vhd:1019$1608 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P3.$verific$B_reg$b22.vhd:1019$1610 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P2.$verific$wr_reg$b22.vhd:1529$1097 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P2.$verific$state_reg$b22.vhd:1529$1099 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P2.$verific$reg3_reg$b22.vhd:1529$1094 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P2.$verific$reg2_reg$b22.vhd:1529$1093 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P2.$verific$reg1_reg$b22.vhd:1529$1092 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P2.$verific$reg0_reg$b22.vhd:1529$1091 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P2.$verific$rd_reg$b22.vhd:1529$1096 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P2.$verific$datao_reg$b22.vhd:1529$1098 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P2.$verific$addr_reg$b22.vhd:1529$1095 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P2.$verific$IR_reg$b22.vhd:1529$1088 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P2.$verific$B_reg$b22.vhd:1529$1090 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P1.$verific$wr_reg$b22.vhd:509$591 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P1.$verific$state_reg$b22.vhd:509$593 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P1.$verific$reg3_reg$b22.vhd:509$588 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P1.$verific$reg2_reg$b22.vhd:509$587 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P1.$verific$reg1_reg$b22.vhd:509$586 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P1.$verific$reg0_reg$b22.vhd:509$585 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P1.$verific$rd_reg$b22.vhd:509$590 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P1.$verific$datao_reg$b22.vhd:509$592 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P1.$verific$addr_reg$b22.vhd:509$589 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P1.$verific$IR_reg$b22.vhd:509$582 ($aldff) from module b22.
Changing const-value async load to async reset on $flatten\P1.$verific$B_reg$b22.vhd:509$584 ($aldff) from module b22.

yosys> opt_clean

3.15.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 24 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.15.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~8 debug messages>

3.15.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.15.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~72 debug messages>

yosys> opt_reduce

3.15.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.15.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.15.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.15.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..

yosys> opt_expr

3.15.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

3.15.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

3.16. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.16.1. Executing FSM_DETECT pass (finding FSMs in design).
Found FSM state register b22.P1.d.
Found FSM state register b22.P2.d.
Found FSM state register b22.P3.d.

yosys> fsm_extract

3.16.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\P1.d' from module `\b22'.
  found $adff cell for state register: $flatten\P1.$verific$d_reg$b22.vhd:509$583
  root of input selection tree: $flatten\P1.$verific$n11472$388
  found reset state: 0 (from async reset)
  found ctrl input: \P1.state
  found ctrl input: $flatten\P1.$verific$n341$234 [0]
  found ctrl input: $flatten\P1.$verific$n10346$205
  found ctrl input: $flatten\P1.$verific$n1405$132
  found ctrl input: $flatten\P1.$verific$n1440$133
  found ctrl input: $flatten\P1.$verific$n1474$134
  found ctrl input: $flatten\P1.$verific$n1475$135
  found ctrl input: $flatten\P1.$verific$n1476$136
  found ctrl input: $flatten\P1.$verific$n1477$137
  found state code: 1
  found state code: 2
  found state code: 3
  found ctrl input: \P1.B
  ctrl inputs: { \P1.state \P1.B $flatten\P1.$verific$n341$234 [0] $flatten\P1.$verific$n1477$137 $flatten\P1.$verific$n1476$136 $flatten\P1.$verific$n1475$135 $flatten\P1.$verific$n1474$134 $flatten\P1.$verific$n1440$133 $flatten\P1.$verific$n1405$132 $flatten\P1.$verific$n10346$205 }
  ctrl outputs: $flatten\P1.$verific$n11472$388
  transition:          0 10'0--------- ->          0 0
  transition:          0 10'1-00000000 ->          0 0
  transition:          0 10'1-01000000 ->          0 0
  transition:          0 10'1-0-100000 ->          1 1
  transition:          0 10'1-0--10000 ->          2 2
  transition:          0 10'1-0---1000 ->          3 3
  transition:          0 10'100----100 ->          0 0
  transition:          0 10'110----100 ->          3 3
  transition:          0 10'100-----10 ->          3 3
  transition:          0 10'110-----10 ->          0 0
  transition:          0 10'1-0------1 ->          0 0
  transition:          0 10'1-1------- ->          0 0
  transition:          2 10'0--------- ->          2 2
  transition:          2 10'1-00000000 ->          2 2
  transition:          2 10'1-01000000 ->          0 0
  transition:          2 10'1-0-100000 ->          1 1
  transition:          2 10'1-0--10000 ->          2 2
  transition:          2 10'1-0---1000 ->          3 3
  transition:          2 10'100----100 ->          2 2
  transition:          2 10'110----100 ->          3 3
  transition:          2 10'100-----10 ->          3 3
  transition:          2 10'110-----10 ->          2 2
  transition:          2 10'1-0------1 ->          2 2
  transition:          2 10'1-1------- ->          2 2
  transition:          1 10'0--------- ->          1 1
  transition:          1 10'1-00000000 ->          1 1
  transition:          1 10'1-01000000 ->          0 0
  transition:          1 10'1-0-100000 ->          1 1
  transition:          1 10'1-0--10000 ->          2 2
  transition:          1 10'1-0---1000 ->          3 3
  transition:          1 10'100----100 ->          1 1
  transition:          1 10'110----100 ->          3 3
  transition:          1 10'100-----10 ->          3 3
  transition:          1 10'110-----10 ->          1 1
  transition:          1 10'1-0------1 ->          1 1
  transition:          1 10'1-1------- ->          1 1
  transition:          3 10'0--------- ->          3 3
  transition:          3 10'1-00000000 ->          3 3
  transition:          3 10'1-01000000 ->          0 0
  transition:          3 10'1-0-100000 ->          1 1
  transition:          3 10'1-0--10000 ->          2 2
  transition:          3 10'1-0---1000 ->          3 3
  transition:          3 10'100----100 ->          3 3
  transition:          3 10'110----100 ->          3 3
  transition:          3 10'100-----10 ->          3 3
  transition:          3 10'110-----10 ->          3 3
  transition:          3 10'1-0------1 ->          3 3
  transition:          3 10'1-1------- ->          3 3
Extracting FSM `\P2.d' from module `\b22'.
  found $adff cell for state register: $flatten\P2.$verific$d_reg$b22.vhd:1529$1089
  root of input selection tree: $flatten\P2.$verific$n11479$892
  found reset state: 0 (from async reset)
  found ctrl input: \P2.state
  found ctrl input: $flatten\P2.$verific$n341$737 [0]
  found ctrl input: $flatten\P2.$verific$n10346$708
  found ctrl input: $flatten\P2.$verific$n1405$635
  found ctrl input: $flatten\P2.$verific$n1440$636
  found ctrl input: $flatten\P2.$verific$n1474$637
  found ctrl input: $flatten\P2.$verific$n1475$638
  found ctrl input: $flatten\P2.$verific$n1476$639
  found ctrl input: $flatten\P2.$verific$n1477$640
  found state code: 1
  found state code: 2
  found state code: 3
  found ctrl input: \P2.B
  ctrl inputs: { \P2.state \P2.B $flatten\P2.$verific$n341$737 [0] $flatten\P2.$verific$n1477$640 $flatten\P2.$verific$n1476$639 $flatten\P2.$verific$n1475$638 $flatten\P2.$verific$n1474$637 $flatten\P2.$verific$n1440$636 $flatten\P2.$verific$n1405$635 $flatten\P2.$verific$n10346$708 }
  ctrl outputs: $flatten\P2.$verific$n11479$892
  transition:          0 10'0--------- ->          0 0
  transition:          0 10'1-00000000 ->          0 0
  transition:          0 10'1-01000000 ->          0 0
  transition:          0 10'1-0-100000 ->          1 1
  transition:          0 10'1-0--10000 ->          2 2
  transition:          0 10'1-0---1000 ->          3 3
  transition:          0 10'100----100 ->          0 0
  transition:          0 10'110----100 ->          3 3
  transition:          0 10'100-----10 ->          3 3
  transition:          0 10'110-----10 ->          0 0
  transition:          0 10'1-0------1 ->          0 0
  transition:          0 10'1-1------- ->          0 0
  transition:          2 10'0--------- ->          2 2
  transition:          2 10'1-00000000 ->          2 2
  transition:          2 10'1-01000000 ->          0 0
  transition:          2 10'1-0-100000 ->          1 1
  transition:          2 10'1-0--10000 ->          2 2
  transition:          2 10'1-0---1000 ->          3 3
  transition:          2 10'100----100 ->          2 2
  transition:          2 10'110----100 ->          3 3
  transition:          2 10'100-----10 ->          3 3
  transition:          2 10'110-----10 ->          2 2
  transition:          2 10'1-0------1 ->          2 2
  transition:          2 10'1-1------- ->          2 2
  transition:          1 10'0--------- ->          1 1
  transition:          1 10'1-00000000 ->          1 1
  transition:          1 10'1-01000000 ->          0 0
  transition:          1 10'1-0-100000 ->          1 1
  transition:          1 10'1-0--10000 ->          2 2
  transition:          1 10'1-0---1000 ->          3 3
  transition:          1 10'100----100 ->          1 1
  transition:          1 10'110----100 ->          3 3
  transition:          1 10'100-----10 ->          3 3
  transition:          1 10'110-----10 ->          1 1
  transition:          1 10'1-0------1 ->          1 1
  transition:          1 10'1-1------- ->          1 1
  transition:          3 10'0--------- ->          3 3
  transition:          3 10'1-00000000 ->          3 3
  transition:          3 10'1-01000000 ->          0 0
  transition:          3 10'1-0-100000 ->          1 1
  transition:          3 10'1-0--10000 ->          2 2
  transition:          3 10'1-0---1000 ->          3 3
  transition:          3 10'100----100 ->          3 3
  transition:          3 10'110----100 ->          3 3
  transition:          3 10'100-----10 ->          3 3
  transition:          3 10'110-----10 ->          3 3
  transition:          3 10'1-0------1 ->          3 3
  transition:          3 10'1-1------- ->          3 3
Extracting FSM `\P3.d' from module `\b22'.
  found $adff cell for state register: $flatten\P3.$verific$d_reg$b22.vhd:1019$1609
  root of input selection tree: $flatten\P3.$verific$n11328$1397
  found reset state: 0 (from async reset)
  found ctrl input: \P3.state
  found ctrl input: $flatten\P3.$verific$n341$1240 [0]
  found ctrl input: $flatten\P3.$verific$n10195$1213
  found ctrl input: $flatten\P3.$verific$n1406$1140
  found ctrl input: $flatten\P3.$verific$n1441$1141
  found ctrl input: $flatten\P3.$verific$n1475$1142
  found ctrl input: $flatten\P3.$verific$n1476$1143
  found ctrl input: $flatten\P3.$verific$n1477$1144
  found ctrl input: $flatten\P3.$verific$n1478$1145
  found state code: 1
  found state code: 2
  found state code: 3
  found ctrl input: \P3.B
  ctrl inputs: { \P3.state \P3.B $flatten\P3.$verific$n341$1240 [0] $flatten\P3.$verific$n1478$1145 $flatten\P3.$verific$n1477$1144 $flatten\P3.$verific$n1476$1143 $flatten\P3.$verific$n1475$1142 $flatten\P3.$verific$n1441$1141 $flatten\P3.$verific$n1406$1140 $flatten\P3.$verific$n10195$1213 }
  ctrl outputs: $flatten\P3.$verific$n11328$1397
  transition:          0 10'0--------- ->          0 0
  transition:          0 10'1-00000000 ->          0 0
  transition:          0 10'1-01000000 ->          0 0
  transition:          0 10'1-0-100000 ->          1 1
  transition:          0 10'1-0--10000 ->          2 2
  transition:          0 10'1-0---1000 ->          3 3
  transition:          0 10'100----100 ->          0 0
  transition:          0 10'110----100 ->          3 3
  transition:          0 10'100-----10 ->          3 3
  transition:          0 10'110-----10 ->          0 0
  transition:          0 10'1-0------1 ->          0 0
  transition:          0 10'1-1------- ->          0 0
  transition:          2 10'0--------- ->          2 2
  transition:          2 10'1-00000000 ->          2 2
  transition:          2 10'1-01000000 ->          0 0
  transition:          2 10'1-0-100000 ->          1 1
  transition:          2 10'1-0--10000 ->          2 2
  transition:          2 10'1-0---1000 ->          3 3
  transition:          2 10'100----100 ->          2 2
  transition:          2 10'110----100 ->          3 3
  transition:          2 10'100-----10 ->          3 3
  transition:          2 10'110-----10 ->          2 2
  transition:          2 10'1-0------1 ->          2 2
  transition:          2 10'1-1------- ->          2 2
  transition:          1 10'0--------- ->          1 1
  transition:          1 10'1-00000000 ->          1 1
  transition:          1 10'1-01000000 ->          0 0
  transition:          1 10'1-0-100000 ->          1 1
  transition:          1 10'1-0--10000 ->          2 2
  transition:          1 10'1-0---1000 ->          3 3
  transition:          1 10'100----100 ->          1 1
  transition:          1 10'110----100 ->          3 3
  transition:          1 10'100-----10 ->          3 3
  transition:          1 10'110-----10 ->          1 1
  transition:          1 10'1-0------1 ->          1 1
  transition:          1 10'1-1------- ->          1 1
  transition:          3 10'0--------- ->          3 3
  transition:          3 10'1-00000000 ->          3 3
  transition:          3 10'1-01000000 ->          0 0
  transition:          3 10'1-0-100000 ->          1 1
  transition:          3 10'1-0--10000 ->          2 2
  transition:          3 10'1-0---1000 ->          3 3
  transition:          3 10'100----100 ->          3 3
  transition:          3 10'110----100 ->          3 3
  transition:          3 10'100-----10 ->          3 3
  transition:          3 10'110-----10 ->          3 3
  transition:          3 10'1-0------1 ->          3 3
  transition:          3 10'1-1------- ->          3 3

yosys> fsm_opt

3.16.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\P3.d$2313' from module `\b22'.
  Merging pattern 10'1-00000000 and 10'1-01000000 from group (0 0 0).
  Merging pattern 10'1-01000000 and 10'1-00000000 from group (0 0 0).
  Merging pattern 10'100----100 and 10'110----100 from group (3 3 3).
  Merging pattern 10'110----100 and 10'100----100 from group (3 3 3).
  Merging pattern 10'100-----10 and 10'110-----10 from group (3 3 3).
  Merging pattern 10'110-----10 and 10'100-----10 from group (3 3 3).
Optimizing FSM `$fsm$\P2.d$2311' from module `\b22'.
  Merging pattern 10'1-00000000 and 10'1-01000000 from group (0 0 0).
  Merging pattern 10'1-01000000 and 10'1-00000000 from group (0 0 0).
  Merging pattern 10'100----100 and 10'110----100 from group (3 3 3).
  Merging pattern 10'110----100 and 10'100----100 from group (3 3 3).
  Merging pattern 10'100-----10 and 10'110-----10 from group (3 3 3).
  Merging pattern 10'110-----10 and 10'100-----10 from group (3 3 3).
Optimizing FSM `$fsm$\P1.d$2309' from module `\b22'.
  Merging pattern 10'1-00000000 and 10'1-01000000 from group (0 0 0).
  Merging pattern 10'1-01000000 and 10'1-00000000 from group (0 0 0).
  Merging pattern 10'100----100 and 10'110----100 from group (3 3 3).
  Merging pattern 10'110----100 and 10'100----100 from group (3 3 3).
  Merging pattern 10'100-----10 and 10'110-----10 from group (3 3 3).
  Merging pattern 10'110-----10 and 10'100-----10 from group (3 3 3).

yosys> opt_clean

3.16.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 9 unused cells and 9 unused wires.
<suppressed ~10 debug messages>

yosys> fsm_opt

3.16.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\P1.d$2309' from module `\b22'.
Optimizing FSM `$fsm$\P2.d$2311' from module `\b22'.
Optimizing FSM `$fsm$\P3.d$2313' from module `\b22'.

yosys> fsm_recode -encoding binary

3.16.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\P1.d$2309' from module `\b22' using `auto' encoding:
  mapping auto encoding to `binary` for this FSM.
  00000000000000000000000000000000 -> 00
  00000000000000000000000000000010 -> 01
  00000000000000000000000000000001 -> 10
  00000000000000000000000000000011 -> 11
Recoding FSM `$fsm$\P2.d$2311' from module `\b22' using `auto' encoding:
  mapping auto encoding to `binary` for this FSM.
  00000000000000000000000000000000 -> 00
  00000000000000000000000000000010 -> 01
  00000000000000000000000000000001 -> 10
  00000000000000000000000000000011 -> 11
Recoding FSM `$fsm$\P3.d$2313' from module `\b22' using `auto' encoding:
  mapping auto encoding to `binary` for this FSM.
  00000000000000000000000000000000 -> 00
  00000000000000000000000000000010 -> 01
  00000000000000000000000000000001 -> 10
  00000000000000000000000000000011 -> 11

yosys> fsm_info

3.16.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\P1.d$2309' from module `b22':
-------------------------------------

  Information on FSM $fsm$\P1.d$2309 (\P1.d):

  Number of input signals:   10
  Number of output signals:  32
  Number of state bits:       2

  Input signals:
    0: $flatten\P1.$verific$n10346$205
    1: $flatten\P1.$verific$n1405$132
    2: $flatten\P1.$verific$n1440$133
    3: $flatten\P1.$verific$n1474$134
    4: $flatten\P1.$verific$n1475$135
    5: $flatten\P1.$verific$n1476$136
    6: $flatten\P1.$verific$n1477$137
    7: $flatten\P1.$verific$n341$234 [0]
    8: \P1.B
    9: \P1.state

  Output signals:
    0: $flatten\P1.$verific$n11472$388 [0]
    1: $flatten\P1.$verific$n11472$388 [1]
    2: $flatten\P1.$verific$n11472$388 [2]
    3: $flatten\P1.$verific$n11472$388 [3]
    4: $flatten\P1.$verific$n11472$388 [4]
    5: $flatten\P1.$verific$n11472$388 [5]
    6: $flatten\P1.$verific$n11472$388 [6]
    7: $flatten\P1.$verific$n11472$388 [7]
    8: $flatten\P1.$verific$n11472$388 [8]
    9: $flatten\P1.$verific$n11472$388 [9]
   10: $flatten\P1.$verific$n11472$388 [10]
   11: $flatten\P1.$verific$n11472$388 [11]
   12: $flatten\P1.$verific$n11472$388 [12]
   13: $flatten\P1.$verific$n11472$388 [13]
   14: $flatten\P1.$verific$n11472$388 [14]
   15: $flatten\P1.$verific$n11472$388 [15]
   16: $flatten\P1.$verific$n11472$388 [16]
   17: $flatten\P1.$verific$n11472$388 [17]
   18: $flatten\P1.$verific$n11472$388 [18]
   19: $flatten\P1.$verific$n11472$388 [19]
   20: $flatten\P1.$verific$n11472$388 [20]
   21: $flatten\P1.$verific$n11472$388 [21]
   22: $flatten\P1.$verific$n11472$388 [22]
   23: $flatten\P1.$verific$n11472$388 [23]
   24: $flatten\P1.$verific$n11472$388 [24]
   25: $flatten\P1.$verific$n11472$388 [25]
   26: $flatten\P1.$verific$n11472$388 [26]
   27: $flatten\P1.$verific$n11472$388 [27]
   28: $flatten\P1.$verific$n11472$388 [28]
   29: $flatten\P1.$verific$n11472$388 [29]
   30: $flatten\P1.$verific$n11472$388 [30]
   31: $flatten\P1.$verific$n11472$388 [31]

  State encoding:
    0:       2'00  <RESET STATE>
    1:       2'01
    2:       2'10
    3:       2'11

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 10'1-0-000000   ->     0 0
      1:     0 10'100----100   ->     0 0
      2:     0 10'110-----10   ->     0 0
      3:     0 10'1-0------1   ->     0 0
      4:     0 10'1-1-------   ->     0 0
      5:     0 10'0---------   ->     0 0
      6:     0 10'1-0--10000   ->     1 2
      7:     0 10'1-0-100000   ->     2 1
      8:     0 10'1-0---1000   ->     3 3
      9:     0 10'110----100   ->     3 3
     10:     0 10'100-----10   ->     3 3
     11:     1 10'1-01000000   ->     0 0
     12:     1 10'1-00000000   ->     1 2
     13:     1 10'1-0--10000   ->     1 2
     14:     1 10'100----100   ->     1 2
     15:     1 10'110-----10   ->     1 2
     16:     1 10'1-0------1   ->     1 2
     17:     1 10'1-1-------   ->     1 2
     18:     1 10'0---------   ->     1 2
     19:     1 10'1-0-100000   ->     2 1
     20:     1 10'1-0---1000   ->     3 3
     21:     1 10'110----100   ->     3 3
     22:     1 10'100-----10   ->     3 3
     23:     2 10'1-01000000   ->     0 0
     24:     2 10'1-0--10000   ->     1 2
     25:     2 10'1-00000000   ->     2 1
     26:     2 10'1-0-100000   ->     2 1
     27:     2 10'100----100   ->     2 1
     28:     2 10'110-----10   ->     2 1
     29:     2 10'1-0------1   ->     2 1
     30:     2 10'1-1-------   ->     2 1
     31:     2 10'0---------   ->     2 1
     32:     2 10'1-0---1000   ->     3 3
     33:     2 10'110----100   ->     3 3
     34:     2 10'100-----10   ->     3 3
     35:     3 10'1-01000000   ->     0 0
     36:     3 10'1-0--10000   ->     1 2
     37:     3 10'1-0-100000   ->     2 1
     38:     3 10'1-00000000   ->     3 3
     39:     3 10'1-0---1000   ->     3 3
     40:     3 10'1-0----100   ->     3 3
     41:     3 10'1-0-----10   ->     3 3
     42:     3 10'1-0------1   ->     3 3
     43:     3 10'1-1-------   ->     3 3
     44:     3 10'0---------   ->     3 3

-------------------------------------

FSM `$fsm$\P2.d$2311' from module `b22':
-------------------------------------

  Information on FSM $fsm$\P2.d$2311 (\P2.d):

  Number of input signals:   10
  Number of output signals:  32
  Number of state bits:       2

  Input signals:
    0: $flatten\P2.$verific$n10346$708
    1: $flatten\P2.$verific$n1405$635
    2: $flatten\P2.$verific$n1440$636
    3: $flatten\P2.$verific$n1474$637
    4: $flatten\P2.$verific$n1475$638
    5: $flatten\P2.$verific$n1476$639
    6: $flatten\P2.$verific$n1477$640
    7: $flatten\P2.$verific$n341$737 [0]
    8: \P2.B
    9: \P2.state

  Output signals:
    0: $flatten\P2.$verific$n11479$892 [0]
    1: $flatten\P2.$verific$n11479$892 [1]
    2: $flatten\P2.$verific$n11479$892 [2]
    3: $flatten\P2.$verific$n11479$892 [3]
    4: $flatten\P2.$verific$n11479$892 [4]
    5: $flatten\P2.$verific$n11479$892 [5]
    6: $flatten\P2.$verific$n11479$892 [6]
    7: $flatten\P2.$verific$n11479$892 [7]
    8: $flatten\P2.$verific$n11479$892 [8]
    9: $flatten\P2.$verific$n11479$892 [9]
   10: $flatten\P2.$verific$n11479$892 [10]
   11: $flatten\P2.$verific$n11479$892 [11]
   12: $flatten\P2.$verific$n11479$892 [12]
   13: $flatten\P2.$verific$n11479$892 [13]
   14: $flatten\P2.$verific$n11479$892 [14]
   15: $flatten\P2.$verific$n11479$892 [15]
   16: $flatten\P2.$verific$n11479$892 [16]
   17: $flatten\P2.$verific$n11479$892 [17]
   18: $flatten\P2.$verific$n11479$892 [18]
   19: $flatten\P2.$verific$n11479$892 [19]
   20: $flatten\P2.$verific$n11479$892 [20]
   21: $flatten\P2.$verific$n11479$892 [21]
   22: $flatten\P2.$verific$n11479$892 [22]
   23: $flatten\P2.$verific$n11479$892 [23]
   24: $flatten\P2.$verific$n11479$892 [24]
   25: $flatten\P2.$verific$n11479$892 [25]
   26: $flatten\P2.$verific$n11479$892 [26]
   27: $flatten\P2.$verific$n11479$892 [27]
   28: $flatten\P2.$verific$n11479$892 [28]
   29: $flatten\P2.$verific$n11479$892 [29]
   30: $flatten\P2.$verific$n11479$892 [30]
   31: $flatten\P2.$verific$n11479$892 [31]

  State encoding:
    0:       2'00  <RESET STATE>
    1:       2'01
    2:       2'10
    3:       2'11

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 10'1-0-000000   ->     0 0
      1:     0 10'100----100   ->     0 0
      2:     0 10'110-----10   ->     0 0
      3:     0 10'1-0------1   ->     0 0
      4:     0 10'1-1-------   ->     0 0
      5:     0 10'0---------   ->     0 0
      6:     0 10'1-0--10000   ->     1 2
      7:     0 10'1-0-100000   ->     2 1
      8:     0 10'1-0---1000   ->     3 3
      9:     0 10'110----100   ->     3 3
     10:     0 10'100-----10   ->     3 3
     11:     1 10'1-01000000   ->     0 0
     12:     1 10'1-00000000   ->     1 2
     13:     1 10'1-0--10000   ->     1 2
     14:     1 10'100----100   ->     1 2
     15:     1 10'110-----10   ->     1 2
     16:     1 10'1-0------1   ->     1 2
     17:     1 10'1-1-------   ->     1 2
     18:     1 10'0---------   ->     1 2
     19:     1 10'1-0-100000   ->     2 1
     20:     1 10'1-0---1000   ->     3 3
     21:     1 10'110----100   ->     3 3
     22:     1 10'100-----10   ->     3 3
     23:     2 10'1-01000000   ->     0 0
     24:     2 10'1-0--10000   ->     1 2
     25:     2 10'1-00000000   ->     2 1
     26:     2 10'1-0-100000   ->     2 1
     27:     2 10'100----100   ->     2 1
     28:     2 10'110-----10   ->     2 1
     29:     2 10'1-0------1   ->     2 1
     30:     2 10'1-1-------   ->     2 1
     31:     2 10'0---------   ->     2 1
     32:     2 10'1-0---1000   ->     3 3
     33:     2 10'110----100   ->     3 3
     34:     2 10'100-----10   ->     3 3
     35:     3 10'1-01000000   ->     0 0
     36:     3 10'1-0--10000   ->     1 2
     37:     3 10'1-0-100000   ->     2 1
     38:     3 10'1-00000000   ->     3 3
     39:     3 10'1-0---1000   ->     3 3
     40:     3 10'1-0----100   ->     3 3
     41:     3 10'1-0-----10   ->     3 3
     42:     3 10'1-0------1   ->     3 3
     43:     3 10'1-1-------   ->     3 3
     44:     3 10'0---------   ->     3 3

-------------------------------------

FSM `$fsm$\P3.d$2313' from module `b22':
-------------------------------------

  Information on FSM $fsm$\P3.d$2313 (\P3.d):

  Number of input signals:   10
  Number of output signals:  32
  Number of state bits:       2

  Input signals:
    0: $flatten\P3.$verific$n10195$1213
    1: $flatten\P3.$verific$n1406$1140
    2: $flatten\P3.$verific$n1441$1141
    3: $flatten\P3.$verific$n1475$1142
    4: $flatten\P3.$verific$n1476$1143
    5: $flatten\P3.$verific$n1477$1144
    6: $flatten\P3.$verific$n1478$1145
    7: $flatten\P3.$verific$n341$1240 [0]
    8: \P3.B
    9: \P3.state

  Output signals:
    0: $flatten\P3.$verific$n11328$1397 [0]
    1: $flatten\P3.$verific$n11328$1397 [1]
    2: $flatten\P3.$verific$n11328$1397 [2]
    3: $flatten\P3.$verific$n11328$1397 [3]
    4: $flatten\P3.$verific$n11328$1397 [4]
    5: $flatten\P3.$verific$n11328$1397 [5]
    6: $flatten\P3.$verific$n11328$1397 [6]
    7: $flatten\P3.$verific$n11328$1397 [7]
    8: $flatten\P3.$verific$n11328$1397 [8]
    9: $flatten\P3.$verific$n11328$1397 [9]
   10: $flatten\P3.$verific$n11328$1397 [10]
   11: $flatten\P3.$verific$n11328$1397 [11]
   12: $flatten\P3.$verific$n11328$1397 [12]
   13: $flatten\P3.$verific$n11328$1397 [13]
   14: $flatten\P3.$verific$n11328$1397 [14]
   15: $flatten\P3.$verific$n11328$1397 [15]
   16: $flatten\P3.$verific$n11328$1397 [16]
   17: $flatten\P3.$verific$n11328$1397 [17]
   18: $flatten\P3.$verific$n11328$1397 [18]
   19: $flatten\P3.$verific$n11328$1397 [19]
   20: $flatten\P3.$verific$n11328$1397 [20]
   21: $flatten\P3.$verific$n11328$1397 [21]
   22: $flatten\P3.$verific$n11328$1397 [22]
   23: $flatten\P3.$verific$n11328$1397 [23]
   24: $flatten\P3.$verific$n11328$1397 [24]
   25: $flatten\P3.$verific$n11328$1397 [25]
   26: $flatten\P3.$verific$n11328$1397 [26]
   27: $flatten\P3.$verific$n11328$1397 [27]
   28: $flatten\P3.$verific$n11328$1397 [28]
   29: $flatten\P3.$verific$n11328$1397 [29]
   30: $flatten\P3.$verific$n11328$1397 [30]
   31: $flatten\P3.$verific$n11328$1397 [31]

  State encoding:
    0:       2'00  <RESET STATE>
    1:       2'01
    2:       2'10
    3:       2'11

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 10'1-0-000000   ->     0 0
      1:     0 10'100----100   ->     0 0
      2:     0 10'110-----10   ->     0 0
      3:     0 10'1-0------1   ->     0 0
      4:     0 10'1-1-------   ->     0 0
      5:     0 10'0---------   ->     0 0
      6:     0 10'1-0--10000   ->     1 2
      7:     0 10'1-0-100000   ->     2 1
      8:     0 10'1-0---1000   ->     3 3
      9:     0 10'110----100   ->     3 3
     10:     0 10'100-----10   ->     3 3
     11:     1 10'1-01000000   ->     0 0
     12:     1 10'1-00000000   ->     1 2
     13:     1 10'1-0--10000   ->     1 2
     14:     1 10'100----100   ->     1 2
     15:     1 10'110-----10   ->     1 2
     16:     1 10'1-0------1   ->     1 2
     17:     1 10'1-1-------   ->     1 2
     18:     1 10'0---------   ->     1 2
     19:     1 10'1-0-100000   ->     2 1
     20:     1 10'1-0---1000   ->     3 3
     21:     1 10'110----100   ->     3 3
     22:     1 10'100-----10   ->     3 3
     23:     2 10'1-01000000   ->     0 0
     24:     2 10'1-0--10000   ->     1 2
     25:     2 10'1-00000000   ->     2 1
     26:     2 10'1-0-100000   ->     2 1
     27:     2 10'100----100   ->     2 1
     28:     2 10'110-----10   ->     2 1
     29:     2 10'1-0------1   ->     2 1
     30:     2 10'1-1-------   ->     2 1
     31:     2 10'0---------   ->     2 1
     32:     2 10'1-0---1000   ->     3 3
     33:     2 10'110----100   ->     3 3
     34:     2 10'100-----10   ->     3 3
     35:     3 10'1-01000000   ->     0 0
     36:     3 10'1-0--10000   ->     1 2
     37:     3 10'1-0-100000   ->     2 1
     38:     3 10'1-00000000   ->     3 3
     39:     3 10'1-0---1000   ->     3 3
     40:     3 10'1-0----100   ->     3 3
     41:     3 10'1-0-----10   ->     3 3
     42:     3 10'1-0------1   ->     3 3
     43:     3 10'1-1-------   ->     3 3
     44:     3 10'0---------   ->     3 3

-------------------------------------

yosys> fsm_map

3.16.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\P1.d$2309' from module `\b22'.
Mapping FSM `$fsm$\P2.d$2311' from module `\b22'.
Mapping FSM `$fsm$\P3.d$2313' from module `\b22'.

yosys> opt -sat

3.17. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.17.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~21 debug messages>

yosys> opt_merge -nomux

3.17.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
<suppressed ~486 debug messages>
Removed a total of 162 cells.

yosys> opt_muxtree

3.17.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~72 debug messages>

yosys> opt_reduce

3.17.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.17.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.17.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\P3.$verific$reg3_reg$b22.vhd:1019$1614 ($adff) from module b22 (D = $flatten\P3.$verific$n11034$1392, Q = \P3.reg3).
Adding EN signal on $flatten\P3.$verific$reg2_reg$b22.vhd:1019$1613 ($adff) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1688, Q = \P3.reg2).
Adding EN signal on $flatten\P3.$verific$reg1_reg$b22.vhd:1019$1612 ($adff) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1707, Q = \P3.reg1).
Adding EN signal on $flatten\P3.$verific$reg0_reg$b22.vhd:1019$1611 ($adff) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1726, Q = \P3.reg0).
Adding EN signal on $flatten\P3.$verific$addr_reg$b22.vhd:1019$1615 ($adff) from module b22 (D = $flatten\P3.$verific$n11102$1394, Q = \P3.addr).
Adding EN signal on $flatten\P3.$verific$B_reg$b22.vhd:1019$1610 ($adff) from module b22 (D = $flatten\P3.$verific$n10835$1219, Q = \P3.B).
Adding EN signal on $flatten\P2.$verific$reg3_reg$b22.vhd:1529$1094 ($adff) from module b22 (D = $flatten\P2.$verific$n11185$887 [31:3], Q = \P2.reg3 [31:3]).
Adding EN signal on $flatten\P2.$verific$reg3_reg$b22.vhd:1529$1094 ($adff) from module b22 (D = $flatten\P2.$auto$bmuxmap.cc:58:execute$1885 [2:0], Q = \P2.reg3 [2:0]).
Adding EN signal on $flatten\P2.$verific$reg2_reg$b22.vhd:1529$1093 ($adff) from module b22 (D = $flatten\P2.$auto$bmuxmap.cc:58:execute$1904, Q = \P2.reg2).
Adding EN signal on $flatten\P2.$verific$reg1_reg$b22.vhd:1529$1092 ($adff) from module b22 (D = $flatten\P2.$auto$bmuxmap.cc:58:execute$1923, Q = \P2.reg1).
Adding EN signal on $flatten\P2.$verific$reg0_reg$b22.vhd:1529$1091 ($adff) from module b22 (D = $flatten\P2.$auto$bmuxmap.cc:58:execute$1942, Q = \P2.reg0).
Adding EN signal on $flatten\P2.$verific$datao_reg$b22.vhd:1529$1098 ($adff) from module b22 (D = { $flatten\P2.$auto$bmuxmap.cc:58:execute$2048 [31:29] $flatten\P2.$auto$bmuxmap.cc:58:execute$2001 [124:96] }, Q = \P2.datao).
Adding EN signal on $flatten\P2.$verific$addr_reg$b22.vhd:1529$1095 ($adff) from module b22 (D = $flatten\P2.$verific$n11253$889, Q = \P2.addr).
Adding EN signal on $flatten\P2.$verific$B_reg$b22.vhd:1529$1090 ($adff) from module b22 (D = $flatten\P2.$verific$n10986$716, Q = \P2.B).
Adding EN signal on $flatten\P1.$verific$reg3_reg$b22.vhd:509$588 ($adff) from module b22 (D = $flatten\P1.$verific$n11178$383 [31:3], Q = \P1.reg3 [31:3]).
Adding EN signal on $flatten\P1.$verific$reg3_reg$b22.vhd:509$588 ($adff) from module b22 (D = $flatten\P1.$auto$bmuxmap.cc:58:execute$2091 [2:0], Q = \P1.reg3 [2:0]).
Adding EN signal on $flatten\P1.$verific$reg2_reg$b22.vhd:509$587 ($adff) from module b22 (D = $flatten\P1.$auto$bmuxmap.cc:58:execute$2110, Q = \P1.reg2).
Adding EN signal on $flatten\P1.$verific$reg1_reg$b22.vhd:509$586 ($adff) from module b22 (D = $flatten\P1.$auto$bmuxmap.cc:58:execute$2129, Q = \P1.reg1).
Adding EN signal on $flatten\P1.$verific$reg0_reg$b22.vhd:509$585 ($adff) from module b22 (D = $flatten\P1.$auto$bmuxmap.cc:58:execute$2148, Q = \P1.reg0).
Adding EN signal on $flatten\P1.$verific$datao_reg$b22.vhd:509$592 ($adff) from module b22 (D = { $flatten\P1.$auto$bmuxmap.cc:58:execute$2254 [31:29] $flatten\P1.$auto$bmuxmap.cc:58:execute$2207 [124:96] }, Q = \P1.datao).
Adding EN signal on $flatten\P1.$verific$addr_reg$b22.vhd:509$589 ($adff) from module b22 (D = $flatten\P1.$verific$n11246$385, Q = \P1.addr).
Adding EN signal on $flatten\P1.$verific$B_reg$b22.vhd:509$584 ($adff) from module b22 (D = $flatten\P1.$verific$n10979$213, Q = \P1.B).

yosys> opt_clean

3.17.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 69 unused cells and 225 unused wires.
<suppressed ~70 debug messages>

yosys> opt_expr

3.17.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~3 debug messages>

3.17.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.17.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~72 debug messages>

yosys> opt_reduce

3.17.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.17.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
<suppressed ~111 debug messages>
Removed a total of 37 cells.

yosys> opt_dff -sat

3.17.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 2 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 3 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 4 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 5 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 6 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 7 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 8 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 9 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 10 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 11 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 12 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 13 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 14 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 15 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 16 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 17 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 18 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 19 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 20 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 21 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 22 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 23 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 24 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 25 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 26 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 27 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 28 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 29 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 30 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 31 on $flatten\P1.$verific$d_reg$b22.vhd:509$583 ($adff) from module b22.
Setting constant 0-bit at position 2 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 3 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 4 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 5 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 6 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 7 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 8 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 9 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 10 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 11 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 12 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 13 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 14 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 15 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 16 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 17 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 18 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 19 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 20 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 21 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 22 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 23 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 24 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 25 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 26 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 27 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 28 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 29 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 30 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 31 on $flatten\P2.$verific$d_reg$b22.vhd:1529$1089 ($adff) from module b22.
Setting constant 0-bit at position 2 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 3 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 4 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 5 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 6 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 7 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 8 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 9 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 10 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 11 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 12 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 13 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 14 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 15 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 16 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 17 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 18 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 19 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 20 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 21 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 22 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 23 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 24 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 25 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 26 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 27 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 28 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 29 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 30 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.
Setting constant 0-bit at position 31 on $flatten\P3.$verific$d_reg$b22.vhd:1019$1609 ($adff) from module b22.

yosys> opt_clean

3.17.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 37 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.17.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

3.17.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.17.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~72 debug messages>

yosys> opt_reduce

3.17.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.17.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.17.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.17.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..

yosys> opt_expr

3.17.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

3.17.23. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.18. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 22) from port A of cell b22.$verific$sub_4$b22.vhd:1596$59 ($sub).
Removed top 2 bits (of 22) from port B of cell b22.$verific$sub_4$b22.vhd:1596$59 ($sub).
Removed top 2 bits (of 22) from port Y of cell b22.$verific$sub_4$b22.vhd:1596$59 ($sub).
Removed top 1 bits (of 21) from port A of cell b22.$verific$sub_4$b22.vhd:1596$59 ($sub).
Removed top 1 bits (of 20) from port A of cell b22.$verific$LessThan_16$b22.vhd:1601$72 ($lt).
Removed top 1 bits (of 20) from port A of cell b22.$verific$LessThan_21$b22.vhd:1602$77 ($lt).
Removed top 1 bits (of 20) from port A of cell b22.$verific$LessThan_22$b22.vhd:1602$78 ($lt).
Removed top 1 bits (of 33) from port Y of cell b22.$verific$sub_34$b22.vhd:1605$85 ($sub).
Removed top 1 bits (of 33) from port A of cell b22.$verific$sub_34$b22.vhd:1605$85 ($sub).
Removed top 1 bits (of 33) from port B of cell b22.$verific$sub_34$b22.vhd:1605$85 ($sub).
Removed top 2 bits (of 4) from port B of cell b22.$auto$opt_dff.cc:195:make_patterns_logic$3243 ($ne).
Removed top 3 bits (of 4) from port B of cell b22.$auto$opt_dff.cc:195:make_patterns_logic$3245 ($ne).
Removed top 1 bits (of 2) from port B of cell b22.$auto$fsm_map.cc:215:map_fsm$2757 ($eq).
Removed top 4 bits (of 5) from port B of cell b22.$auto$opt_dff.cc:195:make_patterns_logic$3096 ($ne).
Removed top 1 bits (of 2) from port B of cell b22.$auto$fsm_map.cc:215:map_fsm$2319 ($eq).
Removed top 2 bits (of 4) from port B of cell b22.$auto$opt_dff.cc:195:make_patterns_logic$3100 ($ne).
Removed top 4 bits (of 5) from port B of cell b22.$auto$opt_dff.cc:195:make_patterns_logic$3113 ($ne).
Removed top 2 bits (of 4) from port B of cell b22.$auto$opt_dff.cc:195:make_patterns_logic$3117 ($ne).
Removed top 3 bits (of 4) from port B of cell b22.$auto$opt_dff.cc:195:make_patterns_logic$3119 ($ne).
Removed top 1 bits (of 8) from port B of cell b22.$auto$opt_dff.cc:195:make_patterns_logic$3187 ($ne).
Removed top 1 bits (of 7) from port B of cell b22.$auto$opt_dff.cc:195:make_patterns_logic$3189 ($ne).
Removed top 1 bits (of 6) from port B of cell b22.$auto$opt_dff.cc:195:make_patterns_logic$3191 ($ne).
Removed top 1 bits (of 21) from mux cell b22.$flatten\P3.$auto$bmuxmap.cc:60:execute$1627 ($mux).
Removed top 4 bits (of 5) from port B of cell b22.$auto$opt_dff.cc:195:make_patterns_logic$3239 ($ne).
Removed top 3 bits (of 29) from FF cell b22.$auto$ff.cc:262:slice$3076 ($adffe).
Removed top 1 bits (of 32) from port A of cell b22.$flatten\P3.$verific$LessThan_14$b22.vhd:597$1414 ($lt).
Removed top 1 bits (of 32) from port B of cell b22.$flatten\P3.$verific$LessThan_81$b22.vhd:662$1474 ($lt).
Removed top 3 bits (of 5) from port Y of cell b22.$flatten\P3.$verific$add_21$b22.vhd:600$1421 ($add).
Removed top 3 bits (of 5) from port A of cell b22.$flatten\P3.$verific$add_21$b22.vhd:600$1421 ($add).
Removed top 5 bits (of 8) from port Y of cell b22.$flatten\P3.$verific$add_26$b22.vhd:602$1428 ($add).
Removed top 5 bits (of 8) from port A of cell b22.$flatten\P3.$verific$add_26$b22.vhd:602$1428 ($add).
Removed top 9 bits (of 13) from port Y of cell b22.$flatten\P3.$verific$add_31$b22.vhd:604$1435 ($add).
Removed top 9 bits (of 13) from port A of cell b22.$flatten\P3.$verific$add_31$b22.vhd:604$1435 ($add).
Removed top 2 bits (of 32) from port Y of cell b22.$flatten\P3.$verific$add_331$b22.vhd:872$1521 ($add).
Removed top 2 bits (of 32) from port A of cell b22.$flatten\P3.$verific$add_331$b22.vhd:872$1521 ($add).
Removed top 2 bits (of 32) from port B of cell b22.$flatten\P3.$verific$add_331$b22.vhd:872$1521 ($add).
Removed top 8 bits (of 9) from port Y of cell b22.$flatten\P3.$verific$add_36$b22.vhd:606$1442 ($add).
Removed top 8 bits (of 9) from port A of cell b22.$flatten\P3.$verific$add_36$b22.vhd:606$1442 ($add).
Removed top 1 bits (of 3) from port Y of cell b22.$flatten\P3.$verific$add_44$b22.vhd:610$1452 ($add).
Removed top 1 bits (of 3) from port A of cell b22.$flatten\P3.$verific$add_44$b22.vhd:610$1452 ($add).
Removed top 2 bits (of 4) from port B of cell b22.$auto$opt_dff.cc:195:make_patterns_logic$3262 ($ne).
Removed top 4 bits (of 5) from port B of cell b22.$auto$opt_dff.cc:195:make_patterns_logic$3258 ($ne).
Removed top 1 bits (of 3) from port A of cell b22.$flatten\P3.$verific$equal_139$b22.vhd:735$1496 ($eq).
Removed top 1 bits (of 3) from port A of cell b22.$flatten\P3.$verific$equal_140$b22.vhd:737$1497 ($eq).
Removed top 2 bits (of 3) from port A of cell b22.$flatten\P3.$verific$equal_141$b22.vhd:738$1498 ($eq).
Removed top 31 bits (of 32) from port A of cell b22.$flatten\P3.$verific$equal_169$b22.vhd:758$1509 ($eq).
Removed top 30 bits (of 32) from port A of cell b22.$flatten\P3.$verific$equal_170$b22.vhd:759$1510 ($eq).
Removed top 30 bits (of 32) from port A of cell b22.$flatten\P3.$verific$equal_171$b22.vhd:760$1511 ($eq).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P3.$verific$mux_136$b22.vhd:730$1493 ($mux).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P3.$verific$mux_138$b22.vhd:734$1495 ($mux).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P3.$verific$mux_143$b22.vhd:740$1500 ($mux).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P3.$verific$mux_144$b22.vhd:740$1501 ($mux).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P3.$verific$mux_145$b22.vhd:740$1502 ($mux).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P3.$verific$mux_146$b22.vhd:740$1503 ($mux).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P3.$verific$mux_147$b22.vhd:740$1504 ($mux).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P3.$verific$mux_148$b22.vhd:740$1505 ($mux).
Removed top 3 bits (of 33) from port Y of cell b22.$flatten\P3.$verific$sub_297$b22.vhd:852$1519 ($sub).
Removed top 3 bits (of 33) from port A of cell b22.$flatten\P3.$verific$sub_297$b22.vhd:852$1519 ($sub).
Removed top 3 bits (of 33) from port B of cell b22.$flatten\P3.$verific$sub_297$b22.vhd:852$1519 ($sub).
Removed top 1 bits (of 30) from port A of cell b22.$flatten\P3.$verific$sub_39$b22.vhd:609$1448 ($sub).
Removed top 26 bits (of 30) from port B of cell b22.$flatten\P3.$verific$sub_39$b22.vhd:609$1448 ($sub).
Removed top 13 bits (of 33) from port A of cell b22.$flatten\P3.$verific$sub_55$b22.vhd:624$1460 ($sub).
Removed top 13 bits (of 33) from port Y of cell b22.$flatten\P3.$verific$sub_55$b22.vhd:624$1460 ($sub).
Removed top 13 bits (of 33) from port B of cell b22.$flatten\P3.$verific$sub_55$b22.vhd:624$1460 ($sub).
Removed top 13 bits (of 33) from port A of cell b22.$flatten\P3.$verific$sub_59$b22.vhd:627$1462 ($sub).
Removed top 13 bits (of 33) from port Y of cell b22.$flatten\P3.$verific$sub_59$b22.vhd:627$1462 ($sub).
Removed top 13 bits (of 33) from port B of cell b22.$flatten\P3.$verific$sub_59$b22.vhd:627$1462 ($sub).
Removed top 1 bits (of 21) from port A of cell b22.$flatten\P3.$verific$sub_632$b22.vhd:1007$1560 ($sub).
Removed top 1 bits (of 21) from port B of cell b22.$flatten\P3.$verific$sub_632$b22.vhd:1007$1560 ($sub).
Removed top 1 bits (of 21) from port A of cell b22.$flatten\P3.$verific$sub_634$b22.vhd:1008$1563 ($sub).
Removed top 1 bits (of 21) from port B of cell b22.$flatten\P3.$verific$sub_634$b22.vhd:1008$1563 ($sub).
Removed top 2 bits (of 33) from port B of cell b22.$flatten\P3.$verific$sub_82$b22.vhd:663$1475 ($sub).
Removed top 1 bits (of 33) from port Y of cell b22.$flatten\P3.$verific$sub_82$b22.vhd:663$1475 ($sub).
Removed top 1 bits (of 33) from port A of cell b22.$flatten\P3.$verific$sub_82$b22.vhd:663$1475 ($sub).
Removed top 1 bits (of 33) from port Y of cell b22.$flatten\P3.$verific$unary_minus_15$b22.vhd:598$1415 ($neg).
Removed top 1 bits (of 33) from port A of cell b22.$flatten\P3.$verific$unary_minus_15$b22.vhd:598$1415 ($neg).
Removed top 1 bits (of 8) from port B of cell b22.$auto$opt_dff.cc:195:make_patterns_logic$3061 ($ne).
Removed top 1 bits (of 7) from port B of cell b22.$auto$opt_dff.cc:195:make_patterns_logic$3063 ($ne).
Removed top 1 bits (of 6) from port B of cell b22.$auto$opt_dff.cc:195:make_patterns_logic$3065 ($ne).
Removed top 1 bits (of 5) from port B of cell b22.$auto$opt_dff.cc:195:make_patterns_logic$3067 ($ne).
Removed top 1 bits (of 4) from port B of cell b22.$auto$opt_dff.cc:195:make_patterns_logic$3069 ($ne).
Removed top 3 bits (of 4) from port B of cell b22.$auto$opt_dff.cc:195:make_patterns_logic$2996 ($ne).
Removed top 1 bits (of 2) from port B of cell b22.$auto$opt_dff.cc:195:make_patterns_logic$3073 ($ne).
Removed top 3 bits (of 32) from FF cell b22.$auto$ff.cc:262:slice$2972 ($adffe).
Removed top 1 bits (of 21) from mux cell b22.$flatten\P2.$auto$bmuxmap.cc:60:execute$1843 ($mux).
Removed top 2 bits (of 32) from mux cell b22.$flatten\P2.$auto$bmuxmap.cc:60:execute$1873 ($mux).
Removed top 2 bits (of 32) from mux cell b22.$flatten\P2.$auto$bmuxmap.cc:60:execute$1879 ($mux).
Removed top 3 bits (of 29) from FF cell b22.$auto$ff.cc:262:slice$3202 ($adffe).
Removed top 1 bits (of 32) from port A of cell b22.$flatten\P2.$verific$LessThan_14$b22.vhd:1107$909 ($lt).
Removed top 1 bits (of 32) from port B of cell b22.$flatten\P2.$verific$LessThan_83$b22.vhd:1172$969 ($lt).
Removed top 3 bits (of 5) from port Y of cell b22.$flatten\P2.$verific$add_21$b22.vhd:1110$916 ($add).
Removed top 3 bits (of 5) from port A of cell b22.$flatten\P2.$verific$add_21$b22.vhd:1110$916 ($add).
Removed top 5 bits (of 8) from port Y of cell b22.$flatten\P2.$verific$add_26$b22.vhd:1112$923 ($add).
Removed top 5 bits (of 8) from port A of cell b22.$flatten\P2.$verific$add_26$b22.vhd:1112$923 ($add).
Removed top 2 bits (of 32) from port Y of cell b22.$flatten\P2.$verific$add_283$b22.vhd:1342$1012 ($add).
Removed top 2 bits (of 32) from port A of cell b22.$flatten\P2.$verific$add_283$b22.vhd:1342$1012 ($add).
Removed top 2 bits (of 32) from port B of cell b22.$flatten\P2.$verific$add_283$b22.vhd:1342$1012 ($add).
Removed top 9 bits (of 13) from port Y of cell b22.$flatten\P2.$verific$add_31$b22.vhd:1114$930 ($add).
Removed top 9 bits (of 13) from port A of cell b22.$flatten\P2.$verific$add_31$b22.vhd:1114$930 ($add).
Removed top 1 bits (of 4) from port B of cell b22.$auto$opt_dff.cc:195:make_patterns_logic$3321 ($ne).
Removed top 8 bits (of 9) from port Y of cell b22.$flatten\P2.$verific$add_36$b22.vhd:1116$937 ($add).
Removed top 8 bits (of 9) from port A of cell b22.$flatten\P2.$verific$add_36$b22.vhd:1116$937 ($add).
Removed top 25 bits (of 26) from port B of cell b22.$flatten\P2.$verific$add_39$b22.vhd:1119$943 ($add).
Removed top 1 bits (of 3) from port Y of cell b22.$flatten\P2.$verific$add_44$b22.vhd:1120$947 ($add).
Removed top 1 bits (of 3) from port A of cell b22.$flatten\P2.$verific$add_44$b22.vhd:1120$947 ($add).
Removed top 1 bits (of 5) from port B of cell b22.$auto$opt_dff.cc:195:make_patterns_logic$3319 ($ne).
Removed top 12 bits (of 32) from port A of cell b22.$flatten\P2.$verific$add_56$b22.vhd:1134$955 ($add).
Removed top 12 bits (of 32) from port Y of cell b22.$flatten\P2.$verific$add_56$b22.vhd:1134$955 ($add).
Removed top 12 bits (of 32) from port B of cell b22.$flatten\P2.$verific$add_56$b22.vhd:1134$955 ($add).
Removed top 12 bits (of 32) from port A of cell b22.$flatten\P2.$verific$add_61$b22.vhd:1137$957 ($add).
Removed top 12 bits (of 32) from port Y of cell b22.$flatten\P2.$verific$add_61$b22.vhd:1137$957 ($add).
Removed top 12 bits (of 32) from port B of cell b22.$flatten\P2.$verific$add_61$b22.vhd:1137$957 ($add).
Removed top 1 bits (of 6) from port B of cell b22.$auto$opt_dff.cc:195:make_patterns_logic$3317 ($ne).
Removed top 1 bits (of 7) from port B of cell b22.$auto$opt_dff.cc:195:make_patterns_logic$3315 ($ne).
Removed top 1 bits (of 8) from port B of cell b22.$auto$opt_dff.cc:195:make_patterns_logic$3313 ($ne).
Removed top 1 bits (of 3) from port A of cell b22.$flatten\P2.$verific$equal_141$b22.vhd:1245$991 ($eq).
Removed top 1 bits (of 3) from port A of cell b22.$flatten\P2.$verific$equal_142$b22.vhd:1247$992 ($eq).
Removed top 2 bits (of 3) from port A of cell b22.$flatten\P2.$verific$equal_143$b22.vhd:1248$993 ($eq).
Removed top 31 bits (of 32) from port A of cell b22.$flatten\P2.$verific$equal_177$b22.vhd:1268$1004 ($eq).
Removed top 30 bits (of 32) from port A of cell b22.$flatten\P2.$verific$equal_178$b22.vhd:1269$1005 ($eq).
Removed top 30 bits (of 32) from port A of cell b22.$flatten\P2.$verific$equal_179$b22.vhd:1270$1006 ($eq).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P2.$verific$mux_138$b22.vhd:1240$988 ($mux).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P2.$verific$mux_140$b22.vhd:1244$990 ($mux).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P2.$verific$mux_145$b22.vhd:1250$995 ($mux).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P2.$verific$mux_146$b22.vhd:1250$996 ($mux).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P2.$verific$mux_147$b22.vhd:1250$997 ($mux).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P2.$verific$mux_148$b22.vhd:1250$998 ($mux).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P2.$verific$mux_149$b22.vhd:1250$999 ($mux).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P2.$verific$mux_150$b22.vhd:1250$1000 ($mux).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P2.$verific$mux_697$b22.vhd:1526$1072 ($mux).
Removed top 32 bits (of 33) from port A of cell b22.$flatten\P2.$verific$sub_168$b22.vhd:1267$1001 ($sub).
Removed top 1 bits (of 33) from port Y of cell b22.$flatten\P2.$verific$sub_168$b22.vhd:1267$1001 ($sub).
Removed top 1 bits (of 33) from port B of cell b22.$flatten\P2.$verific$sub_168$b22.vhd:1267$1001 ($sub).
Removed top 3 bits (of 33) from port Y of cell b22.$flatten\P2.$verific$sub_365$b22.vhd:1382$1014 ($sub).
Removed top 3 bits (of 33) from port A of cell b22.$flatten\P2.$verific$sub_365$b22.vhd:1382$1014 ($sub).
Removed top 3 bits (of 33) from port B of cell b22.$flatten\P2.$verific$sub_365$b22.vhd:1382$1014 ($sub).
Removed top 2 bits (of 33) from port B of cell b22.$flatten\P2.$verific$sub_84$b22.vhd:1173$970 ($sub).
Removed top 1 bits (of 33) from port Y of cell b22.$flatten\P2.$verific$sub_84$b22.vhd:1173$970 ($sub).
Removed top 1 bits (of 33) from port A of cell b22.$flatten\P2.$verific$sub_84$b22.vhd:1173$970 ($sub).
Removed top 1 bits (of 33) from port Y of cell b22.$flatten\P2.$verific$unary_minus_15$b22.vhd:1108$910 ($neg).
Removed top 1 bits (of 33) from port A of cell b22.$flatten\P2.$verific$unary_minus_15$b22.vhd:1108$910 ($neg).
Removed top 1 bits (of 2) from port B of cell b22.$auto$fsm_map.cc:215:map_fsm$2538 ($eq).
Removed top 20 bits (of 21) from mux cell b22.$flatten\P1.$auto$bmuxmap.cc:60:execute$2054 ($mux).
Removed top 2 bits (of 32) from mux cell b22.$flatten\P1.$auto$bmuxmap.cc:60:execute$2079 ($mux).
Removed top 2 bits (of 32) from mux cell b22.$flatten\P1.$auto$bmuxmap.cc:60:execute$2085 ($mux).
Removed top 1 bits (of 2) from port B of cell b22.$auto$opt_dff.cc:195:make_patterns_logic$3199 ($ne).
Removed top 1 bits (of 32) from port A of cell b22.$flatten\P1.$verific$LessThan_14$b22.vhd:87$405 ($lt).
Removed top 1 bits (of 32) from port B of cell b22.$flatten\P1.$verific$LessThan_83$b22.vhd:152$465 ($lt).
Removed top 3 bits (of 5) from port Y of cell b22.$flatten\P1.$verific$add_21$b22.vhd:90$412 ($add).
Removed top 3 bits (of 5) from port A of cell b22.$flatten\P1.$verific$add_21$b22.vhd:90$412 ($add).
Removed top 5 bits (of 8) from port Y of cell b22.$flatten\P1.$verific$add_26$b22.vhd:92$419 ($add).
Removed top 5 bits (of 8) from port A of cell b22.$flatten\P1.$verific$add_26$b22.vhd:92$419 ($add).
Removed top 2 bits (of 32) from port Y of cell b22.$flatten\P1.$verific$add_283$b22.vhd:322$508 ($add).
Removed top 2 bits (of 32) from port A of cell b22.$flatten\P1.$verific$add_283$b22.vhd:322$508 ($add).
Removed top 2 bits (of 32) from port B of cell b22.$flatten\P1.$verific$add_283$b22.vhd:322$508 ($add).
Removed top 9 bits (of 13) from port Y of cell b22.$flatten\P1.$verific$add_31$b22.vhd:94$426 ($add).
Removed top 9 bits (of 13) from port A of cell b22.$flatten\P1.$verific$add_31$b22.vhd:94$426 ($add).
Removed top 8 bits (of 9) from port Y of cell b22.$flatten\P1.$verific$add_36$b22.vhd:96$433 ($add).
Removed top 8 bits (of 9) from port A of cell b22.$flatten\P1.$verific$add_36$b22.vhd:96$433 ($add).
Removed top 25 bits (of 26) from port B of cell b22.$flatten\P1.$verific$add_39$b22.vhd:99$439 ($add).
Removed top 1 bits (of 3) from port Y of cell b22.$flatten\P1.$verific$add_44$b22.vhd:100$443 ($add).
Removed top 1 bits (of 3) from port A of cell b22.$flatten\P1.$verific$add_44$b22.vhd:100$443 ($add).
Removed top 12 bits (of 32) from port A of cell b22.$flatten\P1.$verific$add_56$b22.vhd:114$451 ($add).
Removed top 12 bits (of 32) from port Y of cell b22.$flatten\P1.$verific$add_56$b22.vhd:114$451 ($add).
Removed top 12 bits (of 32) from port B of cell b22.$flatten\P1.$verific$add_56$b22.vhd:114$451 ($add).
Removed top 12 bits (of 32) from port A of cell b22.$flatten\P1.$verific$add_61$b22.vhd:117$453 ($add).
Removed top 12 bits (of 32) from port Y of cell b22.$flatten\P1.$verific$add_61$b22.vhd:117$453 ($add).
Removed top 12 bits (of 32) from port B of cell b22.$flatten\P1.$verific$add_61$b22.vhd:117$453 ($add).
Removed top 1 bits (of 3) from port A of cell b22.$flatten\P1.$verific$equal_141$b22.vhd:225$487 ($eq).
Removed top 1 bits (of 3) from port A of cell b22.$flatten\P1.$verific$equal_142$b22.vhd:227$488 ($eq).
Removed top 2 bits (of 3) from port A of cell b22.$flatten\P1.$verific$equal_143$b22.vhd:228$489 ($eq).
Removed top 31 bits (of 32) from port A of cell b22.$flatten\P1.$verific$equal_177$b22.vhd:248$500 ($eq).
Removed top 30 bits (of 32) from port A of cell b22.$flatten\P1.$verific$equal_178$b22.vhd:249$501 ($eq).
Removed top 30 bits (of 32) from port A of cell b22.$flatten\P1.$verific$equal_179$b22.vhd:250$502 ($eq).
Removed top 1 bits (of 2) from port B of cell b22.$auto$opt_dff.cc:195:make_patterns_logic$3325 ($ne).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P1.$verific$mux_138$b22.vhd:220$484 ($mux).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P1.$verific$mux_140$b22.vhd:224$486 ($mux).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P1.$verific$mux_145$b22.vhd:230$491 ($mux).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P1.$verific$mux_146$b22.vhd:230$492 ($mux).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P1.$verific$mux_147$b22.vhd:230$493 ($mux).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P1.$verific$mux_148$b22.vhd:230$494 ($mux).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P1.$verific$mux_149$b22.vhd:230$495 ($mux).
Removed top 30 bits (of 32) from mux cell b22.$flatten\P1.$verific$mux_150$b22.vhd:230$496 ($mux).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P1.$verific$mux_698$b22.vhd:506$566 ($mux).
Removed top 1 bits (of 4) from port B of cell b22.$auto$opt_dff.cc:195:make_patterns_logic$3195 ($ne).
Removed top 32 bits (of 33) from port A of cell b22.$flatten\P1.$verific$sub_168$b22.vhd:247$497 ($sub).
Removed top 1 bits (of 33) from port Y of cell b22.$flatten\P1.$verific$sub_168$b22.vhd:247$497 ($sub).
Removed top 1 bits (of 33) from port B of cell b22.$flatten\P1.$verific$sub_168$b22.vhd:247$497 ($sub).
Removed top 3 bits (of 33) from port Y of cell b22.$flatten\P1.$verific$sub_365$b22.vhd:362$510 ($sub).
Removed top 3 bits (of 33) from port A of cell b22.$flatten\P1.$verific$sub_365$b22.vhd:362$510 ($sub).
Removed top 3 bits (of 33) from port B of cell b22.$flatten\P1.$verific$sub_365$b22.vhd:362$510 ($sub).
Removed top 2 bits (of 33) from port B of cell b22.$flatten\P1.$verific$sub_84$b22.vhd:153$466 ($sub).
Removed top 1 bits (of 33) from port Y of cell b22.$flatten\P1.$verific$sub_84$b22.vhd:153$466 ($sub).
Removed top 1 bits (of 33) from port A of cell b22.$flatten\P1.$verific$sub_84$b22.vhd:153$466 ($sub).
Removed top 1 bits (of 5) from port B of cell b22.$auto$opt_dff.cc:195:make_patterns_logic$3193 ($ne).
Removed top 1 bits (of 33) from port Y of cell b22.$flatten\P1.$verific$unary_minus_15$b22.vhd:88$406 ($neg).
Removed top 1 bits (of 33) from port A of cell b22.$flatten\P1.$verific$unary_minus_15$b22.vhd:88$406 ($neg).
Removed top 1 bits (of 21) from port Y of cell b22.$verific$add_3$b22.vhd:1596$58 ($add).
Removed top 1 bits (of 21) from mux cell b22.$flatten\P3.$auto$bmuxmap.cc:60:execute$1624 ($mux).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P3.$verific$mux_667$b22.vhd:1016$1592 ($mux).
Removed top 1 bits (of 21) from mux cell b22.$flatten\P2.$auto$bmuxmap.cc:60:execute$1841 ($mux).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P2.$verific$mux_678$b22.vhd:1525$1058 ($mux).
Removed top 20 bits (of 21) from mux cell b22.$flatten\P1.$auto$bmuxmap.cc:60:execute$2052 ($mux).
Removed top 20 bits (of 21) from port Y of cell b22.$flatten\P1.$verific$add_662$b22.vhd:497$535 ($add).
Removed top 19 bits (of 20) from port A of cell b22.$flatten\P1.$verific$add_662$b22.vhd:497$535 ($add).
Removed top 19 bits (of 20) from port B of cell b22.$flatten\P1.$verific$add_662$b22.vhd:497$535 ($add).
Removed top 20 bits (of 21) from port Y of cell b22.$flatten\P1.$verific$add_664$b22.vhd:498$537 ($add).
Removed top 19 bits (of 20) from port A of cell b22.$flatten\P1.$verific$add_664$b22.vhd:498$537 ($add).
Removed top 19 bits (of 20) from port B of cell b22.$flatten\P1.$verific$add_664$b22.vhd:498$537 ($add).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P1.$verific$mux_679$b22.vhd:505$552 ($mux).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P3.$verific$mux_648$b22.vhd:1015$1578 ($mux).
Removed top 1 bits (of 21) from port Y of cell b22.$flatten\P3.$verific$sub_632$b22.vhd:1007$1560 ($sub).
Removed top 1 bits (of 21) from port Y of cell b22.$flatten\P3.$verific$sub_634$b22.vhd:1008$1563 ($sub).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P2.$auto$bmuxmap.cc:60:execute$1886 ($mux).
Removed top 1 bits (of 21) from port Y of cell b22.$flatten\P2.$verific$add_662$b22.vhd:1517$1040 ($add).
Removed top 1 bits (of 21) from port Y of cell b22.$flatten\P2.$verific$add_664$b22.vhd:1518$1043 ($add).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P1.$auto$bmuxmap.cc:60:execute$2092 ($mux).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P3.$auto$bmuxmap.cc:60:execute$1670 ($mux).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P2.$auto$bmuxmap.cc:60:execute$1883 ($mux).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P2.$auto$bmuxmap.cc:60:execute$1884 ($mux).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P1.$auto$bmuxmap.cc:60:execute$2089 ($mux).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P1.$auto$bmuxmap.cc:60:execute$2090 ($mux).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P3.$auto$bmuxmap.cc:60:execute$1667 ($mux).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P3.$auto$bmuxmap.cc:60:execute$1668 ($mux).
Removed top 1 bits (of 30) from mux cell b22.$flatten\P2.$auto$bmuxmap.cc:60:execute$1873 ($mux).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P2.$auto$bmuxmap.cc:60:execute$1878 ($mux).
Removed top 1 bits (of 30) from mux cell b22.$flatten\P2.$auto$bmuxmap.cc:60:execute$1879 ($mux).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P2.$auto$bmuxmap.cc:60:execute$1881 ($mux).
Removed top 1 bits (of 30) from mux cell b22.$flatten\P1.$auto$bmuxmap.cc:60:execute$2079 ($mux).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P1.$auto$bmuxmap.cc:60:execute$2084 ($mux).
Removed top 1 bits (of 30) from mux cell b22.$flatten\P1.$auto$bmuxmap.cc:60:execute$2085 ($mux).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P1.$auto$bmuxmap.cc:60:execute$2087 ($mux).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P3.$auto$bmuxmap.cc:60:execute$1662 ($mux).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P3.$auto$bmuxmap.cc:60:execute$1663 ($mux).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P3.$auto$bmuxmap.cc:60:execute$1664 ($mux).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P3.$auto$bmuxmap.cc:60:execute$1665 ($mux).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P2.$auto$bmuxmap.cc:60:execute$1869 ($mux).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P2.$auto$bmuxmap.cc:60:execute$1875 ($mux).
Removed top 2 bits (of 155) from mux cell b22.$flatten\P2.$verific$select_752$b22.vhd:1510$1030 ($pmux).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P1.$auto$bmuxmap.cc:60:execute$2075 ($mux).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P1.$auto$bmuxmap.cc:60:execute$2081 ($mux).
Removed top 2 bits (of 155) from mux cell b22.$flatten\P1.$verific$select_752$b22.vhd:490$526 ($pmux).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P3.$auto$bmuxmap.cc:60:execute$1653 ($mux).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P3.$auto$bmuxmap.cc:60:execute$1657 ($mux).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P3.$auto$bmuxmap.cc:60:execute$1658 ($mux).
Removed top 3 bits (of 32) from mux cell b22.$flatten\P3.$auto$bmuxmap.cc:60:execute$1659 ($mux).
Removed top 2 bits (of 31) from mux cell b22.$flatten\P3.$verific$select_497$b22.vhd:957$1530 ($pmux).
Removed top 2 bits (of 31) from mux cell b22.$flatten\P3.$verific$select_537$b22.vhd:977$1536 ($pmux).
Removed top 2 bits (of 31) from mux cell b22.$flatten\P3.$verific$select_620$b22.vhd:1000$1550 ($pmux).
Removed top 2 bits (of 94) from mux cell b22.$flatten\P3.$verific$select_720$b22.vhd:877$1526 ($pmux).
Removed top 20 bits (of 42) from wire b22.$flatten\P1.$auto$bmuxmap.cc:58:execute$2050.
Removed top 2 bits (of 256) from wire b22.$flatten\P1.$auto$bmuxmap.cc:58:execute$2074.
Removed top 3 bits (of 128) from wire b22.$flatten\P1.$auto$bmuxmap.cc:58:execute$2083.
Removed top 3 bits (of 64) from wire b22.$flatten\P1.$auto$bmuxmap.cc:58:execute$2088.
Removed top 3 bits (of 32) from wire b22.$flatten\P1.$auto$bmuxmap.cc:58:execute$2091.
Removed top 2 bits (of 8) from wire b22.$flatten\P1.$auto$bmuxmap.cc:58:execute$2169.
Removed top 1 bits (of 126) from wire b22.$flatten\P1.$auto$bmuxmap.cc:58:execute$2207.
Removed top 1 bits (of 2) from wire b22.$flatten\P1.$auto$bmuxmap.cc:58:execute$2236.
Removed top 2 bits (of 31) from wire b22.$flatten\P1.$verific$n10126$352.
Removed top 19 bits (of 20) from wire b22.$flatten\P1.$verific$n10390$359.
Removed top 19 bits (of 20) from wire b22.$flatten\P1.$verific$n10434$361.
Removed top 3 bits (of 32) from wire b22.$flatten\P1.$verific$n10755$374.
Removed top 3 bits (of 32) from wire b22.$flatten\P1.$verific$n11178$383.
Removed top 30 bits (of 32) from wire b22.$flatten\P1.$verific$n11472$388.
Removed top 30 bits (of 32) from wire b22.$flatten\P1.$verific$n1407$256.
Removed top 30 bits (of 32) from wire b22.$flatten\P1.$verific$n1441$257.
Removed top 30 bits (of 32) from wire b22.$flatten\P1.$verific$n1478$258.
Removed top 30 bits (of 32) from wire b22.$flatten\P1.$verific$n1511$259.
Removed top 30 bits (of 32) from wire b22.$flatten\P1.$verific$n1544$260.
Removed top 30 bits (of 32) from wire b22.$flatten\P1.$verific$n1577$261.
Removed top 30 bits (of 32) from wire b22.$flatten\P1.$verific$n1610$262.
Removed top 30 bits (of 32) from wire b22.$flatten\P1.$verific$n1643$263.
Removed top 1 bits (of 33) from wire b22.$flatten\P1.$verific$n184$225.
Removed top 1 bits (of 33) from wire b22.$flatten\P1.$verific$n1987$269.
Removed top 3 bits (of 5) from wire b22.$flatten\P1.$verific$n288$228.
Removed top 5 bits (of 8) from wire b22.$flatten\P1.$verific$n301$230.
Removed top 9 bits (of 13) from wire b22.$flatten\P1.$verific$n318$232.
Removed top 8 bits (of 9) from wire b22.$flatten\P1.$verific$n341$234.
Removed top 2 bits (of 32) from wire b22.$flatten\P1.$verific$n4241$302.
Removed top 1 bits (of 3) from wire b22.$flatten\P1.$verific$n436$238.
Removed top 3 bits (of 33) from wire b22.$flatten\P1.$verific$n5666$316.
Removed top 1 bits (of 33) from wire b22.$flatten\P1.$verific$n933$253.
Removed top 1 bits (of 42) from wire b22.$flatten\P2.$auto$bmuxmap.cc:58:execute$1839.
Removed top 1 bits (of 21) from wire b22.$flatten\P2.$auto$bmuxmap.cc:58:execute$1842.
Removed top 1 bits (of 8) from wire b22.$flatten\P2.$auto$bmuxmap.cc:58:execute$1849.
Removed top 2 bits (of 256) from wire b22.$flatten\P2.$auto$bmuxmap.cc:58:execute$1868.
Removed top 3 bits (of 128) from wire b22.$flatten\P2.$auto$bmuxmap.cc:58:execute$1877.
Removed top 3 bits (of 64) from wire b22.$flatten\P2.$auto$bmuxmap.cc:58:execute$1882.
Removed top 3 bits (of 32) from wire b22.$flatten\P2.$auto$bmuxmap.cc:58:execute$1885.
Removed top 2 bits (of 8) from wire b22.$flatten\P2.$auto$bmuxmap.cc:58:execute$1963.
Removed top 1 bits (of 126) from wire b22.$flatten\P2.$auto$bmuxmap.cc:58:execute$2001.
Removed top 1 bits (of 2) from wire b22.$flatten\P2.$auto$bmuxmap.cc:58:execute$2030.
Removed top 2 bits (of 31) from wire b22.$flatten\P2.$verific$n10126$855.
Removed top 3 bits (of 32) from wire b22.$flatten\P2.$verific$n10762$878.
Removed top 3 bits (of 32) from wire b22.$flatten\P2.$verific$n11185$887.
Removed top 30 bits (of 32) from wire b22.$flatten\P2.$verific$n11479$892.
Removed top 30 bits (of 32) from wire b22.$flatten\P2.$verific$n1407$759.
Removed top 30 bits (of 32) from wire b22.$flatten\P2.$verific$n1441$760.
Removed top 30 bits (of 32) from wire b22.$flatten\P2.$verific$n1478$761.
Removed top 30 bits (of 32) from wire b22.$flatten\P2.$verific$n1511$762.
Removed top 30 bits (of 32) from wire b22.$flatten\P2.$verific$n1544$763.
Removed top 30 bits (of 32) from wire b22.$flatten\P2.$verific$n1577$764.
Removed top 30 bits (of 32) from wire b22.$flatten\P2.$verific$n1610$765.
Removed top 3 bits (of 5) from wire b22.$flatten\P2.$verific$n288$731.
Removed top 5 bits (of 8) from wire b22.$flatten\P2.$verific$n301$733.
Removed top 9 bits (of 13) from wire b22.$flatten\P2.$verific$n318$735.
Removed top 8 bits (of 9) from wire b22.$flatten\P2.$verific$n341$737.
Removed top 2 bits (of 32) from wire b22.$flatten\P2.$verific$n4241$805.
Removed top 1 bits (of 3) from wire b22.$flatten\P2.$verific$n436$741.
Removed top 1 bits (of 42) from wire b22.$flatten\P3.$auto$bmuxmap.cc:58:execute$1623.
Removed top 1 bits (of 21) from wire b22.$flatten\P3.$auto$bmuxmap.cc:58:execute$1626.
Removed top 3 bits (of 128) from wire b22.$flatten\P3.$auto$bmuxmap.cc:58:execute$1661.
Removed top 3 bits (of 64) from wire b22.$flatten\P3.$auto$bmuxmap.cc:58:execute$1666.
Removed top 3 bits (of 32) from wire b22.$flatten\P3.$auto$bmuxmap.cc:58:execute$1669.
Removed top 2 bits (of 8) from wire b22.$flatten\P3.$auto$bmuxmap.cc:58:execute$1747.
Removed top 1 bits (of 2) from wire b22.$flatten\P3.$auto$bmuxmap.cc:58:execute$1819.
Removed top 3 bits (of 32) from wire b22.$flatten\P3.$verific$n10611$1383.
Removed top 3 bits (of 32) from wire b22.$flatten\P3.$verific$n11034$1392.
Removed top 30 bits (of 32) from wire b22.$flatten\P3.$verific$n11328$1397.
Removed top 30 bits (of 32) from wire b22.$flatten\P3.$verific$n1408$1262.
Removed top 30 bits (of 32) from wire b22.$flatten\P3.$verific$n1442$1263.
Removed top 30 bits (of 32) from wire b22.$flatten\P3.$verific$n1479$1264.
Removed top 30 bits (of 32) from wire b22.$flatten\P3.$verific$n1512$1265.
Removed top 30 bits (of 32) from wire b22.$flatten\P3.$verific$n1578$1267.
Removed top 1 bits (of 33) from wire b22.$flatten\P3.$verific$n184$1231.
Removed top 3 bits (of 5) from wire b22.$flatten\P3.$verific$n288$1234.
Removed top 5 bits (of 8) from wire b22.$flatten\P3.$verific$n301$1236.
Removed top 9 bits (of 13) from wire b22.$flatten\P3.$verific$n318$1238.
Removed top 8 bits (of 9) from wire b22.$flatten\P3.$verific$n341$1240.
Removed top 1 bits (of 3) from wire b22.$flatten\P3.$verific$n439$1244.
Removed top 3 bits (of 33) from wire b22.$flatten\P3.$verific$n4798$1306.
Removed top 2 bits (of 32) from wire b22.$flatten\P3.$verific$n5506$1316.
Removed top 2 bits (of 31) from wire b22.$flatten\P3.$verific$n8711$1341.
Removed top 1 bits (of 33) from wire b22.$flatten\P3.$verific$n934$1259.
Removed top 2 bits (of 31) from wire b22.$flatten\P3.$verific$n9424$1349.
Removed top 2 bits (of 31) from wire b22.$flatten\P3.$verific$n9975$1360.
Removed top 1 bits (of 33) from wire b22.$verific$n459$29.

yosys> peepopt

3.19. Executing PEEPOPT pass (run peephole optimizers).

yosys> opt_clean

3.20. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 131 unused wires.
<suppressed ~1 debug messages>

yosys> bmuxmap

3.21. Executing BMUXMAP pass.

yosys> demuxmap

3.22. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> alumacc

3.23. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module b22:
  creating $macc model for $flatten\P1.$verific$add_21$b22.vhd:90$412 ($add).
  creating $macc model for $flatten\P1.$verific$add_26$b22.vhd:92$419 ($add).
  creating $macc model for $flatten\P1.$verific$add_283$b22.vhd:322$508 ($add).
  creating $macc model for $flatten\P1.$verific$add_31$b22.vhd:94$426 ($add).
  creating $macc model for $flatten\P1.$verific$add_36$b22.vhd:96$433 ($add).
  creating $macc model for $flatten\P1.$verific$add_39$b22.vhd:99$439 ($add).
  creating $macc model for $flatten\P1.$verific$add_44$b22.vhd:100$443 ($add).
  creating $macc model for $flatten\P1.$verific$add_56$b22.vhd:114$451 ($add).
  creating $macc model for $flatten\P1.$verific$add_570$b22.vhd:470$515 ($add).
  creating $macc model for $flatten\P1.$verific$add_61$b22.vhd:117$453 ($add).
  creating $macc model for $flatten\P1.$verific$add_662$b22.vhd:497$535 ($add).
  creating $macc model for $flatten\P1.$verific$add_664$b22.vhd:498$537 ($add).
  creating $macc model for $flatten\P1.$verific$mult_667$b22.vhd:501$541 ($mul).
  creating $macc model for $flatten\P1.$verific$sub_168$b22.vhd:247$497 ($sub).
  creating $macc model for $flatten\P1.$verific$sub_365$b22.vhd:362$510 ($sub).
  creating $macc model for $flatten\P1.$verific$sub_84$b22.vhd:153$466 ($sub).
  creating $macc model for $flatten\P1.$verific$unary_minus_15$b22.vhd:88$406 ($neg).
  creating $macc model for $flatten\P2.$verific$add_21$b22.vhd:1110$916 ($add).
  creating $macc model for $flatten\P2.$verific$add_26$b22.vhd:1112$923 ($add).
  creating $macc model for $flatten\P2.$verific$add_283$b22.vhd:1342$1012 ($add).
  creating $macc model for $flatten\P2.$verific$add_31$b22.vhd:1114$930 ($add).
  creating $macc model for $flatten\P2.$verific$add_36$b22.vhd:1116$937 ($add).
  creating $macc model for $flatten\P2.$verific$add_39$b22.vhd:1119$943 ($add).
  creating $macc model for $flatten\P2.$verific$add_44$b22.vhd:1120$947 ($add).
  creating $macc model for $flatten\P2.$verific$add_56$b22.vhd:1134$955 ($add).
  creating $macc model for $flatten\P2.$verific$add_570$b22.vhd:1490$1019 ($add).
  creating $macc model for $flatten\P2.$verific$add_61$b22.vhd:1137$957 ($add).
  creating $macc model for $flatten\P2.$verific$add_662$b22.vhd:1517$1040 ($add).
  creating $macc model for $flatten\P2.$verific$add_664$b22.vhd:1518$1043 ($add).
  creating $macc model for $flatten\P2.$verific$sub_168$b22.vhd:1267$1001 ($sub).
  creating $macc model for $flatten\P2.$verific$sub_365$b22.vhd:1382$1014 ($sub).
  creating $macc model for $flatten\P2.$verific$sub_84$b22.vhd:1173$970 ($sub).
  creating $macc model for $flatten\P2.$verific$unary_minus_15$b22.vhd:1108$910 ($neg).
  creating $macc model for $flatten\P3.$verific$add_21$b22.vhd:600$1421 ($add).
  creating $macc model for $flatten\P3.$verific$add_26$b22.vhd:602$1428 ($add).
  creating $macc model for $flatten\P3.$verific$add_31$b22.vhd:604$1435 ($add).
  creating $macc model for $flatten\P3.$verific$add_331$b22.vhd:872$1521 ($add).
  creating $macc model for $flatten\P3.$verific$add_36$b22.vhd:606$1442 ($add).
  creating $macc model for $flatten\P3.$verific$add_44$b22.vhd:610$1452 ($add).
  creating $macc model for $flatten\P3.$verific$add_540$b22.vhd:980$1538 ($add).
  creating $macc model for $flatten\P3.$verific$sub_297$b22.vhd:852$1519 ($sub).
  creating $macc model for $flatten\P3.$verific$sub_39$b22.vhd:609$1448 ($sub).
  creating $macc model for $flatten\P3.$verific$sub_55$b22.vhd:624$1460 ($sub).
  creating $macc model for $flatten\P3.$verific$sub_59$b22.vhd:627$1462 ($sub).
  creating $macc model for $flatten\P3.$verific$sub_632$b22.vhd:1007$1560 ($sub).
  creating $macc model for $flatten\P3.$verific$sub_634$b22.vhd:1008$1563 ($sub).
  creating $macc model for $flatten\P3.$verific$sub_82$b22.vhd:663$1475 ($sub).
  creating $macc model for $flatten\P3.$verific$unary_minus_15$b22.vhd:598$1415 ($neg).
  creating $macc model for $verific$add_3$b22.vhd:1596$58 ($add).
  creating $macc model for $verific$add_31$b22.vhd:1603$84 ($add).
  creating $macc model for $verific$add_39$b22.vhd:1608$88 ($add).
  creating $macc model for $verific$sub_34$b22.vhd:1605$85 ($sub).
  creating $macc model for $verific$sub_4$b22.vhd:1596$59 ($sub).
  merging $macc model for $verific$add_3$b22.vhd:1596$58 into $verific$sub_4$b22.vhd:1596$59.
  creating $alu model for $macc $verific$sub_34$b22.vhd:1605$85.
  creating $alu model for $macc $verific$add_39$b22.vhd:1608$88.
  creating $alu model for $macc $verific$add_31$b22.vhd:1603$84.
  creating $alu model for $macc $flatten\P3.$verific$unary_minus_15$b22.vhd:598$1415.
  creating $alu model for $macc $flatten\P3.$verific$sub_82$b22.vhd:663$1475.
  creating $alu model for $macc $flatten\P3.$verific$sub_634$b22.vhd:1008$1563.
  creating $alu model for $macc $flatten\P3.$verific$sub_632$b22.vhd:1007$1560.
  creating $alu model for $macc $flatten\P3.$verific$sub_59$b22.vhd:627$1462.
  creating $alu model for $macc $flatten\P3.$verific$sub_55$b22.vhd:624$1460.
  creating $alu model for $macc $flatten\P3.$verific$sub_39$b22.vhd:609$1448.
  creating $alu model for $macc $flatten\P3.$verific$sub_297$b22.vhd:852$1519.
  creating $alu model for $macc $flatten\P3.$verific$add_540$b22.vhd:980$1538.
  creating $alu model for $macc $flatten\P3.$verific$add_44$b22.vhd:610$1452.
  creating $alu model for $macc $flatten\P3.$verific$add_36$b22.vhd:606$1442.
  creating $alu model for $macc $flatten\P3.$verific$add_331$b22.vhd:872$1521.
  creating $alu model for $macc $flatten\P3.$verific$add_31$b22.vhd:604$1435.
  creating $alu model for $macc $flatten\P3.$verific$add_26$b22.vhd:602$1428.
  creating $alu model for $macc $flatten\P3.$verific$add_21$b22.vhd:600$1421.
  creating $alu model for $macc $flatten\P2.$verific$unary_minus_15$b22.vhd:1108$910.
  creating $alu model for $macc $flatten\P2.$verific$sub_84$b22.vhd:1173$970.
  creating $alu model for $macc $flatten\P2.$verific$sub_365$b22.vhd:1382$1014.
  creating $alu model for $macc $flatten\P2.$verific$sub_168$b22.vhd:1267$1001.
  creating $alu model for $macc $flatten\P2.$verific$add_664$b22.vhd:1518$1043.
  creating $alu model for $macc $flatten\P2.$verific$add_662$b22.vhd:1517$1040.
  creating $alu model for $macc $flatten\P2.$verific$add_61$b22.vhd:1137$957.
  creating $alu model for $macc $flatten\P2.$verific$add_570$b22.vhd:1490$1019.
  creating $alu model for $macc $flatten\P2.$verific$add_56$b22.vhd:1134$955.
  creating $alu model for $macc $flatten\P2.$verific$add_44$b22.vhd:1120$947.
  creating $alu model for $macc $flatten\P2.$verific$add_39$b22.vhd:1119$943.
  creating $alu model for $macc $flatten\P2.$verific$add_36$b22.vhd:1116$937.
  creating $alu model for $macc $flatten\P2.$verific$add_31$b22.vhd:1114$930.
  creating $alu model for $macc $flatten\P2.$verific$add_283$b22.vhd:1342$1012.
  creating $alu model for $macc $flatten\P2.$verific$add_26$b22.vhd:1112$923.
  creating $alu model for $macc $flatten\P2.$verific$add_21$b22.vhd:1110$916.
  creating $alu model for $macc $flatten\P1.$verific$unary_minus_15$b22.vhd:88$406.
  creating $alu model for $macc $flatten\P1.$verific$sub_84$b22.vhd:153$466.
  creating $alu model for $macc $flatten\P1.$verific$sub_365$b22.vhd:362$510.
  creating $alu model for $macc $flatten\P1.$verific$sub_168$b22.vhd:247$497.
  creating $alu model for $macc $flatten\P1.$verific$add_664$b22.vhd:498$537.
  creating $alu model for $macc $flatten\P1.$verific$add_662$b22.vhd:497$535.
  creating $alu model for $macc $flatten\P1.$verific$add_61$b22.vhd:117$453.
  creating $alu model for $macc $flatten\P1.$verific$add_570$b22.vhd:470$515.
  creating $alu model for $macc $flatten\P1.$verific$add_56$b22.vhd:114$451.
  creating $alu model for $macc $flatten\P1.$verific$add_44$b22.vhd:100$443.
  creating $alu model for $macc $flatten\P1.$verific$add_39$b22.vhd:99$439.
  creating $alu model for $macc $flatten\P1.$verific$add_36$b22.vhd:96$433.
  creating $alu model for $macc $flatten\P1.$verific$add_31$b22.vhd:94$426.
  creating $alu model for $macc $flatten\P1.$verific$add_283$b22.vhd:322$508.
  creating $alu model for $macc $flatten\P1.$verific$add_26$b22.vhd:92$419.
  creating $alu model for $macc $flatten\P1.$verific$add_21$b22.vhd:90$412.
  creating $macc cell for $verific$sub_4$b22.vhd:1596$59: $auto$alumacc.cc:365:replace_macc$3418
  creating $macc cell for $flatten\P1.$verific$mult_667$b22.vhd:501$541: $auto$alumacc.cc:365:replace_macc$3419
  creating $alu model for $flatten\P1.$verific$LessThan_14$b22.vhd:87$405 ($lt): new $alu
  creating $alu model for $flatten\P1.$verific$LessThan_68$b22.vhd:122$459 ($lt): new $alu
  creating $alu model for $flatten\P1.$verific$LessThan_78$b22.vhd:142$463 ($lt): merged with $flatten\P1.$verific$LessThan_68$b22.vhd:122$459.
  creating $alu model for $flatten\P1.$verific$LessThan_83$b22.vhd:152$465 ($lt): new $alu
  creating $alu model for $flatten\P1.$verific$LessThan_87$b22.vhd:155$470 ($lt): new $alu
  creating $alu model for $flatten\P2.$verific$LessThan_14$b22.vhd:1107$909 ($lt): new $alu
  creating $alu model for $flatten\P2.$verific$LessThan_68$b22.vhd:1142$963 ($lt): new $alu
  creating $alu model for $flatten\P2.$verific$LessThan_78$b22.vhd:1162$967 ($lt): merged with $flatten\P2.$verific$LessThan_68$b22.vhd:1142$963.
  creating $alu model for $flatten\P2.$verific$LessThan_83$b22.vhd:1172$969 ($lt): new $alu
  creating $alu model for $flatten\P2.$verific$LessThan_87$b22.vhd:1175$974 ($lt): new $alu
  creating $alu model for $flatten\P3.$verific$LessThan_14$b22.vhd:597$1414 ($lt): new $alu
  creating $alu model for $flatten\P3.$verific$LessThan_66$b22.vhd:632$1468 ($lt): new $alu
  creating $alu model for $flatten\P3.$verific$LessThan_76$b22.vhd:652$1472 ($lt): merged with $flatten\P3.$verific$LessThan_66$b22.vhd:632$1468.
  creating $alu model for $flatten\P3.$verific$LessThan_81$b22.vhd:662$1474 ($lt): new $alu
  creating $alu model for $flatten\P3.$verific$LessThan_85$b22.vhd:665$1479 ($lt): new $alu
  creating $alu model for $verific$LessThan_14$b22.vhd:1601$70 ($lt): new $alu
  creating $alu model for $verific$LessThan_15$b22.vhd:1601$71 ($lt): new $alu
  creating $alu model for $verific$LessThan_16$b22.vhd:1601$72 ($lt): new $alu
  creating $alu model for $verific$LessThan_21$b22.vhd:1602$77 ($lt): new $alu
  creating $alu model for $verific$LessThan_22$b22.vhd:1602$78 ($lt): new $alu
  creating $alu model for $verific$LessThan_23$b22.vhd:1602$79 ($lt): new $alu
  creating $alu cell for $verific$LessThan_23$b22.vhd:1602$79: $auto$alumacc.cc:485:replace_alu$3438
  creating $alu cell for $verific$LessThan_22$b22.vhd:1602$78: $auto$alumacc.cc:485:replace_alu$3443
  creating $alu cell for $verific$LessThan_21$b22.vhd:1602$77: $auto$alumacc.cc:485:replace_alu$3448
  creating $alu cell for $verific$LessThan_16$b22.vhd:1601$72: $auto$alumacc.cc:485:replace_alu$3453
  creating $alu cell for $verific$LessThan_15$b22.vhd:1601$71: $auto$alumacc.cc:485:replace_alu$3458
  creating $alu cell for $verific$LessThan_14$b22.vhd:1601$70: $auto$alumacc.cc:485:replace_alu$3463
  creating $alu cell for $flatten\P3.$verific$LessThan_85$b22.vhd:665$1479: $auto$alumacc.cc:485:replace_alu$3468
  creating $alu cell for $flatten\P3.$verific$LessThan_81$b22.vhd:662$1474: $auto$alumacc.cc:485:replace_alu$3473
  creating $alu cell for $flatten\P3.$verific$LessThan_66$b22.vhd:632$1468, $flatten\P3.$verific$LessThan_76$b22.vhd:652$1472: $auto$alumacc.cc:485:replace_alu$3484
  creating $alu cell for $flatten\P3.$verific$LessThan_14$b22.vhd:597$1414: $auto$alumacc.cc:485:replace_alu$3495
  creating $alu cell for $flatten\P2.$verific$LessThan_87$b22.vhd:1175$974: $auto$alumacc.cc:485:replace_alu$3500
  creating $alu cell for $flatten\P2.$verific$LessThan_83$b22.vhd:1172$969: $auto$alumacc.cc:485:replace_alu$3511
  creating $alu cell for $flatten\P2.$verific$LessThan_68$b22.vhd:1142$963, $flatten\P2.$verific$LessThan_78$b22.vhd:1162$967: $auto$alumacc.cc:485:replace_alu$3522
  creating $alu cell for $flatten\P2.$verific$LessThan_14$b22.vhd:1107$909: $auto$alumacc.cc:485:replace_alu$3533
  creating $alu cell for $flatten\P1.$verific$LessThan_87$b22.vhd:155$470: $auto$alumacc.cc:485:replace_alu$3538
  creating $alu cell for $flatten\P1.$verific$LessThan_83$b22.vhd:152$465: $auto$alumacc.cc:485:replace_alu$3549
  creating $alu cell for $flatten\P1.$verific$LessThan_68$b22.vhd:122$459, $flatten\P1.$verific$LessThan_78$b22.vhd:142$463: $auto$alumacc.cc:485:replace_alu$3560
  creating $alu cell for $flatten\P1.$verific$LessThan_14$b22.vhd:87$405: $auto$alumacc.cc:485:replace_alu$3571
  creating $alu cell for $flatten\P1.$verific$add_21$b22.vhd:90$412: $auto$alumacc.cc:485:replace_alu$3576
  creating $alu cell for $flatten\P1.$verific$add_26$b22.vhd:92$419: $auto$alumacc.cc:485:replace_alu$3579
  creating $alu cell for $flatten\P1.$verific$add_283$b22.vhd:322$508: $auto$alumacc.cc:485:replace_alu$3582
  creating $alu cell for $flatten\P1.$verific$add_31$b22.vhd:94$426: $auto$alumacc.cc:485:replace_alu$3585
  creating $alu cell for $flatten\P1.$verific$add_36$b22.vhd:96$433: $auto$alumacc.cc:485:replace_alu$3588
  creating $alu cell for $flatten\P1.$verific$add_39$b22.vhd:99$439: $auto$alumacc.cc:485:replace_alu$3591
  creating $alu cell for $flatten\P1.$verific$add_44$b22.vhd:100$443: $auto$alumacc.cc:485:replace_alu$3594
  creating $alu cell for $flatten\P1.$verific$add_56$b22.vhd:114$451: $auto$alumacc.cc:485:replace_alu$3597
  creating $alu cell for $flatten\P1.$verific$add_570$b22.vhd:470$515: $auto$alumacc.cc:485:replace_alu$3600
  creating $alu cell for $flatten\P1.$verific$add_61$b22.vhd:117$453: $auto$alumacc.cc:485:replace_alu$3603
  creating $alu cell for $flatten\P1.$verific$add_662$b22.vhd:497$535: $auto$alumacc.cc:485:replace_alu$3606
  creating $alu cell for $flatten\P1.$verific$add_664$b22.vhd:498$537: $auto$alumacc.cc:485:replace_alu$3609
  creating $alu cell for $flatten\P1.$verific$sub_168$b22.vhd:247$497: $auto$alumacc.cc:485:replace_alu$3612
  creating $alu cell for $flatten\P1.$verific$sub_365$b22.vhd:362$510: $auto$alumacc.cc:485:replace_alu$3615
  creating $alu cell for $flatten\P1.$verific$sub_84$b22.vhd:153$466: $auto$alumacc.cc:485:replace_alu$3618
  creating $alu cell for $flatten\P1.$verific$unary_minus_15$b22.vhd:88$406: $auto$alumacc.cc:485:replace_alu$3621
  creating $alu cell for $flatten\P2.$verific$add_21$b22.vhd:1110$916: $auto$alumacc.cc:485:replace_alu$3624
  creating $alu cell for $flatten\P2.$verific$add_26$b22.vhd:1112$923: $auto$alumacc.cc:485:replace_alu$3627
  creating $alu cell for $flatten\P2.$verific$add_283$b22.vhd:1342$1012: $auto$alumacc.cc:485:replace_alu$3630
  creating $alu cell for $flatten\P2.$verific$add_31$b22.vhd:1114$930: $auto$alumacc.cc:485:replace_alu$3633
  creating $alu cell for $flatten\P2.$verific$add_36$b22.vhd:1116$937: $auto$alumacc.cc:485:replace_alu$3636
  creating $alu cell for $flatten\P2.$verific$add_39$b22.vhd:1119$943: $auto$alumacc.cc:485:replace_alu$3639
  creating $alu cell for $flatten\P2.$verific$add_44$b22.vhd:1120$947: $auto$alumacc.cc:485:replace_alu$3642
  creating $alu cell for $flatten\P2.$verific$add_570$b22.vhd:1490$1019: $auto$alumacc.cc:485:replace_alu$3645
  creating $alu cell for $flatten\P2.$verific$add_56$b22.vhd:1134$955: $auto$alumacc.cc:485:replace_alu$3648
  creating $alu cell for $flatten\P2.$verific$add_662$b22.vhd:1517$1040: $auto$alumacc.cc:485:replace_alu$3651
  creating $alu cell for $flatten\P2.$verific$add_61$b22.vhd:1137$957: $auto$alumacc.cc:485:replace_alu$3654
  creating $alu cell for $flatten\P2.$verific$add_664$b22.vhd:1518$1043: $auto$alumacc.cc:485:replace_alu$3657
  creating $alu cell for $flatten\P2.$verific$sub_168$b22.vhd:1267$1001: $auto$alumacc.cc:485:replace_alu$3660
  creating $alu cell for $flatten\P2.$verific$sub_365$b22.vhd:1382$1014: $auto$alumacc.cc:485:replace_alu$3663
  creating $alu cell for $flatten\P2.$verific$sub_84$b22.vhd:1173$970: $auto$alumacc.cc:485:replace_alu$3666
  creating $alu cell for $flatten\P2.$verific$unary_minus_15$b22.vhd:1108$910: $auto$alumacc.cc:485:replace_alu$3669
  creating $alu cell for $flatten\P3.$verific$add_21$b22.vhd:600$1421: $auto$alumacc.cc:485:replace_alu$3672
  creating $alu cell for $flatten\P3.$verific$add_26$b22.vhd:602$1428: $auto$alumacc.cc:485:replace_alu$3675
  creating $alu cell for $flatten\P3.$verific$add_31$b22.vhd:604$1435: $auto$alumacc.cc:485:replace_alu$3678
  creating $alu cell for $flatten\P3.$verific$add_331$b22.vhd:872$1521: $auto$alumacc.cc:485:replace_alu$3681
  creating $alu cell for $flatten\P3.$verific$add_36$b22.vhd:606$1442: $auto$alumacc.cc:485:replace_alu$3684
  creating $alu cell for $flatten\P3.$verific$add_44$b22.vhd:610$1452: $auto$alumacc.cc:485:replace_alu$3687
  creating $alu cell for $flatten\P3.$verific$add_540$b22.vhd:980$1538: $auto$alumacc.cc:485:replace_alu$3690
  creating $alu cell for $flatten\P3.$verific$sub_297$b22.vhd:852$1519: $auto$alumacc.cc:485:replace_alu$3693
  creating $alu cell for $flatten\P3.$verific$sub_39$b22.vhd:609$1448: $auto$alumacc.cc:485:replace_alu$3696
  creating $alu cell for $flatten\P3.$verific$sub_55$b22.vhd:624$1460: $auto$alumacc.cc:485:replace_alu$3699
  creating $alu cell for $flatten\P3.$verific$sub_59$b22.vhd:627$1462: $auto$alumacc.cc:485:replace_alu$3702
  creating $alu cell for $flatten\P3.$verific$sub_632$b22.vhd:1007$1560: $auto$alumacc.cc:485:replace_alu$3705
  creating $alu cell for $flatten\P3.$verific$sub_634$b22.vhd:1008$1563: $auto$alumacc.cc:485:replace_alu$3708
  creating $alu cell for $flatten\P3.$verific$sub_82$b22.vhd:663$1475: $auto$alumacc.cc:485:replace_alu$3711
  creating $alu cell for $flatten\P3.$verific$unary_minus_15$b22.vhd:598$1415: $auto$alumacc.cc:485:replace_alu$3714
  creating $alu cell for $verific$add_31$b22.vhd:1603$84: $auto$alumacc.cc:485:replace_alu$3717
  creating $alu cell for $verific$add_39$b22.vhd:1608$88: $auto$alumacc.cc:485:replace_alu$3720
  creating $alu cell for $verific$sub_34$b22.vhd:1605$85: $auto$alumacc.cc:485:replace_alu$3723
  created 68 $alu and 2 $macc cells.

yosys> opt_expr

3.24. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~15 debug messages>

yosys> opt_merge -nomux

3.25. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
<suppressed ~10 debug messages>
Removed a total of 2 cells.

yosys> opt_muxtree

3.26. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~72 debug messages>

yosys> opt_reduce

3.27. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.28. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_share

3.29. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $mux $flatten\P1.$auto$bmuxmap.cc:60:execute$2052 in front of them:
        $auto$alumacc.cc:485:replace_alu$3609
        $auto$alumacc.cc:485:replace_alu$3606

    Found cells that share an operand and can be merged by moving the $mux $flatten\P1.$auto$bmuxmap.cc:60:execute$2222 in front of them:
        $flatten\P1.$verific$i102$b22.vhd:173$473
        $flatten\P1.$verific$i98$b22.vhd:168$472

    Found cells that share an operand and can be merged by moving the $mux $flatten\P1.$auto$bmuxmap.cc:60:execute$2223 in front of them:
        $flatten\P1.$verific$i109$b22.vhd:183$475
        $flatten\P1.$verific$i105$b22.vhd:178$474

    Found cells that share an operand and can be merged by moving the $mux $flatten\P1.$auto$bmuxmap.cc:60:execute$2224 in front of them:
        $flatten\P1.$verific$i116$b22.vhd:193$477
        $flatten\P1.$verific$i113$b22.vhd:188$476

    Found cells that share an operand and can be merged by moving the $mux $flatten\P1.$auto$bmuxmap.cc:60:execute$2225 in front of them:
        $flatten\P1.$verific$i131$b22.vhd:209$479
        $flatten\P1.$verific$i123$b22.vhd:201$478

    Found cells that share an operand and can be merged by moving the $mux $flatten\P2.$auto$bmuxmap.cc:60:execute$2016 in front of them:
        $flatten\P2.$verific$i102$b22.vhd:1193$977
        $flatten\P2.$verific$i98$b22.vhd:1188$976

    Found cells that share an operand and can be merged by moving the $mux $flatten\P2.$auto$bmuxmap.cc:60:execute$2017 in front of them:
        $flatten\P2.$verific$i109$b22.vhd:1203$979
        $flatten\P2.$verific$i105$b22.vhd:1198$978

    Found cells that share an operand and can be merged by moving the $mux $flatten\P2.$auto$bmuxmap.cc:60:execute$2018 in front of them:
        $flatten\P2.$verific$i116$b22.vhd:1213$981
        $flatten\P2.$verific$i113$b22.vhd:1208$980

    Found cells that share an operand and can be merged by moving the $mux $flatten\P2.$auto$bmuxmap.cc:60:execute$2019 in front of them:
        $flatten\P2.$verific$i131$b22.vhd:1229$983
        $flatten\P2.$verific$i123$b22.vhd:1221$982

    Found cells that share an operand and can be merged by moving the $mux $flatten\P3.$auto$bmuxmap.cc:60:execute$1624 in front of them:
        $auto$alumacc.cc:485:replace_alu$3708
        $auto$alumacc.cc:485:replace_alu$3705

    Found cells that share an operand and can be merged by moving the $mux $flatten\P3.$auto$bmuxmap.cc:60:execute$1805 in front of them:
        $flatten\P3.$verific$i100$b22.vhd:683$1482
        $flatten\P3.$verific$i96$b22.vhd:678$1481

    Found cells that share an operand and can be merged by moving the $mux $flatten\P3.$auto$bmuxmap.cc:60:execute$1806 in front of them:
        $flatten\P3.$verific$i107$b22.vhd:693$1484
        $flatten\P3.$verific$i103$b22.vhd:688$1483

    Found cells that share an operand and can be merged by moving the $mux $flatten\P3.$auto$bmuxmap.cc:60:execute$1807 in front of them:
        $flatten\P3.$verific$i114$b22.vhd:703$1486
        $flatten\P3.$verific$i111$b22.vhd:698$1485

    Found cells that share an operand and can be merged by moving the $mux $flatten\P3.$auto$bmuxmap.cc:60:execute$1808 in front of them:
        $flatten\P3.$verific$i129$b22.vhd:719$1488
        $flatten\P3.$verific$i121$b22.vhd:711$1487


yosys> opt_dff

3.30. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.31. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 7 unused cells and 79 unused wires.
<suppressed ~8 debug messages>

yosys> opt_expr

3.32. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~14 debug messages>

yosys> opt_muxtree

3.33. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~87 debug messages>

yosys> opt_reduce

3.34. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.35. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
<suppressed ~36 debug messages>
Removed a total of 12 cells.

yosys> opt_share

3.36. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $mux $flatten\P1.$auto$bmuxmap.cc:60:execute$2229 in front of them:
        $flatten\P1.$verific$i109$b22.vhd:183$475
        $flatten\P1.$verific$i102$b22.vhd:173$473

    Found cells that share an operand and can be merged by moving the $mux $flatten\P1.$auto$bmuxmap.cc:60:execute$2230 in front of them:
        $flatten\P1.$verific$i131$b22.vhd:209$479
        $flatten\P1.$verific$i116$b22.vhd:193$477

    Found cells that share an operand and can be merged by moving the $mux $flatten\P2.$auto$bmuxmap.cc:60:execute$2023 in front of them:
        $flatten\P2.$verific$i109$b22.vhd:1203$979
        $flatten\P2.$verific$i102$b22.vhd:1193$977

    Found cells that share an operand and can be merged by moving the $mux $flatten\P2.$auto$bmuxmap.cc:60:execute$2024 in front of them:
        $flatten\P2.$verific$i131$b22.vhd:1229$983
        $flatten\P2.$verific$i116$b22.vhd:1213$981

    Found cells that share an operand and can be merged by moving the $mux $flatten\P3.$auto$bmuxmap.cc:60:execute$1812 in front of them:
        $flatten\P3.$verific$i107$b22.vhd:693$1484
        $flatten\P3.$verific$i100$b22.vhd:683$1482

    Found cells that share an operand and can be merged by moving the $mux $flatten\P3.$auto$bmuxmap.cc:60:execute$1813 in front of them:
        $flatten\P3.$verific$i129$b22.vhd:719$1488
        $flatten\P3.$verific$i114$b22.vhd:703$1486


yosys> opt_dff

3.37. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.38. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 15 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.39. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~6 debug messages>

yosys> opt_muxtree

3.40. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~93 debug messages>

yosys> opt_reduce

3.41. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.42. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
<suppressed ~18 debug messages>
Removed a total of 6 cells.

yosys> opt_share

3.43. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $mux $flatten\P1.$auto$bmuxmap.cc:60:execute$2233 in front of them:
        $flatten\P1.$verific$i131$b22.vhd:209$479
        $flatten\P1.$verific$i109$b22.vhd:183$475

    Found cells that share an operand and can be merged by moving the $mux $flatten\P2.$auto$bmuxmap.cc:60:execute$2027 in front of them:
        $flatten\P2.$verific$i131$b22.vhd:1229$983
        $flatten\P2.$verific$i109$b22.vhd:1203$979

    Found cells that share an operand and can be merged by moving the $mux $flatten\P3.$auto$bmuxmap.cc:60:execute$1816 in front of them:
        $flatten\P3.$verific$i129$b22.vhd:719$1488
        $flatten\P3.$verific$i107$b22.vhd:693$1484


yosys> opt_dff

3.44. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.45. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 9 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.46. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~3 debug messages>

yosys> opt_muxtree

3.47. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~84 debug messages>

yosys> opt_reduce

3.48. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.49. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

yosys> opt_share

3.50. Executing OPT_SHARE pass.

yosys> opt_dff

3.51. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.52. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.53. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

yosys> opt_muxtree

3.54. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~78 debug messages>

yosys> opt_reduce

3.55. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.56. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_share

3.57. Executing OPT_SHARE pass.

yosys> opt_dff

3.58. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.59. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..

yosys> opt_expr

3.60. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
MAX OPT ITERATION = 5

yosys> stat

3.61. Printing statistics.

=== b22 ===

   Number of wires:                924
   Number of wire bits:          18608
   Number of public wires:          64
   Number of public wire bits:    1006
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                882
     $adff                          18
     $adffe                         22
     $alu                           64
     $and                          102
     $eq                            75
     $logic_not                      6
     $macc                           2
     $mux                          329
     $ne                           102
     $not                           38
     $or                            14
     $pmux                          27
     $reduce_and                    27
     $reduce_bool                    3
     $reduce_or                     51
     $xor                            2


yosys> memory -nomap

3.62. Executing MEMORY pass.

yosys> opt_mem

3.62.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.62.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.62.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.62.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.62.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.62.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..

yosys> memory_share

3.62.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.62.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.62.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..

yosys> memory_collect

3.62.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.63. Printing statistics.

=== b22 ===

   Number of wires:                924
   Number of wire bits:          18608
   Number of public wires:          64
   Number of public wire bits:    1006
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                882
     $adff                          18
     $adffe                         22
     $alu                           64
     $and                          102
     $eq                            75
     $logic_not                      6
     $macc                           2
     $mux                          329
     $ne                           102
     $not                           38
     $or                            14
     $pmux                          27
     $reduce_and                    27
     $reduce_bool                    3
     $reduce_or                     51
     $xor                            2


yosys> muxpack

3.64. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~308 debug messages>

yosys> opt_clean

3.65. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..

yosys> pmuxtree

3.66. Executing PMUXTREE pass.

yosys> muxpack

3.67. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~342 debug messages>

yosys> memory_map

3.68. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> stat

3.69. Printing statistics.

=== b22 ===

   Number of wires:               1038
   Number of wire bits:          22725
   Number of public wires:          64
   Number of public wire bits:    1006
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                969
     $adff                          18
     $adffe                         22
     $alu                           64
     $and                          102
     $eq                            75
     $logic_not                      6
     $macc                           2
     $mux                          386
     $ne                           102
     $not                           65
     $or                            17
     $reduce_and                    27
     $reduce_bool                    3
     $reduce_or                     78
     $xor                            2


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.70. Executing TECHMAP pass (map to technology primitives).

3.70.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.70.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.70.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $mux.
Using extmapper maccmap for cells of type $macc.
  add \P1.addr (20 bits, unsigned)
  sub \P3.addr (20 bits, unsigned)
  add \P2.addr (20 bits, unsigned)
  packed 1 (1) bits / 1 words into adder tree
Using extmapper simplemap for cells of type $eq.
  add 3'101 * $flatten\P1.$auto$bmuxmap.cc:58:execute$2053 [0] (3x1 bits, unsigned)
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $ne.
Using template $paramod$79fc87901d7fd8aaad689b5406671422f5fa25b9\_80_rs_alu for cells of type $alu.
Using template $paramod$6fc37af1c109ae54e8aed83fcd995c12d378ce93\_90_alu for cells of type $alu.
Using template $paramod$51c80ded93a30cabdd6a720b4f0ed1d8c51829dd\_90_alu for cells of type $alu.
Using template $paramod$be80489e44a49c29884f59fd81c31ed03229cfc1\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $adffe.
Using template $paramod$e891e6b399cf52748460a311fafe476815d24bd7\_90_alu for cells of type $alu.
Using template $paramod$3ef7d3dd227da7627a99c5e5a6a4deb817573e39\_90_alu for cells of type $alu.
Using template $paramod$32a7b7b86c07519b7537abc18e96f0331f97914d\_90_alu for cells of type $alu.
Using template $paramod$9e7011427f22271c0942bd67000ef26931352ace\_80_rs_alu for cells of type $alu.
/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:80: Warning: Range [-1:-1] select out of bounds on signal `\C': Setting 1 LSB bits to undef.
/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88: Warning: Range [-1:-1] select out of bounds on signal `\Y': Setting 1 LSB bits to undef.
/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88: Warning: Range [-1:-1] select out of bounds on signal `\S': Setting 1 LSB bits to undef.
/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88: Warning: Ignoring assignment to constant bits:
    old assignment: 1'x = $xor$/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88$9005_Y
    new assignment: { } = { }.
/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:89: Warning: Range [-1:-1] select out of bounds on signal `\S': Setting 1 LSB bits to undef.
/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:89: Warning: Range [-1:-1] select out of bounds on signal `\AA': Setting 1 LSB bits to undef.
Using template $paramod$fc972a7a46956c1788f3cb5257b53c8f1df2d0cc\_90_alu for cells of type $alu.
Using template $paramod$175e67c02b86e96b1288b9dc100122520d7240d8\_90_alu for cells of type $alu.
Using template $paramod$ee932b0f27f4b110ee21c85da6e79a9925243db9\_80_rs_alu for cells of type $alu.
Using template $paramod$83fc07d9557d32477a9ece9e4e82efd3bbe82ab8\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$6dc2bc4e177433cbefea60fe94ff11f8a7c6abf8\_90_alu for cells of type $alu.
Using template $paramod$2fcdd83405601057593cb25247304b1283f3b87e\_80_rs_alu for cells of type $alu.
Using template $paramod$c32aaa9fd758c6ea2b382f4327253b21b576e597\_90_alu for cells of type $alu.
Using template $paramod$63a3f1ffa662be02d3403b533885c56d18ebe02a\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod$83784888def4f70dbbded37c6d05d2ea1157c936\_90_alu for cells of type $alu.
Using template $paramod$43e6bdbb0e8a6b23dfd3962c0280737d54f8e2be\_80_rs_alu for cells of type $alu.
Using template $paramod$6a42b6fefed750f8a1c58eab59479d960557103c\_90_alu for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010100 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000000010100 for cells of type $fa.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000011110 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000011011 for cells of type $lcu.
No more expansions possible.
<suppressed ~6499 debug messages>

yosys> stat

3.71. Printing statistics.

=== b22 ===

   Number of wires:               5543
   Number of wire bits:          89787
   Number of public wires:          64
   Number of public wire bits:    1006
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              25392
     $_AND_                       2593
     $_DFFE_PP0P_                  502
     $_DFF_PP0_                    117
     $_MUX_                      14057
     $_NOT_                       1576
     $_OR_                        2570
     $_XOR_                       3160
     adder_carry                   817


yosys> opt_expr

3.72. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~7556 debug messages>

yosys> opt_merge -nomux

3.73. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
<suppressed ~14355 debug messages>
Removed a total of 4785 cells.

yosys> opt_muxtree

3.74. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.75. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.76. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_share

3.77. Executing OPT_SHARE pass.

yosys> opt_dff

3.78. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$11216 ($_DFFE_PP0P_) from module b22 (D = $auto$wreduce.cc:455:run$3398 [0], Q = \P3.reg3 [0]).
Adding EN signal on $auto$ff.cc:262:slice$11217 ($_DFFE_PP0P_) from module b22 (D = $auto$wreduce.cc:455:run$3398 [1], Q = \P3.reg3 [1]).
Adding EN signal on $auto$ff.cc:262:slice$11218 ($_DFFE_PP0P_) from module b22 (D = $auto$wreduce.cc:455:run$3398 [2], Q = \P3.reg3 [2]).

yosys> opt_clean

3.79. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 1023 unused cells and 3896 unused wires.
<suppressed ~1024 debug messages>

yosys> opt_expr

3.80. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~300 debug messages>

yosys> opt_muxtree

3.81. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.82. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.83. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
<suppressed ~348 debug messages>
Removed a total of 116 cells.

yosys> opt_share

3.84. Executing OPT_SHARE pass.

yosys> opt_dff

3.85. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.86. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 112 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.87. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

yosys> opt_muxtree

3.88. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.89. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.90. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_share

3.91. Executing OPT_SHARE pass.

yosys> opt_dff

3.92. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.93. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..

yosys> opt_expr

3.94. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
MAX OPT ITERATION = 3

yosys> opt -fast -full

3.95. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.95.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~2022 debug messages>

yosys> opt_merge

3.95.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
<suppressed ~69 debug messages>
Removed a total of 23 cells.

yosys> opt_dff

3.95.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$9945 ($_DFFE_PP0P_) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1707 [30], Q = \P3.reg1 [30]).
Adding EN signal on $auto$ff.cc:262:slice$9943 ($_DFFE_PP0P_) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1707 [28], Q = \P3.reg1 [28]).
Adding EN signal on $auto$ff.cc:262:slice$9941 ($_DFFE_PP0P_) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1707 [26], Q = \P3.reg1 [26]).
Adding EN signal on $auto$ff.cc:262:slice$9939 ($_DFFE_PP0P_) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1707 [24], Q = \P3.reg1 [24]).
Adding EN signal on $auto$ff.cc:262:slice$9937 ($_DFFE_PP0P_) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1707 [22], Q = \P3.reg1 [22]).
Adding EN signal on $auto$ff.cc:262:slice$9935 ($_DFFE_PP0P_) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1707 [20], Q = \P3.reg1 [20]).
Adding EN signal on $auto$ff.cc:262:slice$9933 ($_DFFE_PP0P_) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1707 [18], Q = \P3.reg1 [18]).
Adding EN signal on $auto$ff.cc:262:slice$9931 ($_DFFE_PP0P_) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1707 [16], Q = \P3.reg1 [16]).
Adding EN signal on $auto$ff.cc:262:slice$9929 ($_DFFE_PP0P_) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1707 [14], Q = \P3.reg1 [14]).
Adding EN signal on $auto$ff.cc:262:slice$9946 ($_DFFE_PP0P_) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1707 [31], Q = \P3.reg1 [31]).
Adding EN signal on $auto$ff.cc:262:slice$9944 ($_DFFE_PP0P_) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1707 [29], Q = \P3.reg1 [29]).
Adding EN signal on $auto$ff.cc:262:slice$9942 ($_DFFE_PP0P_) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1707 [27], Q = \P3.reg1 [27]).
Adding EN signal on $auto$ff.cc:262:slice$9940 ($_DFFE_PP0P_) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1707 [25], Q = \P3.reg1 [25]).
Adding EN signal on $auto$ff.cc:262:slice$9938 ($_DFFE_PP0P_) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1707 [23], Q = \P3.reg1 [23]).
Adding EN signal on $auto$ff.cc:262:slice$9936 ($_DFFE_PP0P_) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1707 [21], Q = \P3.reg1 [21]).
Adding EN signal on $auto$ff.cc:262:slice$9934 ($_DFFE_PP0P_) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1707 [19], Q = \P3.reg1 [19]).
Adding EN signal on $auto$ff.cc:262:slice$9932 ($_DFFE_PP0P_) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1707 [17], Q = \P3.reg1 [17]).
Adding EN signal on $auto$ff.cc:262:slice$9930 ($_DFFE_PP0P_) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1707 [15], Q = \P3.reg1 [15]).
Adding EN signal on $auto$ff.cc:262:slice$9928 ($_DFFE_PP0P_) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1707 [13], Q = \P3.reg1 [13]).
Adding EN signal on $auto$ff.cc:262:slice$9927 ($_DFFE_PP0P_) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1707 [12], Q = \P3.reg1 [12]).
Adding EN signal on $auto$ff.cc:262:slice$9926 ($_DFFE_PP0P_) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1707 [11], Q = \P3.reg1 [11]).
Adding EN signal on $auto$ff.cc:262:slice$9925 ($_DFFE_PP0P_) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1707 [10], Q = \P3.reg1 [10]).
Adding EN signal on $auto$ff.cc:262:slice$9924 ($_DFFE_PP0P_) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1707 [9], Q = \P3.reg1 [9]).
Adding EN signal on $auto$ff.cc:262:slice$9923 ($_DFFE_PP0P_) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1707 [8], Q = \P3.reg1 [8]).
Adding EN signal on $auto$ff.cc:262:slice$9922 ($_DFFE_PP0P_) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1707 [7], Q = \P3.reg1 [7]).
Adding EN signal on $auto$ff.cc:262:slice$9921 ($_DFFE_PP0P_) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1707 [6], Q = \P3.reg1 [6]).
Adding EN signal on $auto$ff.cc:262:slice$9920 ($_DFFE_PP0P_) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1707 [5], Q = \P3.reg1 [5]).
Adding EN signal on $auto$ff.cc:262:slice$9919 ($_DFFE_PP0P_) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1707 [4], Q = \P3.reg1 [4]).
Adding EN signal on $auto$ff.cc:262:slice$9918 ($_DFFE_PP0P_) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1707 [3], Q = \P3.reg1 [3]).
Adding EN signal on $auto$ff.cc:262:slice$9917 ($_DFFE_PP0P_) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1707 [2], Q = \P3.reg1 [2]).
Adding EN signal on $auto$ff.cc:262:slice$9916 ($_DFFE_PP0P_) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1707 [1], Q = \P3.reg1 [1]).
Adding EN signal on $auto$ff.cc:262:slice$9915 ($_DFFE_PP0P_) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1707 [0], Q = \P3.reg1 [0]).
Adding EN signal on $auto$ff.cc:262:slice$9914 ($_DFFE_PP0P_) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1726 [31], Q = \P3.reg0 [31]).
Adding EN signal on $auto$ff.cc:262:slice$9913 ($_DFFE_PP0P_) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1726 [30], Q = \P3.reg0 [30]).
Adding EN signal on $auto$ff.cc:262:slice$9912 ($_DFFE_PP0P_) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1726 [29], Q = \P3.reg0 [29]).
Adding EN signal on $auto$ff.cc:262:slice$9911 ($_DFFE_PP0P_) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1726 [28], Q = \P3.reg0 [28]).
Adding EN signal on $auto$ff.cc:262:slice$9910 ($_DFFE_PP0P_) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1726 [27], Q = \P3.reg0 [27]).
Adding EN signal on $auto$ff.cc:262:slice$9909 ($_DFFE_PP0P_) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1726 [26], Q = \P3.reg0 [26]).
Adding EN signal on $auto$ff.cc:262:slice$9908 ($_DFFE_PP0P_) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1726 [25], Q = \P3.reg0 [25]).
Adding EN signal on $auto$ff.cc:262:slice$9907 ($_DFFE_PP0P_) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1726 [24], Q = \P3.reg0 [24]).
Adding EN signal on $auto$ff.cc:262:slice$9906 ($_DFFE_PP0P_) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1726 [23], Q = \P3.reg0 [23]).
Adding EN signal on $auto$ff.cc:262:slice$9905 ($_DFFE_PP0P_) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1726 [22], Q = \P3.reg0 [22]).
Adding EN signal on $auto$ff.cc:262:slice$9904 ($_DFFE_PP0P_) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1726 [21], Q = \P3.reg0 [21]).
Adding EN signal on $auto$ff.cc:262:slice$9903 ($_DFFE_PP0P_) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1726 [20], Q = \P3.reg0 [20]).
Adding EN signal on $auto$ff.cc:262:slice$9902 ($_DFFE_PP0P_) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1726 [19], Q = \P3.reg0 [19]).
Adding EN signal on $auto$ff.cc:262:slice$9901 ($_DFFE_PP0P_) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1726 [18], Q = \P3.reg0 [18]).
Adding EN signal on $auto$ff.cc:262:slice$9900 ($_DFFE_PP0P_) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1726 [17], Q = \P3.reg0 [17]).
Adding EN signal on $auto$ff.cc:262:slice$9899 ($_DFFE_PP0P_) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1726 [16], Q = \P3.reg0 [16]).
Adding EN signal on $auto$ff.cc:262:slice$9898 ($_DFFE_PP0P_) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1726 [15], Q = \P3.reg0 [15]).
Adding EN signal on $auto$ff.cc:262:slice$9897 ($_DFFE_PP0P_) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1726 [14], Q = \P3.reg0 [14]).
Adding EN signal on $auto$ff.cc:262:slice$9896 ($_DFFE_PP0P_) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1726 [13], Q = \P3.reg0 [13]).
Adding EN signal on $auto$ff.cc:262:slice$9895 ($_DFFE_PP0P_) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1726 [12], Q = \P3.reg0 [12]).
Adding EN signal on $auto$ff.cc:262:slice$9894 ($_DFFE_PP0P_) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1726 [11], Q = \P3.reg0 [11]).
Adding EN signal on $auto$ff.cc:262:slice$9893 ($_DFFE_PP0P_) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1726 [10], Q = \P3.reg0 [10]).
Adding EN signal on $auto$ff.cc:262:slice$9892 ($_DFFE_PP0P_) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1726 [9], Q = \P3.reg0 [9]).
Adding EN signal on $auto$ff.cc:262:slice$9891 ($_DFFE_PP0P_) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1726 [8], Q = \P3.reg0 [8]).
Adding EN signal on $auto$ff.cc:262:slice$9890 ($_DFFE_PP0P_) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1726 [7], Q = \P3.reg0 [7]).
Adding EN signal on $auto$ff.cc:262:slice$9889 ($_DFFE_PP0P_) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1726 [6], Q = \P3.reg0 [6]).
Adding EN signal on $auto$ff.cc:262:slice$9888 ($_DFFE_PP0P_) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1726 [5], Q = \P3.reg0 [5]).
Adding EN signal on $auto$ff.cc:262:slice$9887 ($_DFFE_PP0P_) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1726 [4], Q = \P3.reg0 [4]).
Adding EN signal on $auto$ff.cc:262:slice$9886 ($_DFFE_PP0P_) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1726 [3], Q = \P3.reg0 [3]).
Adding EN signal on $auto$ff.cc:262:slice$9885 ($_DFFE_PP0P_) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1726 [2], Q = \P3.reg0 [2]).
Adding EN signal on $auto$ff.cc:262:slice$9884 ($_DFFE_PP0P_) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1726 [1], Q = \P3.reg0 [1]).
Adding EN signal on $auto$ff.cc:262:slice$9883 ($_DFFE_PP0P_) from module b22 (D = $flatten\P3.$auto$bmuxmap.cc:58:execute$1726 [0], Q = \P3.reg0 [0]).

yosys> opt_clean

3.95.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 169 unused wires.
<suppressed ~1 debug messages>

3.95.5. Rerunning OPT passes. (Removed registers in this run.)

yosys> opt_expr -full

3.95.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~299 debug messages>

yosys> opt_merge

3.95.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
<suppressed ~750 debug messages>
Removed a total of 250 cells.

yosys> opt_dff

3.95.8. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.95.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 316 unused wires.
<suppressed ~1 debug messages>

3.95.10. Finished fast OPT passes.

yosys> techmap -map +/techmap.v

3.96. Executing TECHMAP pass (map to technology primitives).

3.96.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.96.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> opt -sat

3.97. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.97.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

yosys> opt_merge -nomux

3.97.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.97.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.97.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.97.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.97.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.97.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..

yosys> opt_expr

3.97.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

3.97.9. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

3.98. Executing ABC pass (technology mapping using ABC).

3.98.1. Summary of detected clock domains:
  884 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$2988, arst=\reset, srst={ }
  402 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$3057, arst=\reset, srst={ }
  493 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$3074, arst=\reset, srst={ }
  709 cells in clk=\clock, en=\P2.state, arst=\reset, srst={ }
  553 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$33510, arst=\reset, srst={ }
  588 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$32966, arst=\reset, srst={ }
  125 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$32624, arst=\reset, srst={ }
  796 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$3235, arst=\reset, srst={ }
  605 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$3254, arst=\reset, srst={ }
  510 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$3273, arst=\reset, srst={ }
  230 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$3278, arst=\reset, srst={ }
  203 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$3309, arst=\reset, srst={ }
  547 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$3326, arst=\reset, srst={ }
  102 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$3218, arst=\reset, srst={ }
  769 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$3109, arst=\reset, srst={ }
  621 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$3128, arst=\reset, srst={ }
  510 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$3147, arst=\reset, srst={ }
  393 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$3152, arst=\reset, srst={ }
  184 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$3183, arst=\reset, srst={ }
  554 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$3200, arst=\reset, srst={ }
  649 cells in clk=\clock, en=\P1.state, arst=\reset, srst={ }
  755 cells in clk=\clock, en=\P3.state, arst=\reset, srst={ }
  109 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$3092, arst=\reset, srst={ }
  1503 cells in clk=\clock, en={ }, arst=\reset, srst={ }

3.98.2. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2988, asynchronously reset by \reset
Extracted 824 gates and 1118 wires to a netlist network with 293 inputs and 241 outputs.

3.98.2.1. Executing ABC.

3.98.3. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3057, asynchronously reset by \reset
Extracted 342 gates and 519 wires to a netlist network with 177 inputs and 103 outputs.

3.98.3.1. Executing ABC.

3.98.4. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3074, asynchronously reset by \reset
Extracted 426 gates and 574 wires to a netlist network with 146 inputs and 96 outputs.

3.98.4.1. Executing ABC.

3.98.5. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by \P2.state, asynchronously reset by \reset
Extracted 709 gates and 916 wires to a netlist network with 206 inputs and 52 outputs.

3.98.5.1. Executing ABC.

3.98.6. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$33510, asynchronously reset by \reset
Extracted 553 gates and 767 wires to a netlist network with 212 inputs and 113 outputs.

3.98.6.1. Executing ABC.

3.98.7. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$32966, asynchronously reset by \reset
Extracted 564 gates and 780 wires to a netlist network with 214 inputs and 117 outputs.

3.98.7.1. Executing ABC.

3.98.8. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$32624, asynchronously reset by \reset
Extracted 121 gates and 189 wires to a netlist network with 67 inputs and 33 outputs.

3.98.8.1. Executing ABC.

3.98.9. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3235, asynchronously reset by \reset
Extracted 716 gates and 984 wires to a netlist network with 267 inputs and 206 outputs.

3.98.9.1. Executing ABC.

3.98.10. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3254, asynchronously reset by \reset
Extracted 585 gates and 814 wires to a netlist network with 228 inputs and 108 outputs.

3.98.10.1. Executing ABC.

3.98.11. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3273, asynchronously reset by \reset
Extracted 485 gates and 694 wires to a netlist network with 207 inputs and 70 outputs.

3.98.11.1. Executing ABC.

3.98.12. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3278, asynchronously reset by \reset
Extracted 166 gates and 330 wires to a netlist network with 164 inputs and 157 outputs.

3.98.12.1. Executing ABC.

3.98.13. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3309, asynchronously reset by \reset
Extracted 185 gates and 260 wires to a netlist network with 75 inputs and 102 outputs.

3.98.13.1. Executing ABC.

3.98.14. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3326, asynchronously reset by \reset
Extracted 481 gates and 595 wires to a netlist network with 113 inputs and 69 outputs.

3.98.14.1. Executing ABC.

3.98.15. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3218, asynchronously reset by \reset
Extracted 98 gates and 142 wires to a netlist network with 43 inputs and 36 outputs.

3.98.15.1. Executing ABC.

3.98.16. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3109, asynchronously reset by \reset
Extracted 689 gates and 952 wires to a netlist network with 262 inputs and 202 outputs.

3.98.16.1. Executing ABC.

3.98.17. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3128, asynchronously reset by \reset
Extracted 601 gates and 830 wires to a netlist network with 228 inputs and 110 outputs.

3.98.17.1. Executing ABC.

3.98.18. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3147, asynchronously reset by \reset
Extracted 485 gates and 694 wires to a netlist network with 207 inputs and 70 outputs.

3.98.18.1. Executing ABC.

3.98.19. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3152, asynchronously reset by \reset
Extracted 361 gates and 628 wires to a netlist network with 267 inputs and 157 outputs.

3.98.19.1. Executing ABC.

3.98.20. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3183, asynchronously reset by \reset
Extracted 182 gates and 256 wires to a netlist network with 74 inputs and 85 outputs.

3.98.20.1. Executing ABC.

3.98.21. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3200, asynchronously reset by \reset
Extracted 488 gates and 611 wires to a netlist network with 122 inputs and 71 outputs.

3.98.21.1. Executing ABC.

3.98.22. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by \P1.state, asynchronously reset by \reset
Extracted 649 gates and 796 wires to a netlist network with 146 inputs and 48 outputs.

3.98.22.1. Executing ABC.

3.98.23. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by \P3.state, asynchronously reset by \reset
Extracted 755 gates and 915 wires to a netlist network with 159 inputs and 56 outputs.

3.98.23.1. Executing ABC.

3.98.24. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3092, asynchronously reset by \reset
Extracted 105 gates and 143 wires to a netlist network with 37 inputs and 43 outputs.

3.98.24.1. Executing ABC.

3.98.25. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 1407 gates and 1793 wires to a netlist network with 384 inputs and 331 outputs.

3.98.25.1. Executing ABC.

yosys> abc -dff

3.99. Executing ABC pass (technology mapping using ABC).

3.99.1. Summary of detected clock domains:
  1013 cells in clk=\clock, en=$abc$34246$auto$opt_dff.cc:219:make_patterns_logic$2988, arst=\reset, srst={ }
  247 cells in clk=\clock, en=$abc$35369$auto$opt_dff.cc:219:make_patterns_logic$3057, arst=\reset, srst={ }
  256 cells in clk=\clock, en=$abc$35650$auto$opt_dff.cc:219:make_patterns_logic$3074, arst=\reset, srst={ }
  764 cells in clk=\clock, en=$abc$36878$auto$opt_dff.cc:219:make_patterns_logic$33510, arst=\reset, srst={ }
  969 cells in clk=\clock, en=$abc$37710$auto$opt_dff.cc:219:make_patterns_logic$32966, arst=\reset, srst={ }
  154 cells in clk=\clock, en=$abc$38503$auto$opt_dff.cc:219:make_patterns_logic$32624, arst=\reset, srst={ }
  867 cells in clk=\clock, en=$abc$38628$auto$opt_dff.cc:219:make_patterns_logic$3235, arst=\reset, srst={ }
  1027 cells in clk=\clock, en=$abc$46444$auto$opt_dff.cc:219:make_patterns_logic$3254, arst=\reset, srst={ }
  513 cells in clk=\clock, en=$abc$46444$auto$opt_dff.cc:219:make_patterns_logic$3273, arst=\reset, srst={ }
  238 cells in clk=\clock, en=$abc$46444$auto$opt_dff.cc:219:make_patterns_logic$3278, arst=\reset, srst={ }
  320 cells in clk=\clock, en=$abc$41178$auto$opt_dff.cc:219:make_patterns_logic$3309, arst=\reset, srst={ }
  245 cells in clk=\clock, en=$abc$41344$auto$opt_dff.cc:219:make_patterns_logic$3326, arst=\reset, srst={ }
  128 cells in clk=\clock, en=$abc$41526$auto$opt_dff.cc:219:make_patterns_logic$3218, arst=\reset, srst={ }
  814 cells in clk=\clock, en=$abc$41653$auto$opt_dff.cc:219:make_patterns_logic$3109, arst=\reset, srst={ }
  1035 cells in clk=\clock, en=$abc$46444$auto$opt_dff.cc:219:make_patterns_logic$3128, arst=\reset, srst={ }
  533 cells in clk=\clock, en=$abc$46444$auto$opt_dff.cc:219:make_patterns_logic$3147, arst=\reset, srst={ }
  367 cells in clk=\clock, en=$abc$46444$auto$opt_dff.cc:219:make_patterns_logic$3152, arst=\reset, srst={ }
  208 cells in clk=\clock, en=$abc$44331$auto$opt_dff.cc:219:make_patterns_logic$3183, arst=\reset, srst={ }
  120 cells in clk=\clock, en=$abc$46314$auto$opt_dff.cc:219:make_patterns_logic$3092, arst=\reset, srst={ }
  242 cells in clk=\clock, en=$abc$44491$auto$opt_dff.cc:219:make_patterns_logic$3200, arst=\reset, srst={ }
  2601 cells in clk=\clock, en=$abc$46444$lo000, arst=\reset, srst={ }
  961 cells in clk=\clock, en={ }, arst=\reset, srst={ }

3.99.2. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$34246$auto$opt_dff.cc:219:make_patterns_logic$2988, asynchronously reset by \reset
Extracted 995 gates and 1221 wires to a netlist network with 226 inputs and 169 outputs.

3.99.2.1. Executing ABC.

3.99.3. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$35369$auto$opt_dff.cc:219:make_patterns_logic$3057, asynchronously reset by \reset
Extracted 208 gates and 343 wires to a netlist network with 135 inputs and 90 outputs.

3.99.3.1. Executing ABC.

3.99.4. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$35650$auto$opt_dff.cc:219:make_patterns_logic$3074, asynchronously reset by \reset
Extracted 192 gates and 307 wires to a netlist network with 115 inputs and 65 outputs.

3.99.4.1. Executing ABC.

3.99.5. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$36878$auto$opt_dff.cc:219:make_patterns_logic$33510, asynchronously reset by \reset
Extracted 762 gates and 963 wires to a netlist network with 201 inputs and 85 outputs.

3.99.5.1. Executing ABC.

3.99.6. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$37710$auto$opt_dff.cc:219:make_patterns_logic$32966, asynchronously reset by \reset
Extracted 902 gates and 1193 wires to a netlist network with 291 inputs and 204 outputs.

3.99.6.1. Executing ABC.

3.99.7. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$38503$auto$opt_dff.cc:219:make_patterns_logic$32624, asynchronously reset by \reset
Extracted 150 gates and 229 wires to a netlist network with 79 inputs and 42 outputs.

3.99.7.1. Executing ABC.

3.99.8. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$38628$auto$opt_dff.cc:219:make_patterns_logic$3235, asynchronously reset by \reset
Extracted 820 gates and 1096 wires to a netlist network with 276 inputs and 119 outputs.

3.99.8.1. Executing ABC.

3.99.9. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$46444$auto$opt_dff.cc:219:make_patterns_logic$3254, asynchronously reset by \reset
Extracted 948 gates and 1183 wires to a netlist network with 235 inputs and 236 outputs.

3.99.9.1. Executing ABC.

3.99.10. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$46444$auto$opt_dff.cc:219:make_patterns_logic$3273, asynchronously reset by \reset
Extracted 513 gates and 682 wires to a netlist network with 169 inputs and 36 outputs.

3.99.10.1. Executing ABC.

3.99.11. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$46444$auto$opt_dff.cc:219:make_patterns_logic$3278, asynchronously reset by \reset
Extracted 175 gates and 342 wires to a netlist network with 167 inputs and 131 outputs.

3.99.11.1. Executing ABC.

3.99.12. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$41178$auto$opt_dff.cc:219:make_patterns_logic$3309, asynchronously reset by \reset
Extracted 300 gates and 443 wires to a netlist network with 143 inputs and 103 outputs.

3.99.12.1. Executing ABC.

3.99.13. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$41344$auto$opt_dff.cc:219:make_patterns_logic$3326, asynchronously reset by \reset
Extracted 181 gates and 295 wires to a netlist network with 114 inputs and 67 outputs.

3.99.13.1. Executing ABC.

3.99.14. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$41526$auto$opt_dff.cc:219:make_patterns_logic$3218, asynchronously reset by \reset
Extracted 125 gates and 180 wires to a netlist network with 55 inputs and 40 outputs.

3.99.14.1. Executing ABC.

3.99.15. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$41653$auto$opt_dff.cc:219:make_patterns_logic$3109, asynchronously reset by \reset
Extracted 767 gates and 1030 wires to a netlist network with 263 inputs and 112 outputs.

3.99.15.1. Executing ABC.

3.99.16. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$46444$auto$opt_dff.cc:219:make_patterns_logic$3128, asynchronously reset by \reset
Extracted 957 gates and 1190 wires to a netlist network with 233 inputs and 229 outputs.

3.99.16.1. Executing ABC.

3.99.17. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$46444$auto$opt_dff.cc:219:make_patterns_logic$3147, asynchronously reset by \reset
Extracted 533 gates and 716 wires to a netlist network with 183 inputs and 46 outputs.

3.99.17.1. Executing ABC.

3.99.18. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$46444$auto$opt_dff.cc:219:make_patterns_logic$3152, asynchronously reset by \reset
Extracted 335 gates and 605 wires to a netlist network with 270 inputs and 134 outputs.

3.99.18.1. Executing ABC.

3.99.19. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$44331$auto$opt_dff.cc:219:make_patterns_logic$3183, asynchronously reset by \reset
Extracted 206 gates and 325 wires to a netlist network with 119 inputs and 84 outputs.

3.99.19.1. Executing ABC.

3.99.20. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$46314$auto$opt_dff.cc:219:make_patterns_logic$3092, asynchronously reset by \reset
Extracted 116 gates and 166 wires to a netlist network with 50 inputs and 41 outputs.

3.99.20.1. Executing ABC.

3.99.21. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$44491$auto$opt_dff.cc:219:make_patterns_logic$3200, asynchronously reset by \reset
Extracted 178 gates and 293 wires to a netlist network with 115 inputs and 66 outputs.

3.99.21.1. Executing ABC.

3.99.22. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$46444$lo000, asynchronously reset by \reset
Extracted 2580 gates and 3094 wires to a netlist network with 514 inputs and 195 outputs.

3.99.22.1. Executing ABC.

3.99.23. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 862 gates and 1197 wires to a netlist network with 335 inputs and 328 outputs.

3.99.23.1. Executing ABC.

yosys> abc -dff

3.100. Executing ABC pass (technology mapping using ABC).

3.100.1. Summary of detected clock domains:
  233 cells in clk=\clock, en=$abc$48673$abc$35650$auto$opt_dff.cc:219:make_patterns_logic$3074, arst=\reset, srst={ }
  234 cells in clk=\clock, en=$abc$56818$abc$44491$auto$opt_dff.cc:219:make_patterns_logic$3200, arst=\reset, srst={ }
  190 cells in clk=\clock, en=$abc$50488$abc$38503$auto$opt_dff.cc:219:make_patterns_logic$32624, arst=\reset, srst={ }
  957 cells in clk=\clock, en=$abc$50649$abc$38628$auto$opt_dff.cc:219:make_patterns_logic$3235, arst=\reset, srst={ }
  275 cells in clk=\clock, en=$abc$53171$abc$41178$auto$opt_dff.cc:219:make_patterns_logic$3309, arst=\reset, srst={ }
  118 cells in clk=\clock, en=$abc$56715$abc$46314$auto$opt_dff.cc:219:make_patterns_logic$3092, arst=\reset, srst={ }
  1143 cells in clk=\clock, en=$abc$47420$abc$34246$auto$opt_dff.cc:219:make_patterns_logic$2988, arst=\reset, srst={ }
  525 cells in clk=\clock, en=$abc$55620$abc$46444$auto$opt_dff.cc:219:make_patterns_logic$3147, arst=\reset, srst={ }
  932 cells in clk=\clock, en=$abc$54606$abc$46444$auto$opt_dff.cc:219:make_patterns_logic$3128, arst=\reset, srst={ }
  137 cells in clk=\clock, en=$abc$53644$abc$41526$auto$opt_dff.cc:219:make_patterns_logic$3218, arst=\reset, srst={ }
  809 cells in clk=\clock, en=$abc$49571$abc$37710$auto$opt_dff.cc:219:make_patterns_logic$32966, arst=\reset, srst={ }
  238 cells in clk=\clock, en=$abc$53469$abc$41344$auto$opt_dff.cc:219:make_patterns_logic$3326, arst=\reset, srst={ }
  257 cells in clk=\clock, en=$abc$56504$abc$44331$auto$opt_dff.cc:219:make_patterns_logic$3183, arst=\reset, srst={ }
  848 cells in clk=\clock, en=$abc$51485$abc$46444$auto$opt_dff.cc:219:make_patterns_logic$3254, arst=\reset, srst={ }
  2651 cells in clk=\clock, en=$abc$59618$lo000, arst=\reset, srst={ }
  785 cells in clk=\clock, en=$abc$48843$abc$36878$auto$opt_dff.cc:219:make_patterns_logic$33510, arst=\reset, srst={ }
  947 cells in clk=\clock, en=$abc$53765$abc$41653$auto$opt_dff.cc:219:make_patterns_logic$3109, arst=\reset, srst={ }
  198 cells in clk=\clock, en=$abc$56138$abc$46444$auto$opt_dff.cc:219:make_patterns_logic$3152, arst=\reset, srst={ }
  173 cells in clk=\clock, en=$abc$48462$abc$35369$auto$opt_dff.cc:219:make_patterns_logic$3057, arst=\reset, srst={ }
  548 cells in clk=\clock, en=$abc$52469$abc$46444$auto$opt_dff.cc:219:make_patterns_logic$3273, arst=\reset, srst={ }
  404 cells in clk=\clock, en=$abc$52965$abc$46444$auto$opt_dff.cc:219:make_patterns_logic$3278, arst=\reset, srst={ }
  942 cells in clk=\clock, en={ }, arst=\reset, srst={ }

3.100.2. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$48673$abc$35650$auto$opt_dff.cc:219:make_patterns_logic$3074, asynchronously reset by \reset
Extracted 169 gates and 284 wires to a netlist network with 115 inputs and 65 outputs.

3.100.2.1. Executing ABC.

3.100.3. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$56818$abc$44491$auto$opt_dff.cc:219:make_patterns_logic$3200, asynchronously reset by \reset
Extracted 170 gates and 285 wires to a netlist network with 115 inputs and 64 outputs.

3.100.3.1. Executing ABC.

3.100.4. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$50488$abc$38503$auto$opt_dff.cc:219:make_patterns_logic$32624, asynchronously reset by \reset
Extracted 175 gates and 273 wires to a netlist network with 98 inputs and 49 outputs.

3.100.4.1. Executing ABC.

3.100.5. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$50649$abc$38628$auto$opt_dff.cc:219:make_patterns_logic$3235, asynchronously reset by \reset
Extracted 887 gates and 1154 wires to a netlist network with 267 inputs and 176 outputs.

3.100.5.1. Executing ABC.

3.100.6. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$53171$abc$41178$auto$opt_dff.cc:219:make_patterns_logic$3309, asynchronously reset by \reset
Extracted 273 gates and 400 wires to a netlist network with 127 inputs and 86 outputs.

3.100.6.1. Executing ABC.

3.100.7. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$56715$abc$46314$auto$opt_dff.cc:219:make_patterns_logic$3092, asynchronously reset by \reset
Extracted 107 gates and 155 wires to a netlist network with 48 inputs and 47 outputs.

3.100.7.1. Executing ABC.

3.100.8. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$47420$abc$34246$auto$opt_dff.cc:219:make_patterns_logic$2988, asynchronously reset by \reset
Extracted 1094 gates and 1375 wires to a netlist network with 281 inputs and 212 outputs.

3.100.8.1. Executing ABC.

3.100.9. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$55620$abc$46444$auto$opt_dff.cc:219:make_patterns_logic$3147, asynchronously reset by \reset
Extracted 515 gates and 720 wires to a netlist network with 205 inputs and 59 outputs.

3.100.9.1. Executing ABC.

3.100.10. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$54606$abc$46444$auto$opt_dff.cc:219:make_patterns_logic$3128, asynchronously reset by \reset
Extracted 890 gates and 1111 wires to a netlist network with 221 inputs and 157 outputs.

3.100.10.1. Executing ABC.

3.100.11. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$53644$abc$41526$auto$opt_dff.cc:219:make_patterns_logic$3218, asynchronously reset by \reset
Extracted 127 gates and 189 wires to a netlist network with 62 inputs and 48 outputs.

3.100.11.1. Executing ABC.

3.100.12. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$49571$abc$37710$auto$opt_dff.cc:219:make_patterns_logic$32966, asynchronously reset by \reset
Extracted 795 gates and 1019 wires to a netlist network with 224 inputs and 132 outputs.

3.100.12.1. Executing ABC.

3.100.13. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$53469$abc$41344$auto$opt_dff.cc:219:make_patterns_logic$3326, asynchronously reset by \reset
Extracted 174 gates and 288 wires to a netlist network with 114 inputs and 66 outputs.

3.100.13.1. Executing ABC.

3.100.14. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$56504$abc$44331$auto$opt_dff.cc:219:make_patterns_logic$3183, asynchronously reset by \reset
Extracted 237 gates and 377 wires to a netlist network with 140 inputs and 87 outputs.

3.100.14.1. Executing ABC.

3.100.15. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$51485$abc$46444$auto$opt_dff.cc:219:make_patterns_logic$3254, asynchronously reset by \reset
Extracted 821 gates and 1015 wires to a netlist network with 194 inputs and 129 outputs.

3.100.15.1. Executing ABC.

3.100.16. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$59618$lo000, asynchronously reset by \reset
Extracted 2607 gates and 3147 wires to a netlist network with 539 inputs and 206 outputs.

3.100.16.1. Executing ABC.

3.100.17. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$48843$abc$36878$auto$opt_dff.cc:219:make_patterns_logic$33510, asynchronously reset by \reset
Extracted 764 gates and 963 wires to a netlist network with 199 inputs and 123 outputs.

3.100.17.1. Executing ABC.

3.100.18. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$53765$abc$41653$auto$opt_dff.cc:219:make_patterns_logic$3109, asynchronously reset by \reset
Extracted 889 gates and 1155 wires to a netlist network with 266 inputs and 147 outputs.

3.100.18.1. Executing ABC.

3.100.19. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$56138$abc$46444$auto$opt_dff.cc:219:make_patterns_logic$3152, asynchronously reset by \reset
Extracted 166 gates and 300 wires to a netlist network with 134 inputs and 130 outputs.

3.100.19.1. Executing ABC.

3.100.20. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$48462$abc$35369$auto$opt_dff.cc:219:make_patterns_logic$3057, asynchronously reset by \reset
Extracted 155 gates and 240 wires to a netlist network with 85 inputs and 67 outputs.

3.100.20.1. Executing ABC.

3.100.21. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$52469$abc$46444$auto$opt_dff.cc:219:make_patterns_logic$3273, asynchronously reset by \reset
Extracted 528 gates and 748 wires to a netlist network with 220 inputs and 67 outputs.

3.100.21.1. Executing ABC.

3.100.22. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$52965$abc$46444$auto$opt_dff.cc:219:make_patterns_logic$3278, asynchronously reset by \reset
Extracted 341 gates and 645 wires to a netlist network with 304 inputs and 131 outputs.

3.100.22.1. Executing ABC.

3.100.23. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 843 gates and 1173 wires to a netlist network with 330 inputs and 327 outputs.

3.100.23.1. Executing ABC.

yosys> abc -dff

3.101. Executing ABC pass (technology mapping using ABC).

3.101.1. Summary of detected clock domains:
  235 cells in clk=\clock, en=$abc$60452$abc$48673$abc$35650$auto$opt_dff.cc:219:make_patterns_logic$3074, arst=\reset, srst={ }
  234 cells in clk=\clock, en=$abc$60620$abc$56818$abc$44491$auto$opt_dff.cc:219:make_patterns_logic$3200, arst=\reset, srst={ }
  144 cells in clk=\clock, en=$abc$60791$abc$50488$abc$38503$auto$opt_dff.cc:219:make_patterns_logic$32624, arst=\reset, srst={ }
  261 cells in clk=\clock, en=$abc$71426$abc$48462$abc$35369$auto$opt_dff.cc:219:make_patterns_logic$3057, arst=\reset, srst={ }
  400 cells in clk=\clock, en=$abc$72196$abc$52965$abc$46444$auto$opt_dff.cc:219:make_patterns_logic$3278, arst=\reset, srst={ }
  199 cells in clk=\clock, en=$abc$71229$abc$56138$abc$46444$auto$opt_dff.cc:219:make_patterns_logic$3152, arst=\reset, srst={ }
  319 cells in clk=\clock, en=$abc$61817$abc$53171$abc$41178$auto$opt_dff.cc:219:make_patterns_logic$3309, arst=\reset, srst={ }
  130 cells in clk=\clock, en=$abc$62091$abc$56715$abc$46314$auto$opt_dff.cc:219:make_patterns_logic$3092, arst=\reset, srst={ }
  1109 cells in clk=\clock, en=$abc$62200$abc$47420$abc$34246$auto$opt_dff.cc:219:make_patterns_logic$2988, arst=\reset, srst={ }
  512 cells in clk=\clock, en=$abc$63316$abc$55620$abc$46444$auto$opt_dff.cc:219:make_patterns_logic$3147, arst=\reset, srst={ }
  136 cells in clk=\clock, en=$abc$64749$abc$53644$abc$41526$auto$opt_dff.cc:219:make_patterns_logic$3218, arst=\reset, srst={ }
  946 cells in clk=\clock, en=$abc$60953$abc$50649$abc$38628$auto$opt_dff.cc:219:make_patterns_logic$3235, arst=\reset, srst={ }
  819 cells in clk=\clock, en=$abc$64886$abc$49571$abc$37710$auto$opt_dff.cc:219:make_patterns_logic$32966, arst=\reset, srst={ }
  240 cells in clk=\clock, en=$abc$65689$abc$53469$abc$41344$auto$opt_dff.cc:219:make_patterns_logic$3326, arst=\reset, srst={ }
  565 cells in clk=\clock, en=$abc$71606$abc$52469$abc$46444$auto$opt_dff.cc:219:make_patterns_logic$3273, arst=\reset, srst={ }
  213 cells in clk=\clock, en=$abc$65862$abc$56504$abc$44331$auto$opt_dff.cc:219:make_patterns_logic$3183, arst=\reset, srst={ }
  923 cells in clk=\clock, en=$abc$63852$abc$54606$abc$46444$auto$opt_dff.cc:219:make_patterns_logic$3128, arst=\reset, srst={ }
  851 cells in clk=\clock, en=$abc$66100$abc$51485$abc$46444$auto$opt_dff.cc:219:make_patterns_logic$3254, arst=\reset, srst={ }
  2579 cells in clk=\clock, en=$abc$72567$lo000, arst=\reset, srst={ }
  821 cells in clk=\clock, en=$abc$69546$abc$48843$abc$36878$auto$opt_dff.cc:219:make_patterns_logic$33510, arst=\reset, srst={ }
  927 cells in clk=\clock, en=$abc$70344$abc$53765$abc$41653$auto$opt_dff.cc:219:make_patterns_logic$3109, arst=\reset, srst={ }
  930 cells in clk=\clock, en={ }, arst=\reset, srst={ }

3.101.2. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$60452$abc$48673$abc$35650$auto$opt_dff.cc:219:make_patterns_logic$3074, asynchronously reset by \reset
Extracted 171 gates and 287 wires to a netlist network with 116 inputs and 69 outputs.

3.101.2.1. Executing ABC.

3.101.3. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$60620$abc$56818$abc$44491$auto$opt_dff.cc:219:make_patterns_logic$3200, asynchronously reset by \reset
Extracted 170 gates and 285 wires to a netlist network with 115 inputs and 64 outputs.

3.101.3.1. Executing ABC.

3.101.4. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$60791$abc$50488$abc$38503$auto$opt_dff.cc:219:make_patterns_logic$32624, asynchronously reset by \reset
Extracted 134 gates and 216 wires to a netlist network with 82 inputs and 38 outputs.

3.101.4.1. Executing ABC.

3.101.5. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$71426$abc$48462$abc$35369$auto$opt_dff.cc:219:make_patterns_logic$3057, asynchronously reset by \reset
Extracted 222 gates and 356 wires to a netlist network with 134 inputs and 88 outputs.

3.101.5.1. Executing ABC.

3.101.6. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$72196$abc$52965$abc$46444$auto$opt_dff.cc:219:make_patterns_logic$3278, asynchronously reset by \reset
Extracted 337 gates and 640 wires to a netlist network with 303 inputs and 130 outputs.

3.101.6.1. Executing ABC.

3.101.7. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$71229$abc$56138$abc$46444$auto$opt_dff.cc:219:make_patterns_logic$3152, asynchronously reset by \reset
Extracted 167 gates and 301 wires to a netlist network with 134 inputs and 131 outputs.

3.101.7.1. Executing ABC.

3.101.8. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$61817$abc$53171$abc$41178$auto$opt_dff.cc:219:make_patterns_logic$3309, asynchronously reset by \reset
Extracted 299 gates and 443 wires to a netlist network with 144 inputs and 96 outputs.

3.101.8.1. Executing ABC.

3.101.9. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$62091$abc$56715$abc$46314$auto$opt_dff.cc:219:make_patterns_logic$3092, asynchronously reset by \reset
Extracted 119 gates and 178 wires to a netlist network with 59 inputs and 47 outputs.

3.101.9.1. Executing ABC.

3.101.10. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$62200$abc$47420$abc$34246$auto$opt_dff.cc:219:make_patterns_logic$2988, asynchronously reset by \reset
Extracted 1072 gates and 1352 wires to a netlist network with 280 inputs and 184 outputs.

3.101.10.1. Executing ABC.

3.101.11. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$63316$abc$55620$abc$46444$auto$opt_dff.cc:219:make_patterns_logic$3147, asynchronously reset by \reset
Extracted 499 gates and 699 wires to a netlist network with 200 inputs and 52 outputs.

3.101.11.1. Executing ABC.

3.101.12. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$64749$abc$53644$abc$41526$auto$opt_dff.cc:219:make_patterns_logic$3218, asynchronously reset by \reset
Extracted 128 gates and 187 wires to a netlist network with 59 inputs and 44 outputs.

3.101.12.1. Executing ABC.

3.101.13. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$60953$abc$50649$abc$38628$auto$opt_dff.cc:219:make_patterns_logic$3235, asynchronously reset by \reset
Extracted 861 gates and 1131 wires to a netlist network with 270 inputs and 193 outputs.

3.101.13.1. Executing ABC.

3.101.14. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$64886$abc$49571$abc$37710$auto$opt_dff.cc:219:make_patterns_logic$32966, asynchronously reset by \reset
Extracted 797 gates and 1022 wires to a netlist network with 225 inputs and 140 outputs.

3.101.14.1. Executing ABC.

3.101.15. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$65689$abc$53469$abc$41344$auto$opt_dff.cc:219:make_patterns_logic$3326, asynchronously reset by \reset
Extracted 176 gates and 294 wires to a netlist network with 118 inputs and 68 outputs.

3.101.15.1. Executing ABC.

3.101.16. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$71606$abc$52469$abc$46444$auto$opt_dff.cc:219:make_patterns_logic$3273, asynchronously reset by \reset
Extracted 559 gates and 764 wires to a netlist network with 205 inputs and 47 outputs.

3.101.16.1. Executing ABC.

3.101.17. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$65862$abc$56504$abc$44331$auto$opt_dff.cc:219:make_patterns_logic$3183, asynchronously reset by \reset
Extracted 211 gates and 326 wires to a netlist network with 115 inputs and 84 outputs.

3.101.17.1. Executing ABC.

3.101.18. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$63852$abc$54606$abc$46444$auto$opt_dff.cc:219:make_patterns_logic$3128, asynchronously reset by \reset
Extracted 876 gates and 1102 wires to a netlist network with 226 inputs and 167 outputs.

3.101.18.1. Executing ABC.

3.101.19. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$66100$abc$51485$abc$46444$auto$opt_dff.cc:219:make_patterns_logic$3254, asynchronously reset by \reset
Extracted 821 gates and 1024 wires to a netlist network with 203 inputs and 140 outputs.

3.101.19.1. Executing ABC.

3.101.20. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$72567$lo000, asynchronously reset by \reset
Extracted 2561 gates and 3061 wires to a netlist network with 500 inputs and 186 outputs.

3.101.20.1. Executing ABC.

3.101.21. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$69546$abc$48843$abc$36878$auto$opt_dff.cc:219:make_patterns_logic$33510, asynchronously reset by \reset
Extracted 793 gates and 1000 wires to a netlist network with 207 inputs and 126 outputs.

3.101.21.1. Executing ABC.

3.101.22. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$70344$abc$53765$abc$41653$auto$opt_dff.cc:219:make_patterns_logic$3109, asynchronously reset by \reset
Extracted 872 gates and 1129 wires to a netlist network with 257 inputs and 147 outputs.

3.101.22.1. Executing ABC.

3.101.23. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 831 gates and 1160 wires to a netlist network with 329 inputs and 326 outputs.

3.101.23.1. Executing ABC.

yosys> opt_ffinv

3.102. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt -sat

3.103. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.103.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~505 debug messages>

yosys> opt_merge -nomux

3.103.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
<suppressed ~648 debug messages>
Removed a total of 216 cells.

yosys> opt_muxtree

3.103.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.103.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.103.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.103.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.103.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 2 unused cells and 60406 unused wires.
<suppressed ~30 debug messages>

yosys> opt_expr

3.103.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

3.103.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.103.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.103.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.103.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.103.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.103.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..

yosys> opt_expr

3.103.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

3.103.16. Finished OPT passes. (There is nothing left to do.)

yosys> bmuxmap

3.104. Executing BMUXMAP pass.

yosys> demuxmap

3.105. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> abc -script /home/users/temp_dir/yosys_2hN08G/abc_tmp_1.scr

3.106. Executing ABC pass (technology mapping using ABC).

3.106.1. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Extracted 11646 gates and 12884 wires to a netlist network with 1237 inputs and 1387 outputs.

3.106.1.1. Executing ABC.
DE:   #PIs = 1237  #Luts =  3804  Max Lvl =  37  Avg Lvl =   9.43  [   1.51 sec. at Pass 0]
DE:   #PIs = 1237  #Luts =  2976  Max Lvl =  37  Avg Lvl =   9.37  [  44.01 sec. at Pass 1]
DE:   #PIs = 1237  #Luts =  2922  Max Lvl =  33  Avg Lvl =   9.11  [   6.19 sec. at Pass 2]
DE:   #PIs = 1237  #Luts =  2836  Max Lvl =  31  Avg Lvl =   9.00  [   9.70 sec. at Pass 3]
DE:   #PIs = 1237  #Luts =  2805  Max Lvl =  31  Avg Lvl =   8.66  [  14.97 sec. at Pass 4]
DE:   #PIs = 1237  #Luts =  2746  Max Lvl =  30  Avg Lvl =   8.45  [  11.23 sec. at Pass 5]
DE:   #PIs = 1237  #Luts =  2738  Max Lvl =  31  Avg Lvl =   8.55  [   8.53 sec. at Pass 6]
DE:   #PIs = 1237  #Luts =  2695  Max Lvl =  25  Avg Lvl =   8.36  [  13.58 sec. at Pass 7]
DE:   #PIs = 1237  #Luts =  2682  Max Lvl =  24  Avg Lvl =   8.35  [   7.38 sec. at Pass 8]
DE:   #PIs = 1237  #Luts =  2657  Max Lvl =  26  Avg Lvl =   8.44  [  10.47 sec. at Pass 9]
DE:   #PIs = 1237  #Luts =  2640  Max Lvl =  24  Avg Lvl =   8.45  [   8.09 sec. at Pass 10]
DE:   #PIs = 1237  #Luts =  2601  Max Lvl =  24  Avg Lvl =   8.40  [   9.71 sec. at Pass 11]
DE:   #PIs = 1237  #Luts =  2601  Max Lvl =  24  Avg Lvl =   8.40  [   7.94 sec. at Pass 12]
DE:   #PIs = 1237  #Luts =  2582  Max Lvl =  21  Avg Lvl =   7.88  [  12.64 sec. at Pass 13]
DE:   #PIs = 1237  #Luts =  2566  Max Lvl =  23  Avg Lvl =   8.45  [   6.94 sec. at Pass 14]
DE:   #PIs = 1237  #Luts =  2547  Max Lvl =  25  Avg Lvl =   8.67  [  11.14 sec. at Pass 15]
DE:   #PIs = 1237  #Luts =  2547  Max Lvl =  25  Avg Lvl =   8.67  [   2.27 sec. at Pass 16]

yosys> opt_expr

3.107. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

yosys> opt_merge -nomux

3.108. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
<suppressed ~18 debug messages>
Removed a total of 6 cells.

yosys> opt_muxtree

3.109. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.110. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.111. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_share

3.112. Executing OPT_SHARE pass.

yosys> opt_dff

3.113. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.114. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 12457 unused wires.
<suppressed ~9 debug messages>

yosys> opt_expr

3.115. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
MAX OPT ITERATION = 1

yosys> opt_ffinv

3.116. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 1 inverters.

yosys> stat

3.117. Printing statistics.

=== b22 ===

   Number of wires:               2334
   Number of wire bits:           5408
   Number of public wires:          29
   Number of public wire bits:     513
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3896
     $_DFFE_PP0P_                  502
     $_DFF_PP0_                    106
     $_DFF_PP1_                      1
     $lut                         2470
     adder_carry                   817


yosys> shregmap -minlen 8 -maxlen 20

3.118. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.119. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.120. Printing statistics.

=== b22 ===

   Number of wires:               2334
   Number of wire bits:           5408
   Number of public wires:          29
   Number of public wire bits:     513
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3896
     $_DFFE_PP0P_                  502
     $_DFF_PP0_                    106
     $_DFF_PP1_                      1
     $lut                         2470
     adder_carry                   817


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.121. Executing TECHMAP pass (map to technology primitives).

3.121.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.121.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.121.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using template \$_DFF_PP1_ for cells of type $_DFF_PP1_.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~3824 debug messages>

yosys> opt_expr -mux_undef

3.122. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~50638 debug messages>

yosys> simplemap

3.123. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.124. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

yosys> opt_merge

3.125. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
<suppressed ~25410 debug messages>
Removed a total of 8470 cells.

yosys> opt_dff -nodffe -nosdff

3.126. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.127. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 8604 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.128. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.128.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
<suppressed ~1997 debug messages>

yosys> opt_merge -nomux

3.128.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
<suppressed ~54 debug messages>
Removed a total of 18 cells.

yosys> opt_muxtree

3.128.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.128.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.128.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.128.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.128.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 513 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.128.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

3.128.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.128.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.128.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.128.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.128.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.128.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..

yosys> opt_expr

3.128.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

3.128.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /home/users/temp_dir/yosys_2hN08G/abc_tmp_2.scr

3.129. Executing ABC pass (technology mapping using ABC).

3.129.1. Extracting gate netlist of module `\b22' to `<abc-temp-dir>/input.blif'..
Extracted 8538 gates and 9771 wires to a netlist network with 1231 inputs and 1311 outputs.

3.129.1.1. Executing ABC.
DE:   #PIs = 1231  #Luts =  2484  Max Lvl =  27  Avg Lvl =   8.64  [   0.97 sec. at Pass 0]
DE:   #PIs = 1231  #Luts =  2463  Max Lvl =  23  Avg Lvl =   8.53  [  25.30 sec. at Pass 1]
DE:   #PIs = 1231  #Luts =  2431  Max Lvl =  23  Avg Lvl =   7.75  [   5.07 sec. at Pass 2]
DE:   #PIs = 1231  #Luts =  2414  Max Lvl =  21  Avg Lvl =   7.21  [   6.37 sec. at Pass 3]
DE:   #PIs = 1231  #Luts =  2405  Max Lvl =  25  Avg Lvl =   7.89  [   6.17 sec. at Pass 4]
DE:   #PIs = 1231  #Luts =  2391  Max Lvl =  25  Avg Lvl =   8.08  [   8.42 sec. at Pass 5]
DE:   #PIs = 1231  #Luts =  2382  Max Lvl =  26  Avg Lvl =   7.65  [   6.38 sec. at Pass 6]
DE:   #PIs = 1231  #Luts =  2363  Max Lvl =  21  Avg Lvl =   7.61  [   8.72 sec. at Pass 7]
DE:   #PIs = 1231  #Luts =  2363  Max Lvl =  21  Avg Lvl =   7.61  [   4.99 sec. at Pass 8]
DE:   #PIs = 1231  #Luts =  2355  Max Lvl =  20  Avg Lvl =   7.55  [   7.31 sec. at Pass 9]
DE:   #PIs = 1231  #Luts =  2351  Max Lvl =  21  Avg Lvl =   7.71  [   5.76 sec. at Pass 10]
DE:   #PIs = 1231  #Luts =  2350  Max Lvl =  22  Avg Lvl =   7.96  [   8.26 sec. at Pass 11]
DE:   #PIs = 1231  #Luts =  2345  Max Lvl =  21  Avg Lvl =   7.38  [   6.12 sec. at Pass 12]
DE:   #PIs = 1231  #Luts =  2336  Max Lvl =  23  Avg Lvl =   7.91  [   9.65 sec. at Pass 13]
DE:   #PIs = 1231  #Luts =  2336  Max Lvl =  23  Avg Lvl =   7.91  [   7.24 sec. at Pass 14]
DE:   #PIs = 1231  #Luts =  2336  Max Lvl =  23  Avg Lvl =   7.91  [  11.25 sec. at Pass 15]
DE:   #PIs = 1231  #Luts =  2336  Max Lvl =  23  Avg Lvl =   7.91  [   1.99 sec. at Pass 16]

yosys> opt_expr

3.130. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.

yosys> opt_merge -nomux

3.131. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.132. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b22..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.133. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b22.
Performed a total of 0 changes.

yosys> opt_merge

3.134. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b22'.
Removed a total of 0 cells.

yosys> opt_share

3.135. Executing OPT_SHARE pass.

yosys> opt_dff

3.136. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.137. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 8250 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.138. Executing OPT_EXPR pass (perform const folding).
Optimizing module b22.
MAX OPT ITERATION = 1

yosys> hierarchy -check

3.139. Executing HIERARCHY pass (managing design hierarchy).

3.139.1. Analyzing design hierarchy..
Top module:  \b22

3.139.2. Analyzing design hierarchy..
Top module:  \b22
Removed 0 unused modules.

yosys> stat

3.140. Printing statistics.

=== b22 ===

   Number of wires:               2199
   Number of wire bits:           5273
   Number of public wires:          29
   Number of public wire bits:     513
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3762
     $lut                         2336
     adder_carry                   817
     dffsre                        609


yosys> opt_clean -purge

3.141. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b22..
Removed 0 unused cells and 10 unused wires.
<suppressed ~10 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.142. Executing Verilog backend.
Dumping module `\b22'.

Warnings: 5 unique messages, 6 total
End of script. Logfile hash: 07abedfd3a, CPU: user 113.23s system 2.97s, MEM: 168.39 MB peak
Yosys 0.18+10 (git sha1 7a7a25778, gcc 9.1.0 -fPIC -Os)
Time spent: 95% 6x abc (2293 sec), 1% 31x opt_dff (43 sec), ...
real 555.60
user 2218.79
sys 177.73
