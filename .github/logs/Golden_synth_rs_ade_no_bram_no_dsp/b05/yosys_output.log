
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.37
 Yosys 0.17+76 (git sha1 2073f9d19, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Apr22_SW_Release, released at Thu Apr 28 20:08:21 2022.

yosys> verilog_defaults -add -I.

yosys> read -vhdl b05.vhd

yosys> verific -vhdl b05.vhd

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Apr22_SW_Release, released at Thu Apr 28 20:08:21 2022.
VERIFIC-INFO [VHDL-1504] default VHDL library search path is now "/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008"
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'b05.vhd'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.standard' from file '/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/standard.vdb'
VERIFIC-INFO [VHDL-1012] b05.vhd:1: analyzing entity 'b05'
VERIFIC-INFO [VHDL-1010] b05.vhd:12: analyzing architecture 'behav'

yosys> synth_rs -top b05 -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.53

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\RS_DSP2_MULT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_sim'.
Generating RTLIL representation for module `\dsp_t1_20x18x64'.
Generating RTLIL representation for module `\dsp_t1_10x9x32'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top b05

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VHDL-1067] b05.vhd:1: processing 'b05(BEHAV)'
VERIFIC-WARNING [VHDL-1840] b05.vhd:242: latch inferred for net 'TN[8]'
Importing module b05.

3.3.1. Analyzing design hierarchy..
Top module:  \b05

3.3.2. Analyzing design hierarchy..
Top module:  \b05
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.4.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.4.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.
<suppressed ~26 debug messages>

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..
Removed 5 unused cells and 54 unused wires.
<suppressed ~28 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module b05...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b05..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $verific$i361$b05.vhd:284$340: \FLAG -> 1'0
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b05.
  Optimizing cells in module \b05.
Performed a total of 1 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $verific$EN_DISP_reg$b05.vhd:308$366 ($aldff) from module b05.
Changing const-value async load to async reset on $verific$TEMP_reg$b05.vhd:308$369 ($aldff) from module b05.
Changing const-value async load to async reset on $verific$STATO_reg$b05.vhd:308$364 ($aldff) from module b05.
Changing const-value async load to async reset on $verific$RES_DISP_reg$b05.vhd:308$365 ($aldff) from module b05.
Changing const-value async load to async reset on $verific$NUM_reg$b05.vhd:308$367 ($aldff) from module b05.
Changing const-value async load to async reset on $verific$MAX_reg$b05.vhd:308$370 ($aldff) from module b05.
Changing const-value async load to async reset on $verific$MAR_reg$b05.vhd:308$368 ($aldff) from module b05.
Changing const-value async load to async reset on $verific$FLAG_reg$b05.vhd:308$371 ($aldff) from module b05.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b05..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b05.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.

3.11.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b05..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b05.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.

3.13.9. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 10) from port Y of cell b05.$verific$sub_4$b05.vhd:60$175 ($sub).
Removed top 1 bits (of 10) from port A of cell b05.$verific$sub_4$b05.vhd:60$175 ($sub).
Removed top 1 bits (of 10) from port B of cell b05.$verific$sub_4$b05.vhd:60$175 ($sub).
Removed top 1 bits (of 9) from port A of cell b05.$verific$LessThan_6$b05.vhd:61$178 ($lt).
Removed top 1 bits (of 10) from port Y of cell b05.$verific$sub_19$b05.vhd:73$186 ($sub).
Removed top 1 bits (of 10) from port A of cell b05.$verific$sub_19$b05.vhd:73$186 ($sub).
Removed top 1 bits (of 10) from port B of cell b05.$verific$sub_19$b05.vhd:73$186 ($sub).
Removed top 1 bits (of 9) from port A of cell b05.$verific$LessThan_21$b05.vhd:74$189 ($lt).
Removed top 1 bits (of 9) from port A of cell b05.$verific$LessThan_39$b05.vhd:101$201 ($lt).
Removed top 1 bits (of 6) from port A of cell b05.$verific$unary_minus_41$b05.vhd:103$202 ($neg).
Removed top 1 bits (of 8) from port B of cell b05.$verific$LessThan_47$b05.vhd:108$212 ($lt).
Removed top 1 bits (of 8) from port B of cell b05.$verific$sub_49$b05.vhd:110$213 ($sub).
Removed top 1 bits (of 7) from mux cell b05.$verific$mux_52$b05.vhd:113$216 ($mux).
Removed top 1 bits (of 8) from port B of cell b05.$verific$LessThan_54$b05.vhd:114$218 ($lt).
Removed top 2 bits (of 9) from port B of cell b05.$verific$sub_56$b05.vhd:116$220 ($sub).
Removed top 1 bits (of 8) from port B of cell b05.$verific$LessThan_58$b05.vhd:118$222 ($lt).
Removed top 2 bits (of 9) from port B of cell b05.$verific$sub_60$b05.vhd:120$224 ($sub).
Removed top 1 bits (of 8) from port B of cell b05.$verific$LessThan_62$b05.vhd:122$226 ($lt).
Removed top 2 bits (of 9) from port B of cell b05.$verific$sub_64$b05.vhd:124$228 ($sub).
Removed top 1 bits (of 8) from port B of cell b05.$verific$LessThan_66$b05.vhd:126$230 ($lt).
Removed top 3 bits (of 9) from port B of cell b05.$verific$sub_68$b05.vhd:128$232 ($sub).
Removed top 1 bits (of 8) from port B of cell b05.$verific$LessThan_70$b05.vhd:130$234 ($lt).
Removed top 3 bits (of 9) from port B of cell b05.$verific$sub_72$b05.vhd:132$236 ($sub).
Removed top 1 bits (of 8) from port B of cell b05.$verific$LessThan_74$b05.vhd:134$238 ($lt).
Removed top 3 bits (of 9) from port B of cell b05.$verific$sub_76$b05.vhd:136$240 ($sub).
Removed top 1 bits (of 8) from port B of cell b05.$verific$LessThan_78$b05.vhd:138$242 ($lt).
Removed top 4 bits (of 9) from port B of cell b05.$verific$sub_80$b05.vhd:140$244 ($sub).
Removed top 1 bits (of 8) from port B of cell b05.$verific$LessThan_82$b05.vhd:142$246 ($lt).
Removed top 4 bits (of 9) from port B of cell b05.$verific$sub_84$b05.vhd:144$248 ($sub).
Removed top 1 bits (of 8) from port B of cell b05.$verific$LessThan_86$b05.vhd:146$250 ($lt).
Removed top 5 bits (of 9) from port B of cell b05.$verific$sub_88$b05.vhd:148$251 ($sub).
Removed top 1 bits (of 7) from mux cell b05.$verific$mux_91$b05.vhd:151$253 ($mux).
Removed top 1 bits (of 9) from port B of cell b05.$verific$LessThan_109$b05.vhd:160$271 ($lt).
Removed top 1 bits (of 9) from port B of cell b05.$verific$LessThan_111$b05.vhd:163$272 ($lt).
Removed top 1 bits (of 9) from port B of cell b05.$verific$LessThan_113$b05.vhd:166$273 ($lt).
Removed top 1 bits (of 9) from port B of cell b05.$verific$LessThan_115$b05.vhd:169$274 ($lt).
Removed top 1 bits (of 9) from port B of cell b05.$verific$LessThan_117$b05.vhd:172$275 ($lt).
Removed top 1 bits (of 9) from port B of cell b05.$verific$LessThan_119$b05.vhd:175$276 ($lt).
Removed top 1 bits (of 9) from port B of cell b05.$verific$LessThan_121$b05.vhd:178$277 ($lt).
Removed top 1 bits (of 9) from port B of cell b05.$verific$LessThan_123$b05.vhd:181$278 ($lt).
Removed top 1 bits (of 9) from port B of cell b05.$verific$LessThan_125$b05.vhd:184$279 ($lt).
Removed top 1 bits (of 7) from mux cell b05.$verific$mux_128$b05.vhd:188$280 ($mux).
Removed top 1 bits (of 5) from port A of cell b05.$verific$LessThan_137$b05.vhd:197$289 ($lt).
Removed top 1 bits (of 6) from port A of cell b05.$verific$sub_139$b05.vhd:199$290 ($sub).
Removed top 2 bits (of 6) from port B of cell b05.$verific$sub_139$b05.vhd:199$290 ($sub).
Removed top 1 bits (of 7) from mux cell b05.$verific$mux_142$b05.vhd:202$291 ($mux).
Removed top 1 bits (of 6) from port B of cell b05.$verific$LessThan_144$b05.vhd:203$293 ($lt).
Removed top 1 bits (of 6) from port B of cell b05.$verific$LessThan_146$b05.vhd:206$294 ($lt).
Removed top 1 bits (of 6) from port B of cell b05.$verific$LessThan_148$b05.vhd:209$295 ($lt).
Removed top 1 bits (of 6) from port B of cell b05.$verific$LessThan_150$b05.vhd:212$296 ($lt).
Removed top 1 bits (of 6) from port B of cell b05.$verific$LessThan_152$b05.vhd:215$297 ($lt).
Removed top 1 bits (of 6) from port B of cell b05.$verific$LessThan_154$b05.vhd:218$298 ($lt).
Removed top 1 bits (of 6) from port B of cell b05.$verific$LessThan_156$b05.vhd:221$299 ($lt).
Removed top 1 bits (of 6) from port B of cell b05.$verific$LessThan_158$b05.vhd:224$300 ($lt).
Removed top 1 bits (of 6) from port B of cell b05.$verific$LessThan_160$b05.vhd:227$301 ($lt).
Removed top 1 bits (of 7) from mux cell b05.$verific$mux_163$b05.vhd:231$303 ($mux).
Removed top 4 bits (of 5) from port B of cell b05.$verific$add_358$b05.vhd:283$337 ($add).
Removed top 1 bits (of 6) from port Y of cell b05.$verific$add_358$b05.vhd:283$337 ($add).
Removed top 4 bits (of 5) from port B of cell b05.$verific$add_376$b05.vhd:304$350 ($add).
Removed top 1 bits (of 6) from port Y of cell b05.$verific$add_376$b05.vhd:304$350 ($add).
Removed top 1 bits (of 2) from wire b05.$verific$n1549$149.
Removed top 1 bits (of 7) from wire b05.$verific$n239$70.
Removed top 1 bits (of 7) from wire b05.$verific$n525$100.
Removed top 1 bits (of 7) from wire b05.$verific$n776$118.
Removed top 1 bits (of 7) from wire b05.$verific$n879$129.
Removed top 1 bits (of 7) from wire b05.$verific$n983$131.

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..
Removed 0 unused cells and 10 unused wires.
<suppressed ~1 debug messages>

yosys> alumacc

3.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module b05:
  creating $macc model for $verific$add_358$b05.vhd:283$337 ($add).
  creating $macc model for $verific$add_376$b05.vhd:304$350 ($add).
  creating $macc model for $verific$sub_139$b05.vhd:199$290 ($sub).
  creating $macc model for $verific$sub_19$b05.vhd:73$186 ($sub).
  creating $macc model for $verific$sub_4$b05.vhd:60$175 ($sub).
  creating $macc model for $verific$sub_49$b05.vhd:110$213 ($sub).
  creating $macc model for $verific$sub_56$b05.vhd:116$220 ($sub).
  creating $macc model for $verific$sub_60$b05.vhd:120$224 ($sub).
  creating $macc model for $verific$sub_64$b05.vhd:124$228 ($sub).
  creating $macc model for $verific$sub_68$b05.vhd:128$232 ($sub).
  creating $macc model for $verific$sub_72$b05.vhd:132$236 ($sub).
  creating $macc model for $verific$sub_76$b05.vhd:136$240 ($sub).
  creating $macc model for $verific$sub_80$b05.vhd:140$244 ($sub).
  creating $macc model for $verific$sub_84$b05.vhd:144$248 ($sub).
  creating $macc model for $verific$sub_88$b05.vhd:148$251 ($sub).
  creating $macc model for $verific$unary_minus_41$b05.vhd:103$202 ($neg).
  creating $alu model for $macc $verific$unary_minus_41$b05.vhd:103$202.
  creating $alu model for $macc $verific$sub_88$b05.vhd:148$251.
  creating $alu model for $macc $verific$sub_84$b05.vhd:144$248.
  creating $alu model for $macc $verific$sub_80$b05.vhd:140$244.
  creating $alu model for $macc $verific$sub_76$b05.vhd:136$240.
  creating $alu model for $macc $verific$sub_72$b05.vhd:132$236.
  creating $alu model for $macc $verific$sub_68$b05.vhd:128$232.
  creating $alu model for $macc $verific$sub_64$b05.vhd:124$228.
  creating $alu model for $macc $verific$sub_60$b05.vhd:120$224.
  creating $alu model for $macc $verific$sub_56$b05.vhd:116$220.
  creating $alu model for $macc $verific$sub_49$b05.vhd:110$213.
  creating $alu model for $macc $verific$sub_4$b05.vhd:60$175.
  creating $alu model for $macc $verific$sub_19$b05.vhd:73$186.
  creating $alu model for $macc $verific$sub_139$b05.vhd:199$290.
  creating $alu model for $macc $verific$add_376$b05.vhd:304$350.
  creating $alu model for $macc $verific$add_358$b05.vhd:283$337.
  creating $alu model for $verific$LessThan_109$b05.vhd:160$271 ($lt): new $alu
  creating $alu model for $verific$LessThan_111$b05.vhd:163$272 ($lt): new $alu
  creating $alu model for $verific$LessThan_113$b05.vhd:166$273 ($lt): new $alu
  creating $alu model for $verific$LessThan_115$b05.vhd:169$274 ($lt): new $alu
  creating $alu model for $verific$LessThan_117$b05.vhd:172$275 ($lt): new $alu
  creating $alu model for $verific$LessThan_119$b05.vhd:175$276 ($lt): new $alu
  creating $alu model for $verific$LessThan_121$b05.vhd:178$277 ($lt): new $alu
  creating $alu model for $verific$LessThan_123$b05.vhd:181$278 ($lt): new $alu
  creating $alu model for $verific$LessThan_125$b05.vhd:184$279 ($lt): new $alu
  creating $alu model for $verific$LessThan_137$b05.vhd:197$289 ($lt): new $alu
  creating $alu model for $verific$LessThan_144$b05.vhd:203$293 ($lt): new $alu
  creating $alu model for $verific$LessThan_146$b05.vhd:206$294 ($lt): new $alu
  creating $alu model for $verific$LessThan_148$b05.vhd:209$295 ($lt): new $alu
  creating $alu model for $verific$LessThan_150$b05.vhd:212$296 ($lt): new $alu
  creating $alu model for $verific$LessThan_152$b05.vhd:215$297 ($lt): new $alu
  creating $alu model for $verific$LessThan_154$b05.vhd:218$298 ($lt): new $alu
  creating $alu model for $verific$LessThan_156$b05.vhd:221$299 ($lt): new $alu
  creating $alu model for $verific$LessThan_158$b05.vhd:224$300 ($lt): new $alu
  creating $alu model for $verific$LessThan_160$b05.vhd:227$301 ($lt): new $alu
  creating $alu model for $verific$LessThan_21$b05.vhd:74$189 ($lt): new $alu
  creating $alu model for $verific$LessThan_39$b05.vhd:101$201 ($lt): new $alu
  creating $alu model for $verific$LessThan_47$b05.vhd:108$212 ($lt): new $alu
  creating $alu model for $verific$LessThan_54$b05.vhd:114$218 ($lt): new $alu
  creating $alu model for $verific$LessThan_58$b05.vhd:118$222 ($lt): new $alu
  creating $alu model for $verific$LessThan_6$b05.vhd:61$178 ($lt): new $alu
  creating $alu model for $verific$LessThan_62$b05.vhd:122$226 ($lt): new $alu
  creating $alu model for $verific$LessThan_66$b05.vhd:126$230 ($lt): new $alu
  creating $alu model for $verific$LessThan_70$b05.vhd:130$234 ($lt): new $alu
  creating $alu model for $verific$LessThan_74$b05.vhd:134$238 ($lt): new $alu
  creating $alu model for $verific$LessThan_78$b05.vhd:138$242 ($lt): new $alu
  creating $alu model for $verific$LessThan_82$b05.vhd:142$246 ($lt): new $alu
  creating $alu model for $verific$LessThan_86$b05.vhd:146$250 ($lt): new $alu
  creating $alu cell for $verific$LessThan_86$b05.vhd:146$250: $auto$alumacc.cc:485:replace_alu$410
  creating $alu cell for $verific$LessThan_82$b05.vhd:142$246: $auto$alumacc.cc:485:replace_alu$421
  creating $alu cell for $verific$LessThan_78$b05.vhd:138$242: $auto$alumacc.cc:485:replace_alu$432
  creating $alu cell for $verific$LessThan_74$b05.vhd:134$238: $auto$alumacc.cc:485:replace_alu$443
  creating $alu cell for $verific$LessThan_70$b05.vhd:130$234: $auto$alumacc.cc:485:replace_alu$454
  creating $alu cell for $verific$LessThan_66$b05.vhd:126$230: $auto$alumacc.cc:485:replace_alu$465
  creating $alu cell for $verific$LessThan_62$b05.vhd:122$226: $auto$alumacc.cc:485:replace_alu$476
  creating $alu cell for $verific$LessThan_6$b05.vhd:61$178: $auto$alumacc.cc:485:replace_alu$487
  creating $alu cell for $verific$LessThan_58$b05.vhd:118$222: $auto$alumacc.cc:485:replace_alu$492
  creating $alu cell for $verific$LessThan_54$b05.vhd:114$218: $auto$alumacc.cc:485:replace_alu$503
  creating $alu cell for $verific$LessThan_47$b05.vhd:108$212: $auto$alumacc.cc:485:replace_alu$514
  creating $alu cell for $verific$LessThan_39$b05.vhd:101$201: $auto$alumacc.cc:485:replace_alu$525
  creating $alu cell for $verific$LessThan_21$b05.vhd:74$189: $auto$alumacc.cc:485:replace_alu$530
  creating $alu cell for $verific$LessThan_160$b05.vhd:227$301: $auto$alumacc.cc:485:replace_alu$535
  creating $alu cell for $verific$LessThan_158$b05.vhd:224$300: $auto$alumacc.cc:485:replace_alu$546
  creating $alu cell for $verific$LessThan_156$b05.vhd:221$299: $auto$alumacc.cc:485:replace_alu$557
  creating $alu cell for $verific$LessThan_154$b05.vhd:218$298: $auto$alumacc.cc:485:replace_alu$568
  creating $alu cell for $verific$LessThan_152$b05.vhd:215$297: $auto$alumacc.cc:485:replace_alu$579
  creating $alu cell for $verific$LessThan_150$b05.vhd:212$296: $auto$alumacc.cc:485:replace_alu$590
  creating $alu cell for $verific$LessThan_148$b05.vhd:209$295: $auto$alumacc.cc:485:replace_alu$601
  creating $alu cell for $verific$LessThan_146$b05.vhd:206$294: $auto$alumacc.cc:485:replace_alu$612
  creating $alu cell for $verific$LessThan_144$b05.vhd:203$293: $auto$alumacc.cc:485:replace_alu$623
  creating $alu cell for $verific$LessThan_137$b05.vhd:197$289: $auto$alumacc.cc:485:replace_alu$634
  creating $alu cell for $verific$LessThan_125$b05.vhd:184$279: $auto$alumacc.cc:485:replace_alu$639
  creating $alu cell for $verific$LessThan_123$b05.vhd:181$278: $auto$alumacc.cc:485:replace_alu$650
  creating $alu cell for $verific$LessThan_121$b05.vhd:178$277: $auto$alumacc.cc:485:replace_alu$661
  creating $alu cell for $verific$LessThan_119$b05.vhd:175$276: $auto$alumacc.cc:485:replace_alu$672
  creating $alu cell for $verific$LessThan_117$b05.vhd:172$275: $auto$alumacc.cc:485:replace_alu$683
  creating $alu cell for $verific$LessThan_115$b05.vhd:169$274: $auto$alumacc.cc:485:replace_alu$694
  creating $alu cell for $verific$LessThan_113$b05.vhd:166$273: $auto$alumacc.cc:485:replace_alu$705
  creating $alu cell for $verific$LessThan_111$b05.vhd:163$272: $auto$alumacc.cc:485:replace_alu$716
  creating $alu cell for $verific$LessThan_109$b05.vhd:160$271: $auto$alumacc.cc:485:replace_alu$727
  creating $alu cell for $verific$add_358$b05.vhd:283$337: $auto$alumacc.cc:485:replace_alu$738
  creating $alu cell for $verific$add_376$b05.vhd:304$350: $auto$alumacc.cc:485:replace_alu$741
  creating $alu cell for $verific$sub_139$b05.vhd:199$290: $auto$alumacc.cc:485:replace_alu$744
  creating $alu cell for $verific$sub_19$b05.vhd:73$186: $auto$alumacc.cc:485:replace_alu$747
  creating $alu cell for $verific$sub_4$b05.vhd:60$175: $auto$alumacc.cc:485:replace_alu$750
  creating $alu cell for $verific$sub_49$b05.vhd:110$213: $auto$alumacc.cc:485:replace_alu$753
  creating $alu cell for $verific$sub_56$b05.vhd:116$220: $auto$alumacc.cc:485:replace_alu$756
  creating $alu cell for $verific$sub_60$b05.vhd:120$224: $auto$alumacc.cc:485:replace_alu$759
  creating $alu cell for $verific$sub_64$b05.vhd:124$228: $auto$alumacc.cc:485:replace_alu$762
  creating $alu cell for $verific$sub_68$b05.vhd:128$232: $auto$alumacc.cc:485:replace_alu$765
  creating $alu cell for $verific$sub_72$b05.vhd:132$236: $auto$alumacc.cc:485:replace_alu$768
  creating $alu cell for $verific$sub_76$b05.vhd:136$240: $auto$alumacc.cc:485:replace_alu$771
  creating $alu cell for $verific$sub_80$b05.vhd:140$244: $auto$alumacc.cc:485:replace_alu$774
  creating $alu cell for $verific$sub_84$b05.vhd:144$248: $auto$alumacc.cc:485:replace_alu$777
  creating $alu cell for $verific$sub_88$b05.vhd:148$251: $auto$alumacc.cc:485:replace_alu$780
  creating $alu cell for $verific$unary_minus_41$b05.vhd:103$202: $auto$alumacc.cc:485:replace_alu$783
  created 48 $alu and 0 $macc cells.

yosys> opt

3.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.
<suppressed ~49 debug messages>

yosys> opt_merge -nomux

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b05..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $verific$i17$b05.vhd:72$184.
    dead port 2/2 on $mux $verific$i17$b05.vhd:72$184.
    dead port 1/2 on $mux $verific$i25$b05.vhd:78$190.
    dead port 2/2 on $mux $verific$i25$b05.vhd:78$190.
Removed 4 multiplexer ports.
<suppressed ~22 debug messages>

yosys> opt_reduce

3.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b05.
Performed a total of 0 changes.

yosys> opt_merge

3.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..
Removed 32 unused cells and 66 unused wires.
<suppressed ~35 debug messages>

yosys> opt_expr

3.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.

3.19.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b05..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~22 debug messages>

yosys> opt_reduce

3.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b05.
Performed a total of 0 changes.

yosys> opt_merge

3.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..

yosys> opt_expr

3.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.

3.19.16. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.20. Printing statistics.

=== b05 ===

   Number of wires:                325
   Number of wire bits:           1760
   Number of public wires:          21
   Number of public wire bits:      98
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                224
     $adff                           8
     $alu                           48
     $bmux                          10
     $eq                             1
     $logic_not                      1
     $mux                           71
     $not                           29
     $or                            28
     $reduce_and                    28


yosys> memory -nomap

3.21. Executing MEMORY pass.

yosys> opt_mem

3.21.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.21.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.21.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.21.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.21.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `$auto$memory_bmux2rom.cc:63:execute$789'[0] in module `\b05': no output FF found.
Checking read port `$auto$memory_bmux2rom.cc:63:execute$786'[0] in module `\b05': no output FF found.
Checking read port address `$auto$memory_bmux2rom.cc:63:execute$789'[0] in module `\b05': address FF has async set and/or reset, not supported.
Checking read port address `$auto$memory_bmux2rom.cc:63:execute$786'[0] in module `\b05': address FF has async set and/or reset, not supported.

yosys> opt_clean

3.21.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..

yosys> memory_share

3.21.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.21.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.21.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..

yosys> memory_collect

3.21.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.22. Printing statistics.

=== b05 ===

   Number of wires:                325
   Number of wire bits:           1760
   Number of public wires:          21
   Number of public wire bits:      98
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                224
     $adff                           8
     $alu                           48
     $bmux                           8
     $eq                             1
     $logic_not                      1
     $mem_v2                         2
     $mux                           71
     $not                           29
     $or                            28
     $reduce_and                    28


yosys> opt_clean

3.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..

yosys> stat

3.24. Printing statistics.

=== b05 ===

   Number of wires:                325
   Number of wire bits:           1760
   Number of public wires:          21
   Number of public wire bits:      98
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                224
     $adff                           8
     $alu                           48
     $bmux                           8
     $eq                             1
     $logic_not                      1
     $mem_v2                         2
     $mux                           71
     $not                           29
     $or                            28
     $reduce_and                    28


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.25. Executing TECHMAP pass (map to technology primitives).

3.25.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.25.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.25.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $not.
Using template $paramod$dfca81329cbbac01700318224209a5f2318c7128\_90_alu for cells of type $alu.
Using template $paramod$befd47b1c77b68561d11d0cb61a0fae29b79f34c\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $mux.
Using template $paramod$7734840312b9a76c20481fb57d094d403d9be18d\_80_rs_alu for cells of type $alu.
Using template $paramod$e04283ca12514baf3d204c6994bec8f178dd89f8\_90_alu for cells of type $alu.
Using template $paramod$78464f9f65d57061f7490f3fe5dd257e4a61e2b7\_90_alu for cells of type $alu.
Using template $paramod$22b95c1bfeece9a7c6bf4fcd9399e4ee87091e97\_90_alu for cells of type $alu.
Using template $paramod$5d7bf89bead63599a0c4fbe7617ae2af1a7c16a5\_90_alu for cells of type $alu.
Using template $paramod$3fe4bdf8d597404bdd222c1fea42f692fdc77de4\_90_alu for cells of type $alu.
Using template $paramod$8f00ca5ffae7aacb4fd127c662dabcdb3ad72531\_90_alu for cells of type $alu.
Using template $paramod$1b9704b702a4d0f1f72103619cbea92927c5efcd\_80_rs_alu for cells of type $alu.
Using template $paramod$672a140277c71df8314410f22acc08d55222c3c7\_90_alu for cells of type $alu.
Using template $paramod$83dd457849c736323edf2edb15923eb27f99c683\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $eq.
Using template $paramod$ebede46804337da78e06a77b9ffdc3717e8d42eb\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $bmux.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $and.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001000 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000110 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000101 for cells of type $lcu.
No more expansions possible.
<suppressed ~4245 debug messages>

yosys> stat

3.26. Printing statistics.

=== b05 ===

   Number of wires:               2446
   Number of wire bits:          59116
   Number of public wires:          21
   Number of public wire bits:      98
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               4038
     $_AND_                       1193
     $_DFF_PP0_                     34
     $_MUX_                       1051
     $_NOT_                        407
     $_OR_                         543
     $_XOR_                        784
     $mem_v2                         2
     adder_carry                    24


yosys> opt

3.27. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.
<suppressed ~2251 debug messages>

yosys> opt_merge -nomux

3.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
<suppressed ~2025 debug messages>
Removed a total of 675 cells.

yosys> opt_muxtree

3.27.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b05..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b05.
Performed a total of 0 changes.

yosys> opt_merge

3.27.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..
Removed 394 unused cells and 2334 unused wires.
<suppressed ~395 debug messages>

yosys> opt_expr

3.27.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.
<suppressed ~5 debug messages>

3.27.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.27.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b05..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b05.
Performed a total of 0 changes.

yosys> opt_merge

3.27.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$2077 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$1910, Q = \FLAG).
Adding EN signal on $auto$ff.cc:262:slice$2076 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$1968 [8], Q = \MAX [8]).
Adding EN signal on $auto$ff.cc:262:slice$2075 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$1968 [7], Q = \MAX [7]).
Adding EN signal on $auto$ff.cc:262:slice$2074 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$1968 [6], Q = \MAX [6]).
Adding EN signal on $auto$ff.cc:262:slice$2073 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$1968 [5], Q = \MAX [5]).
Adding EN signal on $auto$ff.cc:262:slice$2072 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$1968 [4], Q = \MAX [4]).
Adding EN signal on $auto$ff.cc:262:slice$2071 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$1968 [3], Q = \MAX [3]).
Adding EN signal on $auto$ff.cc:262:slice$2070 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$1968 [2], Q = \MAX [2]).
Adding EN signal on $auto$ff.cc:262:slice$2069 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$1968 [1], Q = \MAX [1]).
Adding EN signal on $auto$ff.cc:262:slice$2068 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$1968 [0], Q = \MAX [0]).
Adding EN signal on $auto$ff.cc:262:slice$2067 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$2034 [8], Q = \TEMP [8]).
Adding EN signal on $auto$ff.cc:262:slice$2066 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$2034 [7], Q = \TEMP [7]).
Adding EN signal on $auto$ff.cc:262:slice$2065 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$2034 [6], Q = \TEMP [6]).
Adding EN signal on $auto$ff.cc:262:slice$2064 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$2034 [5], Q = \TEMP [5]).
Adding EN signal on $auto$ff.cc:262:slice$2063 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$2034 [4], Q = \TEMP [4]).
Adding EN signal on $auto$ff.cc:262:slice$2062 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$2034 [3], Q = \TEMP [3]).
Adding EN signal on $auto$ff.cc:262:slice$2061 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$2034 [2], Q = \TEMP [2]).
Adding EN signal on $auto$ff.cc:262:slice$2060 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$2034 [1], Q = \TEMP [1]).
Adding EN signal on $auto$ff.cc:262:slice$2059 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$2034 [0], Q = \TEMP [0]).
Adding EN signal on $auto$ff.cc:262:slice$2058 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$1901 [4], Q = \MAR [4]).
Adding EN signal on $auto$ff.cc:262:slice$2057 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$1901 [3], Q = \MAR [3]).
Adding EN signal on $auto$ff.cc:262:slice$2056 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$1901 [2], Q = \MAR [2]).
Adding EN signal on $auto$ff.cc:262:slice$2055 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$1901 [1], Q = \MAR [1]).
Adding EN signal on $auto$ff.cc:262:slice$2054 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$1901 [0], Q = \MAR [0]).
Adding EN signal on $auto$ff.cc:262:slice$2053 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$1863 [4], Q = \NUM [4]).
Adding EN signal on $auto$ff.cc:262:slice$2052 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$1863 [3], Q = \NUM [3]).
Adding EN signal on $auto$ff.cc:262:slice$2051 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$1863 [2], Q = \NUM [2]).
Adding EN signal on $auto$ff.cc:262:slice$2050 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$1863 [1], Q = \NUM [1]).
Adding EN signal on $auto$ff.cc:262:slice$2049 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$1863 [0], Q = \NUM [0]).
Adding EN signal on $auto$ff.cc:262:slice$2048 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$1805, Q = \EN_DISP).
Adding EN signal on $auto$ff.cc:262:slice$2047 ($_DFF_PP0_) from module b05 (D = $auto$simplemap.cc:309:simplemap_bmux$1795, Q = \RES_DISP).

yosys> opt_clean

3.27.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..
Removed 0 unused cells and 158 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.27.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.
<suppressed ~478 debug messages>

3.27.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.27.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b05..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b05.
Performed a total of 0 changes.

yosys> opt_merge

3.27.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
<suppressed ~1632 debug messages>
Removed a total of 544 cells.

yosys> opt_dff

3.27.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..
Removed 0 unused cells and 560 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.27.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.

3.27.23. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.27.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b05..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b05.
Performed a total of 0 changes.

yosys> opt_merge

3.27.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.27. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..

yosys> opt_expr

3.27.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.

3.27.30. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.
<suppressed ~183 debug messages>

yosys> opt_merge

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
Removed a total of 0 cells.

yosys> opt_dff

3.28.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..
Removed 0 unused cells and 27 unused wires.
<suppressed ~1 debug messages>

3.28.5. Finished fast OPT passes.

yosys> memory_map

3.29. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory $auto$memory_bmux2rom.cc:63:execute$786 in module \b05:
  created 32 $dff cells and 0 static cells of width 9.
  read interface: 0 $dff and 31 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $auto$memory_bmux2rom.cc:63:execute$789 in module \b05:
  created 32 $dff cells and 0 static cells of width 18.
  read interface: 0 $dff and 31 $mux cells.
  write interface: 0 write mux blocks.

yosys> opt -full

3.30. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.
<suppressed ~11 debug messages>

yosys> opt_merge -nomux

3.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b05..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

yosys> opt_reduce -full

3.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b05.
Performed a total of 0 changes.

yosys> opt_merge

3.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
Removed a total of 0 cells.

yosys> opt_share

3.30.6. Executing OPT_SHARE pass.

yosys> opt_dff

3.30.7. Executing OPT_DFF pass (perform DFF optimizations).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$786[0]$8315 ($dff) from module b05 (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$786[1]$8317 ($dff) from module b05 (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$786[2]$8319 ($dff) from module b05 (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$786[3]$8321 ($dff) from module b05 (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$786[4]$8323 ($dff) from module b05 (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$786[5]$8325 ($dff) from module b05 (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$786[6]$8327 ($dff) from module b05 (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$786[7]$8329 ($dff) from module b05 (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$786[8]$8331 ($dff) from module b05 (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$786[9]$8333 ($dff) from module b05 (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$786[10]$8335 ($dff) from module b05 (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$786[11]$8337 ($dff) from module b05 (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$786[12]$8339 ($dff) from module b05 (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$786[13]$8341 ($dff) from module b05 (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$786[14]$8343 ($dff) from module b05 (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$786[15]$8345 ($dff) from module b05 (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$786[16]$8347 ($dff) from module b05 (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$786[17]$8349 ($dff) from module b05 (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$786[18]$8351 ($dff) from module b05 (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$786[19]$8353 ($dff) from module b05 (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$786[20]$8355 ($dff) from module b05 (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$786[21]$8357 ($dff) from module b05 (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$786[22]$8359 ($dff) from module b05 (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$786[23]$8361 ($dff) from module b05 (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$786[24]$8363 ($dff) from module b05 (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$786[25]$8365 ($dff) from module b05 (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$786[26]$8367 ($dff) from module b05 (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$786[27]$8369 ($dff) from module b05 (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$786[28]$8371 ($dff) from module b05 (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$786[29]$8373 ($dff) from module b05 (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$786[30]$8375 ($dff) from module b05 (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$786[31]$8377 ($dff) from module b05 (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$789[0]$8472 ($dff) from module b05 (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$789[1]$8474 ($dff) from module b05 (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$789[2]$8476 ($dff) from module b05 (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$789[3]$8478 ($dff) from module b05 (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$789[4]$8480 ($dff) from module b05 (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$789[5]$8482 ($dff) from module b05 (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$789[6]$8484 ($dff) from module b05 (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$789[7]$8486 ($dff) from module b05 (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$789[8]$8488 ($dff) from module b05 (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$789[9]$8490 ($dff) from module b05 (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$789[10]$8492 ($dff) from module b05 (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$789[11]$8494 ($dff) from module b05 (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$789[12]$8496 ($dff) from module b05 (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$789[13]$8498 ($dff) from module b05 (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$789[14]$8500 ($dff) from module b05 (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$789[15]$8502 ($dff) from module b05 (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$789[16]$8504 ($dff) from module b05 (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$789[17]$8506 ($dff) from module b05 (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$789[18]$8508 ($dff) from module b05 (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$789[19]$8510 ($dff) from module b05 (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$789[20]$8512 ($dff) from module b05 (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$789[21]$8514 ($dff) from module b05 (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$789[22]$8516 ($dff) from module b05 (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$789[23]$8518 ($dff) from module b05 (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$789[24]$8520 ($dff) from module b05 (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$789[25]$8522 ($dff) from module b05 (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$789[26]$8524 ($dff) from module b05 (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$789[27]$8526 ($dff) from module b05 (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$789[28]$8528 ($dff) from module b05 (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$789[29]$8530 ($dff) from module b05 (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$789[30]$8532 ($dff) from module b05 (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$789[31]$8534 ($dff) from module b05 (removing D path).

yosys> opt_clean

3.30.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..
Removed 0 unused cells and 192 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.30.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.
<suppressed ~2 debug messages>

3.30.10. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.30.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b05..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

yosys> opt_reduce -full

3.30.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b05.
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][4][0]$8424:
      Old ports: A=9'000110010, B=9'000101000, Y=$memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][0]$a$8401
      New ports: A=2'01, B=2'10, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][0]$a$8401 [3] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][0]$a$8401 [1] }
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][0]$a$8401 [8:4] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][0]$a$8401 [2] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][0]$a$8401 [0] } = { 4'0001 $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][0]$a$8401 [1] 2'00 }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][4][10]$8454:
      Old ports: A=9'011100101, B=9'001100100, Y=$memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][5]$a$8416
      New ports: A=1'1, B=1'0, Y=$memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][5]$a$8416 [0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][5]$a$8416 [8:1] = { 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][5]$a$8416 [0] 6'110010 }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][4][11]$8457:
      Old ports: A=9'001111101, B=9'000001010, Y=$memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][5]$b$8417
      New ports: A=2'01, B=2'10, Y=$memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][5]$b$8417 [1:0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][5]$b$8417 [8:2] = { 2'00 $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][5]$b$8417 [0] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][5]$b$8417 [0] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][5]$b$8417 [0] 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][5]$b$8417 [0] }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][4][12]$8460:
      Old ports: A=9'001001011, B=9'111001110, Y=$memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][6]$a$8419
      New ports: A=2'01, B=2'10, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][6]$a$8419 [2] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][6]$a$8419 [0] }
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][6]$a$8419 [8:3] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][6]$a$8419 [1] } = { $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][6]$a$8419 [2] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][6]$a$8419 [2] 5'10011 }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][4][13]$8463:
      Old ports: A=9'000000000, B=9'111101010, Y=$memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][6]$b$8420
      New ports: A=1'0, B=1'1, Y=$memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][6]$b$8420 [1]
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][6]$b$8420 [8:2] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][6]$b$8420 [0] } = { $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][6]$b$8420 [1] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][6]$b$8420 [1] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][6]$b$8420 [1] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][6]$b$8420 [1] 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][6]$b$8420 [1] 2'00 }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][4][14]$8466:
      Old ports: A=9'000000000, B=9'000101000, Y=$memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][7]$a$8422
      New ports: A=1'0, B=1'1, Y=$memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][7]$a$8422 [3]
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][7]$a$8422 [8:4] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][7]$a$8422 [2:0] } = { 3'000 $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][7]$a$8422 [3] 4'0000 }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][4][1]$8427:
      Old ports: A=9'000000000, B=9'011100101, Y=$memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][0]$b$8402
      New ports: A=1'0, B=1'1, Y=$memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][0]$b$8402 [0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][0]$b$8402 [8:1] = { 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][0]$b$8402 [0] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][0]$b$8402 [0] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][0]$b$8402 [0] 2'00 $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][0]$b$8402 [0] 1'0 }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][4][2]$8430:
      Old ports: A=9'111110110, B=9'001001011, Y=$memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][1]$a$8404
      New ports: A=2'10, B=2'01, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][1]$a$8404 [2] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][1]$a$8404 [0] }
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][1]$a$8404 [8:3] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][1]$a$8404 [1] } = { $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][1]$a$8404 [2] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][1]$a$8404 [2] 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][1]$a$8404 [2] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][1]$a$8404 [2] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][1]$a$8404 [0] 1'1 }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][4][3]$8433:
      Old ports: A=9'011100101, B=9'010110101, Y=$memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][1]$b$8405
      New ports: A=2'10, B=2'01, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][1]$b$8405 [6] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][1]$b$8405 [4] }
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][1]$b$8405 [8:7] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][1]$b$8405 [5] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][1]$b$8405 [3:0] } = 7'0110101
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][4][4]$8436:
      Old ports: A=9'010111010, B=9'011100101, Y=$memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][2]$a$8407
      New ports: A=2'10, B=2'01, Y=$memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][2]$a$8407 [1:0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][2]$a$8407 [8:2] = { 2'01 $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][2]$a$8407 [0] 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][2]$a$8407 [1] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][2]$a$8407 [1:0] }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][4][5]$8439:
      Old ports: A=9'010111010, B=9'111110101, Y=$memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][2]$b$8408
      New ports: A=2'10, B=2'01, Y=$memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][2]$b$8408 [1:0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][2]$b$8408 [8:2] = { $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][2]$b$8408 [0] 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][2]$b$8408 [0] 2'11 $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][2]$b$8408 [1:0] }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][4][6]$8442:
      Old ports: A=9'000000000, B=9'000101000, Y=$memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][3]$a$8410
      New ports: A=1'0, B=1'1, Y=$memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][3]$a$8410 [3]
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][3]$a$8410 [8:4] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][3]$a$8410 [2:0] } = { 3'000 $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][3]$a$8410 [3] 4'0000 }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][4][7]$8445:
      Old ports: A=9'000110010, B=9'111100011, Y=$memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][3]$b$8411
      New ports: A=2'10, B=2'01, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][3]$b$8411 [4] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][3]$b$8411 [0] }
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][3]$b$8411 [8:5] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][3]$b$8411 [3:1] } = { $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][3]$b$8411 [0] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][3]$b$8411 [0] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][3]$b$8411 [0] 4'1001 }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][4][8]$8448:
      Old ports: A=9'111101110, B=9'011100101, Y=$memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][4]$a$8413
      New ports: A=2'10, B=2'01, Y=$memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][4]$a$8413 [1:0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][4]$a$8413 [8:2] = { $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][4]$a$8413 [1] 4'1110 $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][4]$a$8413 [1] 1'1 }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][4][9]$8451:
      Old ports: A=9'011100101, B=9'010010111, Y=$memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][4]$b$8414
      New ports: A=2'10, B=2'01, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][4]$b$8414 [5] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][4]$b$8414 [1] }
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][4]$b$8414 [8:6] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][4]$b$8414 [4:2] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][4]$b$8414 [0] } = { 2'01 $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][4]$b$8414 [5] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][4]$b$8414 [1] 3'011 }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][4][0]$8581:
      Old ports: A=18'000110010000110010, B=18'000101000000101000, Y=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][0]$a$8558
      New ports: A=2'01, B=2'10, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][0]$a$8558 [3] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][0]$a$8558 [1] }
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][0]$a$8558 [17:4] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][0]$a$8558 [2] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][0]$a$8558 [0] } = { 4'0001 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][0]$a$8558 [1] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][0]$a$8558 [3] 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][0]$a$8558 [1] 5'00001 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][0]$a$8558 [1] 2'00 }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][4][10]$8611:
      Old ports: A=18'011100101011100101, B=18'001100100001100100, Y=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][5]$a$8573
      New ports: A=1'1, B=1'0, Y=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][5]$a$8573 [0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][5]$a$8573 [17:1] = { 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][5]$a$8573 [0] 6'110010 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][5]$a$8573 [0] 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][5]$a$8573 [0] 6'110010 }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][4][11]$8614:
      Old ports: A=18'001111101001111101, B=18'000001010000001010, Y=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][5]$b$8574
      New ports: A=2'01, B=2'10, Y=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][5]$b$8574 [1:0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][5]$b$8574 [17:2] = { 2'00 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][5]$b$8574 [0] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][5]$b$8574 [0] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][5]$b$8574 [0] 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][5]$b$8574 [0] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][5]$b$8574 [1:0] 2'00 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][5]$b$8574 [0] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][5]$b$8574 [0] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][5]$b$8574 [0] 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][5]$b$8574 [0] }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][4][12]$8617:
      Old ports: A=18'001001011001001011, B=18'111001110111001110, Y=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][6]$a$8576
      New ports: A=2'01, B=2'10, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][6]$a$8576 [2] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][6]$a$8576 [0] }
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][6]$a$8576 [17:3] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][6]$a$8576 [1] } = { $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][6]$a$8576 [2] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][6]$a$8576 [2] 4'1001 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][6]$a$8576 [2] 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][6]$a$8576 [0] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][6]$a$8576 [2] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][6]$a$8576 [2] 5'10011 }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][4][13]$8620:
      Old ports: A=18'000000000000000000, B=18'111101010111101010, Y=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][6]$b$8577
      New ports: A=1'0, B=1'1, Y=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][6]$b$8577 [1]
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][6]$b$8577 [17:2] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][6]$b$8577 [0] } = { $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][6]$b$8577 [1] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][6]$b$8577 [1] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][6]$b$8577 [1] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][6]$b$8577 [1] 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][6]$b$8577 [1] 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][6]$b$8577 [1] 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][6]$b$8577 [1] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][6]$b$8577 [1] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][6]$b$8577 [1] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][6]$b$8577 [1] 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][6]$b$8577 [1] 2'00 }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][4][14]$8623:
      Old ports: A=18'000000000000000000, B=18'000101000000101000, Y=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][7]$a$8579
      New ports: A=1'0, B=1'1, Y=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][7]$a$8579 [3]
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][7]$a$8579 [17:4] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][7]$a$8579 [2:0] } = { 3'000 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][7]$a$8579 [3] 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][7]$a$8579 [3] 6'000000 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][7]$a$8579 [3] 4'0000 }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][4][1]$8584:
      Old ports: A=18'000000000000000000, B=18'011100101011100101, Y=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][0]$b$8559
      New ports: A=1'0, B=1'1, Y=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][0]$b$8559 [0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][0]$b$8559 [17:1] = { 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][0]$b$8559 [0] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][0]$b$8559 [0] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][0]$b$8559 [0] 2'00 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][0]$b$8559 [0] 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][0]$b$8559 [0] 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][0]$b$8559 [0] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][0]$b$8559 [0] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][0]$b$8559 [0] 2'00 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][0]$b$8559 [0] 1'0 }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][4][2]$8587:
      Old ports: A=18'111110110111110110, B=18'001001011001001011, Y=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][1]$a$8561
      New ports: A=2'10, B=2'01, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][1]$a$8561 [2] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][1]$a$8561 [0] }
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][1]$a$8561 [17:3] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][1]$a$8561 [1] } = { $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][1]$a$8561 [2] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][1]$a$8561 [2] 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][1]$a$8561 [2] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][1]$a$8561 [2] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][1]$a$8561 [0] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][1]$a$8561 [2] 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][1]$a$8561 [0] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][1]$a$8561 [2] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][1]$a$8561 [2] 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][1]$a$8561 [2] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][1]$a$8561 [2] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][1]$a$8561 [0] 1'1 }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][4][3]$8590:
      Old ports: A=18'011100101011100101, B=18'010110101010110101, Y=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][1]$b$8562
      New ports: A=2'10, B=2'01, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][1]$b$8562 [6] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][1]$b$8562 [4] }
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][1]$b$8562 [17:7] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][1]$b$8562 [5] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][1]$b$8562 [3:0] } = { 2'01 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][1]$b$8562 [6] 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][1]$b$8562 [4] 11'01010110101 }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][4][4]$8593:
      Old ports: A=18'010111010010111010, B=18'011100101011100101, Y=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][2]$a$8564
      New ports: A=2'10, B=2'01, Y=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][2]$a$8564 [1:0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][2]$a$8564 [17:2] = { 2'01 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][2]$a$8564 [0] 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][2]$a$8564 [1] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][2]$a$8564 [1:0] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][2]$a$8564 [1:0] 2'01 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][2]$a$8564 [0] 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][2]$a$8564 [1] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][2]$a$8564 [1:0] }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][4][5]$8596:
      Old ports: A=18'010111010010111010, B=18'111110101111110101, Y=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][2]$b$8565
      New ports: A=2'10, B=2'01, Y=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][2]$b$8565 [1:0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][2]$b$8565 [17:2] = { $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][2]$b$8565 [0] 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][2]$b$8565 [0] 2'11 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][2]$b$8565 [1:0] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][2]$b$8565 [1:0] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][2]$b$8565 [0] 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][2]$b$8565 [0] 2'11 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][2]$b$8565 [1:0] }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][4][6]$8599:
      Old ports: A=18'000000000000000000, B=18'000101000000101000, Y=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][3]$a$8567
      New ports: A=1'0, B=1'1, Y=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][3]$a$8567 [3]
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][3]$a$8567 [17:4] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][3]$a$8567 [2:0] } = { 3'000 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][3]$a$8567 [3] 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][3]$a$8567 [3] 6'000000 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][3]$a$8567 [3] 4'0000 }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][4][7]$8602:
      Old ports: A=18'000110010000110010, B=18'111100011111100011, Y=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][3]$b$8568
      New ports: A=2'10, B=2'01, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][3]$b$8568 [4] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][3]$b$8568 [0] }
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][3]$b$8568 [17:5] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][3]$b$8568 [3:1] } = { $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][3]$b$8568 [0] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][3]$b$8568 [0] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][3]$b$8568 [0] 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][3]$b$8568 [4] 3'001 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][3]$b$8568 [0] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][3]$b$8568 [0] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][3]$b$8568 [0] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][3]$b$8568 [0] 4'1001 }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][4][8]$8605:
      Old ports: A=18'111101110111101110, B=18'011100101011100101, Y=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][4]$a$8570
      New ports: A=2'10, B=2'01, Y=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][4]$a$8570 [1:0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][4]$a$8570 [17:2] = { $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][4]$a$8570 [1] 4'1110 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][4]$a$8570 [1] 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][4]$a$8570 [1:0] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][4]$a$8570 [1] 4'1110 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][4]$a$8570 [1] 1'1 }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][4][9]$8608:
      Old ports: A=18'011100101011100101, B=18'010010111010010111, Y=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][4]$b$8571
      New ports: A=2'10, B=2'01, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][4]$b$8571 [5] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][4]$b$8571 [1] }
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][4]$b$8571 [17:6] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][4]$b$8571 [4:2] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][4]$b$8571 [0] } = { 2'01 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][4]$b$8571 [5] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][4]$b$8571 [5] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][4]$b$8571 [1] 2'01 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][4]$b$8571 [1] 3'101 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][4]$b$8571 [5] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][4]$b$8571 [1] 3'011 }
  Optimizing cells in module \b05.
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][0]$8400:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][0]$a$8401, B=$memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][0]$b$8402, Y=$memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][0]$a$8389
      New ports: A={ 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][0]$a$8401 [3] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][0]$a$8401 [1] 1'0 }, B={ $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][0]$b$8402 [0] 2'00 $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][0]$b$8402 [0] }, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][0]$a$8389 [5] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][0]$a$8389 [3] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][0]$a$8389 [1:0] }
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][0]$a$8389 [8:6] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][0]$a$8389 [4] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][0]$a$8389 [2] } = { 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][0]$a$8389 [0] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][0]$a$8389 [0] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][0]$a$8389 [1:0] }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][1]$8403:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][1]$a$8404, B=$memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][1]$b$8405, Y=$memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][0]$b$8390
      New ports: A={ $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][1]$a$8404 [2] 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][1]$a$8404 [2] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][1]$a$8404 [0] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][1]$a$8404 [2] 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][1]$a$8404 [0] }, B={ 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][1]$b$8405 [6] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][1]$b$8405 [4] 4'0101 }, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][0]$b$8390 [8] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][0]$b$8390 [6] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][0]$b$8390 [4:0] }
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][0]$b$8390 [7] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][0]$b$8390 [5] } = { $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][0]$b$8390 [2] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][0]$b$8390 [2] }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][2]$8406:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][2]$a$8407, B=$memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][2]$b$8408, Y=$memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][1]$a$8392
      New ports: A={ 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][2]$a$8407 [1] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][2]$a$8407 [1:0] }, B={ $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][2]$b$8408 [0] 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][2]$b$8408 [1:0] }, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][1]$a$8392 [8] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][1]$a$8392 [4] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][1]$a$8392 [1:0] }
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][1]$a$8392 [7:5] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][1]$a$8392 [3:2] } = { 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][1]$a$8392 [0] 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][1]$a$8392 [1:0] }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][3]$8409:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][3]$a$8410, B=$memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][3]$b$8411, Y=$memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][1]$b$8393
      New ports: A={ $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][3]$a$8410 [3] 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][3]$a$8410 [3] 2'00 }, B={ 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][3]$b$8411 [4] 2'01 $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][3]$b$8411 [0] }, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][1]$b$8393 [5:3] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][1]$b$8393 [1:0] }
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][1]$b$8393 [8:6] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][1]$b$8393 [2] } = { $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][1]$b$8393 [0] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][1]$b$8393 [0] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][1]$b$8393 [0] 1'0 }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][4]$8412:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][4]$a$8413, B=$memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][4]$b$8414, Y=$memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][2]$a$8395
      New ports: A={ 2'10 $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][4]$a$8413 [1] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][4]$a$8413 [1:0] }, B={ $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][4]$b$8414 [5] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][4]$b$8414 [1] 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][4]$b$8414 [1] 1'1 }, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][2]$a$8395 [5:3] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][2]$a$8395 [1:0] }
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][2]$a$8395 [8:6] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][2]$a$8395 [2] } = { $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][2]$a$8395 [3] 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][2]$a$8395 [5] 1'1 }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][5]$8415:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][5]$a$8416, B=$memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][5]$b$8417, Y=$memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][2]$b$8396
      New ports: A={ $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][5]$a$8416 [0] 4'0010 $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][5]$a$8416 [0] }, B={ 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][5]$b$8417 [0] 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][5]$b$8417 [0] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][5]$b$8417 [1:0] }, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][2]$b$8396 [7] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][2]$b$8396 [4:0] }
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][2]$b$8396 [8] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][2]$b$8396 [6:5] } = { 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][2]$b$8396 [2] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][2]$b$8396 [2] }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][6]$8418:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][6]$a$8419, B=$memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][6]$b$8420, Y=$memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][3]$a$8398
      New ports: A={ $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][6]$a$8419 [2] 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][6]$a$8419 [2] 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][6]$a$8419 [0] }, B={ $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][6]$b$8420 [1] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][6]$b$8420 [1] 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][6]$b$8420 [1] 1'0 }, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][3]$a$8398 [7] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][3]$a$8398 [5] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][3]$a$8398 [2:0] }
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][3]$a$8398 [8] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][3]$a$8398 [6] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][3]$a$8398 [4:3] } = { $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][3]$a$8398 [7] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][3]$a$8398 [1] 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][3]$a$8398 [1] }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][7]$8421:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][7]$a$8422, B=9'000110010, Y=$memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][3]$b$8399
      New ports: A={ $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][7]$a$8422 [3] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][7]$a$8422 [3] 1'0 }, B=3'101, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][3]$b$8399 [5] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][3]$b$8399 [3] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][3]$b$8399 [1] }
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][3]$b$8399 [8:6] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][3]$b$8399 [4] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][3]$b$8399 [2] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][3]$b$8399 [0] } = { 3'000 $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][3]$b$8399 [1] 2'00 }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][0]$8557:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][0]$a$8558, B=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][0]$b$8559, Y=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][0]$a$8546
      New ports: A={ 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][0]$a$8558 [3] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][0]$a$8558 [1] 1'0 }, B={ $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][0]$b$8559 [0] 2'00 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][0]$b$8559 [0] }, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][0]$a$8546 [5] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][0]$a$8546 [3] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][0]$a$8546 [1:0] }
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][0]$a$8546 [17:6] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][0]$a$8546 [4] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][0]$a$8546 [2] } = { 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][0]$a$8546 [0] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][0]$a$8546 [0] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][0]$a$8546 [5] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][0]$a$8546 [1] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][0]$a$8546 [3] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][0]$a$8546 [0] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][0]$a$8546 [1:0] 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][0]$a$8546 [0] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][0]$a$8546 [0] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][0]$a$8546 [1:0] }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][1]$8560:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][1]$a$8561, B=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][1]$b$8562, Y=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][0]$b$8547
      New ports: A={ $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][1]$a$8561 [2] 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][1]$a$8561 [2] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][1]$a$8561 [0] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][1]$a$8561 [2] 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][1]$a$8561 [0] }, B={ 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][1]$b$8562 [6] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][1]$b$8562 [4] 4'0101 }, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][0]$b$8547 [8] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][0]$b$8547 [6] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][0]$b$8547 [4:0] }
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][0]$b$8547 [17:9] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][0]$b$8547 [7] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][0]$b$8547 [5] } = { $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][0]$b$8547 [8] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][0]$b$8547 [2] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][0]$b$8547 [6] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][0]$b$8547 [2] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][0]$b$8547 [4:0] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][0]$b$8547 [2] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][0]$b$8547 [2] }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][2]$8563:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][2]$a$8564, B=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][2]$b$8565, Y=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][1]$a$8549
      New ports: A={ 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][2]$a$8564 [1] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][2]$a$8564 [1:0] }, B={ $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][2]$b$8565 [0] 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][2]$b$8565 [1:0] }, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][1]$a$8549 [8] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][1]$a$8549 [4] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][1]$a$8549 [1:0] }
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][1]$a$8549 [17:9] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][1]$a$8549 [7:5] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][1]$a$8549 [3:2] } = { $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][1]$a$8549 [8] 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][1]$a$8549 [0] 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][1]$a$8549 [4] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][1]$a$8549 [1:0] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][1]$a$8549 [1:0] 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][1]$a$8549 [0] 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][1]$a$8549 [1:0] }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][3]$8566:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][3]$a$8567, B=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][3]$b$8568, Y=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][1]$b$8550
      New ports: A={ $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][3]$a$8567 [3] 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][3]$a$8567 [3] 2'00 }, B={ 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][3]$b$8568 [4] 2'01 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][3]$b$8568 [0] }, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][1]$b$8550 [5:3] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][1]$b$8550 [1:0] }
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][1]$b$8550 [17:6] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][1]$b$8550 [2] } = { $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][1]$b$8550 [0] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][1]$b$8550 [0] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][1]$b$8550 [0] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][1]$b$8550 [5:3] 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][1]$b$8550 [1:0] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][1]$b$8550 [0] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][1]$b$8550 [0] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][1]$b$8550 [0] 1'0 }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][4]$8569:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][4]$a$8570, B=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][4]$b$8571, Y=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][2]$a$8552
      New ports: A={ 2'10 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][4]$a$8570 [1] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][4]$a$8570 [1:0] }, B={ $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][4]$b$8571 [5] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][4]$b$8571 [1] 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][4]$b$8571 [1] 1'1 }, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][2]$a$8552 [5:3] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][2]$a$8552 [1:0] }
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][2]$a$8552 [17:6] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][2]$a$8552 [2] } = { $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][2]$a$8552 [3] 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][2]$a$8552 [5] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][2]$a$8552 [5:3] 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][2]$a$8552 [1:0] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][2]$a$8552 [3] 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][2]$a$8552 [5] 1'1 }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][5]$8572:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][5]$a$8573, B=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][5]$b$8574, Y=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][2]$b$8553
      New ports: A={ $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][5]$a$8573 [0] 4'0010 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][5]$a$8573 [0] }, B={ 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][5]$b$8574 [0] 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][5]$b$8574 [0] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][5]$b$8574 [1:0] }, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][2]$b$8553 [7] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][2]$b$8553 [4:0] }
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][2]$b$8553 [17:8] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][2]$b$8553 [6:5] } = { 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][2]$b$8553 [7] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][2]$b$8553 [2] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][2]$b$8553 [2] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][2]$b$8553 [4:0] 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][2]$b$8553 [2] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][2]$b$8553 [2] }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][6]$8575:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][6]$a$8576, B=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][6]$b$8577, Y=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][3]$a$8555
      New ports: A={ $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][6]$a$8576 [2] 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][6]$a$8576 [2] 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][6]$a$8576 [0] }, B={ $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][6]$b$8577 [1] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][6]$b$8577 [1] 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][6]$b$8577 [1] 1'0 }, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][3]$a$8555 [7] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][3]$a$8555 [5] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][3]$a$8555 [2:0] }
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][3]$a$8555 [17:8] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][3]$a$8555 [6] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][3]$a$8555 [4:3] } = { $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][3]$a$8555 [7] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][3]$a$8555 [7] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][3]$a$8555 [1] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][3]$a$8555 [5] 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][3]$a$8555 [1] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][3]$a$8555 [2:0] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][3]$a$8555 [7] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][3]$a$8555 [1] 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][3]$a$8555 [1] }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][7]$8578:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][7]$a$8579, B=18'000110010000110010, Y=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][3]$b$8556
      New ports: A={ $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][7]$a$8579 [3] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][3][7]$a$8579 [3] 1'0 }, B=3'101, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][3]$b$8556 [5] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][3]$b$8556 [3] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][3]$b$8556 [1] }
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][3]$b$8556 [17:6] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][3]$b$8556 [4] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][3]$b$8556 [2] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][3]$b$8556 [0] } = { 3'000 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][3]$b$8556 [5] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][3]$b$8556 [1] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][3]$b$8556 [3] 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][3]$b$8556 [1] 4'0000 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][3]$b$8556 [1] 2'00 }
  Optimizing cells in module \b05.
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][0]$8388:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][0]$a$8389, B=$memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][0]$b$8390, Y=$memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][1][0]$a$8383
      New ports: A={ 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][0]$a$8389 [0] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][0]$a$8389 [5] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][0]$a$8389 [1] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][0]$a$8389 [3] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][0]$a$8389 [0] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][0]$a$8389 [1:0] }, B={ $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][0]$b$8390 [8] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][0]$b$8390 [6] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][0]$b$8390 [2] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][0]$b$8390 [4:0] }, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][1][0]$a$8383 [8] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][1][0]$a$8383 [6:0] }
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][1][0]$a$8383 [7] = $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][1][0]$a$8383 [2]
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][1]$8391:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][1]$a$8392, B=$memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][1]$b$8393, Y=$memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][1][0]$b$8384
      New ports: A={ $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][1]$a$8392 [8] 2'11 $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][1]$a$8392 [4] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][1]$a$8392 [1:0] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][1]$a$8392 [1:0] }, B={ $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][1]$b$8393 [0] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][1]$b$8393 [0] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][1]$b$8393 [5:3] 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][1]$b$8393 [1:0] }, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][1][0]$b$8384 [8:7] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][1][0]$b$8384 [5:0] }
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][1][0]$b$8384 [6] = $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][1][0]$b$8384 [0]
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][2]$8394:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][2]$a$8395, B=$memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][2]$b$8396, Y=$memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][1][1]$a$8386
      New ports: A={ $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][2]$a$8395 [3] 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][2]$a$8395 [5:3] 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][2]$a$8395 [1:0] }, B={ 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][2]$b$8396 [7] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][2]$b$8396 [2] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][2]$b$8396 [4:0] }, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][1][1]$a$8386 [8:7] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][1][1]$a$8386 [5:0] }
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][1][1]$a$8386 [6] = $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][1][1]$a$8386 [5]
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][3]$8397:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][3]$a$8398, B=$memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][3]$b$8399, Y=$memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][1][1]$b$8387
      New ports: A={ $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][3]$a$8398 [7] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][3]$a$8398 [1] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][3]$a$8398 [5] 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][3]$a$8398 [1] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][3]$a$8398 [2:0] }, B={ 2'00 $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][3]$b$8399 [5] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][3]$b$8399 [1] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][3]$b$8399 [3] 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][3]$b$8399 [1] 1'0 }, Y=$memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][1][1]$b$8387 [7:0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][1][1]$b$8387 [8] = $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][1][1]$b$8387 [7]
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][0]$8545:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][0]$a$8546, B=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][0]$b$8547, Y=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][1][0]$a$8540
      New ports: A={ 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][0]$a$8546 [0] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][0]$a$8546 [5] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][0]$a$8546 [1] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][0]$a$8546 [3] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][0]$a$8546 [0] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][0]$a$8546 [1:0] }, B={ $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][0]$b$8547 [8] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][0]$b$8547 [6] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][0]$b$8547 [2] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][0]$b$8547 [4:0] }, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][1][0]$a$8540 [8] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][1][0]$a$8540 [6:0] }
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][1][0]$a$8540 [17:9] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][1][0]$a$8540 [7] } = { $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][1][0]$a$8540 [8] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][1][0]$a$8540 [2] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][1][0]$a$8540 [6:0] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][1][0]$a$8540 [2] }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][1]$8548:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][1]$a$8549, B=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][1]$b$8550, Y=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][1][0]$b$8541
      New ports: A={ $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][1]$a$8549 [8] 2'11 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][1]$a$8549 [4] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][1]$a$8549 [1:0] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][1]$a$8549 [1:0] }, B={ $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][1]$b$8550 [0] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][1]$b$8550 [0] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][1]$b$8550 [5:3] 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][1]$b$8550 [1:0] }, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][1][0]$b$8541 [8:7] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][1][0]$b$8541 [5:0] }
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][1][0]$b$8541 [17:9] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][1][0]$b$8541 [6] } = { $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][1][0]$b$8541 [8:7] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][1][0]$b$8541 [0] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][1][0]$b$8541 [5:0] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][1][0]$b$8541 [0] }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][2]$8551:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][2]$a$8552, B=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][2]$b$8553, Y=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][1][1]$a$8543
      New ports: A={ $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][2]$a$8552 [3] 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][2]$a$8552 [5:3] 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][2]$a$8552 [1:0] }, B={ 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][2]$b$8553 [7] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][2]$b$8553 [2] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][2]$b$8553 [4:0] }, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][1][1]$a$8543 [8:7] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][1][1]$a$8543 [5:0] }
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][1][1]$a$8543 [17:9] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][1][1]$a$8543 [6] } = { $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][1][1]$a$8543 [8:7] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][1][1]$a$8543 [5] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][1][1]$a$8543 [5:0] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][1][1]$a$8543 [5] }
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][3]$8554:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][3]$a$8555, B=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][3]$b$8556, Y=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][1][1]$b$8544
      New ports: A={ $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][3]$a$8555 [7] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][3]$a$8555 [1] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][3]$a$8555 [5] 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][3]$a$8555 [1] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][3]$a$8555 [2:0] }, B={ 2'00 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][3]$b$8556 [5] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][3]$b$8556 [1] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][3]$b$8556 [3] 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][2][3]$b$8556 [1] 1'0 }, Y=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][1][1]$b$8544 [7:0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][1][1]$b$8544 [17:8] = { $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][1][1]$b$8544 [7] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][1][1]$b$8544 [7:0] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][1][1]$b$8544 [7] }
  Optimizing cells in module \b05.
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][1][0]$8539:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][1][0]$a$8540, B=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][1][0]$b$8541, Y=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][0][0]$a$8537
      New ports: A={ $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][1][0]$a$8540 [8] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][1][0]$a$8540 [2] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][1][0]$a$8540 [6:0] }, B={ $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][1][0]$b$8541 [8:7] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][1][0]$b$8541 [0] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][1][0]$b$8541 [5:0] }, Y=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][0][0]$a$8537 [8:0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][0][0]$a$8537 [17:9] = $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][0][0]$a$8537 [8:0]
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][1][1]$8542:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][1][1]$a$8543, B=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][1][1]$b$8544, Y=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][0][0]$b$8538
      New ports: A={ $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][1][1]$a$8543 [8:7] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][1][1]$a$8543 [5] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][1][1]$a$8543 [5:0] }, B={ $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][1][1]$b$8544 [7] $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][1][1]$b$8544 [7:0] }, Y=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][0][0]$b$8538 [8:0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][0][0]$b$8538 [17:9] = $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][0][0]$b$8538 [8:0]
  Optimizing cells in module \b05.
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][0][0]$8536:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][0][0]$a$8537, B=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][0][0]$b$8538, Y={ $verific$n1673$160 $verific$n1572$151 }
      New ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][0][0]$a$8537 [8:0], B=$memory$auto$memory_bmux2rom.cc:63:execute$789$rdmux[0][0][0]$b$8538 [8:0], Y=$verific$n1572$151
      New connections: $verific$n1673$160 = $verific$n1572$151
  Optimizing cells in module \b05.
Performed a total of 57 changes.

yosys> opt_merge

3.30.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
<suppressed ~123 debug messages>
Removed a total of 41 cells.

yosys> opt_share

3.30.14. Executing OPT_SHARE pass.

yosys> opt_dff

3.30.15. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..
Removed 0 unused cells and 44 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.30.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.
<suppressed ~11 debug messages>

3.30.18. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.30.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b05..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~3 debug messages>

yosys> opt_reduce -full

3.30.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b05.
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][2]$8406:
      Old ports: A={ 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][1]$a$8404 [8] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][1]$a$8404 [8] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][1]$a$8404 [3] }, B={ $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][1]$a$8404 [3] 1'1 $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][1]$a$8404 [8] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][1]$a$8404 [3] }, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][1]$a$8392 [8] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][1]$a$8392 [4:3] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][1]$a$8392 [6] }
      New ports: A={ 1'0 $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][1]$a$8404 [8] }, B={ $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][1]$a$8404 [3] 1'1 }, Y={ $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][1]$a$8392 [8] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][1]$a$8392 [4] }
      New connections: { $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][1]$a$8392 [3] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][2][1]$a$8392 [6] } = { $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][1]$a$8404 [8] $memory$auto$memory_bmux2rom.cc:63:execute$786$rdmux[0][3][1]$a$8404 [3] }
  Optimizing cells in module \b05.
Performed a total of 1 changes.

yosys> opt_merge

3.30.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
Removed a total of 0 cells.

yosys> opt_share

3.30.22. Executing OPT_SHARE pass.

yosys> opt_dff

3.30.23. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.30.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.

3.30.26. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.30.27. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b05..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~3 debug messages>

yosys> opt_reduce -full

3.30.28. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b05.
Performed a total of 0 changes.

yosys> opt_merge

3.30.29. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
Removed a total of 0 cells.

yosys> opt_share

3.30.30. Executing OPT_SHARE pass.

yosys> opt_dff

3.30.31. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.32. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..

yosys> opt_expr -full

3.30.33. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.

3.30.34. Finished OPT passes. (There is nothing left to do.)

yosys> techmap -map +/techmap.v

3.31. Executing TECHMAP pass (map to technology primitives).

3.31.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.31.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $not.
No more expansions possible.
<suppressed ~89 debug messages>

yosys> opt -sat

3.32. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.
<suppressed ~6 debug messages>

yosys> opt_merge -nomux

3.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
<suppressed ~87 debug messages>
Removed a total of 29 cells.

yosys> opt_muxtree

3.32.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b05..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.32.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b05.
Performed a total of 0 changes.

yosys> opt_merge

3.32.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.32.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.32.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..
Removed 0 unused cells and 6 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.
<suppressed ~4 debug messages>

3.32.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.32.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b05..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.32.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b05.
Performed a total of 0 changes.

yosys> opt_merge

3.32.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.32.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.32.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.32.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.

3.32.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.32.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b05..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.32.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b05.
Performed a total of 0 changes.

yosys> opt_merge

3.32.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.32.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.32.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..

yosys> opt_expr

3.32.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.

3.32.23. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

3.33. Executing ABC pass (technology mapping using ABC).

3.33.1. Summary of detected clock domains:
  553 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$7959, arst=\RESET, srst={ }
  31 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$7917, arst=\RESET, srst={ }
  52 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$7501, arst=\RESET, srst={ }
  90 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$7184, arst=\RESET, srst={ }
  20 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$6922, arst=\RESET, srst={ }
  104 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$6243, arst=\RESET, srst={ }
  18 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$6164, arst=\RESET, srst={ }
  76 cells in clk=\CLOCK, en={ }, arst=\RESET, srst={ }

3.33.2. Extracting gate netlist of module `\b05' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7959, asynchronously reset by \RESET
Extracted 553 gates and 578 wires to a netlist network with 23 inputs and 27 outputs.

3.33.2.1. Executing ABC.

3.33.3. Extracting gate netlist of module `\b05' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7917, asynchronously reset by \RESET
Extracted 31 gates and 63 wires to a netlist network with 31 inputs and 26 outputs.

3.33.3.1. Executing ABC.

3.33.4. Extracting gate netlist of module `\b05' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7501, asynchronously reset by \RESET
Extracted 52 gates and 63 wires to a netlist network with 11 inputs and 11 outputs.

3.33.4.1. Executing ABC.

3.33.5. Extracting gate netlist of module `\b05' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7184, asynchronously reset by \RESET
Extracted 90 gates and 99 wires to a netlist network with 7 inputs and 15 outputs.

3.33.5.1. Executing ABC.

3.33.6. Extracting gate netlist of module `\b05' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6922, asynchronously reset by \RESET
Extracted 20 gates and 32 wires to a netlist network with 12 inputs and 11 outputs.

3.33.6.1. Executing ABC.

3.33.7. Extracting gate netlist of module `\b05' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6243, asynchronously reset by \RESET
Extracted 89 gates and 119 wires to a netlist network with 29 inputs and 19 outputs.

3.33.7.1. Executing ABC.

3.33.8. Extracting gate netlist of module `\b05' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6164, asynchronously reset by \RESET
Extracted 18 gates and 35 wires to a netlist network with 17 inputs and 4 outputs.

3.33.8.1. Executing ABC.

3.33.9. Extracting gate netlist of module `\b05' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, asynchronously reset by \RESET
Extracted 67 gates and 99 wires to a netlist network with 30 inputs and 28 outputs.

3.33.9.1. Executing ABC.

yosys> abc -dff

3.34. Executing ABC pass (technology mapping using ABC).

3.34.1. Summary of detected clock domains:
  111 cells in clk=\CLOCK, en=$abc$8807$auto$opt_dff.cc:219:make_patterns_logic$7959, arst=\RESET, srst={ }
  34 cells in clk=\CLOCK, en=$abc$9226$auto$opt_dff.cc:219:make_patterns_logic$6164, arst=\RESET, srst={ }
  39 cells in clk=\CLOCK, en=$abc$8981$auto$opt_dff.cc:219:make_patterns_logic$7501, arst=\RESET, srst={ }
  61 cells in clk=\CLOCK, en=$abc$8949$auto$opt_dff.cc:219:make_patterns_logic$7917, arst=\RESET, srst={ }
  41 cells in clk=\CLOCK, en=$abc$9142$auto$opt_dff.cc:219:make_patterns_logic$6922, arst=\RESET, srst={ }
  61 cells in clk=\CLOCK, en=$abc$9027$auto$opt_dff.cc:219:make_patterns_logic$7184, arst=\RESET, srst={ }
  89 cells in clk=\CLOCK, en=$abc$9172$auto$opt_dff.cc:219:make_patterns_logic$6243, arst=\RESET, srst={ }
  45 cells in clk=\CLOCK, en={ }, arst=\RESET, srst={ }

3.34.2. Extracting gate netlist of module `\b05' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$8807$auto$opt_dff.cc:219:make_patterns_logic$7959, asynchronously reset by \RESET
Extracted 111 gates and 136 wires to a netlist network with 25 inputs and 45 outputs.

3.34.2.1. Executing ABC.

3.34.3. Extracting gate netlist of module `\b05' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$9226$auto$opt_dff.cc:219:make_patterns_logic$6164, asynchronously reset by \RESET
Extracted 27 gates and 57 wires to a netlist network with 30 inputs and 11 outputs.

3.34.3.1. Executing ABC.

3.34.4. Extracting gate netlist of module `\b05' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$8981$auto$opt_dff.cc:219:make_patterns_logic$7501, asynchronously reset by \RESET
Extracted 39 gates and 53 wires to a netlist network with 14 inputs and 13 outputs.

3.34.4.1. Executing ABC.

3.34.5. Extracting gate netlist of module `\b05' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$8949$auto$opt_dff.cc:219:make_patterns_logic$7917, asynchronously reset by \RESET
Extracted 61 gates and 110 wires to a netlist network with 49 inputs and 29 outputs.

3.34.5.1. Executing ABC.

3.34.6. Extracting gate netlist of module `\b05' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$9142$auto$opt_dff.cc:219:make_patterns_logic$6922, asynchronously reset by \RESET
Extracted 41 gates and 69 wires to a netlist network with 28 inputs and 17 outputs.

3.34.6.1. Executing ABC.

3.34.7. Extracting gate netlist of module `\b05' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$9027$auto$opt_dff.cc:219:make_patterns_logic$7184, asynchronously reset by \RESET
Extracted 61 gates and 71 wires to a netlist network with 10 inputs and 34 outputs.

3.34.7.1. Executing ABC.

3.34.8. Extracting gate netlist of module `\b05' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$9172$auto$opt_dff.cc:219:make_patterns_logic$6243, asynchronously reset by \RESET
Extracted 74 gates and 117 wires to a netlist network with 43 inputs and 25 outputs.

3.34.8.1. Executing ABC.

3.34.9. Extracting gate netlist of module `\b05' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, asynchronously reset by \RESET
Extracted 43 gates and 62 wires to a netlist network with 19 inputs and 27 outputs.

3.34.9.1. Executing ABC.

yosys> abc -dff

3.35. Executing ABC pass (technology mapping using ABC).

3.35.1. Summary of detected clock domains:
  94 cells in clk=\CLOCK, en=$abc$9296$abc$8807$auto$opt_dff.cc:219:make_patterns_logic$7959, arst=\RESET, srst={ }
  30 cells in clk=\CLOCK, en=$abc$9396$abc$9226$auto$opt_dff.cc:219:make_patterns_logic$6164, arst=\RESET, srst={ }
  92 cells in clk=\CLOCK, en=$abc$9641$abc$9172$auto$opt_dff.cc:219:make_patterns_logic$6243, arst=\RESET, srst={ }
  55 cells in clk=\CLOCK, en=$abc$9578$abc$9027$auto$opt_dff.cc:219:make_patterns_logic$7184, arst=\RESET, srst={ }
  62 cells in clk=\CLOCK, en=$abc$9464$abc$8949$auto$opt_dff.cc:219:make_patterns_logic$7917, arst=\RESET, srst={ }
  40 cells in clk=\CLOCK, en=$abc$9424$abc$8981$auto$opt_dff.cc:219:make_patterns_logic$7501, arst=\RESET, srst={ }
  55 cells in clk=\CLOCK, en=$abc$9524$abc$9142$auto$opt_dff.cc:219:make_patterns_logic$6922, arst=\RESET, srst={ }
  49 cells in clk=\CLOCK, en={ }, arst=\RESET, srst={ }

3.35.2. Extracting gate netlist of module `\b05' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$9296$abc$8807$auto$opt_dff.cc:219:make_patterns_logic$7959, asynchronously reset by \RESET
Extracted 94 gates and 125 wires to a netlist network with 31 inputs and 42 outputs.

3.35.2.1. Executing ABC.

3.35.3. Extracting gate netlist of module `\b05' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$9396$abc$9226$auto$opt_dff.cc:219:make_patterns_logic$6164, asynchronously reset by \RESET
Extracted 25 gates and 53 wires to a netlist network with 28 inputs and 8 outputs.

3.35.3.1. Executing ABC.

3.35.4. Extracting gate netlist of module `\b05' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$9641$abc$9172$auto$opt_dff.cc:219:make_patterns_logic$6243, asynchronously reset by \RESET
Extracted 77 gates and 129 wires to a netlist network with 52 inputs and 32 outputs.

3.35.4.1. Executing ABC.

3.35.5. Extracting gate netlist of module `\b05' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$9578$abc$9027$auto$opt_dff.cc:219:make_patterns_logic$7184, asynchronously reset by \RESET
Extracted 55 gates and 66 wires to a netlist network with 11 inputs and 36 outputs.

3.35.5.1. Executing ABC.

3.35.6. Extracting gate netlist of module `\b05' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$9464$abc$8949$auto$opt_dff.cc:219:make_patterns_logic$7917, asynchronously reset by \RESET
Extracted 62 gates and 108 wires to a netlist network with 46 inputs and 34 outputs.

3.35.6.1. Executing ABC.

3.35.7. Extracting gate netlist of module `\b05' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$9424$abc$8981$auto$opt_dff.cc:219:make_patterns_logic$7501, asynchronously reset by \RESET
Extracted 40 gates and 54 wires to a netlist network with 14 inputs and 14 outputs.

3.35.7.1. Executing ABC.

3.35.8. Extracting gate netlist of module `\b05' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$9524$abc$9142$auto$opt_dff.cc:219:make_patterns_logic$6922, asynchronously reset by \RESET
Extracted 55 gates and 87 wires to a netlist network with 32 inputs and 27 outputs.

3.35.8.1. Executing ABC.

3.35.9. Extracting gate netlist of module `\b05' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, asynchronously reset by \RESET
Extracted 45 gates and 69 wires to a netlist network with 24 inputs and 29 outputs.

3.35.9.1. Executing ABC.

yosys> abc -dff

3.36. Executing ABC pass (technology mapping using ABC).

3.36.1. Summary of detected clock domains:
  99 cells in clk=\CLOCK, en=$abc$9771$abc$9296$abc$8807$auto$opt_dff.cc:219:make_patterns_logic$7959, arst=\RESET, srst={ }
  31 cells in clk=\CLOCK, en=$abc$9869$abc$9396$abc$9226$auto$opt_dff.cc:219:make_patterns_logic$6164, arst=\RESET, srst={ }
  107 cells in clk=\CLOCK, en=$abc$9895$abc$9641$abc$9172$auto$opt_dff.cc:219:make_patterns_logic$6243, arst=\RESET, srst={ }
  54 cells in clk=\CLOCK, en=$abc$9978$abc$9578$abc$9027$auto$opt_dff.cc:219:make_patterns_logic$7184, arst=\RESET, srst={ }
  49 cells in clk=\CLOCK, en=$abc$10142$abc$9524$abc$9142$auto$opt_dff.cc:219:make_patterns_logic$6922, arst=\RESET, srst={ }
  62 cells in clk=\CLOCK, en=$abc$10034$abc$9464$abc$8949$auto$opt_dff.cc:219:make_patterns_logic$7917, arst=\RESET, srst={ }
  39 cells in clk=\CLOCK, en=$abc$10101$abc$9424$abc$8981$auto$opt_dff.cc:219:make_patterns_logic$7501, arst=\RESET, srst={ }
  50 cells in clk=\CLOCK, en={ }, arst=\RESET, srst={ }

3.36.2. Extracting gate netlist of module `\b05' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$9771$abc$9296$abc$8807$auto$opt_dff.cc:219:make_patterns_logic$7959, asynchronously reset by \RESET
Extracted 99 gates and 127 wires to a netlist network with 28 inputs and 47 outputs.

3.36.2.1. Executing ABC.

3.36.3. Extracting gate netlist of module `\b05' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$9869$abc$9396$abc$9226$auto$opt_dff.cc:219:make_patterns_logic$6164, asynchronously reset by \RESET
Extracted 26 gates and 53 wires to a netlist network with 27 inputs and 8 outputs.

3.36.3.1. Executing ABC.

3.36.4. Extracting gate netlist of module `\b05' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$9895$abc$9641$abc$9172$auto$opt_dff.cc:219:make_patterns_logic$6243, asynchronously reset by \RESET
Extracted 92 gates and 145 wires to a netlist network with 53 inputs and 39 outputs.

3.36.4.1. Executing ABC.

3.36.5. Extracting gate netlist of module `\b05' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$9978$abc$9578$abc$9027$auto$opt_dff.cc:219:make_patterns_logic$7184, asynchronously reset by \RESET
Extracted 54 gates and 65 wires to a netlist network with 11 inputs and 36 outputs.

3.36.5.1. Executing ABC.

3.36.6. Extracting gate netlist of module `\b05' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$10142$abc$9524$abc$9142$auto$opt_dff.cc:219:make_patterns_logic$6922, asynchronously reset by \RESET
Extracted 49 gates and 80 wires to a netlist network with 31 inputs and 21 outputs.

3.36.6.1. Executing ABC.

3.36.7. Extracting gate netlist of module `\b05' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$10034$abc$9464$abc$8949$auto$opt_dff.cc:219:make_patterns_logic$7917, asynchronously reset by \RESET
Extracted 62 gates and 112 wires to a netlist network with 50 inputs and 28 outputs.

3.36.7.1. Executing ABC.

3.36.8. Extracting gate netlist of module `\b05' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$10101$abc$9424$abc$8981$auto$opt_dff.cc:219:make_patterns_logic$7501, asynchronously reset by \RESET
Extracted 39 gates and 53 wires to a netlist network with 14 inputs and 13 outputs.

3.36.8.1. Executing ABC.

3.36.9. Extracting gate netlist of module `\b05' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, asynchronously reset by \RESET
Extracted 46 gates and 71 wires to a netlist network with 25 inputs and 30 outputs.

3.36.9.1. Executing ABC.

yosys> opt_ffinv

3.37. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt -sat

3.38. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.38.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.
<suppressed ~2 debug messages>

yosys> opt_merge -nomux

3.38.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
<suppressed ~72 debug messages>
Removed a total of 24 cells.

yosys> opt_muxtree

3.38.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b05..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.38.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b05.
Performed a total of 0 changes.

yosys> opt_merge

3.38.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.38.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.38.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..
Removed 0 unused cells and 2795 unused wires.
<suppressed ~6 debug messages>

yosys> opt_expr

3.38.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.

3.38.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.38.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b05..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.38.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b05.
Performed a total of 0 changes.

yosys> opt_merge

3.38.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.38.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.38.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..

yosys> opt_expr

3.38.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.

3.38.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /home/users/temp_dir/yosys_kXaq3R/abc_tmp_1.scr

3.39. Executing ABC pass (technology mapping using ABC).

3.39.1. Extracting gate netlist of module `\b05' to `<abc-temp-dir>/input.blif'..
Extracted 402 gates and 451 wires to a netlist network with 49 inputs and 73 outputs.

3.39.1.1. Executing ABC.
DE:   #PIs =  49  #Luts =   102  Max Lvl =   7  Avg Lvl =   2.11  [   0.09 sec. at Pass 0]
DE:   #PIs =  49  #Luts =    90  Max Lvl =   5  Avg Lvl =   1.82  [   0.61 sec. at Pass 1]
DE:   #PIs =  49  #Luts =    90  Max Lvl =   5  Avg Lvl =   1.82  [   0.13 sec. at Pass 2]
DE:   #PIs =  49  #Luts =    89  Max Lvl =   5  Avg Lvl =   1.95  [   0.88 sec. at Pass 3]
DE:   #PIs =  49  #Luts =    88  Max Lvl =   4  Avg Lvl =   1.78  [   0.38 sec. at Pass 4]
DE:   #PIs =  49  #Luts =    88  Max Lvl =   4  Avg Lvl =   1.78  [   1.35 sec. at Pass 5]
DE:   #PIs =  49  #Luts =    88  Max Lvl =   4  Avg Lvl =   1.78  [   0.80 sec. at Pass 6]
DE:   #PIs =  49  #Luts =    88  Max Lvl =   4  Avg Lvl =   1.78  [   2.45 sec. at Pass 7]
DE:   #PIs =  49  #Luts =    88  Max Lvl =   4  Avg Lvl =   1.78  [  11.18 sec. at Pass 8]
DE:   #PIs =  49  #Luts =    88  Max Lvl =   4  Avg Lvl =   1.78  [   0.42 sec. at Pass 9]

yosys> opt

3.40. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.40.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.

yosys> opt_merge -nomux

3.40.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.40.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b05..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.40.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b05.
Performed a total of 0 changes.

yosys> opt_merge

3.40.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
Removed a total of 0 cells.

yosys> opt_dff

3.40.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.40.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..
Removed 0 unused cells and 437 unused wires.
<suppressed ~3 debug messages>

yosys> opt_expr

3.40.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.

3.40.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.40.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b05..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.40.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b05.
Performed a total of 0 changes.

yosys> opt_merge

3.40.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
Removed a total of 0 cells.

yosys> opt_dff

3.40.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.40.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..

yosys> opt_expr

3.40.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.

3.40.16. Finished OPT passes. (There is nothing left to do.)

yosys> opt_ffinv

3.41. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> stat

3.42. Printing statistics.

=== b05 ===

   Number of wires:                 92
   Number of wire bits:            206
   Number of public wires:          14
   Number of public wire bits:      67
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                146
     $_DFFE_PP0P_                   31
     $_DFF_PP0_                      3
     $lut                           88
     adder_carry                    24


yosys> shregmap -minlen 8 -maxlen 20

3.43. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.44. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.45. Printing statistics.

=== b05 ===

   Number of wires:                 92
   Number of wire bits:            206
   Number of public wires:          14
   Number of public wire bits:      67
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                146
     $_DFFE_PP0P_                   31
     $_DFF_PP0_                      3
     $lut                           88
     adder_carry                    24


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.46. Executing TECHMAP pass (map to technology primitives).

3.46.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.46.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.46.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~292 debug messages>

yosys> opt_expr -mux_undef

3.47. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.
<suppressed ~1658 debug messages>

yosys> simplemap

3.48. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.49. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.

yosys> opt_merge

3.50. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
<suppressed ~663 debug messages>
Removed a total of 221 cells.

yosys> opt_dff -nodffe -nosdff

3.51. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.52. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..
Removed 0 unused cells and 346 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.53. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.53.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.
<suppressed ~18 debug messages>

yosys> opt_merge -nomux

3.53.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_muxtree

3.53.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b05..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.53.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b05.
Performed a total of 0 changes.

yosys> opt_merge

3.53.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.53.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.53.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..
Removed 0 unused cells and 6 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.53.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.

3.53.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.53.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b05..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.53.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b05.
Performed a total of 0 changes.

yosys> opt_merge

3.53.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.53.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.53.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..

yosys> opt_expr

3.53.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.

3.53.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /home/users/temp_dir/yosys_kXaq3R/abc_tmp_2.scr

3.54. Executing ABC pass (technology mapping using ABC).

3.54.1. Extracting gate netlist of module `\b05' to `<abc-temp-dir>/input.blif'..
Extracted 436 gates and 488 wires to a netlist network with 50 inputs and 74 outputs.

3.54.1.1. Executing ABC.
DE:   #PIs =  50  #Luts =    89  Max Lvl =   4  Avg Lvl =   1.76  [   0.09 sec. at Pass 0]
DE:   #PIs =  50  #Luts =    89  Max Lvl =   4  Avg Lvl =   1.76  [   0.56 sec. at Pass 1]
DE:   #PIs =  50  #Luts =    89  Max Lvl =   4  Avg Lvl =   1.76  [   0.21 sec. at Pass 2]
DE:   #PIs =  50  #Luts =    89  Max Lvl =   4  Avg Lvl =   1.76  [   0.84 sec. at Pass 3]
DE:   #PIs =  50  #Luts =    89  Max Lvl =   4  Avg Lvl =   1.76  [   0.17 sec. at Pass 4]
DE:   #PIs =  50  #Luts =    89  Max Lvl =   4  Avg Lvl =   1.76  [   1.29 sec. at Pass 5]
DE:   #PIs =  50  #Luts =    88  Max Lvl =   5  Avg Lvl =   1.89  [  13.40 sec. at Pass 6]
DE:   #PIs =  50  #Luts =    88  Max Lvl =   5  Avg Lvl =   1.89  [   0.76 sec. at Pass 7]
DE:   #PIs =  50  #Luts =    88  Max Lvl =   5  Avg Lvl =   1.89  [   1.60 sec. at Pass 8]
DE:   #PIs =  50  #Luts =    88  Max Lvl =   5  Avg Lvl =   1.89  [   0.71 sec. at Pass 9]
DE:   #PIs =  50  #Luts =    88  Max Lvl =   5  Avg Lvl =   1.89  [  13.02 sec. at Pass 10]
DE:   #PIs =  50  #Luts =    88  Max Lvl =   5  Avg Lvl =   1.89  [   0.97 sec. at Pass 11]

yosys> opt

3.55. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.55.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.

yosys> opt_merge -nomux

3.55.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.55.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b05..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.55.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b05.
Performed a total of 0 changes.

yosys> opt_merge

3.55.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
Removed a total of 0 cells.

yosys> opt_dff

3.55.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.55.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..
Removed 0 unused cells and 343 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.55.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.

3.55.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.55.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b05..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.55.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b05.
Performed a total of 0 changes.

yosys> opt_merge

3.55.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b05'.
Removed a total of 0 cells.

yosys> opt_dff

3.55.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.55.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..

yosys> opt_expr

3.55.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b05.

3.55.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.56. Executing HIERARCHY pass (managing design hierarchy).

3.56.1. Analyzing design hierarchy..
Top module:  \b05

3.56.2. Analyzing design hierarchy..
Top module:  \b05
Removed 0 unused modules.

yosys> stat

3.57. Printing statistics.

=== b05 ===

   Number of wires:                 92
   Number of wire bits:            206
   Number of public wires:          14
   Number of public wire bits:      67
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                146
     $lut                           88
     adder_carry                    24
     dffsre                         34


yosys> opt_clean -purge

3.58. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b05..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.59. Executing Verilog backend.

yosys> bmuxmap

3.59.1. Executing BMUXMAP pass.

yosys> demuxmap

3.59.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\b05'.

Warnings: 1 unique messages, 1 total
End of script. Logfile hash: 517825eeb6, CPU: user 5.07s system 0.53s, MEM: 54.02 MB peak
Yosys 0.17+76 (git sha1 2073f9d19, gcc 9.1.0 -fPIC -Os)
Time spent: 99% 6x abc (1000 sec), 0% 47x opt_expr (1 sec), ...
real 72.62
user 963.78
sys 41.22
