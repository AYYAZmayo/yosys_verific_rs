
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.50
 Yosys 0.18+10 (git sha1 7a7a25778, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Tue May 31 17:39:28 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k demux.v mux.v wrapper_io_reg_tc1.v

yosys> verific -vlog2k demux.v mux.v wrapper_io_reg_tc1.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Tue May 31 17:39:28 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'demux.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'mux.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'wrapper_io_reg_tc1.v'
VERIFIC-INFO [VERI-2561] wrapper_io_reg_tc1.v:15: undeclared symbol 'mux_out', assumed default net type 'wire'

yosys> synth_rs -top wrapper_io_reg_tc1 -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.59

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\RS_DSP2_MULT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_sim'.
Generating RTLIL representation for module `\dsp_t1_20x18x64'.
Generating RTLIL representation for module `\dsp_t1_10x9x32'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top wrapper_io_reg_tc1

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] wrapper_io_reg_tc1.v:1: compiling module 'wrapper_io_reg_tc1'
VERIFIC-INFO [VERI-1018] mux.v:2: compiling module 'mux_128_2'
VERIFIC-WARNING [VERI-2580] mux.v:29: latch inferred for net 'in_internal1[127]'
VERIFIC-INFO [VERI-1018] mux.v:47: compiling module 'mux_128x1'
VERIFIC-INFO [VERI-1018] mux.v:61: compiling module 'mux_64x1'
VERIFIC-INFO [VERI-1018] mux.v:75: compiling module 'mux_32x1'
VERIFIC-INFO [VERI-1018] mux.v:89: compiling module 'mux_16x1'
VERIFIC-INFO [VERI-1018] mux.v:103: compiling module 'mux_8x1'
VERIFIC-INFO [VERI-1018] mux.v:117: compiling module 'mux_4x1'
VERIFIC-INFO [VERI-1018] mux.v:131: compiling module 'mux_2x1_reg'
VERIFIC-INFO [VERI-1018] mux.v:149: compiling module 'mux_2x1'
VERIFIC-INFO [VERI-1018] demux.v:2: compiling module 'demux_128_2'
VERIFIC-WARNING [VERI-2580] demux.v:29: latch inferred for net 'in_internal1'
VERIFIC-INFO [VERI-1018] demux.v:47: compiling module 'demux_1x128'
VERIFIC-INFO [VERI-1018] demux.v:133: compiling module 'demux_1x2'
VERIFIC-INFO [VERI-1018] demux.v:61: compiling module 'demux_1x64'
VERIFIC-INFO [VERI-1018] demux.v:75: compiling module 'demux_1x32'
VERIFIC-INFO [VERI-1018] demux.v:90: compiling module 'demux_1x16'
VERIFIC-INFO [VERI-1018] demux.v:104: compiling module 'demux_1x8'
VERIFIC-INFO [VERI-1018] demux.v:118: compiling module 'demux_1x4'
VERIFIC-INFO [VERI-1018] demux.v:142: compiling module 'demux_1x2_reg'
Importing module wrapper_io_reg_tc1.
Importing module demux_128_2.
Importing module demux_1x128.
Importing module demux_1x2.
Importing module demux_1x64.
Importing module demux_1x32.
Importing module demux_1x16.
Importing module demux_1x8.
Importing module demux_1x4.
Importing module demux_1x2_reg.
Importing module mux_128_2.
Importing module mux_128x1.
Importing module mux_2x1.
Importing module mux_64x1.
Importing module mux_32x1.
Importing module mux_16x1.
Importing module mux_8x1.
Importing module mux_4x1.
Importing module mux_2x1_reg.

3.3.1. Analyzing design hierarchy..
Top module:  \wrapper_io_reg_tc1
Used module:     \mux_128_2
Used module:         \mux_128x1
Used module:             \mux_2x1
Used module:             \mux_64x1
Used module:                 \mux_32x1
Used module:                     \mux_16x1
Used module:                         \mux_8x1
Used module:                             \mux_4x1
Used module:                                 \mux_2x1_reg
Used module:     \demux_128_2
Used module:         \demux_1x128
Used module:             \demux_1x64
Used module:                 \demux_1x32
Used module:                     \demux_1x16
Used module:                         \demux_1x8
Used module:                             \demux_1x4
Used module:                                 \demux_1x2_reg
Used module:                                 \demux_1x2

3.3.2. Analyzing design hierarchy..
Top module:  \wrapper_io_reg_tc1
Used module:     \mux_128_2
Used module:         \mux_128x1
Used module:             \mux_2x1
Used module:             \mux_64x1
Used module:                 \mux_32x1
Used module:                     \mux_16x1
Used module:                         \mux_8x1
Used module:                             \mux_4x1
Used module:                                 \mux_2x1_reg
Used module:     \demux_128_2
Used module:         \demux_1x128
Used module:             \demux_1x64
Used module:                 \demux_1x32
Used module:                     \demux_1x16
Used module:                         \demux_1x8
Used module:                             \demux_1x4
Used module:                                 \demux_1x2_reg
Used module:                                 \demux_1x2
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.4.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.4.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module mux_2x1_reg.
Optimizing module mux_4x1.
Optimizing module mux_8x1.
Optimizing module mux_16x1.
Optimizing module mux_32x1.
Optimizing module mux_64x1.
Optimizing module mux_2x1.
Optimizing module mux_128x1.
Optimizing module mux_128_2.
<suppressed ~12 debug messages>
Optimizing module demux_1x2_reg.
Optimizing module demux_1x4.
Optimizing module demux_1x8.
Optimizing module demux_1x16.
Optimizing module demux_1x32.
Optimizing module demux_1x64.
Optimizing module demux_1x2.
Optimizing module demux_1x128.
Optimizing module demux_128_2.
<suppressed ~7 debug messages>
Optimizing module wrapper_io_reg_tc1.

yosys> bmuxmap

3.5. Executing BMUXMAP pass.

yosys> demuxmap

3.6. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> flatten

3.7. Executing FLATTEN pass (flatten design).
Deleting now unused module demux_128_2.
Deleting now unused module demux_1x128.
Deleting now unused module demux_1x16.
Deleting now unused module demux_1x2.
Deleting now unused module demux_1x2_reg.
Deleting now unused module demux_1x32.
Deleting now unused module demux_1x4.
Deleting now unused module demux_1x64.
Deleting now unused module demux_1x8.
Deleting now unused module mux_128_2.
Deleting now unused module mux_128x1.
Deleting now unused module mux_16x1.
Deleting now unused module mux_2x1.
Deleting now unused module mux_2x1_reg.
Deleting now unused module mux_32x1.
Deleting now unused module mux_4x1.
Deleting now unused module mux_64x1.
Deleting now unused module mux_8x1.
<suppressed ~43 debug messages>

yosys> bmuxmap

3.8. Executing BMUXMAP pass.

yosys> demuxmap

3.9. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> tribuf -logic

3.10. Executing TRIBUF pass.

yosys> deminout

3.11. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_tc1.
<suppressed ~5 debug messages>

yosys> opt_clean

3.13. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_reg_tc1..
Removed 4 unused cells and 12666 unused wires.
<suppressed ~1422 debug messages>

yosys> check

3.14. Executing CHECK pass (checking for obvious problems).
Checking module wrapper_io_reg_tc1...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.15. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.15.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_tc1.

yosys> opt_merge -nomux

3.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_tc1'.
<suppressed ~387 debug messages>
Removed a total of 129 cells.

yosys> opt_muxtree

3.15.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wrapper_io_reg_tc1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~286 debug messages>

yosys> opt_reduce

3.15.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wrapper_io_reg_tc1.
Performed a total of 0 changes.

yosys> opt_merge

3.15.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_tc1'.
<suppressed ~390 debug messages>
Removed a total of 130 cells.

yosys> opt_dff -nodffe -nosdff

3.15.6. Executing OPT_DFF pass (perform DFF optimizations).
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_1.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_2.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst0.\d128_2.\d64_1.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_2.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst0.\d128_1.\d64_1.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active CLR on $flatten\demux0.$verific$sel_internal1_reg$demux.v:29$437 ($dlatchsr) from module wrapper_io_reg_tc1.
Removing never-active ARST on $flatten\demux0.$verific$sel_internal1_reg$demux.v:29$437 ($dlatchsr) from module wrapper_io_reg_tc1.
Removing never-active CLR on $flatten\demux0.$verific$sel_internal0_reg$demux.v:29$444 ($dlatchsr) from module wrapper_io_reg_tc1.
Removing never-active ARST on $flatten\demux0.$verific$sel_internal0_reg$demux.v:29$444 ($dlatchsr) from module wrapper_io_reg_tc1.
Removing never-active CLR on $flatten\mux1.$verific$sel_internal1_reg$mux.v:29$1117 ($dlatchsr) from module wrapper_io_reg_tc1.
Removing never-active ARST on $flatten\mux1.$verific$sel_internal1_reg$mux.v:29$1117 ($dlatchsr) from module wrapper_io_reg_tc1.
Removing never-active CLR on $flatten\mux1.$verific$sel_internal0_reg$mux.v:29$1102 ($dlatchsr) from module wrapper_io_reg_tc1.
Removing never-active ARST on $flatten\mux1.$verific$sel_internal0_reg$mux.v:29$1102 ($dlatchsr) from module wrapper_io_reg_tc1.
Removing never-active CLR on $flatten\mux0.$verific$sel_internal1_reg$mux.v:29$1117 ($dlatchsr) from module wrapper_io_reg_tc1.
Removing never-active ARST on $flatten\mux0.$verific$sel_internal1_reg$mux.v:29$1117 ($dlatchsr) from module wrapper_io_reg_tc1.
Removing never-active CLR on $flatten\mux0.$verific$sel_internal0_reg$mux.v:29$1102 ($dlatchsr) from module wrapper_io_reg_tc1.
Removing never-active ARST on $flatten\mux0.$verific$sel_internal0_reg$mux.v:29$1102 ($dlatchsr) from module wrapper_io_reg_tc1.
Removing never-active CLR on $flatten\mux0.$verific$in_internal1_reg$mux.v:29$1110 ($dlatchsr) from module wrapper_io_reg_tc1.
Removing never-active ARST on $flatten\mux0.$verific$in_internal1_reg$mux.v:29$1110 ($dlatchsr) from module wrapper_io_reg_tc1.
Removing never-active CLR on $flatten\mux0.$verific$in_internal0_reg$mux.v:29$1124 ($dlatchsr) from module wrapper_io_reg_tc1.
Removing never-active ARST on $flatten\mux0.$verific$in_internal0_reg$mux.v:29$1124 ($dlatchsr) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_2.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_1.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_1.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_1.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst1.\d128_2.\d64_1.\d32_1.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_2.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_2.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_2.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_2.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_2.\d16_1.\d8_2.\d4_2.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_2.\d16_1.\d8_2.\d4_1.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_2.\d16_1.\d8_1.\d4_2.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_2.\d16_1.\d8_1.\d4_1.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_1.\d16_2.\d8_2.\d4_2.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_1.\d16_2.\d8_2.\d4_1.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_1.\d16_2.\d8_1.\d4_2.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.
Removing never-active async load on $flatten\demux0.\inst1.\d128_1.\d64_2.\d32_1.\d16_2.\d8_1.\d4_1.$verific$out_reg$demux.v:153$1082 ($aldff) from module wrapper_io_reg_tc1.

yosys> opt_clean

3.15.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_reg_tc1..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.15.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_tc1.

3.15.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.15.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wrapper_io_reg_tc1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~287 debug messages>

yosys> opt_reduce

3.15.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wrapper_io_reg_tc1.
Performed a total of 0 changes.

yosys> opt_merge

3.15.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_tc1'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.15.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.15.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_reg_tc1..

yosys> opt_expr

3.15.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_tc1.

3.15.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

3.16. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.16.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.16.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.16.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.16.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_reg_tc1..

yosys> fsm_opt

3.16.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.16.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.16.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.16.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat -nosdff

3.17. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.17.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_tc1.

yosys> opt_merge -nomux

3.17.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_tc1'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.17.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wrapper_io_reg_tc1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~287 debug messages>

yosys> opt_reduce

3.17.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wrapper_io_reg_tc1.
Performed a total of 0 changes.

yosys> opt_merge

3.17.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_tc1'.
Removed a total of 0 cells.

yosys> opt_dff -sat -nosdff

3.17.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.17.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_reg_tc1..

yosys> opt_expr

3.17.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_tc1.

3.17.9. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.18. Executing WREDUCE pass (reducing word size of cells).

yosys> peepopt

3.19. Executing PEEPOPT pass (run peephole optimizers).

yosys> opt_clean

3.20. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_reg_tc1..

yosys> bmuxmap

3.21. Executing BMUXMAP pass.

yosys> demuxmap

3.22. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> alumacc

3.23. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module wrapper_io_reg_tc1:
  created 0 $alu and 0 $macc cells.

yosys> opt_expr

3.24. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_tc1.

yosys> opt_merge -nomux

3.25. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_tc1'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.26. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wrapper_io_reg_tc1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~287 debug messages>

yosys> opt_reduce

3.27. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wrapper_io_reg_tc1.
Performed a total of 0 changes.

yosys> opt_merge

3.28. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_tc1'.
Removed a total of 0 cells.

yosys> opt_share

3.29. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe -nosdff

3.30. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.31. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_reg_tc1..

yosys> opt_expr

3.32. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_tc1.
MAX OPT ITERATION = 1

yosys> stat

3.33. Printing statistics.

=== wrapper_io_reg_tc1 ===

   Number of wires:               6010
   Number of wire bits:          13193
   Number of public wires:        6008
   Number of public wire bits:   13191
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1161
     $dff                          384
     $dlatch                        10
     $mux                          767


yosys> memory -nomap

3.34. Executing MEMORY pass.

yosys> opt_mem

3.34.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.34.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.34.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.34.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.34.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.34.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_reg_tc1..

yosys> memory_share

3.34.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.34.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.34.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_reg_tc1..

yosys> memory_collect

3.34.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.35. Printing statistics.

=== wrapper_io_reg_tc1 ===

   Number of wires:               6010
   Number of wire bits:          13193
   Number of public wires:        6008
   Number of public wire bits:   13191
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1161
     $dff                          384
     $dlatch                        10
     $mux                          767


yosys> muxpack

3.36. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~638 debug messages>

yosys> opt_clean

3.37. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_reg_tc1..

yosys> pmuxtree

3.38. Executing PMUXTREE pass.

yosys> muxpack

3.39. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~638 debug messages>

yosys> memory_map

3.40. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> stat

3.41. Printing statistics.

=== wrapper_io_reg_tc1 ===

   Number of wires:               6010
   Number of wire bits:          13193
   Number of public wires:        6008
   Number of public wire bits:   13191
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1161
     $dff                          384
     $dlatch                        10
     $mux                          767


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.42. Executing TECHMAP pass (map to technology primitives).

3.42.1. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.42.2. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.42.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $dlatch.
Using extmapper simplemap for cells of type $dff.
No more expansions possible.
<suppressed ~1232 debug messages>

yosys> stat

3.43. Printing statistics.

=== wrapper_io_reg_tc1 ===

   Number of wires:               6010
   Number of wire bits:          13193
   Number of public wires:        6008
   Number of public wire bits:   13191
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1960
     $_DFF_P_                      512
     $_DLATCH_N_                   150
     $_DLATCH_P_                   150
     $_MUX_                       1148


yosys> opt_expr

3.44. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_tc1.
<suppressed ~2 debug messages>

yosys> opt_merge -nomux

3.45. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_tc1'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.46. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wrapper_io_reg_tc1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.47. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wrapper_io_reg_tc1.
Performed a total of 0 changes.

yosys> opt_merge

3.48. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_tc1'.
Removed a total of 0 cells.

yosys> opt_share

3.49. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe -nosdff

3.50. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.51. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_reg_tc1..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.52. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_tc1.
MAX OPT ITERATION = 1

yosys> opt -nodffe -fast -full -nosdff

3.53. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.53.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_tc1.
<suppressed ~254 debug messages>

yosys> opt_merge

3.53.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_tc1'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.53.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.53.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_reg_tc1..

3.53.5. Finished fast OPT passes.

yosys> techmap -map +/techmap.v

3.54. Executing TECHMAP pass (map to technology primitives).

3.54.1. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.54.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> opt -nodffe -sat -nosdff

3.55. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.55.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_tc1.

yosys> opt_merge -nomux

3.55.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_tc1'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.55.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wrapper_io_reg_tc1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.55.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wrapper_io_reg_tc1.
Performed a total of 0 changes.

yosys> opt_merge

3.55.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_tc1'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -sat -nosdff

3.55.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.55.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_reg_tc1..

yosys> opt_expr

3.55.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_tc1.

3.55.9. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

3.56. Executing ABC pass (technology mapping using ABC).

3.56.1. Summary of detected clock domains:
  1958 cells in clk=\clk, en={ }, arst={ }, srst={ }

3.56.2. Extracting gate netlist of module `\wrapper_io_reg_tc1' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 1658 gates and 1961 wires to a netlist network with 302 inputs and 130 outputs.

3.56.2.1. Executing ABC.

yosys> abc -dff

3.57. Executing ABC pass (technology mapping using ABC).

3.57.1. Summary of detected clock domains:
  2266 cells in clk=\clk, en={ }, arst={ }, srst={ }

3.57.2. Extracting gate netlist of module `\wrapper_io_reg_tc1' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 1966 gates and 2268 wires to a netlist network with 302 inputs and 130 outputs.

3.57.2.1. Executing ABC.

yosys> abc -dff

3.58. Executing ABC pass (technology mapping using ABC).

3.58.1. Summary of detected clock domains:
  2074 cells in clk=\clk, en={ }, arst={ }, srst={ }

3.58.2. Extracting gate netlist of module `\wrapper_io_reg_tc1' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 1774 gates and 2076 wires to a netlist network with 302 inputs and 130 outputs.

3.58.2.1. Executing ABC.

yosys> abc -dff

3.59. Executing ABC pass (technology mapping using ABC).

3.59.1. Summary of detected clock domains:
  2092 cells in clk=\clk, en={ }, arst={ }, srst={ }

3.59.2. Extracting gate netlist of module `\wrapper_io_reg_tc1' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 1792 gates and 2094 wires to a netlist network with 302 inputs and 130 outputs.

3.59.2.1. Executing ABC.

yosys> opt_ffinv

3.60. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt -sat -nosdff

3.61. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.61.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_tc1.

yosys> opt_merge -nomux

3.61.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_tc1'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.61.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wrapper_io_reg_tc1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.61.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wrapper_io_reg_tc1.
Performed a total of 0 changes.

yosys> opt_merge

3.61.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_tc1'.
Removed a total of 0 cells.

yosys> opt_dff -sat -nosdff

3.61.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.61.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_reg_tc1..
Removed 0 unused cells and 11238 unused wires.
<suppressed ~3297 debug messages>

yosys> opt_expr

3.61.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_tc1.

3.61.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.61.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wrapper_io_reg_tc1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.61.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wrapper_io_reg_tc1.
Performed a total of 0 changes.

yosys> opt_merge

3.61.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_tc1'.
Removed a total of 0 cells.

yosys> opt_dff -sat -nosdff

3.61.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.61.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_reg_tc1..

yosys> opt_expr

3.61.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_tc1.

3.61.16. Finished OPT passes. (There is nothing left to do.)

yosys> bmuxmap

3.62. Executing BMUXMAP pass.

yosys> demuxmap

3.63. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> abc -script /home/users/temp_dir/yosys_BUkJWw/abc_tmp_1.scr

3.64. Executing ABC pass (technology mapping using ABC).

3.64.1. Extracting gate netlist of module `\wrapper_io_reg_tc1' to `<abc-temp-dir>/input.blif'..
Extracted 1474 gates and 1780 wires to a netlist network with 306 inputs and 134 outputs.

3.64.1.1. Executing ABC.
DE:   #PIs = 306  #Luts =   489  Max Lvl =   7  Avg Lvl =   2.04  [   0.07 sec. at Pass 0]
DE:   #PIs = 306  #Luts =   427  Max Lvl =   6  Avg Lvl =   3.02  [   1.77 sec. at Pass 1]
DE:   #PIs = 306  #Luts =   422  Max Lvl =   6  Avg Lvl =   3.00  [   0.42 sec. at Pass 2]
DE:   #PIs = 306  #Luts =   416  Max Lvl =   6  Avg Lvl =   3.10  [   0.88 sec. at Pass 3]
DE:   #PIs = 306  #Luts =   399  Max Lvl =   6  Avg Lvl =   2.95  [   0.58 sec. at Pass 4]
DE:   #PIs = 306  #Luts =   385  Max Lvl =   6  Avg Lvl =   2.78  [   1.14 sec. at Pass 5]
DE:   #PIs = 306  #Luts =   375  Max Lvl =   6  Avg Lvl =   2.38  [   0.69 sec. at Pass 6]
DE:   #PIs = 306  #Luts =   369  Max Lvl =   6  Avg Lvl =   2.49  [   0.94 sec. at Pass 7]
DE:   #PIs = 306  #Luts =   364  Max Lvl =   6  Avg Lvl =   2.14  [   0.58 sec. at Pass 8]
DE:   #PIs = 306  #Luts =   361  Max Lvl =   6  Avg Lvl =   2.20  [   0.99 sec. at Pass 9]
DE:   #PIs = 306  #Luts =   358  Max Lvl =   6  Avg Lvl =   2.20  [   0.62 sec. at Pass 10]
DE:   #PIs = 306  #Luts =   357  Max Lvl =   6  Avg Lvl =   2.15  [   1.03 sec. at Pass 11]
DE:   #PIs = 306  #Luts =   355  Max Lvl =   6  Avg Lvl =   2.15  [   0.55 sec. at Pass 12]
DE:   #PIs = 306  #Luts =   352  Max Lvl =   6  Avg Lvl =   2.08  [   0.98 sec. at Pass 13]
DE:   #PIs = 306  #Luts =   352  Max Lvl =   6  Avg Lvl =   2.08  [   0.52 sec. at Pass 14]
DE:   #PIs = 306  #Luts =   352  Max Lvl =   6  Avg Lvl =   2.08  [   0.94 sec. at Pass 15]
DE:   #PIs = 306  #Luts =   351  Max Lvl =   6  Avg Lvl =   2.02  [   0.54 sec. at Pass 16]
DE:   #PIs = 306  #Luts =   351  Max Lvl =   6  Avg Lvl =   2.02  [   1.05 sec. at Pass 17]
DE:   #PIs = 306  #Luts =   347  Max Lvl =   6  Avg Lvl =   2.02  [   0.57 sec. at Pass 18]
DE:   #PIs = 306  #Luts =   346  Max Lvl =   5  Avg Lvl =   2.01  [   1.40 sec. at Pass 19]
DE:   #PIs = 306  #Luts =   345  Max Lvl =   6  Avg Lvl =   2.03  [   0.96 sec. at Pass 20]
DE:   #PIs = 306  #Luts =   345  Max Lvl =   6  Avg Lvl =   2.03  [   1.24 sec. at Pass 21]
DE:   #PIs = 306  #Luts =   344  Max Lvl =   6  Avg Lvl =   2.02  [   0.69 sec. at Pass 22]
DE:   #PIs = 306  #Luts =   344  Max Lvl =   6  Avg Lvl =   2.02  [   1.04 sec. at Pass 23]
DE:   #PIs = 306  #Luts =   344  Max Lvl =   6  Avg Lvl =   2.02  [   0.43 sec. at Pass 24]
DE:   #PIs = 306  #Luts =   344  Max Lvl =   6  Avg Lvl =   2.02  [   0.80 sec. at Pass 25]
DE:   #PIs = 306  #Luts =   344  Max Lvl =   6  Avg Lvl =   2.02  [   1.93 sec. at Pass 26]
DE:   #PIs = 306  #Luts =   344  Max Lvl =   6  Avg Lvl =   2.02  [   0.11 sec. at Pass 27]

yosys> opt_expr

3.65. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_tc1.

yosys> opt_merge -nomux

3.66. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_tc1'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.67. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wrapper_io_reg_tc1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.68. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wrapper_io_reg_tc1.
Performed a total of 0 changes.

yosys> opt_merge

3.69. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_tc1'.
Removed a total of 0 cells.

yosys> opt_share

3.70. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe -nosdff

3.71. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.72. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_reg_tc1..
Removed 0 unused cells and 1780 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.73. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_tc1.
MAX OPT ITERATION = 1

yosys> opt_ffinv

3.74. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> stat

3.75. Printing statistics.

=== wrapper_io_reg_tc1 ===

   Number of wires:               3198
   Number of wire bits:           8209
   Number of public wires:        2712
   Number of public wire bits:    7723
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                916
     $_DFF_P_                      272
     $_DLATCH_N_                   150
     $_DLATCH_P_                   150
     $lut                          344


yosys> shregmap -minlen 8 -maxlen 20

3.76. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.77. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.78. Printing statistics.

=== wrapper_io_reg_tc1 ===

   Number of wires:               3348
   Number of wire bits:           8359
   Number of public wires:        2712
   Number of public wire bits:    7723
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1066
     $_DFF_P_                      272
     $_DLATCHSR_PPP_               300
     $_NOT_                        150
     $lut                          344


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.79. Executing TECHMAP pass (map to technology primitives).

3.79.1. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.79.2. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.79.3. Continuing TECHMAP pass.
Using template \$_DLATCHSR_PPP_ for cells of type $_DLATCHSR_PPP_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using extmapper simplemap for cells of type $lut.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~1652 debug messages>

yosys> opt_expr -mux_undef

3.80. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_tc1.
<suppressed ~16415 debug messages>

yosys> simplemap

3.81. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.82. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_tc1.

yosys> opt_merge

3.83. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_tc1'.
<suppressed ~5598 debug messages>
Removed a total of 1866 cells.

yosys> opt_dff -nodffe -nosdff

3.84. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.85. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_reg_tc1..
Removed 0 unused cells and 4246 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.86. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.86.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_tc1.
<suppressed ~325 debug messages>

yosys> opt_merge -nomux

3.86.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_tc1'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.86.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wrapper_io_reg_tc1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.86.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wrapper_io_reg_tc1.
Performed a total of 0 changes.

yosys> opt_merge

3.86.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_tc1'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.86.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.86.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_reg_tc1..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.86.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_tc1.

3.86.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.86.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wrapper_io_reg_tc1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.86.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wrapper_io_reg_tc1.
Performed a total of 0 changes.

yosys> opt_merge

3.86.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_tc1'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.86.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.86.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_reg_tc1..

yosys> opt_expr

3.86.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_tc1.

3.86.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /home/users/temp_dir/yosys_BUkJWw/abc_tmp_2.scr

3.87. Executing ABC pass (technology mapping using ABC).

3.87.1. Extracting gate netlist of module `\wrapper_io_reg_tc1' to `<abc-temp-dir>/input.blif'..
Extracted 1272 gates and 1580 wires to a netlist network with 306 inputs and 136 outputs.

3.87.1.1. Executing ABC.
DE:   #PIs = 306  #Luts =   346  Max Lvl =   6  Avg Lvl =   1.99  [   0.28 sec. at Pass 0]
DE:   #PIs = 306  #Luts =   346  Max Lvl =   5  Avg Lvl =   1.99  [   2.74 sec. at Pass 1]
DE:   #PIs = 306  #Luts =   346  Max Lvl =   5  Avg Lvl =   1.99  [   0.53 sec. at Pass 2]
DE:   #PIs = 306  #Luts =   346  Max Lvl =   5  Avg Lvl =   1.99  [   0.85 sec. at Pass 3]
DE:   #PIs = 306  #Luts =   346  Max Lvl =   5  Avg Lvl =   1.99  [   0.46 sec. at Pass 4]
DE:   #PIs = 306  #Luts =   346  Max Lvl =   5  Avg Lvl =   1.99  [   0.76 sec. at Pass 5]
DE:   #PIs = 306  #Luts =   346  Max Lvl =   5  Avg Lvl =   1.99  [   1.84 sec. at Pass 6]
DE:   #PIs = 306  #Luts =   346  Max Lvl =   5  Avg Lvl =   1.99  [   0.09 sec. at Pass 7]

yosys> opt_expr

3.88. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_tc1.

yosys> opt_merge -nomux

3.89. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_tc1'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.90. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wrapper_io_reg_tc1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.91. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wrapper_io_reg_tc1.
Performed a total of 0 changes.

yosys> opt_merge

3.92. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_reg_tc1'.
Removed a total of 0 cells.

yosys> opt_share

3.93. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe -nosdff

3.94. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.95. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_reg_tc1..
Removed 0 unused cells and 1413 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.96. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_reg_tc1.
MAX OPT ITERATION = 1

yosys> hierarchy -check

3.97. Executing HIERARCHY pass (managing design hierarchy).

3.97.1. Analyzing design hierarchy..
Top module:  \wrapper_io_reg_tc1

3.97.2. Analyzing design hierarchy..
Top module:  \wrapper_io_reg_tc1
Removed 0 unused modules.

yosys> stat

3.98. Printing statistics.

=== wrapper_io_reg_tc1 ===

   Number of wires:               3200
   Number of wire bits:           8211
   Number of public wires:        2712
   Number of public wire bits:    7723
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                918
     $lut                          346
     dffsre                        272
     latchsre                      300


yosys> opt_clean -purge

3.99. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_reg_tc1..
Removed 0 unused cells and 2401 unused wires.
<suppressed ~2401 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.100. Executing Verilog backend.
Dumping module `\wrapper_io_reg_tc1'.

Warnings: 2 unique messages, 2 total
End of script. Logfile hash: a85a5ddefd, CPU: user 6.82s system 0.11s, MEM: 70.64 MB peak
Yosys 0.18+10 (git sha1 7a7a25778, gcc 9.1.0 -fPIC -Os)
Time spent: 97% 6x abc (270 sec), 0% 26x opt_expr (2 sec), ...
real 46.14
user 250.20
sys 26.80
