
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.24
 Yosys 0.16+65 (git sha1 03bd62bb8, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k gost89_cfb.v gost89_ecb_encrypt.v gost89_round.v gost89_sbox.v

yosys> verific -vlog2k gost89_cfb.v gost89_ecb_encrypt.v gost89_round.v gost89_sbox.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'gost89_cfb.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'gost89_ecb_encrypt.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'gost89_round.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'gost89_sbox.v'

yosys> synth_rs -top gost89_cfb -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.47

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\dsp_t1_sim'.
Generating RTLIL representation for module `\dsp_t1_20x18x64'.
Generating RTLIL representation for module `\dsp_t1_10x9x32'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top gost89_cfb

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] gost89_cfb.v:1: compiling module 'gost89_cfb'
VERIFIC-INFO [VERI-1018] gost89_ecb_encrypt.v:1: compiling module 'gost89_ecb_encrypt'
VERIFIC-INFO [VERI-1018] gost89_round.v:1: compiling module 'gost89_round'
VERIFIC-INFO [VERI-1018] gost89_sbox.v:1: compiling module 'gost89_sbox'
VERIFIC-WARNING [VERI-1209] gost89_ecb_encrypt.v:33: expression size 7 truncated to fit in target size 6
Importing module gost89_cfb.
Importing module gost89_ecb_encrypt.
Importing module gost89_round.
Importing module gost89_sbox.

3.3.1. Analyzing design hierarchy..
Top module:  \gost89_cfb
Used module:     \gost89_ecb_encrypt
Used module:         \gost89_round
Used module:             \gost89_sbox

3.3.2. Analyzing design hierarchy..
Top module:  \gost89_cfb
Used module:     \gost89_ecb_encrypt
Used module:         \gost89_round
Used module:             \gost89_sbox
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_mux

3.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.8. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_sbox.
Optimizing module gost89_round.
Optimizing module gost89_ecb_encrypt.
<suppressed ~3 debug messages>
Optimizing module gost89_cfb.

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).
Deleting now unused module gost89_sbox.
Deleting now unused module gost89_round.
Deleting now unused module gost89_ecb_encrypt.
<suppressed ~10 debug messages>

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..
Removed 0 unused cells and 2337 unused wires.
<suppressed ~28 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module gost89_cfb...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.
<suppressed ~3 debug messages>

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~14 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb.
    New ctrl vector for $pmux cell $flatten\ecb_encrypt.$verific$select_114$gost89_ecb_encrypt.v:80$1814: { $auto$opt_reduce.cc:134:opt_pmux$2436 $auto$opt_reduce.cc:134:opt_pmux$2434 $auto$opt_reduce.cc:134:opt_pmux$2432 $auto$opt_reduce.cc:134:opt_pmux$2430 $auto$opt_reduce.cc:134:opt_pmux$2428 $auto$opt_reduce.cc:134:opt_pmux$2426 $auto$opt_reduce.cc:134:opt_pmux$2424 $auto$opt_reduce.cc:134:opt_pmux$2422 $flatten\ecb_encrypt.$verific$n1897$1007 }
  Optimizing cells in module \gost89_cfb.
Performed a total of 1 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Removing never-active async load on $verific$out_reg$gost89_cfb.v:40$956 ($aldff) from module gost89_cfb.
Removing never-active async load on $verific$in_value_reg$gost89_cfb.v:40$955 ($aldff) from module gost89_cfb.
Removing never-active async load on $verific$gamma_reg$gost89_cfb.v:40$953 ($aldff) from module gost89_cfb.
Removing never-active async load on $flatten\ecb_encrypt.$verific$round_num_reg$gost89_ecb_encrypt.v:44$1777 ($aldff) from module gost89_cfb.
Removing never-active async load on $flatten\ecb_encrypt.$verific$round_key_reg$gost89_ecb_encrypt.v:80$1815 ($aldff) from module gost89_cfb.
Removing never-active async load on $flatten\ecb_encrypt.$verific$out_reg$gost89_ecb_encrypt.v:44$1778 ($aldff) from module gost89_cfb.
Removing never-active async load on $flatten\ecb_encrypt.$verific$n2_reg$gost89_ecb_encrypt.v:44$1775 ($aldff) from module gost89_cfb.
Removing never-active async load on $flatten\ecb_encrypt.$verific$n1_reg$gost89_ecb_encrypt.v:44$1774 ($aldff) from module gost89_cfb.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.
<suppressed ~6 debug messages>

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~14 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..
Removed 1 unused cells and 2 unused wires.
<suppressed ~2 debug messages>

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.

3.11.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~14 debug messages>

yosys> opt_reduce

3.11.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb.
Performed a total of 0 changes.

yosys> opt_merge

3.11.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..

yosys> opt_expr

3.11.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.

3.11.23. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~14 debug messages>

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $verific$out_reg$gost89_cfb.v:40$956 ($dff) from module gost89_cfb (D = $verific$n413$21, Q = \out).
Adding EN signal on $verific$in_value_reg$gost89_cfb.v:40$955 ($dff) from module gost89_cfb (D = \in, Q = \in_value).
Adding EN signal on $verific$gamma_reg$gost89_cfb.v:40$953 ($dff) from module gost89_cfb (D = $verific$n739$25, Q = \gamma).
Adding SRST signal on $verific$busy_reg$gost89_cfb.v:40$954 ($dff) from module gost89_cfb (D = $verific$n341$11, Q = \busy, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$2442 ($sdff) from module gost89_cfb (D = $verific$n341$11, Q = \busy).
Adding EN signal on $flatten\ecb_encrypt.$verific$round_key_reg$gost89_ecb_encrypt.v:80$1815 ($dff) from module gost89_cfb (D = $flatten\ecb_encrypt.$verific$n1898$1062, Q = \ecb_encrypt.round_key).
Adding EN signal on $flatten\ecb_encrypt.$verific$out_reg$gost89_ecb_encrypt.v:44$1778 ($dff) from module gost89_cfb (D = { \ecb_encrypt.n1 \ecb_encrypt.out1 }, Q = \ecb_encrypt.out).

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..
Removed 5 unused cells and 5 unused wires.
<suppressed ~6 debug messages>

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.
<suppressed ~6 debug messages>

3.13.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~11 debug messages>

yosys> opt_reduce

3.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb.
Performed a total of 0 changes.

yosys> opt_merge

3.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.

3.13.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~11 debug messages>

yosys> opt_reduce

3.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb.
Performed a total of 0 changes.

yosys> opt_merge

3.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..

yosys> opt_expr

3.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.

3.13.23. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_112$gost89_ecb_encrypt.v:79$1810 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_111$gost89_ecb_encrypt.v:78$1809 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_110$gost89_ecb_encrypt.v:77$1808 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_109$gost89_ecb_encrypt.v:76$1807 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_108$gost89_ecb_encrypt.v:75$1806 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_107$gost89_ecb_encrypt.v:74$1805 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_106$gost89_ecb_encrypt.v:73$1804 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_105$gost89_ecb_encrypt.v:72$1803 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_104$gost89_ecb_encrypt.v:71$1802 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_103$gost89_ecb_encrypt.v:70$1801 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_102$gost89_ecb_encrypt.v:69$1800 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_101$gost89_ecb_encrypt.v:68$1799 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_100$gost89_ecb_encrypt.v:67$1798 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_99$gost89_ecb_encrypt.v:66$1797 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_98$gost89_ecb_encrypt.v:65$1796 ($eq).
Removed top 1 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_97$gost89_ecb_encrypt.v:64$1795 ($eq).
Removed top 2 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_96$gost89_ecb_encrypt.v:63$1794 ($eq).
Removed top 2 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_95$gost89_ecb_encrypt.v:62$1793 ($eq).
Removed top 2 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_94$gost89_ecb_encrypt.v:61$1792 ($eq).
Removed top 2 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_93$gost89_ecb_encrypt.v:60$1791 ($eq).
Removed top 2 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_92$gost89_ecb_encrypt.v:59$1790 ($eq).
Removed top 2 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_91$gost89_ecb_encrypt.v:58$1789 ($eq).
Removed top 2 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_90$gost89_ecb_encrypt.v:57$1788 ($eq).
Removed top 2 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_89$gost89_ecb_encrypt.v:56$1787 ($eq).
Removed top 3 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_88$gost89_ecb_encrypt.v:55$1786 ($eq).
Removed top 3 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_87$gost89_ecb_encrypt.v:54$1785 ($eq).
Removed top 3 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_86$gost89_ecb_encrypt.v:53$1784 ($eq).
Removed top 3 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_85$gost89_ecb_encrypt.v:52$1783 ($eq).
Removed top 4 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_84$gost89_ecb_encrypt.v:51$1782 ($eq).
Removed top 4 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_83$gost89_ecb_encrypt.v:50$1781 ($eq).
Removed top 5 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$equal_82$gost89_ecb_encrypt.v:49$1780 ($eq).
Removed top 5 bits (of 6) from port A of cell gost89_cfb.$flatten\ecb_encrypt.$verific$LessThan_25$gost89_ecb_encrypt.v:34$1759 ($lt).
Removed top 5 bits (of 6) from port B of cell gost89_cfb.$flatten\ecb_encrypt.$verific$add_22$gost89_ecb_encrypt.v:33$1756 ($add).

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..
Removed 2 unused cells and 3 unused wires.
<suppressed ~3 debug messages>

yosys> alumacc

3.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module gost89_cfb:
  creating $macc model for $flatten\ecb_encrypt.$verific$add_22$gost89_ecb_encrypt.v:33$1756 ($add).
  creating $macc model for $flatten\ecb_encrypt.\rnd.$verific$add_3$gost89_round.v:12$1822 ($add).
  creating $alu model for $macc $flatten\ecb_encrypt.\rnd.$verific$add_3$gost89_round.v:12$1822.
  creating $alu model for $macc $flatten\ecb_encrypt.$verific$add_22$gost89_ecb_encrypt.v:33$1756.
  creating $alu model for $flatten\ecb_encrypt.$verific$LessThan_21$gost89_ecb_encrypt.v:32$1755 ($lt): new $alu
  creating $alu model for $flatten\ecb_encrypt.$verific$LessThan_25$gost89_ecb_encrypt.v:34$1759 ($lt): new $alu
  creating $alu model for $flatten\ecb_encrypt.$verific$equal_32$gost89_ecb_encrypt.v:38$1765 ($eq): merged with $flatten\ecb_encrypt.$verific$LessThan_21$gost89_ecb_encrypt.v:32$1755.
  creating $alu cell for $flatten\ecb_encrypt.$verific$LessThan_25$gost89_ecb_encrypt.v:34$1759: $auto$alumacc.cc:485:replace_alu$2484
  creating $alu cell for $flatten\ecb_encrypt.$verific$LessThan_21$gost89_ecb_encrypt.v:32$1755, $flatten\ecb_encrypt.$verific$equal_32$gost89_ecb_encrypt.v:38$1765: $auto$alumacc.cc:485:replace_alu$2489
  creating $alu cell for $flatten\ecb_encrypt.$verific$add_22$gost89_ecb_encrypt.v:33$1756: $auto$alumacc.cc:485:replace_alu$2500
  creating $alu cell for $flatten\ecb_encrypt.\rnd.$verific$add_3$gost89_round.v:12$1822: $auto$alumacc.cc:485:replace_alu$2503
  created 4 $alu and 0 $macc cells.

yosys> opt

3.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.
<suppressed ~2 debug messages>

yosys> opt_merge -nomux

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~11 debug messages>

yosys> opt_reduce

3.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb.
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$2478: { $flatten\ecb_encrypt.$verific$n1866$976 $flatten\ecb_encrypt.$verific$n1867$977 $flatten\ecb_encrypt.$verific$n1868$978 $flatten\ecb_encrypt.$verific$n1874$984 $flatten\ecb_encrypt.$verific$n1875$985 $flatten\ecb_encrypt.$verific$n1876$986 $flatten\ecb_encrypt.$verific$n1882$992 $flatten\ecb_encrypt.$verific$n1883$993 $flatten\ecb_encrypt.$verific$n1884$994 $flatten\ecb_encrypt.$verific$n1893$1003 $flatten\ecb_encrypt.$verific$n1894$1004 $flatten\ecb_encrypt.$verific$n1895$1005 $auto$rtlil.cc:2398:Or$2465 }
    New input vector for $reduce_and cell $auto$opt_dff.cc:220:make_patterns_logic$2453: { $auto$rtlil.cc:2367:Not$2451 $auto$alumacc.cc:501:replace_alu$2490 }
  Optimizing cells in module \gost89_cfb.
Performed a total of 2 changes.

yosys> opt_merge

3.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..
Removed 1 unused cells and 4 unused wires.
<suppressed ~2 debug messages>

yosys> opt_expr

3.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.

3.19.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~11 debug messages>

yosys> opt_reduce

3.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb.
Performed a total of 0 changes.

yosys> opt_merge

3.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..

yosys> opt_expr

3.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.

3.19.16. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.20. Printing statistics.

=== gost89_cfb ===

   Number of wires:                161
   Number of wire bits:           4413
   Number of public wires:          62
   Number of public wire bits:    3475
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                112
     $alu                            4
     $and                            6
     $bmux                           8
     $dff                            4
     $dffe                           5
     $eq                            31
     $logic_not                      1
     $mux                           26
     $not                            8
     $or                             3
     $reduce_and                     2
     $reduce_bool                    2
     $reduce_or                      9
     $sdffe                          1
     $xor                            2


yosys> memory -nomap

3.21. Executing MEMORY pass.

yosys> opt_mem

3.21.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.21.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.21.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_dff

3.21.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.21.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..

yosys> memory_share

3.21.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.21.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.21.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..

yosys> memory_collect

3.21.9. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.22. Printing statistics.

=== gost89_cfb ===

   Number of wires:                161
   Number of wire bits:           4413
   Number of public wires:          62
   Number of public wire bits:    3475
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                112
     $alu                            4
     $and                            6
     $bmux                           8
     $dff                            4
     $dffe                           5
     $eq                            31
     $logic_not                      1
     $mux                           26
     $not                            8
     $or                             3
     $reduce_and                     2
     $reduce_bool                    2
     $reduce_or                      9
     $sdffe                          1
     $xor                            2


yosys> opt_clean

3.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..

yosys> stat

3.24. Printing statistics.

=== gost89_cfb ===

   Number of wires:                161
   Number of wire bits:           4413
   Number of public wires:          62
   Number of public wire bits:    3475
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                112
     $alu                            4
     $and                            6
     $bmux                           8
     $dff                            4
     $dffe                           5
     $eq                            31
     $logic_not                      1
     $mux                           26
     $not                            8
     $or                             3
     $reduce_and                     2
     $reduce_bool                    2
     $reduce_or                      9
     $sdffe                          1
     $xor                            2


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.25. Executing TECHMAP pass (map to technology primitives).

3.25.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.25.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.25.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $sdffe.
Using template $paramod$32efbfac1c4dc57230cf86180788fdfd12e3b511\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $bmux.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $dff.
Using template $paramod$00298f3f8094950cb9a5ff2fda48d0d8bde8806c\_90_alu for cells of type $alu.
Using template $paramod$be80489e44a49c29884f59fd81c31ed03229cfc1\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000110 for cells of type $lcu.
No more expansions possible.
<suppressed ~595 debug messages>

yosys> stat

3.26. Printing statistics.

=== gost89_cfb ===

   Number of wires:                515
   Number of wire bits:           9448
   Number of public wires:          62
   Number of public wire bits:    3475
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2382
     $_AND_                         65
     $_DFFE_PP_                    288
     $_DFF_P_                       71
     $_MUX_                       1227
     $_NOT_                         90
     $_OR_                         253
     $_SDFFE_PP0P_                   1
     $_XOR_                        355
     adder_carry                    32


yosys> opt

3.27. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.
<suppressed ~313 debug messages>

yosys> opt_merge -nomux

3.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
<suppressed ~648 debug messages>
Removed a total of 216 cells.

yosys> opt_muxtree

3.27.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb.
Performed a total of 0 changes.

yosys> opt_merge

3.27.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..
Removed 43 unused cells and 343 unused wires.
<suppressed ~44 debug messages>

yosys> opt_expr

3.27.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.

3.27.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.27.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb.
Performed a total of 0 changes.

yosys> opt_merge

3.27.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..

yosys> opt_expr

3.27.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.

3.27.16. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.
<suppressed ~131 debug messages>

yosys> opt_merge

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
Removed a total of 0 cells.

yosys> opt_dff

3.28.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

3.28.5. Finished fast OPT passes.

yosys> memory_map

3.29. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.30. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.

yosys> opt_merge -nomux

3.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb.
Performed a total of 0 changes.

yosys> opt_merge

3.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
Removed a total of 0 cells.

yosys> opt_share

3.30.6. Executing OPT_SHARE pass.

yosys> opt_dff

3.30.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..

yosys> opt_expr -full

3.30.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.

3.30.10. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

3.31. Executing ABC pass (technology mapping using ABC).

3.31.1. Summary of detected clock domains:
  648 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$2452, arst={ }, srst={ }
  351 cells in clk=\clk, en={ }, arst={ }, srst={ }
  67 cells in clk=\clk, en=$verific$n347$15, arst={ }, srst={ }
  130 cells in clk=\clk, en=\ecb_encrypt.load_data, arst={ }, srst={ }
  129 cells in clk=\clk, en=$auto$opt_dff.cc:194:make_patterns_logic$2440, arst={ }, srst={ }
  4 cells in clk=\clk, en=$auto$opt_dff.cc:194:make_patterns_logic$2444, arst={ }, srst=$verific$n347$15
  467 cells in clk=\clk, en=$auto$opt_dff.cc:194:make_patterns_logic$2447, arst={ }, srst={ }

3.31.2. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2452
Extracted 648 gates and 1328 wires to a netlist network with 680 inputs and 98 outputs.

3.31.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 64 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.2.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       64
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               NOR cells:       11
ABC RESULTS:                OR cells:       23
ABC RESULTS:             ORNOT cells:       41
ABC RESULTS:              NAND cells:      109
ABC RESULTS:               MUX cells:      401
ABC RESULTS:            ANDNOT cells:        5
ABC RESULTS:               AND cells:       53
ABC RESULTS:               XOR cells:      106
ABC RESULTS:              XNOR cells:       24
ABC RESULTS:               BUF cells:       32
ABC RESULTS:        internal signals:      550
ABC RESULTS:           input signals:      680
ABC RESULTS:          output signals:       98
Removing temp directory.

3.31.3. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 351 gates and 482 wires to a netlist network with 130 inputs and 110 outputs.

3.31.3.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 71 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.3.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       71
ABC RESULTS:               NOT cells:        7
ABC RESULTS:               XOR cells:       32
ABC RESULTS:             ORNOT cells:        5
ABC RESULTS:               AND cells:        9
ABC RESULTS:              NAND cells:        4
ABC RESULTS:            ANDNOT cells:        5
ABC RESULTS:               NOR cells:        2
ABC RESULTS:                OR cells:        7
ABC RESULTS:               MUX cells:      128
ABC RESULTS:               BUF cells:       65
ABC RESULTS:        internal signals:      242
ABC RESULTS:           input signals:      130
ABC RESULTS:          output signals:      110
Removing temp directory.

3.31.4. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $verific$n347$15
Extracted 67 gates and 135 wires to a netlist network with 68 inputs and 65 outputs.

3.31.4.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 64 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.4.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       64
ABC RESULTS:               AND cells:        3
ABC RESULTS:               BUF cells:      128
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:       68
ABC RESULTS:          output signals:       65
Removing temp directory.

3.31.5. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by \ecb_encrypt.load_data
Extracted 130 gates and 261 wires to a netlist network with 131 inputs and 130 outputs.

3.31.5.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 64 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.5.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       64
ABC RESULTS:               NOT cells:        1
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               MUX cells:       64
ABC RESULTS:               BUF cells:      128
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:      131
ABC RESULTS:          output signals:      130
Removing temp directory.

3.31.6. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:194:make_patterns_logic$2440
Extracted 129 gates and 259 wires to a netlist network with 130 inputs and 65 outputs.

3.31.6.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 64 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.6.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       64
ABC RESULTS:                OR cells:        1
ABC RESULTS:               MUX cells:       64
ABC RESULTS:               BUF cells:       64
ABC RESULTS:        internal signals:       64
ABC RESULTS:           input signals:      130
ABC RESULTS:          output signals:       65
Removing temp directory.

3.31.7. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:194:make_patterns_logic$2444, synchronously reset by $abc$6691$verific$n347$15
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 4 outputs.

3.31.7.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.7.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:               BUF cells:        2
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:        3
ABC RESULTS:          output signals:        4
Removing temp directory.

3.31.8. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:194:make_patterns_logic$2447
Extracted 435 gates and 705 wires to a netlist network with 270 inputs and 34 outputs.

3.31.8.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 32 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.8.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       32
ABC RESULTS:             ORNOT cells:        6
ABC RESULTS:               NOR cells:        1
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:               NOT cells:       31
ABC RESULTS:                OR cells:       72
ABC RESULTS:              NAND cells:      200
ABC RESULTS:               MUX cells:      129
ABC RESULTS:               AND cells:      100
ABC RESULTS:               BUF cells:       32
ABC RESULTS:        internal signals:      401
ABC RESULTS:           input signals:      270
ABC RESULTS:          output signals:       34
Removing temp directory.

yosys> abc -dff

3.32. Executing ABC pass (technology mapping using ABC).

3.32.1. Summary of detected clock domains:
  176 cells in clk=\clk, en=$abc$6887$ecb_encrypt.load_data, arst={ }, srst={ }
  4 cells in clk=\clk, en=$abc$7340$auto$opt_dff.cc:194:make_patterns_logic$2444, arst={ }, srst=$abc$6691$verific$n347$15
  84 cells in clk=\clk, en=$abc$6691$verific$n347$15, arst={ }, srst={ }
  924 cells in clk=\clk, en={ }, arst={ }, srst={ }
  98 cells in clk=\clk, en=$abc$5484$auto$opt_dff.cc:219:make_patterns_logic$2452, arst={ }, srst={ }
  152 cells in clk=\clk, en=$abc$7146$auto$opt_dff.cc:194:make_patterns_logic$2440, arst={ }, srst={ }
  605 cells in clk=\clk, en=$abc$7347$auto$opt_dff.cc:194:make_patterns_logic$2447, arst={ }, srst={ }

3.32.2. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$6887$ecb_encrypt.load_data
Extracted 176 gates and 307 wires to a netlist network with 131 inputs and 129 outputs.

3.32.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 64 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.32.2.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       64
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               XOR cells:       47
ABC RESULTS:               MUX cells:       64
ABC RESULTS:               BUF cells:       81
ABC RESULTS:        internal signals:       47
ABC RESULTS:           input signals:      131
ABC RESULTS:          output signals:      129
Removing temp directory.

3.32.3. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$7340$auto$opt_dff.cc:194:make_patterns_logic$2444, synchronously reset by $abc$6691$verific$n347$15
Extracted 4 gates and 8 wires to a netlist network with 4 inputs and 4 outputs.

3.32.3.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.32.3.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:        2
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:        4
ABC RESULTS:          output signals:        4
Removing temp directory.

3.32.4. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$6691$verific$n347$15
Extracted 84 gates and 167 wires to a netlist network with 83 inputs and 81 outputs.

3.32.4.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 64 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.32.4.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       64
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:               BUF cells:      112
ABC RESULTS:               XOR cells:       32
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:       83
ABC RESULTS:          output signals:       81
Removing temp directory.

3.32.5. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 924 gates and 1565 wires to a netlist network with 641 inputs and 166 outputs.

3.32.5.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 71 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.32.5.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       71
ABC RESULTS:               NOT cells:       21
ABC RESULTS:               NOR cells:        9
ABC RESULTS:             ORNOT cells:       65
ABC RESULTS:               XOR cells:       57
ABC RESULTS:               MUX cells:      462
ABC RESULTS:              XNOR cells:        8
ABC RESULTS:              NAND cells:      143
ABC RESULTS:                OR cells:       61
ABC RESULTS:               AND cells:      110
ABC RESULTS:            ANDNOT cells:       15
ABC RESULTS:               BUF cells:       87
ABC RESULTS:        internal signals:      758
ABC RESULTS:           input signals:      641
ABC RESULTS:          output signals:      166
Removing temp directory.

3.32.6. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5484$auto$opt_dff.cc:219:make_patterns_logic$2452
Extracted 98 gates and 197 wires to a netlist network with 99 inputs and 65 outputs.

3.32.6.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 64 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.32.6.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       64
ABC RESULTS:               AND cells:        1
ABC RESULTS:              XNOR cells:       12
ABC RESULTS:               XOR cells:       21
ABC RESULTS:               BUF cells:       95
ABC RESULTS:        internal signals:       33
ABC RESULTS:           input signals:       99
ABC RESULTS:          output signals:       65
Removing temp directory.

3.32.7. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$7146$auto$opt_dff.cc:194:make_patterns_logic$2440
Extracted 152 gates and 306 wires to a netlist network with 154 inputs and 65 outputs.

3.32.7.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 64 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.32.7.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       64
ABC RESULTS:                OR cells:        1
ABC RESULTS:               MUX cells:       87
ABC RESULTS:               BUF cells:       41
ABC RESULTS:        internal signals:       87
ABC RESULTS:           input signals:      154
ABC RESULTS:          output signals:       65
Removing temp directory.

3.32.8. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$7347$auto$opt_dff.cc:194:make_patterns_logic$2447
Extracted 573 gates and 843 wires to a netlist network with 270 inputs and 34 outputs.

3.32.8.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 32 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.32.8.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       32
ABC RESULTS:             ORNOT cells:        5
ABC RESULTS:               NOR cells:        1
ABC RESULTS:              NAND cells:      169
ABC RESULTS:                OR cells:       99
ABC RESULTS:               MUX cells:      129
ABC RESULTS:               AND cells:       96
ABC RESULTS:               BUF cells:       32
ABC RESULTS:        internal signals:      539
ABC RESULTS:           input signals:      270
ABC RESULTS:          output signals:       34
Removing temp directory.

yosys> abc -dff

3.33. Executing ABC pass (technology mapping using ABC).

3.33.1. Summary of detected clock domains:
  196 cells in clk=\clk, en=$abc$7953$abc$6887$ecb_encrypt.load_data, arst={ }, srst={ }
  4 cells in clk=\clk, en=$abc$8211$abc$7340$auto$opt_dff.cc:194:make_patterns_logic$2444, arst={ }, srst=$abc$8218$abc$6691$verific$n347$15
  70 cells in clk=\clk, en=$abc$8218$abc$6691$verific$n347$15, arst={ }, srst={ }
  1025 cells in clk=\clk, en={ }, arst={ }, srst={ }
  83 cells in clk=\clk, en=$abc$9539$abc$5484$auto$opt_dff.cc:219:make_patterns_logic$2452, arst={ }, srst={ }
  171 cells in clk=\clk, en=$abc$9733$abc$7146$auto$opt_dff.cc:194:make_patterns_logic$2440, arst={ }, srst={ }
  564 cells in clk=\clk, en=$abc$9927$abc$7347$auto$opt_dff.cc:194:make_patterns_logic$2447, arst={ }, srst={ }

3.33.2. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$7953$abc$6887$ecb_encrypt.load_data
Extracted 196 gates and 327 wires to a netlist network with 131 inputs and 129 outputs.

3.33.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 64 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.33.2.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       64
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:              XNOR cells:        4
ABC RESULTS:               XOR cells:       51
ABC RESULTS:               MUX cells:       60
ABC RESULTS:               BUF cells:       77
ABC RESULTS:        internal signals:       67
ABC RESULTS:           input signals:      131
ABC RESULTS:          output signals:      129
Removing temp directory.

3.33.3. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$8211$abc$7340$auto$opt_dff.cc:194:make_patterns_logic$2444, synchronously reset by $abc$8218$abc$6691$verific$n347$15
Extracted 4 gates and 8 wires to a netlist network with 4 inputs and 4 outputs.

3.33.3.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.33.3.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:        2
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:        4
ABC RESULTS:          output signals:        4
Removing temp directory.

3.33.4. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$8218$abc$6691$verific$n347$15
Extracted 70 gates and 141 wires to a netlist network with 71 inputs and 65 outputs.

3.33.4.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 64 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.33.4.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       64
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:               XOR cells:        4
ABC RESULTS:               BUF cells:      124
ABC RESULTS:        internal signals:        5
ABC RESULTS:           input signals:       71
ABC RESULTS:          output signals:       65
Removing temp directory.

3.33.5. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 1025 gates and 1667 wires to a netlist network with 642 inputs and 154 outputs.

3.33.5.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 71 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.33.5.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       71
ABC RESULTS:               NOT cells:       10
ABC RESULTS:              XNOR cells:       14
ABC RESULTS:               XOR cells:       50
ABC RESULTS:               NOR cells:        5
ABC RESULTS:               MUX cells:      456
ABC RESULTS:             ORNOT cells:       77
ABC RESULTS:            ANDNOT cells:       11
ABC RESULTS:                OR cells:       72
ABC RESULTS:               AND cells:       84
ABC RESULTS:              NAND cells:      129
ABC RESULTS:               BUF cells:       72
ABC RESULTS:        internal signals:      871
ABC RESULTS:           input signals:      642
ABC RESULTS:          output signals:      154
Removing temp directory.

3.33.6. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$9539$abc$5484$auto$opt_dff.cc:219:make_patterns_logic$2452
Extracted 83 gates and 164 wires to a netlist network with 81 inputs and 66 outputs.

3.33.6.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 64 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.33.6.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       64
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:       13
ABC RESULTS:               BUF cells:      114
ABC RESULTS:        internal signals:       17
ABC RESULTS:           input signals:       81
ABC RESULTS:          output signals:       66
Removing temp directory.

3.33.7. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$9733$abc$7146$auto$opt_dff.cc:194:make_patterns_logic$2440
Extracted 171 gates and 341 wires to a netlist network with 170 inputs and 65 outputs.

3.33.7.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 64 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.33.7.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       64
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:              NAND cells:        6
ABC RESULTS:                OR cells:        2
ABC RESULTS:               AND cells:        2
ABC RESULTS:               MUX cells:       98
ABC RESULTS:               BUF cells:       25
ABC RESULTS:        internal signals:      106
ABC RESULTS:           input signals:      170
ABC RESULTS:          output signals:       65
Removing temp directory.

3.33.8. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$9927$abc$7347$auto$opt_dff.cc:194:make_patterns_logic$2447
Extracted 532 gates and 803 wires to a netlist network with 271 inputs and 34 outputs.

3.33.8.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 32 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.33.8.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       32
ABC RESULTS:               NOR cells:        3
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               MUX cells:       94
ABC RESULTS:                OR cells:       65
ABC RESULTS:             ORNOT cells:       34
ABC RESULTS:            ANDNOT cells:        4
ABC RESULTS:               AND cells:      121
ABC RESULTS:              NAND cells:      242
ABC RESULTS:               BUF cells:       31
ABC RESULTS:        internal signals:      498
ABC RESULTS:           input signals:      271
ABC RESULTS:          output signals:       34
Removing temp directory.

yosys> opt_ffinv

3.34. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt -sat

3.35. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.35.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.
<suppressed ~107 debug messages>

yosys> opt_merge -nomux

3.35.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
<suppressed ~15 debug messages>
Removed a total of 5 cells.

yosys> opt_muxtree

3.35.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.35.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb.
Performed a total of 0 changes.

yosys> opt_merge

3.35.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.35.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $abc$10955$auto$blifparse.cc:362:parse_blif$11002 ($_DFF_P_) from module gost89_cfb (D = $abc$10955$li46_li46, Q = $abc$10955$lo46).
Adding EN signal on $abc$10955$auto$blifparse.cc:362:parse_blif$11001 ($_DFF_P_) from module gost89_cfb (D = $abc$10955$li45_li45, Q = $abc$10955$lo45).
Adding EN signal on $abc$10955$auto$blifparse.cc:362:parse_blif$11000 ($_DFF_P_) from module gost89_cfb (D = $abc$10955$li44_li44, Q = $abc$10955$lo44).
Adding EN signal on $abc$10955$auto$blifparse.cc:362:parse_blif$10999 ($_DFF_P_) from module gost89_cfb (D = $abc$10955$li43_li43, Q = $abc$10955$lo43).
Adding EN signal on $abc$10955$auto$blifparse.cc:362:parse_blif$10998 ($_DFF_P_) from module gost89_cfb (D = $abc$10955$li42_li42, Q = $abc$10955$lo42).
Adding EN signal on $abc$10955$auto$blifparse.cc:362:parse_blif$10997 ($_DFF_P_) from module gost89_cfb (D = $abc$10955$li41_li41, Q = $abc$10955$lo41).
Adding EN signal on $abc$10955$auto$blifparse.cc:362:parse_blif$10996 ($_DFF_P_) from module gost89_cfb (D = $abc$10955$li40_li40, Q = $abc$10955$lo40).
Adding EN signal on $abc$10955$auto$blifparse.cc:362:parse_blif$10993 ($_DFF_P_) from module gost89_cfb (D = $abc$10955$li37_li37, Q = $abc$10955$lo37).
Adding EN signal on $abc$10955$auto$blifparse.cc:362:parse_blif$10992 ($_DFF_P_) from module gost89_cfb (D = $abc$10955$li36_li36, Q = $abc$10955$lo36).
Adding EN signal on $abc$10955$auto$blifparse.cc:362:parse_blif$10991 ($_DFF_P_) from module gost89_cfb (D = $abc$10955$li35_li35, Q = $abc$10955$lo35).
Adding EN signal on $abc$10955$auto$blifparse.cc:362:parse_blif$10990 ($_DFF_P_) from module gost89_cfb (D = $abc$10955$li34_li34, Q = $abc$10955$lo34).
Adding EN signal on $abc$10955$auto$blifparse.cc:362:parse_blif$10989 ($_DFF_P_) from module gost89_cfb (D = $abc$10955$li33_li33, Q = $abc$10955$lo33).
Adding EN signal on $abc$10955$auto$blifparse.cc:362:parse_blif$10988 ($_DFF_P_) from module gost89_cfb (D = $abc$10955$li32_li32, Q = $abc$10955$lo32).
Adding EN signal on $abc$10955$auto$blifparse.cc:362:parse_blif$10987 ($_DFF_P_) from module gost89_cfb (D = $abc$10955$li31_li31, Q = $abc$10955$lo31).
Adding EN signal on $abc$10955$auto$blifparse.cc:362:parse_blif$10986 ($_DFF_P_) from module gost89_cfb (D = $abc$10955$li30_li30, Q = $abc$10955$lo30).
Adding EN signal on $abc$10955$auto$blifparse.cc:362:parse_blif$10985 ($_DFF_P_) from module gost89_cfb (D = $abc$10955$li29_li29, Q = $abc$10955$lo29).
Adding EN signal on $abc$10955$auto$blifparse.cc:362:parse_blif$10982 ($_DFF_P_) from module gost89_cfb (D = $abc$10955$li26_li26, Q = $abc$10955$lo26).
Adding EN signal on $abc$10955$auto$blifparse.cc:362:parse_blif$10981 ($_DFF_P_) from module gost89_cfb (D = $abc$10955$li25_li25, Q = $abc$10955$lo25).
Adding EN signal on $abc$10955$auto$blifparse.cc:362:parse_blif$10978 ($_DFF_P_) from module gost89_cfb (D = $abc$10955$li22_li22, Q = $abc$10955$lo22).
Adding EN signal on $abc$10955$auto$blifparse.cc:362:parse_blif$10977 ($_DFF_P_) from module gost89_cfb (D = $abc$10955$li21_li21, Q = $abc$10955$lo21).
Adding EN signal on $abc$10955$auto$blifparse.cc:362:parse_blif$10975 ($_DFF_P_) from module gost89_cfb (D = $abc$10955$li19_li19, Q = $abc$10955$lo19).
Adding EN signal on $abc$10955$auto$blifparse.cc:362:parse_blif$10970 ($_DFF_P_) from module gost89_cfb (D = $abc$10955$li14_li14, Q = $abc$10955$lo14).
Adding EN signal on $abc$10955$auto$blifparse.cc:362:parse_blif$10969 ($_DFF_P_) from module gost89_cfb (D = $abc$10955$li13_li13, Q = $abc$10955$lo13).
Adding EN signal on $abc$10955$auto$blifparse.cc:362:parse_blif$10968 ($_DFF_P_) from module gost89_cfb (D = $abc$10955$li12_li12, Q = $abc$10955$lo12).

yosys> opt_clean

3.35.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..
Removed 0 unused cells and 10015 unused wires.
<suppressed ~15 debug messages>

yosys> opt_expr

3.35.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.
<suppressed ~48 debug messages>

3.35.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.35.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.35.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb.
Performed a total of 0 changes.

yosys> opt_merge

3.35.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
<suppressed ~141 debug messages>
Removed a total of 47 cells.

yosys> opt_dff -sat

3.35.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $abc$10955$auto$blifparse.cc:362:parse_blif$11023 ($_DFF_P_) from module gost89_cfb (D = $abc$10955$abc$8429$li61_li61, Q = \ecb_encrypt.n1 [11]).
Adding EN signal on $abc$10955$auto$blifparse.cc:362:parse_blif$11022 ($_DFF_P_) from module gost89_cfb (D = $abc$10955$abc$8429$li60_li60, Q = \ecb_encrypt.n1 [13]).
Adding EN signal on $abc$10955$auto$blifparse.cc:362:parse_blif$11021 ($_DFF_P_) from module gost89_cfb (D = $abc$10955$abc$8429$li59_li59, Q = \ecb_encrypt.n1 [15]).
Adding EN signal on $abc$10955$auto$blifparse.cc:362:parse_blif$11019 ($_DFF_P_) from module gost89_cfb (D = $abc$10955$abc$8429$li57_li57, Q = \ecb_encrypt.n1 [12]).
Adding EN signal on $abc$10955$auto$blifparse.cc:362:parse_blif$11018 ($_DFF_P_) from module gost89_cfb (D = $abc$10955$abc$8429$li56_li56, Q = \ecb_encrypt.n1 [14]).
Adding EN signal on $abc$10955$auto$blifparse.cc:362:parse_blif$11017 ($_DFF_P_) from module gost89_cfb (D = $abc$10955$abc$8429$li55_li55, Q = \ecb_encrypt.n1 [16]).
Adding EN signal on $abc$10955$auto$blifparse.cc:362:parse_blif$11016 ($_DFF_P_) from module gost89_cfb (D = $abc$10955$abc$8429$li54_li54, Q = \ecb_encrypt.n1 [17]).
Adding EN signal on $abc$10955$auto$blifparse.cc:362:parse_blif$11015 ($_DFF_P_) from module gost89_cfb (D = $abc$10955$abc$8429$li53_li53, Q = \ecb_encrypt.n1 [19]).
Adding EN signal on $abc$10955$auto$blifparse.cc:362:parse_blif$11014 ($_DFF_P_) from module gost89_cfb (D = $abc$10955$abc$8429$li52_li52, Q = \ecb_encrypt.n1 [21]).
Adding EN signal on $abc$10955$auto$blifparse.cc:362:parse_blif$11013 ($_DFF_P_) from module gost89_cfb (D = $abc$10955$abc$8429$li51_li51, Q = \ecb_encrypt.n1 [23]).
Adding EN signal on $abc$10955$auto$blifparse.cc:362:parse_blif$11011 ($_DFF_P_) from module gost89_cfb (D = $abc$10955$abc$8429$li49_li49, Q = \ecb_encrypt.n1 [20]).
Adding EN signal on $abc$10955$auto$blifparse.cc:362:parse_blif$11010 ($_DFF_P_) from module gost89_cfb (D = $abc$10955$abc$8429$li48_li48, Q = \ecb_encrypt.n1 [22]).
Adding EN signal on $abc$10955$auto$blifparse.cc:362:parse_blif$11009 ($_DFF_P_) from module gost89_cfb (D = $abc$10955$abc$8429$li47_li47, Q = \ecb_encrypt.n1 [24]).
Adding EN signal on $abc$10955$auto$blifparse.cc:362:parse_blif$11006 ($_DFF_P_) from module gost89_cfb (D = $abc$10955$abc$8429$li44_li44, Q = \ecb_encrypt.n1 [30]).
Adding EN signal on $abc$10955$auto$blifparse.cc:362:parse_blif$11005 ($_DFF_P_) from module gost89_cfb (D = $abc$10955$abc$8429$li43_li43, Q = \ecb_encrypt.n1 [29]).
Adding EN signal on $abc$10955$auto$blifparse.cc:362:parse_blif$11004 ($_DFF_P_) from module gost89_cfb (D = $abc$10955$abc$8429$li42_li42, Q = \ecb_encrypt.n1 [31]).
Adding EN signal on $abc$10955$auto$blifparse.cc:362:parse_blif$11003 ($_DFF_P_) from module gost89_cfb (D = $abc$10955$abc$8429$li41_li41, Q = \ecb_encrypt.n1 [28]).
Adding EN signal on $abc$10955$auto$blifparse.cc:362:parse_blif$10995 ($_DFF_P_) from module gost89_cfb (D = $abc$10955$abc$8429$li33_li33, Q = $abc$10955$lo39).
Adding EN signal on $abc$10955$auto$blifparse.cc:362:parse_blif$10984 ($_DFF_P_) from module gost89_cfb (D = $abc$10955$abc$9733$abc$6355$li25_li25, Q = $abc$10955$lo28).
Adding EN signal on $abc$10955$auto$blifparse.cc:362:parse_blif$10983 ($_DFF_P_) from module gost89_cfb (D = $abc$10955$abc$9733$abc$6355$li27_li27, Q = $abc$10955$lo27).
Adding EN signal on $abc$10955$auto$blifparse.cc:362:parse_blif$10980 ($_DFF_P_) from module gost89_cfb (D = $abc$10955$abc$9733$abc$6355$li26_li26, Q = $abc$10955$lo24).
Adding EN signal on $abc$10955$auto$blifparse.cc:362:parse_blif$10979 ($_DFF_P_) from module gost89_cfb (D = $abc$10955$abc$9733$abc$6355$li28_li28, Q = $abc$10955$lo23).
Adding EN signal on $abc$10955$auto$blifparse.cc:362:parse_blif$10976 ($_DFF_P_) from module gost89_cfb (D = $abc$10955$abc$9733$abc$6355$li33_li33, Q = $abc$10955$lo20).
Adding EN signal on $abc$10955$auto$blifparse.cc:362:parse_blif$10974 ($_DFF_P_) from module gost89_cfb (D = $abc$10955$abc$8429$li64_li64, Q = \ecb_encrypt.n1 [27]).
Adding EN signal on $abc$10955$auto$blifparse.cc:362:parse_blif$10971 ($_DFF_P_) from module gost89_cfb (D = $abc$10955$abc$8429$li66_li66, Q = \ecb_encrypt.n1 [25]).
Adding EN signal on $abc$10955$auto$blifparse.cc:362:parse_blif$10967 ($_DFF_P_) from module gost89_cfb (D = $abc$10955$abc$9733$abc$6355$li36_li36, Q = \ecb_encrypt.n2 [29]).
Adding EN signal on $abc$10955$auto$blifparse.cc:362:parse_blif$10966 ($_DFF_P_) from module gost89_cfb (D = $abc$10955$abc$9733$abc$6355$li38_li38, Q = \ecb_encrypt.n2 [31]).
Adding EN signal on $abc$10955$auto$blifparse.cc:362:parse_blif$10965 ($_DFF_P_) from module gost89_cfb (D = $abc$10955$abc$9733$abc$6355$li39_li39, Q = \ecb_encrypt.n1 [0]).
Adding EN signal on $abc$10955$auto$blifparse.cc:362:parse_blif$10964 ($_DFF_P_) from module gost89_cfb (D = $abc$10955$abc$8429$li06_li06, Q = \ecb_encrypt.n1 [2]).
Adding EN signal on $abc$10955$auto$blifparse.cc:362:parse_blif$10963 ($_DFF_P_) from module gost89_cfb (D = $abc$10955$abc$8429$li05_li05, Q = \ecb_encrypt.n1 [4]).
Adding EN signal on $abc$10955$auto$blifparse.cc:362:parse_blif$10962 ($_DFF_P_) from module gost89_cfb (D = $abc$10955$abc$8429$li04_li04, Q = \ecb_encrypt.n1 [6]).
Adding EN signal on $abc$10955$auto$blifparse.cc:362:parse_blif$10961 ($_DFF_P_) from module gost89_cfb (D = $abc$10955$abc$8429$li03_li03, Q = \ecb_encrypt.n1 [1]).
Adding EN signal on $abc$10955$auto$blifparse.cc:362:parse_blif$10960 ($_DFF_P_) from module gost89_cfb (D = $abc$10955$abc$8429$li02_li02, Q = \ecb_encrypt.n1 [3]).
Adding EN signal on $abc$10955$auto$blifparse.cc:362:parse_blif$10959 ($_DFF_P_) from module gost89_cfb (D = $abc$10955$abc$8429$li01_li01, Q = \ecb_encrypt.n1 [5]).

yosys> opt_clean

3.35.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..
Removed 0 unused cells and 105 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.35.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.
<suppressed ~68 debug messages>

3.35.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.35.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.35.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb.
Performed a total of 0 changes.

yosys> opt_merge

3.35.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
<suppressed ~204 debug messages>
Removed a total of 68 cells.

yosys> opt_dff -sat

3.35.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.35.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..
Removed 0 unused cells and 102 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.35.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.

3.35.23. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.35.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.35.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb.
Performed a total of 0 changes.

yosys> opt_merge

3.35.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.35.27. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.35.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..

yosys> opt_expr

3.35.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.

3.35.30. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

3.36. Executing ABC pass (technology mapping using ABC).

3.36.1. Summary of detected clock domains:
  923 cells in clk=\clk, en=$auto$opt_dff.cc:194:make_patterns_logic$13030, arst={ }, srst={ }
  634 cells in clk=\clk, en=$abc$12401$abc$9927$abc$7347$auto$opt_dff.cc:194:make_patterns_logic$2447, arst={ }, srst={ }
  135 cells in clk=\clk, en=$abc$12202$abc$9733$abc$7146$auto$opt_dff.cc:194:make_patterns_logic$2440, arst={ }, srst={ }
  134 cells in clk=\clk, en=$abc$12007$abc$9539$abc$5484$auto$opt_dff.cc:219:make_patterns_logic$2452, arst={ }, srst={ }
  89 cells in clk=\clk, en={ }, arst={ }, srst={ }
  66 cells in clk=\clk, en=$abc$10760$abc$8218$abc$6691$verific$n347$15, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$10753$abc$8211$abc$7340$auto$opt_dff.cc:194:make_patterns_logic$2444, arst={ }, srst=$abc$10760$abc$8218$abc$6691$verific$n347$15
  128 cells in clk=\clk, en=\ecb_encrypt.load_data, arst={ }, srst={ }

3.36.2. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:194:make_patterns_logic$13030
Extracted 923 gates and 1561 wires to a netlist network with 637 inputs and 86 outputs.

3.36.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 58 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.36.2.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       58
ABC RESULTS:              XNOR cells:       14
ABC RESULTS:            ANDNOT cells:        7
ABC RESULTS:             ORNOT cells:       57
ABC RESULTS:               XOR cells:       44
ABC RESULTS:               NOR cells:       12
ABC RESULTS:               AND cells:       74
ABC RESULTS:                OR cells:       48
ABC RESULTS:               MUX cells:      383
ABC RESULTS:              NAND cells:      271
ABC RESULTS:               BUF cells:       26
ABC RESULTS:        internal signals:      838
ABC RESULTS:           input signals:      637
ABC RESULTS:          output signals:       86
Removing temp directory.

3.36.3. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$12401$abc$9927$abc$7347$auto$opt_dff.cc:194:make_patterns_logic$2447
Extracted 602 gates and 879 wires to a netlist network with 277 inputs and 40 outputs.

3.36.3.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 32 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.36.3.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       32
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               NOR cells:        2
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:        6
ABC RESULTS:            ANDNOT cells:        3
ABC RESULTS:             ORNOT cells:        6
ABC RESULTS:               MUX cells:      158
ABC RESULTS:                OR cells:       55
ABC RESULTS:               AND cells:       85
ABC RESULTS:              NAND cells:      110
ABC RESULTS:               BUF cells:       31
ABC RESULTS:        internal signals:      562
ABC RESULTS:           input signals:      277
ABC RESULTS:          output signals:       40
Removing temp directory.

3.36.4. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$12202$abc$9733$abc$7146$auto$opt_dff.cc:194:make_patterns_logic$2440
Extracted 135 gates and 267 wires to a netlist network with 132 inputs and 65 outputs.

3.36.4.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 64 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.36.4.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       64
ABC RESULTS:                OR cells:        2
ABC RESULTS:              NAND cells:        5
ABC RESULTS:               MUX cells:       64
ABC RESULTS:               BUF cells:       58
ABC RESULTS:        internal signals:       70
ABC RESULTS:           input signals:      132
ABC RESULTS:          output signals:       65
Removing temp directory.

3.36.5. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$12007$abc$9539$abc$5484$auto$opt_dff.cc:219:make_patterns_logic$2452
Extracted 134 gates and 266 wires to a netlist network with 132 inputs and 69 outputs.

3.36.5.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 64 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.36.5.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       64
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:               XOR cells:       64
ABC RESULTS:               AND cells:        2
ABC RESULTS:               BUF cells:       63
ABC RESULTS:        internal signals:       65
ABC RESULTS:           input signals:      132
ABC RESULTS:          output signals:       69
Removing temp directory.

3.36.6. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 89 gates and 104 wires to a netlist network with 14 inputs and 30 outputs.

3.36.6.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 13 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.36.6.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       13
ABC RESULTS:               NOT cells:        8
ABC RESULTS:               NOR cells:        2
ABC RESULTS:             ORNOT cells:        5
ABC RESULTS:                OR cells:        7
ABC RESULTS:               AND cells:       17
ABC RESULTS:            ANDNOT cells:        8
ABC RESULTS:               MUX cells:        5
ABC RESULTS:              NAND cells:       14
ABC RESULTS:               BUF cells:        6
ABC RESULTS:        internal signals:       60
ABC RESULTS:           input signals:       14
ABC RESULTS:          output signals:       30
Removing temp directory.

3.36.7. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$10760$abc$8218$abc$6691$verific$n347$15
Extracted 66 gates and 133 wires to a netlist network with 67 inputs and 65 outputs.

3.36.7.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 64 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.36.7.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       64
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:               BUF cells:      128
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:       67
ABC RESULTS:          output signals:       65
Removing temp directory.

3.36.8. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$10753$abc$8211$abc$7340$auto$opt_dff.cc:194:make_patterns_logic$2444, synchronously reset by $abc$15689$abc$10760$abc$8218$abc$6691$verific$n347$15
Extracted 5 gates and 8 wires to a netlist network with 3 inputs and 5 outputs.

3.36.8.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.36.8.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               XOR cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:            ANDNOT cells:        3
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:        3
ABC RESULTS:          output signals:        5
Removing temp directory.

3.36.9. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$15884$ecb_encrypt.load_data
Extracted 128 gates and 257 wires to a netlist network with 129 inputs and 128 outputs.

3.36.9.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 64 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.36.9.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       64
ABC RESULTS:              XNOR cells:        4
ABC RESULTS:               MUX cells:       60
ABC RESULTS:               BUF cells:      128
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:      129
ABC RESULTS:          output signals:      128
Removing temp directory.

yosys> opt_ffinv

3.37. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> abc -script /tmp/yosys_FFM0rP/abc_tmp_1.scr

3.38. Executing ABC pass (technology mapping using ABC).

3.38.1. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Extracted 1615 gates and 2777 wires to a netlist network with 1162 inputs and 301 outputs.

3.38.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /tmp/yosys_FFM0rP/abc_tmp_1.scr 
ABC:   #PIs = 1162  #Luts =   601  Max Lvl =   5  Avg Lvl =   2.43  [   0.09 sec. at Pass 0]
ABC:   #PIs = 1162  #Luts =   569  Max Lvl =   5  Avg Lvl =   2.23  [   2.43 sec. at Pass 1]
ABC:   #PIs = 1162  #Luts =   569  Max Lvl =   5  Avg Lvl =   2.23  [   0.69 sec. at Pass 2]
ABC:   #PIs = 1162  #Luts =   569  Max Lvl =   5  Avg Lvl =   2.23  [   1.43 sec. at Pass 3]
ABC:   #PIs = 1162  #Luts =   568  Max Lvl =   5  Avg Lvl =   2.23  [   1.02 sec. at Pass 4]
ABC:   #PIs = 1162  #Luts =   568  Max Lvl =   5  Avg Lvl =   2.23  [   0.98 sec. at Pass 5]
ABC:   #PIs = 1162  #Luts =   568  Max Lvl =   5  Avg Lvl =   2.23  [   0.86 sec. at Pass 6]
ABC:   #PIs = 1162  #Luts =   568  Max Lvl =   5  Avg Lvl =   2.23  [   1.04 sec. at Pass 7]
ABC:   #PIs = 1162  #Luts =   568  Max Lvl =   5  Avg Lvl =   2.23  [   4.46 sec. at Pass 8]
ABC:   #PIs = 1162  #Luts =   568  Max Lvl =   5  Avg Lvl =   2.23  [   0.32 sec. at Pass 9]
ABC:   [DE total time =   13.74 sec. ]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.38.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      568
ABC RESULTS:        internal signals:     1314
ABC RESULTS:           input signals:     1162
ABC RESULTS:          output signals:      301
Removing temp directory.

yosys> opt

3.39. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.39.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.

yosys> opt_merge -nomux

3.39.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.39.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.39.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb.
Performed a total of 0 changes.

yosys> opt_merge

3.39.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
Removed a total of 0 cells.

yosys> opt_dff

3.39.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.39.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..
Removed 0 unused cells and 6683 unused wires.
<suppressed ~3 debug messages>

yosys> opt_expr

3.39.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.

3.39.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.39.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.39.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb.
Performed a total of 0 changes.

yosys> opt_merge

3.39.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
Removed a total of 0 cells.

yosys> opt_dff

3.39.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.39.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..

yosys> opt_expr

3.39.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.

3.39.16. Finished OPT passes. (There is nothing left to do.)

yosys> opt_ffinv

3.40. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> stat

3.41. Printing statistics.

=== gost89_cfb ===

   Number of wires:                804
   Number of wire bits:           3970
   Number of public wires:          46
   Number of public wire bits:    3149
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                959
     $_DFFE_PP_                    346
     $_DFF_P_                       13
     $_SDFFE_PP0P_                   1
     $lut                          567
     adder_carry                    32


yosys> shregmap -minlen 8 -maxlen 20

3.42. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.43. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.44. Printing statistics.

=== gost89_cfb ===

   Number of wires:                806
   Number of wire bits:           3972
   Number of public wires:          46
   Number of public wire bits:    3149
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                961
     $_DFFE_PP0P_                  346
     $_DFF_P_                       14
     $_MUX_                          2
     $lut                          567
     adder_carry                    32


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.45. Executing TECHMAP pass (map to technology primitives).

3.45.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.45.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.45.3. Continuing TECHMAP pass.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using extmapper simplemap for cells of type $lut.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~1409 debug messages>

yosys> opt_expr -mux_undef

3.46. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.
<suppressed ~15268 debug messages>

yosys> simplemap

3.47. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.48. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.

yosys> opt_merge

3.49. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
<suppressed ~2676 debug messages>
Removed a total of 892 cells.

yosys> opt_dff -nodffe -nosdff

3.50. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.51. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..
Removed 0 unused cells and 3611 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.52. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.52.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.
<suppressed ~313 debug messages>

yosys> opt_merge -nomux

3.52.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.52.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.52.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb.
Performed a total of 0 changes.

yosys> opt_merge

3.52.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.52.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.52.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..
Removed 0 unused cells and 92 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.52.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.

3.52.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.52.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.52.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb.
Performed a total of 0 changes.

yosys> opt_merge

3.52.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.52.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.52.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..

yosys> opt_expr

3.52.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.

3.52.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /tmp/yosys_FFM0rP/abc_tmp_2.scr

3.53. Executing ABC pass (technology mapping using ABC).

3.53.1. Extracting gate netlist of module `\gost89_cfb' to `<abc-temp-dir>/input.blif'..
Extracted 2024 gates and 3188 wires to a netlist network with 1162 inputs and 300 outputs.

3.53.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /tmp/yosys_FFM0rP/abc_tmp_2.scr 
ABC:   #PIs = 1162  #Luts =   567  Max Lvl =   5  Avg Lvl =   2.23  [   0.10 sec. at Pass 0]
ABC:   #PIs = 1162  #Luts =   567  Max Lvl =   5  Avg Lvl =   2.23  [   2.00 sec. at Pass 1]
ABC:   #PIs = 1162  #Luts =   567  Max Lvl =   5  Avg Lvl =   2.23  [   0.69 sec. at Pass 2]
ABC:   #PIs = 1162  #Luts =   567  Max Lvl =   5  Avg Lvl =   2.23  [   0.93 sec. at Pass 3]
ABC:   #PIs = 1162  #Luts =   567  Max Lvl =   5  Avg Lvl =   2.23  [   0.85 sec. at Pass 4]
ABC:   #PIs = 1162  #Luts =   567  Max Lvl =   5  Avg Lvl =   2.23  [   0.97 sec. at Pass 5]
ABC:   #PIs = 1162  #Luts =   567  Max Lvl =   5  Avg Lvl =   2.23  [   4.47 sec. at Pass 6]
ABC:   #PIs = 1162  #Luts =   567  Max Lvl =   5  Avg Lvl =   2.23  [   0.53 sec. at Pass 7]
ABC:   [DE total time =   11.02 sec. ]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.53.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      567
ABC RESULTS:        internal signals:     1726
ABC RESULTS:           input signals:     1162
ABC RESULTS:          output signals:      300
Removing temp directory.

yosys> opt

3.54. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.54.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.

yosys> opt_merge -nomux

3.54.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.54.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.54.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb.
Performed a total of 0 changes.

yosys> opt_merge

3.54.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
Removed a total of 0 cells.

yosys> opt_dff

3.54.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.54.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..
Removed 0 unused cells and 2712 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.54.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.

3.54.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.54.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_cfb..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.54.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_cfb.
Performed a total of 0 changes.

yosys> opt_merge

3.54.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_cfb'.
Removed a total of 0 cells.

yosys> opt_dff

3.54.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.54.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..

yosys> opt_expr

3.54.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_cfb.

3.54.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.55. Executing HIERARCHY pass (managing design hierarchy).

3.55.1. Analyzing design hierarchy..
Top module:  \gost89_cfb

3.55.2. Analyzing design hierarchy..
Top module:  \gost89_cfb
Removed 0 unused modules.

yosys> stat

3.56. Printing statistics.

=== gost89_cfb ===

   Number of wires:                804
   Number of wire bits:           3970
   Number of public wires:          46
   Number of public wire bits:    3149
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                959
     $lut                          567
     adder_carry                    32
     dffsre                        360


yosys> opt_clean -purge

3.57. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_cfb..
Removed 0 unused cells and 24 unused wires.
<suppressed ~24 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.58. Executing Verilog backend.

yosys> bmuxmap

3.58.1. Executing BMUXMAP pass.

yosys> demuxmap

3.58.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\gost89_cfb'.

Warnings: 1 unique messages, 1 total
End of script. Logfile hash: 6809fdc799, CPU: user 8.40s system 0.19s, MEM: 57.90 MB peak
Yosys 0.16+65 (git sha1 03bd62bb8, gcc 9.1.0 -fPIC -Os)
Time spent: 96% 6x abc (211 sec), 1% 37x opt_expr (3 sec), ...
real 41.73
user 203.48
sys 15.56
