
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.24
 Yosys 0.16+65 (git sha1 03bd62bb8, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.

yosys> verilog_defaults -add -I.

yosys> read -sv prim_alert_pkg.sv prim_cipher_pkg.sv prim_mubi_pkg.sv prim_pkg.sv prim_secded_pkg.sv prim_subreg_pkg.sv sensor_ctrl_reg_pkg.sv prim_util_pkg.sv sensor_ctrl_pkg.sv lc_ctrl_pkg.sv pinmux_pkg.sv top_pkg.sv tlul_pkg.sv ast_pkg.sv

yosys> verific -sv prim_alert_pkg.sv prim_cipher_pkg.sv prim_mubi_pkg.sv prim_pkg.sv prim_secded_pkg.sv prim_subreg_pkg.sv sensor_ctrl_reg_pkg.sv prim_util_pkg.sv sensor_ctrl_pkg.sv lc_ctrl_pkg.sv pinmux_pkg.sv top_pkg.sv tlul_pkg.sv ast_pkg.sv

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_alert_pkg.sv'
VERIFIC-WARNING [VERI-2418] prim_alert_pkg.sv:19: parameter 'ALERT_TX_DEFAULT' declared inside package 'prim_alert_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_alert_pkg.sv:22: parameter 'ALERT_RX_DEFAULT' declared inside package 'prim_alert_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_cipher_pkg.sv'
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:23: parameter 'PRINCE_SBOX4' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:28: parameter 'PRINCE_SBOX4_INV' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:33: parameter 'PRINCE_SHIFT_ROWS64' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:38: parameter 'PRINCE_SHIFT_ROWS64_INV' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:44: parameter 'PRINCE_ROUND_CONST' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:58: parameter 'PRINCE_ALPHA_CONST' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:61: parameter 'PRINCE_SHIFT_ROWS_CONST0' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:62: parameter 'PRINCE_SHIFT_ROWS_CONST1' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:63: parameter 'PRINCE_SHIFT_ROWS_CONST2' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:64: parameter 'PRINCE_SHIFT_ROWS_CONST3' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:141: parameter 'PRESENT_SBOX4' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:146: parameter 'PRESENT_SBOX4_INV' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:153: parameter 'PRESENT_PERM32' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:162: parameter 'PRESENT_PERM32_INV' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:172: parameter 'PRESENT_PERM64' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:189: parameter 'PRESENT_PERM64_INV' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_mubi_pkg.sv'
VERIFIC-WARNING [VERI-2418] prim_mubi_pkg.sv:19: parameter 'MuBi4Width' declared inside package 'prim_mubi_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_mubi_pkg.sv:148: parameter 'MuBi8Width' declared inside package 'prim_mubi_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_mubi_pkg.sv:277: parameter 'MuBi12Width' declared inside package 'prim_mubi_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_mubi_pkg.sv:406: parameter 'MuBi16Width' declared inside package 'prim_mubi_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_pkg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_pkg.sv'
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:81: parameter 'Secded2216ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:82: parameter 'Secded2216ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:90: parameter 'Secded2822ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:91: parameter 'Secded2822ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:99: parameter 'Secded3932ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:100: parameter 'Secded3932ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:108: parameter 'Secded6457ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:109: parameter 'Secded6457ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:117: parameter 'Secded7264ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:118: parameter 'Secded7264ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:126: parameter 'SecdedHamming2216ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:127: parameter 'SecdedHamming2216ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:135: parameter 'SecdedHamming3932ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:136: parameter 'SecdedHamming3932ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:144: parameter 'SecdedHamming7264ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:145: parameter 'SecdedHamming7264ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:153: parameter 'SecdedHamming7668ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:154: parameter 'SecdedHamming7668ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:162: parameter 'SecdedInv2216ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:163: parameter 'SecdedInv2216ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:171: parameter 'SecdedInv2822ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:172: parameter 'SecdedInv2822ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:180: parameter 'SecdedInv3932ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:181: parameter 'SecdedInv3932ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:189: parameter 'SecdedInv6457ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:190: parameter 'SecdedInv6457ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:198: parameter 'SecdedInv7264ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:199: parameter 'SecdedInv7264ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:207: parameter 'SecdedInvHamming2216ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:208: parameter 'SecdedInvHamming2216ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:216: parameter 'SecdedInvHamming3932ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:217: parameter 'SecdedInvHamming3932ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:225: parameter 'SecdedInvHamming7264ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:226: parameter 'SecdedInvHamming7264ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:234: parameter 'SecdedInvHamming7668ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:235: parameter 'SecdedInvHamming7668ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_subreg_pkg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'sensor_ctrl_reg_pkg.sv'
VERIFIC-WARNING [VERI-2418] sensor_ctrl_reg_pkg.sv:10: parameter 'NumAlertEvents' declared inside package 'sensor_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] sensor_ctrl_reg_pkg.sv:11: parameter 'NumLocalEvents' declared inside package 'sensor_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] sensor_ctrl_reg_pkg.sv:12: parameter 'NumAlerts' declared inside package 'sensor_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] sensor_ctrl_reg_pkg.sv:13: parameter 'NumIoRails' declared inside package 'sensor_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] sensor_ctrl_reg_pkg.sv:16: parameter 'BlockAw' declared inside package 'sensor_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] sensor_ctrl_reg_pkg.sv:87: parameter 'SENSOR_CTRL_ALERT_TEST_OFFSET' declared inside package 'sensor_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] sensor_ctrl_reg_pkg.sv:88: parameter 'SENSOR_CTRL_CFG_REGWEN_OFFSET' declared inside package 'sensor_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] sensor_ctrl_reg_pkg.sv:89: parameter 'SENSOR_CTRL_ALERT_TRIG_OFFSET' declared inside package 'sensor_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] sensor_ctrl_reg_pkg.sv:90: parameter 'SENSOR_CTRL_FATAL_ALERT_EN_OFFSET' declared inside package 'sensor_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] sensor_ctrl_reg_pkg.sv:91: parameter 'SENSOR_CTRL_RECOV_ALERT_OFFSET' declared inside package 'sensor_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] sensor_ctrl_reg_pkg.sv:92: parameter 'SENSOR_CTRL_FATAL_ALERT_OFFSET' declared inside package 'sensor_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] sensor_ctrl_reg_pkg.sv:93: parameter 'SENSOR_CTRL_STATUS_OFFSET' declared inside package 'sensor_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] sensor_ctrl_reg_pkg.sv:96: parameter 'SENSOR_CTRL_ALERT_TEST_RESVAL' declared inside package 'sensor_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] sensor_ctrl_reg_pkg.sv:97: parameter 'SENSOR_CTRL_ALERT_TEST_RECOV_ALERT_RESVAL' declared inside package 'sensor_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] sensor_ctrl_reg_pkg.sv:98: parameter 'SENSOR_CTRL_ALERT_TEST_FATAL_ALERT_RESVAL' declared inside package 'sensor_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] sensor_ctrl_reg_pkg.sv:112: parameter 'SENSOR_CTRL_PERMIT' declared inside package 'sensor_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_util_pkg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'sensor_ctrl_pkg.sv'
VERIFIC-WARNING [VERI-2418] sensor_ctrl_pkg.sv:9: parameter 'RecovAlert' declared inside package 'sensor_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] sensor_ctrl_pkg.sv:10: parameter 'FatalAlert' declared inside package 'sensor_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] sensor_ctrl_pkg.sv:13: parameter 'TotalEvents' declared inside package 'sensor_ctrl_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'lc_ctrl_pkg.sv'
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:13: parameter 'A0' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:14: parameter 'A1' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:15: parameter 'A2' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:16: parameter 'A3' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:17: parameter 'A4' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:18: parameter 'A5' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:19: parameter 'A6' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:20: parameter 'A7' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:21: parameter 'A8' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:22: parameter 'A9' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:23: parameter 'A10' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:24: parameter 'A11' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:26: parameter 'B0' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:27: parameter 'B1' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:28: parameter 'B2' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:29: parameter 'B3' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:30: parameter 'B4' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:31: parameter 'B5' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:32: parameter 'B6' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:33: parameter 'B7' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:34: parameter 'B8' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:35: parameter 'B9' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:36: parameter 'B10' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:37: parameter 'B11' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:40: parameter 'C0' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:41: parameter 'C1' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:42: parameter 'C2' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:43: parameter 'C3' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:44: parameter 'C4' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:45: parameter 'C5' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:46: parameter 'C6' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:47: parameter 'C7' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:48: parameter 'C8' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:49: parameter 'C9' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:50: parameter 'C10' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:51: parameter 'C11' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:52: parameter 'C12' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:53: parameter 'C13' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:54: parameter 'C14' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:55: parameter 'C15' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:57: parameter 'D0' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:58: parameter 'D1' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:59: parameter 'D2' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:60: parameter 'D3' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:61: parameter 'D4' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:62: parameter 'D5' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:63: parameter 'D6' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:64: parameter 'D7' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:65: parameter 'D8' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:66: parameter 'D9' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:67: parameter 'D10' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:68: parameter 'D11' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:69: parameter 'D12' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:70: parameter 'D13' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:71: parameter 'D14' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:72: parameter 'D15' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:75: parameter 'E0' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:76: parameter 'F0' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:82: parameter 'LcValueWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:83: parameter 'LcTokenWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:84: parameter 'NumLcStateValues' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:85: parameter 'LcStateWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:86: parameter 'NumLcCountValues' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:87: parameter 'LcCountWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:88: parameter 'NumLcStates' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:89: parameter 'DecLcStateWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:90: parameter 'DecLcCountWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:91: parameter 'LcIdStateWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:92: parameter 'DecLcIdStateWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:172: parameter 'NumTokens' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:173: parameter 'TokenIdxWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:191: parameter 'TxWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:199: parameter 'LC_TX_DEFAULT' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:201: parameter 'RmaSeedWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:204: parameter 'LcKeymgrDivWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:263: parameter 'TransTokenIdxMatrix' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'pinmux_pkg.sv'
VERIFIC-WARNING [VERI-2418] pinmux_pkg.sv:18: parameter 'NIOPokSignals' declared inside package 'pinmux_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pinmux_pkg.sv:25: parameter 'NDFTStraps' declared inside package 'pinmux_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pinmux_pkg.sv:27: parameter 'DftStrapPos' declared inside package 'pinmux_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pinmux_pkg.sv:36: parameter 'NLcStraps' declared inside package 'pinmux_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pinmux_pkg.sv:38: parameter 'LcStrapPos' declared inside package 'pinmux_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'top_pkg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_pkg.sv'
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:14: parameter 'ArbiterImpl' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:27: parameter 'H2DCmdMaxWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:28: parameter 'H2DCmdIntgWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:29: parameter 'H2DCmdFullWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:30: parameter 'D2HRspMaxWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:31: parameter 'D2HRspIntgWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:32: parameter 'D2HRspFullWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:33: parameter 'DataMaxWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:34: parameter 'DataIntgWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:35: parameter 'DataFullWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:44: parameter 'TL_A_USER_DEFAULT' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:84: parameter 'TL_D_USER_DEFAULT' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'ast_pkg.sv'
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:15: parameter 'NumAlerts' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:16: parameter 'NumIoRails' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:17: parameter 'AsSel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:18: parameter 'CgSel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:19: parameter 'GdSel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:20: parameter 'TsHiSel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:21: parameter 'TsLoSel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:22: parameter 'FlaSel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:23: parameter 'OtpSel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:24: parameter 'Ot0Sel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:25: parameter 'Ot1Sel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:26: parameter 'Ot2Sel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:27: parameter 'Ot3Sel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:28: parameter 'Ot4Sel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:29: parameter 'Ot5Sel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:31: parameter 'Lc2HcTrCyc' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:32: parameter 'Hc2LcTrCyc' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:34: parameter 'EntropyStreams' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:35: parameter 'AdcChannels' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:36: parameter 'AdcDataWidth' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:37: parameter 'UsbCalibWidth' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:38: parameter 'Ast2PadOutWidth' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:39: parameter 'Pad2AstInWidth' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:43: parameter 'LfsrWidth' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:46: parameter 'RndCnstLfsrSeedDefault' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:47: parameter 'RndCnstLfsrPermDefault' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:95: parameter 'AST_RST_DEFAULT' declared inside package 'ast_pkg' shall be treated as localparam

yosys> read -vlog2k BUFGMUX.v

yosys> verific -vlog2k BUFGMUX.v

3. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'BUFGMUX.v'

yosys> read -sv prim_alert_sender.sv prim_buf.sv prim_clock_buf.sv prim_clock_div.sv prim_clock_gating.sv prim_clock_gating_sync.sv prim_clock_inv.sv prim_clock_meas.sv prim_clock_mux2.sv prim_clock_timeout.sv prim_diff_decode.sv prim_edge_detector.sv prim_flop.sv prim_flop_2sync.sv prim_generic_buf.sv prim_generic_clock_buf.sv prim_generic_clock_inv.sv prim_generic_clock_mux2.sv prim_generic_flop.sv prim_generic_xor2.sv prim_lc_sender.sv prim_lfsr.sv prim_mubi4_dec.sv prim_mubi4_sender.sv prim_mubi4_sync.sv prim_packer_fifo.sv prim_pulse_sync.sv prim_reg_cdc.sv prim_sec_anchor_buf.sv prim_secded_inv_39_32_dec.sv prim_secded_inv_39_32_enc.sv prim_secded_inv_64_57_dec.sv prim_secded_inv_64_57_enc.sv prim_subreg.sv prim_subreg_ext.sv prim_sync_reqack.sv prim_xilinx_clock_mux2.sv prim_xilinx_xor2.sv prim_xor2.sv sensor_ctrl.sv sensor_ctrl_reg_top.sv tlul_adapter_reg.sv tlul_cmd_intg_chk.sv tlul_data_integ_dec.sv tlul_data_integ_enc.sv tlul_err.sv tlul_rsp_intg_gen.sv wav_cgc_rl.sv

yosys> verific -sv prim_alert_sender.sv prim_buf.sv prim_clock_buf.sv prim_clock_div.sv prim_clock_gating.sv prim_clock_gating_sync.sv prim_clock_inv.sv prim_clock_meas.sv prim_clock_mux2.sv prim_clock_timeout.sv prim_diff_decode.sv prim_edge_detector.sv prim_flop.sv prim_flop_2sync.sv prim_generic_buf.sv prim_generic_clock_buf.sv prim_generic_clock_inv.sv prim_generic_clock_mux2.sv prim_generic_flop.sv prim_generic_xor2.sv prim_lc_sender.sv prim_lfsr.sv prim_mubi4_dec.sv prim_mubi4_sender.sv prim_mubi4_sync.sv prim_packer_fifo.sv prim_pulse_sync.sv prim_reg_cdc.sv prim_sec_anchor_buf.sv prim_secded_inv_39_32_dec.sv prim_secded_inv_39_32_enc.sv prim_secded_inv_64_57_dec.sv prim_secded_inv_64_57_enc.sv prim_subreg.sv prim_subreg_ext.sv prim_sync_reqack.sv prim_xilinx_clock_mux2.sv prim_xilinx_xor2.sv prim_xor2.sv sensor_ctrl.sv sensor_ctrl_reg_top.sv tlul_adapter_reg.sv tlul_cmd_intg_chk.sv tlul_data_integ_dec.sv tlul_data_integ_enc.sv tlul_err.sv tlul_rsp_intg_gen.sv wav_cgc_rl.sv

4. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_alert_sender.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_buf.sv'
VERIFIC-WARNING [VERI-1199] prim_buf.sv:24: parameter 'Impl' becomes localparam in 'prim_buf' with formal parameter declaration list
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_clock_buf.sv'
VERIFIC-WARNING [VERI-1199] prim_clock_buf.sv:24: parameter 'Impl' becomes localparam in 'prim_clock_buf' with formal parameter declaration list
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_clock_div.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_clock_gating.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_clock_gating_sync.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_clock_inv.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_clock_meas.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_clock_mux2.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_clock_timeout.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_diff_decode.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_edge_detector.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_flop.sv'
VERIFIC-WARNING [VERI-1199] prim_flop.sv:30: parameter 'Impl' becomes localparam in 'prim_flop' with formal parameter declaration list
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_flop_2sync.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_generic_buf.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_generic_clock_buf.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_generic_clock_inv.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_generic_clock_mux2.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_generic_flop.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_generic_xor2.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_lc_sender.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_lfsr.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_mubi4_dec.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_mubi4_sender.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_mubi4_sync.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_packer_fifo.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_pulse_sync.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_reg_cdc.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_sec_anchor_buf.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_inv_39_32_dec.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_inv_39_32_enc.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_inv_64_57_dec.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_inv_64_57_enc.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_subreg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_subreg_ext.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_sync_reqack.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_xilinx_clock_mux2.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_xilinx_xor2.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_xor2.sv'
VERIFIC-WARNING [VERI-1199] prim_xor2.sv:27: parameter 'Impl' becomes localparam in 'prim_xor2' with formal parameter declaration list
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'sensor_ctrl.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'sensor_ctrl_reg_top.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_adapter_reg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_cmd_intg_chk.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_data_integ_dec.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_data_integ_enc.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_err.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_rsp_intg_gen.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'wav_cgc_rl.sv'

yosys> synth_rs -top sensor_ctrl -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

5. Executing synth_rs pass: v0.4.47

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

5.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

5.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\dsp_t1_sim'.
Generating RTLIL representation for module `\dsp_t1_20x18x64'.
Generating RTLIL representation for module `\dsp_t1_10x9x32'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top sensor_ctrl

5.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-WARNING [VERI-1927] sensor_ctrl.sv:185: port 'alert_i' remains unconnected for this instance
VERIFIC-WARNING [VERI-1927] sensor_ctrl.sv:194: port 'alert_i' remains unconnected for this instance
VERIFIC-INFO [VERI-1018] sensor_ctrl.sv:8: compiling module 'sensor_ctrl'
VERIFIC-INFO [VERI-1018] prim_sec_anchor_buf.sv:6: compiling module 'prim_sec_anchor_buf(Width=2)'
VERIFIC-INFO [VERI-1018] prim_buf.sv:16: compiling module 'prim_buf'
VERIFIC-INFO [VERI-1018] prim_generic_buf.sv:6: compiling module 'prim_generic_buf'
VERIFIC-WARNING [VERI-1330] prim_sec_anchor_buf.sv:14: actual bit length 2 differs from formal bit length 1 for port 'in_i'
VERIFIC-WARNING [VERI-1330] prim_sec_anchor_buf.sv:15: actual bit length 2 differs from formal bit length 1 for port 'out_o'
VERIFIC-INFO [VERI-1018] prim_flop_2sync.sv:7: compiling module 'prim_flop_2sync(Width=13)'
VERIFIC-INFO [VERI-1018] prim_flop_2sync.sv:7: compiling module 'prim_flop_2sync(Width=13,ResetValue=1'b1)'
VERIFIC-INFO [VERI-1018] sensor_ctrl_reg_top.sv:8: compiling module 'sensor_ctrl_reg_top'
VERIFIC-INFO [VERI-1018] tlul_cmd_intg_chk.sv:10: compiling module 'tlul_cmd_intg_chk'
VERIFIC-INFO [VERI-1018] prim_secded_inv_64_57_dec.sv:7: compiling module 'prim_secded_inv_64_57_dec'
VERIFIC-INFO [VERI-1018] tlul_data_integ_dec.sv:10: compiling module 'tlul_data_integ_dec'
VERIFIC-INFO [VERI-1018] prim_secded_inv_39_32_dec.sv:7: compiling module 'prim_secded_inv_39_32_dec'
VERIFIC-INFO [VERI-1018] tlul_rsp_intg_gen.sv:9: compiling module 'tlul_rsp_intg_gen'
VERIFIC-INFO [VERI-1018] prim_secded_inv_64_57_enc.sv:7: compiling module 'prim_secded_inv_64_57_enc'
VERIFIC-INFO [VERI-1018] tlul_data_integ_enc.sv:10: compiling module 'tlul_data_integ_enc'
VERIFIC-INFO [VERI-1018] prim_secded_inv_39_32_enc.sv:7: compiling module 'prim_secded_inv_39_32_enc'
VERIFIC-INFO [VERI-1018] tlul_adapter_reg.sv:10: compiling module 'tlul_adapter_reg(RegAw=5)'
VERIFIC-INFO [VERI-1018] tlul_err.sv:7: compiling module 'tlul_err'
VERIFIC-WARNING [VERI-1209] tlul_err.sv:49: expression size 32 truncated to fit in target size 4
VERIFIC-WARNING [VDB-1002] tlul_adapter_reg.sv:43: net 'malformed_meta_err' does not have a driver
VERIFIC-INFO [VERI-1018] prim_subreg_ext.sv:7: compiling module 'prim_subreg_ext(DW=32'b01)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=1,SwAccess=SwAccessW0C_prim_subreg_pkg,RESVAL=1'b1)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=1,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=1,SwAccess=SwAccessW1C_prim_subreg_pkg,RESVAL=1'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=1,SwAccess=SwAccessRO_prim_subreg_pkg,RESVAL=1'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=2,SwAccess=SwAccessRO_prim_subreg_pkg,RESVAL=2'b11)'
VERIFIC-INFO [VERI-1018] prim_alert_sender.sv:27: compiling module 'prim_alert_sender'
VERIFIC-INFO [VERI-1018] prim_diff_decode.sv:19: compiling module 'prim_diff_decode(AsyncOn=1'b1)'
VERIFIC-INFO [VERI-1018] prim_flop_2sync.sv:7: compiling module 'prim_flop_2sync(Width=1)'
VERIFIC-INFO [VERI-1018] prim_flop_2sync.sv:7: compiling module 'prim_flop_2sync(Width=1,ResetValue=1'b1)'
VERIFIC-WARNING [VDB-1053] sensor_ctrl.sv:185: input port 'alert_i' remains unconnected for this instance
VERIFIC-WARNING [VDB-1053] sensor_ctrl.sv:194: input port 'alert_i' remains unconnected for this instance
VERIFIC-WARNING [VDB-1002] tlul_adapter_reg.sv:43: net 'malformed_meta_err' does not have a driver
Importing module sensor_ctrl.
Importing module prim_alert_sender.
Importing module prim_diff_decode(AsyncOn=1'b1).
Importing module prim_flop_2sync(Width=1).
Importing module prim_flop_2sync(Width=1,ResetValue=1'b1).
Importing module prim_flop_2sync(Width=13).
Importing module prim_flop_2sync(Width=13,ResetValue=1'b1).
Importing module prim_sec_anchor_buf(Width=2).
Importing module prim_buf.
Importing module prim_generic_buf.
Importing module sensor_ctrl_reg_top.
Importing module prim_subreg(DW=1,SwAccess=SwAccessRO_prim_subreg_pkg,RESVAL=1'b0).
Importing module prim_subreg(DW=1,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0).
Importing module prim_subreg(DW=1,SwAccess=SwAccessW0C_prim_subreg_pkg,RESVAL=1'b1).
Importing module prim_subreg(DW=1,SwAccess=SwAccessW1C_prim_subreg_pkg,RESVAL=1'b0).
Importing module prim_subreg(DW=2,SwAccess=SwAccessRO_prim_subreg_pkg,RESVAL=2'b11).
Importing module prim_subreg_ext(DW=32'b01).
Importing module tlul_adapter_reg(RegAw=5).
Importing module tlul_cmd_intg_chk.
Importing module prim_secded_inv_64_57_dec.
Importing module tlul_data_integ_dec.
Importing module prim_secded_inv_39_32_dec.
Importing module tlul_err.
Importing module tlul_rsp_intg_gen.
Importing module prim_secded_inv_64_57_enc.
Importing module tlul_data_integ_enc.
Importing module prim_secded_inv_39_32_enc.

5.3.1. Analyzing design hierarchy..
Top module:  \sensor_ctrl
Used module:     \prim_flop_2sync(Width=1)
Used module:     \prim_alert_sender
Used module:         \prim_diff_decode(AsyncOn=1'b1)
Used module:             \prim_flop_2sync(Width=1,ResetValue=1'b1)
Used module:     \sensor_ctrl_reg_top
Used module:         \prim_subreg(DW=2,SwAccess=SwAccessRO_prim_subreg_pkg,RESVAL=2'b11)
Used module:         \prim_subreg(DW=1,SwAccess=SwAccessRO_prim_subreg_pkg,RESVAL=1'b0)
Used module:         \prim_subreg(DW=1,SwAccess=SwAccessW1C_prim_subreg_pkg,RESVAL=1'b0)
Used module:         \prim_subreg(DW=1,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0)
Used module:         \prim_subreg(DW=1,SwAccess=SwAccessW0C_prim_subreg_pkg,RESVAL=1'b1)
Used module:         \prim_subreg_ext(DW=32'b01)
Used module:         \tlul_adapter_reg(RegAw=5)
Used module:             \tlul_err
Used module:         \tlul_rsp_intg_gen
Used module:             \tlul_data_integ_enc
Used module:                 \prim_secded_inv_39_32_enc
Used module:             \prim_secded_inv_64_57_enc
Used module:         \tlul_cmd_intg_chk
Used module:             \tlul_data_integ_dec
Used module:                 \prim_secded_inv_39_32_dec
Used module:             \prim_secded_inv_64_57_dec
Used module:     \prim_flop_2sync(Width=13,ResetValue=1'b1)
Used module:     \prim_flop_2sync(Width=13)
Used module:     \prim_sec_anchor_buf(Width=2)
Used module:         \prim_buf
Used module:             \prim_generic_buf

5.3.2. Analyzing design hierarchy..
Top module:  \sensor_ctrl
Used module:     \prim_flop_2sync(Width=1)
Used module:     \prim_alert_sender
Used module:         \prim_diff_decode(AsyncOn=1'b1)
Used module:             \prim_flop_2sync(Width=1,ResetValue=1'b1)
Used module:     \sensor_ctrl_reg_top
Used module:         \prim_subreg(DW=2,SwAccess=SwAccessRO_prim_subreg_pkg,RESVAL=2'b11)
Used module:         \prim_subreg(DW=1,SwAccess=SwAccessRO_prim_subreg_pkg,RESVAL=1'b0)
Used module:         \prim_subreg(DW=1,SwAccess=SwAccessW1C_prim_subreg_pkg,RESVAL=1'b0)
Used module:         \prim_subreg(DW=1,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0)
Used module:         \prim_subreg(DW=1,SwAccess=SwAccessW0C_prim_subreg_pkg,RESVAL=1'b1)
Used module:         \prim_subreg_ext(DW=32'b01)
Used module:         \tlul_adapter_reg(RegAw=5)
Used module:             \tlul_err
Used module:         \tlul_rsp_intg_gen
Used module:             \tlul_data_integ_enc
Used module:                 \prim_secded_inv_39_32_enc
Used module:             \prim_secded_inv_64_57_enc
Used module:         \tlul_cmd_intg_chk
Used module:             \tlul_data_integ_dec
Used module:                 \prim_secded_inv_39_32_dec
Used module:             \prim_secded_inv_64_57_dec
Used module:     \prim_flop_2sync(Width=13,ResetValue=1'b1)
Used module:     \prim_flop_2sync(Width=13)
Used module:     \prim_sec_anchor_buf(Width=2)
Used module:         \prim_buf
Used module:             \prim_generic_buf
Removed 0 unused modules.

yosys> proc

5.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

5.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

5.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

5.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

5.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

5.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_mux

5.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

5.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

5.4.8. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

5.4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

5.4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

5.4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module prim_secded_inv_39_32_enc.
Optimizing module tlul_data_integ_enc.
Optimizing module prim_secded_inv_64_57_enc.
Optimizing module tlul_rsp_intg_gen.
Optimizing module tlul_err.
<suppressed ~1 debug messages>
Optimizing module prim_secded_inv_39_32_dec.
Optimizing module tlul_data_integ_dec.
Optimizing module prim_secded_inv_64_57_dec.
Optimizing module tlul_cmd_intg_chk.
<suppressed ~1 debug messages>
Optimizing module tlul_adapter_reg(RegAw=5).
<suppressed ~11 debug messages>
Optimizing module prim_subreg_ext(DW=32'b01).
Optimizing module prim_subreg(DW=2,SwAccess=SwAccessRO_prim_subreg_pkg,RESVAL=2'b11).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=1,SwAccess=SwAccessW1C_prim_subreg_pkg,RESVAL=1'b0).
<suppressed ~2 debug messages>
Optimizing module prim_subreg(DW=1,SwAccess=SwAccessW0C_prim_subreg_pkg,RESVAL=1'b1).
<suppressed ~2 debug messages>
Optimizing module prim_subreg(DW=1,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0).
<suppressed ~2 debug messages>
Optimizing module prim_subreg(DW=1,SwAccess=SwAccessRO_prim_subreg_pkg,RESVAL=1'b0).
<suppressed ~2 debug messages>
Optimizing module sensor_ctrl_reg_top.
<suppressed ~2 debug messages>
Optimizing module prim_generic_buf.
Optimizing module prim_buf.
Optimizing module prim_sec_anchor_buf(Width=2).
Optimizing module prim_flop_2sync(Width=13,ResetValue=1'b1).
<suppressed ~3 debug messages>
Optimizing module prim_flop_2sync(Width=13).
<suppressed ~3 debug messages>
Optimizing module prim_flop_2sync(Width=1,ResetValue=1'b1).
<suppressed ~2 debug messages>
Optimizing module prim_flop_2sync(Width=1).
<suppressed ~2 debug messages>
Optimizing module prim_diff_decode(AsyncOn=1'b1).
<suppressed ~5 debug messages>
Optimizing module prim_alert_sender.
<suppressed ~6 debug messages>
Optimizing module sensor_ctrl.
<suppressed ~4 debug messages>

yosys> flatten

5.5. Executing FLATTEN pass (flatten design).
Deleting now unused module prim_secded_inv_39_32_enc.
Deleting now unused module tlul_data_integ_enc.
Deleting now unused module prim_secded_inv_64_57_enc.
Deleting now unused module tlul_rsp_intg_gen.
Deleting now unused module tlul_err.
Deleting now unused module prim_secded_inv_39_32_dec.
Deleting now unused module tlul_data_integ_dec.
Deleting now unused module prim_secded_inv_64_57_dec.
Deleting now unused module tlul_cmd_intg_chk.
Deleting now unused module tlul_adapter_reg(RegAw=5).
Deleting now unused module prim_subreg_ext(DW=32'b01).
Deleting now unused module prim_subreg(DW=2,SwAccess=SwAccessRO_prim_subreg_pkg,RESVAL=2'b11).
Deleting now unused module prim_subreg(DW=1,SwAccess=SwAccessW1C_prim_subreg_pkg,RESVAL=1'b0).
Deleting now unused module prim_subreg(DW=1,SwAccess=SwAccessW0C_prim_subreg_pkg,RESVAL=1'b1).
Deleting now unused module prim_subreg(DW=1,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0).
Deleting now unused module prim_subreg(DW=1,SwAccess=SwAccessRO_prim_subreg_pkg,RESVAL=1'b0).
Deleting now unused module sensor_ctrl_reg_top.
Deleting now unused module prim_generic_buf.
Deleting now unused module prim_buf.
Deleting now unused module prim_sec_anchor_buf(Width=2).
Deleting now unused module prim_flop_2sync(Width=13,ResetValue=1'b1).
Deleting now unused module prim_flop_2sync(Width=13).
Deleting now unused module prim_flop_2sync(Width=1,ResetValue=1'b1).
Deleting now unused module prim_flop_2sync(Width=1).
Deleting now unused module prim_diff_decode(AsyncOn=1'b1).
Deleting now unused module prim_alert_sender.
<suppressed ~93 debug messages>

yosys> tribuf -logic

5.6. Executing TRIBUF pass.

yosys> deminout

5.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

5.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module sensor_ctrl.
<suppressed ~1 debug messages>

yosys> opt_clean

5.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sensor_ctrl..
Removed 273 unused cells and 2934 unused wires.
<suppressed ~1136 debug messages>

yosys> check

5.10. Executing CHECK pass (checking for obvious problems).
Checking module sensor_ctrl...
Warning: Wire sensor_ctrl.\u_reg.u_reg_if.malformed_meta_err is used but has no driver.
Warning: Wire sensor_ctrl.\u_prim_recov_alert_sender.alert_i is used but has no driver.
Warning: Wire sensor_ctrl.\u_prim_fatal_alert_sender.alert_i is used but has no driver.
Found and reported 3 problems.

yosys> opt -nodffe -nosdff

5.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

5.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module sensor_ctrl.
<suppressed ~31 debug messages>

yosys> opt_merge -nomux

5.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sensor_ctrl'.
<suppressed ~18 debug messages>
Removed a total of 6 cells.

yosys> opt_muxtree

5.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sensor_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~85 debug messages>

yosys> opt_reduce

5.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sensor_ctrl.
    New ctrl vector for $pmux cell $flatten\u_reg.$verific$select_220$sensor_ctrl_reg_top.sv:1861$2169: { $flatten\u_reg.$verific$n794$1064 $flatten\u_reg.$verific$n797$1067 $flatten\u_reg.$verific$n800$1070 $flatten\u_reg.$verific$n803$1073 $flatten\u_reg.$verific$n806$1076 $flatten\u_reg.$verific$n809$1079 $flatten\u_reg.$verific$n811$1081 }
  Optimizing cells in module \sensor_ctrl.
Performed a total of 1 changes.

yosys> opt_merge

5.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sensor_ctrl'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

5.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $verific$wkup_req_o_reg$sensor_ctrl.sv:247$712 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $verific$wake_req_filter_reg$sensor_ctrl.sv:236$708 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_alert_n_sync.$verific$intq_reg$prim_flop_2sync.sv:26$951 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_wake_sync.$verific$q_reg[0]$prim_flop_2sync.sv:26$916 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_wake_sync.$verific$intq_reg[0]$prim_flop_2sync.sv:26$915 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_status_io_pok.$verific$q_reg$prim_subreg.sv:72$2270 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_alert_n_sync.$verific$q_reg$prim_flop_2sync.sv:26$952 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_status_ast_init_done.$verific$q_reg[0]$prim_subreg.sv:72$2194 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_alert_p_sync.$verific$intq_reg$prim_flop_2sync.sv:26$939 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$rspop_reg$tlul_adapter_reg.sv:80$2354 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$reqsz_reg$tlul_adapter_reg.sv:80$2353 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$reqid_reg$tlul_adapter_reg.sv:80$2352 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$rdata_reg$tlul_adapter_reg.sv:90$2362 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$outstanding_reg$tlul_adapter_reg.sv:67$2342 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$error_reg$tlul_adapter_reg.sv:90$2363 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_recov_alert_val_9.$verific$q_reg[0]$prim_subreg.sv:72$2249 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_recov_alert_val_8.$verific$q_reg[0]$prim_subreg.sv:72$2249 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_recov_alert_val_7.$verific$q_reg[0]$prim_subreg.sv:72$2249 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_recov_alert_val_6.$verific$q_reg[0]$prim_subreg.sv:72$2249 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_recov_alert_val_5.$verific$q_reg[0]$prim_subreg.sv:72$2249 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_recov_alert_val_4.$verific$q_reg[0]$prim_subreg.sv:72$2249 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_recov_alert_val_3.$verific$q_reg[0]$prim_subreg.sv:72$2249 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_recov_alert_val_2.$verific$q_reg[0]$prim_subreg.sv:72$2249 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_recov_alert_val_12.$verific$q_reg[0]$prim_subreg.sv:72$2249 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_recov_alert_val_11.$verific$q_reg[0]$prim_subreg.sv:72$2249 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_recov_alert_val_10.$verific$q_reg[0]$prim_subreg.sv:72$2249 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_recov_alert_val_1.$verific$q_reg[0]$prim_subreg.sv:72$2249 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_recov_alert_val_0.$verific$q_reg[0]$prim_subreg.sv:72$2249 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_fatal_alert_val_9.$verific$q_reg[0]$prim_subreg.sv:72$2194 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_fatal_alert_val_8.$verific$q_reg[0]$prim_subreg.sv:72$2194 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_fatal_alert_val_7.$verific$q_reg[0]$prim_subreg.sv:72$2194 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_fatal_alert_val_6.$verific$q_reg[0]$prim_subreg.sv:72$2194 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_fatal_alert_val_5.$verific$q_reg[0]$prim_subreg.sv:72$2194 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_fatal_alert_val_4.$verific$q_reg[0]$prim_subreg.sv:72$2194 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_fatal_alert_val_3.$verific$q_reg[0]$prim_subreg.sv:72$2194 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_fatal_alert_val_2.$verific$q_reg[0]$prim_subreg.sv:72$2194 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_fatal_alert_val_13.$verific$q_reg[0]$prim_subreg.sv:72$2194 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_fatal_alert_val_12.$verific$q_reg[0]$prim_subreg.sv:72$2194 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_fatal_alert_val_11.$verific$q_reg[0]$prim_subreg.sv:72$2194 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_fatal_alert_val_10.$verific$q_reg[0]$prim_subreg.sv:72$2194 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_fatal_alert_val_1.$verific$q_reg[0]$prim_subreg.sv:72$2194 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_fatal_alert_val_0.$verific$q_reg[0]$prim_subreg.sv:72$2194 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_fatal_alert_en_val_9.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_fatal_alert_en_val_8.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_fatal_alert_en_val_7.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_fatal_alert_sender.$verific$alert_nq_reg$prim_alert_sender.sv:183$815 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_fatal_alert_en_val_6.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_fatal_alert_sender.$verific$alert_pq_reg$prim_alert_sender.sv:183$814 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_fatal_alert_en_val_5.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_fatal_alert_sender.$verific$alert_set_q_reg$prim_alert_sender.sv:183$816 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_fatal_alert_en_val_4.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_fatal_alert_en_val_3.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_fatal_alert_en_val_2.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_fatal_alert_en_val_12.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_alert_p_sync.$verific$q_reg$prim_flop_2sync.sv:26$940 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_fatal_alert_en_val_11.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_fatal_alert_en_val_10.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_fatal_alert_en_val_1.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_fatal_alert_en_val_0.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_cfg_regwen.$verific$q_reg[0]$prim_subreg.sv:72$2232 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_alert_trig_val_9.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_alert_trig_val_8.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_alert_trig_val_7.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_alert_trig_val_6.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_alert_trig_val_5.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_alert_trig_val_4.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_alert_trig_val_3.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_alert_trig_val_2.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_alert_trig_val_12.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_alert_trig_val_11.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_alert_trig_val_10.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_alert_trig_val_1.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_alert_trig_val_0.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.$verific$intg_err_q_reg$sensor_ctrl_reg_top.sv:61$1204 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_recov_alert_sender.\i_decode_ping.\gen_async.i_sync_p.$verific$q_reg[0]$prim_flop_2sync.sv:26$916 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_recov_alert_sender.\i_decode_ping.\gen_async.i_sync_p.$verific$intq_reg[0]$prim_flop_2sync.sv:26$915 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_recov_alert_sender.\i_decode_ping.\gen_async.i_sync_n.$verific$q_reg[0]$prim_flop_2sync.sv:26$928 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_recov_alert_sender.\i_decode_ping.\gen_async.i_sync_n.$verific$intq_reg[0]$prim_flop_2sync.sv:26$927 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_recov_alert_sender.\i_decode_ping.$verific$gen_async.state_q_reg$prim_diff_decode.sv:172$900 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_recov_alert_sender.\i_decode_ping.$verific$gen_async.diff_pq_reg$prim_diff_decode.sv:172$901 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_recov_alert_sender.\i_decode_ping.$verific$gen_async.diff_nq_reg$prim_diff_decode.sv:172$902 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_recov_alert_sender.\i_decode_ack.\gen_async.i_sync_p.$verific$q_reg[0]$prim_flop_2sync.sv:26$916 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_recov_alert_sender.\i_decode_ack.\gen_async.i_sync_p.$verific$intq_reg[0]$prim_flop_2sync.sv:26$915 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_recov_alert_sender.\i_decode_ack.\gen_async.i_sync_n.$verific$q_reg[0]$prim_flop_2sync.sv:26$928 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_recov_alert_sender.\i_decode_ack.\gen_async.i_sync_n.$verific$intq_reg[0]$prim_flop_2sync.sv:26$927 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_recov_alert_sender.\i_decode_ack.$verific$level_q_reg$prim_diff_decode.sv:172$903 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_recov_alert_sender.\i_decode_ack.$verific$gen_async.state_q_reg$prim_diff_decode.sv:172$900 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_recov_alert_sender.\i_decode_ack.$verific$gen_async.diff_pq_reg$prim_diff_decode.sv:172$901 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_recov_alert_sender.\i_decode_ack.$verific$gen_async.diff_nq_reg$prim_diff_decode.sv:172$902 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_recov_alert_sender.$verific$state_q_reg$prim_alert_sender.sv:183$813 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_recov_alert_sender.$verific$ping_set_q_reg$prim_alert_sender.sv:183$817 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_recov_alert_sender.$verific$alert_set_q_reg$prim_alert_sender.sv:183$816 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_recov_alert_sender.$verific$alert_pq_reg$prim_alert_sender.sv:183$814 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_recov_alert_sender.$verific$alert_nq_reg$prim_alert_sender.sv:183$815 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_fatal_alert_sender.\i_decode_ping.\gen_async.i_sync_p.$verific$q_reg[0]$prim_flop_2sync.sv:26$916 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_fatal_alert_sender.\i_decode_ping.\gen_async.i_sync_p.$verific$intq_reg[0]$prim_flop_2sync.sv:26$915 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_fatal_alert_sender.\i_decode_ping.\gen_async.i_sync_n.$verific$q_reg[0]$prim_flop_2sync.sv:26$928 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_fatal_alert_sender.\i_decode_ping.\gen_async.i_sync_n.$verific$intq_reg[0]$prim_flop_2sync.sv:26$927 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_fatal_alert_sender.\i_decode_ping.$verific$gen_async.state_q_reg$prim_diff_decode.sv:172$900 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_fatal_alert_sender.\i_decode_ping.$verific$gen_async.diff_pq_reg$prim_diff_decode.sv:172$901 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_fatal_alert_sender.\i_decode_ping.$verific$gen_async.diff_nq_reg$prim_diff_decode.sv:172$902 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_fatal_alert_sender.\i_decode_ack.\gen_async.i_sync_p.$verific$q_reg[0]$prim_flop_2sync.sv:26$916 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_fatal_alert_sender.\i_decode_ack.\gen_async.i_sync_p.$verific$intq_reg[0]$prim_flop_2sync.sv:26$915 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_fatal_alert_sender.\i_decode_ack.\gen_async.i_sync_n.$verific$q_reg[0]$prim_flop_2sync.sv:26$928 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_fatal_alert_sender.\i_decode_ack.\gen_async.i_sync_n.$verific$intq_reg[0]$prim_flop_2sync.sv:26$927 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_fatal_alert_sender.\i_decode_ack.$verific$level_q_reg$prim_diff_decode.sv:172$903 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_fatal_alert_sender.\i_decode_ack.$verific$gen_async.state_q_reg$prim_diff_decode.sv:172$900 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_fatal_alert_sender.\i_decode_ack.$verific$gen_async.diff_pq_reg$prim_diff_decode.sv:172$901 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_fatal_alert_sender.\i_decode_ack.$verific$gen_async.diff_nq_reg$prim_diff_decode.sv:172$902 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_fatal_alert_sender.$verific$state_q_reg$prim_alert_sender.sv:183$813 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_fatal_alert_sender.$verific$ping_set_q_reg$prim_alert_sender.sv:183$817 ($aldff) from module sensor_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_alert_p_sync.$verific$intq_reg$prim_flop_2sync.sv:26$939 ($adff) from module sensor_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_alert_p_sync.$verific$intq_reg$prim_flop_2sync.sv:26$939 ($adff) from module sensor_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_alert_p_sync.$verific$intq_reg$prim_flop_2sync.sv:26$939 ($adff) from module sensor_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_alert_p_sync.$verific$intq_reg$prim_flop_2sync.sv:26$939 ($adff) from module sensor_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_alert_p_sync.$verific$intq_reg$prim_flop_2sync.sv:26$939 ($adff) from module sensor_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_alert_p_sync.$verific$intq_reg$prim_flop_2sync.sv:26$939 ($adff) from module sensor_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_alert_p_sync.$verific$intq_reg$prim_flop_2sync.sv:26$939 ($adff) from module sensor_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_alert_p_sync.$verific$intq_reg$prim_flop_2sync.sv:26$939 ($adff) from module sensor_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_alert_p_sync.$verific$intq_reg$prim_flop_2sync.sv:26$939 ($adff) from module sensor_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_alert_p_sync.$verific$intq_reg$prim_flop_2sync.sv:26$939 ($adff) from module sensor_ctrl.
Setting constant 0-bit at position 10 on $flatten\u_alert_p_sync.$verific$intq_reg$prim_flop_2sync.sv:26$939 ($adff) from module sensor_ctrl.
Setting constant 0-bit at position 11 on $flatten\u_alert_p_sync.$verific$intq_reg$prim_flop_2sync.sv:26$939 ($adff) from module sensor_ctrl.
Setting constant 0-bit at position 12 on $flatten\u_alert_p_sync.$verific$intq_reg$prim_flop_2sync.sv:26$939 ($adff) from module sensor_ctrl.

yosys> opt_clean

5.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sensor_ctrl..
Removed 0 unused cells and 37 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

5.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module sensor_ctrl.

5.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

5.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sensor_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~85 debug messages>

yosys> opt_reduce

5.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sensor_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

5.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sensor_ctrl'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

5.11.13. Executing OPT_DFF pass (perform DFF optimizations).
Handling D = Q on $flatten\u_reg.\u_fatal_alert_en_val_9.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($adff) from module sensor_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_fatal_alert_en_val_8.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($adff) from module sensor_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_fatal_alert_en_val_7.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($adff) from module sensor_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_fatal_alert_en_val_6.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($adff) from module sensor_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_fatal_alert_en_val_5.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($adff) from module sensor_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_fatal_alert_en_val_4.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($adff) from module sensor_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_fatal_alert_en_val_3.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($adff) from module sensor_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_fatal_alert_en_val_2.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($adff) from module sensor_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_fatal_alert_en_val_12.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($adff) from module sensor_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_fatal_alert_en_val_11.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($adff) from module sensor_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_fatal_alert_en_val_10.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($adff) from module sensor_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_fatal_alert_en_val_1.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($adff) from module sensor_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_fatal_alert_en_val_0.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($adff) from module sensor_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_cfg_regwen.$verific$q_reg[0]$prim_subreg.sv:72$2232 ($adff) from module sensor_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_alert_trig_val_9.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($adff) from module sensor_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_alert_trig_val_8.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($adff) from module sensor_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_alert_trig_val_7.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($adff) from module sensor_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_alert_trig_val_6.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($adff) from module sensor_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_alert_trig_val_5.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($adff) from module sensor_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_alert_trig_val_4.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($adff) from module sensor_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_alert_trig_val_3.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($adff) from module sensor_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_alert_trig_val_2.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($adff) from module sensor_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_alert_trig_val_12.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($adff) from module sensor_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_alert_trig_val_11.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($adff) from module sensor_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_alert_trig_val_10.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($adff) from module sensor_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_alert_trig_val_1.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($adff) from module sensor_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_alert_trig_val_0.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($adff) from module sensor_ctrl (removing D path).
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_alert_trig_val_0.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($dlatch) from module sensor_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_alert_p_sync.$verific$q_reg$prim_flop_2sync.sv:26$940 ($adff) from module sensor_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_alert_p_sync.$verific$q_reg$prim_flop_2sync.sv:26$940 ($adff) from module sensor_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_alert_p_sync.$verific$q_reg$prim_flop_2sync.sv:26$940 ($adff) from module sensor_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_alert_p_sync.$verific$q_reg$prim_flop_2sync.sv:26$940 ($adff) from module sensor_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_alert_p_sync.$verific$q_reg$prim_flop_2sync.sv:26$940 ($adff) from module sensor_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_alert_p_sync.$verific$q_reg$prim_flop_2sync.sv:26$940 ($adff) from module sensor_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_alert_p_sync.$verific$q_reg$prim_flop_2sync.sv:26$940 ($adff) from module sensor_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_alert_p_sync.$verific$q_reg$prim_flop_2sync.sv:26$940 ($adff) from module sensor_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_alert_p_sync.$verific$q_reg$prim_flop_2sync.sv:26$940 ($adff) from module sensor_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_alert_p_sync.$verific$q_reg$prim_flop_2sync.sv:26$940 ($adff) from module sensor_ctrl.
Setting constant 0-bit at position 10 on $flatten\u_alert_p_sync.$verific$q_reg$prim_flop_2sync.sv:26$940 ($adff) from module sensor_ctrl.
Setting constant 0-bit at position 11 on $flatten\u_alert_p_sync.$verific$q_reg$prim_flop_2sync.sv:26$940 ($adff) from module sensor_ctrl.
Setting constant 0-bit at position 12 on $flatten\u_alert_p_sync.$verific$q_reg$prim_flop_2sync.sv:26$940 ($adff) from module sensor_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_alert_trig_val_1.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($dlatch) from module sensor_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_alert_trig_val_10.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($dlatch) from module sensor_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_alert_trig_val_11.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($dlatch) from module sensor_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_alert_trig_val_12.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($dlatch) from module sensor_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_alert_trig_val_2.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($dlatch) from module sensor_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_alert_trig_val_3.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($dlatch) from module sensor_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_alert_trig_val_4.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($dlatch) from module sensor_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_alert_trig_val_5.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($dlatch) from module sensor_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_alert_trig_val_6.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($dlatch) from module sensor_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_alert_trig_val_7.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($dlatch) from module sensor_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_alert_trig_val_8.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($dlatch) from module sensor_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_alert_trig_val_9.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($dlatch) from module sensor_ctrl.
Setting constant 1-bit at position 0 on $flatten\u_reg.\u_cfg_regwen.$verific$q_reg[0]$prim_subreg.sv:72$2232 ($dlatch) from module sensor_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_fatal_alert_en_val_0.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($dlatch) from module sensor_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_fatal_alert_en_val_1.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($dlatch) from module sensor_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_fatal_alert_en_val_10.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($dlatch) from module sensor_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_fatal_alert_en_val_11.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($dlatch) from module sensor_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_fatal_alert_en_val_12.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($dlatch) from module sensor_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_fatal_alert_en_val_2.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($dlatch) from module sensor_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_fatal_alert_en_val_3.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($dlatch) from module sensor_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_fatal_alert_en_val_4.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($dlatch) from module sensor_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_fatal_alert_en_val_5.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($dlatch) from module sensor_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_fatal_alert_en_val_6.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($dlatch) from module sensor_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_fatal_alert_en_val_7.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($dlatch) from module sensor_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_fatal_alert_en_val_8.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($dlatch) from module sensor_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_fatal_alert_en_val_9.$verific$q_reg[0]$prim_subreg.sv:72$2211 ($dlatch) from module sensor_ctrl.

yosys> opt_clean

5.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sensor_ctrl..

yosys> opt_expr

5.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module sensor_ctrl.
<suppressed ~28 debug messages>

5.11.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

5.11.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sensor_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~85 debug messages>

yosys> opt_reduce

5.11.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sensor_ctrl.
    New ctrl vector for $pmux cell $flatten\u_reg.$verific$select_220$sensor_ctrl_reg_top.sv:1861$2169: { $flatten\u_reg.$verific$n794$1064 $flatten\u_reg.$verific$n803$1073 $flatten\u_reg.$verific$n806$1076 $flatten\u_reg.$verific$n809$1079 $flatten\u_reg.$verific$n811$1081 }
  Optimizing cells in module \sensor_ctrl.
Performed a total of 1 changes.

yosys> opt_merge

5.11.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sensor_ctrl'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

5.11.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

5.11.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sensor_ctrl..
Removed 4 unused cells and 6 unused wires.
<suppressed ~6 debug messages>

yosys> opt_expr

5.11.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module sensor_ctrl.

5.11.23. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

5.11.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sensor_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~85 debug messages>

yosys> opt_reduce

5.11.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sensor_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

5.11.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sensor_ctrl'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

5.11.27. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

5.11.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sensor_ctrl..

yosys> opt_expr

5.11.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module sensor_ctrl.

5.11.30. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

5.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

5.12.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

5.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

5.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

5.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sensor_ctrl..

yosys> fsm_opt

5.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

5.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

5.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

5.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat

5.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

5.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module sensor_ctrl.

yosys> opt_merge -nomux

5.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sensor_ctrl'.
Removed a total of 0 cells.

yosys> opt_muxtree

5.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sensor_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~85 debug messages>

yosys> opt_reduce

5.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sensor_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

5.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sensor_ctrl'.
Removed a total of 0 cells.

yosys> opt_dff -sat

5.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$rspop_reg$tlul_adapter_reg.sv:80$2354 ($adff) from module sensor_ctrl (D = { 2'00 \u_reg.u_reg_if.rd_req }, Q = \u_reg.u_reg_if.rspop).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$reqsz_reg$tlul_adapter_reg.sv:80$2353 ($adff) from module sensor_ctrl (D = \tl_i.a_size, Q = \u_reg.u_reg_if.reqsz).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$reqid_reg$tlul_adapter_reg.sv:80$2352 ($adff) from module sensor_ctrl (D = \tl_i.a_source, Q = \u_reg.u_reg_if.reqid).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$rdata_reg$tlul_adapter_reg.sv:90$2362 ($adff) from module sensor_ctrl (D = $flatten\u_reg.\u_reg_if.$verific$n180$2312, Q = \u_reg.u_reg_if.rdata).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$outstanding_reg$tlul_adapter_reg.sv:67$2342 ($adff) from module sensor_ctrl (D = $flatten\u_reg.\u_reg_if.$verific$n73$2292, Q = \u_reg.u_reg_if.outstanding).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$error_reg$tlul_adapter_reg.sv:90$2363 ($adff) from module sensor_ctrl (D = $flatten\u_reg.\u_reg_if.$verific$n246$2294, Q = \u_reg.u_reg_if.error).
Adding EN signal on $flatten\u_reg.\u_recov_alert_val_9.$verific$q_reg[0]$prim_subreg.sv:72$2249 ($adff) from module sensor_ctrl (D = 1'1, Q = \u_reg.u_recov_alert_val_9.q).
Adding EN signal on $flatten\u_reg.\u_recov_alert_val_8.$verific$q_reg[0]$prim_subreg.sv:72$2249 ($adff) from module sensor_ctrl (D = 1'1, Q = \u_reg.u_recov_alert_val_8.q).
Adding EN signal on $flatten\u_reg.\u_recov_alert_val_7.$verific$q_reg[0]$prim_subreg.sv:72$2249 ($adff) from module sensor_ctrl (D = 1'1, Q = \u_reg.u_recov_alert_val_7.q).
Adding EN signal on $flatten\u_reg.\u_recov_alert_val_6.$verific$q_reg[0]$prim_subreg.sv:72$2249 ($adff) from module sensor_ctrl (D = 1'1, Q = \u_reg.u_recov_alert_val_6.q).
Adding EN signal on $flatten\u_reg.\u_recov_alert_val_5.$verific$q_reg[0]$prim_subreg.sv:72$2249 ($adff) from module sensor_ctrl (D = 1'1, Q = \u_reg.u_recov_alert_val_5.q).
Adding EN signal on $flatten\u_reg.\u_recov_alert_val_4.$verific$q_reg[0]$prim_subreg.sv:72$2249 ($adff) from module sensor_ctrl (D = 1'1, Q = \u_reg.u_recov_alert_val_4.q).
Adding EN signal on $flatten\u_reg.\u_recov_alert_val_3.$verific$q_reg[0]$prim_subreg.sv:72$2249 ($adff) from module sensor_ctrl (D = 1'1, Q = \u_reg.u_recov_alert_val_3.q).
Adding EN signal on $flatten\u_reg.\u_recov_alert_val_2.$verific$q_reg[0]$prim_subreg.sv:72$2249 ($adff) from module sensor_ctrl (D = 1'1, Q = \u_reg.u_recov_alert_val_2.q).
Adding EN signal on $flatten\u_reg.\u_recov_alert_val_12.$verific$q_reg[0]$prim_subreg.sv:72$2249 ($adff) from module sensor_ctrl (D = 1'1, Q = \u_reg.u_recov_alert_val_12.q).
Adding EN signal on $flatten\u_reg.\u_recov_alert_val_11.$verific$q_reg[0]$prim_subreg.sv:72$2249 ($adff) from module sensor_ctrl (D = 1'1, Q = \u_reg.u_recov_alert_val_11.q).
Adding EN signal on $flatten\u_reg.\u_recov_alert_val_10.$verific$q_reg[0]$prim_subreg.sv:72$2249 ($adff) from module sensor_ctrl (D = 1'1, Q = \u_reg.u_recov_alert_val_10.q).
Adding EN signal on $flatten\u_reg.\u_recov_alert_val_1.$verific$q_reg[0]$prim_subreg.sv:72$2249 ($adff) from module sensor_ctrl (D = 1'1, Q = \u_reg.u_recov_alert_val_1.q).
Adding EN signal on $flatten\u_reg.\u_recov_alert_val_0.$verific$q_reg[0]$prim_subreg.sv:72$2249 ($adff) from module sensor_ctrl (D = 1'1, Q = \u_reg.u_recov_alert_val_0.q).
Adding EN signal on $flatten\u_reg.\u_fatal_alert_val_9.$verific$q_reg[0]$prim_subreg.sv:72$2194 ($adff) from module sensor_ctrl (D = 1'1, Q = \u_reg.u_fatal_alert_val_9.q).
Adding EN signal on $flatten\u_reg.\u_fatal_alert_val_8.$verific$q_reg[0]$prim_subreg.sv:72$2194 ($adff) from module sensor_ctrl (D = 1'1, Q = \u_reg.u_fatal_alert_val_8.q).
Adding EN signal on $flatten\u_reg.\u_fatal_alert_val_7.$verific$q_reg[0]$prim_subreg.sv:72$2194 ($adff) from module sensor_ctrl (D = 1'1, Q = \u_reg.u_fatal_alert_val_7.q).
Adding EN signal on $flatten\u_reg.\u_fatal_alert_val_6.$verific$q_reg[0]$prim_subreg.sv:72$2194 ($adff) from module sensor_ctrl (D = 1'1, Q = \u_reg.u_fatal_alert_val_6.q).
Adding EN signal on $flatten\u_reg.\u_fatal_alert_val_5.$verific$q_reg[0]$prim_subreg.sv:72$2194 ($adff) from module sensor_ctrl (D = 1'1, Q = \u_reg.u_fatal_alert_val_5.q).
Adding EN signal on $flatten\u_reg.\u_fatal_alert_val_4.$verific$q_reg[0]$prim_subreg.sv:72$2194 ($adff) from module sensor_ctrl (D = 1'1, Q = \u_reg.u_fatal_alert_val_4.q).
Adding EN signal on $flatten\u_reg.\u_fatal_alert_val_3.$verific$q_reg[0]$prim_subreg.sv:72$2194 ($adff) from module sensor_ctrl (D = 1'1, Q = \u_reg.u_fatal_alert_val_3.q).
Adding EN signal on $flatten\u_reg.\u_fatal_alert_val_2.$verific$q_reg[0]$prim_subreg.sv:72$2194 ($adff) from module sensor_ctrl (D = 1'1, Q = \u_reg.u_fatal_alert_val_2.q).
Adding EN signal on $flatten\u_reg.\u_fatal_alert_val_13.$verific$q_reg[0]$prim_subreg.sv:72$2194 ($adff) from module sensor_ctrl (D = 1'1, Q = \u_reg.u_fatal_alert_val_13.q).
Adding EN signal on $flatten\u_reg.\u_fatal_alert_val_12.$verific$q_reg[0]$prim_subreg.sv:72$2194 ($adff) from module sensor_ctrl (D = 1'1, Q = \u_reg.u_fatal_alert_val_12.q).
Adding EN signal on $flatten\u_reg.\u_fatal_alert_val_11.$verific$q_reg[0]$prim_subreg.sv:72$2194 ($adff) from module sensor_ctrl (D = 1'1, Q = \u_reg.u_fatal_alert_val_11.q).
Adding EN signal on $flatten\u_reg.\u_fatal_alert_val_10.$verific$q_reg[0]$prim_subreg.sv:72$2194 ($adff) from module sensor_ctrl (D = 1'1, Q = \u_reg.u_fatal_alert_val_10.q).
Adding EN signal on $flatten\u_reg.\u_fatal_alert_val_1.$verific$q_reg[0]$prim_subreg.sv:72$2194 ($adff) from module sensor_ctrl (D = 1'1, Q = \u_reg.u_fatal_alert_val_1.q).
Adding EN signal on $flatten\u_reg.\u_fatal_alert_val_0.$verific$q_reg[0]$prim_subreg.sv:72$2194 ($adff) from module sensor_ctrl (D = 1'1, Q = \u_reg.u_fatal_alert_val_0.q).
Adding EN signal on $flatten\u_reg.$verific$intg_err_q_reg$sensor_ctrl_reg_top.sv:61$1204 ($adff) from module sensor_ctrl (D = 1'1, Q = \u_reg.intg_err_q).
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$3343 ($adffe) from module sensor_ctrl.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$3343 ($adffe) from module sensor_ctrl.

yosys> opt_clean

5.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sensor_ctrl..
Removed 33 unused cells and 33 unused wires.
<suppressed ~34 debug messages>

yosys> opt_expr

5.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module sensor_ctrl.
<suppressed ~2 debug messages>

5.13.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

5.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sensor_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~53 debug messages>

yosys> opt_reduce

5.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sensor_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

5.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sensor_ctrl'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_dff -sat

5.13.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

5.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sensor_ctrl..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

5.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module sensor_ctrl.

5.13.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

5.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sensor_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~53 debug messages>

yosys> opt_reduce

5.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sensor_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

5.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sensor_ctrl'.
Removed a total of 0 cells.

yosys> opt_dff -sat

5.13.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

5.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sensor_ctrl..

yosys> opt_expr

5.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module sensor_ctrl.

5.13.23. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

5.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 12 bits (of 13) from port B of cell sensor_ctrl.$verific$and_345$sensor_ctrl.sv:130$550 ($and).
Removed top 2 bits (of 3) from port B of cell sensor_ctrl.$flatten\u_reg.\u_reg_if.$verific$equal_8$tlul_adapter_reg.sv:55$2322 ($eq).
Removed top 31 bits (of 32) from port A of cell sensor_ctrl.$flatten\u_reg.\u_reg_if.\u_err.$verific$shift_left_23$tlul_err.sv:49$2979 ($shl).
Removed top 28 bits (of 32) from port Y of cell sensor_ctrl.$flatten\u_reg.\u_reg_if.\u_err.$verific$shift_left_23$tlul_err.sv:49$2979 ($shl).
Removed top 1 bits (of 3) from port B of cell sensor_ctrl.$flatten\u_reg.$verific$equal_38$sensor_ctrl_reg_top.sv:1666$2063 ($eq).
Removed top 1 bits (of 3) from port B of cell sensor_ctrl.$flatten\u_reg.$verific$equal_36$sensor_ctrl_reg_top.sv:1665$2062 ($eq).
Removed top 2 bits (of 3) from port B of cell sensor_ctrl.$flatten\u_reg.$verific$equal_34$sensor_ctrl_reg_top.sv:1664$2061 ($eq).
Removed top 1 bits (of 3) from port B of cell sensor_ctrl.$flatten\u_prim_recov_alert_sender.$verific$not_equal_42$prim_alert_sender.sv:161$796 ($ne).
Removed top 1 bits (of 3) from port B of cell sensor_ctrl.$flatten\u_prim_fatal_alert_sender.$verific$not_equal_42$prim_alert_sender.sv:161$796 ($ne).
Removed top 3 bits (of 4) from wire sensor_ctrl.$flatten\u_reg.$verific$n618$1085.
Removed top 3 bits (of 4) from wire sensor_ctrl.$flatten\u_reg.$verific$n625$1086.

yosys> peepopt

5.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

5.16. Executing PMUXTREE pass.

yosys> opt_clean

5.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sensor_ctrl..
Removed 2 unused cells and 6 unused wires.
<suppressed ~3 debug messages>

yosys> alumacc

5.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module sensor_ctrl:
  created 0 $alu and 0 $macc cells.

yosys> opt

5.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

5.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module sensor_ctrl.
<suppressed ~1 debug messages>

yosys> opt_merge -nomux

5.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sensor_ctrl'.
Removed a total of 0 cells.

yosys> opt_muxtree

5.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sensor_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~53 debug messages>

yosys> opt_reduce

5.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sensor_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

5.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sensor_ctrl'.
Removed a total of 0 cells.

yosys> opt_dff

5.19.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

5.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sensor_ctrl..

yosys> opt_expr

5.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module sensor_ctrl.

5.19.9. Finished OPT passes. (There is nothing left to do.)

yosys> stat

5.20. Printing statistics.

=== sensor_ctrl ===

   Number of wires:               1679
   Number of wire bits:           3952
   Number of public wires:        1467
   Number of public wire bits:    3538
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                411
     $adff                          48
     $adffe                         34
     $and                           47
     $bmux                          27
     $eq                             9
     $logic_not                      2
     $mux                           63
     $ne                             2
     $not                           77
     $or                            42
     $reduce_and                     4
     $reduce_bool                    1
     $reduce_or                     14
     $reduce_xor                    28
     $shl                            1
     $xor                           12


yosys> memory -nomap

5.21. Executing MEMORY pass.

yosys> opt_mem

5.21.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

5.21.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

5.21.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_dff

5.21.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

5.21.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sensor_ctrl..

yosys> memory_share

5.21.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

5.21.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

5.21.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sensor_ctrl..

yosys> memory_collect

5.21.9. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

5.22. Printing statistics.

=== sensor_ctrl ===

   Number of wires:               1679
   Number of wire bits:           3952
   Number of public wires:        1467
   Number of public wire bits:    3538
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                411
     $adff                          48
     $adffe                         34
     $and                           47
     $bmux                          27
     $eq                             9
     $logic_not                      2
     $mux                           63
     $ne                             2
     $not                           77
     $or                            42
     $reduce_and                     4
     $reduce_bool                    1
     $reduce_or                     14
     $reduce_xor                    28
     $shl                            1
     $xor                           12


yosys> opt_clean

5.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sensor_ctrl..

yosys> stat

5.24. Printing statistics.

=== sensor_ctrl ===

   Number of wires:               1679
   Number of wire bits:           3952
   Number of public wires:        1467
   Number of public wire bits:    3538
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                411
     $adff                          48
     $adffe                         34
     $and                           47
     $bmux                          27
     $eq                             9
     $logic_not                      2
     $mux                           63
     $ne                             2
     $not                           77
     $or                            42
     $reduce_and                     4
     $reduce_bool                    1
     $reduce_or                     14
     $reduce_xor                    28
     $shl                            1
     $xor                           12


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

5.25. Executing TECHMAP pass (map to technology primitives).

5.25.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

5.25.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

5.25.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $bmux.
Using template $paramod$constmap:66d421c313e4e958be776b99540ac2de3b59fdbc$paramod$77562a466236eb4a6d905351a0995599b75075cb\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using extmapper simplemap for cells of type $reduce_xor.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $ne.
No more expansions possible.
<suppressed ~655 debug messages>

yosys> stat

5.26. Printing statistics.

=== sensor_ctrl ===

   Number of wires:               1954
   Number of wire bits:           6872
   Number of public wires:        1467
   Number of public wire bits:    3538
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1547
     $_AND_                        106
     $_DFFE_PN0P_                   73
     $_DFF_PN0_                     41
     $_DFF_PN1_                     42
     $_MUX_                        452
     $_NOT_                        105
     $_OR_                         118
     $_XOR_                        610


yosys> opt

5.27. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

5.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module sensor_ctrl.
<suppressed ~414 debug messages>

yosys> opt_merge -nomux

5.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sensor_ctrl'.
<suppressed ~597 debug messages>
Removed a total of 199 cells.

yosys> opt_muxtree

5.27.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sensor_ctrl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

5.27.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sensor_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

5.27.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sensor_ctrl'.
Removed a total of 0 cells.

yosys> opt_dff

5.27.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$5038 ($_DFF_PN0_) from module sensor_ctrl (D = \u_prim_recov_alert_sender.state_d [2], Q = \u_prim_recov_alert_sender.state_q [2]).
Adding EN signal on $auto$ff.cc:262:slice$5245 ($_DFF_PN0_) from module sensor_ctrl (D = \u_prim_fatal_alert_sender.state_d [2], Q = \u_prim_fatal_alert_sender.state_q [2]).
Handling never-active EN on $auto$ff.cc:262:slice$3836 ($_DFFE_PN0P_) from module sensor_ctrl (removing D path).
Adding EN signal on $auto$ff.cc:262:slice$5244 ($_DFF_PN0_) from module sensor_ctrl (D = \u_prim_fatal_alert_sender.state_d [1], Q = \u_prim_fatal_alert_sender.state_q [1]).
Adding EN signal on $auto$ff.cc:262:slice$5036 ($_DFF_PN0_) from module sensor_ctrl (D = \u_prim_recov_alert_sender.state_d [0], Q = \u_prim_recov_alert_sender.state_q [0]).
Adding EN signal on $auto$ff.cc:262:slice$5037 ($_DFF_PN0_) from module sensor_ctrl (D = \u_prim_recov_alert_sender.state_d [1], Q = \u_prim_recov_alert_sender.state_q [1]).
Adding EN signal on $auto$ff.cc:262:slice$5243 ($_DFF_PN0_) from module sensor_ctrl (D = \u_prim_fatal_alert_sender.state_d [0], Q = \u_prim_fatal_alert_sender.state_q [0]).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$3836 ($_DLATCH_N_) from module sensor_ctrl.

yosys> opt_clean

5.27.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sensor_ctrl..
Removed 0 unused cells and 186 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

5.27.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module sensor_ctrl.
<suppressed ~106 debug messages>

5.27.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

5.27.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sensor_ctrl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

5.27.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sensor_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

5.27.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sensor_ctrl'.
<suppressed ~249 debug messages>
Removed a total of 83 cells.

yosys> opt_dff

5.27.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$4971 ($_DFF_PN0_) from module sensor_ctrl (D = \u_prim_recov_alert_sender.i_decode_ack.gen_async.state_d [0], Q = \u_prim_recov_alert_sender.i_decode_ack.gen_async.state_q [0]).
Adding EN signal on $auto$ff.cc:262:slice$5025 ($_DFF_PN0_) from module sensor_ctrl (D = \u_prim_recov_alert_sender.i_decode_ping.gen_async.state_d [0], Q = \u_prim_recov_alert_sender.i_decode_ping.gen_async.state_q [0]).
Adding EN signal on $auto$ff.cc:262:slice$5026 ($_DFF_PN0_) from module sensor_ctrl (D = \u_prim_recov_alert_sender.i_decode_ping.gen_async.state_d [1], Q = \u_prim_recov_alert_sender.i_decode_ping.gen_async.state_q [1]).
Adding EN signal on $auto$ff.cc:262:slice$4972 ($_DFF_PN0_) from module sensor_ctrl (D = \u_prim_recov_alert_sender.i_decode_ack.gen_async.state_d [1], Q = \u_prim_recov_alert_sender.i_decode_ack.gen_async.state_q [1]).
Adding EN signal on $auto$ff.cc:262:slice$5233 ($_DFF_PN0_) from module sensor_ctrl (D = \u_prim_fatal_alert_sender.i_decode_ping.gen_async.state_d [1], Q = \u_prim_fatal_alert_sender.i_decode_ping.gen_async.state_q [1]).
Adding EN signal on $auto$ff.cc:262:slice$5232 ($_DFF_PN0_) from module sensor_ctrl (D = \u_prim_fatal_alert_sender.i_decode_ping.gen_async.state_d [0], Q = \u_prim_fatal_alert_sender.i_decode_ping.gen_async.state_q [0]).
Adding EN signal on $auto$ff.cc:262:slice$5179 ($_DFF_PN0_) from module sensor_ctrl (D = \u_prim_fatal_alert_sender.i_decode_ack.gen_async.state_d [1], Q = \u_prim_fatal_alert_sender.i_decode_ack.gen_async.state_q [1]).
Adding EN signal on $auto$ff.cc:262:slice$5178 ($_DFF_PN0_) from module sensor_ctrl (D = \u_prim_fatal_alert_sender.i_decode_ack.gen_async.state_d [0], Q = \u_prim_fatal_alert_sender.i_decode_ack.gen_async.state_q [0]).

yosys> opt_clean

5.27.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sensor_ctrl..
Removed 0 unused cells and 121 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

5.27.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module sensor_ctrl.
<suppressed ~64 debug messages>

5.27.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

5.27.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sensor_ctrl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

5.27.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sensor_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

5.27.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sensor_ctrl'.
<suppressed ~180 debug messages>
Removed a total of 60 cells.

yosys> opt_dff

5.27.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

5.27.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sensor_ctrl..
Removed 0 unused cells and 76 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

5.27.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module sensor_ctrl.

5.27.23. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

5.27.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sensor_ctrl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

5.27.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sensor_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

5.27.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sensor_ctrl'.
Removed a total of 0 cells.

yosys> opt_dff

5.27.27. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

5.27.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sensor_ctrl..

yosys> opt_expr

5.27.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module sensor_ctrl.

5.27.30. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

5.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

5.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module sensor_ctrl.
<suppressed ~213 debug messages>

yosys> opt_merge

5.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sensor_ctrl'.
<suppressed ~153 debug messages>
Removed a total of 51 cells.

yosys> opt_dff

5.28.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

5.28.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sensor_ctrl..
Removed 487 unused cells and 301 unused wires.
<suppressed ~541 debug messages>

5.28.5. Finished fast OPT passes.

yosys> memory_map

5.29. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

5.30. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

5.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module sensor_ctrl.
<suppressed ~29 debug messages>

yosys> opt_merge -nomux

5.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sensor_ctrl'.
Removed a total of 0 cells.

yosys> opt_muxtree

5.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sensor_ctrl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

5.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sensor_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

5.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sensor_ctrl'.
Removed a total of 0 cells.

yosys> opt_share

5.30.6. Executing OPT_SHARE pass.

yosys> opt_dff

5.30.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

5.30.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sensor_ctrl..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

5.30.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module sensor_ctrl.

5.30.10. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

5.30.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sensor_ctrl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

5.30.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sensor_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

5.30.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sensor_ctrl'.
Removed a total of 0 cells.

yosys> opt_share

5.30.14. Executing OPT_SHARE pass.

yosys> opt_dff

5.30.15. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

5.30.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sensor_ctrl..

yosys> opt_expr -full

5.30.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module sensor_ctrl.

5.30.18. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

5.31. Executing ABC pass (technology mapping using ABC).

5.31.1. Summary of detected clock domains:
  23 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$6047, arst=!\rst_ni, srst={ }
  22 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$5967, arst=!\rst_ni, srst={ }
  22 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$5847, arst=!\rst_ni, srst={ }
  23 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$5807, arst=!\rst_ni, srst={ }
  39 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$5499, arst=!\rst_ni, srst={ }
  39 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$5441, arst=!\rst_ni, srst={ }
  3 cells in clk=\clk_i, en=!\u_alert_n_sync.q [9], arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$3348, arst=!\rst_ni, srst={ }
  24 cells in clk=\clk_i, en=\u_reg.u_reg_if.a_ack, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=!\u_alert_n_sync.q [0], arst=!\rst_ni, srst={ }
  3 cells in clk=\clk_i, en=!\u_alert_n_sync.q [12], arst=!\rst_ni, srst={ }
  3 cells in clk=\clk_i, en=!\u_alert_n_sync.q [2], arst=!\rst_ni, srst={ }
  3 cells in clk=\clk_i, en=!\u_alert_n_sync.q [3], arst=!\rst_ni, srst={ }
  2 cells in clk=\clk_i, en=!\u_alert_n_sync.q [4], arst=!\rst_ni, srst={ }
  3 cells in clk=\clk_i, en=!\u_alert_n_sync.q [5], arst=!\rst_ni, srst={ }
  2 cells in clk=\clk_i, en=!\u_alert_n_sync.q [6], arst=!\rst_ni, srst={ }
  3 cells in clk=\clk_i, en=!\u_alert_n_sync.q [7], arst=!\rst_ni, srst={ }
  2 cells in clk=\clk_i, en=!\u_alert_n_sync.q [8], arst=!\rst_ni, srst={ }
  2 cells in clk=\clk_i, en=!\u_alert_n_sync.q [1], arst=!\rst_ni, srst={ }
  2 cells in clk=\clk_i, en=!\u_alert_n_sync.q [10], arst=!\rst_ni, srst={ }
  2 cells in clk=\clk_i, en=!\u_alert_n_sync.q [11], arst=!\rst_ni, srst={ }
  137 cells in clk=\clk_i, en={ }, arst=!\rst_ni, srst={ }
  6 cells in clk=\clk_aon_i, en={ }, arst=!\rst_aon_ni, srst={ }

5.31.2. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6047, asynchronously reset by !\rst_ni
Extracted 23 gates and 29 wires to a netlist network with 5 inputs and 3 outputs.

5.31.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.31.2.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        2
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:                OR cells:        2
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               NOR cells:        4
ABC RESULTS:               AND cells:        3
ABC RESULTS:        internal signals:       21
ABC RESULTS:           input signals:        5
ABC RESULTS:          output signals:        3
Removing temp directory.

5.31.3. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5967, asynchronously reset by !\rst_ni
Extracted 22 gates and 26 wires to a netlist network with 3 inputs and 2 outputs.

5.31.3.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.31.3.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        2
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:                OR cells:        2
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               NOR cells:        4
ABC RESULTS:               AND cells:        3
ABC RESULTS:        internal signals:       21
ABC RESULTS:           input signals:        3
ABC RESULTS:          output signals:        2
Removing temp directory.

5.31.4. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5847, asynchronously reset by !\rst_ni
Extracted 22 gates and 26 wires to a netlist network with 3 inputs and 2 outputs.

5.31.4.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.31.4.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        2
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:                OR cells:        3
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               NOR cells:        1
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:        internal signals:       21
ABC RESULTS:           input signals:        3
ABC RESULTS:          output signals:        2
Removing temp directory.

5.31.5. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5807, asynchronously reset by !\rst_ni
Extracted 23 gates and 29 wires to a netlist network with 5 inputs and 3 outputs.

5.31.5.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.31.5.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        2
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               MUX cells:        2
ABC RESULTS:                OR cells:        3
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               NOR cells:        1
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:        internal signals:       21
ABC RESULTS:           input signals:        5
ABC RESULTS:          output signals:        3
Removing temp directory.

5.31.6. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5499, asynchronously reset by !\rst_ni
Extracted 39 gates and 46 wires to a netlist network with 5 inputs and 5 outputs.

5.31.6.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.31.6.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:               MUX cells:        1
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:                OR cells:        4
ABC RESULTS:            ANDNOT cells:        4
ABC RESULTS:               AND cells:        3
ABC RESULTS:               NOR cells:        7
ABC RESULTS:              NAND cells:        5
ABC RESULTS:        internal signals:       36
ABC RESULTS:           input signals:        5
ABC RESULTS:          output signals:        5
Removing temp directory.

5.31.7. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5441, asynchronously reset by !\rst_ni
Extracted 39 gates and 46 wires to a netlist network with 5 inputs and 5 outputs.

5.31.7.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.31.7.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:               MUX cells:        1
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:                OR cells:        4
ABC RESULTS:            ANDNOT cells:        4
ABC RESULTS:               AND cells:        3
ABC RESULTS:               NOR cells:        7
ABC RESULTS:              NAND cells:        5
ABC RESULTS:        internal signals:       36
ABC RESULTS:           input signals:        5
ABC RESULTS:          output signals:        5
Removing temp directory.

5.31.8. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !\u_alert_n_sync.q [9], asynchronously reset by !\rst_ni
Extracted 3 gates and 6 wires to a netlist network with 2 inputs and 2 outputs.

5.31.8.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.31.8.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:               ONE cells:        1
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        2
ABC RESULTS:          output signals:        2
Removing temp directory.

5.31.9. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$3348, asynchronously reset by !\rst_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 3 outputs.

5.31.9.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.31.9.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:               BUF cells:        2
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        2
ABC RESULTS:          output signals:        3
Removing temp directory.

5.31.10. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u_reg.u_reg_if.a_ack, asynchronously reset by !\rst_ni
Extracted 24 gates and 40 wires to a netlist network with 15 inputs and 17 outputs.

5.31.10.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.31.10.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       12
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:        1
ABC RESULTS:               NOT cells:        3
ABC RESULTS:               AND cells:        2
ABC RESULTS:            ANDNOT cells:        3
ABC RESULTS:               ONE cells:        1
ABC RESULTS:               BUF cells:       22
ABC RESULTS:        internal signals:        8
ABC RESULTS:           input signals:       15
ABC RESULTS:          output signals:       17
Removing temp directory.

5.31.11. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !\u_alert_n_sync.q [0], asynchronously reset by !\rst_ni
Extracted 4 gates and 8 wires to a netlist network with 3 inputs and 2 outputs.

5.31.11.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.31.11.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:                OR cells:        2
ABC RESULTS:               ONE cells:        1
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:        3
ABC RESULTS:          output signals:        2
Removing temp directory.

5.31.12. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !\u_alert_n_sync.q [12], asynchronously reset by !\rst_ni
Extracted 3 gates and 6 wires to a netlist network with 2 inputs and 2 outputs.

5.31.12.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.31.12.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:               ONE cells:        1
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        2
ABC RESULTS:          output signals:        2
Removing temp directory.

5.31.13. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !\u_alert_n_sync.q [2], asynchronously reset by !\rst_ni
Extracted 3 gates and 6 wires to a netlist network with 2 inputs and 2 outputs.

5.31.13.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.31.13.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:               ONE cells:        1
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        2
ABC RESULTS:          output signals:        2
Removing temp directory.

5.31.14. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !\u_alert_n_sync.q [3], asynchronously reset by !\rst_ni
Extracted 3 gates and 6 wires to a netlist network with 2 inputs and 2 outputs.

5.31.14.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.31.14.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:               ONE cells:        1
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        2
ABC RESULTS:          output signals:        2
Removing temp directory.

5.31.15. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !\u_alert_n_sync.q [4], asynchronously reset by !\rst_ni
Extracted 2 gates and 4 wires to a netlist network with 1 inputs and 2 outputs.

5.31.15.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.31.15.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:               ONE cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        1
ABC RESULTS:          output signals:        2
Removing temp directory.

5.31.16. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !\u_alert_n_sync.q [5], asynchronously reset by !\rst_ni
Extracted 3 gates and 6 wires to a netlist network with 2 inputs and 2 outputs.

5.31.16.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.31.16.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:               ONE cells:        1
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        2
ABC RESULTS:          output signals:        2
Removing temp directory.

5.31.17. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !\u_alert_n_sync.q [6], asynchronously reset by !\rst_ni
Extracted 2 gates and 4 wires to a netlist network with 1 inputs and 2 outputs.

5.31.17.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.31.17.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:               ONE cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        1
ABC RESULTS:          output signals:        2
Removing temp directory.

5.31.18. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !\u_alert_n_sync.q [7], asynchronously reset by !\rst_ni
Extracted 3 gates and 6 wires to a netlist network with 2 inputs and 2 outputs.

5.31.18.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.31.18.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:               ONE cells:        1
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        2
ABC RESULTS:          output signals:        2
Removing temp directory.

5.31.19. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !\u_alert_n_sync.q [8], asynchronously reset by !\rst_ni
Extracted 2 gates and 4 wires to a netlist network with 1 inputs and 2 outputs.

5.31.19.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.31.19.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:               ONE cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        1
ABC RESULTS:          output signals:        2
Removing temp directory.

5.31.20. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !\u_alert_n_sync.q [1], asynchronously reset by !\rst_ni
Extracted 2 gates and 4 wires to a netlist network with 1 inputs and 2 outputs.

5.31.20.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.31.20.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:               ONE cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        1
ABC RESULTS:          output signals:        2
Removing temp directory.

5.31.21. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !\u_alert_n_sync.q [10], asynchronously reset by !\rst_ni
Extracted 2 gates and 4 wires to a netlist network with 1 inputs and 2 outputs.

5.31.21.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.31.21.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:               ONE cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        1
ABC RESULTS:          output signals:        2
Removing temp directory.

5.31.22. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !\u_alert_n_sync.q [11], asynchronously reset by !\rst_ni
Extracted 2 gates and 4 wires to a netlist network with 1 inputs and 2 outputs.

5.31.22.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.31.22.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:               ONE cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        1
ABC RESULTS:          output signals:        2
Removing temp directory.

5.31.23. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, asynchronously reset by !\rst_ni
Extracted 137 gates and 187 wires to a netlist network with 49 inputs and 64 outputs.

5.31.23.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.31.23.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       58
ABC RESULTS:               NOT cells:       36
ABC RESULTS:              XNOR cells:        4
ABC RESULTS:               XOR cells:        8
ABC RESULTS:                OR cells:        4
ABC RESULTS:               NOR cells:        2
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               AND cells:       19
ABC RESULTS:              NAND cells:       18
ABC RESULTS:               BUF cells:       54
ABC RESULTS:        internal signals:       74
ABC RESULTS:           input signals:       49
ABC RESULTS:          output signals:       64
Removing temp directory.

5.31.24. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, asynchronously reset by !\rst_aon_ni
Extracted 6 gates and 7 wires to a netlist network with 1 inputs and 1 outputs.

5.31.24.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.31.24.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        4
ABC RESULTS:                OR cells:        2
ABC RESULTS:               BUF cells:        4
ABC RESULTS:        internal signals:        5
ABC RESULTS:           input signals:        1
ABC RESULTS:          output signals:        1
Removing temp directory.

yosys> abc -dff

5.32. Executing ABC pass (technology mapping using ABC).

5.32.1. Summary of detected clock domains:
  4 cells in clk=\clk_i, en=!$abc$6390$u_alert_n_sync.q[6], arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$6276$auto$opt_dff.cc:194:make_patterns_logic$3348, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=!$abc$6390$u_alert_n_sync.q[10], arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=!$abc$6390$u_alert_n_sync.q[3], arst=!\rst_ni, srst={ }
  3 cells in clk=\clk_i, en=!$abc$6390$u_alert_n_sync.q[4], arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=!$abc$6390$u_alert_n_sync.q[2], arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=!$abc$6390$u_alert_n_sync.q[12], arst=!\rst_ni, srst={ }
  3 cells in clk=\clk_i, en=!$abc$6390$u_alert_n_sync.q[5], arst=!\rst_ni, srst={ }
  13 cells in clk=\clk_i, en=$abc$6157$auto$opt_dff.cc:219:make_patterns_logic$6047, arst=!\rst_ni, srst={ }
  3 cells in clk=\clk_i, en=!$abc$6390$u_alert_n_sync.q[9], arst=!\rst_ni, srst={ }
  31 cells in clk=\clk_i, en=$abc$6242$auto$opt_dff.cc:219:make_patterns_logic$5441, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$6172$auto$opt_dff.cc:219:make_patterns_logic$5967, arst=!\rst_ni, srst={ }
  3 cells in clk=\clk_i, en=!$abc$6390$u_alert_n_sync.q[11], arst=!\rst_ni, srst={ }
  5 cells in clk=\clk_i, en=!$abc$6390$u_alert_n_sync.q[0], arst=!\rst_ni, srst={ }
  33 cells in clk=\clk_i, en=$abc$6213$auto$opt_dff.cc:219:make_patterns_logic$5499, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$6186$auto$opt_dff.cc:219:make_patterns_logic$5847, arst=!\rst_ni, srst={ }
  22 cells in clk=\clk_i, en=$abc$6283$u_reg.u_reg_if.a_ack, arst=!\rst_ni, srst={ }
  3 cells in clk=\clk_i, en=!$abc$6390$u_alert_n_sync.q[1], arst=!\rst_ni, srst={ }
  13 cells in clk=\clk_i, en=$abc$6199$auto$opt_dff.cc:219:make_patterns_logic$5807, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=!$abc$6390$u_alert_n_sync.q[8], arst=!\rst_ni, srst={ }
  3 cells in clk=\clk_i, en=!$abc$6390$u_alert_n_sync.q[7], arst=!\rst_ni, srst={ }
  133 cells in clk=\clk_i, en={ }, arst=!\rst_ni, srst={ }
  6 cells in clk=\clk_aon_i, en={ }, arst=!\rst_aon_ni, srst={ }

5.32.2. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$6390$u_alert_n_sync.q[6], asynchronously reset by !\rst_ni
Extracted 4 gates and 7 wires to a netlist network with 2 inputs and 3 outputs.

5.32.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.32.2.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:               ONE cells:        1
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        2
ABC RESULTS:          output signals:        3
Removing temp directory.

5.32.3. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$6276$auto$opt_dff.cc:194:make_patterns_logic$3348, asynchronously reset by !\rst_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 3 outputs.

5.32.3.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.32.3.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:               BUF cells:        2
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        2
ABC RESULTS:          output signals:        3
Removing temp directory.

5.32.4. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$6390$u_alert_n_sync.q[10], asynchronously reset by !\rst_ni
Extracted 4 gates and 7 wires to a netlist network with 2 inputs and 3 outputs.

5.32.4.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.32.4.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:               ONE cells:        1
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        2
ABC RESULTS:          output signals:        3
Removing temp directory.

5.32.5. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$6390$u_alert_n_sync.q[3], asynchronously reset by !\rst_ni
Extracted 4 gates and 7 wires to a netlist network with 2 inputs and 3 outputs.

5.32.5.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.32.5.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:               ONE cells:        1
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        2
ABC RESULTS:          output signals:        3
Removing temp directory.

5.32.6. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$6390$u_alert_n_sync.q[4], asynchronously reset by !\rst_ni
Extracted 3 gates and 5 wires to a netlist network with 1 inputs and 3 outputs.

5.32.6.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.32.6.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:               ONE cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        1
ABC RESULTS:          output signals:        3
Removing temp directory.

5.32.7. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$6390$u_alert_n_sync.q[2], asynchronously reset by !\rst_ni
Extracted 4 gates and 7 wires to a netlist network with 2 inputs and 3 outputs.

5.32.7.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.32.7.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:               ONE cells:        1
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        2
ABC RESULTS:          output signals:        3
Removing temp directory.

5.32.8. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$6390$u_alert_n_sync.q[12], asynchronously reset by !\rst_ni
Extracted 4 gates and 7 wires to a netlist network with 2 inputs and 3 outputs.

5.32.8.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.32.8.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:               ONE cells:        1
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        2
ABC RESULTS:          output signals:        3
Removing temp directory.

5.32.9. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$6390$u_alert_n_sync.q[5], asynchronously reset by !\rst_ni
Extracted 3 gates and 5 wires to a netlist network with 1 inputs and 3 outputs.

5.32.9.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.32.9.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:               ONE cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        1
ABC RESULTS:          output signals:        3
Removing temp directory.

5.32.10. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$6157$auto$opt_dff.cc:219:make_patterns_logic$6047, asynchronously reset by !\rst_ni
Extracted 13 gates and 19 wires to a netlist network with 6 inputs and 4 outputs.

5.32.10.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.32.10.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        2
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:               AND cells:        2
ABC RESULTS:               NOR cells:        3
ABC RESULTS:              ZERO cells:        1
ABC RESULTS:            ANDNOT cells:        3
ABC RESULTS:        internal signals:        9
ABC RESULTS:           input signals:        6
ABC RESULTS:          output signals:        4
Removing temp directory.

5.32.11. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$6390$u_alert_n_sync.q[9], asynchronously reset by !\rst_ni
Extracted 3 gates and 5 wires to a netlist network with 1 inputs and 3 outputs.

5.32.11.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.32.11.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:               ONE cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        1
ABC RESULTS:          output signals:        3
Removing temp directory.

5.32.12. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$6242$auto$opt_dff.cc:219:make_patterns_logic$5441, asynchronously reset by !\rst_ni
Extracted 31 gates and 38 wires to a netlist network with 7 inputs and 5 outputs.

5.32.12.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.32.12.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:               MUX cells:        1
ABC RESULTS:             ORNOT cells:        3
ABC RESULTS:               NOR cells:        1
ABC RESULTS:            ANDNOT cells:        4
ABC RESULTS:                OR cells:        6
ABC RESULTS:               AND cells:        5
ABC RESULTS:              NAND cells:        7
ABC RESULTS:        internal signals:       26
ABC RESULTS:           input signals:        7
ABC RESULTS:          output signals:        5
Removing temp directory.

5.32.13. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$6172$auto$opt_dff.cc:219:make_patterns_logic$5967, asynchronously reset by !\rst_ni
Extracted 11 gates and 14 wires to a netlist network with 3 inputs and 3 outputs.

5.32.13.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.32.13.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        2
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:               NOR cells:        3
ABC RESULTS:              ZERO cells:        1
ABC RESULTS:            ANDNOT cells:        3
ABC RESULTS:        internal signals:        8
ABC RESULTS:           input signals:        3
ABC RESULTS:          output signals:        3
Removing temp directory.

5.32.14. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$6390$u_alert_n_sync.q[11], asynchronously reset by !\rst_ni
Extracted 3 gates and 5 wires to a netlist network with 1 inputs and 3 outputs.

5.32.14.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.32.14.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:               ONE cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        1
ABC RESULTS:          output signals:        3
Removing temp directory.

5.32.15. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$6390$u_alert_n_sync.q[0], asynchronously reset by !\rst_ni
Extracted 5 gates and 9 wires to a netlist network with 3 inputs and 3 outputs.

5.32.15.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.32.15.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:                OR cells:        2
ABC RESULTS:               ONE cells:        1
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:        3
ABC RESULTS:          output signals:        3
Removing temp directory.

5.32.16. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$6213$auto$opt_dff.cc:219:make_patterns_logic$5499, asynchronously reset by !\rst_ni
Extracted 33 gates and 41 wires to a netlist network with 7 inputs and 5 outputs.

5.32.16.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.32.16.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:               MUX cells:        1
ABC RESULTS:             ORNOT cells:        3
ABC RESULTS:               NOR cells:        1
ABC RESULTS:            ANDNOT cells:        4
ABC RESULTS:                OR cells:        6
ABC RESULTS:               AND cells:        5
ABC RESULTS:              NAND cells:        7
ABC RESULTS:        internal signals:       29
ABC RESULTS:           input signals:        7
ABC RESULTS:          output signals:        5
Removing temp directory.

5.32.17. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$6186$auto$opt_dff.cc:219:make_patterns_logic$5847, asynchronously reset by !\rst_ni
Extracted 11 gates and 14 wires to a netlist network with 3 inputs and 2 outputs.

5.32.17.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.32.17.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        2
ABC RESULTS:               NOT cells:        1
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:                OR cells:        3
ABC RESULTS:               MUX cells:        1
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:        internal signals:        9
ABC RESULTS:           input signals:        3
ABC RESULTS:          output signals:        2
Removing temp directory.

5.32.18. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$6283$u_reg.u_reg_if.a_ack, asynchronously reset by !\rst_ni
Extracted 22 gates and 38 wires to a netlist network with 15 inputs and 17 outputs.

5.32.18.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.32.18.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       12
ABC RESULTS:               XOR cells:        2
ABC RESULTS:               NOT cells:        3
ABC RESULTS:               AND cells:        2
ABC RESULTS:            ANDNOT cells:        3
ABC RESULTS:               ONE cells:        1
ABC RESULTS:               BUF cells:       22
ABC RESULTS:        internal signals:        6
ABC RESULTS:           input signals:       15
ABC RESULTS:          output signals:       17
Removing temp directory.

5.32.19. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$6390$u_alert_n_sync.q[1], asynchronously reset by !\rst_ni
Extracted 3 gates and 5 wires to a netlist network with 1 inputs and 3 outputs.

5.32.19.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.32.19.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:               ONE cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        1
ABC RESULTS:          output signals:        3
Removing temp directory.

5.32.20. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$6199$auto$opt_dff.cc:219:make_patterns_logic$5807, asynchronously reset by !\rst_ni
Extracted 13 gates and 19 wires to a netlist network with 6 inputs and 3 outputs.

5.32.20.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.32.20.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        2
ABC RESULTS:               NOT cells:        1
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:                OR cells:        3
ABC RESULTS:               MUX cells:        2
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               AND cells:        2
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:        internal signals:       10
ABC RESULTS:           input signals:        6
ABC RESULTS:          output signals:        3
Removing temp directory.

5.32.21. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$6390$u_alert_n_sync.q[8], asynchronously reset by !\rst_ni
Extracted 4 gates and 7 wires to a netlist network with 2 inputs and 3 outputs.

5.32.21.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.32.21.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:               ONE cells:        1
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        2
ABC RESULTS:          output signals:        3
Removing temp directory.

5.32.22. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$6390$u_alert_n_sync.q[7], asynchronously reset by !\rst_ni
Extracted 3 gates and 5 wires to a netlist network with 1 inputs and 3 outputs.

5.32.22.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.32.22.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:               ONE cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        1
ABC RESULTS:          output signals:        3
Removing temp directory.

5.32.23. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, asynchronously reset by !\rst_ni
Extracted 133 gates and 182 wires to a netlist network with 49 inputs and 53 outputs.

5.32.23.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.32.23.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       58
ABC RESULTS:               NOT cells:       21
ABC RESULTS:              XNOR cells:        2
ABC RESULTS:                OR cells:        4
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:               XOR cells:        8
ABC RESULTS:               NOR cells:        2
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               AND cells:       17
ABC RESULTS:              NAND cells:       18
ABC RESULTS:               BUF cells:       54
ABC RESULTS:        internal signals:       80
ABC RESULTS:           input signals:       49
ABC RESULTS:          output signals:       53
Removing temp directory.

5.32.24. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, asynchronously reset by !\rst_aon_ni
Extracted 6 gates and 7 wires to a netlist network with 1 inputs and 1 outputs.

5.32.24.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.32.24.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        4
ABC RESULTS:                OR cells:        2
ABC RESULTS:               BUF cells:        4
ABC RESULTS:        internal signals:        5
ABC RESULTS:           input signals:        1
ABC RESULTS:          output signals:        1
Removing temp directory.

yosys> abc -dff

5.33. Executing ABC pass (technology mapping using ABC).

5.33.1. Summary of detected clock domains:
  4 cells in clk=\clk_i, en=!$abc$6606$abc$6390$u_alert_n_sync.q[6], arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$6612$abc$6276$auto$opt_dff.cc:194:make_patterns_logic$3348, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=!$abc$6619$abc$6390$u_alert_n_sync.q[10], arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=!$abc$6625$abc$6390$u_alert_n_sync.q[3], arst=!\rst_ni, srst={ }
  3 cells in clk=\clk_i, en=!$abc$6631$abc$6390$u_alert_n_sync.q[4], arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=!$abc$6637$abc$6390$u_alert_n_sync.q[2], arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=!$abc$6643$abc$6390$u_alert_n_sync.q[12], arst=!\rst_ni, srst={ }
  3 cells in clk=\clk_i, en=!$abc$6649$abc$6390$u_alert_n_sync.q[5], arst=!\rst_ni, srst={ }
  3 cells in clk=\clk_i, en=!$abc$6670$abc$6390$u_alert_n_sync.q[9], arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=!$abc$6850$abc$6390$u_alert_n_sync.q[7], arst=!\rst_ni, srst={ }
  32 cells in clk=\clk_i, en=$abc$6676$abc$6242$auto$opt_dff.cc:219:make_patterns_logic$5441, arst=!\rst_ni, srst={ }
  3 cells in clk=\clk_i, en=!$abc$6720$abc$6390$u_alert_n_sync.q[11], arst=!\rst_ni, srst={ }
  5 cells in clk=\clk_i, en=!$abc$6726$abc$6390$u_alert_n_sync.q[0], arst=!\rst_ni, srst={ }
  30 cells in clk=\clk_i, en=$abc$6733$abc$6213$auto$opt_dff.cc:219:make_patterns_logic$5499, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$6764$abc$6186$auto$opt_dff.cc:219:make_patterns_logic$5847, arst=!\rst_ni, srst={ }
  3 cells in clk=\clk_i, en=!$abc$6823$abc$6390$u_alert_n_sync.q[1], arst=!\rst_ni, srst={ }
  3 cells in clk=\clk_i, en=!$abc$6844$abc$6390$u_alert_n_sync.q[8], arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$6707$abc$6172$auto$opt_dff.cc:219:make_patterns_logic$5967, arst=!\rst_ni, srst={ }
  12 cells in clk=\clk_i, en=$abc$6829$abc$6199$auto$opt_dff.cc:219:make_patterns_logic$5807, arst=!\rst_ni, srst={ }
  22 cells in clk=\clk_i, en=$abc$6777$abc$6283$u_reg.u_reg_if.a_ack, arst=!\rst_ni, srst={ }
  14 cells in clk=\clk_i, en=$abc$6655$abc$6157$auto$opt_dff.cc:219:make_patterns_logic$6047, arst=!\rst_ni, srst={ }
  133 cells in clk=\clk_i, en={ }, arst=!\rst_ni, srst={ }
  6 cells in clk=\clk_aon_i, en={ }, arst=!\rst_aon_ni, srst={ }

5.33.2. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$6606$abc$6390$u_alert_n_sync.q[6], asynchronously reset by !\rst_ni
Extracted 4 gates and 7 wires to a netlist network with 2 inputs and 3 outputs.

5.33.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.33.2.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:               ONE cells:        1
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        2
ABC RESULTS:          output signals:        3
Removing temp directory.

5.33.3. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$6612$abc$6276$auto$opt_dff.cc:194:make_patterns_logic$3348, asynchronously reset by !\rst_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 3 outputs.

5.33.3.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.33.3.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:               BUF cells:        2
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        2
ABC RESULTS:          output signals:        3
Removing temp directory.

5.33.4. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$6619$abc$6390$u_alert_n_sync.q[10], asynchronously reset by !\rst_ni
Extracted 4 gates and 7 wires to a netlist network with 2 inputs and 3 outputs.

5.33.4.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.33.4.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:               ONE cells:        1
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        2
ABC RESULTS:          output signals:        3
Removing temp directory.

5.33.5. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$6625$abc$6390$u_alert_n_sync.q[3], asynchronously reset by !\rst_ni
Extracted 4 gates and 7 wires to a netlist network with 2 inputs and 3 outputs.

5.33.5.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.33.5.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:               ONE cells:        1
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        2
ABC RESULTS:          output signals:        3
Removing temp directory.

5.33.6. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$6631$abc$6390$u_alert_n_sync.q[4], asynchronously reset by !\rst_ni
Extracted 3 gates and 5 wires to a netlist network with 1 inputs and 3 outputs.

5.33.6.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.33.6.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:               ONE cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        1
ABC RESULTS:          output signals:        3
Removing temp directory.

5.33.7. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$6637$abc$6390$u_alert_n_sync.q[2], asynchronously reset by !\rst_ni
Extracted 4 gates and 7 wires to a netlist network with 2 inputs and 3 outputs.

5.33.7.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.33.7.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:               ONE cells:        1
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        2
ABC RESULTS:          output signals:        3
Removing temp directory.

5.33.8. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$6643$abc$6390$u_alert_n_sync.q[12], asynchronously reset by !\rst_ni
Extracted 4 gates and 7 wires to a netlist network with 2 inputs and 3 outputs.

5.33.8.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.33.8.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:               ONE cells:        1
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        2
ABC RESULTS:          output signals:        3
Removing temp directory.

5.33.9. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$6649$abc$6390$u_alert_n_sync.q[5], asynchronously reset by !\rst_ni
Extracted 3 gates and 5 wires to a netlist network with 1 inputs and 3 outputs.

5.33.9.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.33.9.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:               ONE cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        1
ABC RESULTS:          output signals:        3
Removing temp directory.

5.33.10. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$6670$abc$6390$u_alert_n_sync.q[9], asynchronously reset by !\rst_ni
Extracted 3 gates and 5 wires to a netlist network with 1 inputs and 3 outputs.

5.33.10.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.33.10.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:               ONE cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        1
ABC RESULTS:          output signals:        3
Removing temp directory.

5.33.11. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$6850$abc$6390$u_alert_n_sync.q[7], asynchronously reset by !\rst_ni
Extracted 4 gates and 7 wires to a netlist network with 2 inputs and 3 outputs.

5.33.11.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.33.11.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:               ONE cells:        1
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        2
ABC RESULTS:          output signals:        3
Removing temp directory.

5.33.12. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$6676$abc$6242$auto$opt_dff.cc:219:make_patterns_logic$5441, asynchronously reset by !\rst_ni
Extracted 32 gates and 41 wires to a netlist network with 9 inputs and 5 outputs.

5.33.12.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.33.12.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:               MUX cells:        1
ABC RESULTS:             ORNOT cells:        3
ABC RESULTS:               NOR cells:        1
ABC RESULTS:            ANDNOT cells:        6
ABC RESULTS:                OR cells:        6
ABC RESULTS:               AND cells:        5
ABC RESULTS:              NAND cells:        7
ABC RESULTS:        internal signals:       27
ABC RESULTS:           input signals:        9
ABC RESULTS:          output signals:        5
Removing temp directory.

5.33.13. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$6720$abc$6390$u_alert_n_sync.q[11], asynchronously reset by !\rst_ni
Extracted 3 gates and 5 wires to a netlist network with 1 inputs and 3 outputs.

5.33.13.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.33.13.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:               ONE cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        1
ABC RESULTS:          output signals:        3
Removing temp directory.

5.33.14. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$6726$abc$6390$u_alert_n_sync.q[0], asynchronously reset by !\rst_ni
Extracted 5 gates and 9 wires to a netlist network with 3 inputs and 3 outputs.

5.33.14.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.33.14.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        2
ABC RESULTS:               AND cells:        1
ABC RESULTS:               ONE cells:        1
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:        3
ABC RESULTS:          output signals:        3
Removing temp directory.

5.33.15. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$6733$abc$6213$auto$opt_dff.cc:219:make_patterns_logic$5499, asynchronously reset by !\rst_ni
Extracted 30 gates and 37 wires to a netlist network with 7 inputs and 5 outputs.

5.33.15.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.33.15.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:               MUX cells:        1
ABC RESULTS:             ORNOT cells:        3
ABC RESULTS:               NOR cells:        1
ABC RESULTS:                OR cells:        6
ABC RESULTS:              NAND cells:        7
ABC RESULTS:            ANDNOT cells:        4
ABC RESULTS:               AND cells:        5
ABC RESULTS:        internal signals:       25
ABC RESULTS:           input signals:        7
ABC RESULTS:          output signals:        5
Removing temp directory.

5.33.16. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$6764$abc$6186$auto$opt_dff.cc:219:make_patterns_logic$5847, asynchronously reset by !\rst_ni
Extracted 11 gates and 14 wires to a netlist network with 3 inputs and 3 outputs.

5.33.16.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.33.16.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        2
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:                OR cells:        3
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:        internal signals:        8
ABC RESULTS:           input signals:        3
ABC RESULTS:          output signals:        3
Removing temp directory.

5.33.17. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$6823$abc$6390$u_alert_n_sync.q[1], asynchronously reset by !\rst_ni
Extracted 3 gates and 5 wires to a netlist network with 1 inputs and 3 outputs.

5.33.17.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.33.17.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:               ONE cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        1
ABC RESULTS:          output signals:        3
Removing temp directory.

5.33.18. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$6844$abc$6390$u_alert_n_sync.q[8], asynchronously reset by !\rst_ni
Extracted 3 gates and 5 wires to a netlist network with 1 inputs and 3 outputs.

5.33.18.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.33.18.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:               ONE cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        1
ABC RESULTS:          output signals:        3
Removing temp directory.

5.33.19. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$6707$abc$6172$auto$opt_dff.cc:219:make_patterns_logic$5967, asynchronously reset by !\rst_ni
Extracted 11 gates and 14 wires to a netlist network with 3 inputs and 2 outputs.

5.33.19.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.33.19.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        2
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:               NOR cells:        3
ABC RESULTS:            ANDNOT cells:        3
ABC RESULTS:        internal signals:        9
ABC RESULTS:           input signals:        3
ABC RESULTS:          output signals:        2
Removing temp directory.

5.33.20. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$6829$abc$6199$auto$opt_dff.cc:219:make_patterns_logic$5807, asynchronously reset by !\rst_ni
Extracted 12 gates and 16 wires to a netlist network with 4 inputs and 5 outputs.

5.33.20.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.33.20.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        2
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:                OR cells:        3
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:        internal signals:        7
ABC RESULTS:           input signals:        4
ABC RESULTS:          output signals:        5
Removing temp directory.

5.33.21. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$6777$abc$6283$u_reg.u_reg_if.a_ack, asynchronously reset by !\rst_ni
Extracted 22 gates and 38 wires to a netlist network with 15 inputs and 17 outputs.

5.33.21.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.33.21.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       12
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:        1
ABC RESULTS:               NOT cells:        3
ABC RESULTS:               AND cells:        2
ABC RESULTS:            ANDNOT cells:        3
ABC RESULTS:               ONE cells:        1
ABC RESULTS:               BUF cells:       22
ABC RESULTS:        internal signals:        6
ABC RESULTS:           input signals:       15
ABC RESULTS:          output signals:       17
Removing temp directory.

5.33.22. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$6655$abc$6157$auto$opt_dff.cc:219:make_patterns_logic$6047, asynchronously reset by !\rst_ni
Extracted 14 gates and 20 wires to a netlist network with 6 inputs and 4 outputs.

5.33.22.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.33.22.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        2
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:               AND cells:        2
ABC RESULTS:               NOR cells:        3
ABC RESULTS:            ANDNOT cells:        3
ABC RESULTS:        internal signals:       10
ABC RESULTS:           input signals:        6
ABC RESULTS:          output signals:        4
Removing temp directory.

5.33.23. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, asynchronously reset by !\rst_ni
Extracted 133 gates and 182 wires to a netlist network with 49 inputs and 52 outputs.

5.33.23.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.33.23.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       58
ABC RESULTS:               NOT cells:       22
ABC RESULTS:                OR cells:        5
ABC RESULTS:              XNOR cells:        2
ABC RESULTS:               XOR cells:        8
ABC RESULTS:               NOR cells:        2
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:              NAND cells:       18
ABC RESULTS:               AND cells:       20
ABC RESULTS:               BUF cells:       52
ABC RESULTS:        internal signals:       81
ABC RESULTS:           input signals:       49
ABC RESULTS:          output signals:       52
Removing temp directory.

5.33.24. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, asynchronously reset by !\rst_aon_ni
Extracted 6 gates and 7 wires to a netlist network with 1 inputs and 1 outputs.

5.33.24.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.33.24.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        4
ABC RESULTS:                OR cells:        2
ABC RESULTS:               BUF cells:        4
ABC RESULTS:        internal signals:        5
ABC RESULTS:           input signals:        1
ABC RESULTS:          output signals:        1
Removing temp directory.

yosys> opt_ffinv

5.34. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt -sat

5.35. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

5.35.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module sensor_ctrl.
<suppressed ~14 debug messages>

yosys> opt_merge -nomux

5.35.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sensor_ctrl'.
<suppressed ~15 debug messages>
Removed a total of 5 cells.

yosys> opt_muxtree

5.35.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sensor_ctrl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

5.35.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sensor_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

5.35.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sensor_ctrl'.
Removed a total of 0 cells.

yosys> opt_dff -sat

5.35.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

5.35.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sensor_ctrl..
Removed 13 unused cells and 1617 unused wires.
<suppressed ~81 debug messages>

yosys> opt_expr

5.35.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module sensor_ctrl.

5.35.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

5.35.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sensor_ctrl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

5.35.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sensor_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

5.35.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sensor_ctrl'.
Removed a total of 0 cells.

yosys> opt_dff -sat

5.35.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

5.35.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sensor_ctrl..

yosys> opt_expr

5.35.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module sensor_ctrl.

5.35.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

5.36. Executing ABC pass (technology mapping using ABC).

5.36.1. Summary of detected clock domains:
  6 cells in clk=\clk_aon_i, en={ }, arst=!\rst_aon_ni, srst={ }
  146 cells in clk=\clk_i, en={ }, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$6157$auto$opt_dff.cc:219:make_patterns_logic$6047, arst=!\rst_ni, srst={ }
  22 cells in clk=\clk_i, en=\u_reg.u_reg_if.a_ack, arst=!\rst_ni, srst={ }
  13 cells in clk=\clk_i, en=$abc$6199$auto$opt_dff.cc:219:make_patterns_logic$5807, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$6172$auto$opt_dff.cc:219:make_patterns_logic$5967, arst=!\rst_ni, srst={ }
  2 cells in clk=\clk_i, en=\u_reg.hw2reg.recov_alert[8].de, arst=!\rst_ni, srst={ }
  2 cells in clk=\clk_i, en=\u_reg.hw2reg.recov_alert[1].de, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$6186$auto$opt_dff.cc:219:make_patterns_logic$5847, arst=!\rst_ni, srst={ }
  31 cells in clk=\clk_i, en=$abc$6213$auto$opt_dff.cc:219:make_patterns_logic$5499, arst=!\rst_ni, srst={ }
  3 cells in clk=\clk_i, en=\u_reg.hw2reg.recov_alert[0].de, arst=!\rst_ni, srst={ }
  2 cells in clk=\clk_i, en=\u_reg.hw2reg.recov_alert[11].de, arst=!\rst_ni, srst={ }
  31 cells in clk=\clk_i, en=$abc$6242$auto$opt_dff.cc:219:make_patterns_logic$5441, arst=!\rst_ni, srst={ }
  1 cells in clk=\clk_i, en=\u_reg.hw2reg.recov_alert[7].de, arst=!\rst_ni, srst={ }
  2 cells in clk=\clk_i, en=\u_reg.hw2reg.recov_alert[9].de, arst=!\rst_ni, srst={ }
  2 cells in clk=\clk_i, en=\u_reg.hw2reg.recov_alert[5].de, arst=!\rst_ni, srst={ }
  1 cells in clk=\clk_i, en=\u_reg.hw2reg.recov_alert[12].de, arst=!\rst_ni, srst={ }
  1 cells in clk=\clk_i, en=\u_reg.hw2reg.recov_alert[2].de, arst=!\rst_ni, srst={ }
  2 cells in clk=\clk_i, en=\u_reg.hw2reg.recov_alert[4].de, arst=!\rst_ni, srst={ }
  1 cells in clk=\clk_i, en=\u_reg.hw2reg.recov_alert[3].de, arst=!\rst_ni, srst={ }
  1 cells in clk=\clk_i, en=\u_reg.hw2reg.recov_alert[10].de, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$6276$auto$opt_dff.cc:194:make_patterns_logic$3348, arst=!\rst_ni, srst={ }
  1 cells in clk=\clk_i, en=\u_reg.hw2reg.recov_alert[6].de, arst=!\rst_ni, srst={ }

5.36.2. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, asynchronously reset by !\rst_aon_ni
Extracted 6 gates and 7 wires to a netlist network with 1 inputs and 1 outputs.

5.36.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.36.2.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        4
ABC RESULTS:                OR cells:        2
ABC RESULTS:               BUF cells:        4
ABC RESULTS:        internal signals:        5
ABC RESULTS:           input signals:        1
ABC RESULTS:          output signals:        1
Removing temp directory.

5.36.3. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, asynchronously reset by !\rst_ni
Extracted 146 gates and 194 wires to a netlist network with 48 inputs and 49 outputs.

5.36.3.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.36.3.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       58
ABC RESULTS:               NOT cells:       21
ABC RESULTS:              XNOR cells:        2
ABC RESULTS:                OR cells:        5
ABC RESULTS:               XOR cells:        8
ABC RESULTS:               NOR cells:        2
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:              NAND cells:       16
ABC RESULTS:               AND cells:       22
ABC RESULTS:               BUF cells:       50
ABC RESULTS:        internal signals:       97
ABC RESULTS:           input signals:       48
ABC RESULTS:          output signals:       49
Removing temp directory.

5.36.4. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$6157$auto$opt_dff.cc:219:make_patterns_logic$6047, asynchronously reset by !\rst_ni
Extracted 11 gates and 15 wires to a netlist network with 4 inputs and 4 outputs.

5.36.4.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.36.4.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        2
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:               NOR cells:        3
ABC RESULTS:               BUF cells:        1
ABC RESULTS:            ANDNOT cells:        3
ABC RESULTS:        internal signals:        7
ABC RESULTS:           input signals:        4
ABC RESULTS:          output signals:        4
Removing temp directory.

5.36.5. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u_reg.u_reg_if.a_ack, asynchronously reset by !\rst_ni
Extracted 22 gates and 38 wires to a netlist network with 15 inputs and 17 outputs.

5.36.5.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.36.5.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       12
ABC RESULTS:               XOR cells:        2
ABC RESULTS:               NOT cells:        3
ABC RESULTS:               AND cells:        2
ABC RESULTS:            ANDNOT cells:        3
ABC RESULTS:               ONE cells:        1
ABC RESULTS:               BUF cells:       22
ABC RESULTS:        internal signals:        6
ABC RESULTS:           input signals:       15
ABC RESULTS:          output signals:       17
Removing temp directory.

5.36.6. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$6199$auto$opt_dff.cc:219:make_patterns_logic$5807, asynchronously reset by !\rst_ni
Extracted 13 gates and 17 wires to a netlist network with 4 inputs and 5 outputs.

5.36.6.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.36.6.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        2
ABC RESULTS:               NOT cells:        1
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:               MUX cells:        1
ABC RESULTS:                OR cells:        4
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:        internal signals:        8
ABC RESULTS:           input signals:        4
ABC RESULTS:          output signals:        5
Removing temp directory.

5.36.7. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$6172$auto$opt_dff.cc:219:make_patterns_logic$5967, asynchronously reset by !\rst_ni
Extracted 10 gates and 13 wires to a netlist network with 3 inputs and 2 outputs.

5.36.7.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.36.7.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        2
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:               NOR cells:        3
ABC RESULTS:            ANDNOT cells:        3
ABC RESULTS:        internal signals:        8
ABC RESULTS:           input signals:        3
ABC RESULTS:          output signals:        2
Removing temp directory.

5.36.8. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$7514$lo18, asynchronously reset by !\rst_ni
Extracted 2 gates and 4 wires to a netlist network with 1 inputs and 2 outputs.

5.36.8.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.36.8.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:               ONE cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        1
ABC RESULTS:          output signals:        2
Removing temp directory.

5.36.9. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$7514$lo04, asynchronously reset by !\rst_ni
Extracted 2 gates and 4 wires to a netlist network with 1 inputs and 2 outputs.

5.36.9.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.36.9.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:               ONE cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        1
ABC RESULTS:          output signals:        2
Removing temp directory.

5.36.10. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$6186$auto$opt_dff.cc:219:make_patterns_logic$5847, asynchronously reset by !\rst_ni
Extracted 11 gates and 14 wires to a netlist network with 3 inputs and 2 outputs.

5.36.10.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.36.10.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        2
ABC RESULTS:               NOT cells:        1
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:                OR cells:        3
ABC RESULTS:               MUX cells:        1
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:        internal signals:        9
ABC RESULTS:           input signals:        3
ABC RESULTS:          output signals:        2
Removing temp directory.

5.36.11. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$6213$auto$opt_dff.cc:219:make_patterns_logic$5499, asynchronously reset by !\rst_ni
Extracted 31 gates and 37 wires to a netlist network with 6 inputs and 4 outputs.

5.36.11.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.36.11.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:               NOT cells:        1
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:                OR cells:        7
ABC RESULTS:              NAND cells:        6
ABC RESULTS:               NOR cells:        3
ABC RESULTS:               AND cells:        7
ABC RESULTS:        internal signals:       27
ABC RESULTS:           input signals:        6
ABC RESULTS:          output signals:        4
Removing temp directory.

5.36.12. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$7514$lo02, asynchronously reset by !\rst_ni
Extracted 3 gates and 6 wires to a netlist network with 2 inputs and 2 outputs.

5.36.12.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.36.12.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:                OR cells:        2
ABC RESULTS:               ONE cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        2
ABC RESULTS:          output signals:        2
Removing temp directory.

5.36.13. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$7514$lo24, asynchronously reset by !\rst_ni
Extracted 2 gates and 4 wires to a netlist network with 1 inputs and 2 outputs.

5.36.13.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.36.13.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:               ONE cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        1
ABC RESULTS:          output signals:        2
Removing temp directory.

5.36.14. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$6242$auto$opt_dff.cc:219:make_patterns_logic$5441, asynchronously reset by !\rst_ni
Extracted 31 gates and 37 wires to a netlist network with 6 inputs and 4 outputs.

5.36.14.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.36.14.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:               NOT cells:        1
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               MUX cells:        1
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:               NOR cells:        3
ABC RESULTS:               AND cells:        7
ABC RESULTS:                OR cells:        7
ABC RESULTS:              NAND cells:        6
ABC RESULTS:        internal signals:       27
ABC RESULTS:           input signals:        6
ABC RESULTS:          output signals:        4
Removing temp directory.

5.36.15. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$7514$lo16, asynchronously reset by !\rst_ni
Extracted 1 gates and 2 wires to a netlist network with 0 inputs and 1 outputs.

5.36.15.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.36.15.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               ONE cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        0
ABC RESULTS:          output signals:        1
Removing temp directory.

5.36.16. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$7514$lo20, asynchronously reset by !\rst_ni
Extracted 2 gates and 4 wires to a netlist network with 1 inputs and 2 outputs.

5.36.16.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.36.16.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:               ONE cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        1
ABC RESULTS:          output signals:        2
Removing temp directory.

5.36.17. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$7514$lo12, asynchronously reset by !\rst_ni
Extracted 2 gates and 4 wires to a netlist network with 1 inputs and 2 outputs.

5.36.17.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.36.17.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:               ONE cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        1
ABC RESULTS:          output signals:        2
Removing temp directory.

5.36.18. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$7514$lo25, asynchronously reset by !\rst_ni
Extracted 1 gates and 2 wires to a netlist network with 0 inputs and 1 outputs.

5.36.18.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.36.18.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               ONE cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        0
ABC RESULTS:          output signals:        1
Removing temp directory.

5.36.19. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$7514$lo06, asynchronously reset by !\rst_ni
Extracted 1 gates and 2 wires to a netlist network with 0 inputs and 1 outputs.

5.36.19.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.36.19.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               ONE cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        0
ABC RESULTS:          output signals:        1
Removing temp directory.

5.36.20. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$7514$lo10, asynchronously reset by !\rst_ni
Extracted 2 gates and 4 wires to a netlist network with 1 inputs and 2 outputs.

5.36.20.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.36.20.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:               ONE cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        1
ABC RESULTS:          output signals:        2
Removing temp directory.

5.36.21. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$7514$lo08, asynchronously reset by !\rst_ni
Extracted 1 gates and 2 wires to a netlist network with 0 inputs and 1 outputs.

5.36.21.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.36.21.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               ONE cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        0
ABC RESULTS:          output signals:        1
Removing temp directory.

5.36.22. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$7514$lo22, asynchronously reset by !\rst_ni
Extracted 1 gates and 2 wires to a netlist network with 0 inputs and 1 outputs.

5.36.22.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.36.22.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               ONE cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        0
ABC RESULTS:          output signals:        1
Removing temp directory.

5.36.23. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$6276$auto$opt_dff.cc:194:make_patterns_logic$3348, asynchronously reset by !\rst_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 3 outputs.

5.36.23.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.36.23.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:               BUF cells:        2
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        2
ABC RESULTS:          output signals:        3
Removing temp directory.

5.36.24. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$7514$lo14, asynchronously reset by !\rst_ni
Extracted 1 gates and 2 wires to a netlist network with 0 inputs and 1 outputs.

5.36.24.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.36.24.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               ONE cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        0
ABC RESULTS:          output signals:        1
Removing temp directory.

yosys> opt_ffinv

5.37. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> abc -script /tmp/yosys_pbpspt/abc_tmp_1.scr

5.38. Executing ABC pass (technology mapping using ABC).

5.38.1. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Extracted 198 gates and 290 wires to a netlist network with 92 inputs and 68 outputs.

5.38.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /tmp/yosys_pbpspt/abc_tmp_1.scr 
ABC:   #PIs =  92  #Luts =    75  Max Lvl =   3  Avg Lvl =   1.07  [   0.08 sec. at Pass 0]
ABC:   #PIs =  92  #Luts =    75  Max Lvl =   3  Avg Lvl =   1.07  [   0.41 sec. at Pass 1]
ABC:   #PIs =  92  #Luts =    75  Max Lvl =   3  Avg Lvl =   1.07  [   0.12 sec. at Pass 2]
ABC:   #PIs =  92  #Luts =    75  Max Lvl =   3  Avg Lvl =   1.07  [   0.21 sec. at Pass 3]
ABC:   #PIs =  92  #Luts =    75  Max Lvl =   3  Avg Lvl =   1.07  [   0.16 sec. at Pass 4]
ABC:   #PIs =  92  #Luts =    75  Max Lvl =   3  Avg Lvl =   1.07  [   0.29 sec. at Pass 5]
ABC:   #PIs =  92  #Luts =    75  Max Lvl =   3  Avg Lvl =   1.07  [   0.30 sec. at Pass 6]
ABC:   #PIs =  92  #Luts =    75  Max Lvl =   3  Avg Lvl =   1.07  [   0.13 sec. at Pass 7]
ABC:   [DE total time =    1.92 sec. ]
ABC: + write_blif <abc-temp-dir>/output.blif 

5.38.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:       75
ABC RESULTS:        internal signals:      130
ABC RESULTS:           input signals:       92
ABC RESULTS:          output signals:       68
Removing temp directory.

yosys> opt

5.39. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

5.39.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module sensor_ctrl.

yosys> opt_merge -nomux

5.39.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sensor_ctrl'.
Removed a total of 0 cells.

yosys> opt_muxtree

5.39.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sensor_ctrl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

5.39.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sensor_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

5.39.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sensor_ctrl'.
Removed a total of 0 cells.

yosys> opt_dff

5.39.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

5.39.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sensor_ctrl..
Removed 0 unused cells and 800 unused wires.
<suppressed ~23 debug messages>

yosys> opt_expr

5.39.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module sensor_ctrl.

5.39.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

5.39.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sensor_ctrl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

5.39.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sensor_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

5.39.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sensor_ctrl'.
Removed a total of 0 cells.

yosys> opt_dff

5.39.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

5.39.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sensor_ctrl..

yosys> opt_expr

5.39.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module sensor_ctrl.

5.39.16. Finished OPT passes. (There is nothing left to do.)

yosys> opt_ffinv

5.40. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 2 inverters.

yosys> stat

5.41. Printing statistics.

=== sensor_ctrl ===

   Number of wires:               1448
   Number of wire bits:           3449
   Number of public wires:        1325
   Number of public wire bits:    3326
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                175
     $_DFFE_PN0P_                   40
     $_DFF_PN0_                     60
     $_DFF_PN1_                      2
     $lut                           73


yosys> shregmap -minlen 8 -maxlen 20

5.42. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

5.43. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

5.44. Printing statistics.

=== sensor_ctrl ===

   Number of wires:               1448
   Number of wire bits:           3449
   Number of public wires:        1325
   Number of public wire bits:    3326
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                175
     $_DFFE_PN0P_                   40
     $_DFF_PN0_                     60
     $_DFF_PN1_                      2
     $lut                           73


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

5.45. Executing TECHMAP pass (map to technology primitives).

5.45.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

5.45.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

5.45.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFF_PN0_ for cells of type $_DFF_PN0_.
Using template \$_DFFE_PN0P_ for cells of type $_DFFE_PN0P_.
Using template \$_DFF_PN1_ for cells of type $_DFF_PN1_.
No more expansions possible.
<suppressed ~311 debug messages>

yosys> opt_expr -mux_undef

5.46. Executing OPT_EXPR pass (perform const folding).
Optimizing module sensor_ctrl.
<suppressed ~1099 debug messages>

yosys> simplemap

5.47. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

5.48. Executing OPT_EXPR pass (perform const folding).
Optimizing module sensor_ctrl.

yosys> opt_merge

5.49. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sensor_ctrl'.
<suppressed ~219 debug messages>
Removed a total of 73 cells.

yosys> opt_dff -nodffe -nosdff

5.50. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

5.51. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sensor_ctrl..
Removed 0 unused cells and 550 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

5.52. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

5.52.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module sensor_ctrl.
<suppressed ~4 debug messages>

yosys> opt_merge -nomux

5.52.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sensor_ctrl'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

yosys> opt_muxtree

5.52.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sensor_ctrl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

5.52.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sensor_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

5.52.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sensor_ctrl'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

5.52.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

5.52.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sensor_ctrl..

yosys> opt_expr

5.52.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module sensor_ctrl.

5.52.9. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /tmp/yosys_pbpspt/abc_tmp_2.scr

5.53. Executing ABC pass (technology mapping using ABC).

5.53.1. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Extracted 287 gates and 379 wires to a netlist network with 90 inputs and 66 outputs.

5.53.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /tmp/yosys_pbpspt/abc_tmp_2.scr 
ABC:   #PIs =  90  #Luts =    73  Max Lvl =   4  Avg Lvl =   1.12  [   0.05 sec. at Pass 0]
ABC:   #PIs =  90  #Luts =    73  Max Lvl =   3  Avg Lvl =   1.11  [   0.26 sec. at Pass 1]
ABC:   #PIs =  90  #Luts =    73  Max Lvl =   3  Avg Lvl =   1.11  [   0.12 sec. at Pass 2]
ABC:   #PIs =  90  #Luts =    73  Max Lvl =   3  Avg Lvl =   1.11  [   0.13 sec. at Pass 3]
ABC:   #PIs =  90  #Luts =    73  Max Lvl =   3  Avg Lvl =   1.11  [   0.15 sec. at Pass 4]
ABC:   #PIs =  90  #Luts =    73  Max Lvl =   3  Avg Lvl =   1.11  [   0.23 sec. at Pass 5]
ABC:   #PIs =  90  #Luts =    73  Max Lvl =   3  Avg Lvl =   1.11  [   0.40 sec. at Pass 6]
ABC:   #PIs =  90  #Luts =    73  Max Lvl =   3  Avg Lvl =   1.11  [   0.13 sec. at Pass 7]
ABC:   [DE total time =    1.79 sec. ]
ABC: + write_blif <abc-temp-dir>/output.blif 

5.53.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:       73
ABC RESULTS:        internal signals:      223
ABC RESULTS:           input signals:       90
ABC RESULTS:          output signals:       66
Removing temp directory.

yosys> opt

5.54. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

5.54.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module sensor_ctrl.

yosys> opt_merge -nomux

5.54.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sensor_ctrl'.
Removed a total of 0 cells.

yosys> opt_muxtree

5.54.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sensor_ctrl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

5.54.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sensor_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

5.54.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sensor_ctrl'.
Removed a total of 0 cells.

yosys> opt_dff

5.54.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

5.54.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sensor_ctrl..
Removed 0 unused cells and 297 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

5.54.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module sensor_ctrl.

5.54.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

5.54.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sensor_ctrl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

5.54.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sensor_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

5.54.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sensor_ctrl'.
Removed a total of 0 cells.

yosys> opt_dff

5.54.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

5.54.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sensor_ctrl..

yosys> opt_expr

5.54.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module sensor_ctrl.

5.54.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

5.55. Executing HIERARCHY pass (managing design hierarchy).

5.55.1. Analyzing design hierarchy..
Top module:  \sensor_ctrl

5.55.2. Analyzing design hierarchy..
Top module:  \sensor_ctrl
Removed 0 unused modules.

yosys> stat

5.56. Printing statistics.

=== sensor_ctrl ===

   Number of wires:               1446
   Number of wire bits:           3447
   Number of public wires:        1325
   Number of public wire bits:    3326
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                175
     $lut                           73
     dffsre                        102


yosys> opt_clean -purge

5.57. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sensor_ctrl..
Removed 0 unused cells and 1183 unused wires.
<suppressed ~1183 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

5.58. Executing Verilog backend.

yosys> bmuxmap

5.58.1. Executing BMUXMAP pass.

yosys> demuxmap

5.58.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\sensor_ctrl'.

Warnings: 212 unique messages, 213 total
End of script. Logfile hash: 44a3933349, CPU: user 5.28s system 0.23s, MEM: 30.03 MB peak
Yosys 0.16+65 (git sha1 03bd62bb8, gcc 9.1.0 -fPIC -Os)
Time spent: 86% 6x abc (31 sec), 3% 37x opt_expr (1 sec), ...
real 19.70
user 29.03
sys 7.15
