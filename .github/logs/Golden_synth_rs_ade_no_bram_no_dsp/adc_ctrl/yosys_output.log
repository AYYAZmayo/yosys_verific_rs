
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.37
 Yosys 0.17+76 (git sha1 2073f9d19, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Apr22_SW_Release, released at Thu Apr 28 20:08:21 2022.

yosys> verilog_defaults -add -I.

yosys> read -sv prim_mubi_pkg.sv ast_pkg.sv adc_ctrl_reg_pkg.sv prim_alert_pkg.sv prim_pkg.sv prim_secded_pkg.sv top_pkg.sv prim_subreg_pkg.sv tlul_pkg.sv adc_ctrl.sv adc_ctrl_core.sv adc_ctrl_fsm.sv adc_ctrl_intr.sv adc_ctrl_reg_top.sv prim_alert_sender.sv prim_buf.sv prim_generic_buf.sv prim_subreg.sv prim_generic_buf.sv prim_diff_decode.sv prim_flop_2sync.sv prim_generic_flop_2sync.sv prim_generic_flop.sv tlul_cmd_intg_chk.sv prim_secded_inv_64_57_dec.sv tlul_data_integ_dec.sv prim_secded_inv_39_32_dec.sv tlul_rsp_intg_gen.sv prim_secded_inv_64_57_enc.sv tlul_data_integ_enc.sv prim_secded_inv_39_32_enc.sv tlul_adapter_reg.sv tlul_err.sv prim_sync_reqack.sv prim_reg_cdc.sv prim_subreg_ext.sv prim_pulse_sync.sv prim_intr_hw.sv

yosys> verific -sv prim_mubi_pkg.sv ast_pkg.sv adc_ctrl_reg_pkg.sv prim_alert_pkg.sv prim_pkg.sv prim_secded_pkg.sv top_pkg.sv prim_subreg_pkg.sv tlul_pkg.sv adc_ctrl.sv adc_ctrl_core.sv adc_ctrl_fsm.sv adc_ctrl_intr.sv adc_ctrl_reg_top.sv prim_alert_sender.sv prim_buf.sv prim_generic_buf.sv prim_subreg.sv prim_generic_buf.sv prim_diff_decode.sv prim_flop_2sync.sv prim_generic_flop_2sync.sv prim_generic_flop.sv tlul_cmd_intg_chk.sv prim_secded_inv_64_57_dec.sv tlul_data_integ_dec.sv prim_secded_inv_39_32_dec.sv tlul_rsp_intg_gen.sv prim_secded_inv_64_57_enc.sv tlul_data_integ_enc.sv prim_secded_inv_39_32_enc.sv tlul_adapter_reg.sv tlul_err.sv prim_sync_reqack.sv prim_reg_cdc.sv prim_subreg_ext.sv prim_pulse_sync.sv prim_intr_hw.sv

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Apr22_SW_Release, released at Thu Apr 28 20:08:21 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_mubi_pkg.sv'
VERIFIC-WARNING [VERI-2418] prim_mubi_pkg.sv:19: parameter 'MuBi4Width' declared inside package 'prim_mubi_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_mubi_pkg.sv:148: parameter 'MuBi8Width' declared inside package 'prim_mubi_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_mubi_pkg.sv:277: parameter 'MuBi12Width' declared inside package 'prim_mubi_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_mubi_pkg.sv:406: parameter 'MuBi16Width' declared inside package 'prim_mubi_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'ast_pkg.sv'
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:15: parameter 'NumAlerts' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:16: parameter 'NumIoRails' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:17: parameter 'AsSel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:18: parameter 'CgSel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:19: parameter 'GdSel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:20: parameter 'TsHiSel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:21: parameter 'TsLoSel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:22: parameter 'FlaSel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:23: parameter 'OtpSel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:24: parameter 'Ot0Sel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:25: parameter 'Ot1Sel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:26: parameter 'Ot2Sel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:27: parameter 'Ot3Sel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:28: parameter 'Ot4Sel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:29: parameter 'Ot5Sel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:31: parameter 'Lc2HcTrCyc' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:32: parameter 'Hc2LcTrCyc' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:34: parameter 'EntropyStreams' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:35: parameter 'AdcChannels' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:36: parameter 'AdcDataWidth' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:37: parameter 'UsbCalibWidth' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:38: parameter 'Ast2PadOutWidth' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:39: parameter 'Pad2AstInWidth' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:43: parameter 'LfsrWidth' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:46: parameter 'RndCnstLfsrSeedDefault' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:47: parameter 'RndCnstLfsrPermDefault' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:95: parameter 'AST_RST_DEFAULT' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'adc_ctrl_reg_pkg.sv'
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:10: parameter 'NumAdcFilter' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:11: parameter 'NumAdcChannel' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:12: parameter 'NumAlerts' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:15: parameter 'BlockAw' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:209: parameter 'ADC_CTRL_INTR_STATE_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:210: parameter 'ADC_CTRL_INTR_ENABLE_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:211: parameter 'ADC_CTRL_INTR_TEST_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:212: parameter 'ADC_CTRL_ALERT_TEST_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:213: parameter 'ADC_CTRL_ADC_EN_CTL_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:214: parameter 'ADC_CTRL_ADC_PD_CTL_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:215: parameter 'ADC_CTRL_ADC_LP_SAMPLE_CTL_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:216: parameter 'ADC_CTRL_ADC_SAMPLE_CTL_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:217: parameter 'ADC_CTRL_ADC_FSM_RST_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:218: parameter 'ADC_CTRL_ADC_CHN0_FILTER_CTL_0_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:219: parameter 'ADC_CTRL_ADC_CHN0_FILTER_CTL_1_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:220: parameter 'ADC_CTRL_ADC_CHN0_FILTER_CTL_2_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:221: parameter 'ADC_CTRL_ADC_CHN0_FILTER_CTL_3_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:222: parameter 'ADC_CTRL_ADC_CHN0_FILTER_CTL_4_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:223: parameter 'ADC_CTRL_ADC_CHN0_FILTER_CTL_5_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:224: parameter 'ADC_CTRL_ADC_CHN0_FILTER_CTL_6_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:225: parameter 'ADC_CTRL_ADC_CHN0_FILTER_CTL_7_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:226: parameter 'ADC_CTRL_ADC_CHN1_FILTER_CTL_0_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:227: parameter 'ADC_CTRL_ADC_CHN1_FILTER_CTL_1_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:228: parameter 'ADC_CTRL_ADC_CHN1_FILTER_CTL_2_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:229: parameter 'ADC_CTRL_ADC_CHN1_FILTER_CTL_3_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:230: parameter 'ADC_CTRL_ADC_CHN1_FILTER_CTL_4_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:231: parameter 'ADC_CTRL_ADC_CHN1_FILTER_CTL_5_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:232: parameter 'ADC_CTRL_ADC_CHN1_FILTER_CTL_6_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:233: parameter 'ADC_CTRL_ADC_CHN1_FILTER_CTL_7_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:234: parameter 'ADC_CTRL_ADC_CHN_VAL_0_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:235: parameter 'ADC_CTRL_ADC_CHN_VAL_1_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:236: parameter 'ADC_CTRL_ADC_WAKEUP_CTL_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:237: parameter 'ADC_CTRL_FILTER_STATUS_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:238: parameter 'ADC_CTRL_ADC_INTR_CTL_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:239: parameter 'ADC_CTRL_ADC_INTR_STATUS_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:242: parameter 'ADC_CTRL_INTR_TEST_RESVAL' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:243: parameter 'ADC_CTRL_INTR_TEST_DEBUG_CABLE_RESVAL' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:244: parameter 'ADC_CTRL_ALERT_TEST_RESVAL' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:245: parameter 'ADC_CTRL_ALERT_TEST_FATAL_FAULT_RESVAL' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:283: parameter 'ADC_CTRL_PERMIT' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_alert_pkg.sv'
VERIFIC-WARNING [VERI-2418] prim_alert_pkg.sv:19: parameter 'ALERT_TX_DEFAULT' declared inside package 'prim_alert_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_alert_pkg.sv:22: parameter 'ALERT_RX_DEFAULT' declared inside package 'prim_alert_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_pkg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_pkg.sv'
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:81: parameter 'Secded2216ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:82: parameter 'Secded2216ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:90: parameter 'Secded2822ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:91: parameter 'Secded2822ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:99: parameter 'Secded3932ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:100: parameter 'Secded3932ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:108: parameter 'Secded6457ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:109: parameter 'Secded6457ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:117: parameter 'Secded7264ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:118: parameter 'Secded7264ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:126: parameter 'SecdedHamming2216ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:127: parameter 'SecdedHamming2216ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:135: parameter 'SecdedHamming3932ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:136: parameter 'SecdedHamming3932ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:144: parameter 'SecdedHamming7264ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:145: parameter 'SecdedHamming7264ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:153: parameter 'SecdedHamming7668ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:154: parameter 'SecdedHamming7668ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:162: parameter 'SecdedInv2216ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:163: parameter 'SecdedInv2216ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:171: parameter 'SecdedInv2822ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:172: parameter 'SecdedInv2822ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:180: parameter 'SecdedInv3932ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:181: parameter 'SecdedInv3932ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:189: parameter 'SecdedInv6457ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:190: parameter 'SecdedInv6457ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:198: parameter 'SecdedInv7264ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:199: parameter 'SecdedInv7264ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:207: parameter 'SecdedInvHamming2216ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:208: parameter 'SecdedInvHamming2216ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:216: parameter 'SecdedInvHamming3932ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:217: parameter 'SecdedInvHamming3932ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:225: parameter 'SecdedInvHamming7264ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:226: parameter 'SecdedInvHamming7264ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:234: parameter 'SecdedInvHamming7668ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:235: parameter 'SecdedInvHamming7668ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'top_pkg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_subreg_pkg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_pkg.sv'
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:14: parameter 'ArbiterImpl' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:27: parameter 'H2DCmdMaxWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:28: parameter 'H2DCmdIntgWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:29: parameter 'H2DCmdFullWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:30: parameter 'D2HRspMaxWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:31: parameter 'D2HRspIntgWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:32: parameter 'D2HRspFullWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:33: parameter 'DataMaxWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:34: parameter 'DataIntgWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:35: parameter 'DataFullWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:44: parameter 'TL_A_USER_DEFAULT' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:84: parameter 'TL_D_USER_DEFAULT' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'adc_ctrl.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'adc_ctrl_core.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'adc_ctrl_fsm.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'adc_ctrl_intr.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'adc_ctrl_reg_top.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_alert_sender.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_buf.sv'
VERIFIC-WARNING [VERI-1199] prim_buf.sv:24: parameter 'Impl' becomes localparam in 'prim_buf' with formal parameter declaration list
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_generic_buf.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_subreg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_generic_buf.sv'
VERIFIC-WARNING [VERI-1206] prim_generic_buf.sv:13: overwriting previous definition of module 'prim_generic_buf'
VERIFIC-INFO [VERI-2142] prim_generic_buf.sv:13: previous definition of design element 'prim_generic_buf' is here
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_diff_decode.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_flop_2sync.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_generic_flop_2sync.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_generic_flop.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_cmd_intg_chk.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_inv_64_57_dec.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_data_integ_dec.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_inv_39_32_dec.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_rsp_intg_gen.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_inv_64_57_enc.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_data_integ_enc.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_inv_39_32_enc.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_adapter_reg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_err.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_sync_reqack.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_reg_cdc.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_subreg_ext.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_pulse_sync.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_intr_hw.sv'

yosys> synth_rs -top adc_ctrl -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.53

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\RS_DSP2_MULT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_sim'.
Generating RTLIL representation for module `\dsp_t1_20x18x64'.
Generating RTLIL representation for module `\dsp_t1_10x9x32'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top adc_ctrl

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] adc_ctrl.sv:8: compiling module 'adc_ctrl'
VERIFIC-INFO [VERI-1018] prim_alert_sender.sv:32: compiling module 'prim_alert_sender'
VERIFIC-INFO [VERI-1018] prim_diff_decode.sv:19: compiling module 'prim_diff_decode(AsyncOn=1'b1)'
VERIFIC-INFO [VERI-1018] prim_flop_2sync.sv:13: compiling module 'prim_flop_2sync(Width=1,ResetValue=1'b0)'
VERIFIC-INFO [VERI-1018] prim_generic_flop_2sync.sv:9: compiling module 'prim_generic_flop_2sync(Width=1,ResetValue=1'b0)'
VERIFIC-INFO [VERI-1018] prim_generic_flop.sv:7: compiling module 'prim_generic_flop(ResetValue=1'b0)'
VERIFIC-INFO [VERI-1018] prim_flop_2sync.sv:13: compiling module 'prim_flop_2sync(Width=1,ResetValue=1'b1)'
VERIFIC-INFO [VERI-1018] prim_generic_flop_2sync.sv:9: compiling module 'prim_generic_flop_2sync(Width=1,ResetValue=1'b1)'
VERIFIC-INFO [VERI-1018] prim_generic_flop.sv:7: compiling module 'prim_generic_flop(ResetValue=1'b1)'
VERIFIC-INFO [VERI-1018] prim_buf.sv:16: compiling module 'prim_buf'
VERIFIC-INFO [VERI-1018] prim_generic_buf.sv:6: compiling module 'prim_generic_buf'
VERIFIC-INFO [VERI-1018] adc_ctrl_reg_top.sv:11: compiling module 'adc_ctrl_reg_top'
VERIFIC-INFO [VERI-1018] tlul_cmd_intg_chk.sv:3: compiling module 'tlul_cmd_intg_chk'
VERIFIC-INFO [VERI-1018] prim_secded_inv_64_57_dec.sv:7: compiling module 'prim_secded_inv_64_57_dec'
VERIFIC-INFO [VERI-1018] tlul_data_integ_dec.sv:10: compiling module 'tlul_data_integ_dec'
VERIFIC-INFO [VERI-1018] prim_secded_inv_39_32_dec.sv:7: compiling module 'prim_secded_inv_39_32_dec'
VERIFIC-INFO [VERI-1018] tlul_rsp_intg_gen.sv:9: compiling module 'tlul_rsp_intg_gen'
VERIFIC-INFO [VERI-1018] prim_secded_inv_64_57_enc.sv:7: compiling module 'prim_secded_inv_64_57_enc'
VERIFIC-INFO [VERI-1018] tlul_data_integ_enc.sv:10: compiling module 'tlul_data_integ_enc'
VERIFIC-INFO [VERI-1018] prim_secded_inv_39_32_enc.sv:7: compiling module 'prim_secded_inv_39_32_enc'
VERIFIC-INFO [VERI-1018] tlul_adapter_reg.sv:10: compiling module 'tlul_adapter_reg(RegAw=7)'
VERIFIC-INFO [VERI-1018] tlul_err.sv:7: compiling module 'tlul_err'
VERIFIC-WARNING [VERI-1209] tlul_err.sv:44: expression size 32 truncated to fit in target size 4
VERIFIC-INFO [VERI-1018] prim_sync_reqack.sv:26: compiling module 'prim_sync_reqack'
VERIFIC-INFO [VERI-1018] prim_flop_2sync.sv:13: compiling module 'prim_flop_2sync(Width=1)'
VERIFIC-INFO [VERI-1018] prim_reg_cdc.sv:8: compiling module 'prim_reg_cdc(DataWidth=2,ResetVal=2'b0,BitMask=2'b11)'
VERIFIC-INFO [VERI-1018] prim_reg_cdc.sv:8: compiling module 'prim_reg_cdc(ResetVal=32'b01100100000001100000,BitMask=32'b11111111111111111111111111110001)'
VERIFIC-INFO [VERI-1018] prim_reg_cdc.sv:8: compiling module 'prim_reg_cdc(DataWidth=8,ResetVal=8'b0100,BitMask=8'b11111111)'
VERIFIC-INFO [VERI-1018] prim_reg_cdc.sv:8: compiling module 'prim_reg_cdc(DataWidth=16,ResetVal=16'b010011011,BitMask=16'b1111111111111111)'
VERIFIC-INFO [VERI-1018] prim_reg_cdc.sv:8: compiling module 'prim_reg_cdc(DataWidth=1,ResetVal=1'b0,BitMask=1'b1)'
VERIFIC-INFO [VERI-1018] prim_reg_cdc.sv:8: compiling module 'prim_reg_cdc(BitMask=32'b10001111111111000001111111111100)'
VERIFIC-INFO [VERI-1018] prim_reg_cdc.sv:8: compiling module 'prim_reg_cdc(DataWidth=28,ResetVal=28'b0,BitMask=28'b1111111111110000111111111111)'
VERIFIC-INFO [VERI-1018] prim_reg_cdc.sv:8: compiling module 'prim_reg_cdc(DataWidth=8,ResetVal=8'b0,BitMask=8'b11111111)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=1,SWACCESS=SwAccessW1C_prim_subreg_pkg,RESVAL=1'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=1,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg_ext.sv:7: compiling module 'prim_subreg_ext(DW=32'b01)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=4,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=4'b0110)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=24,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=24'b011001000000)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=8,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=8'b0100)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=16,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=16'b010011011)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=10,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=10'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=2,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=2'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=10,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=10'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=8,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=8'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=8,SWACCESS=SwAccessW1C_prim_subreg_pkg,RESVAL=8'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=9,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=9'b0)'
VERIFIC-INFO [VERI-1018] adc_ctrl_core.sv:7: compiling module 'adc_ctrl_core'
VERIFIC-INFO [VERI-1018] adc_ctrl_fsm.sv:7: compiling module 'adc_ctrl_fsm'
VERIFIC-INFO [VERI-1018] prim_pulse_sync.sv:11: compiling module 'prim_pulse_sync'
VERIFIC-INFO [VERI-1018] adc_ctrl_intr.sv:7: compiling module 'adc_ctrl_intr'
VERIFIC-INFO [VERI-1018] prim_intr_hw.sv:10: compiling module 'prim_intr_hw'
Importing module adc_ctrl.
Importing module adc_ctrl_core.
Importing module adc_ctrl_fsm.
Importing module adc_ctrl_intr.
Importing module adc_ctrl_reg_top.
Importing module prim_alert_sender.
Importing module prim_buf.
Importing module prim_diff_decode(AsyncOn=1'b1).
Importing module prim_flop_2sync(Width=1,ResetValue=1'b0).
Importing module prim_flop_2sync(Width=1,ResetValue=1'b1).
Importing module prim_generic_buf.
Importing module prim_generic_flop_2sync(Width=1,ResetValue=1'b0).
Importing module prim_generic_flop(ResetValue=1'b0).
Importing module prim_generic_flop_2sync(Width=1,ResetValue=1'b1).
Importing module prim_generic_flop(ResetValue=1'b1).
Importing module prim_intr_hw.
Importing module prim_pulse_sync.
Importing module prim_flop_2sync(Width=1).
Importing module prim_reg_cdc(BitMask=32'b10001111111111000001111111111100).
Importing module prim_reg_cdc(DataWidth=1,ResetVal=1'b0,BitMask=1'b1).
Importing module prim_reg_cdc(DataWidth=16,ResetVal=16'b010011011,BitMask=16'b1111111111111111).
Importing module prim_reg_cdc(DataWidth=2,ResetVal=2'b0,BitMask=2'b11).
Importing module prim_reg_cdc(DataWidth=28,ResetVal=28'b0,BitMask=28'b1111111111110000111111111111).
Importing module prim_reg_cdc(DataWidth=8,ResetVal=8'b0,BitMask=8'b11111111).
Importing module prim_reg_cdc(DataWidth=8,ResetVal=8'b0100,BitMask=8'b11111111).
Importing module prim_reg_cdc(ResetVal=32'b01100100000001100000,BitMask=32'b11111111111111111111111111110001).
Importing module prim_subreg(DW=1,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0).
Importing module prim_subreg(DW=1,SWACCESS=SwAccessW1C_prim_subreg_pkg,RESVAL=1'b0).
Importing module prim_subreg(DW=10,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=10'b0).
Importing module prim_subreg(DW=10,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=10'b0).
Importing module prim_subreg(DW=16,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=16'b010011011).
Importing module prim_subreg(DW=2,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=2'b0).
Importing module prim_subreg(DW=24,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=24'b011001000000).
Importing module prim_subreg(DW=4,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=4'b0110).
Importing module prim_subreg(DW=8,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=8'b0).
Importing module prim_subreg(DW=8,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=8'b0100).
Importing module prim_subreg(DW=8,SWACCESS=SwAccessW1C_prim_subreg_pkg,RESVAL=8'b0).
Importing module prim_subreg(DW=9,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=9'b0).
Importing module prim_subreg_ext(DW=32'b01).
Importing module prim_sync_reqack.
Importing module tlul_adapter_reg(RegAw=7).
Importing module tlul_cmd_intg_chk.
Importing module prim_secded_inv_64_57_dec.
Importing module tlul_data_integ_dec.
Importing module prim_secded_inv_39_32_dec.
Importing module tlul_err.
Importing module tlul_rsp_intg_gen.
Importing module prim_secded_inv_64_57_enc.
Importing module tlul_data_integ_enc.
Importing module prim_secded_inv_39_32_enc.

3.3.1. Analyzing design hierarchy..
Top module:  \adc_ctrl
Used module:     \adc_ctrl_core
Used module:         \adc_ctrl_intr
Used module:             \prim_intr_hw
Used module:             \prim_flop_2sync(Width=1,ResetValue=1'b0)
Used module:                 \prim_generic_flop_2sync(Width=1,ResetValue=1'b0)
Used module:                     \prim_generic_flop(ResetValue=1'b0)
Used module:         \prim_pulse_sync
Used module:             \prim_flop_2sync(Width=1)
Used module:         \adc_ctrl_fsm
Used module:     \adc_ctrl_reg_top
Used module:         \prim_subreg(DW=1,SWACCESS=SwAccessW1C_prim_subreg_pkg,RESVAL=1'b0)
Used module:         \prim_subreg(DW=9,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=9'b0)
Used module:         \prim_subreg(DW=8,SWACCESS=SwAccessW1C_prim_subreg_pkg,RESVAL=8'b0)
Used module:         \prim_subreg(DW=8,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=8'b0)
Used module:         \prim_subreg(DW=10,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=10'b0)
Used module:         \prim_subreg(DW=2,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=2'b0)
Used module:         \prim_subreg(DW=1,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0)
Used module:         \prim_subreg(DW=10,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=10'b0)
Used module:         \prim_subreg(DW=16,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=16'b010011011)
Used module:         \prim_subreg(DW=8,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=8'b0100)
Used module:         \prim_subreg(DW=24,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=24'b011001000000)
Used module:         \prim_subreg(DW=4,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=4'b0110)
Used module:         \prim_subreg_ext(DW=32'b01)
Used module:         \prim_reg_cdc(DataWidth=8,ResetVal=8'b0,BitMask=8'b11111111)
Used module:             \prim_sync_reqack
Used module:         \prim_reg_cdc(DataWidth=28,ResetVal=28'b0,BitMask=28'b1111111111110000111111111111)
Used module:         \prim_reg_cdc(BitMask=32'b10001111111111000001111111111100)
Used module:         \prim_reg_cdc(DataWidth=1,ResetVal=1'b0,BitMask=1'b1)
Used module:         \prim_reg_cdc(DataWidth=16,ResetVal=16'b010011011,BitMask=16'b1111111111111111)
Used module:         \prim_reg_cdc(DataWidth=8,ResetVal=8'b0100,BitMask=8'b11111111)
Used module:         \prim_reg_cdc(ResetVal=32'b01100100000001100000,BitMask=32'b11111111111111111111111111110001)
Used module:         \prim_reg_cdc(DataWidth=2,ResetVal=2'b0,BitMask=2'b11)
Used module:         \tlul_adapter_reg(RegAw=7)
Used module:             \tlul_err
Used module:         \tlul_rsp_intg_gen
Used module:             \tlul_data_integ_enc
Used module:                 \prim_secded_inv_39_32_enc
Used module:             \prim_secded_inv_64_57_enc
Used module:         \tlul_cmd_intg_chk
Used module:             \tlul_data_integ_dec
Used module:                 \prim_secded_inv_39_32_dec
Used module:             \prim_secded_inv_64_57_dec
Used module:     \prim_alert_sender
Used module:         \prim_buf
Used module:             \prim_generic_buf
Used module:         \prim_diff_decode(AsyncOn=1'b1)
Used module:             \prim_flop_2sync(Width=1,ResetValue=1'b1)
Used module:                 \prim_generic_flop_2sync(Width=1,ResetValue=1'b1)
Used module:                     \prim_generic_flop(ResetValue=1'b1)

3.3.2. Analyzing design hierarchy..
Top module:  \adc_ctrl
Used module:     \adc_ctrl_core
Used module:         \adc_ctrl_intr
Used module:             \prim_intr_hw
Used module:             \prim_flop_2sync(Width=1,ResetValue=1'b0)
Used module:                 \prim_generic_flop_2sync(Width=1,ResetValue=1'b0)
Used module:                     \prim_generic_flop(ResetValue=1'b0)
Used module:         \prim_pulse_sync
Used module:             \prim_flop_2sync(Width=1)
Used module:         \adc_ctrl_fsm
Used module:     \adc_ctrl_reg_top
Used module:         \prim_subreg(DW=1,SWACCESS=SwAccessW1C_prim_subreg_pkg,RESVAL=1'b0)
Used module:         \prim_subreg(DW=9,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=9'b0)
Used module:         \prim_subreg(DW=8,SWACCESS=SwAccessW1C_prim_subreg_pkg,RESVAL=8'b0)
Used module:         \prim_subreg(DW=8,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=8'b0)
Used module:         \prim_subreg(DW=10,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=10'b0)
Used module:         \prim_subreg(DW=2,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=2'b0)
Used module:         \prim_subreg(DW=1,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0)
Used module:         \prim_subreg(DW=10,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=10'b0)
Used module:         \prim_subreg(DW=16,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=16'b010011011)
Used module:         \prim_subreg(DW=8,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=8'b0100)
Used module:         \prim_subreg(DW=24,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=24'b011001000000)
Used module:         \prim_subreg(DW=4,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=4'b0110)
Used module:         \prim_subreg_ext(DW=32'b01)
Used module:         \prim_reg_cdc(DataWidth=8,ResetVal=8'b0,BitMask=8'b11111111)
Used module:             \prim_sync_reqack
Used module:         \prim_reg_cdc(DataWidth=28,ResetVal=28'b0,BitMask=28'b1111111111110000111111111111)
Used module:         \prim_reg_cdc(BitMask=32'b10001111111111000001111111111100)
Used module:         \prim_reg_cdc(DataWidth=1,ResetVal=1'b0,BitMask=1'b1)
Used module:         \prim_reg_cdc(DataWidth=16,ResetVal=16'b010011011,BitMask=16'b1111111111111111)
Used module:         \prim_reg_cdc(DataWidth=8,ResetVal=8'b0100,BitMask=8'b11111111)
Used module:         \prim_reg_cdc(ResetVal=32'b01100100000001100000,BitMask=32'b11111111111111111111111111110001)
Used module:         \prim_reg_cdc(DataWidth=2,ResetVal=2'b0,BitMask=2'b11)
Used module:         \tlul_adapter_reg(RegAw=7)
Used module:             \tlul_err
Used module:         \tlul_rsp_intg_gen
Used module:             \tlul_data_integ_enc
Used module:                 \prim_secded_inv_39_32_enc
Used module:             \prim_secded_inv_64_57_enc
Used module:         \tlul_cmd_intg_chk
Used module:             \tlul_data_integ_dec
Used module:                 \prim_secded_inv_39_32_dec
Used module:             \prim_secded_inv_64_57_dec
Used module:     \prim_alert_sender
Used module:         \prim_buf
Used module:             \prim_generic_buf
Used module:         \prim_diff_decode(AsyncOn=1'b1)
Used module:             \prim_flop_2sync(Width=1,ResetValue=1'b1)
Used module:                 \prim_generic_flop_2sync(Width=1,ResetValue=1'b1)
Used module:                     \prim_generic_flop(ResetValue=1'b1)
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.4.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.4.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module prim_secded_inv_39_32_enc.
Optimizing module tlul_data_integ_enc.
Optimizing module prim_secded_inv_64_57_enc.
Optimizing module tlul_rsp_intg_gen.
Optimizing module tlul_err.
<suppressed ~1 debug messages>
Optimizing module prim_secded_inv_39_32_dec.
Optimizing module tlul_data_integ_dec.
Optimizing module prim_secded_inv_64_57_dec.
Optimizing module tlul_cmd_intg_chk.
<suppressed ~1 debug messages>
Optimizing module tlul_adapter_reg(RegAw=7).
<suppressed ~11 debug messages>
Optimizing module prim_sync_reqack.
<suppressed ~4 debug messages>
Optimizing module prim_subreg_ext(DW=32'b01).
Optimizing module prim_subreg(DW=9,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=9'b0).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=8,SWACCESS=SwAccessW1C_prim_subreg_pkg,RESVAL=8'b0).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=8,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=8'b0100).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=8,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=8'b0).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=4,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=4'b0110).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=24,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=24'b011001000000).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=2,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=2'b0).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=16,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=16'b010011011).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=10,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=10'b0).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=10,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=10'b0).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=1,SWACCESS=SwAccessW1C_prim_subreg_pkg,RESVAL=1'b0).
<suppressed ~2 debug messages>
Optimizing module prim_subreg(DW=1,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0).
<suppressed ~2 debug messages>
Optimizing module prim_reg_cdc(ResetVal=32'b01100100000001100000,BitMask=32'b11111111111111111111111111110001).
<suppressed ~5 debug messages>
Optimizing module prim_reg_cdc(DataWidth=8,ResetVal=8'b0100,BitMask=8'b11111111).
<suppressed ~5 debug messages>
Optimizing module prim_reg_cdc(DataWidth=8,ResetVal=8'b0,BitMask=8'b11111111).
<suppressed ~5 debug messages>
Optimizing module prim_reg_cdc(DataWidth=28,ResetVal=28'b0,BitMask=28'b1111111111110000111111111111).
<suppressed ~5 debug messages>
Optimizing module prim_reg_cdc(DataWidth=2,ResetVal=2'b0,BitMask=2'b11).
<suppressed ~5 debug messages>
Optimizing module prim_reg_cdc(DataWidth=16,ResetVal=16'b010011011,BitMask=16'b1111111111111111).
<suppressed ~5 debug messages>
Optimizing module prim_reg_cdc(DataWidth=1,ResetVal=1'b0,BitMask=1'b1).
<suppressed ~4 debug messages>
Optimizing module prim_reg_cdc(BitMask=32'b10001111111111000001111111111100).
<suppressed ~5 debug messages>
Optimizing module prim_flop_2sync(Width=1).
Optimizing module prim_pulse_sync.
<suppressed ~2 debug messages>
Optimizing module prim_intr_hw.
<suppressed ~1 debug messages>
Optimizing module prim_generic_flop(ResetValue=1'b1).
<suppressed ~1 debug messages>
Optimizing module prim_generic_flop_2sync(Width=1,ResetValue=1'b1).
Optimizing module prim_generic_flop(ResetValue=1'b0).
<suppressed ~1 debug messages>
Optimizing module prim_generic_flop_2sync(Width=1,ResetValue=1'b0).
Optimizing module prim_generic_buf.
Optimizing module prim_flop_2sync(Width=1,ResetValue=1'b1).
Optimizing module prim_flop_2sync(Width=1,ResetValue=1'b0).
Optimizing module prim_diff_decode(AsyncOn=1'b1).
<suppressed ~5 debug messages>
Optimizing module prim_buf.
Optimizing module prim_alert_sender.
<suppressed ~7 debug messages>
Optimizing module adc_ctrl_reg_top.
<suppressed ~2 debug messages>
Optimizing module adc_ctrl_intr.
<suppressed ~8 debug messages>
Optimizing module adc_ctrl_fsm.
<suppressed ~26 debug messages>
Optimizing module adc_ctrl_core.
<suppressed ~4 debug messages>
Optimizing module adc_ctrl.

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).
Deleting now unused module prim_secded_inv_39_32_enc.
Deleting now unused module tlul_data_integ_enc.
Deleting now unused module prim_secded_inv_64_57_enc.
Deleting now unused module tlul_rsp_intg_gen.
Deleting now unused module tlul_err.
Deleting now unused module prim_secded_inv_39_32_dec.
Deleting now unused module tlul_data_integ_dec.
Deleting now unused module prim_secded_inv_64_57_dec.
Deleting now unused module tlul_cmd_intg_chk.
Deleting now unused module tlul_adapter_reg(RegAw=7).
Deleting now unused module prim_sync_reqack.
Deleting now unused module prim_subreg_ext(DW=32'b01).
Deleting now unused module prim_subreg(DW=9,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=9'b0).
Deleting now unused module prim_subreg(DW=8,SWACCESS=SwAccessW1C_prim_subreg_pkg,RESVAL=8'b0).
Deleting now unused module prim_subreg(DW=8,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=8'b0100).
Deleting now unused module prim_subreg(DW=8,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=8'b0).
Deleting now unused module prim_subreg(DW=4,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=4'b0110).
Deleting now unused module prim_subreg(DW=24,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=24'b011001000000).
Deleting now unused module prim_subreg(DW=2,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=2'b0).
Deleting now unused module prim_subreg(DW=16,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=16'b010011011).
Deleting now unused module prim_subreg(DW=10,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=10'b0).
Deleting now unused module prim_subreg(DW=10,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=10'b0).
Deleting now unused module prim_subreg(DW=1,SWACCESS=SwAccessW1C_prim_subreg_pkg,RESVAL=1'b0).
Deleting now unused module prim_subreg(DW=1,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0).
Deleting now unused module prim_reg_cdc(ResetVal=32'b01100100000001100000,BitMask=32'b11111111111111111111111111110001).
Deleting now unused module prim_reg_cdc(DataWidth=8,ResetVal=8'b0100,BitMask=8'b11111111).
Deleting now unused module prim_reg_cdc(DataWidth=8,ResetVal=8'b0,BitMask=8'b11111111).
Deleting now unused module prim_reg_cdc(DataWidth=28,ResetVal=28'b0,BitMask=28'b1111111111110000111111111111).
Deleting now unused module prim_reg_cdc(DataWidth=2,ResetVal=2'b0,BitMask=2'b11).
Deleting now unused module prim_reg_cdc(DataWidth=16,ResetVal=16'b010011011,BitMask=16'b1111111111111111).
Deleting now unused module prim_reg_cdc(DataWidth=1,ResetVal=1'b0,BitMask=1'b1).
Deleting now unused module prim_reg_cdc(BitMask=32'b10001111111111000001111111111100).
Deleting now unused module prim_flop_2sync(Width=1).
Deleting now unused module prim_pulse_sync.
Deleting now unused module prim_intr_hw.
Deleting now unused module prim_generic_flop(ResetValue=1'b1).
Deleting now unused module prim_generic_flop_2sync(Width=1,ResetValue=1'b1).
Deleting now unused module prim_generic_flop(ResetValue=1'b0).
Deleting now unused module prim_generic_flop_2sync(Width=1,ResetValue=1'b0).
Deleting now unused module prim_generic_buf.
Deleting now unused module prim_flop_2sync(Width=1,ResetValue=1'b1).
Deleting now unused module prim_flop_2sync(Width=1,ResetValue=1'b0).
Deleting now unused module prim_diff_decode(AsyncOn=1'b1).
Deleting now unused module prim_buf.
Deleting now unused module prim_alert_sender.
Deleting now unused module adc_ctrl_reg_top.
Deleting now unused module adc_ctrl_intr.
Deleting now unused module adc_ctrl_fsm.
Deleting now unused module adc_ctrl_core.
<suppressed ~172 debug messages>

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
<suppressed ~117 debug messages>

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 751 unused cells and 11673 unused wires.
<suppressed ~2801 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module adc_ctrl...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
<suppressed ~88 debug messages>

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
<suppressed ~15 debug messages>
Removed a total of 5 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn0_filter_ctl_0_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn0_filter_ctl_0_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn0_filter_ctl_0_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn0_filter_ctl_0_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn0_filter_ctl_1_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn0_filter_ctl_1_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn0_filter_ctl_1_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn0_filter_ctl_1_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn0_filter_ctl_2_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn0_filter_ctl_2_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn0_filter_ctl_2_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn0_filter_ctl_2_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn0_filter_ctl_3_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn0_filter_ctl_3_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn0_filter_ctl_3_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn0_filter_ctl_3_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn0_filter_ctl_4_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn0_filter_ctl_4_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn0_filter_ctl_4_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn0_filter_ctl_4_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn0_filter_ctl_5_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn0_filter_ctl_5_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn0_filter_ctl_5_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn0_filter_ctl_5_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn0_filter_ctl_6_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn0_filter_ctl_6_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn0_filter_ctl_6_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn0_filter_ctl_6_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn0_filter_ctl_7_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn0_filter_ctl_7_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn0_filter_ctl_7_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn0_filter_ctl_7_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn1_filter_ctl_0_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn1_filter_ctl_0_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn1_filter_ctl_0_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn1_filter_ctl_0_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn1_filter_ctl_1_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn1_filter_ctl_1_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn1_filter_ctl_1_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn1_filter_ctl_1_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn1_filter_ctl_2_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn1_filter_ctl_2_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn1_filter_ctl_2_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn1_filter_ctl_2_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn1_filter_ctl_3_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn1_filter_ctl_3_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn1_filter_ctl_3_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn1_filter_ctl_3_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn1_filter_ctl_4_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn1_filter_ctl_4_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn1_filter_ctl_4_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn1_filter_ctl_4_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn1_filter_ctl_5_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn1_filter_ctl_5_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn1_filter_ctl_5_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn1_filter_ctl_5_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn1_filter_ctl_6_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn1_filter_ctl_6_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn1_filter_ctl_6_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn1_filter_ctl_6_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn1_filter_ctl_7_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn1_filter_ctl_7_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn1_filter_ctl_7_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn1_filter_ctl_7_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn_val_0_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn_val_0_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn_val_0_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn_val_0_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn_val_0_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn_val_0_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn_val_0_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn_val_0_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn_val_1_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn_val_1_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn_val_1_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn_val_1_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn_val_1_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn_val_1_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn_val_1_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn_val_1_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_en_ctl_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_en_ctl_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_en_ctl_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_en_ctl_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_en_ctl_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_en_ctl_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_en_ctl_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_en_ctl_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_fsm_rst_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_fsm_rst_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_fsm_rst_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_fsm_rst_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_fsm_rst_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_fsm_rst_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_fsm_rst_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_fsm_rst_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_lp_sample_ctl_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_lp_sample_ctl_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_lp_sample_ctl_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_lp_sample_ctl_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_pd_ctl_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_pd_ctl_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_pd_ctl_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_pd_ctl_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_pd_ctl_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_pd_ctl_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_pd_ctl_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_pd_ctl_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_sample_ctl_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_sample_ctl_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_sample_ctl_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_sample_ctl_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_sample_ctl_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_sample_ctl_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_sample_ctl_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_sample_ctl_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_wakeup_ctl_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_wakeup_ctl_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_wakeup_ctl_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_wakeup_ctl_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_wakeup_ctl_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_wakeup_ctl_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_wakeup_ctl_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_wakeup_ctl_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_aon_tgl.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_aon_tgl.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_aon_tgl.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_aon_tgl.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_aon_tgl.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_aon_tgl.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_aon_tgl.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_aon_tgl.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_filter_status_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_filter_status_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_filter_status_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_filter_status_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_filter_status_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_filter_status_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_filter_status_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_filter_status_cdc.u_prim_sync.dst_fsm_cs -> 1'0
  Analyzing evaluation results.
    dead port 1/2 on $mux $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$mux_188$adc_ctrl_fsm.sv:260$1952.
Removed 1 multiplexer ports.
<suppressed ~295 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
    New ctrl vector for $pmux cell $flatten\u_reg.$verific$select_879$adc_ctrl_reg_top.sv:3982$8570: { \u_reg.addr_hit [0] $flatten\u_reg.$verific$n4771$2406 $flatten\u_reg.$verific$n4780$2415 $flatten\u_reg.$verific$n4783$2418 $flatten\u_reg.$verific$n4786$2421 $flatten\u_reg.$verific$n4789$2424 $flatten\u_reg.$verific$n4792$2427 $flatten\u_reg.$verific$n4795$2430 $flatten\u_reg.$verific$n4798$2433 $flatten\u_reg.$verific$n4801$2436 $flatten\u_reg.$verific$n4804$2439 $flatten\u_reg.$verific$n4807$2442 $flatten\u_reg.$verific$n4810$2445 $flatten\u_reg.$verific$n4813$2448 $flatten\u_reg.$verific$n4816$2451 $flatten\u_reg.$verific$n4819$2454 $flatten\u_reg.$verific$n4822$2457 $flatten\u_reg.$verific$n4825$2460 $flatten\u_reg.$verific$n4828$2463 $flatten\u_reg.$verific$n4831$2466 $flatten\u_reg.$verific$n4834$2469 $flatten\u_reg.$verific$n4837$2472 $flatten\u_reg.$verific$n4840$2475 $flatten\u_reg.$verific$n4843$2478 $flatten\u_reg.$verific$n4846$2481 $flatten\u_reg.$verific$n4849$2484 $flatten\u_reg.$verific$n4852$2487 $flatten\u_reg.$verific$n4855$2490 $flatten\u_reg.$verific$n4858$2493 $flatten\u_reg.$verific$n4860$2495 }
  Optimizing cells in module \adc_ctrl.
Performed a total of 1 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$rspop_reg$tlul_adapter_reg.sv:80$9912 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$reqsz_reg$tlul_adapter_reg.sv:80$9911 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$reqid_reg$tlul_adapter_reg.sv:80$9910 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$rdata_reg$tlul_adapter_reg.sv:90$9920 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$outstanding_reg$tlul_adapter_reg.sv:67$9900 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.\gen_async.i_sync_p.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$error_reg$tlul_adapter_reg.sv:90$9921 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_intr_state.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_intr_enable.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.\gen_async.i_sync_n.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8916 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_filter_status_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_filter_status_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_filter_status_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_filter_status_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_filter_status_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_filter_status_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_filter_status_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_filter_status_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_filter_status_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9375 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_filter_status_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9357 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_filter_status.$verific$q_reg$prim_subreg.sv:72$9747 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_aon_tgl.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_aon_tgl.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_aon_tgl.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_aon_tgl.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_aon_tgl.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_aon_tgl.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_aon_tgl.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_aon_tgl.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_wakeup_ctl_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_wakeup_ctl_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_wakeup_ctl_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_wakeup_ctl_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_wakeup_ctl_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_wakeup_ctl_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_wakeup_ctl_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_wakeup_ctl_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_wakeup_ctl_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9375 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_wakeup_ctl_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9357 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_wakeup_ctl.$verific$q_reg$prim_subreg.sv:72$9707 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_sample_ctl_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_sample_ctl_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_sample_ctl_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_sample_ctl_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_sample_ctl_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_sample_ctl_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_sample_ctl_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_sample_ctl_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_sample_ctl_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9159 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_sample_ctl_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9141 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_pd_ctl_pwrup_time.$verific$q_reg$prim_subreg.sv:72$9688 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_pd_ctl_lp_mode.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_pd_ctl_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_pd_ctl_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_pd_ctl_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_pd_ctl_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_pd_ctl_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_pd_ctl_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_pd_ctl_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_pd_ctl_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_pd_ctl_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9519 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_pd_ctl_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9501 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9447 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9429 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_lp_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9728 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_intr_status_oneshot.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_intr_status_cc_src_det_flip.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_intr_status_cc_src_det.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_intr_status_cc_sink_det.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_intr_status_cc_discon.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_intr_status_cc_3a0_sink_det.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_intr_status_cc_1a5_src_det_flip.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_intr_status_cc_1a5_src_det.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_intr_status_cc_1a5_sink_det.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_intr_ctl.$verific$q_reg$prim_subreg.sv:72$9766 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_fsm_rst_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_fsm_rst_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_fsm_rst_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_fsm_rst_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_fsm_rst_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_fsm_rst_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_fsm_rst_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_fsm_rst_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_fsm_rst_cdc.$verific$src_q_reg[0]$prim_reg_cdc.sv:98$9088 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_fsm_rst_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9071 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_fsm_rst.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_en_ctl_oneshot_mode.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_en_ctl_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_en_ctl_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_en_ctl_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_en_ctl_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_en_ctl_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_en_ctl_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_en_ctl_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_en_ctl_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_en_ctl_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9231 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_en_ctl_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9213 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_en_ctl_adc_enable.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.\gen_async.i_sync_n.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8916 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_1_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_1_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_1_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_1_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_1_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_1_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_1_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_1_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_1_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9303 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_1_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9285 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.\gen_async.i_sync_p.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_intr_ext_1.$verific$q_reg$prim_subreg.sv:72$9646 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_intr_1.$verific$q_reg$prim_subreg.sv:72$9587 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_ext_1.$verific$q_reg$prim_subreg.sv:72$9646 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_1.$verific$q_reg$prim_subreg.sv:72$9587 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_0_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_0_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_0_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_0_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_0_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_0_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_0_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_0_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_0_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9303 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_0_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9285 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_intr_ext_0.$verific$q_reg$prim_subreg.sv:72$9646 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$alert_nq_reg$prim_alert_sender.sv:235$8781 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_intr_0.$verific$q_reg$prim_subreg.sv:72$9587 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_ext_0.$verific$q_reg$prim_subreg.sv:72$9646 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$alert_pq_reg$prim_alert_sender.sv:235$8780 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_0.$verific$q_reg$prim_subreg.sv:72$9587 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_en_7.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$alert_set_q_reg$prim_alert_sender.sv:235$8782 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cond_7.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_en_6.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cond_6.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_en_5.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cond_5.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_en_4.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cond_4.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_en_3.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cond_3.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_en_2.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cond_2.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$ping_set_q_reg$prim_alert_sender.sv:235$8783 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_en_1.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cond_1.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$state_q_reg$prim_alert_sender.sv:235$8779 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.$verific$gen_async.state_q_reg$prim_diff_decode.sv:172$8869 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.$verific$gen_async.diff_nq_reg$prim_diff_decode.sv:172$8871 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_en_0.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cond_0.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.$verific$gen_async.diff_pq_reg$prim_diff_decode.sv:172$8870 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_en_7.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cond_7.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_en_6.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cond_6.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.\gen_async.i_sync_n.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8916 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_en_5.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.$verific$level_q_reg$prim_diff_decode.sv:172$8872 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cond_5.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.\gen_async.i_sync_p.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_en_4.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.\gen_async.i_sync_n.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8916 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cond_4.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.\gen_async.i_sync_p.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.$verific$gen_async.diff_pq_reg$prim_diff_decode.sv:172$8870 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_en_3.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cond_3.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.$verific$gen_async.diff_nq_reg$prim_diff_decode.sv:172$8871 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_en_2.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.$verific$gen_async.state_q_reg$prim_diff_decode.sv:172$8869 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cond_2.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_en_1.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cond_1.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_en_0.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cond_0.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.$verific$intg_err_q_reg$adc_ctrl_reg_top.sv:65$2734 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_oneshot_done_sync.\prim_flop_2sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_oneshot_done_sync.\prim_flop_2sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_oneshot_done_sync.$verific$src_level_reg$prim_pulse_sync.sv:32$8950 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_oneshot_done_sync.$verific$dst_level_q_reg$prim_pulse_sync.sv:60$8957 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\i_adc_ctrl_intr_o.$verific$intr_o_reg[0]$prim_intr_hw.sv:46$8936 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[7].u_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[7].u_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[6].u_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[6].u_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[5].u_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[5].u_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[4].u_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[4].u_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[3].u_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[3].u_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[2].u_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[2].u_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[1].u_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[1].u_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[0].u_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[0].u_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.$verific$gen_filter_status_sync[7].cfg_filter_status_q_reg$adc_ctrl_intr.sv:45$2070 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.$verific$gen_filter_status_sync[6].cfg_filter_status_q_reg$adc_ctrl_intr.sv:45$2064 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.$verific$gen_filter_status_sync[5].cfg_filter_status_q_reg$adc_ctrl_intr.sv:45$2058 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.$verific$gen_filter_status_sync[4].cfg_filter_status_q_reg$adc_ctrl_intr.sv:45$2052 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.$verific$gen_filter_status_sync[3].cfg_filter_status_q_reg$adc_ctrl_intr.sv:45$2046 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.$verific$gen_filter_status_sync[2].cfg_filter_status_q_reg$adc_ctrl_intr.sv:45$2040 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.$verific$gen_filter_status_sync[1].cfg_filter_status_q_reg$adc_ctrl_intr.sv:45$2034 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.$verific$gen_filter_status_sync[0].cfg_filter_status_q_reg$adc_ctrl_intr.sv:45$2028 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$wakeup_timer_cnt_q_reg$adc_ctrl_fsm.sv:142$1887 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$trigger_q_reg$adc_ctrl_fsm.sv:86$1849 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$pwrup_timer_cnt_q_reg$adc_ctrl_fsm.sv:102$1863 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$np_sample_cnt_q_reg$adc_ctrl_fsm.sv:128$1879 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$lp_sample_cnt_q_reg$adc_ctrl_fsm.sv:115$1871 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$fsm_state_q_reg$adc_ctrl_fsm.sv:212$1946 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$chn1_val_we_o_reg$adc_ctrl_fsm.sv:170$1918 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$chn1_val_o_reg$adc_ctrl_fsm.sv:170$1920 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$chn0_val_we_o_reg$adc_ctrl_fsm.sv:170$1917 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$chn0_val_o_reg$adc_ctrl_fsm.sv:170$1919 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$adc_ctrl_match_q_reg$adc_ctrl_fsm.sv:190$1931 ($aldff) from module adc_ctrl.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 4 unused cells and 97 unused wires.
<suppressed ~5 debug messages>

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
<suppressed ~1 debug messages>

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~295 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).
Handling D = Q on $flatten\u_reg.\u_intr_enable.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_wakeup_ctl.$verific$q_reg$prim_subreg.sv:72$9707 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_pd_ctl_pwrup_time.$verific$q_reg$prim_subreg.sv:72$9688 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_pd_ctl_lp_mode.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_lp_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9728 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_intr_ctl.$verific$q_reg$prim_subreg.sv:72$9766 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_fsm_rst.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_en_ctl_oneshot_mode.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_en_ctl_adc_enable.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_intr_ext_1.$verific$q_reg$prim_subreg.sv:72$9646 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_ext_1.$verific$q_reg$prim_subreg.sv:72$9646 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_intr_ext_0.$verific$q_reg$prim_subreg.sv:72$9646 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_ext_0.$verific$q_reg$prim_subreg.sv:72$9646 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_en_7.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cond_7.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_en_6.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cond_6.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_en_5.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cond_5.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_en_4.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cond_4.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_en_3.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cond_3.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_en_2.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cond_2.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_en_1.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cond_1.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_en_0.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cond_0.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_en_7.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cond_7.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_en_6.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cond_6.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_en_5.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cond_5.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_en_4.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cond_4.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_en_3.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cond_3.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_en_2.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cond_2.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_en_1.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cond_1.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_en_0.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cond_0.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cond_0.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_en_0.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cond_1.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_en_1.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cond_2.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_en_2.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cond_3.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_en_3.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cond_4.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_en_4.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cond_5.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_en_5.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cond_6.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_en_6.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cond_7.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_en_7.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cond_0.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_en_0.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cond_1.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_en_1.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cond_2.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_en_2.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cond_3.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_en_3.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cond_4.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_en_4.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cond_5.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_en_5.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cond_6.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_en_6.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cond_7.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_en_7.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_ext_0.$verific$q_reg$prim_subreg.sv:72$9646 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_ext_0.$verific$q_reg$prim_subreg.sv:72$9646 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_intr_ext_0.$verific$q_reg$prim_subreg.sv:72$9646 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_intr_ext_0.$verific$q_reg$prim_subreg.sv:72$9646 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_ext_1.$verific$q_reg$prim_subreg.sv:72$9646 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_ext_1.$verific$q_reg$prim_subreg.sv:72$9646 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_intr_ext_1.$verific$q_reg$prim_subreg.sv:72$9646 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_intr_ext_1.$verific$q_reg$prim_subreg.sv:72$9646 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_en_ctl_adc_enable.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_en_ctl_oneshot_mode.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_fsm_rst.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_intr_ctl.$verific$q_reg$prim_subreg.sv:72$9766 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_intr_ctl.$verific$q_reg$prim_subreg.sv:72$9766 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_intr_ctl.$verific$q_reg$prim_subreg.sv:72$9766 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_intr_ctl.$verific$q_reg$prim_subreg.sv:72$9766 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_intr_ctl.$verific$q_reg$prim_subreg.sv:72$9766 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_intr_ctl.$verific$q_reg$prim_subreg.sv:72$9766 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_intr_ctl.$verific$q_reg$prim_subreg.sv:72$9766 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_intr_ctl.$verific$q_reg$prim_subreg.sv:72$9766 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_intr_ctl.$verific$q_reg$prim_subreg.sv:72$9766 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_lp_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9728 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_lp_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9728 ($dlatch) from module adc_ctrl.
Setting constant 1-bit at position 2 on $flatten\u_reg.\u_adc_lp_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9728 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_lp_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9728 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_lp_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9728 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_lp_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9728 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_lp_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9728 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_lp_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9728 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_pd_ctl_lp_mode.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_pd_ctl_pwrup_time.$verific$q_reg$prim_subreg.sv:72$9688 ($dlatch) from module adc_ctrl.
Setting constant 1-bit at position 1 on $flatten\u_reg.\u_adc_pd_ctl_pwrup_time.$verific$q_reg$prim_subreg.sv:72$9688 ($dlatch) from module adc_ctrl.
Setting constant 1-bit at position 2 on $flatten\u_reg.\u_adc_pd_ctl_pwrup_time.$verific$q_reg$prim_subreg.sv:72$9688 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_pd_ctl_pwrup_time.$verific$q_reg$prim_subreg.sv:72$9688 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 1-bit at position 6 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 1-bit at position 9 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 1-bit at position 10 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 16 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 17 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 18 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 19 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 20 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 21 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 22 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 23 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 1-bit at position 0 on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($dlatch) from module adc_ctrl.
Setting constant 1-bit at position 1 on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($dlatch) from module adc_ctrl.
Setting constant 1-bit at position 3 on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($dlatch) from module adc_ctrl.
Setting constant 1-bit at position 4 on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($dlatch) from module adc_ctrl.
Setting constant 1-bit at position 7 on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_wakeup_ctl.$verific$q_reg$prim_subreg.sv:72$9707 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_wakeup_ctl.$verific$q_reg$prim_subreg.sv:72$9707 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_wakeup_ctl.$verific$q_reg$prim_subreg.sv:72$9707 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_wakeup_ctl.$verific$q_reg$prim_subreg.sv:72$9707 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_wakeup_ctl.$verific$q_reg$prim_subreg.sv:72$9707 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_wakeup_ctl.$verific$q_reg$prim_subreg.sv:72$9707 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_wakeup_ctl.$verific$q_reg$prim_subreg.sv:72$9707 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_wakeup_ctl.$verific$q_reg$prim_subreg.sv:72$9707 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_intr_enable.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
<suppressed ~38 debug messages>

3.11.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~271 debug messages>

yosys> opt_reduce

3.11.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
    New ctrl vector for $pmux cell $flatten\u_reg.$verific$select_879$adc_ctrl_reg_top.sv:3982$8570: { \u_reg.addr_hit [0] $flatten\u_reg.$verific$n4780$2415 $flatten\u_reg.$verific$n4783$2418 $flatten\u_reg.$verific$n4786$2421 $flatten\u_reg.$verific$n4789$2424 $flatten\u_reg.$verific$n4792$2427 $flatten\u_reg.$verific$n4795$2430 $flatten\u_reg.$verific$n4798$2433 $flatten\u_reg.$verific$n4801$2436 $flatten\u_reg.$verific$n4804$2439 $flatten\u_reg.$verific$n4807$2442 $flatten\u_reg.$verific$n4810$2445 $flatten\u_reg.$verific$n4813$2448 $flatten\u_reg.$verific$n4816$2451 $flatten\u_reg.$verific$n4819$2454 $flatten\u_reg.$verific$n4822$2457 $flatten\u_reg.$verific$n4825$2460 $flatten\u_reg.$verific$n4828$2463 $flatten\u_reg.$verific$n4831$2466 $flatten\u_reg.$verific$n4834$2469 $flatten\u_reg.$verific$n4837$2472 $flatten\u_reg.$verific$n4840$2475 $flatten\u_reg.$verific$n4843$2478 $flatten\u_reg.$verific$n4846$2481 $flatten\u_reg.$verific$n4849$2484 $flatten\u_reg.$verific$n4852$2487 $flatten\u_reg.$verific$n4858$2493 $flatten\u_reg.$verific$n4860$2495 }
  Optimizing cells in module \adc_ctrl.
Performed a total of 1 changes.

yosys> opt_merge

3.11.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
<suppressed ~252 debug messages>
Removed a total of 84 cells.

yosys> opt_dff -nodffe -nosdff

3.11.20. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$trigger_q_reg$adc_ctrl_fsm.sv:86$1849 ($adff) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\i_adc_ctrl_intr_o.$verific$intr_o_reg[0]$prim_intr_hw.sv:46$8936 ($adff) from module adc_ctrl.

yosys> opt_clean

3.11.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 11 unused cells and 116 unused wires.
<suppressed ~12 debug messages>

yosys> opt_expr

3.11.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
<suppressed ~1 debug messages>

3.11.23. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~270 debug messages>

yosys> opt_reduce

3.11.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.11.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.27. Executing OPT_DFF pass (perform DFF optimizations).
Handling D = Q on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_intr_1.$verific$q_reg$prim_subreg.sv:72$9587 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_intr_0.$verific$q_reg$prim_subreg.sv:72$9587 ($adff) from module adc_ctrl (removing D path).
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_intr_0.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_intr_0.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_intr_0.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_intr_0.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_intr_0.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_intr_0.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_intr_0.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_intr_0.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_intr_0.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_intr_0.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_intr_1.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_intr_1.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_intr_1.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_intr_1.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_intr_1.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_intr_1.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_intr_1.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_intr_1.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_intr_1.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_intr_1.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.

yosys> opt_clean

3.11.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.11.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.

3.11.30. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.31. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~270 debug messages>

yosys> opt_reduce

3.11.32. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.11.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.34. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..

yosys> opt_expr

3.11.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.

3.11.37. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~270 debug messages>

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$rspop_reg$tlul_adapter_reg.sv:80$9912 ($adff) from module adc_ctrl (D = { 2'00 \u_reg.u_reg_if.rd_req }, Q = \u_reg.u_reg_if.rspop).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$reqsz_reg$tlul_adapter_reg.sv:80$9911 ($adff) from module adc_ctrl (D = \tl_i.a_size, Q = \u_reg.u_reg_if.reqsz).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$reqid_reg$tlul_adapter_reg.sv:80$9910 ($adff) from module adc_ctrl (D = \tl_i.a_source, Q = \u_reg.u_reg_if.reqid).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$rdata_reg$tlul_adapter_reg.sv:90$9920 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_reg_if.$verific$n182$9870, Q = \u_reg.u_reg_if.rdata).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$outstanding_reg$tlul_adapter_reg.sv:67$9900 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_reg_if.$verific$n75$9850, Q = \u_reg.u_reg_if.outstanding).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$error_reg$tlul_adapter_reg.sv:90$9921 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_reg_if.$verific$n248$9852, Q = \u_reg.u_reg_if.error).
Adding EN signal on $flatten\u_reg.\u_intr_state.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($adff) from module adc_ctrl (D = \u_adc_ctrl_core.intr_state_o.d, Q = \u_reg.u_intr_state.q).
Adding EN signal on $flatten\u_reg.\u_filter_status_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9375 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_filter_status_cdc.$verific$n81$9344, Q = \u_reg.u_filter_status_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_filter_status_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9357 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_filter_status_cdc.$verific$n14$9327, Q = \u_reg.u_filter_status_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_filter_status.$verific$q_reg$prim_subreg.sv:72$9747 ($adff) from module adc_ctrl (D = \u_adc_ctrl_core.aon_filter_status_o.d, Q = \u_reg.u_filter_status.q).
Adding EN signal on $flatten\u_reg.\u_adc_wakeup_ctl_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9375 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_wakeup_ctl_cdc.$verific$n81$9344, Q = \u_reg.u_adc_wakeup_ctl_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_wakeup_ctl_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9357 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_wakeup_ctl_cdc.$verific$n14$9327, Q = \u_reg.u_adc_wakeup_ctl_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_sample_ctl_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9159 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_sample_ctl_cdc.$verific$n113$9128, Q = \u_reg.u_adc_sample_ctl_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_sample_ctl_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9141 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_sample_ctl_cdc.$verific$n14$9111, Q = \u_reg.u_adc_sample_ctl_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_pd_ctl_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9519 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_pd_ctl_cdc.$verific$n177$9488, Q = \u_reg.u_adc_pd_ctl_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_pd_ctl_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9501 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_pd_ctl_cdc.$verific$n14$9471, Q = \u_reg.u_adc_pd_ctl_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9447 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.$verific$n81$9416, Q = \u_reg.u_adc_lp_sample_ctl_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9429 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.$verific$n14$9399, Q = \u_reg.u_adc_lp_sample_ctl_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_intr_status_oneshot.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($adff) from module adc_ctrl (D = 1'1, Q = \u_reg.u_adc_intr_status_oneshot.q).
Adding EN signal on $flatten\u_reg.\u_adc_intr_status_cc_src_det_flip.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($adff) from module adc_ctrl (D = 1'1, Q = \u_reg.u_adc_intr_status_cc_src_det_flip.q).
Adding EN signal on $flatten\u_reg.\u_adc_intr_status_cc_src_det.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($adff) from module adc_ctrl (D = 1'1, Q = \u_reg.u_adc_intr_status_cc_src_det.q).
Adding EN signal on $flatten\u_reg.\u_adc_intr_status_cc_sink_det.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($adff) from module adc_ctrl (D = 1'1, Q = \u_reg.u_adc_intr_status_cc_sink_det.q).
Adding EN signal on $flatten\u_reg.\u_adc_intr_status_cc_discon.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($adff) from module adc_ctrl (D = 1'1, Q = \u_reg.u_adc_intr_status_cc_discon.q).
Adding EN signal on $flatten\u_reg.\u_adc_intr_status_cc_3a0_sink_det.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($adff) from module adc_ctrl (D = 1'1, Q = \u_reg.u_adc_intr_status_cc_3a0_sink_det.q).
Adding EN signal on $flatten\u_reg.\u_adc_intr_status_cc_1a5_src_det_flip.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($adff) from module adc_ctrl (D = 1'1, Q = \u_reg.u_adc_intr_status_cc_1a5_src_det_flip.q).
Adding EN signal on $flatten\u_reg.\u_adc_intr_status_cc_1a5_src_det.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($adff) from module adc_ctrl (D = 1'1, Q = \u_reg.u_adc_intr_status_cc_1a5_src_det.q).
Adding EN signal on $flatten\u_reg.\u_adc_intr_status_cc_1a5_sink_det.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($adff) from module adc_ctrl (D = 1'1, Q = \u_reg.u_adc_intr_status_cc_1a5_sink_det.q).
Adding EN signal on $flatten\u_reg.\u_adc_fsm_rst_cdc.$verific$src_q_reg[0]$prim_reg_cdc.sv:98$9088 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_fsm_rst_cdc.$verific$n49$9054, Q = \u_reg.u_adc_fsm_rst_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_fsm_rst_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9071 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_fsm_rst_cdc.$verific$n14$9043, Q = \u_reg.u_adc_fsm_rst_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_en_ctl_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9231 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_en_ctl_cdc.$verific$n57$9200, Q = \u_reg.u_adc_en_ctl_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_en_ctl_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9213 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_en_ctl_cdc.$verific$n14$9183, Q = \u_reg.u_adc_en_ctl_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn_val_1_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9303 ($adff) from module adc_ctrl (D = { 16'0000000000000000 \u_reg.u_adc_chn_val_1_adc_chn_value_1.q 2'00 }, Q = \u_reg.u_adc_chn_val_1_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn_val_1_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9285 ($adff) from module adc_ctrl (D = 1'0, Q = \u_reg.u_adc_chn_val_1_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_1.$verific$q_reg$prim_subreg.sv:72$9587 ($adff) from module adc_ctrl (D = \u_adc_ctrl_core.u_adc_ctrl_fsm.chn1_val_o, Q = \u_reg.u_adc_chn_val_1_adc_chn_value_1.q).
Adding EN signal on $flatten\u_reg.\u_adc_chn_val_0_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9303 ($adff) from module adc_ctrl (D = { 16'0000000000000000 \u_reg.u_adc_chn_val_0_adc_chn_value_0.q 2'00 }, Q = \u_reg.u_adc_chn_val_0_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn_val_0_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9285 ($adff) from module adc_ctrl (D = 1'0, Q = \u_reg.u_adc_chn_val_0_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_0.$verific$q_reg$prim_subreg.sv:72$9587 ($adff) from module adc_ctrl (D = \u_adc_ctrl_core.u_adc_ctrl_fsm.chn0_val_o, Q = \u_reg.u_adc_chn_val_0_adc_chn_value_0.q).
Adding EN signal on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.$verific$n177$8988, Q = \u_reg.u_adc_chn1_filter_ctl_7_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.$verific$n14$8971, Q = \u_reg.u_adc_chn1_filter_ctl_7_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.$verific$n177$8988, Q = \u_reg.u_adc_chn1_filter_ctl_6_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.$verific$n14$8971, Q = \u_reg.u_adc_chn1_filter_ctl_6_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.$verific$n177$8988, Q = \u_reg.u_adc_chn1_filter_ctl_5_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.$verific$n14$8971, Q = \u_reg.u_adc_chn1_filter_ctl_5_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.$verific$n177$8988, Q = \u_reg.u_adc_chn1_filter_ctl_4_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.$verific$n14$8971, Q = \u_reg.u_adc_chn1_filter_ctl_4_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.$verific$n177$8988, Q = \u_reg.u_adc_chn1_filter_ctl_3_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.$verific$n14$8971, Q = \u_reg.u_adc_chn1_filter_ctl_3_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.$verific$n177$8988, Q = \u_reg.u_adc_chn1_filter_ctl_2_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.$verific$n14$8971, Q = \u_reg.u_adc_chn1_filter_ctl_2_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.$verific$n177$8988, Q = \u_reg.u_adc_chn1_filter_ctl_1_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.$verific$n14$8971, Q = \u_reg.u_adc_chn1_filter_ctl_1_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.$verific$n177$8988, Q = \u_reg.u_adc_chn1_filter_ctl_0_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.$verific$n14$8971, Q = \u_reg.u_adc_chn1_filter_ctl_0_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.$verific$n177$8988, Q = \u_reg.u_adc_chn0_filter_ctl_7_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.$verific$n14$8971, Q = \u_reg.u_adc_chn0_filter_ctl_7_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.$verific$n177$8988, Q = \u_reg.u_adc_chn0_filter_ctl_6_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.$verific$n14$8971, Q = \u_reg.u_adc_chn0_filter_ctl_6_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.$verific$n177$8988, Q = \u_reg.u_adc_chn0_filter_ctl_5_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.$verific$n14$8971, Q = \u_reg.u_adc_chn0_filter_ctl_5_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.$verific$n177$8988, Q = \u_reg.u_adc_chn0_filter_ctl_4_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.$verific$n14$8971, Q = \u_reg.u_adc_chn0_filter_ctl_4_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.$verific$n177$8988, Q = \u_reg.u_adc_chn0_filter_ctl_3_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.$verific$n14$8971, Q = \u_reg.u_adc_chn0_filter_ctl_3_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.$verific$n177$8988, Q = \u_reg.u_adc_chn0_filter_ctl_2_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.$verific$n14$8971, Q = \u_reg.u_adc_chn0_filter_ctl_2_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.$verific$n177$8988, Q = \u_reg.u_adc_chn0_filter_ctl_1_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.$verific$n14$8971, Q = \u_reg.u_adc_chn0_filter_ctl_1_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.$verific$n177$8988, Q = \u_reg.u_adc_chn0_filter_ctl_0_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.$verific$n14$8971, Q = \u_reg.u_adc_chn0_filter_ctl_0_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.$verific$intg_err_q_reg$adc_ctrl_reg_top.sv:65$2734 ($adff) from module adc_ctrl (D = 1'1, Q = \u_reg.intg_err_q).
Adding EN signal on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$wakeup_timer_cnt_q_reg$adc_ctrl_fsm.sv:142$1887 ($adff) from module adc_ctrl (D = $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$n438$1797, Q = \u_adc_ctrl_core.u_adc_ctrl_fsm.wakeup_timer_cnt_q).
Adding EN signal on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$pwrup_timer_cnt_q_reg$adc_ctrl_fsm.sv:102$1863 ($adff) from module adc_ctrl (D = $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$n55$1779, Q = \u_adc_ctrl_core.u_adc_ctrl_fsm.pwrup_timer_cnt_q).
Adding EN signal on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$np_sample_cnt_q_reg$adc_ctrl_fsm.sv:128$1879 ($adff) from module adc_ctrl (D = $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$n249$1791, Q = \u_adc_ctrl_core.u_adc_ctrl_fsm.np_sample_cnt_q).
Adding EN signal on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$lp_sample_cnt_q_reg$adc_ctrl_fsm.sv:115$1871 ($adff) from module adc_ctrl (D = $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$n124$1785, Q = \u_adc_ctrl_core.u_adc_ctrl_fsm.lp_sample_cnt_q).
Adding EN signal on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$chn1_val_o_reg$adc_ctrl_fsm.sv:170$1920 ($adff) from module adc_ctrl (D = \adc_i.data, Q = \u_adc_ctrl_core.u_adc_ctrl_fsm.chn1_val_o).
Adding EN signal on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$chn0_val_o_reg$adc_ctrl_fsm.sv:170$1919 ($adff) from module adc_ctrl (D = \adc_i.data, Q = \u_adc_ctrl_core.u_adc_ctrl_fsm.chn0_val_o).
Adding EN signal on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$adc_ctrl_match_q_reg$adc_ctrl_fsm.sv:190$1931 ($adff) from module adc_ctrl (D = \u_adc_ctrl_core.match, Q = \u_adc_ctrl_core.u_adc_ctrl_fsm.adc_ctrl_match_q).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$11071 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$11071 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$11071 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$11071 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$11071 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$11071 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$11071 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$11071 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$11050 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$11050 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$11050 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$11050 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$11050 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$11050 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$11050 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$11050 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$11050 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$11050 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$11044 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$11044 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$11044 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$11044 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$11044 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$11044 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$11044 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$11044 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$11044 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$11044 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$11038 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$11038 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$11038 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$11038 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$11038 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$11038 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$11038 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$11038 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$11038 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$11038 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$11032 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$11032 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$11032 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$11032 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$11032 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$11032 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$11032 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$11032 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$11032 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$11032 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$11026 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$11026 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$11026 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$11026 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$11026 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$11026 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$11026 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$11026 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$11026 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$11026 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$11020 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$11020 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$11020 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$11020 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$11020 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$11020 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$11020 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$11020 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$11020 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$11020 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$11014 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$11014 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$11014 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$11014 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$11014 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$11014 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$11014 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$11014 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$11014 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$11014 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$11008 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$11008 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$11008 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$11008 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$11008 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$11008 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$11008 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$11008 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$11008 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$11008 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$11002 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$11002 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$11002 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$11002 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$11002 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$11002 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$11002 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$11002 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$11002 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$11002 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$10996 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$10996 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$10996 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$10996 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$10996 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$10996 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$10996 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$10996 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$10996 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$10996 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$10990 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$10990 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$10990 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$10990 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$10990 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$10990 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$10990 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$10990 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$10990 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$10990 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$10984 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$10984 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$10984 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$10984 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$10984 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$10984 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$10984 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$10984 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$10984 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$10984 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$10978 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$10978 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$10978 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$10978 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$10978 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$10978 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$10978 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$10978 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$10978 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$10978 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$10972 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$10972 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$10972 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$10972 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$10972 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$10972 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$10972 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$10972 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$10972 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$10972 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$10966 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$10966 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$10966 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$10966 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$10966 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$10966 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$10966 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$10966 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$10966 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$10966 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$10960 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$10960 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$10960 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$10960 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$10960 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$10960 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$10960 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$10960 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$10960 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$10960 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$10958 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$10957 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$10957 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 12 on $auto$ff.cc:262:slice$10957 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$10957 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$10957 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$10957 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$10957 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$10957 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 18 on $auto$ff.cc:262:slice$10957 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 19 on $auto$ff.cc:262:slice$10957 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 20 on $auto$ff.cc:262:slice$10957 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 21 on $auto$ff.cc:262:slice$10957 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 22 on $auto$ff.cc:262:slice$10957 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 23 on $auto$ff.cc:262:slice$10957 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 24 on $auto$ff.cc:262:slice$10957 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 25 on $auto$ff.cc:262:slice$10957 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 26 on $auto$ff.cc:262:slice$10957 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 27 on $auto$ff.cc:262:slice$10957 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$10955 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$10954 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$10954 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 12 on $auto$ff.cc:262:slice$10954 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$10954 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$10954 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$10954 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$10954 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$10954 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 18 on $auto$ff.cc:262:slice$10954 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 19 on $auto$ff.cc:262:slice$10954 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 20 on $auto$ff.cc:262:slice$10954 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 21 on $auto$ff.cc:262:slice$10954 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 22 on $auto$ff.cc:262:slice$10954 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 23 on $auto$ff.cc:262:slice$10954 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 24 on $auto$ff.cc:262:slice$10954 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 25 on $auto$ff.cc:262:slice$10954 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 26 on $auto$ff.cc:262:slice$10954 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 27 on $auto$ff.cc:262:slice$10954 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$10921 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$10921 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$10921 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$10908 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$10908 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$10908 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$10908 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$10908 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$10908 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$10908 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$10908 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$10893 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$10893 ($adffe) from module adc_ctrl.

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 35 unused cells and 34 unused wires.
<suppressed ~42 debug messages>

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
<suppressed ~77 debug messages>

3.13.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~242 debug messages>

yosys> opt_reduce

3.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
<suppressed ~81 debug messages>
Removed a total of 27 cells.

yosys> opt_dff -sat

3.13.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[0].u_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($adff) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn_val_0_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($adff) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn_val_1_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($adff) from module adc_ctrl.

yosys> opt_clean

3.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 30 unused cells and 85 unused wires.
<suppressed ~85 debug messages>

yosys> opt_expr

3.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.

3.13.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~232 debug messages>

yosys> opt_reduce

3.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.20. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[0].u_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($adff) from module adc_ctrl.

yosys> opt_clean

3.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..

yosys> opt_expr

3.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.

3.13.23. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~232 debug messages>

yosys> opt_reduce

3.13.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.13.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.27. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.$verific$gen_filter_status_sync[0].cfg_filter_status_q_reg$adc_ctrl_intr.sv:45$2028 ($adff) from module adc_ctrl.

yosys> opt_clean

3.13.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..

yosys> opt_expr

3.13.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
<suppressed ~2 debug messages>

3.13.30. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.31. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~232 debug messages>

yosys> opt_reduce

3.13.32. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.13.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
<suppressed ~21 debug messages>
Removed a total of 7 cells.

yosys> opt_dff -sat

3.13.34. Executing OPT_DFF pass (perform DFF optimizations).
Handling never-active EN on $auto$ff.cc:262:slice$10934 ($adffe) from module adc_ctrl (removing D path).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$10934 ($dlatch) from module adc_ctrl.

yosys> opt_clean

3.13.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.13.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.

3.13.37. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.38. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~232 debug messages>

yosys> opt_reduce

3.13.39. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.13.40. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.41. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.42. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..

yosys> opt_expr

3.13.43. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.

3.13.44. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 2 bits (of 3) from port B of cell adc_ctrl.$flatten\u_reg.\u_reg_if.$verific$equal_8$tlul_adapter_reg.sv:55$9880 ($eq).
Removed top 31 bits (of 32) from port A of cell adc_ctrl.$flatten\u_reg.\u_reg_if.\u_err.$verific$shift_left_18$tlul_err.sv:44$10529 ($shl).
Removed top 28 bits (of 32) from port Y of cell adc_ctrl.$flatten\u_reg.\u_reg_if.\u_err.$verific$shift_left_18$tlul_err.sv:44$10529 ($shl).
Removed top 1 bits (of 5) from port B of cell adc_ctrl.$flatten\u_reg.$verific$equal_347$adc_ctrl_reg_top.sv:3681$8286 ($eq).
Removed top 1 bits (of 5) from port B of cell adc_ctrl.$flatten\u_reg.$verific$equal_345$adc_ctrl_reg_top.sv:3680$8285 ($eq).
Removed top 1 bits (of 5) from port B of cell adc_ctrl.$flatten\u_reg.$verific$equal_343$adc_ctrl_reg_top.sv:3679$8284 ($eq).
Removed top 1 bits (of 5) from port B of cell adc_ctrl.$flatten\u_reg.$verific$equal_341$adc_ctrl_reg_top.sv:3678$8283 ($eq).
Removed top 1 bits (of 5) from port B of cell adc_ctrl.$flatten\u_reg.$verific$equal_339$adc_ctrl_reg_top.sv:3677$8282 ($eq).
Removed top 1 bits (of 5) from port B of cell adc_ctrl.$flatten\u_reg.$verific$equal_337$adc_ctrl_reg_top.sv:3676$8281 ($eq).
Removed top 1 bits (of 5) from port B of cell adc_ctrl.$flatten\u_reg.$verific$equal_335$adc_ctrl_reg_top.sv:3675$8280 ($eq).
Removed top 1 bits (of 5) from port B of cell adc_ctrl.$flatten\u_reg.$verific$equal_333$adc_ctrl_reg_top.sv:3674$8279 ($eq).
Removed top 2 bits (of 5) from port B of cell adc_ctrl.$flatten\u_reg.$verific$equal_331$adc_ctrl_reg_top.sv:3673$8278 ($eq).
Removed top 2 bits (of 5) from port B of cell adc_ctrl.$flatten\u_reg.$verific$equal_329$adc_ctrl_reg_top.sv:3672$8277 ($eq).
Removed top 2 bits (of 5) from port B of cell adc_ctrl.$flatten\u_reg.$verific$equal_327$adc_ctrl_reg_top.sv:3671$8276 ($eq).
Removed top 2 bits (of 5) from port B of cell adc_ctrl.$flatten\u_reg.$verific$equal_325$adc_ctrl_reg_top.sv:3670$8275 ($eq).
Removed top 3 bits (of 5) from port B of cell adc_ctrl.$flatten\u_reg.$verific$equal_323$adc_ctrl_reg_top.sv:3669$8274 ($eq).
Removed top 3 bits (of 5) from port B of cell adc_ctrl.$flatten\u_reg.$verific$equal_321$adc_ctrl_reg_top.sv:3668$8273 ($eq).
Removed top 4 bits (of 5) from port B of cell adc_ctrl.$flatten\u_reg.$verific$equal_319$adc_ctrl_reg_top.sv:3667$8272 ($eq).
Removed top 3 bits (of 4) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$add_19$adc_ctrl_fsm.sv:92$1856 ($add).
Removed top 7 bits (of 8) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$add_31$adc_ctrl_fsm.sv:105$1864 ($add).
Removed top 15 bits (of 16) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$add_43$adc_ctrl_fsm.sv:118$1872 ($add).
Removed top 23 bits (of 24) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$add_55$adc_ctrl_fsm.sv:132$1880 ($add).
Removed top 3 bits (of 5) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$equal_67$adc_ctrl_fsm.sv:145$1888 ($eq).
Removed top 2 bits (of 5) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$equal_68$adc_ctrl_fsm.sv:145$1889 ($eq).
Removed top 1 bits (of 5) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$equal_70$adc_ctrl_fsm.sv:145$1891 ($eq).
Removed top 2 bits (of 5) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$equal_77$adc_ctrl_fsm.sv:149$1898 ($eq).
Removed top 1 bits (of 5) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$equal_78$adc_ctrl_fsm.sv:149$1899 ($eq).
Removed top 1 bits (of 5) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$equal_80$adc_ctrl_fsm.sv:149$1901 ($eq).
Removed top 7 bits (of 8) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$equal_110$adc_ctrl_fsm.sv:175$1921 ($eq).
Removed top 1 bits (of 5) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$equal_111$adc_ctrl_fsm.sv:175$1922 ($eq).
Removed top 1 bits (of 4) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$not_equal_180$adc_ctrl_fsm.sv:241$1949 ($ne).
Removed top 1 bits (of 4) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$equal_181$adc_ctrl_fsm.sv:244$1950 ($eq).
Removed top 5 bits (of 8) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$LessThan_201$adc_ctrl_fsm.sv:322$1956 ($lt).
Removed top 5 bits (of 8) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$equal_204$adc_ctrl_fsm.sv:329$1959 ($eq).
Removed top 13 bits (of 24) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$not_equal_215$adc_ctrl_fsm.sv:338$1967 ($ne).
Removed top 13 bits (of 24) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$equal_216$adc_ctrl_fsm.sv:341$1968 ($eq).
Removed top 8 bits (of 16) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$LessThan_235$adc_ctrl_fsm.sv:388$1973 ($lt).
Removed top 8 bits (of 16) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$equal_238$adc_ctrl_fsm.sv:395$1976 ($eq).
Removed top 8 bits (of 9) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.$verific$and_94$adc_ctrl_intr.sv:77$2092 ($and).
Removed top 15 bits (of 16) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.$verific$and_244$adc_ctrl_core.sv:107$1541 ($and).
Removed top 9 bits (of 10) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.$verific$LessThan_122$adc_ctrl_core.sv:104$1476 ($le).
Removed top 9 bits (of 10) from port A of cell adc_ctrl.$flatten\u_adc_ctrl_core.$verific$LessThan_121$adc_ctrl_core.sv:104$1475 ($le).
Removed top 9 bits (of 10) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.$verific$LessThan_113$adc_ctrl_core.sv:101$1469 ($le).
Removed top 9 bits (of 10) from port A of cell adc_ctrl.$flatten\u_adc_ctrl_core.$verific$LessThan_112$adc_ctrl_core.sv:101$1468 ($le).
Removed top 3 bits (of 4) from wire adc_ctrl.$flatten\u_reg.$verific$n3685$2597.
Removed top 2 bits (of 4) from wire adc_ctrl.$flatten\u_reg.$verific$n3728$2599.

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 2 unused cells and 6 unused wires.
<suppressed ~3 debug messages>

yosys> alumacc

3.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module adc_ctrl:
  creating $macc model for $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$add_19$adc_ctrl_fsm.sv:92$1856 ($add).
  creating $macc model for $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$add_31$adc_ctrl_fsm.sv:105$1864 ($add).
  creating $macc model for $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$add_43$adc_ctrl_fsm.sv:118$1872 ($add).
  creating $macc model for $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$add_55$adc_ctrl_fsm.sv:132$1880 ($add).
  creating $alu model for $macc $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$add_55$adc_ctrl_fsm.sv:132$1880.
  creating $alu model for $macc $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$add_43$adc_ctrl_fsm.sv:118$1872.
  creating $alu model for $macc $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$add_31$adc_ctrl_fsm.sv:105$1864.
  creating $alu model for $macc $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$add_19$adc_ctrl_fsm.sv:92$1856.
  creating $alu model for $flatten\u_adc_ctrl_core.$verific$LessThan_112$adc_ctrl_core.sv:101$1468 ($le): new $alu
  creating $alu model for $flatten\u_adc_ctrl_core.$verific$LessThan_113$adc_ctrl_core.sv:101$1469 ($le): merged with $flatten\u_adc_ctrl_core.$verific$LessThan_112$adc_ctrl_core.sv:101$1468.
  creating $alu model for $flatten\u_adc_ctrl_core.$verific$LessThan_121$adc_ctrl_core.sv:104$1475 ($le): new $alu
  creating $alu model for $flatten\u_adc_ctrl_core.$verific$LessThan_122$adc_ctrl_core.sv:104$1476 ($le): merged with $flatten\u_adc_ctrl_core.$verific$LessThan_121$adc_ctrl_core.sv:104$1475.
  creating $alu model for $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$LessThan_201$adc_ctrl_fsm.sv:322$1956 ($lt): new $alu
  creating $alu model for $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$LessThan_235$adc_ctrl_fsm.sv:388$1973 ($lt): new $alu
  creating $alu model for $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$equal_204$adc_ctrl_fsm.sv:329$1959 ($eq): merged with $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$LessThan_201$adc_ctrl_fsm.sv:322$1956.
  creating $alu model for $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$equal_238$adc_ctrl_fsm.sv:395$1976 ($eq): merged with $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$LessThan_235$adc_ctrl_fsm.sv:388$1973.
  creating $alu cell for $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$LessThan_235$adc_ctrl_fsm.sv:388$1973, $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$equal_238$adc_ctrl_fsm.sv:395$1976: $auto$alumacc.cc:485:replace_alu$11182
  creating $alu cell for $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$LessThan_201$adc_ctrl_fsm.sv:322$1956, $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$equal_204$adc_ctrl_fsm.sv:329$1959: $auto$alumacc.cc:485:replace_alu$11193
  creating $alu cell for $flatten\u_adc_ctrl_core.$verific$LessThan_121$adc_ctrl_core.sv:104$1475, $flatten\u_adc_ctrl_core.$verific$LessThan_122$adc_ctrl_core.sv:104$1476: $auto$alumacc.cc:485:replace_alu$11204
  creating $alu cell for $flatten\u_adc_ctrl_core.$verific$LessThan_112$adc_ctrl_core.sv:101$1468, $flatten\u_adc_ctrl_core.$verific$LessThan_113$adc_ctrl_core.sv:101$1469: $auto$alumacc.cc:485:replace_alu$11219
  creating $alu cell for $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$add_19$adc_ctrl_fsm.sv:92$1856: $auto$alumacc.cc:485:replace_alu$11234
  creating $alu cell for $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$add_31$adc_ctrl_fsm.sv:105$1864: $auto$alumacc.cc:485:replace_alu$11237
  creating $alu cell for $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$add_43$adc_ctrl_fsm.sv:118$1872: $auto$alumacc.cc:485:replace_alu$11240
  creating $alu cell for $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$add_55$adc_ctrl_fsm.sv:132$1880: $auto$alumacc.cc:485:replace_alu$11243
  created 8 $alu and 0 $macc cells.

yosys> opt

3.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
<suppressed ~1 debug messages>

yosys> opt_merge -nomux

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~232 debug messages>

yosys> opt_reduce

3.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$11130: { $flatten\u_reg.$verific$n4840$2475 $flatten\u_reg.$verific$n4843$2478 $flatten\u_reg.$verific$n4852$2487 $flatten\u_reg.$verific$n4858$2493 $flatten\u_reg.$verific$n4860$2495 $auto$rtlil.cc:2398:Or$11107 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$11174: { $flatten\u_reg.$verific$n4819$2454 $flatten\u_reg.$verific$n4822$2457 $flatten\u_reg.$verific$n4831$2466 $flatten\u_reg.$verific$n4834$2469 $flatten\u_reg.$verific$n4837$2472 $flatten\u_reg.$verific$n4840$2475 $flatten\u_reg.$verific$n4843$2478 $flatten\u_reg.$verific$n4852$2487 $flatten\u_reg.$verific$n4858$2493 $flatten\u_reg.$verific$n4860$2495 $auto$rtlil.cc:2398:Or$11107 $auto$rtlil.cc:2398:Or$11123 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$11170: { $auto$rtlil.cc:2398:Or$11143 $flatten\u_reg.$verific$n4798$2433 $flatten\u_reg.$verific$n4801$2436 $flatten\u_reg.$verific$n4810$2445 $flatten\u_reg.$verific$n4813$2448 $flatten\u_reg.$verific$n4816$2451 }
  Optimizing cells in module \adc_ctrl.
Performed a total of 3 changes.

yosys> opt_merge

3.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 0 unused cells and 8 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.

3.19.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~232 debug messages>

yosys> opt_reduce

3.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..

yosys> opt_expr

3.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.

3.19.16. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.20. Printing statistics.

=== adc_ctrl ===

   Number of wires:               4832
   Number of wire bits:          18147
   Number of public wires:        3975
   Number of public wire bits:   14830
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1463
     $adff                         219
     $adffe                         65
     $alu                            8
     $and                          274
     $bmux                          27
     $eq                            42
     $logic_not                      2
     $mux                          443
     $ne                             3
     $not                          118
     $or                           141
     $reduce_and                     7
     $reduce_bool                   51
     $reduce_or                     26
     $reduce_xor                    28
     $shl                            1
     $xor                            8


yosys> memory -nomap

3.21. Executing MEMORY pass.

yosys> opt_mem

3.21.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.21.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.21.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.21.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.21.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `$auto$memory_bmux2rom.cc:63:execute$11252'[0] in module `\adc_ctrl': no output FF found.
Checking read port `$auto$memory_bmux2rom.cc:63:execute$11249'[0] in module `\adc_ctrl': no output FF found.
Checking read port `$auto$memory_bmux2rom.cc:63:execute$11246'[0] in module `\adc_ctrl': no output FF found.
Checking read port address `$auto$memory_bmux2rom.cc:63:execute$11252'[0] in module `\adc_ctrl': address FF has async set and/or reset, not supported.
Checking read port address `$auto$memory_bmux2rom.cc:63:execute$11249'[0] in module `\adc_ctrl': address FF has async set and/or reset, not supported.
Checking read port address `$auto$memory_bmux2rom.cc:63:execute$11246'[0] in module `\adc_ctrl': address FF has async set and/or reset, not supported.

yosys> opt_clean

3.21.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..

yosys> memory_share

3.21.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.21.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.21.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..

yosys> memory_collect

3.21.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.22. Printing statistics.

=== adc_ctrl ===

   Number of wires:               4832
   Number of wire bits:          18147
   Number of public wires:        3975
   Number of public wire bits:   14830
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1463
     $adff                         219
     $adffe                         65
     $alu                            8
     $and                          274
     $bmux                          24
     $eq                            42
     $logic_not                      2
     $mem_v2                         3
     $mux                          443
     $ne                             3
     $not                          118
     $or                           141
     $reduce_and                     7
     $reduce_bool                   51
     $reduce_or                     26
     $reduce_xor                    28
     $shl                            1
     $xor                            8


yosys> opt_clean

3.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..

yosys> stat

3.24. Printing statistics.

=== adc_ctrl ===

   Number of wires:               4832
   Number of wire bits:          18147
   Number of public wires:        3975
   Number of public wire bits:   14830
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1463
     $adff                         219
     $adffe                         65
     $alu                            8
     $and                          274
     $bmux                          24
     $eq                            42
     $logic_not                      2
     $mem_v2                         3
     $mux                          443
     $ne                             3
     $not                          118
     $or                           141
     $reduce_and                     7
     $reduce_bool                   51
     $reduce_or                     26
     $reduce_xor                    28
     $shl                            1
     $xor                            8


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.25. Executing TECHMAP pass (map to technology primitives).

3.25.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.25.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.25.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $bmux.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $reduce_and.
Using template $paramod$1f812f0514ea3255703342654e053e2c502325cc\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $eq.
Using template $paramod$constmap:66d421c313e4e958be776b99540ac2de3b59fdbc$paramod$77562a466236eb4a6d905351a0995599b75075cb\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using extmapper simplemap for cells of type $reduce_xor.
Using template $paramod$c3cd1564c35d873179656addd6052d7ea8b6d991\_90_alu for cells of type $alu.
Using template $paramod$2af30114e9bd4ccb04dad757b3f0a8f6bf0615b0\_90_alu for cells of type $alu.
Using template $paramod$79aa992f2eb7f354d4aaf651790713cf239111fa\_90_alu for cells of type $alu.
Using template $paramod$754650b284649a026620fc6856e5b6886cbfe794\_90_alu for cells of type $alu.
Using template $paramod$fa8d9e4c2749d63ae521a69564d54ead1ad1232d\_90_alu for cells of type $alu.
Using template $paramod$32a7b7b86c07519b7537abc18e96f0331f97914d\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000011000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010000 for cells of type $lcu.
No more expansions possible.
<suppressed ~3408 debug messages>

yosys> stat

3.26. Printing statistics.

=== adc_ctrl ===

   Number of wires:               5864
   Number of wire bits:          32741
   Number of public wires:        3975
   Number of public wire bits:   14830
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               6763
     $_AND_                        665
     $_DFFE_PN0P_                  596
     $_DFFE_PN1P_                   11
     $_DFF_PN0_                    220
     $_DFF_PN1_                      7
     $_MUX_                       3285
     $_NOT_                        266
     $_OR_                         680
     $_XOR_                       1030
     $mem_v2                         3


yosys> opt

3.27. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
<suppressed ~1774 debug messages>

yosys> opt_merge -nomux

3.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
<suppressed ~3321 debug messages>
Removed a total of 1107 cells.

yosys> opt_muxtree

3.27.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.27.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$11445 ($_DFF_PN0_) from module adc_ctrl (D = \gen_alert_tx[0].u_prim_alert_sender.state_d [2], Q = \gen_alert_tx[0].u_prim_alert_sender.state_q [2]).
Adding EN signal on $auto$ff.cc:262:slice$11443 ($_DFF_PN0_) from module adc_ctrl (D = \gen_alert_tx[0].u_prim_alert_sender.state_d [0], Q = \gen_alert_tx[0].u_prim_alert_sender.state_q [0]).
Adding EN signal on $auto$ff.cc:262:slice$11444 ($_DFF_PN0_) from module adc_ctrl (D = \gen_alert_tx[0].u_prim_alert_sender.state_d [1], Q = \gen_alert_tx[0].u_prim_alert_sender.state_q [1]).

yosys> opt_clean

3.27.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 383 unused cells and 1097 unused wires.
<suppressed ~392 debug messages>

yosys> opt_expr

3.27.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
<suppressed ~35 debug messages>

3.27.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.27.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.27.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
<suppressed ~84 debug messages>
Removed a total of 28 cells.

yosys> opt_dff

3.27.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$11378 ($_DFF_PN0_) from module adc_ctrl (D = \gen_alert_tx[0].u_prim_alert_sender.i_decode_ack.gen_async.state_d [1], Q = \gen_alert_tx[0].u_prim_alert_sender.i_decode_ack.gen_async.state_q [1]).
Adding EN signal on $auto$ff.cc:262:slice$11377 ($_DFF_PN0_) from module adc_ctrl (D = \gen_alert_tx[0].u_prim_alert_sender.i_decode_ack.gen_async.state_d [0], Q = \gen_alert_tx[0].u_prim_alert_sender.i_decode_ack.gen_async.state_q [0]).
Adding EN signal on $auto$ff.cc:262:slice$11432 ($_DFF_PN0_) from module adc_ctrl (D = \gen_alert_tx[0].u_prim_alert_sender.i_decode_ping.gen_async.state_d [1], Q = \gen_alert_tx[0].u_prim_alert_sender.i_decode_ping.gen_async.state_q [1]).
Adding EN signal on $auto$ff.cc:262:slice$11431 ($_DFF_PN0_) from module adc_ctrl (D = \gen_alert_tx[0].u_prim_alert_sender.i_decode_ping.gen_async.state_d [0], Q = \gen_alert_tx[0].u_prim_alert_sender.i_decode_ping.gen_async.state_q [0]).
Adding EN signal on $auto$ff.cc:262:slice$17333 ($_DFF_PN0_) from module adc_ctrl (D = \u_adc_ctrl_core.u_adc_ctrl_fsm.fsm_state_d [4], Q = \u_adc_ctrl_core.u_adc_ctrl_fsm.fsm_state_q [4]).
Adding EN signal on $auto$ff.cc:262:slice$17332 ($_DFF_PN0_) from module adc_ctrl (D = \u_adc_ctrl_core.u_adc_ctrl_fsm.fsm_state_d [3], Q = \u_adc_ctrl_core.u_adc_ctrl_fsm.fsm_state_q [3]).
Adding EN signal on $auto$ff.cc:262:slice$17331 ($_DFF_PN0_) from module adc_ctrl (D = \u_adc_ctrl_core.u_adc_ctrl_fsm.fsm_state_d [2], Q = \u_adc_ctrl_core.u_adc_ctrl_fsm.fsm_state_q [2]).
Adding EN signal on $auto$ff.cc:262:slice$17330 ($_DFF_PN0_) from module adc_ctrl (D = \u_adc_ctrl_core.u_adc_ctrl_fsm.fsm_state_d [1], Q = \u_adc_ctrl_core.u_adc_ctrl_fsm.fsm_state_q [1]).
Adding EN signal on $auto$ff.cc:262:slice$17329 ($_DFF_PN0_) from module adc_ctrl (D = \u_adc_ctrl_core.u_adc_ctrl_fsm.fsm_state_d [0], Q = \u_adc_ctrl_core.u_adc_ctrl_fsm.fsm_state_q [0]).

yosys> opt_clean

3.27.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 0 unused cells and 66 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.27.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
<suppressed ~123 debug messages>

3.27.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.27.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.27.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
<suppressed ~357 debug messages>
Removed a total of 119 cells.

yosys> opt_dff

3.27.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 0 unused cells and 121 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.27.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.

3.27.23. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.27.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.27.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.27. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..

yosys> opt_expr

3.27.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.

3.27.30. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
<suppressed ~361 debug messages>

yosys> opt_merge

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

yosys> opt_dff

3.28.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$20004 ($_DFFE_PN0P_) from module adc_ctrl (D = \u_adc_ctrl_core.u_adc_ctrl_fsm.fsm_state_d [0], Q = \u_adc_ctrl_core.u_adc_ctrl_fsm.fsm_state_q [0]).
Adding EN signal on $auto$ff.cc:262:slice$19881 ($_DFFE_PN0P_) from module adc_ctrl (D = \u_adc_ctrl_core.u_adc_ctrl_fsm.fsm_state_d [2], Q = \u_adc_ctrl_core.u_adc_ctrl_fsm.fsm_state_q [2]).
Adding EN signal on $auto$ff.cc:262:slice$19819 ($_DFFE_PN0P_) from module adc_ctrl (D = \u_adc_ctrl_core.u_adc_ctrl_fsm.fsm_state_d [3], Q = \u_adc_ctrl_core.u_adc_ctrl_fsm.fsm_state_q [3]).

yosys> opt_clean

3.28.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 0 unused cells and 92 unused wires.
<suppressed ~1 debug messages>

3.28.5. Rerunning OPT passes. (Removed registers in this run.)

yosys> opt_expr -full

3.28.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
<suppressed ~446 debug messages>

yosys> opt_merge

3.28.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
<suppressed ~111 debug messages>
Removed a total of 37 cells.

yosys> opt_dff

3.28.8. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 0 unused cells and 32 unused wires.
<suppressed ~1 debug messages>

3.28.10. Finished fast OPT passes.

yosys> memory_map

3.29. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory $auto$memory_bmux2rom.cc:63:execute$11246 in module \adc_ctrl:
  created 32 $dff cells and 0 static cells of width 1.
  read interface: 0 $dff and 31 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $auto$memory_bmux2rom.cc:63:execute$11249 in module \adc_ctrl:
  created 32 $dff cells and 0 static cells of width 1.
  read interface: 0 $dff and 31 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $auto$memory_bmux2rom.cc:63:execute$11252 in module \adc_ctrl:
  created 32 $dff cells and 0 static cells of width 2.
  read interface: 0 $dff and 31 $mux cells.
  write interface: 0 write mux blocks.

yosys> opt -full

3.30. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
<suppressed ~2 debug messages>

yosys> opt_merge -nomux

3.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_muxtree

3.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~3 debug messages>

yosys> opt_reduce -full

3.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_share

3.30.6. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$11416 in front of them:
        $auto$simplemap.cc:278:simplemap_mux$11400
        $auto$simplemap.cc:278:simplemap_mux$11396

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$11421 in front of them:
        $auto$simplemap.cc:278:simplemap_mux$11401
        $auto$simplemap.cc:278:simplemap_mux$11397

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$17703 in front of them:
        $auto$simplemap.cc:312:simplemap_bmux$17632
        $auto$simplemap.cc:312:simplemap_bmux$17627


yosys> opt_dff

3.30.7. Executing OPT_DFF pass (perform DFF optimizations).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11246[0]$20311 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11246[1]$20313 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11246[2]$20315 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11246[3]$20317 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11246[4]$20319 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11246[5]$20321 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11246[6]$20323 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11246[7]$20325 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11246[8]$20327 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11246[9]$20329 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11246[10]$20331 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11246[11]$20333 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11246[12]$20335 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11246[13]$20337 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11246[14]$20339 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11246[15]$20341 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11246[16]$20343 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11246[17]$20345 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11246[18]$20347 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11246[19]$20349 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11246[20]$20351 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11246[21]$20353 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11246[22]$20355 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11246[23]$20357 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11246[24]$20359 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11246[25]$20361 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11246[26]$20363 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11246[27]$20365 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11246[28]$20367 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11246[29]$20369 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11246[30]$20371 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11246[31]$20373 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11249[0]$20468 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11249[1]$20470 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11249[2]$20472 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11249[3]$20474 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11249[4]$20476 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11249[5]$20478 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11249[6]$20480 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11249[7]$20482 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11249[8]$20484 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11249[9]$20486 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11249[10]$20488 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11249[11]$20490 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11249[12]$20492 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11249[13]$20494 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11249[14]$20496 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11249[15]$20498 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11249[16]$20500 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11249[17]$20502 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11249[18]$20504 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11249[19]$20506 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11249[20]$20508 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11249[21]$20510 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11249[22]$20512 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11249[23]$20514 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11249[24]$20516 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11249[25]$20518 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11249[26]$20520 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11249[27]$20522 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11249[28]$20524 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11249[29]$20526 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11249[30]$20528 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11249[31]$20530 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11252[0]$20625 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11252[1]$20627 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11252[2]$20629 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11252[3]$20631 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11252[4]$20633 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11252[5]$20635 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11252[6]$20637 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11252[7]$20639 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11252[8]$20641 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11252[9]$20643 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11252[10]$20645 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11252[11]$20647 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11252[12]$20649 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11252[13]$20651 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11252[14]$20653 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11252[15]$20655 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11252[16]$20657 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11252[17]$20659 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11252[18]$20661 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11252[19]$20663 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11252[20]$20665 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11252[21]$20667 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11252[22]$20669 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11252[23]$20671 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11252[24]$20673 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11252[25]$20675 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11252[26]$20677 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11252[27]$20679 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11252[28]$20681 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11252[29]$20683 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11252[30]$20685 ($dff) from module adc_ctrl (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11252[31]$20687 ($dff) from module adc_ctrl (removing D path).

yosys> opt_clean

3.30.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 0 unused cells and 292 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.30.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
<suppressed ~68 debug messages>

3.30.10. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.30.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~6 debug messages>

yosys> opt_reduce -full

3.30.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$11252$rdmux[0][4][1]$20737:
      Old ports: A=2'00, B=2'01, Y=$memory$auto$memory_bmux2rom.cc:63:execute$11252$rdmux[0][3][0]$b$20712
      New ports: A=1'0, B=1'1, Y=$memory$auto$memory_bmux2rom.cc:63:execute$11252$rdmux[0][3][0]$b$20712 [0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$11252$rdmux[0][3][0]$b$20712 [1] = 1'0
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$11252$rdmux[0][4][2]$20740:
      Old ports: A=2'00, B=2'10, Y=$memory$auto$memory_bmux2rom.cc:63:execute$11252$rdmux[0][3][1]$a$20714
      New ports: A=1'0, B=1'1, Y=$memory$auto$memory_bmux2rom.cc:63:execute$11252$rdmux[0][3][1]$a$20714 [1]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$11252$rdmux[0][3][1]$a$20714 [0] = 1'0
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$11252$rdmux[0][4][3]$20743:
      Old ports: A=2'00, B=2'01, Y=$memory$auto$memory_bmux2rom.cc:63:execute$11252$rdmux[0][3][1]$b$20715
      New ports: A=1'0, B=1'1, Y=$memory$auto$memory_bmux2rom.cc:63:execute$11252$rdmux[0][3][1]$b$20715 [0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$11252$rdmux[0][3][1]$b$20715 [1] = 1'0
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$11252$rdmux[0][4][4]$20746:
      Old ports: A=2'00, B=2'10, Y=$memory$auto$memory_bmux2rom.cc:63:execute$11252$rdmux[0][3][2]$a$20717
      New ports: A=1'0, B=1'1, Y=$memory$auto$memory_bmux2rom.cc:63:execute$11252$rdmux[0][3][2]$a$20717 [1]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$11252$rdmux[0][3][2]$a$20717 [0] = 1'0
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$11252$rdmux[0][4][6]$20752:
      Old ports: A=2'00, B=2'01, Y=$memory$auto$memory_bmux2rom.cc:63:execute$11252$rdmux[0][3][3]$a$20720
      New ports: A=1'0, B=1'1, Y=$memory$auto$memory_bmux2rom.cc:63:execute$11252$rdmux[0][3][3]$a$20720 [0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$11252$rdmux[0][3][3]$a$20720 [1] = 1'0
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$11252$rdmux[0][4][7]$20755:
      Old ports: A=2'00, B=2'10, Y=$memory$auto$memory_bmux2rom.cc:63:execute$11252$rdmux[0][3][3]$b$20721
      New ports: A=1'0, B=1'1, Y=$memory$auto$memory_bmux2rom.cc:63:execute$11252$rdmux[0][3][3]$b$20721 [1]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$11252$rdmux[0][3][3]$b$20721 [0] = 1'0
  Optimizing cells in module \adc_ctrl.
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$11252$rdmux[0][3][0]$20710:
      Old ports: A=2'00, B=$memory$auto$memory_bmux2rom.cc:63:execute$11252$rdmux[0][3][0]$b$20712, Y=$memory$auto$memory_bmux2rom.cc:63:execute$11252$rdmux[0][2][0]$a$20699
      New ports: A=1'0, B=$memory$auto$memory_bmux2rom.cc:63:execute$11252$rdmux[0][3][0]$b$20712 [0], Y=$memory$auto$memory_bmux2rom.cc:63:execute$11252$rdmux[0][2][0]$a$20699 [0]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$11252$rdmux[0][2][0]$a$20699 [1] = 1'0
    Consolidated identical input bits for $mux cell $memory$auto$memory_bmux2rom.cc:63:execute$11252$rdmux[0][3][2]$20716:
      Old ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$11252$rdmux[0][3][2]$a$20717, B=2'00, Y=$memory$auto$memory_bmux2rom.cc:63:execute$11252$rdmux[0][2][1]$a$20702
      New ports: A=$memory$auto$memory_bmux2rom.cc:63:execute$11252$rdmux[0][3][2]$a$20717 [1], B=1'0, Y=$memory$auto$memory_bmux2rom.cc:63:execute$11252$rdmux[0][2][1]$a$20702 [1]
      New connections: $memory$auto$memory_bmux2rom.cc:63:execute$11252$rdmux[0][2][1]$a$20702 [0] = 1'0
  Optimizing cells in module \adc_ctrl.
Performed a total of 8 changes.

yosys> opt_merge

3.30.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
<suppressed ~24 debug messages>
Removed a total of 8 cells.

yosys> opt_share

3.30.14. Executing OPT_SHARE pass.

yosys> opt_dff

3.30.15. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 0 unused cells and 72 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.30.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
<suppressed ~8 debug messages>

3.30.18. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.30.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~6 debug messages>

yosys> opt_reduce -full

3.30.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.30.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_share

3.30.22. Executing OPT_SHARE pass.

yosys> opt_dff

3.30.23. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.30.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.

3.30.26. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.30.27. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~6 debug messages>

yosys> opt_reduce -full

3.30.28. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.30.29. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_share

3.30.30. Executing OPT_SHARE pass.

yosys> opt_dff

3.30.31. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.32. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..

yosys> opt_expr -full

3.30.33. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.

3.30.34. Finished OPT passes. (There is nothing left to do.)

yosys> techmap -map +/techmap.v

3.31. Executing TECHMAP pass (map to technology primitives).

3.31.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.31.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $not.
No more expansions possible.
<suppressed ~95 debug messages>

yosys> opt -sat

3.32. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.

yosys> opt_merge -nomux

3.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
<suppressed ~18 debug messages>
Removed a total of 6 cells.

yosys> opt_muxtree

3.32.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.32.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.32.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.32.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.32.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.

3.32.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.32.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.32.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.32.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.32.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.32.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..

yosys> opt_expr

3.32.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.

3.32.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

3.33. Executing ABC pass (technology mapping using ABC).

3.33.1. Summary of detected clock domains:
  35 cells in clk=\clk_aon_i, en=$auto$opt_dff.cc:219:make_patterns_logic$20279, arst=!\rst_aon_ni, srst={ }
  41 cells in clk=\clk_aon_i, en=$auto$opt_dff.cc:219:make_patterns_logic$20253, arst=!\rst_aon_ni, srst={ }
  60 cells in clk=\clk_aon_i, en=$auto$opt_dff.cc:219:make_patterns_logic$20210, arst=!\rst_aon_ni, srst={ }
  49 cells in clk=\clk_aon_i, en=$auto$opt_dff.cc:219:make_patterns_logic$20000, arst=!\rst_aon_ni, srst={ }
  50 cells in clk=\clk_aon_i, en=$auto$opt_dff.cc:219:make_patterns_logic$19813, arst=!\rst_aon_ni, srst={ }
  29 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$19711, arst=!\rst_ni, srst={ }
  23 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$19631, arst=!\rst_ni, srst={ }
  27 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$19452, arst=!\rst_ni, srst={ }
  37 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$19503, arst=!\rst_ni, srst={ }
  16 cells in clk=\clk_aon_i, en=\u_adc_ctrl_core.u_adc_ctrl_fsm.chn0_val_we_d, arst=!\rst_aon_ni, srst={ }
  71 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11051, arst=!\rst_ni, srst={ }
  19 cells in clk=\clk_aon_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11061, arst=!\rst_aon_ni, srst={ }
  10 cells in clk=\clk_aon_i, en=\u_adc_ctrl_core.u_adc_ctrl_fsm.chn1_val_we_d, arst=!\rst_aon_ni, srst={ }
  125 cells in clk=\clk_aon_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11058, arst=!\rst_aon_ni, srst={ }
  12 cells in clk=\clk_i, en=\u_adc_ctrl_core.u_adc_ctrl_intr.i_adc_ctrl_intr_o.new_event, arst=!\rst_ni, srst={ }
  5 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10898, arst=!\rst_ni, srst={ }
  21 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10952, arst=!\rst_ni, srst={ }
  92 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10922, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10925, arst=!\rst_ni, srst={ }
  29 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10928, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10931, arst=!\rst_ni, srst={ }
  2 cells in clk=\clk_i, en=\u_reg.u_adc_intr_status_oneshot.wr_en, arst=!\rst_ni, srst={ }
  13 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10919, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10946, arst=!\rst_ni, srst={ }
  21 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10949, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11054, arst=!\rst_ni, srst={ }
  257 cells in clk=\clk_i, en=\u_reg.intg_err, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11048, arst=!\rst_ni, srst={ }
  80 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11045, arst=!\rst_ni, srst={ }
  8 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11042, arst=!\rst_ni, srst={ }
  49 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11039, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11036, arst=!\rst_ni, srst={ }
  78 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11033, arst=!\rst_ni, srst={ }
  8 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11030, arst=!\rst_ni, srst={ }
  49 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11027, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11024, arst=!\rst_ni, srst={ }
  79 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11021, arst=!\rst_ni, srst={ }
  8 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11018, arst=!\rst_ni, srst={ }
  49 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11015, arst=!\rst_ni, srst={ }
  12 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11012, arst=!\rst_ni, srst={ }
  74 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11009, arst=!\rst_ni, srst={ }
  13 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11006, arst=!\rst_ni, srst={ }
  80 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11003, arst=!\rst_ni, srst={ }
  8 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11000, arst=!\rst_ni, srst={ }
  49 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10997, arst=!\rst_ni, srst={ }
  12 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10994, arst=!\rst_ni, srst={ }
  77 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10991, arst=!\rst_ni, srst={ }
  8 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10988, arst=!\rst_ni, srst={ }
  49 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10985, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10982, arst=!\rst_ni, srst={ }
  77 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10979, arst=!\rst_ni, srst={ }
  8 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10976, arst=!\rst_ni, srst={ }
  49 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10973, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10970, arst=!\rst_ni, srst={ }
  74 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10967, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10964, arst=!\rst_ni, srst={ }
  77 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10961, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_aon_i, en=\u_adc_ctrl_core.u_adc_ctrl_fsm.chn0_val_we_o, arst=!\rst_aon_ni, srst={ }
  30 cells in clk=\clk_i, en=\u_reg.u_adc_chn0_filter_ctl_0_cdc.src_update_i, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_aon_i, en=\u_adc_ctrl_core.u_adc_ctrl_fsm.chn1_val_we_o, arst=!\rst_aon_ni, srst={ }
  10 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10913, arst=!\rst_ni, srst={ }
  49 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10916, arst=!\rst_ni, srst={ }
  200 cells in clk=\clk_aon_i, en={ }, arst=!\rst_aon_ni, srst={ }
  11 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10906, arst=!\rst_ni, srst={ }
  718 cells in clk=\clk_i, en=\u_reg.u_reg_if.a_ack, arst=!\rst_ni, srst={ }
  38 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10903, arst=!\rst_ni, srst={ }
  29 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10910, arst=!\rst_ni, srst={ }
  12 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10943, arst=!\rst_ni, srst={ }
  260 cells in clk=\clk_i, en={ }, arst=!\rst_ni, srst={ }

3.33.2. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$20279, asynchronously reset by !\rst_aon_ni
Extracted 35 gates and 74 wires to a netlist network with 37 inputs and 26 outputs.

3.33.2.1. Executing ABC.

3.33.3. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$20253, asynchronously reset by !\rst_aon_ni
Extracted 41 gates and 91 wires to a netlist network with 48 inputs and 40 outputs.

3.33.3.1. Executing ABC.

3.33.4. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$20210, asynchronously reset by !\rst_aon_ni
Extracted 60 gates and 94 wires to a netlist network with 32 inputs and 46 outputs.

3.33.4.1. Executing ABC.

3.33.5. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$20000, asynchronously reset by !\rst_aon_ni
Extracted 49 gates and 103 wires to a netlist network with 52 inputs and 45 outputs.

3.33.5.1. Executing ABC.

3.33.6. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$19813, asynchronously reset by !\rst_aon_ni
Extracted 50 gates and 87 wires to a netlist network with 36 inputs and 24 outputs.

3.33.6.1. Executing ABC.

3.33.7. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$19711, asynchronously reset by !\rst_ni
Extracted 29 gates and 37 wires to a netlist network with 7 inputs and 4 outputs.

3.33.7.1. Executing ABC.

3.33.8. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$19631, asynchronously reset by !\rst_ni
Extracted 23 gates and 29 wires to a netlist network with 5 inputs and 3 outputs.

3.33.8.1. Executing ABC.

3.33.9. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$19452, asynchronously reset by !\rst_ni
Extracted 27 gates and 41 wires to a netlist network with 12 inputs and 18 outputs.

3.33.9.1. Executing ABC.

3.33.10. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$19503, asynchronously reset by !\rst_ni
Extracted 37 gates and 58 wires to a netlist network with 19 inputs and 12 outputs.

3.33.10.1. Executing ABC.

3.33.11. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by \u_adc_ctrl_core.u_adc_ctrl_fsm.chn0_val_we_d, asynchronously reset by !\rst_aon_ni
Extracted 16 gates and 30 wires to a netlist network with 14 inputs and 11 outputs.

3.33.11.1. Executing ABC.

3.33.12. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11051, asynchronously reset by !\rst_ni
Extracted 71 gates and 98 wires to a netlist network with 27 inputs and 23 outputs.

3.33.12.1. Executing ABC.

3.33.13. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11061, asynchronously reset by !\rst_aon_ni
Extracted 19 gates and 22 wires to a netlist network with 2 inputs and 3 outputs.

3.33.13.1. Executing ABC.

3.33.14. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by \u_adc_ctrl_core.u_adc_ctrl_fsm.chn1_val_we_d, asynchronously reset by !\rst_aon_ni
Extracted 10 gates and 20 wires to a netlist network with 10 inputs and 10 outputs.

3.33.14.1. Executing ABC.

3.33.15. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11058, asynchronously reset by !\rst_aon_ni
Extracted 125 gates and 128 wires to a netlist network with 2 inputs and 13 outputs.

3.33.15.1. Executing ABC.

3.33.16. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u_adc_ctrl_core.u_adc_ctrl_intr.i_adc_ctrl_intr_o.new_event, asynchronously reset by !\rst_ni
Extracted 12 gates and 22 wires to a netlist network with 9 inputs and 6 outputs.

3.33.16.1. Executing ABC.

3.33.17. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10898, asynchronously reset by !\rst_ni
Extracted 5 gates and 7 wires to a netlist network with 2 inputs and 4 outputs.

3.33.17.1. Executing ABC.

3.33.18. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10952, asynchronously reset by !\rst_ni
Extracted 21 gates and 32 wires to a netlist network with 11 inputs and 12 outputs.

3.33.18.1. Executing ABC.

3.33.19. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10922, asynchronously reset by !\rst_ni
Extracted 92 gates and 128 wires to a netlist network with 35 inputs and 30 outputs.

3.33.19.1. Executing ABC.

3.33.20. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10925, asynchronously reset by !\rst_ni
Extracted 11 gates and 17 wires to a netlist network with 6 inputs and 7 outputs.

3.33.20.1. Executing ABC.

3.33.21. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10928, asynchronously reset by !\rst_ni
Extracted 29 gates and 51 wires to a netlist network with 21 inputs and 9 outputs.

3.33.21.1. Executing ABC.

3.33.22. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10931, asynchronously reset by !\rst_ni
Extracted 11 gates and 17 wires to a netlist network with 6 inputs and 7 outputs.

3.33.22.1. Executing ABC.

3.33.23. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u_reg.u_adc_intr_status_oneshot.wr_en, asynchronously reset by !\rst_ni
Extracted 2 gates and 4 wires to a netlist network with 1 inputs and 1 outputs.

3.33.23.1. Executing ABC.

3.33.24. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10919, asynchronously reset by !\rst_ni
Extracted 13 gates and 20 wires to a netlist network with 7 inputs and 9 outputs.

3.33.24.1. Executing ABC.

3.33.25. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10946, asynchronously reset by !\rst_ni
Extracted 11 gates and 17 wires to a netlist network with 6 inputs and 7 outputs.

3.33.25.1. Executing ABC.

3.33.26. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10949, asynchronously reset by !\rst_ni
Extracted 21 gates and 35 wires to a netlist network with 13 inputs and 10 outputs.

3.33.26.1. Executing ABC.

3.33.27. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11054, asynchronously reset by !\rst_ni
Extracted 11 gates and 17 wires to a netlist network with 6 inputs and 7 outputs.

3.33.27.1. Executing ABC.

3.33.28. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u_reg.intg_err, asynchronously reset by !\rst_ni
Extracted 257 gates and 348 wires to a netlist network with 90 inputs and 2 outputs.

3.33.28.1. Executing ABC.

3.33.29. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11048, asynchronously reset by !\rst_ni
Extracted 11 gates and 17 wires to a netlist network with 6 inputs and 7 outputs.

3.33.29.1. Executing ABC.

3.33.30. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11045, asynchronously reset by !\rst_ni
Extracted 80 gates and 135 wires to a netlist network with 55 inputs and 30 outputs.

3.33.30.1. Executing ABC.

3.33.31. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11042, asynchronously reset by !\rst_ni
Extracted 8 gates and 12 wires to a netlist network with 4 inputs and 5 outputs.

3.33.31.1. Executing ABC.

3.33.32. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11039, asynchronously reset by !\rst_ni
Extracted 49 gates and 75 wires to a netlist network with 26 inputs and 23 outputs.

3.33.32.1. Executing ABC.

3.33.33. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11036, asynchronously reset by !\rst_ni
Extracted 11 gates and 17 wires to a netlist network with 6 inputs and 7 outputs.

3.33.33.1. Executing ABC.

3.33.34. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11033, asynchronously reset by !\rst_ni
Extracted 78 gates and 132 wires to a netlist network with 54 inputs and 28 outputs.

3.33.34.1. Executing ABC.

3.33.35. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11030, asynchronously reset by !\rst_ni
Extracted 8 gates and 12 wires to a netlist network with 4 inputs and 5 outputs.

3.33.35.1. Executing ABC.

3.33.36. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11027, asynchronously reset by !\rst_ni
Extracted 49 gates and 75 wires to a netlist network with 26 inputs and 23 outputs.

3.33.36.1. Executing ABC.

3.33.37. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11024, asynchronously reset by !\rst_ni
Extracted 11 gates and 17 wires to a netlist network with 6 inputs and 7 outputs.

3.33.37.1. Executing ABC.

3.33.38. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11021, asynchronously reset by !\rst_ni
Extracted 79 gates and 134 wires to a netlist network with 55 inputs and 28 outputs.

3.33.38.1. Executing ABC.

3.33.39. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11018, asynchronously reset by !\rst_ni
Extracted 8 gates and 12 wires to a netlist network with 4 inputs and 5 outputs.

3.33.39.1. Executing ABC.

3.33.40. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11015, asynchronously reset by !\rst_ni
Extracted 49 gates and 75 wires to a netlist network with 26 inputs and 23 outputs.

3.33.40.1. Executing ABC.

3.33.41. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11012, asynchronously reset by !\rst_ni
Extracted 12 gates and 18 wires to a netlist network with 6 inputs and 7 outputs.

3.33.41.1. Executing ABC.

3.33.42. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11009, asynchronously reset by !\rst_ni
Extracted 74 gates and 125 wires to a netlist network with 51 inputs and 25 outputs.

3.33.42.1. Executing ABC.

3.33.43. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11006, asynchronously reset by !\rst_ni
Extracted 13 gates and 20 wires to a netlist network with 7 inputs and 9 outputs.

3.33.43.1. Executing ABC.

3.33.44. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11003, asynchronously reset by !\rst_ni
Extracted 80 gates and 135 wires to a netlist network with 55 inputs and 30 outputs.

3.33.44.1. Executing ABC.

3.33.45. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11000, asynchronously reset by !\rst_ni
Extracted 8 gates and 12 wires to a netlist network with 4 inputs and 5 outputs.

3.33.45.1. Executing ABC.

3.33.46. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10997, asynchronously reset by !\rst_ni
Extracted 49 gates and 75 wires to a netlist network with 26 inputs and 23 outputs.

3.33.46.1. Executing ABC.

3.33.47. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10994, asynchronously reset by !\rst_ni
Extracted 12 gates and 19 wires to a netlist network with 7 inputs and 8 outputs.

3.33.47.1. Executing ABC.

3.33.48. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10991, asynchronously reset by !\rst_ni
Extracted 77 gates and 130 wires to a netlist network with 53 inputs and 27 outputs.

3.33.48.1. Executing ABC.

3.33.49. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10988, asynchronously reset by !\rst_ni
Extracted 8 gates and 12 wires to a netlist network with 4 inputs and 5 outputs.

3.33.49.1. Executing ABC.

3.33.50. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10985, asynchronously reset by !\rst_ni
Extracted 49 gates and 75 wires to a netlist network with 26 inputs and 23 outputs.

3.33.50.1. Executing ABC.

3.33.51. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10982, asynchronously reset by !\rst_ni
Extracted 10 gates and 15 wires to a netlist network with 5 inputs and 6 outputs.

3.33.51.1. Executing ABC.

3.33.52. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10979, asynchronously reset by !\rst_ni
Extracted 77 gates and 130 wires to a netlist network with 53 inputs and 27 outputs.

3.33.52.1. Executing ABC.

3.33.53. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10976, asynchronously reset by !\rst_ni
Extracted 8 gates and 12 wires to a netlist network with 4 inputs and 5 outputs.

3.33.53.1. Executing ABC.

3.33.54. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10973, asynchronously reset by !\rst_ni
Extracted 49 gates and 75 wires to a netlist network with 26 inputs and 23 outputs.

3.33.54.1. Executing ABC.

3.33.55. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10970, asynchronously reset by !\rst_ni
Extracted 10 gates and 15 wires to a netlist network with 5 inputs and 6 outputs.

3.33.55.1. Executing ABC.

3.33.56. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10967, asynchronously reset by !\rst_ni
Extracted 74 gates and 125 wires to a netlist network with 51 inputs and 25 outputs.

3.33.56.1. Executing ABC.

3.33.57. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10964, asynchronously reset by !\rst_ni
Extracted 10 gates and 15 wires to a netlist network with 5 inputs and 6 outputs.

3.33.57.1. Executing ABC.

3.33.58. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10961, asynchronously reset by !\rst_ni
Extracted 77 gates and 119 wires to a netlist network with 41 inputs and 27 outputs.

3.33.58.1. Executing ABC.

3.33.59. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by \u_adc_ctrl_core.u_adc_ctrl_fsm.chn0_val_we_o, asynchronously reset by !\rst_aon_ni
Extracted 10 gates and 20 wires to a netlist network with 10 inputs and 10 outputs.

3.33.59.1. Executing ABC.

3.33.60. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u_reg.u_adc_chn0_filter_ctl_0_cdc.src_update_i, asynchronously reset by !\rst_ni
Extracted 30 gates and 58 wires to a netlist network with 27 inputs and 20 outputs.

3.33.60.1. Executing ABC.

3.33.61. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by \u_adc_ctrl_core.u_adc_ctrl_fsm.chn1_val_we_o, asynchronously reset by !\rst_aon_ni
Extracted 10 gates and 20 wires to a netlist network with 10 inputs and 10 outputs.

3.33.61.1. Executing ABC.

3.33.62. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10913, asynchronously reset by !\rst_ni
Extracted 10 gates and 15 wires to a netlist network with 5 inputs and 6 outputs.

3.33.62.1. Executing ABC.

3.33.63. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10916, asynchronously reset by !\rst_ni
Extracted 49 gates and 74 wires to a netlist network with 24 inputs and 20 outputs.

3.33.63.1. Executing ABC.

3.33.64. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, asynchronously reset by !\rst_aon_ni
Extracted 200 gates and 231 wires to a netlist network with 30 inputs and 28 outputs.

3.33.64.1. Executing ABC.

3.33.65. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10906, asynchronously reset by !\rst_ni
Extracted 11 gates and 16 wires to a netlist network with 5 inputs and 7 outputs.

3.33.65.1. Executing ABC.

3.33.66. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21518$u_reg.u_reg_if.a_ack, asynchronously reset by !\rst_ni
Extracted 718 gates and 1051 wires to a netlist network with 331 inputs and 58 outputs.

3.33.66.1. Executing ABC.

3.33.67. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10903, asynchronously reset by !\rst_ni
Extracted 38 gates and 57 wires to a netlist network with 18 inputs and 14 outputs.

3.33.67.1. Executing ABC.

3.33.68. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10910, asynchronously reset by !\rst_ni
Extracted 29 gates and 46 wires to a netlist network with 17 inputs and 13 outputs.

3.33.68.1. Executing ABC.

3.33.69. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10943, asynchronously reset by !\rst_ni
Extracted 12 gates and 22 wires to a netlist network with 9 inputs and 5 outputs.

3.33.69.1. Executing ABC.

3.33.70. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, asynchronously reset by !\rst_ni
Extracted 260 gates and 324 wires to a netlist network with 63 inputs and 67 outputs.

3.33.70.1. Executing ABC.

yosys> abc -dff

3.34. Executing ABC pass (technology mapping using ABC).

3.34.1. Summary of detected clock domains:
  45 cells in clk=\clk_aon_i, en=$abc$20978$auto$opt_dff.cc:219:make_patterns_logic$20210, arst=!\rst_aon_ni, srst={ }
  52 cells in clk=\clk_aon_i, en=$abc$21031$auto$opt_dff.cc:219:make_patterns_logic$20000, arst=!\rst_aon_ni, srst={ }
  35 cells in clk=\clk_aon_i, en=$abc$20898$auto$opt_dff.cc:219:make_patterns_logic$20279, arst=!\rst_aon_ni, srst={ }
  46 cells in clk=\clk_aon_i, en=$abc$20935$auto$opt_dff.cc:219:make_patterns_logic$20253, arst=!\rst_aon_ni, srst={ }
  12 cells in clk=\clk_i, en=$abc$23077$auto$opt_dff.cc:194:make_patterns_logic$10970, arst=!\rst_ni, srst={ }
  24 cells in clk=\clk_i, en=$abc$21161$auto$opt_dff.cc:194:make_patterns_logic$19452, arst=!\rst_ni, srst={ }
  37 cells in clk=\clk_aon_i, en=$abc$21082$auto$opt_dff.cc:219:make_patterns_logic$19813, arst=!\rst_aon_ni, srst={ }
  16 cells in clk=\clk_i, en=$abc$21126$auto$opt_dff.cc:219:make_patterns_logic$19711, arst=!\rst_ni, srst={ }
  40 cells in clk=\clk_i, en=$abc$21184$auto$opt_dff.cc:219:make_patterns_logic$19503, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$21506$u_adc_ctrl_core.u_adc_ctrl_intr.i_adc_ctrl_intr_o.new_event, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$23160$auto$opt_dff.cc:194:make_patterns_logic$10964, arst=!\rst_ni, srst={ }
  7 cells in clk=\clk_i, en=$abc$24582$auto$opt_dff.cc:194:make_patterns_logic$10943, arst=!\rst_ni, srst={ }
  34 cells in clk=\clk_i, en=$abc$24512$auto$opt_dff.cc:194:make_patterns_logic$10903, arst=!\rst_ni, srst={ }
  18 cells in clk=\clk_aon_i, en=$abc$21328$auto$opt_dff.cc:194:make_patterns_logic$11061, arst=!\rst_aon_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$21518$auto$opt_dff.cc:194:make_patterns_logic$10898, arst=!\rst_ni, srst={ }
  225 cells in clk=\clk_i, en=$abc$21746$u_reg.intg_err, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$21525$auto$opt_dff.cc:194:make_patterns_logic$10952, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$22568$auto$opt_dff.cc:194:make_patterns_logic$11006, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$22064$auto$opt_dff.cc:194:make_patterns_logic$11042, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$22233$auto$opt_dff.cc:194:make_patterns_logic$11030, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$22313$auto$opt_dff.cc:194:make_patterns_logic$11024, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$21973$auto$opt_dff.cc:194:make_patterns_logic$11048, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_aon_i, en=$abc$23436$lo97, arst=!\rst_aon_ni, srst={ }
  72 cells in clk=\clk_i, en=$abc$23170$auto$opt_dff.cc:194:make_patterns_logic$10961, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$24594$u_reg.u_adc_intr_status_oneshot.wr_en, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$22144$auto$opt_dff.cc:194:make_patterns_logic$11036, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$21735$auto$opt_dff.cc:194:make_patterns_logic$11054, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$21704$auto$opt_dff.cc:194:make_patterns_logic$10946, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$21691$auto$opt_dff.cc:194:make_patterns_logic$10919, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$22483$auto$opt_dff.cc:194:make_patterns_logic$11012, arst=!\rst_ni, srst={ }
  13 cells in clk=\clk_i, en=$abc$22403$auto$opt_dff.cc:194:make_patterns_logic$11018, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$21676$auto$opt_dff.cc:194:make_patterns_logic$10931, arst=!\rst_ni, srst={ }
  12 cells in clk=\clk_i, en=$abc$21635$auto$opt_dff.cc:194:make_patterns_logic$10925, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$23665$auto$opt_dff.cc:194:make_patterns_logic$10906, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$23370$auto$opt_dff.cc:194:make_patterns_logic$10913, arst=!\rst_ni, srst={ }
  13 cells in clk=\clk_i, en=$abc$21146$auto$opt_dff.cc:219:make_patterns_logic$19631, arst=!\rst_ni, srst={ }
  50 cells in clk=\clk_i, en=$abc$23380$auto$opt_dff.cc:194:make_patterns_logic$10916, arst=!\rst_ni, srst={ }
  28 cells in clk=\clk_i, en=$abc$24594$u_reg.u_adc_chn0_filter_ctl_0_cdc.src_update_i, arst=!\rst_ni, srst={ }
  32 cells in clk=\clk_i, en=$abc$21646$auto$opt_dff.cc:194:make_patterns_logic$10928, arst=!\rst_ni, srst={ }
  32 cells in clk=\clk_i, en=$abc$24549$auto$opt_dff.cc:194:make_patterns_logic$10910, arst=!\rst_ni, srst={ }
  64 cells in clk=\clk_i, en=$abc$22155$auto$opt_dff.cc:194:make_patterns_logic$11033, arst=!\rst_ni, srst={ }
  64 cells in clk=\clk_i, en=$abc$21984$auto$opt_dff.cc:194:make_patterns_logic$11045, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$21715$auto$opt_dff.cc:194:make_patterns_logic$10949, arst=!\rst_ni, srst={ }
  98 cells in clk=\clk_i, en=$abc$21543$auto$opt_dff.cc:194:make_patterns_logic$10922, arst=!\rst_ni, srst={ }
  58 cells in clk=\clk_i, en=$abc$22073$auto$opt_dff.cc:194:make_patterns_logic$11039, arst=!\rst_ni, srst={ }
  58 cells in clk=\clk_i, en=$abc$22242$auto$opt_dff.cc:194:make_patterns_logic$11027, arst=!\rst_ni, srst={ }
  59 cells in clk=\clk_i, en=$abc$22412$auto$opt_dff.cc:194:make_patterns_logic$11015, arst=!\rst_ni, srst={ }
  73 cells in clk=\clk_i, en=$abc$22495$auto$opt_dff.cc:194:make_patterns_logic$11009, arst=!\rst_ni, srst={ }
  69 cells in clk=\clk_i, en=$abc$23006$auto$opt_dff.cc:194:make_patterns_logic$10973, arst=!\rst_ni, srst={ }
  73 cells in clk=\clk_i, en=$abc$23087$auto$opt_dff.cc:194:make_patterns_logic$10967, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_aon_i, en=$abc$23436$lo98, arst=!\rst_aon_ni, srst={ }
  11 cells in clk=\clk_aon_i, en=$abc$23436$u_adc_ctrl_core.u_adc_ctrl_fsm.chn1_val_we_d, arst=!\rst_aon_ni, srst={ }
  16 cells in clk=\clk_aon_i, en=$abc$21223$u_adc_ctrl_core.u_adc_ctrl_fsm.chn0_val_we_d, arst=!\rst_aon_ni, srst={ }
  13 cells in clk=\clk_i, en=$abc$22741$auto$opt_dff.cc:194:make_patterns_logic$10994, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$22830$auto$opt_dff.cc:194:make_patterns_logic$10988, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$22910$auto$opt_dff.cc:194:make_patterns_logic$10982, arst=!\rst_ni, srst={ }
  68 cells in clk=\clk_i, en=$abc$22581$auto$opt_dff.cc:194:make_patterns_logic$11003, arst=!\rst_ni, srst={ }
  8 cells in clk=\clk_i, en=$abc$22997$auto$opt_dff.cc:194:make_patterns_logic$10976, arst=!\rst_ni, srst={ }
  790 cells in clk=\clk_i, en=$abc$21518$u_reg.u_reg_if.a_ack, arst=!\rst_ni, srst={ }
  54 cells in clk=\clk_i, en=$abc$22670$auto$opt_dff.cc:194:make_patterns_logic$10997, arst=!\rst_ni, srst={ }
  60 cells in clk=\clk_i, en=$abc$22839$auto$opt_dff.cc:194:make_patterns_logic$10985, arst=!\rst_ni, srst={ }
  62 cells in clk=\clk_i, en=$abc$22753$auto$opt_dff.cc:194:make_patterns_logic$10991, arst=!\rst_ni, srst={ }
  54 cells in clk=\clk_i, en=$abc$22920$auto$opt_dff.cc:194:make_patterns_logic$10979, arst=!\rst_ni, srst={ }
  15 cells in clk=\clk_i, en=$abc$22661$auto$opt_dff.cc:194:make_patterns_logic$11000, arst=!\rst_ni, srst={ }
  73 cells in clk=\clk_i, en=$abc$21257$auto$opt_dff.cc:194:make_patterns_logic$11051, arst=!\rst_ni, srst={ }
  127 cells in clk=\clk_aon_i, en=$abc$21378$auto$opt_dff.cc:194:make_patterns_logic$11058, arst=!\rst_aon_ni, srst={ }
  63 cells in clk=\clk_i, en=$abc$22324$auto$opt_dff.cc:194:make_patterns_logic$11021, arst=!\rst_ni, srst={ }
  129 cells in clk=\clk_aon_i, en={ }, arst=!\rst_aon_ni, srst={ }
  262 cells in clk=\clk_i, en={ }, arst=!\rst_ni, srst={ }

3.34.2. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by $abc$20978$auto$opt_dff.cc:219:make_patterns_logic$20210, asynchronously reset by !\rst_aon_ni
Extracted 45 gates and 74 wires to a netlist network with 29 inputs and 42 outputs.

3.34.2.1. Executing ABC.

3.34.3. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by $abc$21031$auto$opt_dff.cc:219:make_patterns_logic$20000, asynchronously reset by !\rst_aon_ni
Extracted 52 gates and 103 wires to a netlist network with 51 inputs and 46 outputs.

3.34.3.1. Executing ABC.

3.34.4. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by $abc$20898$auto$opt_dff.cc:219:make_patterns_logic$20279, asynchronously reset by !\rst_aon_ni
Extracted 35 gates and 73 wires to a netlist network with 38 inputs and 27 outputs.

3.34.4.1. Executing ABC.

3.34.5. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by $abc$20935$auto$opt_dff.cc:219:make_patterns_logic$20253, asynchronously reset by !\rst_aon_ni
Extracted 46 gates and 96 wires to a netlist network with 50 inputs and 39 outputs.

3.34.5.1. Executing ABC.

3.34.6. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23077$auto$opt_dff.cc:194:make_patterns_logic$10970, asynchronously reset by !\rst_ni
Extracted 12 gates and 18 wires to a netlist network with 6 inputs and 9 outputs.

3.34.6.1. Executing ABC.

3.34.7. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21161$auto$opt_dff.cc:194:make_patterns_logic$19452, asynchronously reset by !\rst_ni
Extracted 24 gates and 41 wires to a netlist network with 17 inputs and 12 outputs.

3.34.7.1. Executing ABC.

3.34.8. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by $abc$21082$auto$opt_dff.cc:219:make_patterns_logic$19813, asynchronously reset by !\rst_aon_ni
Extracted 37 gates and 72 wires to a netlist network with 35 inputs and 24 outputs.

3.34.8.1. Executing ABC.

3.34.9. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21126$auto$opt_dff.cc:219:make_patterns_logic$19711, asynchronously reset by !\rst_ni
Extracted 16 gates and 21 wires to a netlist network with 5 inputs and 6 outputs.

3.34.9.1. Executing ABC.

3.34.10. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21184$auto$opt_dff.cc:219:make_patterns_logic$19503, asynchronously reset by !\rst_ni
Extracted 40 gates and 54 wires to a netlist network with 14 inputs and 15 outputs.

3.34.10.1. Executing ABC.

3.34.11. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21506$u_adc_ctrl_core.u_adc_ctrl_intr.i_adc_ctrl_intr_o.new_event, asynchronously reset by !\rst_ni
Extracted 11 gates and 19 wires to a netlist network with 8 inputs and 6 outputs.

3.34.11.1. Executing ABC.

3.34.12. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23160$auto$opt_dff.cc:194:make_patterns_logic$10964, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.34.12.1. Executing ABC.

3.34.13. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24582$auto$opt_dff.cc:194:make_patterns_logic$10943, asynchronously reset by !\rst_ni
Extracted 7 gates and 13 wires to a netlist network with 6 inputs and 2 outputs.

3.34.13.1. Executing ABC.

3.34.14. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24512$auto$opt_dff.cc:194:make_patterns_logic$10903, asynchronously reset by !\rst_ni
Extracted 34 gates and 52 wires to a netlist network with 18 inputs and 14 outputs.

3.34.14.1. Executing ABC.

3.34.15. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by $abc$21328$auto$opt_dff.cc:194:make_patterns_logic$11061, asynchronously reset by !\rst_aon_ni
Extracted 18 gates and 20 wires to a netlist network with 2 inputs and 3 outputs.

3.34.15.1. Executing ABC.

3.34.16. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21518$auto$opt_dff.cc:194:make_patterns_logic$10898, asynchronously reset by !\rst_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 3 outputs.

3.34.16.1. Executing ABC.

3.34.17. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21746$u_reg.intg_err, asynchronously reset by !\rst_ni
Extracted 225 gates and 316 wires to a netlist network with 90 inputs and 2 outputs.

3.34.17.1. Executing ABC.

3.34.18. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21525$auto$opt_dff.cc:194:make_patterns_logic$10952, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.34.18.1. Executing ABC.

3.34.19. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22568$auto$opt_dff.cc:194:make_patterns_logic$11006, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.34.19.1. Executing ABC.

3.34.20. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22064$auto$opt_dff.cc:194:make_patterns_logic$11042, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.34.20.1. Executing ABC.

3.34.21. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22233$auto$opt_dff.cc:194:make_patterns_logic$11030, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.34.21.1. Executing ABC.

3.34.22. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22313$auto$opt_dff.cc:194:make_patterns_logic$11024, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.34.22.1. Executing ABC.

3.34.23. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21973$auto$opt_dff.cc:194:make_patterns_logic$11048, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.34.23.1. Executing ABC.

3.34.24. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by $abc$23436$lo97, asynchronously reset by !\rst_aon_ni
Extracted 10 gates and 20 wires to a netlist network with 10 inputs and 10 outputs.

3.34.24.1. Executing ABC.

3.34.25. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23170$auto$opt_dff.cc:194:make_patterns_logic$10961, asynchronously reset by !\rst_ni
Extracted 72 gates and 111 wires to a netlist network with 39 inputs and 27 outputs.

3.34.25.1. Executing ABC.

3.34.26. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24594$u_reg.u_adc_intr_status_oneshot.wr_en, asynchronously reset by !\rst_ni
Extracted 4 gates and 8 wires to a netlist network with 3 inputs and 3 outputs.

3.34.26.1. Executing ABC.

3.34.27. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22144$auto$opt_dff.cc:194:make_patterns_logic$11036, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.34.27.1. Executing ABC.

3.34.28. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21735$auto$opt_dff.cc:194:make_patterns_logic$11054, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.34.28.1. Executing ABC.

3.34.29. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21704$auto$opt_dff.cc:194:make_patterns_logic$10946, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.34.29.1. Executing ABC.

3.34.30. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21691$auto$opt_dff.cc:194:make_patterns_logic$10919, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.34.30.1. Executing ABC.

3.34.31. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22483$auto$opt_dff.cc:194:make_patterns_logic$11012, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 7 outputs.

3.34.31.1. Executing ABC.

3.34.32. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22403$auto$opt_dff.cc:194:make_patterns_logic$11018, asynchronously reset by !\rst_ni
Extracted 13 gates and 20 wires to a netlist network with 7 inputs and 7 outputs.

3.34.32.1. Executing ABC.

3.34.33. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21676$auto$opt_dff.cc:194:make_patterns_logic$10931, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 8 outputs.

3.34.33.1. Executing ABC.

3.34.34. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21635$auto$opt_dff.cc:194:make_patterns_logic$10925, asynchronously reset by !\rst_ni
Extracted 12 gates and 20 wires to a netlist network with 8 inputs and 9 outputs.

3.34.34.1. Executing ABC.

3.34.35. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23665$auto$opt_dff.cc:194:make_patterns_logic$10906, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.34.35.1. Executing ABC.

3.34.36. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23370$auto$opt_dff.cc:194:make_patterns_logic$10913, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 8 outputs.

3.34.36.1. Executing ABC.

3.34.37. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21146$auto$opt_dff.cc:219:make_patterns_logic$19631, asynchronously reset by !\rst_ni
Extracted 13 gates and 19 wires to a netlist network with 6 inputs and 4 outputs.

3.34.37.1. Executing ABC.

3.34.38. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23380$auto$opt_dff.cc:194:make_patterns_logic$10916, asynchronously reset by !\rst_ni
Extracted 50 gates and 72 wires to a netlist network with 22 inputs and 17 outputs.

3.34.38.1. Executing ABC.

3.34.39. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24594$u_reg.u_adc_chn0_filter_ctl_0_cdc.src_update_i, asynchronously reset by !\rst_ni
Extracted 28 gates and 55 wires to a netlist network with 27 inputs and 21 outputs.

3.34.39.1. Executing ABC.

3.34.40. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21646$auto$opt_dff.cc:194:make_patterns_logic$10928, asynchronously reset by !\rst_ni
Extracted 32 gates and 55 wires to a netlist network with 23 inputs and 12 outputs.

3.34.40.1. Executing ABC.

3.34.41. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24549$auto$opt_dff.cc:194:make_patterns_logic$10910, asynchronously reset by !\rst_ni
Extracted 32 gates and 54 wires to a netlist network with 22 inputs and 13 outputs.

3.34.41.1. Executing ABC.

3.34.42. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22155$auto$opt_dff.cc:194:make_patterns_logic$11033, asynchronously reset by !\rst_ni
Extracted 64 gates and 107 wires to a netlist network with 43 inputs and 23 outputs.

3.34.42.1. Executing ABC.

3.34.43. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21984$auto$opt_dff.cc:194:make_patterns_logic$11045, asynchronously reset by !\rst_ni
Extracted 64 gates and 107 wires to a netlist network with 43 inputs and 23 outputs.

3.34.43.1. Executing ABC.

3.34.44. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21715$auto$opt_dff.cc:194:make_patterns_logic$10949, asynchronously reset by !\rst_ni
Extracted 10 gates and 18 wires to a netlist network with 8 inputs and 3 outputs.

3.34.44.1. Executing ABC.

3.34.45. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21543$auto$opt_dff.cc:194:make_patterns_logic$10922, asynchronously reset by !\rst_ni
Extracted 98 gates and 138 wires to a netlist network with 40 inputs and 37 outputs.

3.34.45.1. Executing ABC.

3.34.46. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22073$auto$opt_dff.cc:194:make_patterns_logic$11039, asynchronously reset by !\rst_ni
Extracted 58 gates and 94 wires to a netlist network with 36 inputs and 26 outputs.

3.34.46.1. Executing ABC.

3.34.47. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22242$auto$opt_dff.cc:194:make_patterns_logic$11027, asynchronously reset by !\rst_ni
Extracted 58 gates and 94 wires to a netlist network with 36 inputs and 26 outputs.

3.34.47.1. Executing ABC.

3.34.48. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22412$auto$opt_dff.cc:194:make_patterns_logic$11015, asynchronously reset by !\rst_ni
Extracted 59 gates and 96 wires to a netlist network with 37 inputs and 26 outputs.

3.34.48.1. Executing ABC.

3.34.49. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22495$auto$opt_dff.cc:194:make_patterns_logic$11009, asynchronously reset by !\rst_ni
Extracted 73 gates and 124 wires to a netlist network with 51 inputs and 25 outputs.

3.34.49.1. Executing ABC.

3.34.50. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23006$auto$opt_dff.cc:194:make_patterns_logic$10973, asynchronously reset by !\rst_ni
Extracted 69 gates and 116 wires to a netlist network with 47 inputs and 27 outputs.

3.34.50.1. Executing ABC.

3.34.51. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23087$auto$opt_dff.cc:194:make_patterns_logic$10967, asynchronously reset by !\rst_ni
Extracted 73 gates and 124 wires to a netlist network with 51 inputs and 25 outputs.

3.34.51.1. Executing ABC.

3.34.52. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by $abc$23436$lo98, asynchronously reset by !\rst_aon_ni
Extracted 10 gates and 20 wires to a netlist network with 10 inputs and 10 outputs.

3.34.52.1. Executing ABC.

3.34.53. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by $abc$23436$u_adc_ctrl_core.u_adc_ctrl_fsm.chn1_val_we_d, asynchronously reset by !\rst_aon_ni
Extracted 11 gates and 23 wires to a netlist network with 12 inputs and 11 outputs.

3.34.53.1. Executing ABC.

3.34.54. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by $abc$21223$u_adc_ctrl_core.u_adc_ctrl_fsm.chn0_val_we_d, asynchronously reset by !\rst_aon_ni
Extracted 16 gates and 33 wires to a netlist network with 17 inputs and 11 outputs.

3.34.54.1. Executing ABC.

3.34.55. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22741$auto$opt_dff.cc:194:make_patterns_logic$10994, asynchronously reset by !\rst_ni
Extracted 13 gates and 20 wires to a netlist network with 7 inputs and 8 outputs.

3.34.55.1. Executing ABC.

3.34.56. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22830$auto$opt_dff.cc:194:make_patterns_logic$10988, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.34.56.1. Executing ABC.

3.34.57. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22910$auto$opt_dff.cc:194:make_patterns_logic$10982, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.34.57.1. Executing ABC.

3.34.58. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22581$auto$opt_dff.cc:194:make_patterns_logic$11003, asynchronously reset by !\rst_ni
Extracted 68 gates and 115 wires to a netlist network with 47 inputs and 27 outputs.

3.34.58.1. Executing ABC.

3.34.59. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22997$auto$opt_dff.cc:194:make_patterns_logic$10976, asynchronously reset by !\rst_ni
Extracted 8 gates and 12 wires to a netlist network with 4 inputs and 5 outputs.

3.34.59.1. Executing ABC.

3.34.60. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21518$u_reg.u_reg_if.a_ack, asynchronously reset by !\rst_ni
Extracted 790 gates and 1121 wires to a netlist network with 331 inputs and 59 outputs.

3.34.60.1. Executing ABC.

3.34.61. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22670$auto$opt_dff.cc:194:make_patterns_logic$10997, asynchronously reset by !\rst_ni
Extracted 54 gates and 87 wires to a netlist network with 33 inputs and 23 outputs.

3.34.61.1. Executing ABC.

3.34.62. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22839$auto$opt_dff.cc:194:make_patterns_logic$10985, asynchronously reset by !\rst_ni
Extracted 60 gates and 98 wires to a netlist network with 38 inputs and 26 outputs.

3.34.62.1. Executing ABC.

3.34.63. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22753$auto$opt_dff.cc:194:make_patterns_logic$10991, asynchronously reset by !\rst_ni
Extracted 62 gates and 103 wires to a netlist network with 41 inputs and 23 outputs.

3.34.63.1. Executing ABC.

3.34.64. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22920$auto$opt_dff.cc:194:make_patterns_logic$10979, asynchronously reset by !\rst_ni
Extracted 54 gates and 87 wires to a netlist network with 33 inputs and 23 outputs.

3.34.64.1. Executing ABC.

3.34.65. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22661$auto$opt_dff.cc:194:make_patterns_logic$11000, asynchronously reset by !\rst_ni
Extracted 15 gates and 24 wires to a netlist network with 9 inputs and 10 outputs.

3.34.65.1. Executing ABC.

3.34.66. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21257$auto$opt_dff.cc:194:make_patterns_logic$11051, asynchronously reset by !\rst_ni
Extracted 73 gates and 103 wires to a netlist network with 30 inputs and 26 outputs.

3.34.66.1. Executing ABC.

3.34.67. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by $abc$21378$auto$opt_dff.cc:194:make_patterns_logic$11058, asynchronously reset by !\rst_aon_ni
Extracted 127 gates and 129 wires to a netlist network with 2 inputs and 13 outputs.

3.34.67.1. Executing ABC.

3.34.68. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22324$auto$opt_dff.cc:194:make_patterns_logic$11021, asynchronously reset by !\rst_ni
Extracted 63 gates and 105 wires to a netlist network with 42 inputs and 23 outputs.

3.34.68.1. Executing ABC.

3.34.69. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, asynchronously reset by !\rst_aon_ni
Extracted 129 gates and 160 wires to a netlist network with 31 inputs and 28 outputs.

3.34.69.1. Executing ABC.

3.34.70. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, asynchronously reset by !\rst_ni
Extracted 262 gates and 327 wires to a netlist network with 65 inputs and 68 outputs.

3.34.70.1. Executing ABC.

yosys> abc -dff

3.35. Executing ABC pass (technology mapping using ABC).

3.35.1. Summary of detected clock domains:
  46 cells in clk=\clk_aon_i, en=$abc$24950$abc$20978$auto$opt_dff.cc:219:make_patterns_logic$20210, arst=!\rst_aon_ni, srst={ }
  49 cells in clk=\clk_aon_i, en=$abc$24996$abc$21031$auto$opt_dff.cc:219:make_patterns_logic$20000, arst=!\rst_aon_ni, srst={ }
  38 cells in clk=\clk_aon_i, en=$abc$25049$abc$20898$auto$opt_dff.cc:219:make_patterns_logic$20279, arst=!\rst_aon_ni, srst={ }
  44 cells in clk=\clk_aon_i, en=$abc$25085$abc$20935$auto$opt_dff.cc:219:make_patterns_logic$20253, arst=!\rst_aon_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$25133$abc$23077$auto$opt_dff.cc:194:make_patterns_logic$10970, arst=!\rst_ni, srst={ }
  21 cells in clk=\clk_i, en=$abc$25146$abc$21161$auto$opt_dff.cc:194:make_patterns_logic$19452, arst=!\rst_ni, srst={ }
  37 cells in clk=\clk_aon_i, en=$abc$25169$abc$21082$auto$opt_dff.cc:219:make_patterns_logic$19813, arst=!\rst_aon_ni, srst={ }
  16 cells in clk=\clk_i, en=$abc$25208$abc$21126$auto$opt_dff.cc:219:make_patterns_logic$19711, arst=!\rst_ni, srst={ }
  12 cells in clk=\clk_i, en=$abc$25267$abc$21506$u_adc_ctrl_core.u_adc_ctrl_intr.i_adc_ctrl_intr_o.new_event, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$25279$abc$23160$auto$opt_dff.cc:194:make_patterns_logic$10964, arst=!\rst_ni, srst={ }
  35 cells in clk=\clk_i, en=$abc$25226$abc$21184$auto$opt_dff.cc:219:make_patterns_logic$19503, arst=!\rst_ni, srst={ }
  7 cells in clk=\clk_i, en=$abc$25290$abc$24582$auto$opt_dff.cc:194:make_patterns_logic$10943, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$25352$abc$21518$auto$opt_dff.cc:194:make_patterns_logic$10898, arst=!\rst_ni, srst={ }
  224 cells in clk=\clk_i, en=$abc$25358$abc$21746$u_reg.intg_err, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$25584$abc$21525$auto$opt_dff.cc:194:make_patterns_logic$10952, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$25594$abc$22568$auto$opt_dff.cc:194:make_patterns_logic$11006, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$25605$abc$22064$auto$opt_dff.cc:194:make_patterns_logic$11042, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$25615$abc$22233$auto$opt_dff.cc:194:make_patterns_logic$11030, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$25626$abc$22313$auto$opt_dff.cc:194:make_patterns_logic$11024, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$25637$abc$21973$auto$opt_dff.cc:194:make_patterns_logic$11048, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_aon_i, en=$abc$28370$lo19, arst=!\rst_aon_ni, srst={ }
  3 cells in clk=\clk_i, en=$abc$25754$abc$24594$u_reg.u_adc_intr_status_oneshot.wr_en, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$25760$abc$22144$auto$opt_dff.cc:194:make_patterns_logic$11036, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$25771$abc$21735$auto$opt_dff.cc:194:make_patterns_logic$11054, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$25782$abc$21704$auto$opt_dff.cc:194:make_patterns_logic$10946, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$25792$abc$21691$auto$opt_dff.cc:194:make_patterns_logic$10919, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$25802$abc$22483$auto$opt_dff.cc:194:make_patterns_logic$11012, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$25814$abc$22403$auto$opt_dff.cc:194:make_patterns_logic$11018, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$25826$abc$21676$auto$opt_dff.cc:194:make_patterns_logic$10931, arst=!\rst_ni, srst={ }
  12 cells in clk=\clk_i, en=$abc$25838$abc$21635$auto$opt_dff.cc:194:make_patterns_logic$10925, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$25851$abc$23665$auto$opt_dff.cc:194:make_patterns_logic$10906, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$25861$abc$23370$auto$opt_dff.cc:194:make_patterns_logic$10913, arst=!\rst_ni, srst={ }
  14 cells in clk=\clk_i, en=$abc$25873$abc$21146$auto$opt_dff.cc:219:make_patterns_logic$19631, arst=!\rst_ni, srst={ }
  51 cells in clk=\clk_i, en=$abc$25888$abc$23380$auto$opt_dff.cc:194:make_patterns_logic$10916, arst=!\rst_ni, srst={ }
  31 cells in clk=\clk_i, en=$abc$26003$abc$21646$auto$opt_dff.cc:194:make_patterns_logic$10928, arst=!\rst_ni, srst={ }
  18 cells in clk=\clk_aon_i, en=$abc$25333$abc$21328$auto$opt_dff.cc:194:make_patterns_logic$11061, arst=!\rst_aon_ni, srst={ }
  23 cells in clk=\clk_i, en=$abc$26037$abc$24549$auto$opt_dff.cc:194:make_patterns_logic$10910, arst=!\rst_ni, srst={ }
  65 cells in clk=\clk_i, en=$abc$26070$abc$22155$auto$opt_dff.cc:194:make_patterns_logic$11033, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$26212$abc$21715$auto$opt_dff.cc:194:make_patterns_logic$10949, arst=!\rst_ni, srst={ }
  98 cells in clk=\clk_i, en=$abc$26223$abc$21543$auto$opt_dff.cc:194:make_patterns_logic$10922, arst=!\rst_ni, srst={ }
  62 cells in clk=\clk_i, en=$abc$26324$abc$22073$auto$opt_dff.cc:194:make_patterns_logic$11039, arst=!\rst_ni, srst={ }
  57 cells in clk=\clk_i, en=$abc$26399$abc$22242$auto$opt_dff.cc:194:make_patterns_logic$11027, arst=!\rst_ni, srst={ }
  68 cells in clk=\clk_i, en=$abc$26474$abc$22412$auto$opt_dff.cc:194:make_patterns_logic$11015, arst=!\rst_ni, srst={ }
  72 cells in clk=\clk_i, en=$abc$26549$abc$22495$auto$opt_dff.cc:194:make_patterns_logic$11009, arst=!\rst_ni, srst={ }
  65 cells in clk=\clk_i, en=$abc$26622$abc$23006$auto$opt_dff.cc:194:make_patterns_logic$10973, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_aon_i, en=$abc$28370$lo50, arst=!\rst_aon_ni, srst={ }
  125 cells in clk=\clk_aon_i, en={ }, arst=!\rst_aon_ni, srst={ }
  14 cells in clk=\clk_aon_i, en=$abc$26802$abc$23436$u_adc_ctrl_core.u_adc_ctrl_fsm.chn1_val_we_d, arst=!\rst_aon_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$26871$abc$22741$auto$opt_dff.cc:194:make_patterns_logic$10994, arst=!\rst_ni, srst={ }
  73 cells in clk=\clk_i, en=$abc$25679$abc$23170$auto$opt_dff.cc:194:make_patterns_logic$10961, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$26883$abc$22830$auto$opt_dff.cc:194:make_patterns_logic$10988, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$26894$abc$22910$auto$opt_dff.cc:194:make_patterns_logic$10982, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$26979$abc$22997$auto$opt_dff.cc:194:make_patterns_logic$10976, arst=!\rst_ni, srst={ }
  16 cells in clk=\clk_aon_i, en=$abc$26834$abc$21223$u_adc_ctrl_core.u_adc_ctrl_fsm.chn0_val_we_d, arst=!\rst_aon_ni, srst={ }
  753 cells in clk=\clk_i, en=$abc$26988$abc$21518$u_reg.u_reg_if.a_ack, arst=!\rst_ni, srst={ }
  64 cells in clk=\clk_i, en=$abc$26904$abc$22581$auto$opt_dff.cc:194:make_patterns_logic$11003, arst=!\rst_ni, srst={ }
  58 cells in clk=\clk_i, en=$abc$27793$abc$22670$auto$opt_dff.cc:194:make_patterns_logic$10997, arst=!\rst_ni, srst={ }
  60 cells in clk=\clk_i, en=$abc$26141$abc$21984$auto$opt_dff.cc:194:make_patterns_logic$11045, arst=!\rst_ni, srst={ }
  35 cells in clk=\clk_i, en=$abc$25941$abc$24594$u_reg.u_adc_chn0_filter_ctl_0_cdc.src_update_i, arst=!\rst_ni, srst={ }
  68 cells in clk=\clk_i, en=$abc$27864$abc$22839$auto$opt_dff.cc:194:make_patterns_logic$10985, arst=!\rst_ni, srst={ }
  54 cells in clk=\clk_i, en=$abc$27939$abc$22753$auto$opt_dff.cc:194:make_patterns_logic$10991, arst=!\rst_ni, srst={ }
  57 cells in clk=\clk_i, en=$abc$28010$abc$22920$auto$opt_dff.cc:194:make_patterns_logic$10979, arst=!\rst_ni, srst={ }
  15 cells in clk=\clk_i, en=$abc$28081$abc$22661$auto$opt_dff.cc:194:make_patterns_logic$11000, arst=!\rst_ni, srst={ }
  74 cells in clk=\clk_i, en=$abc$28097$abc$21257$auto$opt_dff.cc:194:make_patterns_logic$11051, arst=!\rst_ni, srst={ }
  72 cells in clk=\clk_i, en=$abc$26698$abc$23087$auto$opt_dff.cc:194:make_patterns_logic$10967, arst=!\rst_ni, srst={ }
  54 cells in clk=\clk_i, en=$abc$28299$abc$22324$auto$opt_dff.cc:194:make_patterns_logic$11021, arst=!\rst_ni, srst={ }
  34 cells in clk=\clk_i, en=$abc$25298$abc$24512$auto$opt_dff.cc:194:make_patterns_logic$10903, arst=!\rst_ni, srst={ }
  127 cells in clk=\clk_aon_i, en=$abc$28171$abc$21378$auto$opt_dff.cc:194:make_patterns_logic$11058, arst=!\rst_aon_ni, srst={ }
  264 cells in clk=\clk_i, en={ }, arst=!\rst_ni, srst={ }

3.35.2. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by $abc$24950$abc$20978$auto$opt_dff.cc:219:make_patterns_logic$20210, asynchronously reset by !\rst_aon_ni
Extracted 46 gates and 76 wires to a netlist network with 30 inputs and 42 outputs.

3.35.2.1. Executing ABC.

3.35.3. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by $abc$24996$abc$21031$auto$opt_dff.cc:219:make_patterns_logic$20000, asynchronously reset by !\rst_aon_ni
Extracted 49 gates and 99 wires to a netlist network with 50 inputs and 45 outputs.

3.35.3.1. Executing ABC.

3.35.4. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by $abc$25049$abc$20898$auto$opt_dff.cc:219:make_patterns_logic$20279, asynchronously reset by !\rst_aon_ni
Extracted 38 gates and 78 wires to a netlist network with 40 inputs and 27 outputs.

3.35.4.1. Executing ABC.

3.35.5. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by $abc$25085$abc$20935$auto$opt_dff.cc:219:make_patterns_logic$20253, asynchronously reset by !\rst_aon_ni
Extracted 44 gates and 93 wires to a netlist network with 49 inputs and 39 outputs.

3.35.5.1. Executing ABC.

3.35.6. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25133$abc$23077$auto$opt_dff.cc:194:make_patterns_logic$10970, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.35.6.1. Executing ABC.

3.35.7. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25146$abc$21161$auto$opt_dff.cc:194:make_patterns_logic$19452, asynchronously reset by !\rst_ni
Extracted 21 gates and 36 wires to a netlist network with 14 inputs and 12 outputs.

3.35.7.1. Executing ABC.

3.35.8. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by $abc$25169$abc$21082$auto$opt_dff.cc:219:make_patterns_logic$19813, asynchronously reset by !\rst_aon_ni
Extracted 37 gates and 72 wires to a netlist network with 35 inputs and 24 outputs.

3.35.8.1. Executing ABC.

3.35.9. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25208$abc$21126$auto$opt_dff.cc:219:make_patterns_logic$19711, asynchronously reset by !\rst_ni
Extracted 16 gates and 21 wires to a netlist network with 5 inputs and 5 outputs.

3.35.9.1. Executing ABC.

3.35.10. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25267$abc$21506$u_adc_ctrl_core.u_adc_ctrl_intr.i_adc_ctrl_intr_o.new_event, asynchronously reset by !\rst_ni
Extracted 12 gates and 20 wires to a netlist network with 8 inputs and 7 outputs.

3.35.10.1. Executing ABC.

3.35.11. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25279$abc$23160$auto$opt_dff.cc:194:make_patterns_logic$10964, asynchronously reset by !\rst_ni
Extracted 11 gates and 17 wires to a netlist network with 6 inputs and 8 outputs.

3.35.11.1. Executing ABC.

3.35.12. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25226$abc$21184$auto$opt_dff.cc:219:make_patterns_logic$19503, asynchronously reset by !\rst_ni
Extracted 35 gates and 48 wires to a netlist network with 13 inputs and 12 outputs.

3.35.12.1. Executing ABC.

3.35.13. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25290$abc$24582$auto$opt_dff.cc:194:make_patterns_logic$10943, asynchronously reset by !\rst_ni
Extracted 7 gates and 13 wires to a netlist network with 6 inputs and 2 outputs.

3.35.13.1. Executing ABC.

3.35.14. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25352$abc$21518$auto$opt_dff.cc:194:make_patterns_logic$10898, asynchronously reset by !\rst_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 3 outputs.

3.35.14.1. Executing ABC.

3.35.15. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25358$abc$21746$u_reg.intg_err, asynchronously reset by !\rst_ni
Extracted 224 gates and 315 wires to a netlist network with 90 inputs and 2 outputs.

3.35.15.1. Executing ABC.

3.35.16. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25584$abc$21525$auto$opt_dff.cc:194:make_patterns_logic$10952, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.35.16.1. Executing ABC.

3.35.17. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25594$abc$22568$auto$opt_dff.cc:194:make_patterns_logic$11006, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.35.17.1. Executing ABC.

3.35.18. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25605$abc$22064$auto$opt_dff.cc:194:make_patterns_logic$11042, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.35.18.1. Executing ABC.

3.35.19. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25615$abc$22233$auto$opt_dff.cc:194:make_patterns_logic$11030, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.35.19.1. Executing ABC.

3.35.20. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25626$abc$22313$auto$opt_dff.cc:194:make_patterns_logic$11024, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.35.20.1. Executing ABC.

3.35.21. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25637$abc$21973$auto$opt_dff.cc:194:make_patterns_logic$11048, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.35.21.1. Executing ABC.

3.35.22. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by $abc$28370$lo19, asynchronously reset by !\rst_aon_ni
Extracted 10 gates and 20 wires to a netlist network with 10 inputs and 10 outputs.

3.35.22.1. Executing ABC.

3.35.23. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25754$abc$24594$u_reg.u_adc_intr_status_oneshot.wr_en, asynchronously reset by !\rst_ni
Extracted 3 gates and 7 wires to a netlist network with 3 inputs and 2 outputs.

3.35.23.1. Executing ABC.

3.35.24. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25760$abc$22144$auto$opt_dff.cc:194:make_patterns_logic$11036, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.35.24.1. Executing ABC.

3.35.25. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25771$abc$21735$auto$opt_dff.cc:194:make_patterns_logic$11054, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 8 outputs.

3.35.25.1. Executing ABC.

3.35.26. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25782$abc$21704$auto$opt_dff.cc:194:make_patterns_logic$10946, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.35.26.1. Executing ABC.

3.35.27. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25792$abc$21691$auto$opt_dff.cc:194:make_patterns_logic$10919, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.35.27.1. Executing ABC.

3.35.28. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25802$abc$22483$auto$opt_dff.cc:194:make_patterns_logic$11012, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 7 outputs.

3.35.28.1. Executing ABC.

3.35.29. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25814$abc$22403$auto$opt_dff.cc:194:make_patterns_logic$11018, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 7 outputs.

3.35.29.1. Executing ABC.

3.35.30. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25826$abc$21676$auto$opt_dff.cc:194:make_patterns_logic$10931, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 8 outputs.

3.35.30.1. Executing ABC.

3.35.31. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25838$abc$21635$auto$opt_dff.cc:194:make_patterns_logic$10925, asynchronously reset by !\rst_ni
Extracted 12 gates and 20 wires to a netlist network with 8 inputs and 9 outputs.

3.35.31.1. Executing ABC.

3.35.32. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25851$abc$23665$auto$opt_dff.cc:194:make_patterns_logic$10906, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.35.32.1. Executing ABC.

3.35.33. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25861$abc$23370$auto$opt_dff.cc:194:make_patterns_logic$10913, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.35.33.1. Executing ABC.

3.35.34. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25873$abc$21146$auto$opt_dff.cc:219:make_patterns_logic$19631, asynchronously reset by !\rst_ni
Extracted 14 gates and 20 wires to a netlist network with 6 inputs and 4 outputs.

3.35.34.1. Executing ABC.

3.35.35. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25888$abc$23380$auto$opt_dff.cc:194:make_patterns_logic$10916, asynchronously reset by !\rst_ni
Extracted 51 gates and 73 wires to a netlist network with 22 inputs and 18 outputs.

3.35.35.1. Executing ABC.

3.35.36. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$26003$abc$21646$auto$opt_dff.cc:194:make_patterns_logic$10928, asynchronously reset by !\rst_ni
Extracted 31 gates and 54 wires to a netlist network with 23 inputs and 12 outputs.

3.35.36.1. Executing ABC.

3.35.37. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by $abc$25333$abc$21328$auto$opt_dff.cc:194:make_patterns_logic$11061, asynchronously reset by !\rst_aon_ni
Extracted 18 gates and 20 wires to a netlist network with 2 inputs and 3 outputs.

3.35.37.1. Executing ABC.

3.35.38. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$26037$abc$24549$auto$opt_dff.cc:194:make_patterns_logic$10910, asynchronously reset by !\rst_ni
Extracted 23 gates and 37 wires to a netlist network with 14 inputs and 9 outputs.

3.35.38.1. Executing ABC.

3.35.39. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$26070$abc$22155$auto$opt_dff.cc:194:make_patterns_logic$11033, asynchronously reset by !\rst_ni
Extracted 65 gates and 110 wires to a netlist network with 45 inputs and 23 outputs.

3.35.39.1. Executing ABC.

3.35.40. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$26212$abc$21715$auto$opt_dff.cc:194:make_patterns_logic$10949, asynchronously reset by !\rst_ni
Extracted 9 gates and 16 wires to a netlist network with 7 inputs and 3 outputs.

3.35.40.1. Executing ABC.

3.35.41. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$26223$abc$21543$auto$opt_dff.cc:194:make_patterns_logic$10922, asynchronously reset by !\rst_ni
Extracted 98 gates and 139 wires to a netlist network with 41 inputs and 36 outputs.

3.35.41.1. Executing ABC.

3.35.42. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$26324$abc$22073$auto$opt_dff.cc:194:make_patterns_logic$11039, asynchronously reset by !\rst_ni
Extracted 62 gates and 102 wires to a netlist network with 40 inputs and 27 outputs.

3.35.42.1. Executing ABC.

3.35.43. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$26399$abc$22242$auto$opt_dff.cc:194:make_patterns_logic$11027, asynchronously reset by !\rst_ni
Extracted 57 gates and 92 wires to a netlist network with 35 inputs and 27 outputs.

3.35.43.1. Executing ABC.

3.35.44. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$26474$abc$22412$auto$opt_dff.cc:194:make_patterns_logic$11015, asynchronously reset by !\rst_ni
Extracted 68 gates and 114 wires to a netlist network with 46 inputs and 27 outputs.

3.35.44.1. Executing ABC.

3.35.45. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$26549$abc$22495$auto$opt_dff.cc:194:make_patterns_logic$11009, asynchronously reset by !\rst_ni
Extracted 72 gates and 123 wires to a netlist network with 51 inputs and 25 outputs.

3.35.45.1. Executing ABC.

3.35.46. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$26622$abc$23006$auto$opt_dff.cc:194:make_patterns_logic$10973, asynchronously reset by !\rst_ni
Extracted 65 gates and 108 wires to a netlist network with 43 inputs and 27 outputs.

3.35.46.1. Executing ABC.

3.35.47. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by $abc$28370$lo50, asynchronously reset by !\rst_aon_ni
Extracted 10 gates and 20 wires to a netlist network with 10 inputs and 10 outputs.

3.35.47.1. Executing ABC.

3.35.48. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, asynchronously reset by !\rst_aon_ni
Extracted 125 gates and 153 wires to a netlist network with 28 inputs and 27 outputs.

3.35.48.1. Executing ABC.

3.35.49. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by $abc$26802$abc$23436$u_adc_ctrl_core.u_adc_ctrl_fsm.chn1_val_we_d, asynchronously reset by !\rst_aon_ni
Extracted 14 gates and 29 wires to a netlist network with 15 inputs and 12 outputs.

3.35.49.1. Executing ABC.

3.35.50. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$26871$abc$22741$auto$opt_dff.cc:194:make_patterns_logic$10994, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 8 outputs.

3.35.50.1. Executing ABC.

3.35.51. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25679$abc$23170$auto$opt_dff.cc:194:make_patterns_logic$10961, asynchronously reset by !\rst_ni
Extracted 73 gates and 113 wires to a netlist network with 40 inputs and 27 outputs.

3.35.51.1. Executing ABC.

3.35.52. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$26883$abc$22830$auto$opt_dff.cc:194:make_patterns_logic$10988, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.35.52.1. Executing ABC.

3.35.53. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$26894$abc$22910$auto$opt_dff.cc:194:make_patterns_logic$10982, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.35.53.1. Executing ABC.

3.35.54. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$26979$abc$22997$auto$opt_dff.cc:194:make_patterns_logic$10976, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.35.54.1. Executing ABC.

3.35.55. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by $abc$26834$abc$21223$u_adc_ctrl_core.u_adc_ctrl_fsm.chn0_val_we_d, asynchronously reset by !\rst_aon_ni
Extracted 16 gates and 33 wires to a netlist network with 17 inputs and 11 outputs.

3.35.55.1. Executing ABC.

3.35.56. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$26988$abc$21518$u_reg.u_reg_if.a_ack, asynchronously reset by !\rst_ni
Extracted 753 gates and 1084 wires to a netlist network with 331 inputs and 59 outputs.

3.35.56.1. Executing ABC.

3.35.57. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$26904$abc$22581$auto$opt_dff.cc:194:make_patterns_logic$11003, asynchronously reset by !\rst_ni
Extracted 64 gates and 107 wires to a netlist network with 43 inputs and 27 outputs.

3.35.57.1. Executing ABC.

3.35.58. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27793$abc$22670$auto$opt_dff.cc:194:make_patterns_logic$10997, asynchronously reset by !\rst_ni
Extracted 58 gates and 95 wires to a netlist network with 37 inputs and 23 outputs.

3.35.58.1. Executing ABC.

3.35.59. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$26141$abc$21984$auto$opt_dff.cc:194:make_patterns_logic$11045, asynchronously reset by !\rst_ni
Extracted 60 gates and 100 wires to a netlist network with 40 inputs and 23 outputs.

3.35.59.1. Executing ABC.

3.35.60. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25941$abc$24594$u_reg.u_adc_chn0_filter_ctl_0_cdc.src_update_i, asynchronously reset by !\rst_ni
Extracted 35 gates and 69 wires to a netlist network with 34 inputs and 25 outputs.

3.35.60.1. Executing ABC.

3.35.61. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27864$abc$22839$auto$opt_dff.cc:194:make_patterns_logic$10985, asynchronously reset by !\rst_ni
Extracted 68 gates and 116 wires to a netlist network with 48 inputs and 26 outputs.

3.35.61.1. Executing ABC.

3.35.62. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27939$abc$22753$auto$opt_dff.cc:194:make_patterns_logic$10991, asynchronously reset by !\rst_ni
Extracted 54 gates and 86 wires to a netlist network with 32 inputs and 24 outputs.

3.35.62.1. Executing ABC.

3.35.63. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$28010$abc$22920$auto$opt_dff.cc:194:make_patterns_logic$10979, asynchronously reset by !\rst_ni
Extracted 57 gates and 94 wires to a netlist network with 37 inputs and 23 outputs.

3.35.63.1. Executing ABC.

3.35.64. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$28081$abc$22661$auto$opt_dff.cc:194:make_patterns_logic$11000, asynchronously reset by !\rst_ni
Extracted 15 gates and 24 wires to a netlist network with 9 inputs and 10 outputs.

3.35.64.1. Executing ABC.

3.35.65. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$28097$abc$21257$auto$opt_dff.cc:194:make_patterns_logic$11051, asynchronously reset by !\rst_ni
Extracted 74 gates and 104 wires to a netlist network with 30 inputs and 26 outputs.

3.35.65.1. Executing ABC.

3.35.66. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$26698$abc$23087$auto$opt_dff.cc:194:make_patterns_logic$10967, asynchronously reset by !\rst_ni
Extracted 72 gates and 123 wires to a netlist network with 51 inputs and 25 outputs.

3.35.66.1. Executing ABC.

3.35.67. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$28299$abc$22324$auto$opt_dff.cc:194:make_patterns_logic$11021, asynchronously reset by !\rst_ni
Extracted 54 gates and 88 wires to a netlist network with 34 inputs and 23 outputs.

3.35.67.1. Executing ABC.

3.35.68. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25298$abc$24512$auto$opt_dff.cc:194:make_patterns_logic$10903, asynchronously reset by !\rst_ni
Extracted 34 gates and 52 wires to a netlist network with 18 inputs and 14 outputs.

3.35.68.1. Executing ABC.

3.35.69. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by $abc$28171$abc$21378$auto$opt_dff.cc:194:make_patterns_logic$11058, asynchronously reset by !\rst_aon_ni
Extracted 127 gates and 129 wires to a netlist network with 2 inputs and 13 outputs.

3.35.69.1. Executing ABC.

3.35.70. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, asynchronously reset by !\rst_ni
Extracted 264 gates and 328 wires to a netlist network with 64 inputs and 67 outputs.

3.35.70.1. Executing ABC.

yosys> abc -dff

3.36. Executing ABC pass (technology mapping using ABC).

3.36.1. Summary of detected clock domains:
  46 cells in clk=\clk_aon_i, en=$abc$28954$abc$24950$abc$20978$auto$opt_dff.cc:219:make_patterns_logic$20210, arst=!\rst_aon_ni, srst={ }
  57 cells in clk=\clk_aon_i, en=$abc$29001$abc$24996$abc$21031$auto$opt_dff.cc:219:make_patterns_logic$20000, arst=!\rst_aon_ni, srst={ }
  36 cells in clk=\clk_aon_i, en=$abc$29052$abc$25049$abc$20898$auto$opt_dff.cc:219:make_patterns_logic$20279, arst=!\rst_aon_ni, srst={ }
  44 cells in clk=\clk_aon_i, en=$abc$29097$abc$25085$abc$20935$auto$opt_dff.cc:219:make_patterns_logic$20253, arst=!\rst_aon_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$29143$abc$25133$abc$23077$auto$opt_dff.cc:194:make_patterns_logic$10970, arst=!\rst_ni, srst={ }
  18 cells in clk=\clk_i, en=$abc$29154$abc$25146$abc$21161$auto$opt_dff.cc:194:make_patterns_logic$19452, arst=!\rst_ni, srst={ }
  37 cells in clk=\clk_aon_i, en=$abc$29173$abc$25169$abc$21082$auto$opt_dff.cc:219:make_patterns_logic$19813, arst=!\rst_aon_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$29229$abc$25267$abc$21506$u_adc_ctrl_core.u_adc_ctrl_intr.i_adc_ctrl_intr_o.new_event, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$29242$abc$25279$abc$23160$auto$opt_dff.cc:194:make_patterns_logic$10964, arst=!\rst_ni, srst={ }
  16 cells in clk=\clk_i, en=$abc$29212$abc$25208$abc$21126$auto$opt_dff.cc:219:make_patterns_logic$19711, arst=!\rst_ni, srst={ }
  35 cells in clk=\clk_i, en=$abc$29254$abc$25226$abc$21184$auto$opt_dff.cc:219:make_patterns_logic$19503, arst=!\rst_ni, srst={ }
  7 cells in clk=\clk_i, en=$abc$29292$abc$25290$abc$24582$auto$opt_dff.cc:194:make_patterns_logic$10943, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$29300$abc$25352$abc$21518$auto$opt_dff.cc:194:make_patterns_logic$10898, arst=!\rst_ni, srst={ }
  228 cells in clk=\clk_i, en=$abc$29306$abc$25358$abc$21746$u_reg.intg_err, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$29536$abc$25584$abc$21525$auto$opt_dff.cc:194:make_patterns_logic$10952, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$29547$abc$25594$abc$22568$auto$opt_dff.cc:194:make_patterns_logic$11006, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$29558$abc$25605$abc$22064$auto$opt_dff.cc:194:make_patterns_logic$11042, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$29569$abc$25615$abc$22233$auto$opt_dff.cc:194:make_patterns_logic$11030, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$29580$abc$25626$abc$22313$auto$opt_dff.cc:194:make_patterns_logic$11024, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$29591$abc$25637$abc$21973$auto$opt_dff.cc:194:make_patterns_logic$11048, arst=!\rst_ni, srst={ }
  3 cells in clk=\clk_i, en=$abc$29633$abc$25754$abc$24594$u_reg.u_adc_intr_status_oneshot.wr_en, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$29638$abc$25760$abc$22144$auto$opt_dff.cc:194:make_patterns_logic$11036, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$29649$abc$25771$abc$21735$auto$opt_dff.cc:194:make_patterns_logic$11054, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$29661$abc$25782$abc$21704$auto$opt_dff.cc:194:make_patterns_logic$10946, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$29671$abc$25792$abc$21691$auto$opt_dff.cc:194:make_patterns_logic$10919, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$29681$abc$25802$abc$22483$auto$opt_dff.cc:194:make_patterns_logic$11012, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$29693$abc$25814$abc$22403$auto$opt_dff.cc:194:make_patterns_logic$11018, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$29705$abc$25826$abc$21676$auto$opt_dff.cc:194:make_patterns_logic$10931, arst=!\rst_ni, srst={ }
  12 cells in clk=\clk_i, en=$abc$29717$abc$25838$abc$21635$auto$opt_dff.cc:194:make_patterns_logic$10925, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$29730$abc$25851$abc$23665$auto$opt_dff.cc:194:make_patterns_logic$10906, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$29740$abc$25861$abc$23370$auto$opt_dff.cc:194:make_patterns_logic$10913, arst=!\rst_ni, srst={ }
  127 cells in clk=\clk_aon_i, en=$abc$32482$abc$28171$abc$21378$auto$opt_dff.cc:194:make_patterns_logic$11058, arst=!\rst_aon_ni, srst={ }
  14 cells in clk=\clk_i, en=$abc$29750$abc$25873$abc$21146$auto$opt_dff.cc:219:make_patterns_logic$19631, arst=!\rst_ni, srst={ }
  51 cells in clk=\clk_i, en=$abc$29765$abc$25888$abc$23380$auto$opt_dff.cc:194:make_patterns_logic$10916, arst=!\rst_ni, srst={ }
  30 cells in clk=\clk_i, en=$abc$29819$abc$26003$abc$21646$auto$opt_dff.cc:194:make_patterns_logic$10928, arst=!\rst_ni, srst={ }
  18 cells in clk=\clk_aon_i, en=$abc$29851$abc$25333$abc$21328$auto$opt_dff.cc:194:make_patterns_logic$11061, arst=!\rst_aon_ni, srst={ }
  26 cells in clk=\clk_i, en=$abc$29870$abc$26037$abc$24549$auto$opt_dff.cc:194:make_patterns_logic$10910, arst=!\rst_ni, srst={ }
  53 cells in clk=\clk_i, en=$abc$29899$abc$26070$abc$22155$auto$opt_dff.cc:194:make_patterns_logic$11033, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$29970$abc$26212$abc$21715$auto$opt_dff.cc:194:make_patterns_logic$10949, arst=!\rst_ni, srst={ }
  62 cells in clk=\clk_i, en=$abc$30080$abc$26324$abc$22073$auto$opt_dff.cc:194:make_patterns_logic$11039, arst=!\rst_ni, srst={ }
  69 cells in clk=\clk_i, en=$abc$30155$abc$26399$abc$22242$auto$opt_dff.cc:194:make_patterns_logic$11027, arst=!\rst_ni, srst={ }
  64 cells in clk=\clk_i, en=$abc$30230$abc$26474$abc$22412$auto$opt_dff.cc:194:make_patterns_logic$11015, arst=!\rst_ni, srst={ }
  72 cells in clk=\clk_i, en=$abc$30305$abc$26549$abc$22495$auto$opt_dff.cc:194:make_patterns_logic$11009, arst=!\rst_ni, srst={ }
  61 cells in clk=\clk_i, en=$abc$30378$abc$26622$abc$23006$auto$opt_dff.cc:194:make_patterns_logic$10973, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_aon_i, en=$abc$30484$lo79, arst=!\rst_aon_ni, srst={ }
  11 cells in clk=\clk_aon_i, en=$abc$30710$abc$26802$abc$23436$u_adc_ctrl_core.u_adc_ctrl_fsm.chn1_val_we_d, arst=!\rst_aon_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$30745$abc$26871$abc$22741$auto$opt_dff.cc:194:make_patterns_logic$10994, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$30832$abc$26883$abc$22830$auto$opt_dff.cc:194:make_patterns_logic$10988, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$30842$abc$26894$abc$22910$auto$opt_dff.cc:194:make_patterns_logic$10982, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$30852$abc$26979$abc$22997$auto$opt_dff.cc:194:make_patterns_logic$10976, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_aon_i, en=$abc$30862$abc$26834$abc$21223$u_adc_ctrl_core.u_adc_ctrl_fsm.chn0_val_we_d, arst=!\rst_aon_ni, srst={ }
  758 cells in clk=\clk_i, en=$abc$30899$abc$26988$abc$21518$u_reg.u_reg_if.a_ack, arst=!\rst_ni, srst={ }
  57 cells in clk=\clk_i, en=$abc$31711$abc$26904$abc$22581$auto$opt_dff.cc:194:make_patterns_logic$11003, arst=!\rst_ni, srst={ }
  65 cells in clk=\clk_i, en=$abc$31786$abc$27793$abc$22670$auto$opt_dff.cc:194:make_patterns_logic$10997, arst=!\rst_ni, srst={ }
  60 cells in clk=\clk_i, en=$abc$31857$abc$26141$abc$21984$auto$opt_dff.cc:194:make_patterns_logic$11045, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_aon_i, en=$abc$30484$lo65, arst=!\rst_aon_ni, srst={ }
  134 cells in clk=\clk_aon_i, en={ }, arst=!\rst_aon_ni, srst={ }
  38 cells in clk=\clk_i, en=$abc$31928$abc$25941$abc$24594$u_reg.u_adc_chn0_filter_ctl_0_cdc.src_update_i, arst=!\rst_ni, srst={ }
  98 cells in clk=\clk_i, en=$abc$29981$abc$26223$abc$21543$auto$opt_dff.cc:194:make_patterns_logic$10922, arst=!\rst_ni, srst={ }
  60 cells in clk=\clk_i, en=$abc$31996$abc$27864$abc$22839$auto$opt_dff.cc:194:make_patterns_logic$10985, arst=!\rst_ni, srst={ }
  68 cells in clk=\clk_i, en=$abc$30757$abc$25679$abc$23170$auto$opt_dff.cc:194:make_patterns_logic$10961, arst=!\rst_ni, srst={ }
  62 cells in clk=\clk_i, en=$abc$32070$abc$27939$abc$22753$auto$opt_dff.cc:194:make_patterns_logic$10991, arst=!\rst_ni, srst={ }
  61 cells in clk=\clk_i, en=$abc$32142$abc$28010$abc$22920$auto$opt_dff.cc:194:make_patterns_logic$10979, arst=!\rst_ni, srst={ }
  15 cells in clk=\clk_i, en=$abc$32213$abc$28081$abc$22661$auto$opt_dff.cc:194:make_patterns_logic$11000, arst=!\rst_ni, srst={ }
  73 cells in clk=\clk_i, en=$abc$32229$abc$28097$abc$21257$auto$opt_dff.cc:194:make_patterns_logic$11051, arst=!\rst_ni, srst={ }
  72 cells in clk=\clk_i, en=$abc$32303$abc$26698$abc$23087$auto$opt_dff.cc:194:make_patterns_logic$10967, arst=!\rst_ni, srst={ }
  58 cells in clk=\clk_i, en=$abc$32376$abc$28299$abc$22324$auto$opt_dff.cc:194:make_patterns_logic$11021, arst=!\rst_ni, srst={ }
  35 cells in clk=\clk_i, en=$abc$32447$abc$25298$abc$24512$auto$opt_dff.cc:194:make_patterns_logic$10903, arst=!\rst_ni, srst={ }
  264 cells in clk=\clk_i, en={ }, arst=!\rst_ni, srst={ }

3.36.2. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by $abc$28954$abc$24950$abc$20978$auto$opt_dff.cc:219:make_patterns_logic$20210, asynchronously reset by !\rst_aon_ni
Extracted 46 gates and 76 wires to a netlist network with 30 inputs and 42 outputs.

3.36.2.1. Executing ABC.

3.36.3. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by $abc$29001$abc$24996$abc$21031$auto$opt_dff.cc:219:make_patterns_logic$20000, asynchronously reset by !\rst_aon_ni
Extracted 57 gates and 109 wires to a netlist network with 52 inputs and 44 outputs.

3.36.3.1. Executing ABC.

3.36.4. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by $abc$29052$abc$25049$abc$20898$auto$opt_dff.cc:219:make_patterns_logic$20279, asynchronously reset by !\rst_aon_ni
Extracted 36 gates and 73 wires to a netlist network with 37 inputs and 28 outputs.

3.36.4.1. Executing ABC.

3.36.5. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by $abc$29097$abc$25085$abc$20935$auto$opt_dff.cc:219:make_patterns_logic$20253, asynchronously reset by !\rst_aon_ni
Extracted 44 gates and 93 wires to a netlist network with 49 inputs and 39 outputs.

3.36.5.1. Executing ABC.

3.36.6. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$29143$abc$25133$abc$23077$auto$opt_dff.cc:194:make_patterns_logic$10970, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.36.6.1. Executing ABC.

3.36.7. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$29154$abc$25146$abc$21161$auto$opt_dff.cc:194:make_patterns_logic$19452, asynchronously reset by !\rst_ni
Extracted 18 gates and 32 wires to a netlist network with 14 inputs and 12 outputs.

3.36.7.1. Executing ABC.

3.36.8. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by $abc$29173$abc$25169$abc$21082$auto$opt_dff.cc:219:make_patterns_logic$19813, asynchronously reset by !\rst_aon_ni
Extracted 37 gates and 72 wires to a netlist network with 35 inputs and 24 outputs.

3.36.8.1. Executing ABC.

3.36.9. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$29229$abc$25267$abc$21506$u_adc_ctrl_core.u_adc_ctrl_intr.i_adc_ctrl_intr_o.new_event, asynchronously reset by !\rst_ni
Extracted 11 gates and 19 wires to a netlist network with 8 inputs and 6 outputs.

3.36.9.1. Executing ABC.

3.36.10. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$29242$abc$25279$abc$23160$auto$opt_dff.cc:194:make_patterns_logic$10964, asynchronously reset by !\rst_ni
Extracted 11 gates and 17 wires to a netlist network with 6 inputs and 8 outputs.

3.36.10.1. Executing ABC.

3.36.11. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$29212$abc$25208$abc$21126$auto$opt_dff.cc:219:make_patterns_logic$19711, asynchronously reset by !\rst_ni
Extracted 16 gates and 21 wires to a netlist network with 5 inputs and 5 outputs.

3.36.11.1. Executing ABC.

3.36.12. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$29254$abc$25226$abc$21184$auto$opt_dff.cc:219:make_patterns_logic$19503, asynchronously reset by !\rst_ni
Extracted 35 gates and 48 wires to a netlist network with 13 inputs and 13 outputs.

3.36.12.1. Executing ABC.

3.36.13. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$29292$abc$25290$abc$24582$auto$opt_dff.cc:194:make_patterns_logic$10943, asynchronously reset by !\rst_ni
Extracted 7 gates and 13 wires to a netlist network with 6 inputs and 2 outputs.

3.36.13.1. Executing ABC.

3.36.14. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$29300$abc$25352$abc$21518$auto$opt_dff.cc:194:make_patterns_logic$10898, asynchronously reset by !\rst_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 3 outputs.

3.36.14.1. Executing ABC.

3.36.15. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$29306$abc$25358$abc$21746$u_reg.intg_err, asynchronously reset by !\rst_ni
Extracted 228 gates and 319 wires to a netlist network with 90 inputs and 2 outputs.

3.36.15.1. Executing ABC.

3.36.16. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$29536$abc$25584$abc$21525$auto$opt_dff.cc:194:make_patterns_logic$10952, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.36.16.1. Executing ABC.

3.36.17. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$29547$abc$25594$abc$22568$auto$opt_dff.cc:194:make_patterns_logic$11006, asynchronously reset by !\rst_ni
Extracted 11 gates and 17 wires to a netlist network with 6 inputs and 8 outputs.

3.36.17.1. Executing ABC.

3.36.18. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$29558$abc$25605$abc$22064$auto$opt_dff.cc:194:make_patterns_logic$11042, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.36.18.1. Executing ABC.

3.36.19. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$29569$abc$25615$abc$22233$auto$opt_dff.cc:194:make_patterns_logic$11030, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.36.19.1. Executing ABC.

3.36.20. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$29580$abc$25626$abc$22313$auto$opt_dff.cc:194:make_patterns_logic$11024, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.36.20.1. Executing ABC.

3.36.21. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$29591$abc$25637$abc$21973$auto$opt_dff.cc:194:make_patterns_logic$11048, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.36.21.1. Executing ABC.

3.36.22. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$29633$abc$25754$abc$24594$u_reg.u_adc_intr_status_oneshot.wr_en, asynchronously reset by !\rst_ni
Extracted 3 gates and 7 wires to a netlist network with 3 inputs and 2 outputs.

3.36.22.1. Executing ABC.

3.36.23. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$29638$abc$25760$abc$22144$auto$opt_dff.cc:194:make_patterns_logic$11036, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.36.23.1. Executing ABC.

3.36.24. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$29649$abc$25771$abc$21735$auto$opt_dff.cc:194:make_patterns_logic$11054, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 8 outputs.

3.36.24.1. Executing ABC.

3.36.25. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$29661$abc$25782$abc$21704$auto$opt_dff.cc:194:make_patterns_logic$10946, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.36.25.1. Executing ABC.

3.36.26. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$29671$abc$25792$abc$21691$auto$opt_dff.cc:194:make_patterns_logic$10919, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.36.26.1. Executing ABC.

3.36.27. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$29681$abc$25802$abc$22483$auto$opt_dff.cc:194:make_patterns_logic$11012, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 7 outputs.

3.36.27.1. Executing ABC.

3.36.28. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$29693$abc$25814$abc$22403$auto$opt_dff.cc:194:make_patterns_logic$11018, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 7 outputs.

3.36.28.1. Executing ABC.

3.36.29. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$29705$abc$25826$abc$21676$auto$opt_dff.cc:194:make_patterns_logic$10931, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 8 outputs.

3.36.29.1. Executing ABC.

3.36.30. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$29717$abc$25838$abc$21635$auto$opt_dff.cc:194:make_patterns_logic$10925, asynchronously reset by !\rst_ni
Extracted 12 gates and 20 wires to a netlist network with 8 inputs and 9 outputs.

3.36.30.1. Executing ABC.

3.36.31. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$29730$abc$25851$abc$23665$auto$opt_dff.cc:194:make_patterns_logic$10906, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.36.31.1. Executing ABC.

3.36.32. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$29740$abc$25861$abc$23370$auto$opt_dff.cc:194:make_patterns_logic$10913, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.36.32.1. Executing ABC.

3.36.33. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by $abc$32482$abc$28171$abc$21378$auto$opt_dff.cc:194:make_patterns_logic$11058, asynchronously reset by !\rst_aon_ni
Extracted 127 gates and 129 wires to a netlist network with 2 inputs and 13 outputs.

3.36.33.1. Executing ABC.

3.36.34. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$29750$abc$25873$abc$21146$auto$opt_dff.cc:219:make_patterns_logic$19631, asynchronously reset by !\rst_ni
Extracted 14 gates and 20 wires to a netlist network with 6 inputs and 4 outputs.

3.36.34.1. Executing ABC.

3.36.35. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$29765$abc$25888$abc$23380$auto$opt_dff.cc:194:make_patterns_logic$10916, asynchronously reset by !\rst_ni
Extracted 51 gates and 74 wires to a netlist network with 23 inputs and 17 outputs.

3.36.35.1. Executing ABC.

3.36.36. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$29819$abc$26003$abc$21646$auto$opt_dff.cc:194:make_patterns_logic$10928, asynchronously reset by !\rst_ni
Extracted 30 gates and 52 wires to a netlist network with 22 inputs and 12 outputs.

3.36.36.1. Executing ABC.

3.36.37. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by $abc$29851$abc$25333$abc$21328$auto$opt_dff.cc:194:make_patterns_logic$11061, asynchronously reset by !\rst_aon_ni
Extracted 18 gates and 20 wires to a netlist network with 2 inputs and 3 outputs.

3.36.37.1. Executing ABC.

3.36.38. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$29870$abc$26037$abc$24549$auto$opt_dff.cc:194:make_patterns_logic$10910, asynchronously reset by !\rst_ni
Extracted 26 gates and 42 wires to a netlist network with 16 inputs and 10 outputs.

3.36.38.1. Executing ABC.

3.36.39. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$29899$abc$26070$abc$22155$auto$opt_dff.cc:194:make_patterns_logic$11033, asynchronously reset by !\rst_ni
Extracted 53 gates and 84 wires to a netlist network with 31 inputs and 24 outputs.

3.36.39.1. Executing ABC.

3.36.40. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$29970$abc$26212$abc$21715$auto$opt_dff.cc:194:make_patterns_logic$10949, asynchronously reset by !\rst_ni
Extracted 9 gates and 16 wires to a netlist network with 7 inputs and 3 outputs.

3.36.40.1. Executing ABC.

3.36.41. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$30080$abc$26324$abc$22073$auto$opt_dff.cc:194:make_patterns_logic$11039, asynchronously reset by !\rst_ni
Extracted 62 gates and 103 wires to a netlist network with 41 inputs and 26 outputs.

3.36.41.1. Executing ABC.

3.36.42. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$30155$abc$26399$abc$22242$auto$opt_dff.cc:194:make_patterns_logic$11027, asynchronously reset by !\rst_ni
Extracted 69 gates and 118 wires to a netlist network with 49 inputs and 26 outputs.

3.36.42.1. Executing ABC.

3.36.43. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$30230$abc$26474$abc$22412$auto$opt_dff.cc:194:make_patterns_logic$11015, asynchronously reset by !\rst_ni
Extracted 64 gates and 106 wires to a netlist network with 42 inputs and 24 outputs.

3.36.43.1. Executing ABC.

3.36.44. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$30305$abc$26549$abc$22495$auto$opt_dff.cc:194:make_patterns_logic$11009, asynchronously reset by !\rst_ni
Extracted 72 gates and 123 wires to a netlist network with 51 inputs and 25 outputs.

3.36.44.1. Executing ABC.

3.36.45. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$30378$abc$26622$abc$23006$auto$opt_dff.cc:194:make_patterns_logic$10973, asynchronously reset by !\rst_ni
Extracted 61 gates and 102 wires to a netlist network with 41 inputs and 26 outputs.

3.36.45.1. Executing ABC.

3.36.46. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by $abc$30484$lo79, asynchronously reset by !\rst_aon_ni
Extracted 10 gates and 20 wires to a netlist network with 10 inputs and 10 outputs.

3.36.46.1. Executing ABC.

3.36.47. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by $abc$30710$abc$26802$abc$23436$u_adc_ctrl_core.u_adc_ctrl_fsm.chn1_val_we_d, asynchronously reset by !\rst_aon_ni
Extracted 11 gates and 23 wires to a netlist network with 12 inputs and 11 outputs.

3.36.47.1. Executing ABC.

3.36.48. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$30745$abc$26871$abc$22741$auto$opt_dff.cc:194:make_patterns_logic$10994, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 8 outputs.

3.36.48.1. Executing ABC.

3.36.49. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$30832$abc$26883$abc$22830$auto$opt_dff.cc:194:make_patterns_logic$10988, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.36.49.1. Executing ABC.

3.36.50. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$30842$abc$26894$abc$22910$auto$opt_dff.cc:194:make_patterns_logic$10982, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.36.50.1. Executing ABC.

3.36.51. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$30852$abc$26979$abc$22997$auto$opt_dff.cc:194:make_patterns_logic$10976, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.36.51.1. Executing ABC.

3.36.52. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by $abc$30862$abc$26834$abc$21223$u_adc_ctrl_core.u_adc_ctrl_fsm.chn0_val_we_d, asynchronously reset by !\rst_aon_ni
Extracted 10 gates and 20 wires to a netlist network with 10 inputs and 10 outputs.

3.36.52.1. Executing ABC.

3.36.53. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$30899$abc$26988$abc$21518$u_reg.u_reg_if.a_ack, asynchronously reset by !\rst_ni
Extracted 758 gates and 1089 wires to a netlist network with 331 inputs and 59 outputs.

3.36.53.1. Executing ABC.

3.36.54. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$31711$abc$26904$abc$22581$auto$opt_dff.cc:194:make_patterns_logic$11003, asynchronously reset by !\rst_ni
Extracted 57 gates and 93 wires to a netlist network with 36 inputs and 27 outputs.

3.36.54.1. Executing ABC.

3.36.55. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$31786$abc$27793$abc$22670$auto$opt_dff.cc:194:make_patterns_logic$10997, asynchronously reset by !\rst_ni
Extracted 65 gates and 109 wires to a netlist network with 44 inputs and 23 outputs.

3.36.55.1. Executing ABC.

3.36.56. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$31857$abc$26141$abc$21984$auto$opt_dff.cc:194:make_patterns_logic$11045, asynchronously reset by !\rst_ni
Extracted 60 gates and 98 wires to a netlist network with 38 inputs and 24 outputs.

3.36.56.1. Executing ABC.

3.36.57. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by $abc$30484$lo65, asynchronously reset by !\rst_aon_ni
Extracted 10 gates and 20 wires to a netlist network with 10 inputs and 10 outputs.

3.36.57.1. Executing ABC.

3.36.58. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, asynchronously reset by !\rst_aon_ni
Extracted 134 gates and 168 wires to a netlist network with 34 inputs and 29 outputs.

3.36.58.1. Executing ABC.

3.36.59. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$31928$abc$25941$abc$24594$u_reg.u_adc_chn0_filter_ctl_0_cdc.src_update_i, asynchronously reset by !\rst_ni
Extracted 38 gates and 75 wires to a netlist network with 37 inputs and 25 outputs.

3.36.59.1. Executing ABC.

3.36.60. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$29981$abc$26223$abc$21543$auto$opt_dff.cc:194:make_patterns_logic$10922, asynchronously reset by !\rst_ni
Extracted 98 gates and 139 wires to a netlist network with 41 inputs and 36 outputs.

3.36.60.1. Executing ABC.

3.36.61. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$31996$abc$27864$abc$22839$auto$opt_dff.cc:194:make_patterns_logic$10985, asynchronously reset by !\rst_ni
Extracted 60 gates and 98 wires to a netlist network with 38 inputs and 27 outputs.

3.36.61.1. Executing ABC.

3.36.62. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$30757$abc$25679$abc$23170$auto$opt_dff.cc:194:make_patterns_logic$10961, asynchronously reset by !\rst_ni
Extracted 68 gates and 103 wires to a netlist network with 35 inputs and 27 outputs.

3.36.62.1. Executing ABC.

3.36.63. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$32070$abc$27939$abc$22753$auto$opt_dff.cc:194:make_patterns_logic$10991, asynchronously reset by !\rst_ni
Extracted 62 gates and 104 wires to a netlist network with 42 inputs and 23 outputs.

3.36.63.1. Executing ABC.

3.36.64. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$32142$abc$28010$abc$22920$auto$opt_dff.cc:194:make_patterns_logic$10979, asynchronously reset by !\rst_ni
Extracted 61 gates and 100 wires to a netlist network with 39 inputs and 24 outputs.

3.36.64.1. Executing ABC.

3.36.65. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$32213$abc$28081$abc$22661$auto$opt_dff.cc:194:make_patterns_logic$11000, asynchronously reset by !\rst_ni
Extracted 15 gates and 24 wires to a netlist network with 9 inputs and 10 outputs.

3.36.65.1. Executing ABC.

3.36.66. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$32229$abc$28097$abc$21257$auto$opt_dff.cc:194:make_patterns_logic$11051, asynchronously reset by !\rst_ni
Extracted 73 gates and 103 wires to a netlist network with 30 inputs and 26 outputs.

3.36.66.1. Executing ABC.

3.36.67. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$32303$abc$26698$abc$23087$auto$opt_dff.cc:194:make_patterns_logic$10967, asynchronously reset by !\rst_ni
Extracted 72 gates and 123 wires to a netlist network with 51 inputs and 25 outputs.

3.36.67.1. Executing ABC.

3.36.68. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$32376$abc$28299$abc$22324$auto$opt_dff.cc:194:make_patterns_logic$11021, asynchronously reset by !\rst_ni
Extracted 58 gates and 96 wires to a netlist network with 38 inputs and 26 outputs.

3.36.68.1. Executing ABC.

3.36.69. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$32447$abc$25298$abc$24512$auto$opt_dff.cc:194:make_patterns_logic$10903, asynchronously reset by !\rst_ni
Extracted 35 gates and 53 wires to a netlist network with 18 inputs and 14 outputs.

3.36.69.1. Executing ABC.

3.36.70. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, asynchronously reset by !\rst_ni
Extracted 264 gates and 329 wires to a netlist network with 65 inputs and 67 outputs.

3.36.70.1. Executing ABC.

yosys> opt_ffinv

3.37. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt -sat

3.38. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.38.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
<suppressed ~42 debug messages>

yosys> opt_merge -nomux

3.38.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
<suppressed ~162 debug messages>
Removed a total of 54 cells.

yosys> opt_muxtree

3.38.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.38.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.38.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.38.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.38.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 1 unused cells and 21540 unused wires.
<suppressed ~756 debug messages>

yosys> opt_expr

3.38.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
<suppressed ~1 debug messages>

3.38.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.38.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.38.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.38.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.38.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.38.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.38.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.

3.38.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.38.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.38.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.38.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.38.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.38.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..

yosys> opt_expr

3.38.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.

3.38.23. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /home/users/temp_dir/yosys_0SZYXz/abc_tmp_1.scr

3.39. Executing ABC pass (technology mapping using ABC).

3.39.1. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Extracted 2559 gates and 3314 wires to a netlist network with 755 inputs and 682 outputs.

3.39.1.1. Executing ABC.
DE:   #PIs = 755  #Luts =  1120  Max Lvl =  12  Avg Lvl =  10.15  [   0.27 sec. at Pass 0]
DE:   #PIs = 755  #Luts =  1033  Max Lvl =  11  Avg Lvl =   9.23  [   8.02 sec. at Pass 1]
DE:   #PIs = 755  #Luts =  1030  Max Lvl =  13  Avg Lvl =  10.18  [   1.62 sec. at Pass 2]
DE:   #PIs = 755  #Luts =  1016  Max Lvl =  11  Avg Lvl =   8.58  [   3.13 sec. at Pass 3]
DE:   #PIs = 755  #Luts =  1016  Max Lvl =  11  Avg Lvl =   8.58  [   2.48 sec. at Pass 4]
DE:   #PIs = 755  #Luts =  1010  Max Lvl =  12  Avg Lvl =   9.38  [   3.87 sec. at Pass 5]
DE:   #PIs = 755  #Luts =  1008  Max Lvl =  13  Avg Lvl =  10.86  [   2.59 sec. at Pass 6]
DE:   #PIs = 755  #Luts =   991  Max Lvl =  11  Avg Lvl =   7.87  [   4.19 sec. at Pass 7]
DE:   #PIs = 755  #Luts =   987  Max Lvl =  10  Avg Lvl =   7.76  [   2.21 sec. at Pass 8]
DE:   #PIs = 755  #Luts =   987  Max Lvl =  10  Avg Lvl =   7.76  [   3.77 sec. at Pass 9]
DE:   #PIs = 755  #Luts =   987  Max Lvl =  10  Avg Lvl =   7.76  [   2.25 sec. at Pass 10]
DE:   #PIs = 755  #Luts =   987  Max Lvl =  10  Avg Lvl =   7.76  [   4.05 sec. at Pass 11]
DE:   #PIs = 755  #Luts =   987  Max Lvl =  10  Avg Lvl =   7.76  [   0.49 sec. at Pass 12]

yosys> opt

3.40. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.40.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.

yosys> opt_merge -nomux

3.40.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.40.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.40.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.40.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_dff

3.40.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.40.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 0 unused cells and 3307 unused wires.
<suppressed ~115 debug messages>

yosys> opt_expr

3.40.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.

3.40.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.40.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.40.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.40.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_dff

3.40.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.40.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..

yosys> opt_expr

3.40.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.

3.40.16. Finished OPT passes. (There is nothing left to do.)

yosys> opt_ffinv

3.41. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 1 inverters.

yosys> stat

3.42. Printing statistics.

=== adc_ctrl ===

   Number of wires:               4677
   Number of wire bits:          15151
   Number of public wires:        3099
   Number of public wire bits:   13573
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1795
     $_DFFE_PN0P_                  595
     $_DFF_PN0_                    214
     $_DFF_PN1_                      1
     $lut                          985


yosys> shregmap -minlen 8 -maxlen 20

3.43. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.44. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.45. Printing statistics.

=== adc_ctrl ===

   Number of wires:               4677
   Number of wire bits:          15151
   Number of public wires:        3099
   Number of public wire bits:   13573
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1795
     $_DFFE_PN0P_                  595
     $_DFF_PN0_                    214
     $_DFF_PN1_                      1
     $lut                          985


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.46. Executing TECHMAP pass (map to technology primitives).

3.46.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.46.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.46.3. Continuing TECHMAP pass.
Using template \$_DFFE_PN0P_ for cells of type $_DFFE_PN0P_.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFF_PN0_ for cells of type $_DFF_PN0_.
Using template \$_DFF_PN1_ for cells of type $_DFF_PN1_.
No more expansions possible.
<suppressed ~1931 debug messages>

yosys> opt_expr -mux_undef

3.47. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
<suppressed ~23198 debug messages>

yosys> simplemap

3.48. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.49. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.

yosys> opt_merge

3.50. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
<suppressed ~13332 debug messages>
Removed a total of 4444 cells.

yosys> opt_dff -nodffe -nosdff

3.51. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.52. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 0 unused cells and 6766 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.53. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.53.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
<suppressed ~379 debug messages>

yosys> opt_merge -nomux

3.53.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_muxtree

3.53.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.53.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.53.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.53.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.53.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 0 unused cells and 37 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.53.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.

3.53.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.53.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.53.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.53.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.53.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.53.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..

yosys> opt_expr

3.53.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.

3.53.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /home/users/temp_dir/yosys_0SZYXz/abc_tmp_2.scr

3.54. Executing ABC pass (technology mapping using ABC).

3.54.1. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Extracted 3205 gates and 3961 wires to a netlist network with 754 inputs and 680 outputs.

3.54.1.1. Executing ABC.
DE:   #PIs = 754  #Luts =  1004  Max Lvl =  11  Avg Lvl =   9.19  [   0.14 sec. at Pass 0]
DE:   #PIs = 754  #Luts =   991  Max Lvl =   7  Avg Lvl =   6.19  [   7.59 sec. at Pass 1]
DE:   #PIs = 754  #Luts =   991  Max Lvl =   7  Avg Lvl =   6.19  [   2.31 sec. at Pass 2]
DE:   #PIs = 754  #Luts =   985  Max Lvl =  11  Avg Lvl =   8.77  [   3.09 sec. at Pass 3]
DE:   #PIs = 754  #Luts =   985  Max Lvl =  11  Avg Lvl =   8.77  [   2.13 sec. at Pass 4]
DE:   #PIs = 754  #Luts =   985  Max Lvl =  11  Avg Lvl =   8.77  [   3.41 sec. at Pass 5]
DE:   #PIs = 754  #Luts =   985  Max Lvl =  11  Avg Lvl =   8.77  [   1.95 sec. at Pass 6]
DE:   #PIs = 754  #Luts =   985  Max Lvl =  11  Avg Lvl =   8.77  [   0.52 sec. at Pass 7]

yosys> opt

3.55. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.55.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.

yosys> opt_merge -nomux

3.55.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.55.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.55.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.55.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_dff

3.55.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.55.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 0 unused cells and 3366 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.55.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.

3.55.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.55.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.55.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.55.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_dff

3.55.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.55.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..

yosys> opt_expr

3.55.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.

3.55.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.56. Executing HIERARCHY pass (managing design hierarchy).

3.56.1. Analyzing design hierarchy..
Top module:  \adc_ctrl

3.56.2. Analyzing design hierarchy..
Top module:  \adc_ctrl
Removed 0 unused modules.

yosys> stat

3.57. Printing statistics.

=== adc_ctrl ===

   Number of wires:               4676
   Number of wire bits:          15150
   Number of public wires:        3099
   Number of public wire bits:   13573
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1795
     $lut                          985
     dffsre                        810


yosys> opt_clean -purge

3.58. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 0 unused cells and 2959 unused wires.
<suppressed ~2959 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.59. Executing Verilog backend.

yosys> bmuxmap

3.59.1. Executing BMUXMAP pass.

yosys> demuxmap

3.59.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\adc_ctrl'.

Warnings: 124 unique messages, 124 total
End of script. Logfile hash: cf8e2ba42c, CPU: user 44.00s system 3.54s, MEM: 93.39 MB peak
Yosys 0.17+76 (git sha1 2073f9d19, gcc 9.1.0 -fPIC -Os)
Time spent: 92% 6x abc (478 sec), 2% 40x opt_dff (13 sec), ...
real 137.64
user 480.20
sys 36.23
