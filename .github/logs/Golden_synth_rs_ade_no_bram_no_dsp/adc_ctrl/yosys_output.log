
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.50
 Yosys 0.18+10 (git sha1 7a7a25778, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Tue May 31 17:39:28 2022.

yosys> verilog_defaults -add -I.

yosys> read -sv prim_mubi_pkg.sv ast_pkg.sv adc_ctrl_reg_pkg.sv prim_alert_pkg.sv prim_pkg.sv prim_secded_pkg.sv top_pkg.sv prim_subreg_pkg.sv tlul_pkg.sv adc_ctrl.sv adc_ctrl_core.sv adc_ctrl_fsm.sv adc_ctrl_intr.sv adc_ctrl_reg_top.sv prim_alert_sender.sv prim_buf.sv prim_generic_buf.sv prim_subreg.sv prim_generic_buf.sv prim_diff_decode.sv prim_flop_2sync.sv prim_generic_flop_2sync.sv prim_generic_flop.sv tlul_cmd_intg_chk.sv prim_secded_inv_64_57_dec.sv tlul_data_integ_dec.sv prim_secded_inv_39_32_dec.sv tlul_rsp_intg_gen.sv prim_secded_inv_64_57_enc.sv tlul_data_integ_enc.sv prim_secded_inv_39_32_enc.sv tlul_adapter_reg.sv tlul_err.sv prim_sync_reqack.sv prim_reg_cdc.sv prim_subreg_ext.sv prim_pulse_sync.sv prim_intr_hw.sv

yosys> verific -sv prim_mubi_pkg.sv ast_pkg.sv adc_ctrl_reg_pkg.sv prim_alert_pkg.sv prim_pkg.sv prim_secded_pkg.sv top_pkg.sv prim_subreg_pkg.sv tlul_pkg.sv adc_ctrl.sv adc_ctrl_core.sv adc_ctrl_fsm.sv adc_ctrl_intr.sv adc_ctrl_reg_top.sv prim_alert_sender.sv prim_buf.sv prim_generic_buf.sv prim_subreg.sv prim_generic_buf.sv prim_diff_decode.sv prim_flop_2sync.sv prim_generic_flop_2sync.sv prim_generic_flop.sv tlul_cmd_intg_chk.sv prim_secded_inv_64_57_dec.sv tlul_data_integ_dec.sv prim_secded_inv_39_32_dec.sv tlul_rsp_intg_gen.sv prim_secded_inv_64_57_enc.sv tlul_data_integ_enc.sv prim_secded_inv_39_32_enc.sv tlul_adapter_reg.sv tlul_err.sv prim_sync_reqack.sv prim_reg_cdc.sv prim_subreg_ext.sv prim_pulse_sync.sv prim_intr_hw.sv

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Tue May 31 17:39:28 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_mubi_pkg.sv'
VERIFIC-WARNING [VERI-2418] prim_mubi_pkg.sv:19: parameter 'MuBi4Width' declared inside package 'prim_mubi_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_mubi_pkg.sv:148: parameter 'MuBi8Width' declared inside package 'prim_mubi_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_mubi_pkg.sv:277: parameter 'MuBi12Width' declared inside package 'prim_mubi_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_mubi_pkg.sv:406: parameter 'MuBi16Width' declared inside package 'prim_mubi_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'ast_pkg.sv'
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:15: parameter 'NumAlerts' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:16: parameter 'NumIoRails' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:17: parameter 'AsSel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:18: parameter 'CgSel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:19: parameter 'GdSel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:20: parameter 'TsHiSel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:21: parameter 'TsLoSel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:22: parameter 'FlaSel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:23: parameter 'OtpSel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:24: parameter 'Ot0Sel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:25: parameter 'Ot1Sel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:26: parameter 'Ot2Sel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:27: parameter 'Ot3Sel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:28: parameter 'Ot4Sel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:29: parameter 'Ot5Sel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:31: parameter 'Lc2HcTrCyc' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:32: parameter 'Hc2LcTrCyc' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:34: parameter 'EntropyStreams' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:35: parameter 'AdcChannels' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:36: parameter 'AdcDataWidth' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:37: parameter 'UsbCalibWidth' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:38: parameter 'Ast2PadOutWidth' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:39: parameter 'Pad2AstInWidth' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:43: parameter 'LfsrWidth' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:46: parameter 'RndCnstLfsrSeedDefault' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:47: parameter 'RndCnstLfsrPermDefault' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:95: parameter 'AST_RST_DEFAULT' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'adc_ctrl_reg_pkg.sv'
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:10: parameter 'NumAdcFilter' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:11: parameter 'NumAdcChannel' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:12: parameter 'NumAlerts' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:15: parameter 'BlockAw' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:209: parameter 'ADC_CTRL_INTR_STATE_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:210: parameter 'ADC_CTRL_INTR_ENABLE_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:211: parameter 'ADC_CTRL_INTR_TEST_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:212: parameter 'ADC_CTRL_ALERT_TEST_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:213: parameter 'ADC_CTRL_ADC_EN_CTL_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:214: parameter 'ADC_CTRL_ADC_PD_CTL_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:215: parameter 'ADC_CTRL_ADC_LP_SAMPLE_CTL_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:216: parameter 'ADC_CTRL_ADC_SAMPLE_CTL_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:217: parameter 'ADC_CTRL_ADC_FSM_RST_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:218: parameter 'ADC_CTRL_ADC_CHN0_FILTER_CTL_0_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:219: parameter 'ADC_CTRL_ADC_CHN0_FILTER_CTL_1_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:220: parameter 'ADC_CTRL_ADC_CHN0_FILTER_CTL_2_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:221: parameter 'ADC_CTRL_ADC_CHN0_FILTER_CTL_3_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:222: parameter 'ADC_CTRL_ADC_CHN0_FILTER_CTL_4_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:223: parameter 'ADC_CTRL_ADC_CHN0_FILTER_CTL_5_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:224: parameter 'ADC_CTRL_ADC_CHN0_FILTER_CTL_6_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:225: parameter 'ADC_CTRL_ADC_CHN0_FILTER_CTL_7_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:226: parameter 'ADC_CTRL_ADC_CHN1_FILTER_CTL_0_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:227: parameter 'ADC_CTRL_ADC_CHN1_FILTER_CTL_1_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:228: parameter 'ADC_CTRL_ADC_CHN1_FILTER_CTL_2_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:229: parameter 'ADC_CTRL_ADC_CHN1_FILTER_CTL_3_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:230: parameter 'ADC_CTRL_ADC_CHN1_FILTER_CTL_4_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:231: parameter 'ADC_CTRL_ADC_CHN1_FILTER_CTL_5_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:232: parameter 'ADC_CTRL_ADC_CHN1_FILTER_CTL_6_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:233: parameter 'ADC_CTRL_ADC_CHN1_FILTER_CTL_7_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:234: parameter 'ADC_CTRL_ADC_CHN_VAL_0_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:235: parameter 'ADC_CTRL_ADC_CHN_VAL_1_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:236: parameter 'ADC_CTRL_ADC_WAKEUP_CTL_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:237: parameter 'ADC_CTRL_FILTER_STATUS_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:238: parameter 'ADC_CTRL_ADC_INTR_CTL_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:239: parameter 'ADC_CTRL_ADC_INTR_STATUS_OFFSET' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:242: parameter 'ADC_CTRL_INTR_TEST_RESVAL' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:243: parameter 'ADC_CTRL_INTR_TEST_DEBUG_CABLE_RESVAL' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:244: parameter 'ADC_CTRL_ALERT_TEST_RESVAL' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:245: parameter 'ADC_CTRL_ALERT_TEST_FATAL_FAULT_RESVAL' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] adc_ctrl_reg_pkg.sv:283: parameter 'ADC_CTRL_PERMIT' declared inside package 'adc_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_alert_pkg.sv'
VERIFIC-WARNING [VERI-2418] prim_alert_pkg.sv:19: parameter 'ALERT_TX_DEFAULT' declared inside package 'prim_alert_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_alert_pkg.sv:22: parameter 'ALERT_RX_DEFAULT' declared inside package 'prim_alert_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_pkg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_pkg.sv'
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:81: parameter 'Secded2216ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:82: parameter 'Secded2216ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:90: parameter 'Secded2822ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:91: parameter 'Secded2822ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:99: parameter 'Secded3932ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:100: parameter 'Secded3932ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:108: parameter 'Secded6457ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:109: parameter 'Secded6457ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:117: parameter 'Secded7264ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:118: parameter 'Secded7264ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:126: parameter 'SecdedHamming2216ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:127: parameter 'SecdedHamming2216ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:135: parameter 'SecdedHamming3932ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:136: parameter 'SecdedHamming3932ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:144: parameter 'SecdedHamming7264ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:145: parameter 'SecdedHamming7264ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:153: parameter 'SecdedHamming7668ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:154: parameter 'SecdedHamming7668ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:162: parameter 'SecdedInv2216ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:163: parameter 'SecdedInv2216ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:171: parameter 'SecdedInv2822ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:172: parameter 'SecdedInv2822ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:180: parameter 'SecdedInv3932ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:181: parameter 'SecdedInv3932ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:189: parameter 'SecdedInv6457ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:190: parameter 'SecdedInv6457ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:198: parameter 'SecdedInv7264ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:199: parameter 'SecdedInv7264ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:207: parameter 'SecdedInvHamming2216ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:208: parameter 'SecdedInvHamming2216ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:216: parameter 'SecdedInvHamming3932ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:217: parameter 'SecdedInvHamming3932ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:225: parameter 'SecdedInvHamming7264ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:226: parameter 'SecdedInvHamming7264ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:234: parameter 'SecdedInvHamming7668ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:235: parameter 'SecdedInvHamming7668ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'top_pkg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_subreg_pkg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_pkg.sv'
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:14: parameter 'ArbiterImpl' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:27: parameter 'H2DCmdMaxWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:28: parameter 'H2DCmdIntgWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:29: parameter 'H2DCmdFullWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:30: parameter 'D2HRspMaxWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:31: parameter 'D2HRspIntgWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:32: parameter 'D2HRspFullWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:33: parameter 'DataMaxWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:34: parameter 'DataIntgWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:35: parameter 'DataFullWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:44: parameter 'TL_A_USER_DEFAULT' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:84: parameter 'TL_D_USER_DEFAULT' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'adc_ctrl.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'adc_ctrl_core.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'adc_ctrl_fsm.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'adc_ctrl_intr.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'adc_ctrl_reg_top.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_alert_sender.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_buf.sv'
VERIFIC-WARNING [VERI-1199] prim_buf.sv:24: parameter 'Impl' becomes localparam in 'prim_buf' with formal parameter declaration list
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_generic_buf.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_subreg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_generic_buf.sv'
VERIFIC-WARNING [VERI-1206] prim_generic_buf.sv:13: overwriting previous definition of module 'prim_generic_buf'
VERIFIC-INFO [VERI-2142] prim_generic_buf.sv:13: previous definition of design element 'prim_generic_buf' is here
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_diff_decode.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_flop_2sync.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_generic_flop_2sync.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_generic_flop.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_cmd_intg_chk.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_inv_64_57_dec.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_data_integ_dec.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_inv_39_32_dec.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_rsp_intg_gen.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_inv_64_57_enc.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_data_integ_enc.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_inv_39_32_enc.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_adapter_reg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_err.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_sync_reqack.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_reg_cdc.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_subreg_ext.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_pulse_sync.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_intr_hw.sv'

yosys> synth_rs -top adc_ctrl -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.59

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\RS_DSP2_MULT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_sim'.
Generating RTLIL representation for module `\dsp_t1_20x18x64'.
Generating RTLIL representation for module `\dsp_t1_10x9x32'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top adc_ctrl

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] adc_ctrl.sv:8: compiling module 'adc_ctrl'
VERIFIC-INFO [VERI-1018] prim_alert_sender.sv:32: compiling module 'prim_alert_sender'
VERIFIC-INFO [VERI-1018] prim_diff_decode.sv:19: compiling module 'prim_diff_decode(AsyncOn=1'b1)'
VERIFIC-INFO [VERI-1018] prim_flop_2sync.sv:13: compiling module 'prim_flop_2sync(Width=1,ResetValue=1'b0)'
VERIFIC-INFO [VERI-1018] prim_generic_flop_2sync.sv:9: compiling module 'prim_generic_flop_2sync(Width=1,ResetValue=1'b0)'
VERIFIC-INFO [VERI-1018] prim_generic_flop.sv:7: compiling module 'prim_generic_flop(ResetValue=1'b0)'
VERIFIC-INFO [VERI-1018] prim_flop_2sync.sv:13: compiling module 'prim_flop_2sync(Width=1,ResetValue=1'b1)'
VERIFIC-INFO [VERI-1018] prim_generic_flop_2sync.sv:9: compiling module 'prim_generic_flop_2sync(Width=1,ResetValue=1'b1)'
VERIFIC-INFO [VERI-1018] prim_generic_flop.sv:7: compiling module 'prim_generic_flop(ResetValue=1'b1)'
VERIFIC-INFO [VERI-1018] prim_buf.sv:16: compiling module 'prim_buf'
VERIFIC-INFO [VERI-1018] prim_generic_buf.sv:6: compiling module 'prim_generic_buf'
VERIFIC-INFO [VERI-1018] adc_ctrl_reg_top.sv:11: compiling module 'adc_ctrl_reg_top'
VERIFIC-INFO [VERI-1018] tlul_cmd_intg_chk.sv:3: compiling module 'tlul_cmd_intg_chk'
VERIFIC-INFO [VERI-1018] prim_secded_inv_64_57_dec.sv:7: compiling module 'prim_secded_inv_64_57_dec'
VERIFIC-INFO [VERI-1018] tlul_data_integ_dec.sv:10: compiling module 'tlul_data_integ_dec'
VERIFIC-INFO [VERI-1018] prim_secded_inv_39_32_dec.sv:7: compiling module 'prim_secded_inv_39_32_dec'
VERIFIC-INFO [VERI-1018] tlul_rsp_intg_gen.sv:9: compiling module 'tlul_rsp_intg_gen'
VERIFIC-INFO [VERI-1018] prim_secded_inv_64_57_enc.sv:7: compiling module 'prim_secded_inv_64_57_enc'
VERIFIC-INFO [VERI-1018] tlul_data_integ_enc.sv:10: compiling module 'tlul_data_integ_enc'
VERIFIC-INFO [VERI-1018] prim_secded_inv_39_32_enc.sv:7: compiling module 'prim_secded_inv_39_32_enc'
VERIFIC-INFO [VERI-1018] tlul_adapter_reg.sv:10: compiling module 'tlul_adapter_reg(RegAw=7)'
VERIFIC-INFO [VERI-1018] tlul_err.sv:7: compiling module 'tlul_err'
VERIFIC-WARNING [VERI-1209] tlul_err.sv:44: expression size 32 truncated to fit in target size 4
VERIFIC-INFO [VERI-1018] prim_sync_reqack.sv:26: compiling module 'prim_sync_reqack'
VERIFIC-INFO [VERI-1018] prim_flop_2sync.sv:13: compiling module 'prim_flop_2sync(Width=1)'
VERIFIC-INFO [VERI-1018] prim_reg_cdc.sv:8: compiling module 'prim_reg_cdc(DataWidth=2,ResetVal=2'b0,BitMask=2'b11)'
VERIFIC-INFO [VERI-1018] prim_reg_cdc.sv:8: compiling module 'prim_reg_cdc(ResetVal=32'b01100100000001100000,BitMask=32'b11111111111111111111111111110001)'
VERIFIC-INFO [VERI-1018] prim_reg_cdc.sv:8: compiling module 'prim_reg_cdc(DataWidth=8,ResetVal=8'b0100,BitMask=8'b11111111)'
VERIFIC-INFO [VERI-1018] prim_reg_cdc.sv:8: compiling module 'prim_reg_cdc(DataWidth=16,ResetVal=16'b010011011,BitMask=16'b1111111111111111)'
VERIFIC-INFO [VERI-1018] prim_reg_cdc.sv:8: compiling module 'prim_reg_cdc(DataWidth=1,ResetVal=1'b0,BitMask=1'b1)'
VERIFIC-INFO [VERI-1018] prim_reg_cdc.sv:8: compiling module 'prim_reg_cdc(BitMask=32'b10001111111111000001111111111100)'
VERIFIC-INFO [VERI-1018] prim_reg_cdc.sv:8: compiling module 'prim_reg_cdc(DataWidth=28,ResetVal=28'b0,BitMask=28'b1111111111110000111111111111)'
VERIFIC-INFO [VERI-1018] prim_reg_cdc.sv:8: compiling module 'prim_reg_cdc(DataWidth=8,ResetVal=8'b0,BitMask=8'b11111111)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=1,SWACCESS=SwAccessW1C_prim_subreg_pkg,RESVAL=1'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=1,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg_ext.sv:7: compiling module 'prim_subreg_ext(DW=32'b01)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=4,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=4'b0110)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=24,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=24'b011001000000)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=8,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=8'b0100)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=16,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=16'b010011011)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=10,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=10'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=2,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=2'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=10,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=10'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=8,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=8'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=8,SWACCESS=SwAccessW1C_prim_subreg_pkg,RESVAL=8'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=9,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=9'b0)'
VERIFIC-INFO [VERI-1018] adc_ctrl_core.sv:7: compiling module 'adc_ctrl_core'
VERIFIC-INFO [VERI-1018] adc_ctrl_fsm.sv:7: compiling module 'adc_ctrl_fsm'
VERIFIC-INFO [VERI-1018] prim_pulse_sync.sv:11: compiling module 'prim_pulse_sync'
VERIFIC-INFO [VERI-1018] adc_ctrl_intr.sv:7: compiling module 'adc_ctrl_intr'
VERIFIC-INFO [VERI-1018] prim_intr_hw.sv:10: compiling module 'prim_intr_hw'
Importing module adc_ctrl.
Importing module adc_ctrl_core.
Importing module adc_ctrl_fsm.
Importing module adc_ctrl_intr.
Importing module adc_ctrl_reg_top.
Importing module prim_alert_sender.
Importing module prim_buf.
Importing module prim_diff_decode(AsyncOn=1'b1).
Importing module prim_flop_2sync(Width=1,ResetValue=1'b0).
Importing module prim_flop_2sync(Width=1,ResetValue=1'b1).
Importing module prim_generic_buf.
Importing module prim_generic_flop_2sync(Width=1,ResetValue=1'b0).
Importing module prim_generic_flop(ResetValue=1'b0).
Importing module prim_generic_flop_2sync(Width=1,ResetValue=1'b1).
Importing module prim_generic_flop(ResetValue=1'b1).
Importing module prim_intr_hw.
Importing module prim_pulse_sync.
Importing module prim_flop_2sync(Width=1).
Importing module prim_reg_cdc(BitMask=32'b10001111111111000001111111111100).
Importing module prim_reg_cdc(DataWidth=1,ResetVal=1'b0,BitMask=1'b1).
Importing module prim_reg_cdc(DataWidth=16,ResetVal=16'b010011011,BitMask=16'b1111111111111111).
Importing module prim_reg_cdc(DataWidth=2,ResetVal=2'b0,BitMask=2'b11).
Importing module prim_reg_cdc(DataWidth=28,ResetVal=28'b0,BitMask=28'b1111111111110000111111111111).
Importing module prim_reg_cdc(DataWidth=8,ResetVal=8'b0,BitMask=8'b11111111).
Importing module prim_reg_cdc(DataWidth=8,ResetVal=8'b0100,BitMask=8'b11111111).
Importing module prim_reg_cdc(ResetVal=32'b01100100000001100000,BitMask=32'b11111111111111111111111111110001).
Importing module prim_subreg(DW=1,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0).
Importing module prim_subreg(DW=1,SWACCESS=SwAccessW1C_prim_subreg_pkg,RESVAL=1'b0).
Importing module prim_subreg(DW=10,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=10'b0).
Importing module prim_subreg(DW=10,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=10'b0).
Importing module prim_subreg(DW=16,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=16'b010011011).
Importing module prim_subreg(DW=2,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=2'b0).
Importing module prim_subreg(DW=24,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=24'b011001000000).
Importing module prim_subreg(DW=4,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=4'b0110).
Importing module prim_subreg(DW=8,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=8'b0).
Importing module prim_subreg(DW=8,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=8'b0100).
Importing module prim_subreg(DW=8,SWACCESS=SwAccessW1C_prim_subreg_pkg,RESVAL=8'b0).
Importing module prim_subreg(DW=9,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=9'b0).
Importing module prim_subreg_ext(DW=32'b01).
Importing module prim_sync_reqack.
Importing module tlul_adapter_reg(RegAw=7).
Importing module tlul_cmd_intg_chk.
Importing module prim_secded_inv_64_57_dec.
Importing module tlul_data_integ_dec.
Importing module prim_secded_inv_39_32_dec.
Importing module tlul_err.
Importing module tlul_rsp_intg_gen.
Importing module prim_secded_inv_64_57_enc.
Importing module tlul_data_integ_enc.
Importing module prim_secded_inv_39_32_enc.

3.3.1. Analyzing design hierarchy..
Top module:  \adc_ctrl
Used module:     \adc_ctrl_core
Used module:         \adc_ctrl_intr
Used module:             \prim_intr_hw
Used module:             \prim_flop_2sync(Width=1,ResetValue=1'b0)
Used module:                 \prim_generic_flop_2sync(Width=1,ResetValue=1'b0)
Used module:                     \prim_generic_flop(ResetValue=1'b0)
Used module:         \prim_pulse_sync
Used module:             \prim_flop_2sync(Width=1)
Used module:         \adc_ctrl_fsm
Used module:     \adc_ctrl_reg_top
Used module:         \prim_subreg(DW=1,SWACCESS=SwAccessW1C_prim_subreg_pkg,RESVAL=1'b0)
Used module:         \prim_subreg(DW=9,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=9'b0)
Used module:         \prim_subreg(DW=8,SWACCESS=SwAccessW1C_prim_subreg_pkg,RESVAL=8'b0)
Used module:         \prim_subreg(DW=8,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=8'b0)
Used module:         \prim_subreg(DW=10,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=10'b0)
Used module:         \prim_subreg(DW=2,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=2'b0)
Used module:         \prim_subreg(DW=1,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0)
Used module:         \prim_subreg(DW=10,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=10'b0)
Used module:         \prim_subreg(DW=16,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=16'b010011011)
Used module:         \prim_subreg(DW=8,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=8'b0100)
Used module:         \prim_subreg(DW=24,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=24'b011001000000)
Used module:         \prim_subreg(DW=4,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=4'b0110)
Used module:         \prim_subreg_ext(DW=32'b01)
Used module:         \prim_reg_cdc(DataWidth=8,ResetVal=8'b0,BitMask=8'b11111111)
Used module:             \prim_sync_reqack
Used module:         \prim_reg_cdc(DataWidth=28,ResetVal=28'b0,BitMask=28'b1111111111110000111111111111)
Used module:         \prim_reg_cdc(BitMask=32'b10001111111111000001111111111100)
Used module:         \prim_reg_cdc(DataWidth=1,ResetVal=1'b0,BitMask=1'b1)
Used module:         \prim_reg_cdc(DataWidth=16,ResetVal=16'b010011011,BitMask=16'b1111111111111111)
Used module:         \prim_reg_cdc(DataWidth=8,ResetVal=8'b0100,BitMask=8'b11111111)
Used module:         \prim_reg_cdc(ResetVal=32'b01100100000001100000,BitMask=32'b11111111111111111111111111110001)
Used module:         \prim_reg_cdc(DataWidth=2,ResetVal=2'b0,BitMask=2'b11)
Used module:         \tlul_adapter_reg(RegAw=7)
Used module:             \tlul_err
Used module:         \tlul_rsp_intg_gen
Used module:             \tlul_data_integ_enc
Used module:                 \prim_secded_inv_39_32_enc
Used module:             \prim_secded_inv_64_57_enc
Used module:         \tlul_cmd_intg_chk
Used module:             \tlul_data_integ_dec
Used module:                 \prim_secded_inv_39_32_dec
Used module:             \prim_secded_inv_64_57_dec
Used module:     \prim_alert_sender
Used module:         \prim_buf
Used module:             \prim_generic_buf
Used module:         \prim_diff_decode(AsyncOn=1'b1)
Used module:             \prim_flop_2sync(Width=1,ResetValue=1'b1)
Used module:                 \prim_generic_flop_2sync(Width=1,ResetValue=1'b1)
Used module:                     \prim_generic_flop(ResetValue=1'b1)

3.3.2. Analyzing design hierarchy..
Top module:  \adc_ctrl
Used module:     \adc_ctrl_core
Used module:         \adc_ctrl_intr
Used module:             \prim_intr_hw
Used module:             \prim_flop_2sync(Width=1,ResetValue=1'b0)
Used module:                 \prim_generic_flop_2sync(Width=1,ResetValue=1'b0)
Used module:                     \prim_generic_flop(ResetValue=1'b0)
Used module:         \prim_pulse_sync
Used module:             \prim_flop_2sync(Width=1)
Used module:         \adc_ctrl_fsm
Used module:     \adc_ctrl_reg_top
Used module:         \prim_subreg(DW=1,SWACCESS=SwAccessW1C_prim_subreg_pkg,RESVAL=1'b0)
Used module:         \prim_subreg(DW=9,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=9'b0)
Used module:         \prim_subreg(DW=8,SWACCESS=SwAccessW1C_prim_subreg_pkg,RESVAL=8'b0)
Used module:         \prim_subreg(DW=8,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=8'b0)
Used module:         \prim_subreg(DW=10,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=10'b0)
Used module:         \prim_subreg(DW=2,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=2'b0)
Used module:         \prim_subreg(DW=1,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0)
Used module:         \prim_subreg(DW=10,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=10'b0)
Used module:         \prim_subreg(DW=16,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=16'b010011011)
Used module:         \prim_subreg(DW=8,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=8'b0100)
Used module:         \prim_subreg(DW=24,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=24'b011001000000)
Used module:         \prim_subreg(DW=4,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=4'b0110)
Used module:         \prim_subreg_ext(DW=32'b01)
Used module:         \prim_reg_cdc(DataWidth=8,ResetVal=8'b0,BitMask=8'b11111111)
Used module:             \prim_sync_reqack
Used module:         \prim_reg_cdc(DataWidth=28,ResetVal=28'b0,BitMask=28'b1111111111110000111111111111)
Used module:         \prim_reg_cdc(BitMask=32'b10001111111111000001111111111100)
Used module:         \prim_reg_cdc(DataWidth=1,ResetVal=1'b0,BitMask=1'b1)
Used module:         \prim_reg_cdc(DataWidth=16,ResetVal=16'b010011011,BitMask=16'b1111111111111111)
Used module:         \prim_reg_cdc(DataWidth=8,ResetVal=8'b0100,BitMask=8'b11111111)
Used module:         \prim_reg_cdc(ResetVal=32'b01100100000001100000,BitMask=32'b11111111111111111111111111110001)
Used module:         \prim_reg_cdc(DataWidth=2,ResetVal=2'b0,BitMask=2'b11)
Used module:         \tlul_adapter_reg(RegAw=7)
Used module:             \tlul_err
Used module:         \tlul_rsp_intg_gen
Used module:             \tlul_data_integ_enc
Used module:                 \prim_secded_inv_39_32_enc
Used module:             \prim_secded_inv_64_57_enc
Used module:         \tlul_cmd_intg_chk
Used module:             \tlul_data_integ_dec
Used module:                 \prim_secded_inv_39_32_dec
Used module:             \prim_secded_inv_64_57_dec
Used module:     \prim_alert_sender
Used module:         \prim_buf
Used module:             \prim_generic_buf
Used module:         \prim_diff_decode(AsyncOn=1'b1)
Used module:             \prim_flop_2sync(Width=1,ResetValue=1'b1)
Used module:                 \prim_generic_flop_2sync(Width=1,ResetValue=1'b1)
Used module:                     \prim_generic_flop(ResetValue=1'b1)
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.4.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.4.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module prim_secded_inv_39_32_enc.
Optimizing module tlul_data_integ_enc.
Optimizing module prim_secded_inv_64_57_enc.
Optimizing module tlul_rsp_intg_gen.
Optimizing module tlul_err.
<suppressed ~1 debug messages>
Optimizing module prim_secded_inv_39_32_dec.
Optimizing module tlul_data_integ_dec.
Optimizing module prim_secded_inv_64_57_dec.
Optimizing module tlul_cmd_intg_chk.
<suppressed ~1 debug messages>
Optimizing module tlul_adapter_reg(RegAw=7).
<suppressed ~11 debug messages>
Optimizing module prim_sync_reqack.
<suppressed ~4 debug messages>
Optimizing module prim_subreg_ext(DW=32'b01).
Optimizing module prim_subreg(DW=9,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=9'b0).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=8,SWACCESS=SwAccessW1C_prim_subreg_pkg,RESVAL=8'b0).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=8,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=8'b0100).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=8,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=8'b0).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=4,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=4'b0110).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=24,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=24'b011001000000).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=2,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=2'b0).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=16,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=16'b010011011).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=10,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=10'b0).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=10,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=10'b0).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=1,SWACCESS=SwAccessW1C_prim_subreg_pkg,RESVAL=1'b0).
<suppressed ~2 debug messages>
Optimizing module prim_subreg(DW=1,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0).
<suppressed ~2 debug messages>
Optimizing module prim_reg_cdc(ResetVal=32'b01100100000001100000,BitMask=32'b11111111111111111111111111110001).
<suppressed ~5 debug messages>
Optimizing module prim_reg_cdc(DataWidth=8,ResetVal=8'b0100,BitMask=8'b11111111).
<suppressed ~5 debug messages>
Optimizing module prim_reg_cdc(DataWidth=8,ResetVal=8'b0,BitMask=8'b11111111).
<suppressed ~5 debug messages>
Optimizing module prim_reg_cdc(DataWidth=28,ResetVal=28'b0,BitMask=28'b1111111111110000111111111111).
<suppressed ~5 debug messages>
Optimizing module prim_reg_cdc(DataWidth=2,ResetVal=2'b0,BitMask=2'b11).
<suppressed ~5 debug messages>
Optimizing module prim_reg_cdc(DataWidth=16,ResetVal=16'b010011011,BitMask=16'b1111111111111111).
<suppressed ~5 debug messages>
Optimizing module prim_reg_cdc(DataWidth=1,ResetVal=1'b0,BitMask=1'b1).
<suppressed ~4 debug messages>
Optimizing module prim_reg_cdc(BitMask=32'b10001111111111000001111111111100).
<suppressed ~5 debug messages>
Optimizing module prim_flop_2sync(Width=1).
Optimizing module prim_pulse_sync.
<suppressed ~2 debug messages>
Optimizing module prim_intr_hw.
<suppressed ~1 debug messages>
Optimizing module prim_generic_flop(ResetValue=1'b1).
<suppressed ~1 debug messages>
Optimizing module prim_generic_flop_2sync(Width=1,ResetValue=1'b1).
Optimizing module prim_generic_flop(ResetValue=1'b0).
<suppressed ~1 debug messages>
Optimizing module prim_generic_flop_2sync(Width=1,ResetValue=1'b0).
Optimizing module prim_generic_buf.
Optimizing module prim_flop_2sync(Width=1,ResetValue=1'b1).
Optimizing module prim_flop_2sync(Width=1,ResetValue=1'b0).
Optimizing module prim_diff_decode(AsyncOn=1'b1).
<suppressed ~5 debug messages>
Optimizing module prim_buf.
Optimizing module prim_alert_sender.
<suppressed ~7 debug messages>
Optimizing module adc_ctrl_reg_top.
<suppressed ~2 debug messages>
Optimizing module adc_ctrl_intr.
<suppressed ~8 debug messages>
Optimizing module adc_ctrl_fsm.
<suppressed ~26 debug messages>
Optimizing module adc_ctrl_core.
<suppressed ~4 debug messages>
Optimizing module adc_ctrl.

yosys> bmuxmap

3.5. Executing BMUXMAP pass.

yosys> demuxmap

3.6. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> flatten

3.7. Executing FLATTEN pass (flatten design).
Deleting now unused module adc_ctrl_core.
Deleting now unused module adc_ctrl_fsm.
Deleting now unused module adc_ctrl_intr.
Deleting now unused module adc_ctrl_reg_top.
Deleting now unused module prim_alert_sender.
Deleting now unused module prim_buf.
Deleting now unused module prim_diff_decode(AsyncOn=1'b1).
Deleting now unused module prim_flop_2sync(Width=1).
Deleting now unused module prim_flop_2sync(Width=1,ResetValue=1'b0).
Deleting now unused module prim_flop_2sync(Width=1,ResetValue=1'b1).
Deleting now unused module prim_generic_buf.
Deleting now unused module prim_generic_flop(ResetValue=1'b0).
Deleting now unused module prim_generic_flop(ResetValue=1'b1).
Deleting now unused module prim_generic_flop_2sync(Width=1,ResetValue=1'b0).
Deleting now unused module prim_generic_flop_2sync(Width=1,ResetValue=1'b1).
Deleting now unused module prim_intr_hw.
Deleting now unused module prim_pulse_sync.
Deleting now unused module prim_reg_cdc(BitMask=32'b10001111111111000001111111111100).
Deleting now unused module prim_reg_cdc(DataWidth=1,ResetVal=1'b0,BitMask=1'b1).
Deleting now unused module prim_reg_cdc(DataWidth=16,ResetVal=16'b010011011,BitMask=16'b1111111111111111).
Deleting now unused module prim_reg_cdc(DataWidth=2,ResetVal=2'b0,BitMask=2'b11).
Deleting now unused module prim_reg_cdc(DataWidth=28,ResetVal=28'b0,BitMask=28'b1111111111110000111111111111).
Deleting now unused module prim_reg_cdc(DataWidth=8,ResetVal=8'b0,BitMask=8'b11111111).
Deleting now unused module prim_reg_cdc(DataWidth=8,ResetVal=8'b0100,BitMask=8'b11111111).
Deleting now unused module prim_reg_cdc(ResetVal=32'b01100100000001100000,BitMask=32'b11111111111111111111111111110001).
Deleting now unused module prim_secded_inv_39_32_dec.
Deleting now unused module prim_secded_inv_39_32_enc.
Deleting now unused module prim_secded_inv_64_57_dec.
Deleting now unused module prim_secded_inv_64_57_enc.
Deleting now unused module prim_subreg(DW=1,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0).
Deleting now unused module prim_subreg(DW=1,SWACCESS=SwAccessW1C_prim_subreg_pkg,RESVAL=1'b0).
Deleting now unused module prim_subreg(DW=10,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=10'b0).
Deleting now unused module prim_subreg(DW=10,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=10'b0).
Deleting now unused module prim_subreg(DW=16,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=16'b010011011).
Deleting now unused module prim_subreg(DW=2,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=2'b0).
Deleting now unused module prim_subreg(DW=24,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=24'b011001000000).
Deleting now unused module prim_subreg(DW=4,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=4'b0110).
Deleting now unused module prim_subreg(DW=8,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=8'b0).
Deleting now unused module prim_subreg(DW=8,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=8'b0100).
Deleting now unused module prim_subreg(DW=8,SWACCESS=SwAccessW1C_prim_subreg_pkg,RESVAL=8'b0).
Deleting now unused module prim_subreg(DW=9,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=9'b0).
Deleting now unused module prim_subreg_ext(DW=32'b01).
Deleting now unused module prim_sync_reqack.
Deleting now unused module tlul_adapter_reg(RegAw=7).
Deleting now unused module tlul_cmd_intg_chk.
Deleting now unused module tlul_data_integ_dec.
Deleting now unused module tlul_data_integ_enc.
Deleting now unused module tlul_err.
Deleting now unused module tlul_rsp_intg_gen.
<suppressed ~172 debug messages>

yosys> bmuxmap

3.8. Executing BMUXMAP pass.

yosys> demuxmap

3.9. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> tribuf -logic

3.10. Executing TRIBUF pass.

yosys> deminout

3.11. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
<suppressed ~456 debug messages>

yosys> opt_clean

3.13. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 753 unused cells and 11703 unused wires.
<suppressed ~2797 debug messages>

yosys> check

3.14. Executing CHECK pass (checking for obvious problems).
Checking module adc_ctrl...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.15. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.15.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
<suppressed ~88 debug messages>

yosys> opt_merge -nomux

3.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
<suppressed ~15 debug messages>
Removed a total of 5 cells.

yosys> opt_muxtree

3.15.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port B of cell $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$mux_220$adc_ctrl_fsm.sv:344$1970: \u_adc_ctrl_core.u_adc_ctrl_fsm.fsm_state_q -> 5'01011
      Replacing known input bits on port A of cell $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$mux_217$adc_ctrl_fsm.sv:344$1969: \u_adc_ctrl_core.u_adc_ctrl_fsm.fsm_state_q -> 5'01011
      Replacing known input bits on port B of cell $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$mux_188$adc_ctrl_fsm.sv:260$1952: \u_adc_ctrl_core.u_adc_ctrl_fsm.fsm_state_q -> 5'00010
      Replacing known input bits on port A of cell $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$mux_179$adc_ctrl_fsm.sv:236$1948: \u_adc_ctrl_core.u_adc_ctrl_fsm.fsm_state_q -> 5'00000
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn0_filter_ctl_0_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn0_filter_ctl_0_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn0_filter_ctl_0_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn0_filter_ctl_0_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn0_filter_ctl_1_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn0_filter_ctl_1_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn0_filter_ctl_1_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn0_filter_ctl_1_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn0_filter_ctl_2_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn0_filter_ctl_2_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn0_filter_ctl_2_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn0_filter_ctl_2_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn0_filter_ctl_3_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn0_filter_ctl_3_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn0_filter_ctl_3_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn0_filter_ctl_3_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn0_filter_ctl_4_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn0_filter_ctl_4_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn0_filter_ctl_4_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn0_filter_ctl_4_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn0_filter_ctl_5_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn0_filter_ctl_5_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn0_filter_ctl_5_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn0_filter_ctl_5_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn0_filter_ctl_6_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn0_filter_ctl_6_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn0_filter_ctl_6_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn0_filter_ctl_6_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn0_filter_ctl_7_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn0_filter_ctl_7_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn0_filter_ctl_7_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn0_filter_ctl_7_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn1_filter_ctl_0_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn1_filter_ctl_0_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn1_filter_ctl_0_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn1_filter_ctl_0_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn1_filter_ctl_1_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn1_filter_ctl_1_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn1_filter_ctl_1_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn1_filter_ctl_1_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn1_filter_ctl_2_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn1_filter_ctl_2_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn1_filter_ctl_2_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn1_filter_ctl_2_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn1_filter_ctl_3_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn1_filter_ctl_3_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn1_filter_ctl_3_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn1_filter_ctl_3_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port A of cell $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$mux_22$prim_alert_sender.sv:142$8744: \gen_alert_tx[0].u_prim_alert_sender.state_q -> 3'000
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn1_filter_ctl_4_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn1_filter_ctl_4_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn1_filter_ctl_4_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn1_filter_ctl_4_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn1_filter_ctl_5_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn1_filter_ctl_5_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn1_filter_ctl_5_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn1_filter_ctl_5_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.$auto$bmuxmap.cc:60:execute$10925: \gen_alert_tx[0].u_prim_alert_sender.i_decode_ack.gen_async.state_q -> 2'11
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn1_filter_ctl_6_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn1_filter_ctl_6_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn1_filter_ctl_6_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn1_filter_ctl_6_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn1_filter_ctl_7_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn1_filter_ctl_7_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn1_filter_ctl_7_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn1_filter_ctl_7_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn_val_0_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn_val_0_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn_val_0_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn_val_0_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn_val_0_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn_val_0_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn_val_0_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn_val_0_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn_val_1_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_chn_val_1_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn_val_1_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_chn_val_1_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_chn_val_1_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_chn_val_1_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_chn_val_1_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_chn_val_1_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_en_ctl_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_en_ctl_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_en_ctl_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_en_ctl_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_en_ctl_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_en_ctl_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_en_ctl_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_en_ctl_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_fsm_rst_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_fsm_rst_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_fsm_rst_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_fsm_rst_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_fsm_rst_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_fsm_rst_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_fsm_rst_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_fsm_rst_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_lp_sample_ctl_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_lp_sample_ctl_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_lp_sample_ctl_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_lp_sample_ctl_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_pd_ctl_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_pd_ctl_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_pd_ctl_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_pd_ctl_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_pd_ctl_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_pd_ctl_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_pd_ctl_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_pd_ctl_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.$auto$bmuxmap.cc:60:execute$10925: \gen_alert_tx[0].u_prim_alert_sender.i_decode_ping.gen_async.state_q -> 2'11
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_sample_ctl_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_sample_ctl_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_sample_ctl_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_sample_ctl_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_sample_ctl_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_sample_ctl_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_sample_ctl_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_sample_ctl_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_wakeup_ctl_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_adc_wakeup_ctl_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_wakeup_ctl_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_adc_wakeup_ctl_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_adc_wakeup_ctl_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_adc_wakeup_ctl_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_adc_wakeup_ctl_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_adc_wakeup_ctl_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_aon_tgl.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_aon_tgl.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_aon_tgl.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_aon_tgl.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_aon_tgl.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_aon_tgl.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_aon_tgl.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_aon_tgl.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_filter_status_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9810: \u_reg.u_filter_status_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_filter_status_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9808: \u_reg.u_filter_status_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_filter_status_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9819: \u_reg.u_filter_status_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_filter_status_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9818: \u_reg.u_filter_status_cdc.u_prim_sync.dst_fsm_cs -> 1'0
  Analyzing evaluation results.
    dead port 1/2 on $mux $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$mux_188$adc_ctrl_fsm.sv:260$1952.
Removed 1 multiplexer ports.
<suppressed ~296 debug messages>

yosys> opt_reduce

3.15.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
    New ctrl vector for $pmux cell $flatten\u_reg.$verific$select_879$adc_ctrl_reg_top.sv:3982$8570: { \u_reg.addr_hit [0] $flatten\u_reg.$verific$n4771$2406 $flatten\u_reg.$verific$n4780$2415 $flatten\u_reg.$verific$n4783$2418 $flatten\u_reg.$verific$n4786$2421 $flatten\u_reg.$verific$n4789$2424 $flatten\u_reg.$verific$n4792$2427 $flatten\u_reg.$verific$n4795$2430 $flatten\u_reg.$verific$n4798$2433 $flatten\u_reg.$verific$n4801$2436 $flatten\u_reg.$verific$n4804$2439 $flatten\u_reg.$verific$n4807$2442 $flatten\u_reg.$verific$n4810$2445 $flatten\u_reg.$verific$n4813$2448 $flatten\u_reg.$verific$n4816$2451 $flatten\u_reg.$verific$n4819$2454 $flatten\u_reg.$verific$n4822$2457 $flatten\u_reg.$verific$n4825$2460 $flatten\u_reg.$verific$n4828$2463 $flatten\u_reg.$verific$n4831$2466 $flatten\u_reg.$verific$n4834$2469 $flatten\u_reg.$verific$n4837$2472 $flatten\u_reg.$verific$n4840$2475 $flatten\u_reg.$verific$n4843$2478 $flatten\u_reg.$verific$n4846$2481 $flatten\u_reg.$verific$n4849$2484 $flatten\u_reg.$verific$n4852$2487 $flatten\u_reg.$verific$n4855$2490 $flatten\u_reg.$verific$n4858$2493 $flatten\u_reg.$verific$n4860$2495 }
  Optimizing cells in module \adc_ctrl.
Performed a total of 1 changes.

yosys> opt_merge

3.15.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
<suppressed ~36 debug messages>
Removed a total of 12 cells.

yosys> opt_dff -nodffe -nosdff

3.15.6. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.$verific$gen_async.state_q_reg$prim_diff_decode.sv:172$8869 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.$verific$gen_async.diff_pq_reg$prim_diff_decode.sv:172$8870 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$rspop_reg$tlul_adapter_reg.sv:80$9912 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$reqsz_reg$tlul_adapter_reg.sv:80$9911 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$reqid_reg$tlul_adapter_reg.sv:80$9910 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$rdata_reg$tlul_adapter_reg.sv:90$9920 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$outstanding_reg$tlul_adapter_reg.sv:67$9900 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$error_reg$tlul_adapter_reg.sv:90$9921 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_intr_state.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_intr_enable.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.$verific$gen_async.diff_nq_reg$prim_diff_decode.sv:172$8871 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_filter_status_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_filter_status_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_filter_status_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_filter_status_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_filter_status_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_filter_status_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_filter_status_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_filter_status_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_filter_status_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9375 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_filter_status_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9357 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_filter_status.$verific$q_reg$prim_subreg.sv:72$9747 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_aon_tgl.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_aon_tgl.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_aon_tgl.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_aon_tgl.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_aon_tgl.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_aon_tgl.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_aon_tgl.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_aon_tgl.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_wakeup_ctl_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_wakeup_ctl_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_wakeup_ctl_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_wakeup_ctl_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_wakeup_ctl_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_wakeup_ctl_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_wakeup_ctl_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_wakeup_ctl_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_wakeup_ctl_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9375 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_wakeup_ctl_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9357 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_wakeup_ctl.$verific$q_reg$prim_subreg.sv:72$9707 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_sample_ctl_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_sample_ctl_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_sample_ctl_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_sample_ctl_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_sample_ctl_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_sample_ctl_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_sample_ctl_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_sample_ctl_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_sample_ctl_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9159 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_sample_ctl_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9141 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_pd_ctl_pwrup_time.$verific$q_reg$prim_subreg.sv:72$9688 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_pd_ctl_lp_mode.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_pd_ctl_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_pd_ctl_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_pd_ctl_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_pd_ctl_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_pd_ctl_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_pd_ctl_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_pd_ctl_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_pd_ctl_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_pd_ctl_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9519 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_pd_ctl_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9501 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9447 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9429 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_lp_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9728 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_intr_status_oneshot.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_intr_status_cc_src_det_flip.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_intr_status_cc_src_det.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_intr_status_cc_sink_det.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_intr_status_cc_discon.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_intr_status_cc_3a0_sink_det.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_intr_status_cc_1a5_src_det_flip.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_intr_status_cc_1a5_src_det.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_intr_status_cc_1a5_sink_det.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_intr_ctl.$verific$q_reg$prim_subreg.sv:72$9766 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_fsm_rst_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_fsm_rst_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_fsm_rst_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_fsm_rst_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_fsm_rst_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_fsm_rst_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_fsm_rst_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_fsm_rst_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_fsm_rst_cdc.$verific$src_q_reg[0]$prim_reg_cdc.sv:98$9088 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_fsm_rst_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9071 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_fsm_rst.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_en_ctl_oneshot_mode.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_en_ctl_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_en_ctl_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_en_ctl_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_en_ctl_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_en_ctl_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_en_ctl_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_en_ctl_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_en_ctl_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_en_ctl_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9231 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_en_ctl_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9213 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_en_ctl_adc_enable.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_1_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_1_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_1_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_1_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_1_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_1_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_1_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_1_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_1_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9303 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_1_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9285 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.\gen_async.i_sync_n.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8916 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.\gen_async.i_sync_p.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.\gen_async.i_sync_n.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8916 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.\gen_async.i_sync_p.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_intr_ext_1.$verific$q_reg$prim_subreg.sv:72$9646 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_intr_1.$verific$q_reg$prim_subreg.sv:72$9587 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_ext_1.$verific$q_reg$prim_subreg.sv:72$9646 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.$verific$level_q_reg$prim_diff_decode.sv:172$8872 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_1.$verific$q_reg$prim_subreg.sv:72$9587 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_0_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_0_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_0_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_0_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_0_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_0_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_0_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_0_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_0_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9303 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_0_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9285 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_intr_ext_0.$verific$q_reg$prim_subreg.sv:72$9646 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_intr_0.$verific$q_reg$prim_subreg.sv:72$9587 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_ext_0.$verific$q_reg$prim_subreg.sv:72$9646 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_0.$verific$q_reg$prim_subreg.sv:72$9587 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_en_7.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.$verific$gen_async.state_q_reg$prim_diff_decode.sv:172$8869 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cond_7.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.$verific$gen_async.diff_pq_reg$prim_diff_decode.sv:172$8870 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.$verific$gen_async.diff_nq_reg$prim_diff_decode.sv:172$8871 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_en_6.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cond_6.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_en_5.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cond_5.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$state_q_reg$prim_alert_sender.sv:235$8779 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$ping_set_q_reg$prim_alert_sender.sv:235$8783 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_en_4.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cond_4.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_en_3.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cond_3.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_en_2.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cond_2.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_en_1.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cond_1.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_en_0.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cond_0.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_en_7.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cond_7.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$alert_set_q_reg$prim_alert_sender.sv:235$8782 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_en_6.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$alert_pq_reg$prim_alert_sender.sv:235$8780 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cond_6.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$alert_nq_reg$prim_alert_sender.sv:235$8781 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_en_5.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cond_5.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_en_4.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cond_4.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_en_3.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cond_3.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_en_2.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cond_2.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_en_1.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cond_1.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_en_0.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cond_0.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9828 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9832 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9833 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.$verific$intg_err_q_reg$adc_ctrl_reg_top.sv:65$2734 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_oneshot_done_sync.\prim_flop_2sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_oneshot_done_sync.\prim_flop_2sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_oneshot_done_sync.$verific$src_level_reg$prim_pulse_sync.sv:32$8950 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_oneshot_done_sync.$verific$dst_level_q_reg$prim_pulse_sync.sv:60$8957 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\i_adc_ctrl_intr_o.$verific$intr_o_reg[0]$prim_intr_hw.sv:46$8936 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[7].u_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[7].u_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[6].u_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[6].u_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[5].u_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[5].u_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[4].u_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[4].u_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[3].u_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[3].u_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[2].u_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[2].u_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[1].u_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[1].u_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[0].u_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[0].u_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.$verific$gen_filter_status_sync[7].cfg_filter_status_q_reg$adc_ctrl_intr.sv:45$2070 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.$verific$gen_filter_status_sync[6].cfg_filter_status_q_reg$adc_ctrl_intr.sv:45$2064 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.$verific$gen_filter_status_sync[5].cfg_filter_status_q_reg$adc_ctrl_intr.sv:45$2058 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.$verific$gen_filter_status_sync[4].cfg_filter_status_q_reg$adc_ctrl_intr.sv:45$2052 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.$verific$gen_filter_status_sync[3].cfg_filter_status_q_reg$adc_ctrl_intr.sv:45$2046 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.$verific$gen_filter_status_sync[2].cfg_filter_status_q_reg$adc_ctrl_intr.sv:45$2040 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.$verific$gen_filter_status_sync[1].cfg_filter_status_q_reg$adc_ctrl_intr.sv:45$2034 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.$verific$gen_filter_status_sync[0].cfg_filter_status_q_reg$adc_ctrl_intr.sv:45$2028 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$wakeup_timer_cnt_q_reg$adc_ctrl_fsm.sv:142$1887 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$trigger_q_reg$adc_ctrl_fsm.sv:86$1849 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$pwrup_timer_cnt_q_reg$adc_ctrl_fsm.sv:102$1863 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$np_sample_cnt_q_reg$adc_ctrl_fsm.sv:128$1879 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$lp_sample_cnt_q_reg$adc_ctrl_fsm.sv:115$1871 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$fsm_state_q_reg$adc_ctrl_fsm.sv:212$1946 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$chn1_val_we_o_reg$adc_ctrl_fsm.sv:170$1918 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$chn1_val_o_reg$adc_ctrl_fsm.sv:170$1920 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$chn0_val_we_o_reg$adc_ctrl_fsm.sv:170$1917 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$chn0_val_o_reg$adc_ctrl_fsm.sv:170$1919 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$adc_ctrl_match_q_reg$adc_ctrl_fsm.sv:190$1931 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.\gen_async.i_sync_p.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.\gen_async.i_sync_p.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.\gen_async.i_sync_n.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8916 ($aldff) from module adc_ctrl.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.\gen_async.i_sync_n.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8916 ($aldff) from module adc_ctrl.

yosys> opt_clean

3.15.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 4 unused cells and 101 unused wires.
<suppressed ~5 debug messages>

yosys> opt_expr

3.15.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
<suppressed ~1 debug messages>

3.15.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.15.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~304 debug messages>

yosys> opt_reduce

3.15.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.15.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.15.13. Executing OPT_DFF pass (perform DFF optimizations).
Handling D = Q on $flatten\u_reg.\u_intr_enable.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_wakeup_ctl.$verific$q_reg$prim_subreg.sv:72$9707 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_pd_ctl_pwrup_time.$verific$q_reg$prim_subreg.sv:72$9688 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_pd_ctl_lp_mode.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_lp_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9728 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_intr_ctl.$verific$q_reg$prim_subreg.sv:72$9766 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_fsm_rst.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_en_ctl_oneshot_mode.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_en_ctl_adc_enable.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_intr_ext_1.$verific$q_reg$prim_subreg.sv:72$9646 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_ext_1.$verific$q_reg$prim_subreg.sv:72$9646 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_intr_ext_0.$verific$q_reg$prim_subreg.sv:72$9646 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_ext_0.$verific$q_reg$prim_subreg.sv:72$9646 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_en_7.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cond_7.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_en_6.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cond_6.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_en_5.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cond_5.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_en_4.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cond_4.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_en_3.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cond_3.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_en_2.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cond_2.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_en_1.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cond_1.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_en_0.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cond_0.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_en_7.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cond_7.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_en_6.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cond_6.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_en_5.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cond_5.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_en_4.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cond_4.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_en_3.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cond_3.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_en_2.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cond_2.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_en_1.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cond_1.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_en_0.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cond_0.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($adff) from module adc_ctrl (removing D path).
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cond_0.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_en_0.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cond_1.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_en_1.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cond_2.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_en_2.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cond_3.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_en_3.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cond_4.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_en_4.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cond_5.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_en_5.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cond_6.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_en_6.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cond_7.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_en_7.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cond_0.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_en_0.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_max_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_min_v_0.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cond_1.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_en_1.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_max_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_min_v_1.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cond_2.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_en_2.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_max_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_min_v_2.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cond_3.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_en_3.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_max_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_min_v_3.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cond_4.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_en_4.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_max_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_min_v_4.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cond_5.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_en_5.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_max_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_min_v_5.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cond_6.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_en_6.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_max_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_min_v_6.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cond_7.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_en_7.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_max_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_min_v_7.$verific$q_reg$prim_subreg.sv:72$9606 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_ext_0.$verific$q_reg$prim_subreg.sv:72$9646 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_ext_0.$verific$q_reg$prim_subreg.sv:72$9646 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_intr_ext_0.$verific$q_reg$prim_subreg.sv:72$9646 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_intr_ext_0.$verific$q_reg$prim_subreg.sv:72$9646 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_ext_1.$verific$q_reg$prim_subreg.sv:72$9646 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_ext_1.$verific$q_reg$prim_subreg.sv:72$9646 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_intr_ext_1.$verific$q_reg$prim_subreg.sv:72$9646 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_intr_ext_1.$verific$q_reg$prim_subreg.sv:72$9646 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_en_ctl_adc_enable.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_en_ctl_oneshot_mode.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_fsm_rst.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_intr_ctl.$verific$q_reg$prim_subreg.sv:72$9766 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_intr_ctl.$verific$q_reg$prim_subreg.sv:72$9766 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_intr_ctl.$verific$q_reg$prim_subreg.sv:72$9766 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_intr_ctl.$verific$q_reg$prim_subreg.sv:72$9766 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_intr_ctl.$verific$q_reg$prim_subreg.sv:72$9766 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_intr_ctl.$verific$q_reg$prim_subreg.sv:72$9766 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_intr_ctl.$verific$q_reg$prim_subreg.sv:72$9766 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_intr_ctl.$verific$q_reg$prim_subreg.sv:72$9766 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_intr_ctl.$verific$q_reg$prim_subreg.sv:72$9766 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_lp_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9728 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_lp_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9728 ($dlatch) from module adc_ctrl.
Setting constant 1-bit at position 2 on $flatten\u_reg.\u_adc_lp_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9728 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_lp_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9728 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_lp_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9728 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_lp_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9728 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_lp_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9728 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_lp_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9728 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_pd_ctl_lp_mode.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_pd_ctl_pwrup_time.$verific$q_reg$prim_subreg.sv:72$9688 ($dlatch) from module adc_ctrl.
Setting constant 1-bit at position 1 on $flatten\u_reg.\u_adc_pd_ctl_pwrup_time.$verific$q_reg$prim_subreg.sv:72$9688 ($dlatch) from module adc_ctrl.
Setting constant 1-bit at position 2 on $flatten\u_reg.\u_adc_pd_ctl_pwrup_time.$verific$q_reg$prim_subreg.sv:72$9688 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_pd_ctl_pwrup_time.$verific$q_reg$prim_subreg.sv:72$9688 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 1-bit at position 6 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 1-bit at position 9 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 1-bit at position 10 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 16 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 17 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 18 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 19 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 20 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 21 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 22 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 23 on $flatten\u_reg.\u_adc_pd_ctl_wakeup_time.$verific$q_reg$prim_subreg.sv:72$9667 ($dlatch) from module adc_ctrl.
Setting constant 1-bit at position 0 on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($dlatch) from module adc_ctrl.
Setting constant 1-bit at position 1 on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($dlatch) from module adc_ctrl.
Setting constant 1-bit at position 3 on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($dlatch) from module adc_ctrl.
Setting constant 1-bit at position 4 on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($dlatch) from module adc_ctrl.
Setting constant 1-bit at position 7 on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_adc_sample_ctl.$verific$q_reg$prim_subreg.sv:72$9627 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_wakeup_ctl.$verific$q_reg$prim_subreg.sv:72$9707 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_wakeup_ctl.$verific$q_reg$prim_subreg.sv:72$9707 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_wakeup_ctl.$verific$q_reg$prim_subreg.sv:72$9707 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_wakeup_ctl.$verific$q_reg$prim_subreg.sv:72$9707 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_wakeup_ctl.$verific$q_reg$prim_subreg.sv:72$9707 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_wakeup_ctl.$verific$q_reg$prim_subreg.sv:72$9707 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_wakeup_ctl.$verific$q_reg$prim_subreg.sv:72$9707 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_wakeup_ctl.$verific$q_reg$prim_subreg.sv:72$9707 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_intr_enable.$verific$q_reg[0]$prim_subreg.sv:72$9551 ($dlatch) from module adc_ctrl.

yosys> opt_clean

3.15.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.15.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
<suppressed ~38 debug messages>

3.15.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.15.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~282 debug messages>

yosys> opt_reduce

3.15.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
    New ctrl vector for $pmux cell $flatten\u_reg.$verific$select_879$adc_ctrl_reg_top.sv:3982$8570: { \u_reg.addr_hit [0] $flatten\u_reg.$verific$n4780$2415 $flatten\u_reg.$verific$n4783$2418 $flatten\u_reg.$verific$n4786$2421 $flatten\u_reg.$verific$n4789$2424 $flatten\u_reg.$verific$n4792$2427 $flatten\u_reg.$verific$n4795$2430 $flatten\u_reg.$verific$n4798$2433 $flatten\u_reg.$verific$n4801$2436 $flatten\u_reg.$verific$n4804$2439 $flatten\u_reg.$verific$n4807$2442 $flatten\u_reg.$verific$n4810$2445 $flatten\u_reg.$verific$n4813$2448 $flatten\u_reg.$verific$n4816$2451 $flatten\u_reg.$verific$n4819$2454 $flatten\u_reg.$verific$n4822$2457 $flatten\u_reg.$verific$n4825$2460 $flatten\u_reg.$verific$n4828$2463 $flatten\u_reg.$verific$n4831$2466 $flatten\u_reg.$verific$n4834$2469 $flatten\u_reg.$verific$n4837$2472 $flatten\u_reg.$verific$n4840$2475 $flatten\u_reg.$verific$n4843$2478 $flatten\u_reg.$verific$n4846$2481 $flatten\u_reg.$verific$n4849$2484 $flatten\u_reg.$verific$n4852$2487 $flatten\u_reg.$verific$n4858$2493 $flatten\u_reg.$verific$n4860$2495 }
  Optimizing cells in module \adc_ctrl.
Performed a total of 1 changes.

yosys> opt_merge

3.15.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
<suppressed ~252 debug messages>
Removed a total of 84 cells.

yosys> opt_dff -nodffe -nosdff

3.15.20. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$trigger_q_reg$adc_ctrl_fsm.sv:86$1849 ($adff) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\i_adc_ctrl_intr_o.$verific$intr_o_reg[0]$prim_intr_hw.sv:46$8936 ($adff) from module adc_ctrl.

yosys> opt_clean

3.15.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 11 unused cells and 116 unused wires.
<suppressed ~12 debug messages>

yosys> opt_expr

3.15.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
<suppressed ~1 debug messages>

3.15.23. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.15.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~282 debug messages>

yosys> opt_reduce

3.15.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.15.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.15.27. Executing OPT_DFF pass (perform DFF optimizations).
Handling D = Q on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_intr_1.$verific$q_reg$prim_subreg.sv:72$9587 ($adff) from module adc_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_intr_0.$verific$q_reg$prim_subreg.sv:72$9587 ($adff) from module adc_ctrl (removing D path).
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_intr_0.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_intr_0.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_intr_0.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_intr_0.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_intr_0.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_intr_0.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_intr_0.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_intr_0.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_intr_0.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_intr_0.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_intr_1.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_intr_1.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_intr_1.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_intr_1.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_intr_1.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_intr_1.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_intr_1.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_intr_1.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_intr_1.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_intr_1.$verific$q_reg$prim_subreg.sv:72$9587 ($dlatch) from module adc_ctrl.

yosys> opt_clean

3.15.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.15.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.

3.15.30. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.15.31. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~282 debug messages>

yosys> opt_reduce

3.15.32. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.15.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.15.34. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.15.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..

yosys> opt_expr

3.15.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.

3.15.37. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

3.16. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.16.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.16.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.16.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.16.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..

yosys> fsm_opt

3.16.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.16.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.16.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.16.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat -nosdff

3.17. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.17.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.

yosys> opt_merge -nomux

3.17.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.17.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~282 debug messages>

yosys> opt_reduce

3.17.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.17.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_dff -sat -nosdff

3.17.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$rspop_reg$tlul_adapter_reg.sv:80$9912 ($adff) from module adc_ctrl (D = { 2'00 \u_reg.u_reg_if.rd_req }, Q = \u_reg.u_reg_if.rspop).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$reqsz_reg$tlul_adapter_reg.sv:80$9911 ($adff) from module adc_ctrl (D = \tl_i.a_size, Q = \u_reg.u_reg_if.reqsz).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$reqid_reg$tlul_adapter_reg.sv:80$9910 ($adff) from module adc_ctrl (D = \tl_i.a_source, Q = \u_reg.u_reg_if.reqid).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$rdata_reg$tlul_adapter_reg.sv:90$9920 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_reg_if.$verific$n182$9870, Q = \u_reg.u_reg_if.rdata).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$outstanding_reg$tlul_adapter_reg.sv:67$9900 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_reg_if.$verific$n75$9850, Q = \u_reg.u_reg_if.outstanding).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$error_reg$tlul_adapter_reg.sv:90$9921 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_reg_if.$verific$n248$9852, Q = \u_reg.u_reg_if.error).
Adding EN signal on $flatten\u_reg.\u_intr_state.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($adff) from module adc_ctrl (D = \u_adc_ctrl_core.intr_state_o.d, Q = \u_reg.u_intr_state.q).
Adding EN signal on $flatten\u_reg.\u_filter_status_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9375 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_filter_status_cdc.$verific$n81$9344, Q = \u_reg.u_filter_status_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_filter_status_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9357 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_filter_status_cdc.$verific$n14$9327, Q = \u_reg.u_filter_status_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_filter_status.$verific$q_reg$prim_subreg.sv:72$9747 ($adff) from module adc_ctrl (D = \u_adc_ctrl_core.aon_filter_status_o.d, Q = \u_reg.u_filter_status.q).
Adding EN signal on $flatten\u_reg.\u_adc_wakeup_ctl_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9375 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_wakeup_ctl_cdc.$verific$n81$9344, Q = \u_reg.u_adc_wakeup_ctl_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_wakeup_ctl_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9357 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_wakeup_ctl_cdc.$verific$n14$9327, Q = \u_reg.u_adc_wakeup_ctl_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_sample_ctl_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9159 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_sample_ctl_cdc.$verific$n113$9128, Q = \u_reg.u_adc_sample_ctl_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_sample_ctl_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9141 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_sample_ctl_cdc.$verific$n14$9111, Q = \u_reg.u_adc_sample_ctl_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_pd_ctl_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9519 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_pd_ctl_cdc.$verific$n177$9488, Q = \u_reg.u_adc_pd_ctl_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_pd_ctl_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9501 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_pd_ctl_cdc.$verific$n14$9471, Q = \u_reg.u_adc_pd_ctl_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9447 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.$verific$n81$9416, Q = \u_reg.u_adc_lp_sample_ctl_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9429 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_lp_sample_ctl_cdc.$verific$n14$9399, Q = \u_reg.u_adc_lp_sample_ctl_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_intr_status_oneshot.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($adff) from module adc_ctrl (D = 1'1, Q = \u_reg.u_adc_intr_status_oneshot.q).
Adding EN signal on $flatten\u_reg.\u_adc_intr_status_cc_src_det_flip.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($adff) from module adc_ctrl (D = 1'1, Q = \u_reg.u_adc_intr_status_cc_src_det_flip.q).
Adding EN signal on $flatten\u_reg.\u_adc_intr_status_cc_src_det.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($adff) from module adc_ctrl (D = 1'1, Q = \u_reg.u_adc_intr_status_cc_src_det.q).
Adding EN signal on $flatten\u_reg.\u_adc_intr_status_cc_sink_det.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($adff) from module adc_ctrl (D = 1'1, Q = \u_reg.u_adc_intr_status_cc_sink_det.q).
Adding EN signal on $flatten\u_reg.\u_adc_intr_status_cc_discon.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($adff) from module adc_ctrl (D = 1'1, Q = \u_reg.u_adc_intr_status_cc_discon.q).
Adding EN signal on $flatten\u_reg.\u_adc_intr_status_cc_3a0_sink_det.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($adff) from module adc_ctrl (D = 1'1, Q = \u_reg.u_adc_intr_status_cc_3a0_sink_det.q).
Adding EN signal on $flatten\u_reg.\u_adc_intr_status_cc_1a5_src_det_flip.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($adff) from module adc_ctrl (D = 1'1, Q = \u_reg.u_adc_intr_status_cc_1a5_src_det_flip.q).
Adding EN signal on $flatten\u_reg.\u_adc_intr_status_cc_1a5_src_det.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($adff) from module adc_ctrl (D = 1'1, Q = \u_reg.u_adc_intr_status_cc_1a5_src_det.q).
Adding EN signal on $flatten\u_reg.\u_adc_intr_status_cc_1a5_sink_det.$verific$q_reg[0]$prim_subreg.sv:72$9568 ($adff) from module adc_ctrl (D = 1'1, Q = \u_reg.u_adc_intr_status_cc_1a5_sink_det.q).
Adding EN signal on $flatten\u_reg.\u_adc_fsm_rst_cdc.$verific$src_q_reg[0]$prim_reg_cdc.sv:98$9088 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_fsm_rst_cdc.$verific$n49$9054, Q = \u_reg.u_adc_fsm_rst_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_fsm_rst_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9071 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_fsm_rst_cdc.$verific$n14$9043, Q = \u_reg.u_adc_fsm_rst_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_en_ctl_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9231 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_en_ctl_cdc.$verific$n57$9200, Q = \u_reg.u_adc_en_ctl_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_en_ctl_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9213 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_en_ctl_cdc.$verific$n14$9183, Q = \u_reg.u_adc_en_ctl_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn_val_1_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9303 ($adff) from module adc_ctrl (D = { 16'0000000000000000 \u_reg.u_adc_chn_val_1_adc_chn_value_1.q 2'00 }, Q = \u_reg.u_adc_chn_val_1_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn_val_1_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9285 ($adff) from module adc_ctrl (D = 1'0, Q = \u_reg.u_adc_chn_val_1_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn_val_1_adc_chn_value_1.$verific$q_reg$prim_subreg.sv:72$9587 ($adff) from module adc_ctrl (D = \u_adc_ctrl_core.u_adc_ctrl_fsm.chn1_val_o, Q = \u_reg.u_adc_chn_val_1_adc_chn_value_1.q).
Adding EN signal on $flatten\u_reg.\u_adc_chn_val_0_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9303 ($adff) from module adc_ctrl (D = { 16'0000000000000000 \u_reg.u_adc_chn_val_0_adc_chn_value_0.q 2'00 }, Q = \u_reg.u_adc_chn_val_0_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn_val_0_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9285 ($adff) from module adc_ctrl (D = 1'0, Q = \u_reg.u_adc_chn_val_0_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn_val_0_adc_chn_value_0.$verific$q_reg$prim_subreg.sv:72$9587 ($adff) from module adc_ctrl (D = \u_adc_ctrl_core.u_adc_ctrl_fsm.chn0_val_o, Q = \u_reg.u_adc_chn_val_0_adc_chn_value_0.q).
Adding EN signal on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.$verific$n177$8988, Q = \u_reg.u_adc_chn1_filter_ctl_7_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn1_filter_ctl_7_cdc.$verific$n14$8971, Q = \u_reg.u_adc_chn1_filter_ctl_7_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.$verific$n177$8988, Q = \u_reg.u_adc_chn1_filter_ctl_6_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn1_filter_ctl_6_cdc.$verific$n14$8971, Q = \u_reg.u_adc_chn1_filter_ctl_6_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.$verific$n177$8988, Q = \u_reg.u_adc_chn1_filter_ctl_5_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn1_filter_ctl_5_cdc.$verific$n14$8971, Q = \u_reg.u_adc_chn1_filter_ctl_5_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.$verific$n177$8988, Q = \u_reg.u_adc_chn1_filter_ctl_4_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn1_filter_ctl_4_cdc.$verific$n14$8971, Q = \u_reg.u_adc_chn1_filter_ctl_4_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.$verific$n177$8988, Q = \u_reg.u_adc_chn1_filter_ctl_3_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn1_filter_ctl_3_cdc.$verific$n14$8971, Q = \u_reg.u_adc_chn1_filter_ctl_3_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.$verific$n177$8988, Q = \u_reg.u_adc_chn1_filter_ctl_2_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn1_filter_ctl_2_cdc.$verific$n14$8971, Q = \u_reg.u_adc_chn1_filter_ctl_2_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.$verific$n177$8988, Q = \u_reg.u_adc_chn1_filter_ctl_1_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn1_filter_ctl_1_cdc.$verific$n14$8971, Q = \u_reg.u_adc_chn1_filter_ctl_1_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.$verific$n177$8988, Q = \u_reg.u_adc_chn1_filter_ctl_0_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn1_filter_ctl_0_cdc.$verific$n14$8971, Q = \u_reg.u_adc_chn1_filter_ctl_0_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.$verific$n177$8988, Q = \u_reg.u_adc_chn0_filter_ctl_7_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn0_filter_ctl_7_cdc.$verific$n14$8971, Q = \u_reg.u_adc_chn0_filter_ctl_7_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.$verific$n177$8988, Q = \u_reg.u_adc_chn0_filter_ctl_6_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn0_filter_ctl_6_cdc.$verific$n14$8971, Q = \u_reg.u_adc_chn0_filter_ctl_6_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.$verific$n177$8988, Q = \u_reg.u_adc_chn0_filter_ctl_5_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn0_filter_ctl_5_cdc.$verific$n14$8971, Q = \u_reg.u_adc_chn0_filter_ctl_5_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.$verific$n177$8988, Q = \u_reg.u_adc_chn0_filter_ctl_4_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn0_filter_ctl_4_cdc.$verific$n14$8971, Q = \u_reg.u_adc_chn0_filter_ctl_4_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.$verific$n177$8988, Q = \u_reg.u_adc_chn0_filter_ctl_3_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn0_filter_ctl_3_cdc.$verific$n14$8971, Q = \u_reg.u_adc_chn0_filter_ctl_3_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.$verific$n177$8988, Q = \u_reg.u_adc_chn0_filter_ctl_2_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn0_filter_ctl_2_cdc.$verific$n14$8971, Q = \u_reg.u_adc_chn0_filter_ctl_2_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.$verific$n177$8988, Q = \u_reg.u_adc_chn0_filter_ctl_1_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn0_filter_ctl_1_cdc.$verific$n14$8971, Q = \u_reg.u_adc_chn0_filter_ctl_1_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9019 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.$verific$n177$8988, Q = \u_reg.u_adc_chn0_filter_ctl_0_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9001 ($adff) from module adc_ctrl (D = $flatten\u_reg.\u_adc_chn0_filter_ctl_0_cdc.$verific$n14$8971, Q = \u_reg.u_adc_chn0_filter_ctl_0_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.$verific$intg_err_q_reg$adc_ctrl_reg_top.sv:65$2734 ($adff) from module adc_ctrl (D = 1'1, Q = \u_reg.intg_err_q).
Adding EN signal on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$wakeup_timer_cnt_q_reg$adc_ctrl_fsm.sv:142$1887 ($adff) from module adc_ctrl (D = $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$n438$1797, Q = \u_adc_ctrl_core.u_adc_ctrl_fsm.wakeup_timer_cnt_q).
Adding EN signal on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$pwrup_timer_cnt_q_reg$adc_ctrl_fsm.sv:102$1863 ($adff) from module adc_ctrl (D = $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$n55$1779, Q = \u_adc_ctrl_core.u_adc_ctrl_fsm.pwrup_timer_cnt_q).
Adding EN signal on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$np_sample_cnt_q_reg$adc_ctrl_fsm.sv:128$1879 ($adff) from module adc_ctrl (D = $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$n249$1791, Q = \u_adc_ctrl_core.u_adc_ctrl_fsm.np_sample_cnt_q).
Adding EN signal on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$lp_sample_cnt_q_reg$adc_ctrl_fsm.sv:115$1871 ($adff) from module adc_ctrl (D = $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$n124$1785, Q = \u_adc_ctrl_core.u_adc_ctrl_fsm.lp_sample_cnt_q).
Adding EN signal on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$fsm_state_q_reg$adc_ctrl_fsm.sv:212$1946 ($adff) from module adc_ctrl (D = \u_adc_ctrl_core.u_adc_ctrl_fsm.fsm_state_d, Q = \u_adc_ctrl_core.u_adc_ctrl_fsm.fsm_state_q).
Adding EN signal on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$chn1_val_o_reg$adc_ctrl_fsm.sv:170$1920 ($adff) from module adc_ctrl (D = \adc_i.data, Q = \u_adc_ctrl_core.u_adc_ctrl_fsm.chn1_val_o).
Adding EN signal on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$chn0_val_o_reg$adc_ctrl_fsm.sv:170$1919 ($adff) from module adc_ctrl (D = \adc_i.data, Q = \u_adc_ctrl_core.u_adc_ctrl_fsm.chn0_val_o).
Adding EN signal on $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$adc_ctrl_match_q_reg$adc_ctrl_fsm.sv:190$1931 ($adff) from module adc_ctrl (D = \u_adc_ctrl_core.match, Q = \u_adc_ctrl_core.u_adc_ctrl_fsm.adc_ctrl_match_q).
Adding EN signal on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.$verific$gen_async.state_q_reg$prim_diff_decode.sv:172$8869 ($adff) from module adc_ctrl (D = \gen_alert_tx[0].u_prim_alert_sender.i_decode_ping.gen_async.state_d, Q = \gen_alert_tx[0].u_prim_alert_sender.i_decode_ping.gen_async.state_q).
Adding EN signal on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.$verific$gen_async.state_q_reg$prim_diff_decode.sv:172$8869 ($adff) from module adc_ctrl (D = \gen_alert_tx[0].u_prim_alert_sender.i_decode_ack.gen_async.state_d, Q = \gen_alert_tx[0].u_prim_alert_sender.i_decode_ack.gen_async.state_q).
Adding EN signal on $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$state_q_reg$prim_alert_sender.sv:235$8779 ($adff) from module adc_ctrl (D = \gen_alert_tx[0].u_prim_alert_sender.state_d, Q = \gen_alert_tx[0].u_prim_alert_sender.state_q).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$11702 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$11702 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$11702 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$11702 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$11702 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$11702 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$11702 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$11702 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$11644 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$11644 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$11644 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$11644 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$11644 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$11644 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$11644 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$11644 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$11644 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$11644 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$11638 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$11638 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$11638 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$11638 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$11638 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$11638 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$11638 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$11638 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$11638 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$11638 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$11632 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$11632 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$11632 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$11632 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$11632 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$11632 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$11632 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$11632 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$11632 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$11632 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$11626 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$11626 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$11626 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$11626 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$11626 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$11626 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$11626 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$11626 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$11626 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$11626 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$11620 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$11620 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$11620 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$11620 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$11620 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$11620 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$11620 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$11620 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$11620 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$11620 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$11614 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$11614 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$11614 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$11614 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$11614 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$11614 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$11614 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$11614 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$11614 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$11614 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$11608 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$11608 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$11608 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$11608 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$11608 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$11608 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$11608 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$11608 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$11608 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$11608 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$11602 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$11602 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$11602 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$11602 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$11602 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$11602 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$11602 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$11602 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$11602 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$11602 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$11596 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$11596 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$11596 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$11596 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$11596 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$11596 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$11596 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$11596 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$11596 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$11596 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$11590 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$11590 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$11590 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$11590 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$11590 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$11590 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$11590 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$11590 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$11590 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$11590 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$11584 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$11584 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$11584 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$11584 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$11584 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$11584 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$11584 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$11584 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$11584 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$11584 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$11578 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$11578 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$11578 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$11578 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$11578 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$11578 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$11578 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$11578 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$11578 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$11578 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$11572 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$11572 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$11572 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$11572 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$11572 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$11572 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$11572 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$11572 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$11572 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$11572 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$11566 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$11566 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$11566 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$11566 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$11566 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$11566 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$11566 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$11566 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$11566 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$11566 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$11560 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$11560 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$11560 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$11560 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$11560 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$11560 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$11560 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$11560 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$11560 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$11560 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$11554 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$11554 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$11554 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$11554 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$11554 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$11554 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$11554 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$11554 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$11554 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$11554 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$11552 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$11551 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$11551 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 12 on $auto$ff.cc:262:slice$11551 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$11551 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$11551 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$11551 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$11551 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$11551 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 18 on $auto$ff.cc:262:slice$11551 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 19 on $auto$ff.cc:262:slice$11551 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 20 on $auto$ff.cc:262:slice$11551 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 21 on $auto$ff.cc:262:slice$11551 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 22 on $auto$ff.cc:262:slice$11551 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 23 on $auto$ff.cc:262:slice$11551 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 24 on $auto$ff.cc:262:slice$11551 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 25 on $auto$ff.cc:262:slice$11551 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 26 on $auto$ff.cc:262:slice$11551 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 27 on $auto$ff.cc:262:slice$11551 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$11549 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$11548 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$11548 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 12 on $auto$ff.cc:262:slice$11548 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$11548 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$11548 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$11548 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$11548 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$11548 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 18 on $auto$ff.cc:262:slice$11548 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 19 on $auto$ff.cc:262:slice$11548 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 20 on $auto$ff.cc:262:slice$11548 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 21 on $auto$ff.cc:262:slice$11548 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 22 on $auto$ff.cc:262:slice$11548 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 23 on $auto$ff.cc:262:slice$11548 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 24 on $auto$ff.cc:262:slice$11548 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 25 on $auto$ff.cc:262:slice$11548 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 26 on $auto$ff.cc:262:slice$11548 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 27 on $auto$ff.cc:262:slice$11548 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$11515 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$11515 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$11515 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$11502 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$11502 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$11502 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$11502 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$11502 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$11502 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$11502 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$11502 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$11487 ($adffe) from module adc_ctrl.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$11487 ($adffe) from module adc_ctrl.

yosys> opt_clean

3.17.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 46 unused cells and 42 unused wires.
<suppressed ~53 debug messages>

yosys> opt_expr

3.17.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
<suppressed ~77 debug messages>

3.17.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.17.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~252 debug messages>

yosys> opt_reduce

3.17.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.17.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
<suppressed ~81 debug messages>
Removed a total of 27 cells.

yosys> opt_dff -sat -nosdff

3.17.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[0].u_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($adff) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn_val_0_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($adff) from module adc_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_adc_chn_val_1_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9827 ($adff) from module adc_ctrl.

yosys> opt_clean

3.17.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 30 unused cells and 85 unused wires.
<suppressed ~85 debug messages>

yosys> opt_expr

3.17.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.

3.17.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.17.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~242 debug messages>

yosys> opt_reduce

3.17.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.17.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_dff -sat -nosdff

3.17.20. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.\gen_filter_status_sync[0].u_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$8899 ($adff) from module adc_ctrl.

yosys> opt_clean

3.17.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..

yosys> opt_expr

3.17.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.

3.17.23. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.17.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~242 debug messages>

yosys> opt_reduce

3.17.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.17.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_dff -sat -nosdff

3.17.27. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.$verific$gen_filter_status_sync[0].cfg_filter_status_q_reg$adc_ctrl_intr.sv:45$2028 ($adff) from module adc_ctrl.

yosys> opt_clean

3.17.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..

yosys> opt_expr

3.17.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
<suppressed ~2 debug messages>

3.17.30. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.17.31. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~242 debug messages>

yosys> opt_reduce

3.17.32. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.17.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
<suppressed ~21 debug messages>
Removed a total of 7 cells.

yosys> opt_dff -sat -nosdff

3.17.34. Executing OPT_DFF pass (perform DFF optimizations).
Handling never-active EN on $auto$ff.cc:262:slice$11528 ($adffe) from module adc_ctrl (removing D path).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$11528 ($dlatch) from module adc_ctrl.

yosys> opt_clean

3.17.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.17.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.

3.17.37. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.17.38. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~242 debug messages>

yosys> opt_reduce

3.17.39. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.17.40. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_dff -sat -nosdff

3.17.41. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.17.42. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..

yosys> opt_expr

3.17.43. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.

3.17.44. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.18. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 6) from port B of cell adc_ctrl.$auto$opt_dff.cc:195:make_patterns_logic$11679 ($ne).
Removed top 3 bits (of 6) from port B of cell adc_ctrl.$auto$opt_dff.cc:195:make_patterns_logic$11675 ($ne).
Removed top 2 bits (of 6) from port B of cell adc_ctrl.$auto$opt_dff.cc:195:make_patterns_logic$11677 ($ne).
Removed top 1 bits (of 6) from port B of cell adc_ctrl.$auto$opt_dff.cc:195:make_patterns_logic$11669 ($ne).
Removed top 2 bits (of 6) from port B of cell adc_ctrl.$auto$opt_dff.cc:195:make_patterns_logic$11671 ($ne).
Removed top 1 bits (of 6) from port B of cell adc_ctrl.$auto$opt_dff.cc:195:make_patterns_logic$11673 ($ne).
Removed top 2 bits (of 3) from port B of cell adc_ctrl.$flatten\u_reg.\u_reg_if.$verific$equal_8$tlul_adapter_reg.sv:55$9880 ($eq).
Removed top 4 bits (of 5) from port B of cell adc_ctrl.$flatten\u_reg.$verific$equal_319$adc_ctrl_reg_top.sv:3667$8272 ($eq).
Removed top 3 bits (of 5) from port B of cell adc_ctrl.$flatten\u_reg.$verific$equal_321$adc_ctrl_reg_top.sv:3668$8273 ($eq).
Removed top 3 bits (of 5) from port B of cell adc_ctrl.$flatten\u_reg.$verific$equal_323$adc_ctrl_reg_top.sv:3669$8274 ($eq).
Removed top 2 bits (of 5) from port B of cell adc_ctrl.$flatten\u_reg.$verific$equal_325$adc_ctrl_reg_top.sv:3670$8275 ($eq).
Removed top 2 bits (of 5) from port B of cell adc_ctrl.$flatten\u_reg.$verific$equal_327$adc_ctrl_reg_top.sv:3671$8276 ($eq).
Removed top 2 bits (of 5) from port B of cell adc_ctrl.$flatten\u_reg.$verific$equal_329$adc_ctrl_reg_top.sv:3672$8277 ($eq).
Removed top 2 bits (of 5) from port B of cell adc_ctrl.$flatten\u_reg.$verific$equal_331$adc_ctrl_reg_top.sv:3673$8278 ($eq).
Removed top 1 bits (of 5) from port B of cell adc_ctrl.$flatten\u_reg.$verific$equal_333$adc_ctrl_reg_top.sv:3674$8279 ($eq).
Removed top 1 bits (of 5) from port B of cell adc_ctrl.$flatten\u_reg.$verific$equal_335$adc_ctrl_reg_top.sv:3675$8280 ($eq).
Removed top 1 bits (of 5) from port B of cell adc_ctrl.$flatten\u_reg.$verific$equal_337$adc_ctrl_reg_top.sv:3676$8281 ($eq).
Removed top 1 bits (of 5) from port B of cell adc_ctrl.$flatten\u_reg.$verific$equal_339$adc_ctrl_reg_top.sv:3677$8282 ($eq).
Removed top 1 bits (of 5) from port B of cell adc_ctrl.$flatten\u_reg.$verific$equal_341$adc_ctrl_reg_top.sv:3678$8283 ($eq).
Removed top 1 bits (of 5) from port B of cell adc_ctrl.$flatten\u_reg.$verific$equal_343$adc_ctrl_reg_top.sv:3679$8284 ($eq).
Removed top 1 bits (of 5) from port B of cell adc_ctrl.$flatten\u_reg.$verific$equal_345$adc_ctrl_reg_top.sv:3680$8285 ($eq).
Removed top 1 bits (of 5) from port B of cell adc_ctrl.$flatten\u_reg.$verific$equal_347$adc_ctrl_reg_top.sv:3681$8286 ($eq).
Removed top 1 bits (of 7) from port B of cell adc_ctrl.$auto$opt_dff.cc:195:make_patterns_logic$11691 ($ne).
Removed top 1 bits (of 6) from port B of cell adc_ctrl.$auto$opt_dff.cc:195:make_patterns_logic$11689 ($ne).
Removed top 31 bits (of 32) from port A of cell adc_ctrl.$flatten\u_reg.\u_reg_if.\u_err.$verific$shift_left_18$tlul_err.sv:44$10529 ($shl).
Removed top 28 bits (of 32) from port Y of cell adc_ctrl.$flatten\u_reg.\u_reg_if.\u_err.$verific$shift_left_18$tlul_err.sv:44$10529 ($shl).
Removed top 4 bits (of 7) from port B of cell adc_ctrl.$auto$opt_dff.cc:195:make_patterns_logic$11693 ($ne).
Removed top 13 bits (of 24) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$not_equal_215$adc_ctrl_fsm.sv:338$1967 ($ne).
Removed top 1 bits (of 4) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$not_equal_180$adc_ctrl_fsm.sv:241$1949 ($ne).
Removed top 2 bits (of 5) from mux cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$mux_217$adc_ctrl_fsm.sv:344$1969 ($mux).
Removed top 1 bits (of 6) from port B of cell adc_ctrl.$auto$opt_dff.cc:195:make_patterns_logic$11687 ($ne).
Removed top 1 bits (of 5) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$equal_80$adc_ctrl_fsm.sv:149$1901 ($eq).
Removed top 1 bits (of 5) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$equal_78$adc_ctrl_fsm.sv:149$1899 ($eq).
Removed top 2 bits (of 5) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$equal_77$adc_ctrl_fsm.sv:149$1898 ($eq).
Removed top 1 bits (of 5) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$equal_70$adc_ctrl_fsm.sv:145$1891 ($eq).
Removed top 2 bits (of 5) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$equal_68$adc_ctrl_fsm.sv:145$1889 ($eq).
Removed top 3 bits (of 5) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$equal_67$adc_ctrl_fsm.sv:145$1888 ($eq).
Removed top 8 bits (of 16) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$equal_238$adc_ctrl_fsm.sv:395$1976 ($eq).
Removed top 13 bits (of 24) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$equal_216$adc_ctrl_fsm.sv:341$1968 ($eq).
Removed top 5 bits (of 8) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$equal_204$adc_ctrl_fsm.sv:329$1959 ($eq).
Removed top 1 bits (of 4) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$equal_181$adc_ctrl_fsm.sv:244$1950 ($eq).
Removed top 1 bits (of 5) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$equal_111$adc_ctrl_fsm.sv:175$1922 ($eq).
Removed top 7 bits (of 8) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$equal_110$adc_ctrl_fsm.sv:175$1921 ($eq).
Removed top 23 bits (of 24) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$add_55$adc_ctrl_fsm.sv:132$1880 ($add).
Removed top 15 bits (of 16) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$add_43$adc_ctrl_fsm.sv:118$1872 ($add).
Removed top 7 bits (of 8) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$add_31$adc_ctrl_fsm.sv:105$1864 ($add).
Removed top 3 bits (of 4) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$add_19$adc_ctrl_fsm.sv:92$1856 ($add).
Removed top 8 bits (of 16) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$LessThan_235$adc_ctrl_fsm.sv:388$1973 ($lt).
Removed top 5 bits (of 8) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$LessThan_201$adc_ctrl_fsm.sv:322$1956 ($lt).
Removed top 1 bits (of 2) from mux cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$auto$bmuxmap.cc:60:execute$11093 ($mux).
Removed top 8 bits (of 9) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_intr.$verific$and_94$adc_ctrl_intr.sv:77$2092 ($and).
Removed top 9 bits (of 10) from port A of cell adc_ctrl.$flatten\u_adc_ctrl_core.$verific$LessThan_112$adc_ctrl_core.sv:101$1468 ($le).
Removed top 9 bits (of 10) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.$verific$LessThan_113$adc_ctrl_core.sv:101$1469 ($le).
Removed top 9 bits (of 10) from port A of cell adc_ctrl.$flatten\u_adc_ctrl_core.$verific$LessThan_121$adc_ctrl_core.sv:104$1475 ($le).
Removed top 9 bits (of 10) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.$verific$LessThan_122$adc_ctrl_core.sv:104$1476 ($le).
Removed top 15 bits (of 16) from port B of cell adc_ctrl.$flatten\u_adc_ctrl_core.$verific$and_244$adc_ctrl_core.sv:107$1541 ($and).
Removed top 2 bits (of 6) from port B of cell adc_ctrl.$auto$opt_dff.cc:195:make_patterns_logic$11685 ($ne).
Removed top 1 bits (of 3) from port B of cell adc_ctrl.$auto$opt_dff.cc:195:make_patterns_logic$11707 ($ne).
Removed top 4 bits (of 6) from port B of cell adc_ctrl.$auto$opt_dff.cc:195:make_patterns_logic$11697 ($ne).
Removed top 1 bits (of 6) from port B of cell adc_ctrl.$auto$opt_dff.cc:195:make_patterns_logic$11683 ($ne).
Removed top 1 bits (of 5) from port B of cell adc_ctrl.$auto$opt_dff.cc:195:make_patterns_logic$11721 ($ne).
Removed top 2 bits (of 5) from port B of cell adc_ctrl.$auto$opt_dff.cc:195:make_patterns_logic$11719 ($ne).
Removed top 1 bits (of 6) from port B of cell adc_ctrl.$auto$opt_dff.cc:195:make_patterns_logic$11695 ($ne).
Removed top 2 bits (of 3) from port B of cell adc_ctrl.$auto$opt_dff.cc:195:make_patterns_logic$11714 ($ne).
Removed top 1 bits (of 3) from mux cell adc_ctrl.$flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$mux_22$prim_alert_sender.sv:142$8744 ($mux).
Removed top 2 bits (of 4) from wire adc_ctrl.$flatten\gen_alert_tx[0].u_prim_alert_sender.$auto$bmuxmap.cc:58:execute$10933.
Removed top 1 bits (of 2) from wire adc_ctrl.$flatten\gen_alert_tx[0].u_prim_alert_sender.$auto$bmuxmap.cc:58:execute$10938.
Removed top 1 bits (of 4) from wire adc_ctrl.$flatten\gen_alert_tx[0].u_prim_alert_sender.$auto$bmuxmap.cc:58:execute$10953.
Removed top 1 bits (of 4) from wire adc_ctrl.$flatten\gen_alert_tx[0].u_prim_alert_sender.$auto$bmuxmap.cc:58:execute$10963.
Removed top 1 bits (of 3) from wire adc_ctrl.$flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$n38$8708.
Removed top 1 bits (of 2) from wire adc_ctrl.$flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.$auto$bmuxmap.cc:58:execute$10908.
Removed top 1 bits (of 2) from wire adc_ctrl.$flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.$auto$bmuxmap.cc:58:execute$10913.
Removed top 9 bits (of 16) from wire adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$auto$bmuxmap.cc:58:execute$10983.
Removed top 7 bits (of 8) from wire adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$auto$bmuxmap.cc:58:execute$11000.
Removed top 2 bits (of 4) from wire adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$auto$bmuxmap.cc:58:execute$11009.
Removed top 1 bits (of 2) from wire adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$auto$bmuxmap.cc:58:execute$11014.
Removed top 9 bits (of 16) from wire adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$auto$bmuxmap.cc:58:execute$11019.
Removed top 4 bits (of 8) from wire adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$auto$bmuxmap.cc:58:execute$11036.
Removed top 2 bits (of 4) from wire adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$auto$bmuxmap.cc:58:execute$11045.
Removed top 8 bits (of 16) from wire adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$auto$bmuxmap.cc:58:execute$11055.
Removed top 4 bits (of 8) from wire adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$auto$bmuxmap.cc:58:execute$11072.
Removed top 2 bits (of 4) from wire adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$auto$bmuxmap.cc:58:execute$11081.
Removed top 1 bits (of 2) from wire adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$auto$bmuxmap.cc:58:execute$11086.
Removed top 16 bits (of 32) from wire adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$auto$bmuxmap.cc:58:execute$11091.
Removed top 9 bits (of 16) from wire adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$auto$bmuxmap.cc:58:execute$11108.
Removed top 7 bits (of 8) from wire adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$auto$bmuxmap.cc:58:execute$11117.
Removed top 2 bits (of 4) from wire adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$auto$bmuxmap.cc:58:execute$11122.
Removed top 3 bits (of 8) from wire adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$auto$bmuxmap.cc:58:execute$11144.
Removed top 1 bits (of 4) from wire adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$auto$bmuxmap.cc:58:execute$11153.
Removed top 7 bits (of 16) from wire adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$auto$bmuxmap.cc:58:execute$11199.
Removed top 3 bits (of 8) from wire adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$auto$bmuxmap.cc:58:execute$11216.
Removed top 2 bits (of 4) from wire adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$auto$bmuxmap.cc:58:execute$11225.
Removed top 1 bits (of 2) from wire adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$auto$bmuxmap.cc:58:execute$11230.
Removed top 35 bits (of 80) from wire adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$auto$bmuxmap.cc:58:execute$11271.
Removed top 18 bits (of 40) from wire adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$auto$bmuxmap.cc:58:execute$11288.
Removed top 6 bits (of 20) from wire adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$auto$bmuxmap.cc:58:execute$11297.
Removed top 8 bits (of 10) from wire adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$auto$bmuxmap.cc:58:execute$11302.
Removed top 10 bits (of 16) from wire adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$auto$bmuxmap.cc:58:execute$11307.
Removed top 5 bits (of 8) from wire adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$auto$bmuxmap.cc:58:execute$11324.
Removed top 2 bits (of 4) from wire adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$auto$bmuxmap.cc:58:execute$11333.
Removed top 1 bits (of 2) from wire adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$auto$bmuxmap.cc:58:execute$11338.
Removed top 10 bits (of 16) from wire adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$auto$bmuxmap.cc:58:execute$11343.
Removed top 5 bits (of 8) from wire adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$auto$bmuxmap.cc:58:execute$11360.
Removed top 2 bits (of 4) from wire adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$auto$bmuxmap.cc:58:execute$11369.
Removed top 1 bits (of 2) from wire adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$auto$bmuxmap.cc:58:execute$11374.
Removed top 10 bits (of 16) from wire adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$auto$bmuxmap.cc:58:execute$11379.
Removed top 5 bits (of 8) from wire adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$auto$bmuxmap.cc:58:execute$11396.
Removed top 2 bits (of 4) from wire adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$auto$bmuxmap.cc:58:execute$11405.
Removed top 1 bits (of 2) from wire adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$auto$bmuxmap.cc:58:execute$11410.
Removed top 5 bits (of 8) from wire adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$auto$bmuxmap.cc:58:execute$11432.
Removed top 2 bits (of 4) from wire adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$auto$bmuxmap.cc:58:execute$11441.
Removed top 1 bits (of 2) from wire adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$auto$bmuxmap.cc:58:execute$11446.
Removed top 3 bits (of 4) from wire adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$auto$bmuxmap.cc:58:execute$11477.
Removed top 1 bits (of 2) from wire adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$auto$bmuxmap.cc:58:execute$11482.
Removed top 2 bits (of 5) from wire adc_ctrl.$flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$n936$1831.
Removed top 3 bits (of 4) from wire adc_ctrl.$flatten\u_reg.$verific$n3685$2597.
Removed top 2 bits (of 4) from wire adc_ctrl.$flatten\u_reg.$verific$n3728$2599.

yosys> peepopt

3.19. Executing PEEPOPT pass (run peephole optimizers).

yosys> opt_clean

3.20. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 0 unused cells and 53 unused wires.
<suppressed ~1 debug messages>

yosys> bmuxmap

3.21. Executing BMUXMAP pass.

yosys> demuxmap

3.22. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> alumacc

3.23. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module adc_ctrl:
  creating $macc model for $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$add_19$adc_ctrl_fsm.sv:92$1856 ($add).
  creating $macc model for $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$add_31$adc_ctrl_fsm.sv:105$1864 ($add).
  creating $macc model for $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$add_43$adc_ctrl_fsm.sv:118$1872 ($add).
  creating $macc model for $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$add_55$adc_ctrl_fsm.sv:132$1880 ($add).
  creating $alu model for $macc $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$add_55$adc_ctrl_fsm.sv:132$1880.
  creating $alu model for $macc $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$add_43$adc_ctrl_fsm.sv:118$1872.
  creating $alu model for $macc $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$add_31$adc_ctrl_fsm.sv:105$1864.
  creating $alu model for $macc $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$add_19$adc_ctrl_fsm.sv:92$1856.
  creating $alu model for $flatten\u_adc_ctrl_core.$verific$LessThan_112$adc_ctrl_core.sv:101$1468 ($le): new $alu
  creating $alu model for $flatten\u_adc_ctrl_core.$verific$LessThan_113$adc_ctrl_core.sv:101$1469 ($le): merged with $flatten\u_adc_ctrl_core.$verific$LessThan_112$adc_ctrl_core.sv:101$1468.
  creating $alu model for $flatten\u_adc_ctrl_core.$verific$LessThan_121$adc_ctrl_core.sv:104$1475 ($le): new $alu
  creating $alu model for $flatten\u_adc_ctrl_core.$verific$LessThan_122$adc_ctrl_core.sv:104$1476 ($le): merged with $flatten\u_adc_ctrl_core.$verific$LessThan_121$adc_ctrl_core.sv:104$1475.
  creating $alu model for $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$LessThan_201$adc_ctrl_fsm.sv:322$1956 ($lt): new $alu
  creating $alu model for $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$LessThan_235$adc_ctrl_fsm.sv:388$1973 ($lt): new $alu
  creating $alu model for $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$equal_204$adc_ctrl_fsm.sv:329$1959 ($eq): merged with $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$LessThan_201$adc_ctrl_fsm.sv:322$1956.
  creating $alu model for $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$equal_238$adc_ctrl_fsm.sv:395$1976 ($eq): merged with $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$LessThan_235$adc_ctrl_fsm.sv:388$1973.
  creating $alu cell for $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$LessThan_235$adc_ctrl_fsm.sv:388$1973, $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$equal_238$adc_ctrl_fsm.sv:395$1976: $auto$alumacc.cc:485:replace_alu$11800
  creating $alu cell for $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$LessThan_201$adc_ctrl_fsm.sv:322$1956, $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$equal_204$adc_ctrl_fsm.sv:329$1959: $auto$alumacc.cc:485:replace_alu$11811
  creating $alu cell for $flatten\u_adc_ctrl_core.$verific$LessThan_121$adc_ctrl_core.sv:104$1475, $flatten\u_adc_ctrl_core.$verific$LessThan_122$adc_ctrl_core.sv:104$1476: $auto$alumacc.cc:485:replace_alu$11822
  creating $alu cell for $flatten\u_adc_ctrl_core.$verific$LessThan_112$adc_ctrl_core.sv:101$1468, $flatten\u_adc_ctrl_core.$verific$LessThan_113$adc_ctrl_core.sv:101$1469: $auto$alumacc.cc:485:replace_alu$11837
  creating $alu cell for $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$add_19$adc_ctrl_fsm.sv:92$1856: $auto$alumacc.cc:485:replace_alu$11852
  creating $alu cell for $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$add_31$adc_ctrl_fsm.sv:105$1864: $auto$alumacc.cc:485:replace_alu$11855
  creating $alu cell for $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$add_43$adc_ctrl_fsm.sv:118$1872: $auto$alumacc.cc:485:replace_alu$11858
  creating $alu cell for $flatten\u_adc_ctrl_core.\u_adc_ctrl_fsm.$verific$add_55$adc_ctrl_fsm.sv:132$1880: $auto$alumacc.cc:485:replace_alu$11861
  created 8 $alu and 0 $macc cells.

yosys> opt_expr

3.24. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.

yosys> opt_merge -nomux

3.25. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.26. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~242 debug messages>

yosys> opt_reduce

3.27. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.28. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_share

3.29. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe -nosdff

3.30. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.31. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 0 unused cells and 8 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.32. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.

yosys> opt_muxtree

3.33. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~241 debug messages>

yosys> opt_reduce

3.34. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.35. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_share

3.36. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe -nosdff

3.37. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.38. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..

yosys> opt_expr

3.39. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
MAX OPT ITERATION = 2

yosys> stat

3.40. Printing statistics.

=== adc_ctrl ===

   Number of wires:               4889
   Number of wire bits:          17835
   Number of public wires:        3981
   Number of public wire bits:   14836
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1563
     $adff                         215
     $adffe                         69
     $alu                            8
     $and                          274
     $eq                            42
     $logic_not                      2
     $mux                          554
     $ne                            26
     $not                          118
     $or                           136
     $pmux                           1
     $reduce_and                    11
     $reduce_bool                   51
     $reduce_or                     19
     $reduce_xor                    28
     $shl                            1
     $xor                            8


yosys> memory -nomap

3.41. Executing MEMORY pass.

yosys> opt_mem

3.41.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.41.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.41.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.41.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.41.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.41.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..

yosys> memory_share

3.41.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.41.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.41.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..

yosys> memory_collect

3.41.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.42. Printing statistics.

=== adc_ctrl ===

   Number of wires:               4889
   Number of wire bits:          17835
   Number of public wires:        3981
   Number of public wire bits:   14836
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1563
     $adff                         215
     $adffe                         69
     $alu                            8
     $and                          274
     $eq                            42
     $logic_not                      2
     $mux                          554
     $ne                            26
     $not                          118
     $or                           136
     $pmux                           1
     $reduce_and                    11
     $reduce_bool                   51
     $reduce_or                     19
     $reduce_xor                    28
     $shl                            1
     $xor                            8


yosys> muxpack

3.43. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~400 debug messages>

yosys> opt_clean

3.44. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..

yosys> pmuxtree

3.45. Executing PMUXTREE pass.

yosys> muxpack

3.46. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~427 debug messages>

yosys> memory_map

3.47. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> stat

3.48. Printing statistics.

=== adc_ctrl ===

   Number of wires:               4931
   Number of wire bits:          18745
   Number of public wires:        3981
   Number of public wire bits:   14836
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1604
     $adff                         215
     $adffe                         69
     $alu                            8
     $and                          274
     $eq                            42
     $logic_not                      2
     $mux                          582
     $ne                            26
     $not                          119
     $or                           141
     $reduce_and                    11
     $reduce_bool                   51
     $reduce_or                     27
     $reduce_xor                    28
     $shl                            1
     $xor                            8


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.49. Executing TECHMAP pass (map to technology primitives).

3.49.1. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.49.2. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.49.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $reduce_xor.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $reduce_and.
Using template $paramod$constmap:66d421c313e4e958be776b99540ac2de3b59fdbc$paramod$77562a466236eb4a6d905351a0995599b75075cb\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$fa8d9e4c2749d63ae521a69564d54ead1ad1232d\_90_alu for cells of type $alu.
Using template $paramod$754650b284649a026620fc6856e5b6886cbfe794\_90_alu for cells of type $alu.
Using template $paramod$79aa992f2eb7f354d4aaf651790713cf239111fa\_90_alu for cells of type $alu.
Using template $paramod$2af30114e9bd4ccb04dad757b3f0a8f6bf0615b0\_90_alu for cells of type $alu.
Using template $paramod$c3cd1564c35d873179656addd6052d7ea8b6d991\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$32a7b7b86c07519b7537abc18e96f0331f97914d\_90_alu for cells of type $alu.
Using template $paramod$1f812f0514ea3255703342654e053e2c502325cc\_90_alu for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001000 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000011000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000100 for cells of type $lcu.
No more expansions possible.
<suppressed ~3558 debug messages>

yosys> stat

3.50. Printing statistics.

=== adc_ctrl ===

   Number of wires:               5983
   Number of wire bits:          33127
   Number of public wires:        3981
   Number of public wire bits:   14836
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               6794
     $_AND_                        684
     $_DFFE_PN0P_                  608
     $_DFFE_PN1P_                   11
     $_DFF_PN0_                    208
     $_DFF_PN1_                      7
     $_MUX_                       3042
     $_NOT_                        267
     $_OR_                         805
     $_XOR_                       1162


yosys> opt_expr

3.51. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
<suppressed ~1683 debug messages>

yosys> opt_merge -nomux

3.52. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
<suppressed ~3789 debug messages>
Removed a total of 1263 cells.

yosys> opt_muxtree

3.53. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.54. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.55. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_share

3.56. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe -nosdff

3.57. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.58. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 412 unused cells and 1193 unused wires.
<suppressed ~421 debug messages>

yosys> opt_expr

3.59. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
<suppressed ~8 debug messages>

yosys> opt_muxtree

3.60. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.61. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.62. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_share

3.63. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe -nosdff

3.64. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.65. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 3 unused cells and 5 unused wires.
<suppressed ~4 debug messages>

yosys> opt_expr

3.66. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.

yosys> opt_muxtree

3.67. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.68. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.69. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_share

3.70. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe -nosdff

3.71. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.72. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..

yosys> opt_expr

3.73. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
MAX OPT ITERATION = 3

yosys> opt -nodffe -fast -full -nosdff

3.74. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.74.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
<suppressed ~362 debug messages>

yosys> opt_merge

3.74.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
<suppressed ~30 debug messages>
Removed a total of 10 cells.

yosys> opt_dff -nodffe -nosdff

3.74.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.74.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 0 unused cells and 84 unused wires.
<suppressed ~1 debug messages>

3.74.5. Finished fast OPT passes.

yosys> techmap -map +/techmap.v

3.75. Executing TECHMAP pass (map to technology primitives).

3.75.1. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.75.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> opt -nodffe -sat -nosdff

3.76. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.76.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
<suppressed ~2 debug messages>

yosys> opt_merge -nomux

3.76.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.76.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.76.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.76.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -sat -nosdff

3.76.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.76.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..

yosys> opt_expr

3.76.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.

3.76.9. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

3.77. Executing ABC pass (technology mapping using ABC).

3.77.1. Summary of detected clock domains:
  20 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$11715, arst=!\rst_ni, srst={ }
  62 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$11722, arst=!\rst_ni, srst={ }
  19 cells in clk=\clk_aon_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11655, arst=!\rst_aon_ni, srst={ }
  27 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$11708, arst=!\rst_ni, srst={ }
  71 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11645, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_aon_i, en=\u_adc_ctrl_core.u_adc_ctrl_fsm.chn0_val_we_d, arst=!\rst_aon_ni, srst={ }
  10 cells in clk=\clk_aon_i, en=\u_adc_ctrl_core.u_adc_ctrl_fsm.chn1_val_we_d, arst=!\rst_aon_ni, srst={ }
  166 cells in clk=\clk_aon_i, en=$auto$opt_dff.cc:219:make_patterns_logic$11698, arst=!\rst_aon_ni, srst={ }
  125 cells in clk=\clk_aon_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11652, arst=!\rst_aon_ni, srst={ }
  12 cells in clk=\clk_i, en=\u_adc_ctrl_core.u_adc_ctrl_intr.i_adc_ctrl_intr_o.new_event, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11492, arst=!\rst_ni, srst={ }
  29 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11497, arst=!\rst_ni, srst={ }
  710 cells in clk=\clk_i, en=\u_reg.u_reg_if.a_ack, arst=!\rst_ni, srst={ }
  22 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11500, arst=!\rst_ni, srst={ }
  29 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11504, arst=!\rst_ni, srst={ }
  60 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11510, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11507, arst=!\rst_ni, srst={ }
  8 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11513, arst=!\rst_ni, srst={ }
  21 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11522, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11519, arst=!\rst_ni, srst={ }
  12 cells in clk=\clk_i, en=\u_reg.u_adc_intr_status_oneshot.wr_en, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11525, arst=!\rst_ni, srst={ }
  15 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11537, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11543, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11540, arst=!\rst_ni, srst={ }
  102 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11516, arst=!\rst_ni, srst={ }
  13 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11546, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_aon_i, en=\u_adc_ctrl_core.u_adc_ctrl_fsm.chn1_val_we_o, arst=!\rst_aon_ni, srst={ }
  10 cells in clk=\clk_aon_i, en=\u_adc_ctrl_core.u_adc_ctrl_fsm.chn0_val_we_o, arst=!\rst_aon_ni, srst={ }
  40 cells in clk=\clk_i, en=\u_reg.u_adc_chn0_filter_ctl_0_cdc.src_update_i, arst=!\rst_ni, srst={ }
  67 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11555, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11558, arst=!\rst_ni, srst={ }
  76 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11561, arst=!\rst_ni, srst={ }
  8 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11564, arst=!\rst_ni, srst={ }
  77 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11567, arst=!\rst_ni, srst={ }
  8 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11570, arst=!\rst_ni, srst={ }
  49 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11573, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11576, arst=!\rst_ni, srst={ }
  77 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11579, arst=!\rst_ni, srst={ }
  8 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11582, arst=!\rst_ni, srst={ }
  49 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11585, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11588, arst=!\rst_ni, srst={ }
  78 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11591, arst=!\rst_ni, srst={ }
  8 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11594, arst=!\rst_ni, srst={ }
  49 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11597, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11600, arst=!\rst_ni, srst={ }
  77 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11603, arst=!\rst_ni, srst={ }
  8 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11606, arst=!\rst_ni, srst={ }
  81 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11609, arst=!\rst_ni, srst={ }
  8 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11612, arst=!\rst_ni, srst={ }
  49 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11615, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11618, arst=!\rst_ni, srst={ }
  81 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11621, arst=!\rst_ni, srst={ }
  8 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11624, arst=!\rst_ni, srst={ }
  49 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11627, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11630, arst=!\rst_ni, srst={ }
  77 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11633, arst=!\rst_ni, srst={ }
  8 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11636, arst=!\rst_ni, srst={ }
  49 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11639, arst=!\rst_ni, srst={ }
  13 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11642, arst=!\rst_ni, srst={ }
  206 cells in clk=\clk_aon_i, en={ }, arst=!\rst_aon_ni, srst={ }
  259 cells in clk=\clk_i, en={ }, arst=!\rst_ni, srst={ }
  257 cells in clk=\clk_i, en=\u_reg.intg_err, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11648, arst=!\rst_ni, srst={ }

3.77.2. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$11715, asynchronously reset by !\rst_ni
Extracted 20 gates and 26 wires to a netlist network with 5 inputs and 3 outputs.

3.77.2.1. Executing ABC.

3.77.3. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$11722, asynchronously reset by !\rst_ni
Extracted 62 gates and 70 wires to a netlist network with 6 inputs and 6 outputs.

3.77.3.1. Executing ABC.

3.77.4. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11655, asynchronously reset by !\rst_aon_ni
Extracted 19 gates and 22 wires to a netlist network with 2 inputs and 3 outputs.

3.77.4.1. Executing ABC.

3.77.5. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$11708, asynchronously reset by !\rst_ni
Extracted 27 gates and 35 wires to a netlist network with 7 inputs and 4 outputs.

3.77.5.1. Executing ABC.

3.77.6. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11645, asynchronously reset by !\rst_ni
Extracted 71 gates and 99 wires to a netlist network with 27 inputs and 23 outputs.

3.77.6.1. Executing ABC.

3.77.7. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by \u_adc_ctrl_core.u_adc_ctrl_fsm.chn0_val_we_d, asynchronously reset by !\rst_aon_ni
Extracted 10 gates and 20 wires to a netlist network with 10 inputs and 10 outputs.

3.77.7.1. Executing ABC.

3.77.8. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by \u_adc_ctrl_core.u_adc_ctrl_fsm.chn1_val_we_d, asynchronously reset by !\rst_aon_ni
Extracted 10 gates and 20 wires to a netlist network with 10 inputs and 10 outputs.

3.77.8.1. Executing ABC.

3.77.9. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$11698, asynchronously reset by !\rst_aon_ni
Extracted 166 gates and 183 wires to a netlist network with 15 inputs and 15 outputs.

3.77.9.1. Executing ABC.

3.77.10. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11652, asynchronously reset by !\rst_aon_ni
Extracted 125 gates and 126 wires to a netlist network with 0 inputs and 1 outputs.

3.77.10.1. Executing ABC.

3.77.11. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u_adc_ctrl_core.u_adc_ctrl_intr.i_adc_ctrl_intr_o.new_event, asynchronously reset by !\rst_ni
Extracted 12 gates and 22 wires to a netlist network with 9 inputs and 6 outputs.

3.77.11.1. Executing ABC.

3.77.12. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11492, asynchronously reset by !\rst_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 3 outputs.

3.77.12.1. Executing ABC.

3.77.13. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11497, asynchronously reset by !\rst_ni
Extracted 29 gates and 43 wires to a netlist network with 13 inputs and 9 outputs.

3.77.13.1. Executing ABC.

3.77.14. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u_reg.u_reg_if.a_ack, asynchronously reset by !\rst_ni
Extracted 710 gates and 1043 wires to a netlist network with 331 inputs and 59 outputs.

3.77.14.1. Executing ABC.

3.77.15. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11500, asynchronously reset by !\rst_ni
Extracted 22 gates and 33 wires to a netlist network with 11 inputs and 13 outputs.

3.77.15.1. Executing ABC.

3.77.16. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11504, asynchronously reset by !\rst_ni
Extracted 29 gates and 49 wires to a netlist network with 19 inputs and 9 outputs.

3.77.16.1. Executing ABC.

3.77.17. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11510, asynchronously reset by !\rst_ni
Extracted 60 gates and 96 wires to a netlist network with 34 inputs and 22 outputs.

3.77.17.1. Executing ABC.

3.77.18. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11507, asynchronously reset by !\rst_ni
Extracted 11 gates and 17 wires to a netlist network with 6 inputs and 7 outputs.

3.77.18.1. Executing ABC.

3.77.19. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11513, asynchronously reset by !\rst_ni
Extracted 8 gates and 12 wires to a netlist network with 4 inputs and 5 outputs.

3.77.19.1. Executing ABC.

3.77.20. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11522, asynchronously reset by !\rst_ni
Extracted 21 gates and 35 wires to a netlist network with 12 inputs and 9 outputs.

3.77.20.1. Executing ABC.

3.77.21. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11519, asynchronously reset by !\rst_ni
Extracted 11 gates and 17 wires to a netlist network with 6 inputs and 7 outputs.

3.77.21.1. Executing ABC.

3.77.22. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u_reg.u_adc_intr_status_oneshot.wr_en, asynchronously reset by !\rst_ni
Extracted 12 gates and 20 wires to a netlist network with 7 inputs and 7 outputs.

3.77.22.1. Executing ABC.

3.77.23. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11525, asynchronously reset by !\rst_ni
Extracted 11 gates and 17 wires to a netlist network with 6 inputs and 7 outputs.

3.77.23.1. Executing ABC.

3.77.24. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11537, asynchronously reset by !\rst_ni
Extracted 15 gates and 27 wires to a netlist network with 11 inputs and 7 outputs.

3.77.24.1. Executing ABC.

3.77.25. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11543, asynchronously reset by !\rst_ni
Extracted 11 gates and 20 wires to a netlist network with 8 inputs and 3 outputs.

3.77.25.1. Executing ABC.

3.77.26. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11540, asynchronously reset by !\rst_ni
Extracted 11 gates and 17 wires to a netlist network with 6 inputs and 7 outputs.

3.77.26.1. Executing ABC.

3.77.27. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11516, asynchronously reset by !\rst_ni
Extracted 102 gates and 144 wires to a netlist network with 40 inputs and 37 outputs.

3.77.27.1. Executing ABC.

3.77.28. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11546, asynchronously reset by !\rst_ni
Extracted 13 gates and 20 wires to a netlist network with 7 inputs and 9 outputs.

3.77.28.1. Executing ABC.

3.77.29. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by \u_adc_ctrl_core.u_adc_ctrl_fsm.chn1_val_we_o, asynchronously reset by !\rst_aon_ni
Extracted 10 gates and 20 wires to a netlist network with 10 inputs and 10 outputs.

3.77.29.1. Executing ABC.

3.77.30. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by \u_adc_ctrl_core.u_adc_ctrl_fsm.chn0_val_we_o, asynchronously reset by !\rst_aon_ni
Extracted 10 gates and 20 wires to a netlist network with 10 inputs and 10 outputs.

3.77.30.1. Executing ABC.

3.77.31. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u_reg.u_adc_chn0_filter_ctl_0_cdc.src_update_i, asynchronously reset by !\rst_ni
Extracted 40 gates and 77 wires to a netlist network with 36 inputs and 24 outputs.

3.77.31.1. Executing ABC.

3.77.32. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11555, asynchronously reset by !\rst_ni
Extracted 67 gates and 99 wires to a netlist network with 31 inputs and 27 outputs.

3.77.32.1. Executing ABC.

3.77.33. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11558, asynchronously reset by !\rst_ni
Extracted 10 gates and 15 wires to a netlist network with 5 inputs and 6 outputs.

3.77.33.1. Executing ABC.

3.77.34. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11561, asynchronously reset by !\rst_ni
Extracted 76 gates and 129 wires to a netlist network with 52 inputs and 26 outputs.

3.77.34.1. Executing ABC.

3.77.35. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11564, asynchronously reset by !\rst_ni
Extracted 8 gates and 12 wires to a netlist network with 4 inputs and 5 outputs.

3.77.35.1. Executing ABC.

3.77.36. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11567, asynchronously reset by !\rst_ni
Extracted 77 gates and 131 wires to a netlist network with 53 inputs and 27 outputs.

3.77.36.1. Executing ABC.

3.77.37. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11570, asynchronously reset by !\rst_ni
Extracted 8 gates and 12 wires to a netlist network with 4 inputs and 5 outputs.

3.77.37.1. Executing ABC.

3.77.38. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11573, asynchronously reset by !\rst_ni
Extracted 49 gates and 76 wires to a netlist network with 26 inputs and 23 outputs.

3.77.38.1. Executing ABC.

3.77.39. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11576, asynchronously reset by !\rst_ni
Extracted 10 gates and 15 wires to a netlist network with 5 inputs and 6 outputs.

3.77.39.1. Executing ABC.

3.77.40. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11579, asynchronously reset by !\rst_ni
Extracted 77 gates and 131 wires to a netlist network with 53 inputs and 27 outputs.

3.77.40.1. Executing ABC.

3.77.41. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11582, asynchronously reset by !\rst_ni
Extracted 8 gates and 12 wires to a netlist network with 4 inputs and 5 outputs.

3.77.41.1. Executing ABC.

3.77.42. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11585, asynchronously reset by !\rst_ni
Extracted 49 gates and 76 wires to a netlist network with 26 inputs and 23 outputs.

3.77.42.1. Executing ABC.

3.77.43. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11588, asynchronously reset by !\rst_ni
Extracted 11 gates and 17 wires to a netlist network with 6 inputs and 7 outputs.

3.77.43.1. Executing ABC.

3.77.44. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11591, asynchronously reset by !\rst_ni
Extracted 78 gates and 133 wires to a netlist network with 54 inputs and 28 outputs.

3.77.44.1. Executing ABC.

3.77.45. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11594, asynchronously reset by !\rst_ni
Extracted 8 gates and 12 wires to a netlist network with 4 inputs and 5 outputs.

3.77.45.1. Executing ABC.

3.77.46. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11597, asynchronously reset by !\rst_ni
Extracted 49 gates and 76 wires to a netlist network with 26 inputs and 23 outputs.

3.77.46.1. Executing ABC.

3.77.47. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11600, asynchronously reset by !\rst_ni
Extracted 11 gates and 17 wires to a netlist network with 6 inputs and 7 outputs.

3.77.47.1. Executing ABC.

3.77.48. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11603, asynchronously reset by !\rst_ni
Extracted 77 gates and 131 wires to a netlist network with 53 inputs and 26 outputs.

3.77.48.1. Executing ABC.

3.77.49. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11606, asynchronously reset by !\rst_ni
Extracted 8 gates and 12 wires to a netlist network with 4 inputs and 5 outputs.

3.77.49.1. Executing ABC.

3.77.50. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11609, asynchronously reset by !\rst_ni
Extracted 81 gates and 137 wires to a netlist network with 55 inputs and 30 outputs.

3.77.50.1. Executing ABC.

3.77.51. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11612, asynchronously reset by !\rst_ni
Extracted 8 gates and 12 wires to a netlist network with 4 inputs and 5 outputs.

3.77.51.1. Executing ABC.

3.77.52. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11615, asynchronously reset by !\rst_ni
Extracted 49 gates and 76 wires to a netlist network with 26 inputs and 23 outputs.

3.77.52.1. Executing ABC.

3.77.53. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11618, asynchronously reset by !\rst_ni
Extracted 10 gates and 15 wires to a netlist network with 5 inputs and 6 outputs.

3.77.53.1. Executing ABC.

3.77.54. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11621, asynchronously reset by !\rst_ni
Extracted 81 gates and 138 wires to a netlist network with 56 inputs and 31 outputs.

3.77.54.1. Executing ABC.

3.77.55. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11624, asynchronously reset by !\rst_ni
Extracted 8 gates and 12 wires to a netlist network with 4 inputs and 5 outputs.

3.77.55.1. Executing ABC.

3.77.56. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11627, asynchronously reset by !\rst_ni
Extracted 49 gates and 76 wires to a netlist network with 26 inputs and 23 outputs.

3.77.56.1. Executing ABC.

3.77.57. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11630, asynchronously reset by !\rst_ni
Extracted 10 gates and 15 wires to a netlist network with 5 inputs and 6 outputs.

3.77.57.1. Executing ABC.

3.77.58. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11633, asynchronously reset by !\rst_ni
Extracted 77 gates and 131 wires to a netlist network with 53 inputs and 27 outputs.

3.77.58.1. Executing ABC.

3.77.59. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11636, asynchronously reset by !\rst_ni
Extracted 8 gates and 12 wires to a netlist network with 4 inputs and 5 outputs.

3.77.59.1. Executing ABC.

3.77.60. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11639, asynchronously reset by !\rst_ni
Extracted 49 gates and 76 wires to a netlist network with 26 inputs and 23 outputs.

3.77.60.1. Executing ABC.

3.77.61. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11642, asynchronously reset by !\rst_ni
Extracted 13 gates and 21 wires to a netlist network with 8 inputs and 9 outputs.

3.77.61.1. Executing ABC.

3.77.62. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, asynchronously reset by !\rst_aon_ni
Extracted 206 gates and 233 wires to a netlist network with 25 inputs and 29 outputs.

3.77.62.1. Executing ABC.

3.77.63. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, asynchronously reset by !\rst_ni
Extracted 259 gates and 320 wires to a netlist network with 60 inputs and 66 outputs.

3.77.63.1. Executing ABC.

3.77.64. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u_reg.intg_err, asynchronously reset by !\rst_ni
Extracted 257 gates and 348 wires to a netlist network with 90 inputs and 2 outputs.

3.77.64.1. Executing ABC.

3.77.65. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11648, asynchronously reset by !\rst_ni
Extracted 9 gates and 13 wires to a netlist network with 4 inputs and 6 outputs.

3.77.65.1. Executing ABC.

yosys> abc -dff

3.78. Executing ABC pass (technology mapping using ABC).

3.78.1. Summary of detected clock domains:
  12 cells in clk=\clk_i, en=$abc$22310$auto$opt_dff.cc:194:make_patterns_logic$11576, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$22475$auto$opt_dff.cc:194:make_patterns_logic$11588, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$22146$auto$opt_dff.cc:194:make_patterns_logic$11564, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$22896$auto$opt_dff.cc:194:make_patterns_logic$11618, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$21636$auto$opt_dff.cc:194:make_patterns_logic$11513, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$21843$auto$opt_dff.cc:194:make_patterns_logic$11546, arst=!\rst_ni, srst={ }
  2 cells in clk=\clk_i, en=1'0, arst=!\rst_ni, srst={ }
  12 cells in clk=\clk_i, en=$abc$23065$auto$opt_dff.cc:194:make_patterns_logic$11630, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$23150$auto$opt_dff.cc:194:make_patterns_logic$11636, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$23230$auto$opt_dff.cc:194:make_patterns_logic$11642, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$22816$auto$opt_dff.cc:194:make_patterns_logic$11612, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$21674$auto$opt_dff.cc:194:make_patterns_logic$11519, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$22230$auto$opt_dff.cc:194:make_patterns_logic$11570, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$21625$auto$opt_dff.cc:194:make_patterns_logic$11507, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$22985$auto$opt_dff.cc:194:make_patterns_logic$11624, arst=!\rst_ni, srst={ }
  225 cells in clk=\clk_i, en=$abc$23812$u_reg.intg_err, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$21696$auto$opt_dff.cc:194:make_patterns_logic$11525, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$22562$auto$opt_dff.cc:194:make_patterns_logic$11594, arst=!\rst_ni, srst={ }
  39 cells in clk=\clk_i, en=$abc$20424$auto$opt_dff.cc:219:make_patterns_logic$11722, arst=!\rst_ni, srst={ }
  13 cells in clk=\clk_i, en=$abc$20660$u_adc_ctrl_core.u_adc_ctrl_intr.i_adc_ctrl_intr_o.new_event, arst=!\rst_ni, srst={ }
  16 cells in clk=\clk_i, en=$abc$20486$auto$opt_dff.cc:219:make_patterns_logic$11708, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$20409$auto$opt_dff.cc:219:make_patterns_logic$11715, arst=!\rst_ni, srst={ }
  12 cells in clk=\clk_i, en=$abc$21732$auto$opt_dff.cc:194:make_patterns_logic$11540, arst=!\rst_ni, srst={ }
  7 cells in clk=\clk_i, en=$abc$21707$auto$opt_dff.cc:194:make_patterns_logic$11537, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$21514$auto$opt_dff.cc:194:make_patterns_logic$11500, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$20672$auto$opt_dff.cc:194:make_patterns_logic$11492, arst=!\rst_ni, srst={ }
  35 cells in clk=\clk_i, en=$abc$20679$auto$opt_dff.cc:194:make_patterns_logic$11497, arst=!\rst_ni, srst={ }
  27 cells in clk=\clk_i, en=$abc$21533$auto$opt_dff.cc:194:make_patterns_logic$11504, arst=!\rst_ni, srst={ }
  18 cells in clk=\clk_aon_i, en=$abc$20467$auto$opt_dff.cc:194:make_patterns_logic$11655, arst=!\rst_aon_ni, srst={ }
  40 cells in clk=\clk_aon_i, en=1'0, arst=!\rst_aon_ni, srst={ }
  74 cells in clk=\clk_i, en=$abc$20509$auto$opt_dff.cc:194:make_patterns_logic$11645, arst=!\rst_ni, srst={ }
  12 cells in clk=\clk_i, en=$abc$22642$auto$opt_dff.cc:194:make_patterns_logic$11600, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$22728$auto$opt_dff.cc:194:make_patterns_logic$11606, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$22395$auto$opt_dff.cc:194:make_patterns_logic$11582, arst=!\rst_ni, srst={ }
  68 cells in clk=\clk_i, en=$abc$23075$auto$opt_dff.cc:194:make_patterns_logic$11633, arst=!\rst_ni, srst={ }
  57 cells in clk=\clk_i, en=$abc$22906$auto$opt_dff.cc:194:make_patterns_logic$11621, arst=!\rst_ni, srst={ }
  72 cells in clk=\clk_i, en=$abc$22653$auto$opt_dff.cc:194:make_patterns_logic$11603, arst=!\rst_ni, srst={ }
  67 cells in clk=\clk_i, en=$abc$22486$auto$opt_dff.cc:194:make_patterns_logic$11591, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$21721$auto$opt_dff.cc:194:make_patterns_logic$11543, arst=!\rst_ni, srst={ }
  26 cells in clk=\clk_i, en=$abc$21645$auto$opt_dff.cc:194:make_patterns_logic$11522, arst=!\rst_ni, srst={ }
  58 cells in clk=\clk_i, en=$abc$22155$auto$opt_dff.cc:194:make_patterns_logic$11567, arst=!\rst_ni, srst={ }
  57 cells in clk=\clk_i, en=$abc$22320$auto$opt_dff.cc:194:make_patterns_logic$11579, arst=!\rst_ni, srst={ }
  55 cells in clk=\clk_i, en=$abc$22737$auto$opt_dff.cc:194:make_patterns_logic$11609, arst=!\rst_ni, srst={ }
  55 cells in clk=\clk_i, en=$abc$21562$auto$opt_dff.cc:194:make_patterns_logic$11510, arst=!\rst_ni, srst={ }
  63 cells in clk=\clk_i, en=$abc$22239$auto$opt_dff.cc:194:make_patterns_logic$11573, arst=!\rst_ni, srst={ }
  64 cells in clk=\clk_i, en=$abc$22404$auto$opt_dff.cc:194:make_patterns_logic$11585, arst=!\rst_ni, srst={ }
  54 cells in clk=\clk_i, en=$abc$22571$auto$opt_dff.cc:194:make_patterns_logic$11597, arst=!\rst_ni, srst={ }
  66 cells in clk=\clk_i, en=$abc$22825$auto$opt_dff.cc:194:make_patterns_logic$11615, arst=!\rst_ni, srst={ }
  64 cells in clk=\clk_i, en=$abc$22994$auto$opt_dff.cc:194:make_patterns_logic$11627, arst=!\rst_ni, srst={ }
  54 cells in clk=\clk_i, en=$abc$23159$auto$opt_dff.cc:194:make_patterns_logic$11639, arst=!\rst_ni, srst={ }
  99 cells in clk=\clk_i, en=$abc$21743$auto$opt_dff.cc:194:make_patterns_logic$11516, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$22062$auto$opt_dff.cc:194:make_patterns_logic$11558, arst=!\rst_ni, srst={ }
  72 cells in clk=\clk_i, en=$abc$22072$auto$opt_dff.cc:194:make_patterns_logic$11561, arst=!\rst_ni, srst={ }
  75 cells in clk=\clk_i, en=$abc$21985$auto$opt_dff.cc:194:make_patterns_logic$11555, arst=!\rst_ni, srst={ }
  32 cells in clk=\clk_i, en=$abc$23465$u_reg.u_adc_chn0_filter_ctl_0_cdc.src_update_i, arst=!\rst_ni, srst={ }
  120 cells in clk=\clk_aon_i, en={ }, arst=!\rst_aon_ni, srst={ }
  751 cells in clk=\clk_i, en=$abc$20708$u_reg.u_reg_if.a_ack, arst=!\rst_ni, srst={ }
  271 cells in clk=\clk_i, en={ }, arst=!\rst_ni, srst={ }
  15 cells in clk=\clk_i, en=$abc$24039$auto$opt_dff.cc:194:make_patterns_logic$11648, arst=!\rst_ni, srst={ }

3.78.2. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22310$auto$opt_dff.cc:194:make_patterns_logic$11576, asynchronously reset by !\rst_ni
Extracted 12 gates and 18 wires to a netlist network with 6 inputs and 9 outputs.

3.78.2.1. Executing ABC.

3.78.3. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22475$auto$opt_dff.cc:194:make_patterns_logic$11588, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.78.3.1. Executing ABC.

3.78.4. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22146$auto$opt_dff.cc:194:make_patterns_logic$11564, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.78.4.1. Executing ABC.

3.78.5. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22896$auto$opt_dff.cc:194:make_patterns_logic$11618, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.78.5.1. Executing ABC.

3.78.6. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21636$auto$opt_dff.cc:194:make_patterns_logic$11513, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.78.6.1. Executing ABC.

3.78.7. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21843$auto$opt_dff.cc:194:make_patterns_logic$11546, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.78.7.1. Executing ABC.

3.78.8. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by 1'0, asynchronously reset by !\rst_ni
Extracted 2 gates and 4 wires to a netlist network with 1 inputs and 1 outputs.

3.78.8.1. Executing ABC.

3.78.9. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23065$auto$opt_dff.cc:194:make_patterns_logic$11630, asynchronously reset by !\rst_ni
Extracted 12 gates and 19 wires to a netlist network with 7 inputs and 8 outputs.

3.78.9.1. Executing ABC.

3.78.10. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23150$auto$opt_dff.cc:194:make_patterns_logic$11636, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.78.10.1. Executing ABC.

3.78.11. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23230$auto$opt_dff.cc:194:make_patterns_logic$11642, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.78.11.1. Executing ABC.

3.78.12. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22816$auto$opt_dff.cc:194:make_patterns_logic$11612, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 6 outputs.

3.78.12.1. Executing ABC.

3.78.13. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21674$auto$opt_dff.cc:194:make_patterns_logic$11519, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.78.13.1. Executing ABC.

3.78.14. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22230$auto$opt_dff.cc:194:make_patterns_logic$11570, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.78.14.1. Executing ABC.

3.78.15. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21625$auto$opt_dff.cc:194:make_patterns_logic$11507, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 8 outputs.

3.78.15.1. Executing ABC.

3.78.16. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22985$auto$opt_dff.cc:194:make_patterns_logic$11624, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.78.16.1. Executing ABC.

3.78.17. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23812$u_reg.intg_err, asynchronously reset by !\rst_ni
Extracted 225 gates and 316 wires to a netlist network with 90 inputs and 2 outputs.

3.78.17.1. Executing ABC.

3.78.18. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21696$auto$opt_dff.cc:194:make_patterns_logic$11525, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 8 outputs.

3.78.18.1. Executing ABC.

3.78.19. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22562$auto$opt_dff.cc:194:make_patterns_logic$11594, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.78.19.1. Executing ABC.

3.78.20. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$20424$auto$opt_dff.cc:219:make_patterns_logic$11722, asynchronously reset by !\rst_ni
Extracted 39 gates and 47 wires to a netlist network with 8 inputs and 8 outputs.

3.78.20.1. Executing ABC.

3.78.21. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$20660$u_adc_ctrl_core.u_adc_ctrl_intr.i_adc_ctrl_intr_o.new_event, asynchronously reset by !\rst_ni
Extracted 13 gates and 20 wires to a netlist network with 7 inputs and 7 outputs.

3.78.21.1. Executing ABC.

3.78.22. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$20486$auto$opt_dff.cc:219:make_patterns_logic$11708, asynchronously reset by !\rst_ni
Extracted 16 gates and 20 wires to a netlist network with 4 inputs and 7 outputs.

3.78.22.1. Executing ABC.

3.78.23. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$20409$auto$opt_dff.cc:219:make_patterns_logic$11715, asynchronously reset by !\rst_ni
Extracted 11 gates and 14 wires to a netlist network with 3 inputs and 4 outputs.

3.78.23.1. Executing ABC.

3.78.24. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21732$auto$opt_dff.cc:194:make_patterns_logic$11540, asynchronously reset by !\rst_ni
Extracted 12 gates and 19 wires to a netlist network with 7 inputs and 8 outputs.

3.78.24.1. Executing ABC.

3.78.25. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21707$auto$opt_dff.cc:194:make_patterns_logic$11537, asynchronously reset by !\rst_ni
Extracted 7 gates and 13 wires to a netlist network with 6 inputs and 2 outputs.

3.78.25.1. Executing ABC.

3.78.26. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21514$auto$opt_dff.cc:194:make_patterns_logic$11500, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.78.26.1. Executing ABC.

3.78.27. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$20672$auto$opt_dff.cc:194:make_patterns_logic$11492, asynchronously reset by !\rst_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 3 outputs.

3.78.27.1. Executing ABC.

3.78.28. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$20679$auto$opt_dff.cc:194:make_patterns_logic$11497, asynchronously reset by !\rst_ni
Extracted 35 gates and 53 wires to a netlist network with 18 inputs and 14 outputs.

3.78.28.1. Executing ABC.

3.78.29. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21533$auto$opt_dff.cc:194:make_patterns_logic$11504, asynchronously reset by !\rst_ni
Extracted 27 gates and 44 wires to a netlist network with 17 inputs and 10 outputs.

3.78.29.1. Executing ABC.

3.78.30. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by $abc$20467$auto$opt_dff.cc:194:make_patterns_logic$11655, asynchronously reset by !\rst_aon_ni
Extracted 18 gates and 19 wires to a netlist network with 0 inputs and 1 outputs.

3.78.30.1. Executing ABC.

3.78.31. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by 1'0, asynchronously reset by !\rst_aon_ni
Extracted 40 gates and 50 wires to a netlist network with 10 inputs and 20 outputs.

3.78.31.1. Executing ABC.

3.78.32. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$20509$auto$opt_dff.cc:194:make_patterns_logic$11645, asynchronously reset by !\rst_ni
Extracted 74 gates and 105 wires to a netlist network with 31 inputs and 27 outputs.

3.78.32.1. Executing ABC.

3.78.33. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22642$auto$opt_dff.cc:194:make_patterns_logic$11600, asynchronously reset by !\rst_ni
Extracted 12 gates and 19 wires to a netlist network with 7 inputs and 8 outputs.

3.78.33.1. Executing ABC.

3.78.34. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22728$auto$opt_dff.cc:194:make_patterns_logic$11606, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 7 outputs.

3.78.34.1. Executing ABC.

3.78.35. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22395$auto$opt_dff.cc:194:make_patterns_logic$11582, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.78.35.1. Executing ABC.

3.78.36. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23075$auto$opt_dff.cc:194:make_patterns_logic$11633, asynchronously reset by !\rst_ni
Extracted 68 gates and 115 wires to a netlist network with 47 inputs and 23 outputs.

3.78.36.1. Executing ABC.

3.78.37. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22906$auto$opt_dff.cc:194:make_patterns_logic$11621, asynchronously reset by !\rst_ni
Extracted 57 gates and 93 wires to a netlist network with 36 inputs and 23 outputs.

3.78.37.1. Executing ABC.

3.78.38. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22653$auto$opt_dff.cc:194:make_patterns_logic$11603, asynchronously reset by !\rst_ni
Extracted 72 gates and 123 wires to a netlist network with 51 inputs and 25 outputs.

3.78.38.1. Executing ABC.

3.78.39. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22486$auto$opt_dff.cc:194:make_patterns_logic$11591, asynchronously reset by !\rst_ni
Extracted 67 gates and 113 wires to a netlist network with 46 inputs and 23 outputs.

3.78.39.1. Executing ABC.

3.78.40. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21721$auto$opt_dff.cc:194:make_patterns_logic$11543, asynchronously reset by !\rst_ni
Extracted 9 gates and 16 wires to a netlist network with 7 inputs and 3 outputs.

3.78.40.1. Executing ABC.

3.78.41. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21645$auto$opt_dff.cc:194:make_patterns_logic$11522, asynchronously reset by !\rst_ni
Extracted 26 gates and 44 wires to a netlist network with 18 inputs and 9 outputs.

3.78.41.1. Executing ABC.

3.78.42. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22155$auto$opt_dff.cc:194:make_patterns_logic$11567, asynchronously reset by !\rst_ni
Extracted 58 gates and 95 wires to a netlist network with 37 inputs and 23 outputs.

3.78.42.1. Executing ABC.

3.78.43. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22320$auto$opt_dff.cc:194:make_patterns_logic$11579, asynchronously reset by !\rst_ni
Extracted 57 gates and 93 wires to a netlist network with 36 inputs and 23 outputs.

3.78.43.1. Executing ABC.

3.78.44. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22737$auto$opt_dff.cc:194:make_patterns_logic$11609, asynchronously reset by !\rst_ni
Extracted 55 gates and 89 wires to a netlist network with 34 inputs and 23 outputs.

3.78.44.1. Executing ABC.

3.78.45. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21562$auto$opt_dff.cc:194:make_patterns_logic$11510, asynchronously reset by !\rst_ni
Extracted 55 gates and 82 wires to a netlist network with 27 inputs and 20 outputs.

3.78.45.1. Executing ABC.

3.78.46. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22239$auto$opt_dff.cc:194:make_patterns_logic$11573, asynchronously reset by !\rst_ni
Extracted 63 gates and 105 wires to a netlist network with 42 inputs and 26 outputs.

3.78.46.1. Executing ABC.

3.78.47. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22404$auto$opt_dff.cc:194:make_patterns_logic$11585, asynchronously reset by !\rst_ni
Extracted 64 gates and 107 wires to a netlist network with 43 inputs and 26 outputs.

3.78.47.1. Executing ABC.

3.78.48. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22571$auto$opt_dff.cc:194:make_patterns_logic$11597, asynchronously reset by !\rst_ni
Extracted 54 gates and 87 wires to a netlist network with 33 inputs and 26 outputs.

3.78.48.1. Executing ABC.

3.78.49. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22825$auto$opt_dff.cc:194:make_patterns_logic$11615, asynchronously reset by !\rst_ni
Extracted 66 gates and 111 wires to a netlist network with 45 inputs and 26 outputs.

3.78.49.1. Executing ABC.

3.78.50. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22994$auto$opt_dff.cc:194:make_patterns_logic$11627, asynchronously reset by !\rst_ni
Extracted 64 gates and 107 wires to a netlist network with 43 inputs and 26 outputs.

3.78.50.1. Executing ABC.

3.78.51. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23159$auto$opt_dff.cc:194:make_patterns_logic$11639, asynchronously reset by !\rst_ni
Extracted 54 gates and 86 wires to a netlist network with 32 inputs and 26 outputs.

3.78.51.1. Executing ABC.

3.78.52. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21743$auto$opt_dff.cc:194:make_patterns_logic$11516, asynchronously reset by !\rst_ni
Extracted 99 gates and 140 wires to a netlist network with 41 inputs and 37 outputs.

3.78.52.1. Executing ABC.

3.78.53. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22062$auto$opt_dff.cc:194:make_patterns_logic$11558, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.78.53.1. Executing ABC.

3.78.54. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22072$auto$opt_dff.cc:194:make_patterns_logic$11561, asynchronously reset by !\rst_ni
Extracted 72 gates and 123 wires to a netlist network with 51 inputs and 25 outputs.

3.78.54.1. Executing ABC.

3.78.55. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21985$auto$opt_dff.cc:194:make_patterns_logic$11555, asynchronously reset by !\rst_ni
Extracted 75 gates and 116 wires to a netlist network with 41 inputs and 28 outputs.

3.78.55.1. Executing ABC.

3.78.56. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23465$u_reg.u_adc_chn0_filter_ctl_0_cdc.src_update_i, asynchronously reset by !\rst_ni
Extracted 32 gates and 52 wires to a netlist network with 20 inputs and 24 outputs.

3.78.56.1. Executing ABC.

3.78.57. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, asynchronously reset by !\rst_aon_ni
Extracted 120 gates and 144 wires to a netlist network with 24 inputs and 24 outputs.

3.78.57.1. Executing ABC.

3.78.58. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$20708$u_reg.u_reg_if.a_ack, asynchronously reset by !\rst_ni
Extracted 751 gates and 1082 wires to a netlist network with 331 inputs and 59 outputs.

3.78.58.1. Executing ABC.

3.78.59. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, asynchronously reset by !\rst_ni
Extracted 271 gates and 336 wires to a netlist network with 65 inputs and 60 outputs.

3.78.59.1. Executing ABC.

3.78.60. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24039$auto$opt_dff.cc:194:make_patterns_logic$11648, asynchronously reset by !\rst_ni
Extracted 15 gates and 24 wires to a netlist network with 9 inputs and 10 outputs.

3.78.60.1. Executing ABC.

yosys> abc -dff

3.79. Executing ABC pass (technology mapping using ABC).

3.79.1. Summary of detected clock domains:
  10 cells in clk=\clk_i, en=$abc$24049$abc$22310$auto$opt_dff.cc:194:make_patterns_logic$11576, arst=!\rst_ni, srst={ }
  12 cells in clk=\clk_i, en=$abc$24062$abc$22475$auto$opt_dff.cc:194:make_patterns_logic$11588, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$24073$abc$22146$auto$opt_dff.cc:194:make_patterns_logic$11564, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$24083$abc$22896$auto$opt_dff.cc:194:make_patterns_logic$11618, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$24094$abc$21636$auto$opt_dff.cc:194:make_patterns_logic$11513, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$24105$abc$21843$auto$opt_dff.cc:194:make_patterns_logic$11546, arst=!\rst_ni, srst={ }
  3 cells in clk=\clk_i, en=1'0, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$24120$abc$23065$auto$opt_dff.cc:194:make_patterns_logic$11630, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$24132$abc$23150$auto$opt_dff.cc:194:make_patterns_logic$11636, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$24142$abc$23230$auto$opt_dff.cc:194:make_patterns_logic$11642, arst=!\rst_ni, srst={ }
  12 cells in clk=\clk_i, en=$abc$24153$abc$22816$auto$opt_dff.cc:194:make_patterns_logic$11612, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$24164$abc$21674$auto$opt_dff.cc:194:make_patterns_logic$11519, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$24174$abc$22230$auto$opt_dff.cc:194:make_patterns_logic$11570, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$24184$abc$21625$auto$opt_dff.cc:194:make_patterns_logic$11507, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$24196$abc$22985$auto$opt_dff.cc:194:make_patterns_logic$11624, arst=!\rst_ni, srst={ }
  224 cells in clk=\clk_i, en=$abc$24207$abc$23812$u_reg.intg_err, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$25966$abc$22062$auto$opt_dff.cc:194:make_patterns_logic$11558, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$24433$abc$21696$auto$opt_dff.cc:194:make_patterns_logic$11525, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$24445$abc$22562$auto$opt_dff.cc:194:make_patterns_logic$11594, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$24492$abc$20660$u_adc_ctrl_core.u_adc_ctrl_intr.i_adc_ctrl_intr_o.new_event, arst=!\rst_ni, srst={ }
  14 cells in clk=\clk_i, en=$abc$24507$abc$20486$auto$opt_dff.cc:219:make_patterns_logic$11708, arst=!\rst_ni, srst={ }
  14 cells in clk=\clk_i, en=$abc$24525$abc$20409$auto$opt_dff.cc:219:make_patterns_logic$11715, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$24539$abc$21732$auto$opt_dff.cc:194:make_patterns_logic$11540, arst=!\rst_ni, srst={ }
  7 cells in clk=\clk_i, en=$abc$24551$abc$21707$auto$opt_dff.cc:194:make_patterns_logic$11537, arst=!\rst_ni, srst={ }
  36 cells in clk=\clk_i, en=$abc$24455$abc$20424$auto$opt_dff.cc:219:make_patterns_logic$11722, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$24559$abc$21514$auto$opt_dff.cc:194:make_patterns_logic$11500, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$24569$abc$20672$auto$opt_dff.cc:194:make_patterns_logic$11492, arst=!\rst_ni, srst={ }
  34 cells in clk=\clk_i, en=$abc$24576$abc$20679$auto$opt_dff.cc:194:make_patterns_logic$11497, arst=!\rst_ni, srst={ }
  71 cells in clk=\clk_i, en=$abc$26049$abc$21985$auto$opt_dff.cc:194:make_patterns_logic$11555, arst=!\rst_ni, srst={ }
  26 cells in clk=\clk_i, en=$abc$24613$abc$21533$auto$opt_dff.cc:194:make_patterns_logic$11504, arst=!\rst_ni, srst={ }
  20 cells in clk=\clk_aon_i, en=1'0, arst=!\rst_aon_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$24781$abc$22642$auto$opt_dff.cc:194:make_patterns_logic$11600, arst=!\rst_ni, srst={ }
  12 cells in clk=\clk_i, en=$abc$24793$abc$22728$auto$opt_dff.cc:194:make_patterns_logic$11606, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$24805$abc$22395$auto$opt_dff.cc:194:make_patterns_logic$11582, arst=!\rst_ni, srst={ }
  69 cells in clk=\clk_i, en=$abc$25638$abc$22825$auto$opt_dff.cc:194:make_patterns_logic$11615, arst=!\rst_ni, srst={ }
  62 cells in clk=\clk_i, en=$abc$24815$abc$23075$auto$opt_dff.cc:194:make_patterns_logic$11633, arst=!\rst_ni, srst={ }
  62 cells in clk=\clk_i, en=$abc$25562$abc$22571$auto$opt_dff.cc:194:make_patterns_logic$11597, arst=!\rst_ni, srst={ }
  68 cells in clk=\clk_i, en=$abc$24886$abc$22906$auto$opt_dff.cc:194:make_patterns_logic$11621, arst=!\rst_ni, srst={ }
  68 cells in clk=\clk_i, en=$abc$25486$abc$22404$auto$opt_dff.cc:194:make_patterns_logic$11585, arst=!\rst_ni, srst={ }
  73 cells in clk=\clk_i, en=$abc$24957$abc$22653$auto$opt_dff.cc:194:make_patterns_logic$11603, arst=!\rst_ni, srst={ }
  62 cells in clk=\clk_i, en=$abc$25410$abc$22239$auto$opt_dff.cc:194:make_patterns_logic$11573, arst=!\rst_ni, srst={ }
  52 cells in clk=\clk_i, en=$abc$25354$abc$21562$auto$opt_dff.cc:194:make_patterns_logic$11510, arst=!\rst_ni, srst={ }
  90 cells in clk=\clk_i, en=$abc$25866$abc$21743$auto$opt_dff.cc:194:make_patterns_logic$11516, arst=!\rst_ni, srst={ }
  73 cells in clk=\clk_i, en=$abc$25976$abc$22072$auto$opt_dff.cc:194:make_patterns_logic$11561, arst=!\rst_ni, srst={ }
  60 cells in clk=\clk_i, en=$abc$25790$abc$23159$auto$opt_dff.cc:194:make_patterns_logic$11639, arst=!\rst_ni, srst={ }
  60 cells in clk=\clk_i, en=$abc$25030$abc$22486$auto$opt_dff.cc:194:make_patterns_logic$11591, arst=!\rst_ni, srst={ }
  18 cells in clk=\clk_i, en=$abc$25101$abc$21721$auto$opt_dff.cc:194:make_patterns_logic$11543, arst=!\rst_ni, srst={ }
  29 cells in clk=\clk_i, en=$abc$25112$abc$21645$auto$opt_dff.cc:194:make_patterns_logic$11522, arst=!\rst_ni, srst={ }
  61 cells in clk=\clk_i, en=$abc$25141$abc$22155$auto$opt_dff.cc:194:make_patterns_logic$11567, arst=!\rst_ni, srst={ }
  55 cells in clk=\clk_i, en=$abc$25212$abc$22320$auto$opt_dff.cc:194:make_patterns_logic$11579, arst=!\rst_ni, srst={ }
  75 cells in clk=\clk_i, en=$abc$24706$abc$20509$auto$opt_dff.cc:194:make_patterns_logic$11645, arst=!\rst_ni, srst={ }
  758 cells in clk=\clk_i, en=$abc$26388$abc$20708$u_reg.u_reg_if.a_ack, arst=!\rst_ni, srst={ }
  120 cells in clk=\clk_aon_i, en={ }, arst=!\rst_aon_ni, srst={ }
  26 cells in clk=\clk_i, en=$abc$27200$abc$23465$u_reg.u_adc_chn0_filter_ctl_0_cdc.src_update_i, arst=!\rst_ni, srst={ }
  54 cells in clk=\clk_i, en=$abc$25283$abc$22737$auto$opt_dff.cc:194:make_patterns_logic$11609, arst=!\rst_ni, srst={ }
  55 cells in clk=\clk_i, en=$abc$25714$abc$22994$auto$opt_dff.cc:194:make_patterns_logic$11627, arst=!\rst_ni, srst={ }
  269 cells in clk=\clk_i, en={ }, arst=!\rst_ni, srst={ }
  15 cells in clk=\clk_i, en=$abc$27555$abc$24039$auto$opt_dff.cc:194:make_patterns_logic$11648, arst=!\rst_ni, srst={ }

3.79.2. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24049$abc$22310$auto$opt_dff.cc:194:make_patterns_logic$11576, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.79.2.1. Executing ABC.

3.79.3. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24062$abc$22475$auto$opt_dff.cc:194:make_patterns_logic$11588, asynchronously reset by !\rst_ni
Extracted 12 gates and 18 wires to a netlist network with 6 inputs and 9 outputs.

3.79.3.1. Executing ABC.

3.79.4. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24073$abc$22146$auto$opt_dff.cc:194:make_patterns_logic$11564, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.79.4.1. Executing ABC.

3.79.5. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24083$abc$22896$auto$opt_dff.cc:194:make_patterns_logic$11618, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.79.5.1. Executing ABC.

3.79.6. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24094$abc$21636$auto$opt_dff.cc:194:make_patterns_logic$11513, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.79.6.1. Executing ABC.

3.79.7. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24105$abc$21843$auto$opt_dff.cc:194:make_patterns_logic$11546, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.79.7.1. Executing ABC.

3.79.8. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by 1'0, asynchronously reset by !\rst_ni
Extracted 3 gates and 5 wires to a netlist network with 1 inputs and 2 outputs.

3.79.8.1. Executing ABC.

3.79.9. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24120$abc$23065$auto$opt_dff.cc:194:make_patterns_logic$11630, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.79.9.1. Executing ABC.

3.79.10. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24132$abc$23150$auto$opt_dff.cc:194:make_patterns_logic$11636, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.79.10.1. Executing ABC.

3.79.11. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24142$abc$23230$auto$opt_dff.cc:194:make_patterns_logic$11642, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.79.11.1. Executing ABC.

3.79.12. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24153$abc$22816$auto$opt_dff.cc:194:make_patterns_logic$11612, asynchronously reset by !\rst_ni
Extracted 12 gates and 20 wires to a netlist network with 8 inputs and 8 outputs.

3.79.12.1. Executing ABC.

3.79.13. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24164$abc$21674$auto$opt_dff.cc:194:make_patterns_logic$11519, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.79.13.1. Executing ABC.

3.79.14. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24174$abc$22230$auto$opt_dff.cc:194:make_patterns_logic$11570, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 8 outputs.

3.79.14.1. Executing ABC.

3.79.15. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24184$abc$21625$auto$opt_dff.cc:194:make_patterns_logic$11507, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.79.15.1. Executing ABC.

3.79.16. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24196$abc$22985$auto$opt_dff.cc:194:make_patterns_logic$11624, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.79.16.1. Executing ABC.

3.79.17. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24207$abc$23812$u_reg.intg_err, asynchronously reset by !\rst_ni
Extracted 224 gates and 315 wires to a netlist network with 90 inputs and 2 outputs.

3.79.17.1. Executing ABC.

3.79.18. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25966$abc$22062$auto$opt_dff.cc:194:make_patterns_logic$11558, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 8 outputs.

3.79.18.1. Executing ABC.

3.79.19. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24433$abc$21696$auto$opt_dff.cc:194:make_patterns_logic$11525, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.79.19.1. Executing ABC.

3.79.20. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24445$abc$22562$auto$opt_dff.cc:194:make_patterns_logic$11594, asynchronously reset by !\rst_ni
Extracted 11 gates and 17 wires to a netlist network with 6 inputs and 7 outputs.

3.79.20.1. Executing ABC.

3.79.21. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24492$abc$20660$u_adc_ctrl_core.u_adc_ctrl_intr.i_adc_ctrl_intr_o.new_event, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 6 outputs.

3.79.21.1. Executing ABC.

3.79.22. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24507$abc$20486$auto$opt_dff.cc:219:make_patterns_logic$11708, asynchronously reset by !\rst_ni
Extracted 14 gates and 18 wires to a netlist network with 4 inputs and 7 outputs.

3.79.22.1. Executing ABC.

3.79.23. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24525$abc$20409$auto$opt_dff.cc:219:make_patterns_logic$11715, asynchronously reset by !\rst_ni
Extracted 14 gates and 18 wires to a netlist network with 4 inputs and 5 outputs.

3.79.23.1. Executing ABC.

3.79.24. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24539$abc$21732$auto$opt_dff.cc:194:make_patterns_logic$11540, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.79.24.1. Executing ABC.

3.79.25. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24551$abc$21707$auto$opt_dff.cc:194:make_patterns_logic$11537, asynchronously reset by !\rst_ni
Extracted 7 gates and 13 wires to a netlist network with 6 inputs and 2 outputs.

3.79.25.1. Executing ABC.

3.79.26. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24455$abc$20424$auto$opt_dff.cc:219:make_patterns_logic$11722, asynchronously reset by !\rst_ni
Extracted 36 gates and 47 wires to a netlist network with 10 inputs and 8 outputs.

3.79.26.1. Executing ABC.

3.79.27. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24559$abc$21514$auto$opt_dff.cc:194:make_patterns_logic$11500, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.79.27.1. Executing ABC.

3.79.28. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24569$abc$20672$auto$opt_dff.cc:194:make_patterns_logic$11492, asynchronously reset by !\rst_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 3 outputs.

3.79.28.1. Executing ABC.

3.79.29. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24576$abc$20679$auto$opt_dff.cc:194:make_patterns_logic$11497, asynchronously reset by !\rst_ni
Extracted 34 gates and 52 wires to a netlist network with 18 inputs and 14 outputs.

3.79.29.1. Executing ABC.

3.79.30. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$26049$abc$21985$auto$opt_dff.cc:194:make_patterns_logic$11555, asynchronously reset by !\rst_ni
Extracted 71 gates and 108 wires to a netlist network with 37 inputs and 28 outputs.

3.79.30.1. Executing ABC.

3.79.31. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24613$abc$21533$auto$opt_dff.cc:194:make_patterns_logic$11504, asynchronously reset by !\rst_ni
Extracted 26 gates and 44 wires to a netlist network with 18 inputs and 9 outputs.

3.79.31.1. Executing ABC.

3.79.32. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by 1'0, asynchronously reset by !\rst_aon_ni
Extracted 20 gates and 30 wires to a netlist network with 10 inputs and 10 outputs.

3.79.32.1. Executing ABC.

3.79.33. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24781$abc$22642$auto$opt_dff.cc:194:make_patterns_logic$11600, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 8 outputs.

3.79.33.1. Executing ABC.

3.79.34. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24793$abc$22728$auto$opt_dff.cc:194:make_patterns_logic$11606, asynchronously reset by !\rst_ni
Extracted 12 gates and 19 wires to a netlist network with 7 inputs and 8 outputs.

3.79.34.1. Executing ABC.

3.79.35. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24805$abc$22395$auto$opt_dff.cc:194:make_patterns_logic$11582, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.79.35.1. Executing ABC.

3.79.36. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25638$abc$22825$auto$opt_dff.cc:194:make_patterns_logic$11615, asynchronously reset by !\rst_ni
Extracted 69 gates and 115 wires to a netlist network with 46 inputs and 27 outputs.

3.79.36.1. Executing ABC.

3.79.37. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24815$abc$23075$auto$opt_dff.cc:194:make_patterns_logic$11633, asynchronously reset by !\rst_ni
Extracted 62 gates and 102 wires to a netlist network with 40 inputs and 24 outputs.

3.79.37.1. Executing ABC.

3.79.38. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25562$abc$22571$auto$opt_dff.cc:194:make_patterns_logic$11597, asynchronously reset by !\rst_ni
Extracted 62 gates and 104 wires to a netlist network with 42 inputs and 26 outputs.

3.79.38.1. Executing ABC.

3.79.39. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24886$abc$22906$auto$opt_dff.cc:194:make_patterns_logic$11621, asynchronously reset by !\rst_ni
Extracted 68 gates and 115 wires to a netlist network with 47 inputs and 26 outputs.

3.79.39.1. Executing ABC.

3.79.40. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25486$abc$22404$auto$opt_dff.cc:194:make_patterns_logic$11585, asynchronously reset by !\rst_ni
Extracted 68 gates and 114 wires to a netlist network with 46 inputs and 24 outputs.

3.79.40.1. Executing ABC.

3.79.41. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24957$abc$22653$auto$opt_dff.cc:194:make_patterns_logic$11603, asynchronously reset by !\rst_ni
Extracted 73 gates and 124 wires to a netlist network with 51 inputs and 25 outputs.

3.79.41.1. Executing ABC.

3.79.42. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25410$abc$22239$auto$opt_dff.cc:194:make_patterns_logic$11573, asynchronously reset by !\rst_ni
Extracted 62 gates and 102 wires to a netlist network with 40 inputs and 26 outputs.

3.79.42.1. Executing ABC.

3.79.43. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25354$abc$21562$auto$opt_dff.cc:194:make_patterns_logic$11510, asynchronously reset by !\rst_ni
Extracted 52 gates and 76 wires to a netlist network with 24 inputs and 17 outputs.

3.79.43.1. Executing ABC.

3.79.44. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25866$abc$21743$auto$opt_dff.cc:194:make_patterns_logic$11516, asynchronously reset by !\rst_ni
Extracted 90 gates and 124 wires to a netlist network with 34 inputs and 30 outputs.

3.79.44.1. Executing ABC.

3.79.45. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25976$abc$22072$auto$opt_dff.cc:194:make_patterns_logic$11561, asynchronously reset by !\rst_ni
Extracted 73 gates and 124 wires to a netlist network with 51 inputs and 25 outputs.

3.79.45.1. Executing ABC.

3.79.46. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25790$abc$23159$auto$opt_dff.cc:194:make_patterns_logic$11639, asynchronously reset by !\rst_ni
Extracted 60 gates and 100 wires to a netlist network with 40 inputs and 26 outputs.

3.79.46.1. Executing ABC.

3.79.47. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25030$abc$22486$auto$opt_dff.cc:194:make_patterns_logic$11591, asynchronously reset by !\rst_ni
Extracted 60 gates and 98 wires to a netlist network with 38 inputs and 24 outputs.

3.79.47.1. Executing ABC.

3.79.48. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25101$abc$21721$auto$opt_dff.cc:194:make_patterns_logic$11543, asynchronously reset by !\rst_ni
Extracted 18 gates and 32 wires to a netlist network with 14 inputs and 10 outputs.

3.79.48.1. Executing ABC.

3.79.49. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25112$abc$21645$auto$opt_dff.cc:194:make_patterns_logic$11522, asynchronously reset by !\rst_ni
Extracted 29 gates and 50 wires to a netlist network with 21 inputs and 12 outputs.

3.79.49.1. Executing ABC.

3.79.50. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25141$abc$22155$auto$opt_dff.cc:194:make_patterns_logic$11567, asynchronously reset by !\rst_ni
Extracted 61 gates and 100 wires to a netlist network with 39 inputs and 24 outputs.

3.79.50.1. Executing ABC.

3.79.51. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25212$abc$22320$auto$opt_dff.cc:194:make_patterns_logic$11579, asynchronously reset by !\rst_ni
Extracted 55 gates and 89 wires to a netlist network with 34 inputs and 26 outputs.

3.79.51.1. Executing ABC.

3.79.52. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24706$abc$20509$auto$opt_dff.cc:194:make_patterns_logic$11645, asynchronously reset by !\rst_ni
Extracted 75 gates and 107 wires to a netlist network with 32 inputs and 28 outputs.

3.79.52.1. Executing ABC.

3.79.53. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$26388$abc$20708$u_reg.u_reg_if.a_ack, asynchronously reset by !\rst_ni
Extracted 758 gates and 1089 wires to a netlist network with 331 inputs and 59 outputs.

3.79.53.1. Executing ABC.

3.79.54. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, asynchronously reset by !\rst_aon_ni
Extracted 120 gates and 144 wires to a netlist network with 24 inputs and 24 outputs.

3.79.54.1. Executing ABC.

3.79.55. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27200$abc$23465$u_reg.u_adc_chn0_filter_ctl_0_cdc.src_update_i, asynchronously reset by !\rst_ni
Extracted 26 gates and 50 wires to a netlist network with 24 inputs and 22 outputs.

3.79.55.1. Executing ABC.

3.79.56. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25283$abc$22737$auto$opt_dff.cc:194:make_patterns_logic$11609, asynchronously reset by !\rst_ni
Extracted 54 gates and 88 wires to a netlist network with 34 inputs and 23 outputs.

3.79.56.1. Executing ABC.

3.79.57. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25714$abc$22994$auto$opt_dff.cc:194:make_patterns_logic$11627, asynchronously reset by !\rst_ni
Extracted 55 gates and 88 wires to a netlist network with 33 inputs and 24 outputs.

3.79.57.1. Executing ABC.

3.79.58. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, asynchronously reset by !\rst_ni
Extracted 269 gates and 334 wires to a netlist network with 65 inputs and 63 outputs.

3.79.58.1. Executing ABC.

3.79.59. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27555$abc$24039$auto$opt_dff.cc:194:make_patterns_logic$11648, asynchronously reset by !\rst_ni
Extracted 15 gates and 24 wires to a netlist network with 9 inputs and 10 outputs.

3.79.59.1. Executing ABC.

yosys> abc -dff

3.80. Executing ABC pass (technology mapping using ABC).

3.80.1. Summary of detected clock domains:
  10 cells in clk=\clk_i, en=$abc$27571$abc$24049$abc$22310$auto$opt_dff.cc:194:make_patterns_logic$11576, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$27582$abc$24062$abc$22475$auto$opt_dff.cc:194:make_patterns_logic$11588, arst=!\rst_ni, srst={ }
  12 cells in clk=\clk_i, en=$abc$27595$abc$24073$abc$22146$auto$opt_dff.cc:194:make_patterns_logic$11564, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$27606$abc$24083$abc$22896$auto$opt_dff.cc:194:make_patterns_logic$11618, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$27617$abc$24094$abc$21636$auto$opt_dff.cc:194:make_patterns_logic$11513, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$27627$abc$24105$abc$21843$auto$opt_dff.cc:194:make_patterns_logic$11546, arst=!\rst_ni, srst={ }
  2 cells in clk=\clk_i, en=1'0, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$27643$abc$24120$abc$23065$auto$opt_dff.cc:194:make_patterns_logic$11630, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$27654$abc$24132$abc$23150$auto$opt_dff.cc:194:make_patterns_logic$11636, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$27665$abc$24142$abc$23230$auto$opt_dff.cc:194:make_patterns_logic$11642, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$27676$abc$24153$abc$22816$auto$opt_dff.cc:194:make_patterns_logic$11612, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$27689$abc$24164$abc$21674$auto$opt_dff.cc:194:make_patterns_logic$11519, arst=!\rst_ni, srst={ }
  12 cells in clk=\clk_i, en=$abc$27699$abc$24174$abc$22230$auto$opt_dff.cc:194:make_patterns_logic$11570, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$27711$abc$24184$abc$21625$auto$opt_dff.cc:194:make_patterns_logic$11507, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$27721$abc$24196$abc$22985$auto$opt_dff.cc:194:make_patterns_logic$11624, arst=!\rst_ni, srst={ }
  228 cells in clk=\clk_i, en=$abc$27732$abc$24207$abc$23812$u_reg.intg_err, arst=!\rst_ni, srst={ }
  12 cells in clk=\clk_i, en=$abc$27962$abc$25966$abc$22062$auto$opt_dff.cc:194:make_patterns_logic$11558, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$27974$abc$24433$abc$21696$auto$opt_dff.cc:194:make_patterns_logic$11525, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$27984$abc$24445$abc$22562$auto$opt_dff.cc:194:make_patterns_logic$11594, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$27996$abc$24492$abc$20660$u_adc_ctrl_core.u_adc_ctrl_intr.i_adc_ctrl_intr_o.new_event, arst=!\rst_ni, srst={ }
  15 cells in clk=\clk_i, en=$abc$28008$abc$24507$abc$20486$auto$opt_dff.cc:219:make_patterns_logic$11708, arst=!\rst_ni, srst={ }
  14 cells in clk=\clk_i, en=$abc$28023$abc$24525$abc$20409$auto$opt_dff.cc:219:make_patterns_logic$11715, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$28038$abc$24539$abc$21732$auto$opt_dff.cc:194:make_patterns_logic$11540, arst=!\rst_ni, srst={ }
  7 cells in clk=\clk_i, en=$abc$28048$abc$24551$abc$21707$auto$opt_dff.cc:194:make_patterns_logic$11537, arst=!\rst_ni, srst={ }
  32 cells in clk=\clk_i, en=$abc$28056$abc$24455$abc$20424$auto$opt_dff.cc:219:make_patterns_logic$11722, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$28093$abc$24559$abc$21514$auto$opt_dff.cc:194:make_patterns_logic$11500, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$28103$abc$24569$abc$20672$auto$opt_dff.cc:194:make_patterns_logic$11492, arst=!\rst_ni, srst={ }
  34 cells in clk=\clk_i, en=$abc$28110$abc$24576$abc$20679$auto$opt_dff.cc:194:make_patterns_logic$11497, arst=!\rst_ni, srst={ }
  30 cells in clk=\clk_i, en=$abc$28221$abc$24613$abc$21533$auto$opt_dff.cc:194:make_patterns_logic$11504, arst=!\rst_ni, srst={ }
  70 cells in clk=\clk_i, en=$abc$28145$abc$26049$abc$21985$auto$opt_dff.cc:194:make_patterns_logic$11555, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$28301$abc$24781$abc$22642$auto$opt_dff.cc:194:make_patterns_logic$11600, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$28313$abc$24793$abc$22728$auto$opt_dff.cc:194:make_patterns_logic$11606, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$28326$abc$24805$abc$22395$auto$opt_dff.cc:194:make_patterns_logic$11582, arst=!\rst_ni, srst={ }
  65 cells in clk=\clk_i, en=$abc$28336$abc$25638$abc$22825$auto$opt_dff.cc:194:make_patterns_logic$11615, arst=!\rst_ni, srst={ }
  61 cells in clk=\clk_i, en=$abc$28411$abc$24815$abc$23075$auto$opt_dff.cc:194:make_patterns_logic$11633, arst=!\rst_ni, srst={ }
  61 cells in clk=\clk_i, en=$abc$28483$abc$25562$abc$22571$auto$opt_dff.cc:194:make_patterns_logic$11597, arst=!\rst_ni, srst={ }
  64 cells in clk=\clk_i, en=$abc$28557$abc$24886$abc$22906$auto$opt_dff.cc:194:make_patterns_logic$11621, arst=!\rst_ni, srst={ }
  68 cells in clk=\clk_i, en=$abc$28632$abc$25486$abc$22404$auto$opt_dff.cc:194:make_patterns_logic$11585, arst=!\rst_ni, srst={ }
  72 cells in clk=\clk_i, en=$abc$28704$abc$24957$abc$22653$auto$opt_dff.cc:194:make_patterns_logic$11603, arst=!\rst_ni, srst={ }
  66 cells in clk=\clk_i, en=$abc$28777$abc$25410$abc$22239$auto$opt_dff.cc:194:make_patterns_logic$11573, arst=!\rst_ni, srst={ }
  53 cells in clk=\clk_i, en=$abc$28851$abc$25354$abc$21562$auto$opt_dff.cc:194:make_patterns_logic$11510, arst=!\rst_ni, srst={ }
  91 cells in clk=\clk_i, en=$abc$28904$abc$25866$abc$21743$auto$opt_dff.cc:194:make_patterns_logic$11516, arst=!\rst_ni, srst={ }
  72 cells in clk=\clk_i, en=$abc$28996$abc$25976$abc$22072$auto$opt_dff.cc:194:make_patterns_logic$11561, arst=!\rst_ni, srst={ }
  61 cells in clk=\clk_i, en=$abc$29069$abc$25790$abc$23159$auto$opt_dff.cc:194:make_patterns_logic$11639, arst=!\rst_ni, srst={ }
  18 cells in clk=\clk_i, en=$abc$29215$abc$25101$abc$21721$auto$opt_dff.cc:194:make_patterns_logic$11543, arst=!\rst_ni, srst={ }
  30 cells in clk=\clk_i, en=$abc$29236$abc$25112$abc$21645$auto$opt_dff.cc:194:make_patterns_logic$11522, arst=!\rst_ni, srst={ }
  55 cells in clk=\clk_i, en=$abc$29270$abc$25141$abc$22155$auto$opt_dff.cc:194:make_patterns_logic$11567, arst=!\rst_ni, srst={ }
  20 cells in clk=\clk_aon_i, en=1'0, arst=!\rst_aon_ni, srst={ }
  59 cells in clk=\clk_i, en=$abc$30647$abc$25714$abc$22994$auto$opt_dff.cc:194:make_patterns_logic$11627, arst=!\rst_ni, srst={ }
  54 cells in clk=\clk_i, en=$abc$29342$abc$25212$abc$22320$auto$opt_dff.cc:194:make_patterns_logic$11579, arst=!\rst_ni, srst={ }
  61 cells in clk=\clk_i, en=$abc$29143$abc$25030$abc$22486$auto$opt_dff.cc:194:make_patterns_logic$11591, arst=!\rst_ni, srst={ }
  76 cells in clk=\clk_i, en=$abc$29416$abc$24706$abc$20509$auto$opt_dff.cc:194:make_patterns_logic$11645, arst=!\rst_ni, srst={ }
  772 cells in clk=\clk_i, en=$abc$29492$abc$26388$abc$20708$u_reg.u_reg_if.a_ack, arst=!\rst_ni, srst={ }
  120 cells in clk=\clk_aon_i, en={ }, arst=!\rst_aon_ni, srst={ }
  22 cells in clk=\clk_i, en=$abc$30533$abc$27200$abc$23465$u_reg.u_adc_chn0_filter_ctl_0_cdc.src_update_i, arst=!\rst_ni, srst={ }
  57 cells in clk=\clk_i, en=$abc$30576$abc$25283$abc$22737$auto$opt_dff.cc:194:make_patterns_logic$11609, arst=!\rst_ni, srst={ }
  272 cells in clk=\clk_i, en={ }, arst=!\rst_ni, srst={ }
  15 cells in clk=\clk_i, en=$abc$31075$abc$27555$abc$24039$auto$opt_dff.cc:194:make_patterns_logic$11648, arst=!\rst_ni, srst={ }

3.80.2. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27571$abc$24049$abc$22310$auto$opt_dff.cc:194:make_patterns_logic$11576, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.80.2.1. Executing ABC.

3.80.3. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27582$abc$24062$abc$22475$auto$opt_dff.cc:194:make_patterns_logic$11588, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.80.3.1. Executing ABC.

3.80.4. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27595$abc$24073$abc$22146$auto$opt_dff.cc:194:make_patterns_logic$11564, asynchronously reset by !\rst_ni
Extracted 12 gates and 18 wires to a netlist network with 6 inputs and 9 outputs.

3.80.4.1. Executing ABC.

3.80.5. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27606$abc$24083$abc$22896$auto$opt_dff.cc:194:make_patterns_logic$11618, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.80.5.1. Executing ABC.

3.80.6. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27617$abc$24094$abc$21636$auto$opt_dff.cc:194:make_patterns_logic$11513, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.80.6.1. Executing ABC.

3.80.7. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27627$abc$24105$abc$21843$auto$opt_dff.cc:194:make_patterns_logic$11546, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.80.7.1. Executing ABC.

3.80.8. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by 1'0, asynchronously reset by !\rst_ni
Extracted 2 gates and 4 wires to a netlist network with 1 inputs and 1 outputs.

3.80.8.1. Executing ABC.

3.80.9. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27643$abc$24120$abc$23065$auto$opt_dff.cc:194:make_patterns_logic$11630, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.80.9.1. Executing ABC.

3.80.10. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27654$abc$24132$abc$23150$auto$opt_dff.cc:194:make_patterns_logic$11636, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.80.10.1. Executing ABC.

3.80.11. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27665$abc$24142$abc$23230$auto$opt_dff.cc:194:make_patterns_logic$11642, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.80.11.1. Executing ABC.

3.80.12. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27676$abc$24153$abc$22816$auto$opt_dff.cc:194:make_patterns_logic$11612, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 7 outputs.

3.80.12.1. Executing ABC.

3.80.13. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27689$abc$24164$abc$21674$auto$opt_dff.cc:194:make_patterns_logic$11519, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.80.13.1. Executing ABC.

3.80.14. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27699$abc$24174$abc$22230$auto$opt_dff.cc:194:make_patterns_logic$11570, asynchronously reset by !\rst_ni
Extracted 12 gates and 19 wires to a netlist network with 7 inputs and 9 outputs.

3.80.14.1. Executing ABC.

3.80.15. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27711$abc$24184$abc$21625$auto$opt_dff.cc:194:make_patterns_logic$11507, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.80.15.1. Executing ABC.

3.80.16. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27721$abc$24196$abc$22985$auto$opt_dff.cc:194:make_patterns_logic$11624, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 8 outputs.

3.80.16.1. Executing ABC.

3.80.17. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27732$abc$24207$abc$23812$u_reg.intg_err, asynchronously reset by !\rst_ni
Extracted 228 gates and 319 wires to a netlist network with 90 inputs and 2 outputs.

3.80.17.1. Executing ABC.

3.80.18. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27962$abc$25966$abc$22062$auto$opt_dff.cc:194:make_patterns_logic$11558, asynchronously reset by !\rst_ni
Extracted 12 gates and 19 wires to a netlist network with 7 inputs and 9 outputs.

3.80.18.1. Executing ABC.

3.80.19. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27974$abc$24433$abc$21696$auto$opt_dff.cc:194:make_patterns_logic$11525, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.80.19.1. Executing ABC.

3.80.20. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27984$abc$24445$abc$22562$auto$opt_dff.cc:194:make_patterns_logic$11594, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 7 outputs.

3.80.20.1. Executing ABC.

3.80.21. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27996$abc$24492$abc$20660$u_adc_ctrl_core.u_adc_ctrl_intr.i_adc_ctrl_intr_o.new_event, asynchronously reset by !\rst_ni
Extracted 10 gates and 18 wires to a netlist network with 8 inputs and 5 outputs.

3.80.21.1. Executing ABC.

3.80.22. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$28008$abc$24507$abc$20486$auto$opt_dff.cc:219:make_patterns_logic$11708, asynchronously reset by !\rst_ni
Extracted 15 gates and 20 wires to a netlist network with 5 inputs and 7 outputs.

3.80.22.1. Executing ABC.

3.80.23. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$28023$abc$24525$abc$20409$auto$opt_dff.cc:219:make_patterns_logic$11715, asynchronously reset by !\rst_ni
Extracted 14 gates and 18 wires to a netlist network with 4 inputs and 5 outputs.

3.80.23.1. Executing ABC.

3.80.24. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$28038$abc$24539$abc$21732$auto$opt_dff.cc:194:make_patterns_logic$11540, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.80.24.1. Executing ABC.

3.80.25. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$28048$abc$24551$abc$21707$auto$opt_dff.cc:194:make_patterns_logic$11537, asynchronously reset by !\rst_ni
Extracted 7 gates and 13 wires to a netlist network with 6 inputs and 2 outputs.

3.80.25.1. Executing ABC.

3.80.26. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$28056$abc$24455$abc$20424$auto$opt_dff.cc:219:make_patterns_logic$11722, asynchronously reset by !\rst_ni
Extracted 32 gates and 38 wires to a netlist network with 6 inputs and 7 outputs.

3.80.26.1. Executing ABC.

3.80.27. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$28093$abc$24559$abc$21514$auto$opt_dff.cc:194:make_patterns_logic$11500, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.80.27.1. Executing ABC.

3.80.28. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$28103$abc$24569$abc$20672$auto$opt_dff.cc:194:make_patterns_logic$11492, asynchronously reset by !\rst_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 3 outputs.

3.80.28.1. Executing ABC.

3.80.29. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$28110$abc$24576$abc$20679$auto$opt_dff.cc:194:make_patterns_logic$11497, asynchronously reset by !\rst_ni
Extracted 34 gates and 52 wires to a netlist network with 18 inputs and 14 outputs.

3.80.29.1. Executing ABC.

3.80.30. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$28221$abc$24613$abc$21533$auto$opt_dff.cc:194:make_patterns_logic$11504, asynchronously reset by !\rst_ni
Extracted 30 gates and 50 wires to a netlist network with 20 inputs and 14 outputs.

3.80.30.1. Executing ABC.

3.80.31. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$28145$abc$26049$abc$21985$auto$opt_dff.cc:194:make_patterns_logic$11555, asynchronously reset by !\rst_ni
Extracted 70 gates and 107 wires to a netlist network with 37 inputs and 27 outputs.

3.80.31.1. Executing ABC.

3.80.32. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$28301$abc$24781$abc$22642$auto$opt_dff.cc:194:make_patterns_logic$11600, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 8 outputs.

3.80.32.1. Executing ABC.

3.80.33. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$28313$abc$24793$abc$22728$auto$opt_dff.cc:194:make_patterns_logic$11606, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 7 outputs.

3.80.33.1. Executing ABC.

3.80.34. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$28326$abc$24805$abc$22395$auto$opt_dff.cc:194:make_patterns_logic$11582, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.80.34.1. Executing ABC.

3.80.35. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$28336$abc$25638$abc$22825$auto$opt_dff.cc:194:make_patterns_logic$11615, asynchronously reset by !\rst_ni
Extracted 65 gates and 109 wires to a netlist network with 44 inputs and 26 outputs.

3.80.35.1. Executing ABC.

3.80.36. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$28411$abc$24815$abc$23075$auto$opt_dff.cc:194:make_patterns_logic$11633, asynchronously reset by !\rst_ni
Extracted 61 gates and 100 wires to a netlist network with 39 inputs and 24 outputs.

3.80.36.1. Executing ABC.

3.80.37. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$28483$abc$25562$abc$22571$auto$opt_dff.cc:194:make_patterns_logic$11597, asynchronously reset by !\rst_ni
Extracted 61 gates and 102 wires to a netlist network with 41 inputs and 26 outputs.

3.80.37.1. Executing ABC.

3.80.38. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$28557$abc$24886$abc$22906$auto$opt_dff.cc:194:make_patterns_logic$11621, asynchronously reset by !\rst_ni
Extracted 64 gates and 107 wires to a netlist network with 43 inputs and 27 outputs.

3.80.38.1. Executing ABC.

3.80.39. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$28632$abc$25486$abc$22404$auto$opt_dff.cc:194:make_patterns_logic$11585, asynchronously reset by !\rst_ni
Extracted 68 gates and 114 wires to a netlist network with 46 inputs and 24 outputs.

3.80.39.1. Executing ABC.

3.80.40. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$28704$abc$24957$abc$22653$auto$opt_dff.cc:194:make_patterns_logic$11603, asynchronously reset by !\rst_ni
Extracted 72 gates and 123 wires to a netlist network with 51 inputs and 25 outputs.

3.80.40.1. Executing ABC.

3.80.41. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$28777$abc$25410$abc$22239$auto$opt_dff.cc:194:make_patterns_logic$11573, asynchronously reset by !\rst_ni
Extracted 66 gates and 111 wires to a netlist network with 45 inputs and 23 outputs.

3.80.41.1. Executing ABC.

3.80.42. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$28851$abc$25354$abc$21562$auto$opt_dff.cc:194:make_patterns_logic$11510, asynchronously reset by !\rst_ni
Extracted 53 gates and 77 wires to a netlist network with 24 inputs and 18 outputs.

3.80.42.1. Executing ABC.

3.80.43. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$28904$abc$25866$abc$21743$auto$opt_dff.cc:194:make_patterns_logic$11516, asynchronously reset by !\rst_ni
Extracted 91 gates and 125 wires to a netlist network with 34 inputs and 31 outputs.

3.80.43.1. Executing ABC.

3.80.44. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$28996$abc$25976$abc$22072$auto$opt_dff.cc:194:make_patterns_logic$11561, asynchronously reset by !\rst_ni
Extracted 72 gates and 123 wires to a netlist network with 51 inputs and 25 outputs.

3.80.44.1. Executing ABC.

3.80.45. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$29069$abc$25790$abc$23159$auto$opt_dff.cc:194:make_patterns_logic$11639, asynchronously reset by !\rst_ni
Extracted 61 gates and 102 wires to a netlist network with 41 inputs and 26 outputs.

3.80.45.1. Executing ABC.

3.80.46. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$29215$abc$25101$abc$21721$auto$opt_dff.cc:194:make_patterns_logic$11543, asynchronously reset by !\rst_ni
Extracted 18 gates and 32 wires to a netlist network with 14 inputs and 10 outputs.

3.80.46.1. Executing ABC.

3.80.47. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$29236$abc$25112$abc$21645$auto$opt_dff.cc:194:make_patterns_logic$11522, asynchronously reset by !\rst_ni
Extracted 30 gates and 51 wires to a netlist network with 21 inputs and 12 outputs.

3.80.47.1. Executing ABC.

3.80.48. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$29270$abc$25141$abc$22155$auto$opt_dff.cc:194:make_patterns_logic$11567, asynchronously reset by !\rst_ni
Extracted 55 gates and 89 wires to a netlist network with 34 inputs and 26 outputs.

3.80.48.1. Executing ABC.

3.80.49. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, enabled by 1'0, asynchronously reset by !\rst_aon_ni
Extracted 20 gates and 30 wires to a netlist network with 10 inputs and 10 outputs.

3.80.49.1. Executing ABC.

3.80.50. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$30647$abc$25714$abc$22994$auto$opt_dff.cc:194:make_patterns_logic$11627, asynchronously reset by !\rst_ni
Extracted 59 gates and 96 wires to a netlist network with 37 inputs and 24 outputs.

3.80.50.1. Executing ABC.

3.80.51. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$29342$abc$25212$abc$22320$auto$opt_dff.cc:194:make_patterns_logic$11579, asynchronously reset by !\rst_ni
Extracted 54 gates and 87 wires to a netlist network with 33 inputs and 26 outputs.

3.80.51.1. Executing ABC.

3.80.52. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$29143$abc$25030$abc$22486$auto$opt_dff.cc:194:make_patterns_logic$11591, asynchronously reset by !\rst_ni
Extracted 61 gates and 100 wires to a netlist network with 39 inputs and 24 outputs.

3.80.52.1. Executing ABC.

3.80.53. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$29416$abc$24706$abc$20509$auto$opt_dff.cc:194:make_patterns_logic$11645, asynchronously reset by !\rst_ni
Extracted 76 gates and 108 wires to a netlist network with 32 inputs and 28 outputs.

3.80.53.1. Executing ABC.

3.80.54. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$29492$abc$26388$abc$20708$u_reg.u_reg_if.a_ack, asynchronously reset by !\rst_ni
Extracted 772 gates and 1103 wires to a netlist network with 331 inputs and 59 outputs.

3.80.54.1. Executing ABC.

3.80.55. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, asynchronously reset by !\rst_aon_ni
Extracted 120 gates and 144 wires to a netlist network with 24 inputs and 24 outputs.

3.80.55.1. Executing ABC.

3.80.56. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$30533$abc$27200$abc$23465$u_reg.u_adc_chn0_filter_ctl_0_cdc.src_update_i, asynchronously reset by !\rst_ni
Extracted 22 gates and 43 wires to a netlist network with 21 inputs and 18 outputs.

3.80.56.1. Executing ABC.

3.80.57. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$30576$abc$25283$abc$22737$auto$opt_dff.cc:194:make_patterns_logic$11609, asynchronously reset by !\rst_ni
Extracted 57 gates and 92 wires to a netlist network with 35 inputs and 24 outputs.

3.80.57.1. Executing ABC.

3.80.58. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, asynchronously reset by !\rst_ni
Extracted 272 gates and 340 wires to a netlist network with 68 inputs and 65 outputs.

3.80.58.1. Executing ABC.

3.80.59. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$31075$abc$27555$abc$24039$auto$opt_dff.cc:194:make_patterns_logic$11648, asynchronously reset by !\rst_ni
Extracted 15 gates and 24 wires to a netlist network with 9 inputs and 10 outputs.

3.80.59.1. Executing ABC.

yosys> opt_ffinv

3.81. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt -sat -nosdff

3.82. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.82.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
<suppressed ~61 debug messages>

yosys> opt_merge -nomux

3.82.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
<suppressed ~135 debug messages>
Removed a total of 45 cells.

yosys> opt_muxtree

3.82.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.82.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.82.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_dff -sat -nosdff

3.82.6. Executing OPT_DFF pass (perform DFF optimizations).
Handling never-active EN on $abc$32734$auto$blifparse.cc:362:parse_blif$32754 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$31158$auto$blifparse.cc:362:parse_blif$31159 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$32734$auto$blifparse.cc:362:parse_blif$32753 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$32734$auto$blifparse.cc:362:parse_blif$32752 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$32734$auto$blifparse.cc:362:parse_blif$32751 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$32734$auto$blifparse.cc:362:parse_blif$32750 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$32734$auto$blifparse.cc:362:parse_blif$32749 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$32734$auto$blifparse.cc:362:parse_blif$32748 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$32734$auto$blifparse.cc:362:parse_blif$32747 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$32734$auto$blifparse.cc:362:parse_blif$32746 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$32734$auto$blifparse.cc:362:parse_blif$32745 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$32734$auto$blifparse.cc:362:parse_blif$32744 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$32734$auto$blifparse.cc:362:parse_blif$32743 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$32734$auto$blifparse.cc:362:parse_blif$32742 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$32734$auto$blifparse.cc:362:parse_blif$32741 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$32734$auto$blifparse.cc:362:parse_blif$32740 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$32734$auto$blifparse.cc:362:parse_blif$32739 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$32734$auto$blifparse.cc:362:parse_blif$32738 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$32734$auto$blifparse.cc:362:parse_blif$32737 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$32734$auto$blifparse.cc:362:parse_blif$32736 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Handling never-active EN on $abc$32734$auto$blifparse.cc:362:parse_blif$32735 ($_DFFE_PN0P_) from module adc_ctrl (removing D path).
Setting constant 0-bit at position 0 on $abc$32734$auto$blifparse.cc:362:parse_blif$32735 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$32734$auto$blifparse.cc:362:parse_blif$32736 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$32734$auto$blifparse.cc:362:parse_blif$32737 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$32734$auto$blifparse.cc:362:parse_blif$32738 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$32734$auto$blifparse.cc:362:parse_blif$32739 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$32734$auto$blifparse.cc:362:parse_blif$32740 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$32734$auto$blifparse.cc:362:parse_blif$32741 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$32734$auto$blifparse.cc:362:parse_blif$32742 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$32734$auto$blifparse.cc:362:parse_blif$32743 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$32734$auto$blifparse.cc:362:parse_blif$32744 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$32734$auto$blifparse.cc:362:parse_blif$32745 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$32734$auto$blifparse.cc:362:parse_blif$32746 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$32734$auto$blifparse.cc:362:parse_blif$32747 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$32734$auto$blifparse.cc:362:parse_blif$32748 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$32734$auto$blifparse.cc:362:parse_blif$32749 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$32734$auto$blifparse.cc:362:parse_blif$32750 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$32734$auto$blifparse.cc:362:parse_blif$32751 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$32734$auto$blifparse.cc:362:parse_blif$32752 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$32734$auto$blifparse.cc:362:parse_blif$32753 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$31158$auto$blifparse.cc:362:parse_blif$31159 ($_DLATCH_N_) from module adc_ctrl.
Setting constant 0-bit at position 0 on $abc$32734$auto$blifparse.cc:362:parse_blif$32754 ($_DLATCH_N_) from module adc_ctrl.

yosys> opt_clean

3.82.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 2 unused cells and 18959 unused wires.
<suppressed ~769 debug messages>

yosys> opt_expr

3.82.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.

3.82.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.82.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.82.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.82.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
<suppressed ~42 debug messages>
Removed a total of 14 cells.

yosys> opt_dff -sat -nosdff

3.82.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $abc$34105$auto$blifparse.cc:362:parse_blif$34106 ($_DFFE_PN0P_) from module adc_ctrl.

yosys> opt_clean

3.82.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 0 unused cells and 12 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.82.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
<suppressed ~2 debug messages>

3.82.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.82.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.82.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.82.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_dff -sat -nosdff

3.82.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.82.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 1 unused cells and 3 unused wires.
<suppressed ~2 debug messages>

yosys> opt_expr

3.82.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.

3.82.23. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.82.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.82.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.82.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_dff -sat -nosdff

3.82.27. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.82.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..

yosys> opt_expr

3.82.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.

3.82.30. Finished OPT passes. (There is nothing left to do.)

yosys> bmuxmap

3.83. Executing BMUXMAP pass.

yosys> demuxmap

3.84. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> abc -script /home/users/temp_dir/yosys_bf9Mo3/abc_tmp_1.scr

3.85. Executing ABC pass (technology mapping using ABC).

3.85.1. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Extracted 2215 gates and 2913 wires to a netlist network with 697 inputs and 633 outputs.

3.85.1.1. Executing ABC.
DE:   #PIs = 697  #Luts =  1016  Max Lvl =  11  Avg Lvl =   9.66  [   0.11 sec. at Pass 0]
DE:   #PIs = 697  #Luts =   946  Max Lvl =  11  Avg Lvl =   9.66  [   5.11 sec. at Pass 1]
DE:   #PIs = 697  #Luts =   935  Max Lvl =  10  Avg Lvl =   8.79  [   1.14 sec. at Pass 2]
DE:   #PIs = 697  #Luts =   935  Max Lvl =  10  Avg Lvl =   8.79  [   1.78 sec. at Pass 3]
DE:   #PIs = 697  #Luts =   932  Max Lvl =  11  Avg Lvl =   8.99  [   1.06 sec. at Pass 4]
DE:   #PIs = 697  #Luts =   932  Max Lvl =  11  Avg Lvl =   8.99  [   1.94 sec. at Pass 5]
DE:   #PIs = 697  #Luts =   930  Max Lvl =  11  Avg Lvl =   9.16  [   1.27 sec. at Pass 6]
DE:   #PIs = 697  #Luts =   923  Max Lvl =  12  Avg Lvl =   9.85  [   2.18 sec. at Pass 7]
DE:   #PIs = 697  #Luts =   923  Max Lvl =  12  Avg Lvl =   9.85  [   1.22 sec. at Pass 8]
DE:   #PIs = 697  #Luts =   923  Max Lvl =  12  Avg Lvl =   9.85  [   2.13 sec. at Pass 9]
DE:   #PIs = 697  #Luts =   920  Max Lvl =  11  Avg Lvl =   9.39  [   1.29 sec. at Pass 10]
DE:   #PIs = 697  #Luts =   920  Max Lvl =  11  Avg Lvl =   9.39  [   1.88 sec. at Pass 11]
DE:   #PIs = 697  #Luts =   920  Max Lvl =  11  Avg Lvl =   9.39  [   1.24 sec. at Pass 12]
DE:   #PIs = 697  #Luts =   920  Max Lvl =  11  Avg Lvl =   9.39  [   2.03 sec. at Pass 13]
DE:   #PIs = 697  #Luts =   920  Max Lvl =  11  Avg Lvl =   9.39  [   0.28 sec. at Pass 14]

yosys> opt_expr

3.86. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.

yosys> opt_merge -nomux

3.87. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.88. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.89. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.90. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_share

3.91. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe -nosdff

3.92. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.93. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 0 unused cells and 2932 unused wires.
<suppressed ~134 debug messages>

yosys> opt_expr

3.94. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
MAX OPT ITERATION = 1

yosys> opt_ffinv

3.95. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 1 inverters.

yosys> stat

3.96. Printing statistics.

=== adc_ctrl ===

   Number of wires:               4544
   Number of wire bits:          14966
   Number of public wires:        3074
   Number of public wire bits:   13496
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1629
     $_DFFE_PN0P_                  501
     $_DFF_PN0_                    208
     $_DFF_PN1_                      1
     $lut                          919


yosys> shregmap -minlen 8 -maxlen 20

3.97. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.98. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.99. Printing statistics.

=== adc_ctrl ===

   Number of wires:               4544
   Number of wire bits:          14966
   Number of public wires:        3074
   Number of public wire bits:   13496
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1629
     $_DFFE_PN0P_                  501
     $_DFF_PN0_                    208
     $_DFF_PN1_                      1
     $lut                          919


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.100. Executing TECHMAP pass (map to technology primitives).

3.100.1. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.100.2. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.100.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFFE_PN0P_ for cells of type $_DFFE_PN0P_.
Using template \$_DFF_PN0_ for cells of type $_DFF_PN0_.
Using template \$_DFF_PN1_ for cells of type $_DFF_PN1_.
No more expansions possible.
<suppressed ~1765 debug messages>

yosys> opt_expr -mux_undef

3.101. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
<suppressed ~17231 debug messages>

yosys> simplemap

3.102. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.103. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.

yosys> opt_merge

3.104. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
<suppressed ~9459 debug messages>
Removed a total of 3153 cells.

yosys> opt_dff -nodffe -nosdff

3.105. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.106. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 0 unused cells and 5575 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.107. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.107.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
<suppressed ~305 debug messages>

yosys> opt_merge -nomux

3.107.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.107.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.107.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.107.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.107.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.107.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 0 unused cells and 32 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.107.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.

3.107.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.107.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.107.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.107.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.107.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.107.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..

yosys> opt_expr

3.107.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.

3.107.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /home/users/temp_dir/yosys_bf9Mo3/abc_tmp_2.scr

3.108. Executing ABC pass (technology mapping using ABC).

3.108.1. Extracting gate netlist of module `\adc_ctrl' to `<abc-temp-dir>/input.blif'..
Extracted 2824 gates and 3522 wires to a netlist network with 696 inputs and 632 outputs.

3.108.1.1. Executing ABC.
DE:   #PIs = 696  #Luts =   929  Max Lvl =  11  Avg Lvl =   9.66  [   0.10 sec. at Pass 0]
DE:   #PIs = 696  #Luts =   916  Max Lvl =   8  Avg Lvl =   7.25  [   5.38 sec. at Pass 1]
DE:   #PIs = 696  #Luts =   914  Max Lvl =   9  Avg Lvl =   7.39  [   1.20 sec. at Pass 2]
DE:   #PIs = 696  #Luts =   910  Max Lvl =  12  Avg Lvl =   9.28  [   2.05 sec. at Pass 3]
DE:   #PIs = 696  #Luts =   909  Max Lvl =  10  Avg Lvl =   8.21  [   1.32 sec. at Pass 4]
DE:   #PIs = 696  #Luts =   908  Max Lvl =  10  Avg Lvl =   8.23  [   2.17 sec. at Pass 5]
DE:   #PIs = 696  #Luts =   908  Max Lvl =  10  Avg Lvl =   8.23  [   1.73 sec. at Pass 6]
DE:   #PIs = 696  #Luts =   901  Max Lvl =  11  Avg Lvl =   9.10  [   2.89 sec. at Pass 7]
DE:   #PIs = 696  #Luts =   901  Max Lvl =  11  Avg Lvl =   9.10  [   1.58 sec. at Pass 8]
DE:   #PIs = 696  #Luts =   901  Max Lvl =  11  Avg Lvl =   9.10  [   3.22 sec. at Pass 9]
DE:   #PIs = 696  #Luts =   901  Max Lvl =  11  Avg Lvl =   9.10  [   1.98 sec. at Pass 10]
DE:   #PIs = 696  #Luts =   901  Max Lvl =  11  Avg Lvl =   9.10  [   0.28 sec. at Pass 11]

yosys> opt_expr

3.109. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.

yosys> opt_merge -nomux

3.110. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.111. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \adc_ctrl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.112. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \adc_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

3.113. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\adc_ctrl'.
Removed a total of 0 cells.

yosys> opt_share

3.114. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe -nosdff

3.115. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.116. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 0 unused cells and 3027 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.117. Executing OPT_EXPR pass (perform const folding).
Optimizing module adc_ctrl.
MAX OPT ITERATION = 1

yosys> hierarchy -check

3.118. Executing HIERARCHY pass (managing design hierarchy).

3.118.1. Analyzing design hierarchy..
Top module:  \adc_ctrl

3.118.2. Analyzing design hierarchy..
Top module:  \adc_ctrl
Removed 0 unused modules.

yosys> stat

3.119. Printing statistics.

=== adc_ctrl ===

   Number of wires:               4525
   Number of wire bits:          14947
   Number of public wires:        3074
   Number of public wire bits:   13496
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1611
     $lut                          901
     dffsre                        710


yosys> opt_clean -purge

3.120. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \adc_ctrl..
Removed 0 unused cells and 2952 unused wires.
<suppressed ~2952 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.121. Executing Verilog backend.
Dumping module `\adc_ctrl'.

Warnings: 124 unique messages, 124 total
End of script. Logfile hash: a6e485c6c8, CPU: user 25.39s system 1.24s, MEM: 83.06 MB peak
Yosys 0.18+10 (git sha1 7a7a25778, gcc 9.1.0 -fPIC -Os)
Time spent: 95% 6x abc (424 sec), 1% 32x opt_dff (6 sec), ...
real 95.45
user 418.02
sys 28.16
